{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r4 = net minidev asm bean access config class mapper", "entermonitor $ r4", "label $ r5 = net minidev asm bean access config class mapper", "$ r6 = $ r5 get r0", "r11 = java util link hash set $ r6", "if r11 ! = null goto label2", "$ r7 = new java util link hash set", "specialinvoke $ r7 < init >", "r11 = $ r7", "$ r8 = net minidev asm bean access config class mapper", "$ r8 put r0 $ r7", "label r11 add r1", "exitmonitor $ r4", "label goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = null", "label r12 = javax activation activation data flavor r0", "$ r3 = r12 mime object", "if $ r3 ! = null goto label2", "r10 = new javax activation mime type", "r13 = javax activation activation data flavor r0", "$ r7 = r13 mime type", "specialinvoke r10 < init > $ r7", "r14 = javax activation activation data flavor r0", "r14 mime object = r10", "label r11 = new javax activation mime type", "specialinvoke r11 < init > r1", "r9 = r11", "label goto label5", "label r15 = javax activation activation data flavor r0", "$ r5 = r15 mime object", "$ z0 = $ r5 match r9", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = javax activation command info r0", "$ r1 = r2 verb", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r5 = javax activation command map r0", "$ r4 = r5 get command r1 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = javax activation file data source r0", "$ r1 = r2 _file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax activation mime type r0", "$ r1 = r2 sub type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new javax activation mime type", "specialinvoke r3 < init > r1", "r4 = javax activation mime type r0", "$ z0 = r4 match r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = javax activation mime type parameter list r0", "$ r1 = r2 parameter", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = javax activation mime type parameter list r0", "$ r1 = r3 parameter", "$ r2 = $ r1 key", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r8 = null", "label r9 = javax activation u r l data source r0", "$ r2 = r9 url_conn", "if $ r2 ! = null goto label2", "r10 = javax activation u r l data source r0", "$ r5 = r10 url", "$ r6 = $ r5 open connection", "r11 = javax activation u r l data source r0", "r11 url_conn = $ r6", "label goto label4", "label r12 = javax activation u r l data source r0", "$ r3 = r12 url_conn", "if $ r3 == null goto label5", "r13 = javax activation u r l data source r0", "$ r4 = r13 url_conn", "r8 = $ r4 get content type", "label if r8 ! = null goto label6", "r8 = \\ `` application octet-stream\\ ``", "label return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r3 = javax activation u r l data source r0", "$ r1 = r3 url", "$ r2 = $ r1 open stream", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = io agroal api configuration supplier agroal connection pool configuration supplier r0", "specialinvoke r1 check lock", "r2 = io agroal api configuration supplier agroal connection pool configuration supplier r0", "r2 initial size = i0", "r3 = io agroal api configuration supplier agroal connection pool configuration supplier r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = io agroal api configuration supplier agroal data source configuration supplier r0", "$ r1 = r2 connection pool configuration supplier", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = org apache tool ant ant class loader r0", "$ r4 = r11 project", "if $ r4 == null goto label1", "r12 = org apache tool ant ant class loader r0", "$ r5 = r12 project", "$ r8 = $ r5 resolve file r1", "goto label2", "label r13 = org apache tool ant ant class loader r0", "r13 add path file $ r8", "label goto label5", "label return", "if $ r4 == null goto label1", "label r9 = new java io file", "$ r8 = r9", "specialinvoke r9 < init > r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string buffer", "specialinvoke r7 < init >", "$ r3 = r7 append \\ `` force loading \\ ``", "$ r4 = $ r3 append r1", "$ r5 = $ r4 to string", "r8 = org apache tool ant ant class loader r0", "r8 log $ r5 4", "r9 = org apache tool ant ant class loader r0", "r6 = r9 find loaded class r1", "if r6 ! = null goto label1", "r10 = org apache tool ant ant class loader r0", "r6 = r10 find class r1", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string buffer", "specialinvoke r7 < init >", "$ r3 = r7 append \\ `` force system load \\ ``", "$ r4 = $ r3 append r1", "$ r5 = $ r4 to string", "r8 = org apache tool ant ant class loader r0", "r8 log $ r5 4", "r9 = org apache tool ant ant class loader r0", "r6 = r9 find loaded class r1", "if r6 ! = null goto label1", "r10 = org apache tool ant ant class loader r0", "r6 = specialinvoke r10 find base class r1", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache tool ant ant type definition r0", "r8 clazz = r1", "if r1 ! = null goto label1", "return", "if r1 ! = null goto label1", "label r9 = org apache tool ant ant type definition r0", "$ r2 = r9 class loader", "if $ r2 ! = null goto label2", "$ r6 = r1 get class loader", "goto label3", "label r11 = org apache tool ant ant type definition r0", "r11 class loader = $ r6", "r12 = org apache tool ant ant type definition r0", "$ r3 = r12 class name", "if $ r3 ! = null goto label4", "$ r7 = r1 get name", "goto label5", "label r14 = org apache tool ant ant type definition r0", "r14 class name = $ r7", "if $ r3 ! = null goto label4", "label r13 = org apache tool ant ant type definition r0", "$ r7 = r13 class name", "if $ r2 ! = null goto label2", "label r10 = org apache tool ant ant type definition r0", "$ r6 = r10 class loader"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant build event r0", "$ r1 = r2 exception", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache tool ant component helper r0", "r2 = r5 get definition r1", "if r2 ! = null goto label1", "$ r4 = null", "goto label2", "label return $ r4", "if r2 ! = null goto label1", "label r6 = org apache tool ant component helper r0", "$ r3 = r6 project", "$ r4 = r2 create $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r24 = org apache tool ant component helper r0", "$ r8 = r24 task class definition", "entermonitor $ r8", "label r25 = org apache tool ant component helper r0", "$ r9 = r25 ant type table", "entermonitor $ r9", "label r26 = org apache tool ant component helper r0", "$ z0 = r26 rebuild task class definition", "if $ z0 == 0 goto label09", "r27 = org apache tool ant component helper r0", "$ r11 = r27 task class definition", "$ r11 clear", "r28 = org apache tool ant component helper r0", "$ r12 = r28 ant type table", "$ r13 = $ r12 key set", "r3 = $ r13 iterator", "label $ z2 = r3 have next", "if $ z2 == 0 goto label08", "$ r14 = r3 next", "r4 = java lang string $ r14", "r29 = org apache tool ant component helper r0", "$ r15 = r29 ant type table", "r5 = $ r15 get expose class r4", "if r5 ! = null goto label04", "goto label03", "if r5 ! = null goto label04", "label $ r16 = org apache tool ant component helper class $ org $ apache $ tool $ ant $ task", "if $ r16 ! = null goto label05", "$ r23 = org apache tool ant component helper class $ \\ `` org apache tool ant task\\ ``", "org apache tool ant component helper class $ org $ apache $ tool $ ant $ task = $ r23", "goto label06", "label $ z1 = $ r23 be assignable from r5", "if $ z1 == 0 goto label07", "r30 = org apache tool ant component helper r0", "$ r18 = r30 task class definition", "r31 = org apache tool ant component helper r0", "$ r17 = r31 ant type table", "$ r19 = $ r17 get type class r4", "$ r18 put r4 $ r19", "label goto label03", "if $ r16 ! = null goto label05", "label $ r23 = org apache tool ant component helper class $ org $ apache $ tool $ ant $ task", "if $ z2 == 0 goto label08", "label r32 = org apache tool ant component helper r0", "r32 rebuild task class definition = 0", "label exitmonitor $ r9", "label goto label13", "label exitmonitor $ r8", "label goto label17", "label r33 = org apache tool ant component helper r0", "$ r10 = r33 task class definition", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new java io print stream", "specialinvoke r3 < init > r1 1", "r4 = org apache tool ant default logger r0", "r4 out = r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get exception", "r29 = new java lang string buffer", "specialinvoke r29 < init >", "if r2 ! = null goto label1", "$ r23 = org apache tool ant util string utils line_sep", "r29 append $ r23", "r30 = org apache tool ant default logger r0", "$ r25 = r30 get build successful message", "r29 append $ r25", "goto label4", "label $ r27 = org apache tool ant util string utils line_sep", "r29 append $ r27", "r29 append \\ `` total time \\ ``", "$ l1 = java lang system current time millis", "r33 = org apache tool ant default logger r0", "$ l2 = r33 start time", "$ l3 = $ l1 - $ l2", "$ r28 = org apache tool ant default logger format time $ l3", "r29 append $ r28", "r4 = r29 to string", "if r2 ! = null goto label5", "r34 = org apache tool ant default logger r0", "$ r18 = r34 out", "r35 = org apache tool ant default logger r0", "r35 print message r4 $ r18 3", "goto label6", "label r38 = org apache tool ant default logger r0", "r38 log r4", "return", "if r2 ! = null goto label5", "label r36 = org apache tool ant default logger r0", "$ r17 = r36 err", "r37 = org apache tool ant default logger r0", "r37 print message r4 $ r17 0", "if r2 ! = null goto label1", "label $ r6 = org apache tool ant util string utils line_sep", "r29 append $ r6", "r31 = org apache tool ant default logger r0", "$ r8 = r31 get build failed message", "r29 append $ r8", "$ r10 = org apache tool ant util string utils line_sep", "r29 append $ r10", "r32 = org apache tool ant default logger r0", "$ i0 = r32 msg output level", "if 3 < = $ i0 goto label2", "$ z0 = r2 instanceof org apache tool ant build exception", "if $ z0 ! = 0 goto label3", "label $ r12 = org apache tool ant util string utils get stack trace r2", "r29 append $ r12", "if $ z0 ! = 0 goto label3", "label $ r19 = r2 to string", "$ r20 = r29 append $ r19", "$ r21 = org apache tool ant default logger l sep", "$ r20 append $ r21"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], []]}
{"nodes": ["r0 = java lang system get property \\ `` ant home\\ ``", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r2 = new java io file", "specialinvoke $ r2 < init > r0 \\ `` lib\\ ``", "$ r3 = org apache tool ant diagnostics list jar file $ r2", "return $ r3"], "adj": [[1], [2], [], [4], [5], [6], [7], []]}
{"nodes": ["$ r1 = org apache tool ant directory scanner default exclude", "$ r0 = org apache tool ant directory scanner default exclude", "$ i0 = $ r0 size", "$ r2 = newarray java lang string [ $ i0 ]", "$ r3 = $ r1 to array $ r2", "$ r4 = java lang string [ ] $ r3", "$ r5 = java lang string [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant directory scanner r0", "$ z0 = r1 be case sensitive", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = org apache tool ant directory scanner r0", "r6 exclude = null", "goto label3", "label return", "if r1 ! = null goto label1", "label $ i0 = lengthof r1", "$ r2 = newarray java lang string [ $ i0 ]", "r7 = org apache tool ant directory scanner r0", "r7 exclude = $ r2", "i2 = 0", "label $ i1 = lengthof r1", "if i2 > = $ i1 goto label3", "r8 = org apache tool ant directory scanner r0", "$ r4 = r8 exclude", "$ r3 = r1 [ i2 ]", "$ r5 = org apache tool ant directory scanner normalize pattern $ r3", "$ r4 [ i2 ] = $ r5", "i2 = i2 + 1", "goto label2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant directory scanner r0", "$ z0 = r1 everything include", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i1 = 0", "label r9 = org apache tool ant directory scanner r0", "$ r2 = r9 include", "$ i0 = lengthof $ r2", "if i1 > = $ i0 goto label3", "r10 = org apache tool ant directory scanner r0", "$ r3 = r10 include", "$ r4 = $ r3 [ i1 ]", "r11 = org apache tool ant directory scanner r0", "$ z0 = r11 be case sensitive", "$ z1 = org apache tool ant directory scanner match pattern start $ r4 r1 $ z0", "if $ z1 == 0 goto label2", "r12 = org apache tool ant directory scanner r0", "$ r5 = r12 include", "$ r6 = $ r5 [ i1 ]", "r13 = org apache tool ant directory scanner r0", "$ z2 = specialinvoke r13 be more powerful than excludes r1 $ r6", "if $ z2 == 0 goto label2", "r14 = org apache tool ant directory scanner r0", "$ r7 = r14 include", "$ r8 = $ r7 [ i1 ]", "r15 = org apache tool ant directory scanner r0", "$ z3 = specialinvoke r15 be deep $ r8 r1", "if $ z3 == 0 goto label2", "return 1", "if $ z3 == 0 goto label2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [], [31], []]}
{"nodes": ["r0 = @ this", "r4 = org apache tool ant directory scanner r0", "r4 slow scan", "r5 = org apache tool ant directory scanner r0", "$ r2 = r5 file not include", "$ i0 = $ r2 size", "r1 = newarray java lang string [ $ i0 ]", "r6 = org apache tool ant directory scanner r0", "$ r3 = r6 file not include", "$ r3 copy into r1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant dispatch dispatch task r0", "r2 action = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tool ant filter base filter reader r0", "$ r1 = r3 in", "$ r2 = org apache tool ant util file utils read fully $ r1 8192", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant filter base param filter reader r0", "r2 parameter = r1", "r3 = org apache tool ant filter base param filter reader r0", "r3 set initialized 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new org apache tool ant filter expand property", "specialinvoke r5 < init > r1", "r6 = org apache tool ant filter expand property r0", "$ r4 = r6 get project", "r5 set project $ r4", "r7 = java io reader r5", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant filter fix cr lf filter r0", "$ i0 = r1 tab length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new org apache tool ant filter prefix line", "specialinvoke r5 < init > r1", "r6 = org apache tool ant filter prefix line r0", "$ r4 = specialinvoke r6 get prefix", "r5 set prefix $ r4", "r5 set initialized 1", "r7 = java io reader r5", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org apache tool ant filter strip java comment", "specialinvoke r4 < init > r1", "r5 = java io reader r4", "return r5"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant filter token filter r0", "$ r2 = r3 filter", "$ r2 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = org apache tool ant helper ant x m l context r0", "$ r1 = r4 w stack", "$ i0 = $ r1 size", "if $ i0 < = 0 goto label1", "r5 = org apache tool ant helper ant x m l context r0", "$ r3 = r5 w stack", "r6 = org apache tool ant helper ant x m l context r0", "$ r2 = r6 w stack", "$ i1 = $ r2 size", "$ i2 = $ i1 - 1", "$ r3 remove element at $ i2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant helper ant x m l context r0", "$ r1 = r2 implicit target", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant helper ant x m l context r0", "$ r1 = r2 target vector", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get prompt", "r3 = r1 get default value", "$ z0 = r1 instanceof org apache tool ant input multiple choice input request", "if $ z0 == 0 goto label6", "$ r13 = new java lang string buffer", "specialinvoke $ r13 < init > r2", "$ r13 append \\ `` \\ ``", "$ r15 = org apache tool ant input multiple choice input request r1", "$ r16 = $ r15 get choice", "r5 = $ r16 element", "z4 = 1", "label $ z1 = r5 have more element", "if $ z1 == 0 goto label5", "if z4 ! = 0 goto label2", "$ r13 append \\", "label $ r19 = r5 next element", "r6 = java lang string $ r19", "$ z2 = r6 equal r3", "if $ z2 == 0 goto label3", "$ r13 append 91", "label $ r13 append r6", "$ z3 = r6 equal r3", "if $ z3 == 0 goto label4", "$ r13 append 93", "label z4 = 0", "goto label1", "if $ z1 == 0 goto label5", "label $ r13 append \\ `` \\ ``", "$ r18 = $ r13 to string", "return $ r18", "if $ z0 == 0 goto label6", "label if r3 == null goto label7", "$ r7 = new java lang string buffer", "specialinvoke $ r7 < init >", "$ r8 = $ r7 append r2", "$ r9 = $ r8 append \\ `` [ \\ ``", "$ r10 = $ r9 append r3", "$ r11 = $ r10 append \\ `` ] \\ ``", "$ r12 = $ r11 to string", "return $ r12", "label if r3 == null goto label7", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], []]}
{"nodes": ["r0 = @ this", "$ r4 = new java util date", "$ l0 = java lang system current time millis", "specialinvoke $ r4 < init > $ l0", "r2 = java text date format get date time instance 3 3", "r3 = r2 format $ r4", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant project r0", "r2 init property", "r3 = org apache tool ant project r0", "$ r1 = org apache tool ant component helper get component helper r3", "$ r1 init default definition", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant project r0", "r2 log r1 2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "r3 = org apache tool ant project r0", "r4 = org apache tool ant project r0", "r3 fire message log r4 r1 r2 i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant project r0", "r2 = org apache tool ant property helper get property helper r4", "$ r3 = r2 replace property null r1 null", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new java io file", "specialinvoke r3 < init > r1", "r4 = org apache tool ant project r0", "r4 set base dir r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ r3 = java lang thread current thread", "r4 = org apache tool ant project r0", "r2 = r4 get thread task $ r3", "if r2 ! = null goto label1", "r5 = org apache tool ant project r0", "$ i3 = r5 default input r1 i0 i1", "return $ i3", "if r2 ! = null goto label1", "label $ i2 = r2 handle input r1 i0 i1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "z1 = @ parameter3", "$ r3 = org apache tool ant project file_utils", "if z0 == 0 goto label1", "r7 = org apache tool ant project r0", "$ r6 = r7 global filter", "goto label2", "label $ r3 copy file r1 r2 $ r6 z1", "return", "if z0 == 0 goto label1", "label $ r6 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant project r0", "$ r1 = r2 reference", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 == null goto label1", "r13 = org apache tool ant project r0", "$ r8 = r13 thread task", "$ r8 put r1 r2", "r14 = org apache tool ant project r0", "$ r10 = r14 thread group task", "$ r11 = r1 get thread group", "$ r10 put $ r11 r2", "goto label2", "label return", "if r2 == null goto label1", "label r15 = org apache tool ant project r0", "$ r3 = r15 thread task", "$ r3 remove r1", "r16 = org apache tool ant project r0", "$ r5 = r16 thread group task", "$ r6 = r1 get thread group", "$ r5 remove $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant project component r0", "r2 project = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant project component r0", "$ r1 = r2 project", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant project helper r0", "$ r1 = r2 import stack", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = org apache tool ant property helper get property helper r0", "$ r4 = r3 replace property null r1 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 ! = null goto label1", "return null", "if r2 ! = null goto label1", "label r6 = org apache tool ant property helper r0", "r3 = r6 get property hook r1 r2 1", "if r3 == null goto label2", "return r3", "if r3 == null goto label2", "label r7 = org apache tool ant property helper r0", "$ r4 = r7 user property", "$ r5 = $ r4 get r2", "return $ r5"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache tool ant runtime configurable r0", "$ r2 = r7 child", "if $ r2 ! = null goto label1", "r6 = new java util array list", "$ r5 = r6", "specialinvoke r6 < init >", "goto label2", "label r9 = org apache tool ant runtime configurable r0", "r9 child = $ r5", "r10 = org apache tool ant runtime configurable r0", "$ r3 = r10 child", "$ r3 add r1", "return", "if $ r2 ! = null goto label1", "label r8 = org apache tool ant runtime configurable r0", "$ r5 = r8 child"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant target r0", "$ r2 = r3 child", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r2 = \\ `` \\ ``", "r4 = org apache tool ant target r0", "$ r1 = r4 if condition", "$ z0 = $ r2 equal $ r1", "if $ z0 == 0 goto label1", "$ r3 = null", "goto label2", "label return $ r3", "if $ z0 == 0 goto label1", "label r5 = org apache tool ant target r0", "$ r3 = r5 if condition"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant target r0", "$ r1 = r2 description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant task adapter r0", "$ r1 = r2 proxy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache tool ant taskdefs abstract cvs task r0", "r1 port = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs abstract cvs task r0", "$ r1 = r2 pas file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs abstract cvs task r0", "$ r1 = r2 d", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs abstract cvs task r0", "r2 cv package = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 equal \\ `` \\ ``", "if $ z0 == 0 goto label1", "r4 = new org apache tool ant build exception", "specialinvoke r4 < init > \\ `` target attribute must not be empty\\ ``", "r5 = java lang throwable r4", "throw r5", "if $ z0 == 0 goto label1", "label r6 = org apache tool ant taskdefs ant r0", "$ r2 = r6 target", "$ r2 add r1", "r7 = org apache tool ant taskdefs ant r0", "r7 target attribute set = 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs ant r0", "$ r2 = r3 property set", "$ r2 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r7 = org apache tool ant taskdefs available r0", "$ r1 = r7 filepath", "if $ r1 ! = null goto label1", "r6 = new org apache tool ant type path", "r8 = org apache tool ant taskdefs available r0", "$ r5 = r8 get project", "specialinvoke r6 < init > $ r5", "r9 = org apache tool ant taskdefs available r0", "r9 filepath = r6", "label r10 = org apache tool ant taskdefs available r0", "$ r2 = r10 filepath", "$ r3 = $ r2 create path", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache tool ant taskdefs available r0", "r6 file = r1", "$ r2 = org apache tool ant taskdefs available file_utils", "r7 = org apache tool ant taskdefs available r0", "$ r3 = r7 get project", "$ r4 = $ r3 get base dir", "$ r5 = $ r2 remove lead path $ r4 r1", "r8 = org apache tool ant taskdefs available r0", "r8 filename = $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get format", "r3 = org apache tool ant taskdefs checksum r0", "r3 format = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r9 = new org apache tool ant build exception", "r8 = new java lang string buffer", "specialinvoke r8 < init >", "r10 = org apache tool ant taskdefs chmod r0", "$ r3 = r10 get task type", "$ r4 = r8 append $ r3", "$ r5 = $ r4 append \\ `` doesn\\'t support the skipemptyfileset attribute\\ ``", "$ r6 = $ r5 to string", "r11 = org apache tool ant taskdefs chmod r0", "$ r7 = r11 get location", "specialinvoke r9 < init > $ r6 $ r7", "r12 = java lang throwable r9", "throw r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "$ r2 = \\ `` javac1 2\\ ``", "r10 = org apache tool ant taskdefs compiler default compiler adapter r0", "$ r1 = r10 attribute", "$ r3 = $ r1 get compiler version", "$ z0 = $ r2 equal $ r3", "if $ z0 ! = 0 goto label2", "$ r5 = \\ `` classic\\ ``", "r11 = org apache tool ant taskdefs compiler default compiler adapter r0", "$ r4 = r11 attribute", "$ r6 = $ r4 get compiler version", "$ z1 = $ r5 equal $ r6", "if $ z1 == 0 goto label1", "$ z4 = org apache tool ant util java env utils be java version \\ `` 1 2\\ ``", "if $ z4 ! = 0 goto label2", "label $ r8 = \\ `` ext javac\\ ``", "r12 = org apache tool ant taskdefs compiler default compiler adapter r0", "$ r7 = r12 attribute", "$ r9 = $ r7 get compiler version", "$ z2 = $ r8 equal $ r9", "if $ z2 == 0 goto label3", "$ z3 = org apache tool ant util java env utils be java version \\ `` 1 2\\ ``", "if $ z3 == 0 goto label3", "label $ z5 = 1", "goto label4", "label return $ z5", "if $ z3 == 0 goto label3", "label $ z5 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ this", "z0 = 0", "r7 = org apache tool ant taskdefs compiler gcj r0", "$ r2 = r7 get javac", "r1 = $ r2 get current compiler args", "i2 = 0", "label if z0 ! = 0 goto label4", "$ i0 = lengthof r1", "if i2 > = $ i0 goto label4", "i3 = 0", "label if z0 ! = 0 goto label3", "$ r3 = org apache tool ant taskdefs compiler gcj conflict_with_dash_c", "$ i1 = lengthof $ r3", "if i3 > = $ i1 goto label3", "$ r6 = r1 [ i2 ]", "$ r4 = org apache tool ant taskdefs compiler gcj conflict_with_dash_c", "$ r5 = $ r4 [ i3 ]", "z0 = $ r6 start with $ r5", "i3 = i3 + 1", "goto label2", "if i3 > = $ i1 goto label3", "label i2 = i2 + 1", "goto label1", "if i2 > = $ i0 goto label4", "label return z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs concat r0", "r2 destination file = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs condition condition base r0", "$ r2 = r3 condition", "$ r2 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs condition have free space r0", "$ r1 = r2 partition", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs condition have method r0", "r1 ignore system class = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util locale u", "$ r3 = r1 to low case $ r2", "r4 = org apache tool ant taskdefs condition o r0", "r4 name = $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs condition parser support r0", "r2 property = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r21 = org apache tool ant taskdefs condition parser support r0", "r1 = specialinvoke r21 get reader", "r22 = org apache tool ant taskdefs condition parser support r0", "$ r2 = r22 value", "if $ r2 ! = null goto label1", "r23 = org apache tool ant taskdefs condition parser support r0", "r23 value = \\ `` true\\ ``", "label r24 = org apache tool ant taskdefs condition parser support r0", "$ r3 = r24 value", "z0 = org apache tool ant project to boolean $ r3", "label r25 = org apache tool ant taskdefs condition parser support r0", "$ r4 = r25 feature", "r1 set feature $ r4 z0", "label goto label6", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs copy r0", "r2 d file = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = new org apache tool ant type filter set", "specialinvoke r4 < init >", "r5 = org apache tool ant taskdefs copy r0", "$ r3 = r5 filter set", "$ r3 add element r4", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r9 = org apache tool ant taskdefs copy r0", "$ r1 = r9 mapper element", "if $ r1 == null goto label1", "r7 = new org apache tool ant build exception", "r10 = org apache tool ant taskdefs copy r0", "$ r6 = r10 get location", "specialinvoke r7 < init > \\ `` can not define more than one mapper\\", "r11 = java lang throwable r7", "throw r11", "if $ r1 == null goto label1", "label r8 = new org apache tool ant type mapper", "r12 = org apache tool ant taskdefs copy r0", "$ r3 = r12 get project", "specialinvoke r8 < init > $ r3", "r13 = org apache tool ant taskdefs copy r0", "r13 mapper element = r8", "r14 = org apache tool ant taskdefs copy r0", "$ r4 = r14 mapper element", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs copy r0", "$ r1 = r2 input encode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs copydir r0", "r2 d dir = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs copy path r0", "r2 d dir = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r6 = org apache tool ant taskdefs copy path r0", "$ r1 = r6 path", "if $ r1 ! = null goto label1", "r5 = new org apache tool ant type path", "r7 = org apache tool ant taskdefs copy path r0", "$ r4 = r7 get project", "specialinvoke r5 < init > $ r4", "r8 = org apache tool ant taskdefs copy path r0", "r8 path = r5", "label r9 = org apache tool ant taskdefs copy path r0", "$ r2 = r9 path", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs cvslib c v s entry r0", "$ r1 = r2 file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs cvslib cvs user r0", "$ r1 = r2 user i d", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs delete r0", "$ r2 = r3 filesets", "$ r2 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs dirname r0", "r2 property = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs email email task r0", "r2 message mime type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = org apache tool ant taskdefs email email task r0", "$ r1 = r7 attachment", "if $ r1 ! = null goto label1", "r6 = new org apache tool ant type path", "r8 = org apache tool ant taskdefs email email task r0", "$ r5 = r8 get project", "specialinvoke r6 < init > $ r5", "r9 = org apache tool ant taskdefs email email task r0", "r9 attachment = r6", "label r10 = org apache tool ant taskdefs email email task r0", "$ r2 = r10 attachment", "$ r3 = $ r2 create path", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs email email task r0", "r1 include file name = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs email mailer r0", "r2 subject = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs email message r0", "$ r1 = r2 charset", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant taskdefs exec r0", "$ r2 = r4 get project", "$ r3 = $ r2 resolve file r1", "r5 = org apache tool ant taskdefs exec r0", "r5 dir = $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs exec task r0", "r2 o = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs exec task r0", "$ r2 = r3 redirector", "$ r2 set output property r1", "r4 = org apache tool ant taskdefs exec task r0", "r4 incompatible with spawn = 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs exec task r0", "r1 fail on error = z0", "r2 = org apache tool ant taskdefs exec task r0", "$ z1 = r2 incompatible with spawn", "$ z2 = $ z1 | z0", "r3 = org apache tool ant taskdefs exec task r0", "r3 incompatible with spawn = $ z2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tool ant taskdefs execute r0", "$ r1 = r3 watchdog", "if $ r1 == null goto label1", "r4 = org apache tool ant taskdefs execute r0", "$ r2 = r4 watchdog", "$ z0 = $ r2 kill process", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get value", "r3 = org apache tool ant taskdefs execute on r0", "r3 type = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs execute on r0", "r1 skip empty = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs execute on r0", "r1 forward slash = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs expand r0", "r1 overwrite = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs generate key r0", "r2 keypass = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label $ i0 = java lang integer parse int r1", "r6 = org apache tool ant taskdefs generate key r0", "r6 keysize = $ i0", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs get r0", "r1 use timestamp = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache tool ant taskdefs jar r0", "r7 fileset manifest config = r1", "$ r2 = \\ `` merge\\ ``", "$ r3 = r1 get value", "$ z0 = $ r2 equal $ r3", "r8 = org apache tool ant taskdefs jar r0", "r8 merge manifest main = $ z0", "r9 = org apache tool ant taskdefs jar r0", "$ r4 = r9 fileset manifest config", "if $ r4 == null goto label1", "r10 = org apache tool ant taskdefs jar r0", "$ r5 = r10 fileset manifest config", "$ r6 = $ r5 get value", "$ z1 = $ r6 equal \\ `` skip\\ ``", "if $ z1 ! = 0 goto label1", "r11 = org apache tool ant taskdefs jar r0", "r11 double file pas = 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r5 = org apache tool ant taskdefs java r0", "$ r1 = r5 get command line", "r6 = org apache tool ant taskdefs java r0", "$ r2 = r6 get project", "$ r3 = $ r1 create classpath $ r2", "$ r4 = $ r3 create path", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r6 = org apache tool ant taskdefs java r0", "$ r1 = r6 perm", "if $ r1 ! = null goto label1", "r5 = new org apache tool ant type permission", "$ r4 = r5", "specialinvoke r5 < init >", "goto label2", "label r8 = org apache tool ant taskdefs java r0", "r8 perm = $ r4", "r9 = org apache tool ant taskdefs java r0", "$ r2 = r9 perm", "return $ r2", "if $ r1 ! = null goto label1", "label r7 = org apache tool ant taskdefs java r0", "$ r4 = r7 perm"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache tool ant taskdefs java r0", "$ r2 = r8 get command line", "$ r3 = $ r2 get classname", "if $ r3 == null goto label1", "r7 = new org apache tool ant build exception", "specialinvoke r7 < init > \\ `` can not use \\'jar\\ ' and \\'classname\\ ' attribute in same command \\ ``", "r9 = java lang throwable r7", "throw r9", "if $ r3 == null goto label1", "label r10 = org apache tool ant taskdefs java r0", "$ r4 = r10 get command line", "$ r5 = r1 get absolute path", "$ r4 set jar $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant taskdefs java r0", "r4 log \\ `` the jvmargs attribute be deprecate please use nest jvmarg element \\", "r5 = org apache tool ant taskdefs java r0", "$ r2 = r5 get command line", "$ r3 = $ r2 create vm argument", "$ r3 set line r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs java r0", "r2 error = r1", "r3 = org apache tool ant taskdefs java r0", "r3 incompatible with spawn = 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = new org apache tool ant type commandline java", "specialinvoke r8 < init >", "r8 set classname r1", "i1 = 0", "label $ i0 = r2 size", "if i1 > = $ i0 goto label2", "$ r5 = r8 create argument", "$ r6 = r2 element at i1", "$ r7 = java lang string $ r6", "$ r5 set value $ r7", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label r9 = org apache tool ant taskdefs java r0", "specialinvoke r9 run r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tool ant taskdefs java r0", "$ r1 = r3 get command line", "$ r2 = $ r1 get system property", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = org apache tool ant taskdefs javac r0", "$ r1 = r7 compile sourcepath", "if $ r1 ! = null goto label1", "r6 = new org apache tool ant type path", "r8 = org apache tool ant taskdefs javac r0", "$ r5 = r8 get project", "specialinvoke r6 < init > $ r5", "r9 = org apache tool ant taskdefs javac r0", "r9 compile sourcepath = r6", "label r10 = org apache tool ant taskdefs javac r0", "$ r2 = r10 compile sourcepath", "$ r3 = $ r2 create path", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant taskdefs javac r0", "$ r2 = r4 bootclasspath", "if $ r2 ! = null goto label1", "r5 = org apache tool ant taskdefs javac r0", "r5 bootclasspath = r1", "goto label2", "label return", "if $ r2 ! = null goto label1", "label r6 = org apache tool ant taskdefs javac r0", "$ r3 = r6 bootclasspath", "$ r3 append r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs javac r0", "r1 include java runtime = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs javac r0", "r2 tmp dir = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r14 = new org apache tool ant util glob pattern mapper", "specialinvoke r14 < init >", "r14 set from \\ `` * java\\ ``", "r14 set to \\ `` * class\\ ``", "r15 = new org apache tool ant util source file scanner", "r16 = org apache tool ant task r0", "specialinvoke r15 < init > r16", "r17 = org apache tool ant util file name mapper r14", "r6 = r15 restrict a file r3 r1 r2 r17", "$ i0 = lengthof r6", "if $ i0 < = 0 goto label1", "r18 = org apache tool ant taskdefs javac r0", "$ r10 = r18 compile list", "$ i2 = lengthof $ r10", "$ i1 = lengthof r6", "$ i3 = $ i2 + $ i1", "r7 = newarray java io file [ $ i3 ]", "r19 = org apache tool ant taskdefs javac r0", "$ r12 = r19 compile list", "r20 = org apache tool ant taskdefs javac r0", "$ r11 = r20 compile list", "$ i4 = lengthof $ r11", "java lang system arraycopy $ r12 0 r7 0 $ i4", "r21 = org apache tool ant taskdefs javac r0", "$ r13 = r21 compile list", "$ i6 = lengthof $ r13", "$ i5 = lengthof r6", "java lang system arraycopy r6 0 r7 $ i6 $ i5", "r22 = org apache tool ant taskdefs javac r0", "r22 compile list = r7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs javac r0", "r1 = r2 get compiler version", "r3 = org apache tool ant taskdefs javac r0", "$ z0 = r3 fork", "if $ z0 == 0 goto label2", "r4 = org apache tool ant taskdefs javac r0", "$ z1 = r4 be jdk compiler r1", "if $ z1 == 0 goto label1", "r1 = \\ `` ext javac\\ ``", "goto label2", "label return r1", "if $ z1 == 0 goto label1", "label r5 = org apache tool ant taskdefs javac r0", "r5 log \\ `` since compiler set isn\\'t classic or modern ignore fork set \\"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r22 = org apache tool ant taskdefs javac r0", "$ r1 = r22 src", "if $ r1 ! = null goto label1", "r18 = new org apache tool ant build exception", "r23 = org apache tool ant taskdefs javac r0", "$ r17 = r23 get location", "specialinvoke r18 < init > \\ `` srcdir attribute must be set ! \\", "r24 = java lang throwable r18", "throw r24", "if $ r1 ! = null goto label1", "label r25 = org apache tool ant taskdefs javac r0", "$ r2 = r25 src", "$ i0 = $ r2 size", "if $ i0 ! = 0 goto label2", "r19 = new org apache tool ant build exception", "r26 = org apache tool ant taskdefs javac r0", "$ r15 = r26 get location", "specialinvoke r19 < init > \\ `` srcdir attribute must be set ! \\", "r27 = java lang throwable r19", "throw r27", "if $ i0 ! = 0 goto label2", "label r28 = org apache tool ant taskdefs javac r0", "$ r3 = r28 d dir", "if $ r3 == null goto label3", "r29 = org apache tool ant taskdefs javac r0", "$ r4 = r29 d dir", "$ z0 = $ r4 be directory", "if $ z0 ! = 0 goto label3", "r21 = new org apache tool ant build exception", "r20 = new java lang string buffer", "specialinvoke r20 < init >", "$ r7 = r20 append \\ `` destination directory \\\\\\ `` \\ ``", "r30 = org apache tool ant taskdefs javac r0", "$ r8 = r30 d dir", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 append \\ `` \\\\\\ `` do not exist \\ ``", "$ r11 = $ r10 append \\ `` or be not a directory\\ ``", "$ r12 = $ r11 to string", "r31 = org apache tool ant taskdefs javac r0", "$ r13 = r31 get location", "specialinvoke r21 < init > $ r12 $ r13", "r32 = java lang throwable r21", "throw r32", "if $ z0 ! = 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org apache tool ant taskdefs javadoc r0", "$ r2 = r10 cmd", "$ r3 = $ r2 create argument", "r9 = new java lang string buffer", "specialinvoke r9 < init >", "$ r5 = r9 append \\ `` -\\ ``", "$ r6 = r1 get value", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 to string", "$ r3 set value $ r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org apache tool ant taskdefs javadoc $ html", "specialinvoke r4 < init >", "r4 add text r1", "r5 = org apache tool ant taskdefs javadoc r0", "r5 add bottom r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs javadoc r0", "specialinvoke r1 add arg if z0 \\ `` -nohelp\\ ``", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs javadoc r0", "specialinvoke r1 add arg if z0 \\ `` -nonavbar\\ ``", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache tool ant taskdefs javadoc r0", "$ r2 = r6 cmd", "$ r3 = $ r2 create argument", "$ r3 set value \\ `` -docencoding\\ ``", "r7 = org apache tool ant taskdefs javadoc r0", "$ r4 = r7 cmd", "$ r5 = $ r4 create argument", "$ r5 set value r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs j d b c task r0", "r2 password = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r17 = org apache tool ant taskdefs length r0", "specialinvoke r17 validate", "r18 = org apache tool ant taskdefs length r0", "$ r2 = r18 length", "if $ r2 ! = null goto label1", "r13 = new org apache tool ant build exception", "specialinvoke r13 < init > \\ `` use of the length condition require that the length attribute be set \\ ``", "r19 = java lang throwable r13", "throw r19", "if $ r2 ! = null goto label1", "label $ r4 = \\ `` string\\ ``", "r20 = org apache tool ant taskdefs length r0", "$ r3 = r20 mode", "$ z0 = $ r4 equal $ r3", "if $ z0 == 0 goto label2", "r14 = new java lang long", "r21 = org apache tool ant taskdefs length r0", "$ r10 = r21 string", "r22 = org apache tool ant taskdefs length r0", "$ z2 = r22 get trim", "$ l2 = org apache tool ant taskdefs length get length $ r10 $ z2", "specialinvoke r14 < init > $ l2", "r12 = r14", "goto label3", "label r26 = org apache tool ant taskdefs length r0", "$ r8 = r26 when", "r27 = org apache tool ant taskdefs length r0", "$ r7 = r27 length", "$ i1 = r12 compare to $ r7", "$ z1 = $ r8 evaluate $ i1", "return $ z1", "if $ z0 == 0 goto label2", "label r15 = new org apache tool ant taskdefs length $ condition handler", "r23 = org apache tool ant taskdefs length r0", "specialinvoke r15 < init > r23", "r24 = org apache tool ant taskdefs length r0", "r25 = org apache tool ant taskdefs length $ handler r15", "specialinvoke r24 handle resource r25", "r16 = new java lang long", "$ l0 = r15 get length", "specialinvoke r16 < init > $ l0", "r12 = r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant taskdefs load property r0", "specialinvoke r4 assert src be java resource", "r5 = org apache tool ant taskdefs load property r0", "$ r2 = r5 src", "$ r3 = org apache tool ant type resource java resource $ r2", "$ r3 set classpath r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs macro def r0", "r2 name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs macro def r0", "$ r1 = r2 attribute", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs macro def r0", "$ z0 = specialinvoke r2 same or similar r1 0", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs make url r0", "r2 property = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs match task r0", "$ r2 = r3 fileset", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org apache tool ant type resource file resource", "specialinvoke r3 < init > r1", "r4 = org apache tool ant taskdefs pack r0", "r5 = org apache tool ant type resource r3", "r4 set src resource r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs parallel r0", "$ r2 = r3 nest task", "$ r2 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "r3 = org apache tool ant taskdefs patch r0", "$ r1 = r3 cmd", "$ r2 = $ r1 create argument", "$ r2 set value \\ `` -b\\ ``", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs patch r0", "r2 directory = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache tool ant taskdefs path convert r0", "$ r2 = r5 mapper", "if $ r2 == null goto label1", "r4 = new org apache tool ant build exception", "specialinvoke r4 < init > \\ `` can not define more than one mapper\\ ``", "r6 = java lang throwable r4", "throw r6", "if $ r2 == null goto label1", "label r7 = org apache tool ant taskdefs path convert r0", "r7 mapper = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs property r0", "r2 file = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs property r0", "$ r1 = r2 url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs property r0", "r2 ref = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs property r0", "$ r2 = r3 create classpath", "$ r2 set refid r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r15 = new java util property", "specialinvoke r15 < init >", "r16 = new java lang string buffer", "specialinvoke r16 < init >", "$ r6 = r16 append \\ `` load \\ ``", "$ r7 = $ r6 append r1", "$ r8 = $ r7 to string", "r18 = org apache tool ant taskdefs property r0", "r18 log $ r8 3", "label r13 = r1 open stream", "label r15 load r13", "label if r13 == null goto label07", "r13 close", "goto label07", "label r19 = org apache tool ant taskdefs property r0", "r19 add property r15", "label goto label10", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get project", "r4 = org apache tool ant taskdefs recorder r0", "$ r3 = r4 get project", "if $ r2 ! = $ r3 goto label1", "r5 = org apache tool ant taskdefs recorder r0", "specialinvoke r5 cleanup", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs redirector r0", "r1 log error = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache tool ant taskdefs redirector r0", "$ r2 = r7 error print stream", "if $ r2 ! = null goto label1", "r6 = new java io print stream", "r8 = org apache tool ant taskdefs redirector r0", "$ r5 = r8 error stream", "specialinvoke r6 < init > $ r5", "r9 = org apache tool ant taskdefs redirector r0", "r9 error print stream = r6", "label r10 = org apache tool ant taskdefs redirector r0", "$ r3 = r10 error print stream", "$ r3 print r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org apache tool ant project to boolean r1", "r2 = org apache tool ant taskdefs rename r0", "r2 replace = $ z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i1 = 0", "label r5 = org apache tool ant taskdefs replace r0", "$ r2 = r5 replacefilters", "$ i0 = $ r2 size", "if i1 > = $ i0 goto label2", "r6 = org apache tool ant taskdefs replace r0", "$ r3 = r6 replacefilters", "$ r4 = $ r3 element at i1", "r1 = org apache tool ant taskdefs replace $ replacefilter $ r4", "r1 validate", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs replace r0", "r2 replace filter file = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant taskdefs rmic default rmic adapter r0", "r4 attribute = r1", "r3 = new org apache tool ant taskdefs rmic default rmic adapter $ rmic file name mapper", "r5 = org apache tool ant taskdefs rmic default rmic adapter r0", "specialinvoke r3 < init > r5", "r6 = org apache tool ant taskdefs rmic default rmic adapter r0", "r7 = org apache tool ant util file name mapper r3", "r6 mapper = r7", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["$ r0 = org apache tool ant taskdefs rmic kaffe rmic get rmic class", "if $ r0 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r0 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ this", "r6 = org apache tool ant taskdefs rmic r0", "$ r1 = r6 facade", "r7 = org apache tool ant taskdefs rmic r0", "$ r2 = r7 get project", "$ r3 = $ r2 get property \\ `` build rmic\\ ``", "$ r1 set magic value $ r3", "r8 = org apache tool ant taskdefs rmic r0", "$ r4 = r8 facade", "$ r5 = $ r4 get implementation", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs sign jar r0", "r2 sigfile = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs sign jar r0", "r1 lazy = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs sleep r0", "r1 fail on error = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs s q l exec r0", "r1 expand property = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs s q l exec r0", "r1 escape process = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs sub ant r0", "$ r2 = r3 property set", "$ r2 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs sub ant r0", "$ r2 = specialinvoke r3 get buildpath", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache tool ant taskdefs sync r0", "$ r1 = r2 my copy", "$ r1 set overwrite z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache tool ant taskdefs tar r0", "r5 log \\ `` deprecated - the set longfile string method have be deprecate use set longfile tar tar long file mode instead \\ ``", "r4 = new org apache tool ant taskdefs tar $ tar long file mode", "specialinvoke r4 < init >", "r6 = org apache tool ant taskdefs tar r0", "r6 long file mode = r4", "r7 = org apache tool ant taskdefs tar r0", "$ r3 = r7 long file mode", "$ r3 set value r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r16 = org apache tool ant taskdefs temp file r0", "$ r2 = r16 property", "if $ r2 == null goto label1", "r17 = org apache tool ant taskdefs temp file r0", "$ r4 = r17 property", "$ i0 = $ r4 length", "if $ i0 ! = 0 goto label2", "label r15 = new org apache tool ant build exception", "specialinvoke r15 < init > \\ `` no property specified\\ ``", "r18 = java lang throwable r15", "throw r18", "if $ i0 ! = 0 goto label2", "label r19 = org apache tool ant taskdefs temp file r0", "$ r5 = r19 d dir", "if $ r5 ! = null goto label3", "r20 = org apache tool ant taskdefs temp file r0", "$ r13 = r20 get project", "$ r14 = $ r13 resolve file \\ `` \\ ``", "r21 = org apache tool ant taskdefs temp file r0", "r21 d dir = $ r14", "label $ r9 = org apache tool ant taskdefs temp file file_utils", "r22 = org apache tool ant taskdefs temp file r0", "$ r8 = r22 prefix", "r23 = org apache tool ant taskdefs temp file r0", "$ r7 = r23 suffix", "r24 = org apache tool ant taskdefs temp file r0", "$ r6 = r24 d dir", "r25 = org apache tool ant taskdefs temp file r0", "$ z0 = r25 delete on exit", "r1 = $ r9 create temp file $ r8 $ r7 $ r6 $ z0", "r26 = org apache tool ant taskdefs temp file r0", "$ r10 = r26 get project", "r27 = org apache tool ant taskdefs temp file r0", "$ r11 = r27 property", "$ r12 = r1 to string", "$ r10 set new property $ r11 $ r12", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs touch r0", "$ r2 = r3 resource", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs up to date r0", "$ r2 = r3 source file set", "$ r2 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache tool ant taskdefs wait for r0", "r1 max wait millis = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org apache tool ant taskdefs war r0", "$ r1 = r5 add web xml file", "if $ r1 ! = null goto label1", "r6 = org apache tool ant taskdefs war r0", "$ r2 = r6 deployment descriptor", "if $ r2 ! = null goto label1", "r7 = org apache tool ant taskdefs war r0", "$ z0 = r7 needxmlfile", "if $ z0 == 0 goto label1", "r8 = org apache tool ant taskdefs war r0", "$ z1 = r8 be in update mode", "if $ z1 ! = 0 goto label1", "r4 = new org apache tool ant build exception", "specialinvoke r4 < init > \\ `` no web-inf web xml file be add \\n if this be your intent set needxml=\\'false\\ ' \\ ``", "r9 = java lang throwable r4", "throw r9", "if $ z1 ! = 0 goto label1", "label r10 = org apache tool ant taskdefs war r0", "r10 add web xml file = null", "specialinvoke r0 clean up", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs xml property r0", "r2 root directory = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs x s l t process r0", "r2 file name parameter = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org apache tool ant taskdefs x s l t process r0", "$ r1 = r4 xml catalog", "r5 = org apache tool ant taskdefs x s l t process r0", "$ r2 = r5 get project", "$ r1 set project $ r2", "r6 = org apache tool ant taskdefs x s l t process r0", "$ r3 = r6 xml catalog", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tool ant taskdefs x s l t process r0", "$ r1 = r3 output property", "$ r2 = $ r1 element", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant taskdefs zip r0", "$ z0 = r1 do compress", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i2 = 0", "label $ i0 = lengthof r0", "if i2 > = $ i0 goto label3", "$ r1 = r0 [ i2 ]", "$ i1 = lengthof $ r1", "if $ i1 < = 0 goto label2", "return 0", "if $ i1 < = 0 goto label2", "label i2 = i2 + 1", "goto label1", "if i2 > = $ i0 goto label3", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant type abstract file set r0", "$ z0 = r4 be reference", "if $ z0 == 0 goto label1", "r5 = org apache tool ant type abstract file set r0", "$ r3 = r5 too many attribute", "r6 = java lang throwable $ r3", "throw r6", "if $ z0 == 0 goto label1", "label r7 = org apache tool ant type abstract file set r0", "$ r2 = r7 default pattern", "$ r2 set include r1", "r8 = org apache tool ant type abstract file set r0", "r8 directory scanner = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant type abstract file set r0", "$ z0 = r4 be reference", "if $ z0 == 0 goto label1", "r5 = org apache tool ant type abstract file set r0", "$ r3 = r5 too many attribute", "r6 = java lang throwable $ r3", "throw r6", "if $ z0 == 0 goto label1", "label r7 = org apache tool ant type abstract file set r0", "$ r2 = r7 default pattern", "$ r2 set excludes r1", "r8 = org apache tool ant type abstract file set r0", "r8 directory scanner = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant type abstract file set r0", "$ z0 = r4 be reference", "if $ z0 == 0 goto label1", "r5 = org apache tool ant type abstract file set r0", "$ r3 = r5 too many attribute", "r6 = java lang throwable $ r3", "throw r6", "if $ z0 == 0 goto label1", "label r7 = org apache tool ant type abstract file set r0", "$ r2 = r7 default pattern", "$ r2 set excludesfile r1", "r8 = org apache tool ant type abstract file set r0", "r8 directory scanner = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tool ant type abstract file set r0", "$ z0 = r3 be reference", "if $ z0 == 0 goto label1", "r4 = org apache tool ant type abstract file set r0", "$ r1 = r4 get project", "r5 = org apache tool ant type abstract file set r0", "$ r2 = r5 get ref $ r1", "$ z1 = $ r2 be case sensitive", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label r6 = org apache tool ant type abstract file set r0", "$ z1 = r6 case sensitive"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant type abstract file set r0", "r3 = org apache tool ant type selector file selector r1", "r2 append selector r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r25 = org apache tool ant type abstract file set r0", "$ z0 = r25 be reference", "if $ z0 == 0 goto label1", "r26 = org apache tool ant type abstract file set r0", "$ r15 = r26 get project", "r27 = org apache tool ant type abstract file set r0", "$ r16 = r27 get ref $ r15", "$ r17 = $ r16 clone", "return $ r17", "if $ z0 == 0 goto label1", "label $ r2 = specialinvoke r0 clone", "r20 = org apache tool ant type abstract file set $ r2", "r28 = org apache tool ant type abstract file set r0", "$ r3 = r28 default pattern", "$ r4 = $ r3 clone", "$ r5 = org apache tool ant type pattern set $ r4", "r20 default pattern = $ r5", "r22 = new java util vector", "r29 = org apache tool ant type abstract file set r0", "$ r7 = r29 additional pattern", "$ i0 = $ r7 size", "specialinvoke r22 < init > $ i0", "r20 additional pattern = r22", "r30 = org apache tool ant type abstract file set r0", "$ r8 = r30 additional pattern", "r1 = $ r8 element", "label $ z1 = r1 have more element", "if $ z1 == 0 goto label3", "$ r11 = r20 additional pattern", "$ r12 = r1 next element", "$ r13 = org apache tool ant type pattern set $ r12", "$ r14 = $ r13 clone", "$ r11 add element $ r14", "goto label2", "if $ z1 == 0 goto label3", "label r23 = new java util vector", "r31 = org apache tool ant type abstract file set r0", "$ r10 = r31 selector", "specialinvoke r23 < init > $ r10", "r20 selector = r23", "label return r20"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], [41], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type ant filter reader r0", "$ r1 = r2 classpath", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org apache tool ant type ant filter reader r0", "$ r2 = r4 parameter", "$ i0 = $ r2 size", "r1 = newarray org apache tool ant type parameter [ $ i0 ]", "r5 = org apache tool ant type ant filter reader r0", "$ r3 = r5 parameter", "$ r3 copy into r1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache tool ant type archive file set r0", "r1 file mode have be set = 1", "$ i1 = 32768 | i0", "r2 = org apache tool ant type archive file set r0", "r2 file mode = $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant type archive file set r0", "$ i0 = r1 file mode", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant type archive file set r0", "$ i0 = r1 dir mode", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org apache tool ant type archive file set r0", "$ z0 = r6 have dir", "if $ z0 == 0 goto label1", "r7 = org apache tool ant type archive file set r0", "$ r4 = r7 get project", "if $ r4 == null goto label1", "$ r5 = specialinvoke r0 to string", "return $ r5", "if $ r4 == null goto label1", "label r8 = org apache tool ant type archive file set r0", "$ r1 = r8 src", "if $ r1 == null goto label2", "r9 = org apache tool ant type archive file set r0", "$ r2 = r9 src", "$ r3 = $ r2 get name", "return $ r3", "if $ r1 == null goto label2", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type assertion r0", "r1 = specialinvoke r2 get final reference", "$ i0 = specialinvoke r1 get final size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type commandline java r0", "$ r1 = r2 sys property", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant type data type r0", "r1 check = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r9 = org apache tool ant type data type r0", "r1 = r9 get description", "if r1 ! = null goto label1", "r10 = org apache tool ant type data type r0", "$ r7 = r10 get data type name", "goto label2", "label return $ r7", "if r1 ! = null goto label1", "label r8 = new java lang string buffer", "specialinvoke r8 < init >", "r11 = org apache tool ant type data type r0", "$ r3 = r11 get data type name", "$ r4 = r8 append $ r3", "$ r5 = $ r4 append \\ `` \\ ``", "$ r6 = $ r5 append r1", "$ r7 = $ r6 to string"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get name", "if $ r2 ! = null goto label1", "r6 = new org apache tool ant build exception", "specialinvoke r6 < init > \\ `` no name specify in nested file element\\ ``", "r7 = java lang throwable r6", "throw r7", "if $ r2 ! = null goto label1", "label r8 = org apache tool ant type file list r0", "$ r3 = r8 filename", "$ r4 = r1 get name", "$ r3 add element $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant type filter chain r0", "$ r2 = r3 filter reader", "$ r2 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r43 = org apache tool ant type filter set r0", "$ z0 = r43 be reference", "if $ z0 == 0 goto label01", "r44 = org apache tool ant type filter set r0", "$ r24 = r44 too many attribute", "r45 = java lang throwable $ r24", "throw r45", "if $ z0 == 0 goto label01", "label $ z1 = r1 exist", "if $ z1 ! = 0 goto label02", "r35 = new java lang string buffer", "specialinvoke r35 < init >", "$ r20 = r35 append \\ `` could not read filter from file \\ ``", "$ r21 = $ r20 append r1", "$ r22 = $ r21 append \\ `` a it doesn\\'t exist \\ ``", "$ r23 = $ r22 to string", "r46 = org apache tool ant type filter set r0", "specialinvoke r46 handle miss file $ r23", "label $ z2 = r1 be file", "if $ z2 == 0 goto label10", "r36 = new java lang string buffer", "specialinvoke r36 < init >", "$ r12 = r36 append \\ `` read filter from \\ ``", "$ r13 = $ r12 append r1", "$ r14 = $ r13 to string", "r47 = org apache tool ant type filter set r0", "r47 log $ r14 3", "r32 = null", "label r37 = new java util property", "specialinvoke r37 < init >", "r38 = new java io file input stream", "specialinvoke r38 < init > r1", "r32 = r38", "r37 load r38", "r2 = r37 property name", "r48 = org apache tool ant type filter set r0", "r3 = r48 get filter", "label $ z3 = r2 have more element", "if $ z3 == 0 goto label05", "$ r17 = r2 next element", "r4 = java lang string $ r17", "r5 = r37 get property r4", "r39 = new org apache tool ant type filter set $ filter", "specialinvoke r39 < init > r4 r5", "r3 add element r39", "goto label04", "if $ z3 == 0 goto label05", "label org apache tool ant util file utils close r38", "goto label09", "label goto label11", "label r51 = org apache tool ant type filter set r0", "r51 filter hash = null", "return", "if $ z2 == 0 goto label10", "label r42 = new java lang string buffer", "specialinvoke r42 < init >", "$ r8 = r42 append \\ `` must specify a file rather than a directory in the filtersfile attribute\\ ``", "$ r9 = $ r8 append r1", "$ r10 = $ r9 to string", "r50 = org apache tool ant type filter set r0", "specialinvoke r50 handle miss file $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [], [49], [50], [], [52], [53], [54], [], [56], [57], [58], [59], [60], [61], [62], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant type filter set r0", "$ r2 = specialinvoke r3 i replace token r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant type filter set collection r0", "$ r2 = r3 filter set", "$ r2 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r19 = org apache tool ant type mapper r0", "$ z0 = r19 be reference", "if $ z0 == 0 goto label1", "r20 = org apache tool ant type mapper r0", "$ r14 = r20 no child allow", "r21 = java lang throwable $ r14", "throw r21", "if $ z0 == 0 goto label1", "label r22 = org apache tool ant type mapper r0", "$ r3 = r22 container", "if $ r3 ! = null goto label4", "r23 = org apache tool ant type mapper r0", "$ r4 = r23 type", "if $ r4 ! = null goto label2", "r24 = org apache tool ant type mapper r0", "$ r12 = r24 classname", "if $ r12 ! = null goto label2", "r16 = new org apache tool ant util composite mapper", "specialinvoke r16 < init >", "r25 = org apache tool ant type mapper r0", "r26 = org apache tool ant util container mapper r16", "r25 container = r26", "goto label4", "label r30 = org apache tool ant type mapper r0", "$ r15 = r30 container", "$ r15 add r1", "return", "if $ r12 ! = null goto label2", "label r27 = org apache tool ant type mapper r0", "r2 = r27 get implementation", "$ z1 = r2 instanceof org apache tool ant util container mapper", "if $ z1 == 0 goto label3", "$ r11 = org apache tool ant util container mapper r2", "r28 = org apache tool ant type mapper r0", "r28 container = $ r11", "if $ z1 == 0 goto label3", "label r18 = new org apache tool ant build exception", "r17 = new java lang string buffer", "specialinvoke r17 < init >", "$ r7 = java lang string value of r2", "$ r8 = r17 append $ r7", "$ r9 = $ r8 append \\ `` mapper implementation do not support nested mapper ! \\ ``", "$ r10 = $ r9 to string", "specialinvoke r18 < init > $ r10", "r29 = java lang throwable r18", "throw r29"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant type mapper r0", "$ z0 = r4 be reference", "if $ z0 == 0 goto label1", "r5 = org apache tool ant type mapper r0", "$ r3 = r5 too many attribute", "r6 = java lang throwable $ r3", "throw r6", "if $ z0 == 0 goto label1", "label r7 = org apache tool ant type mapper r0", "$ r2 = r7 create classpath", "$ r2 set refid r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant type path r0", "$ r2 = r4 union", "if $ r2 == null goto label1", "r5 = org apache tool ant type path r0", "$ r3 = r5 too many attribute", "r6 = java lang throwable $ r3", "throw r6", "if $ r2 == null goto label1", "label specialinvoke r0 set refid r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org apache tool ant type property set $ property ref", "specialinvoke r4 < init >", "r4 set prefix r1", "r5 = org apache tool ant type property set r0", "r5 add propertyref r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache tool ant type property set class $ org $ apache $ tool $ ant $ type $ property set", "if $ r1 ! = null goto label1", "$ r5 = org apache tool ant type property set class $ \\ `` org apache tool ant type property set\\ ``", "org apache tool ant type property set class $ org $ apache $ tool $ ant $ type $ property set = $ r5", "goto label2", "label r6 = org apache tool ant type property set r0", "$ r2 = r6 get check ref $ r5 \\ `` propertyset\\ ``", "$ r3 = org apache tool ant type property set $ r2", "return $ r3", "if $ r1 ! = null goto label1", "label $ r5 = org apache tool ant type property set class $ org $ apache $ tool $ ant $ type $ property set"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache tool ant type regular expression r0", "specialinvoke r6 init r1", "r7 = org apache tool ant type regular expression r0", "$ z0 = r7 be reference", "if $ z0 == 0 goto label1", "r8 = org apache tool ant type regular expression r0", "$ r4 = r8 get ref r1", "$ r5 = $ r4 get pattern r1", "return $ r5", "if $ z0 == 0 goto label1", "label r9 = org apache tool ant type regular expression r0", "specialinvoke r9 set pattern", "r10 = org apache tool ant type regular expression r0", "$ r2 = r10 regexp", "$ r3 = $ r2 get pattern", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tool ant type resource r0", "$ z0 = r3 be reference", "if $ z0 == 0 goto label1", "r4 = org apache tool ant type resource r0", "$ r2 = r4 get check ref", "$ i2 = $ r2 hash code", "return $ i2", "if $ z0 == 0 goto label1", "label r5 = org apache tool ant type resource r0", "r1 = r5 get name", "$ i0 = org apache tool ant type resource magic", "if r1 ! = null goto label2", "$ i3 = org apache tool ant type resource null_name", "goto label3", "label $ i1 = $ i0 * $ i3", "return $ i1", "if r1 ! = null goto label2", "label $ i3 = r1 hash code"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache tool ant type resource archive resource r0", "r1 check attribute allow", "r2 = org apache tool ant type resource archive resource r0", "r2 mode = i0", "r3 = org apache tool ant type resource archive resource r0", "r3 mode set = 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r4 = org apache tool ant type resource archive resource r0", "$ z0 = r4 be reference", "if $ z0 == 0 goto label1", "r5 = org apache tool ant type resource archive resource r0", "$ r1 = r5 get check ref", "$ r2 = org apache tool ant type resource archive resource $ r1", "$ r3 = $ r2 get archive", "goto label2", "label return $ r3", "if $ z0 == 0 goto label1", "label r6 = org apache tool ant type resource archive resource r0", "$ r3 = r6 archive"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tool ant type resource archive resource r0", "$ z0 = r3 be reference", "if $ z0 == 0 goto label1", "r4 = org apache tool ant type resource archive resource r0", "$ r1 = r4 get check ref", "$ r2 = org apache tool ant type resource $ r1", "$ z2 = $ r2 be directory", "return $ z2", "if $ z0 == 0 goto label1", "label r5 = org apache tool ant type resource archive resource r0", "specialinvoke r5 check entry", "$ z1 = specialinvoke r0 be directory", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org apache tool ant type resource compress resource r0", "r10 check child allow", "r11 = org apache tool ant type resource compress resource r0", "$ r2 = r11 resource", "if $ r2 == null goto label1", "r8 = new org apache tool ant build exception", "specialinvoke r8 < init > \\ `` you must not specify more than one resource\\ ``", "r12 = java lang throwable r8", "throw r12", "if $ r2 == null goto label1", "label $ i0 = r1 size", "if $ i0 == 1 goto label2", "r9 = new org apache tool ant build exception", "specialinvoke r9 < init > \\ `` only single argument resource collection be supported\\ ``", "r13 = java lang throwable r9", "throw r13", "if $ i0 == 1 goto label2", "label $ r3 = r1 iterator", "$ r4 = $ r3 next", "$ r5 = org apache tool ant type resource $ r4", "r14 = org apache tool ant type resource compress resource r0", "r14 resource = $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r4 = org apache tool ant type resource file resource r0", "$ z0 = r4 be reference", "if $ z0 == 0 goto label1", "r5 = org apache tool ant type resource file resource r0", "$ r2 = r5 get check ref", "$ r3 = org apache tool ant type resource $ r2", "$ z1 = $ r3 be exist", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label r6 = org apache tool ant type resource file resource r0", "$ r1 = r6 get not null file", "$ z1 = $ r1 exists"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant type resource file r0", "r3 check attribute allow", "r4 = org apache tool ant type resource file r0", "$ r2 = r4 default pattern", "$ r2 set include r1", "r5 = org apache tool ant type resource file r0", "r5 d = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant type resource file r0", "r3 check attribute allow", "r4 = org apache tool ant type resource file r0", "$ r2 = r4 default pattern", "$ r2 set includesfile r1", "r5 = org apache tool ant type resource file r0", "r5 d = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type resource file r0", "$ z0 = r2 be reference", "if $ z0 == 0 goto label1", "r3 = org apache tool ant type resource file r0", "$ r1 = r3 get ref", "$ z1 = $ r1 get defaultexcludes", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label r4 = org apache tool ant type resource file r0", "$ z1 = r4 use default excludes"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant type resource file r0", "$ r2 = r4 merge pattern r1", "$ r3 = $ r2 get include pattern r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant type resource restrict r0", "$ z0 = r4 be reference", "if $ z0 == 0 goto label1", "r5 = org apache tool ant type resource restrict r0", "$ r3 = r5 no child allow", "r6 = java lang throwable $ r3", "throw r6", "if $ z0 == 0 goto label1", "label if r1 ! = null goto label2", "return", "label if r1 ! = null goto label2", "label r7 = org apache tool ant type resource restrict r0", "$ r2 = r7 w", "$ r2 add r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org apache tool ant type resource selector compare r0", "$ z0 = r6 be check", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label r7 = org apache tool ant type resource selector compare r0", "$ z1 = r7 be reference", "if $ z1 == 0 goto label2", "specialinvoke r0 die on circular reference r1 r2", "goto label4", "label return", "if $ z1 == 0 goto label2", "label r8 = org apache tool ant type resource selector compare r0", "$ r3 = r8 control", "if $ r3 == null goto label3", "r9 = org apache tool ant type resource selector compare r0", "$ r5 = r9 control", "r10 = org apache tool ant type data type $ r5", "org apache tool ant type data type invoke circular reference check r10 r1 r2", "label r11 = org apache tool ant type resource selector compare r0", "$ r4 = r11 comp", "r12 = org apache tool ant type data type $ r4", "org apache tool ant type data type invoke circular reference check r12 r1 r2", "r13 = org apache tool ant type resource selector compare r0", "r13 set check 1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache tool ant type resource selector size r0", "r1 size = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant type resource selector size r0", "$ l0 = r1 size", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r8 = org apache tool ant type resource string resource r0", "$ z0 = r8 be reference", "if $ z0 == 0 goto label1", "r9 = org apache tool ant type resource string resource r0", "$ r4 = r9 get check ref", "$ r5 = org apache tool ant type resource string resource $ r4", "$ r6 = $ r5 get content", "return $ r6", "if $ z0 == 0 goto label1", "label r10 = org apache tool ant type resource string resource r0", "r1 = r10 get value", "if r1 ! = null goto label2", "return r1", "if r1 ! = null goto label2", "label r11 = org apache tool ant type resource string resource r0", "$ r2 = r11 get project", "if $ r2 ! = null goto label3", "$ r7 = r1", "goto label4", "label return $ r7", "if $ r2 ! = null goto label3", "label r12 = org apache tool ant type resource string resource r0", "$ r3 = r12 get project", "$ r7 = $ r3 replace property r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r9 = org apache tool ant type resource union r0", "$ z0 = r9 be reference", "if $ z0 == 0 goto label1", "r10 = org apache tool ant type resource union r0", "$ r6 = r10 get check ref", "$ r7 = org apache tool ant type resource union $ r6", "$ r8 = $ r7 list", "return $ r8", "if $ z0 == 0 goto label1", "label r11 = org apache tool ant type resource union r0", "r1 = r11 get collection 1", "$ i0 = r1 size", "$ r2 = newarray java lang string [ $ i0 ]", "$ r3 = r1 to array $ r2", "$ r4 = java lang string [ ] $ r3", "$ r5 = java lang string [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r5 = org apache tool ant type resource u r l resource r0", "$ z0 = r5 be reference", "if $ z0 == 0 goto label1", "r6 = org apache tool ant type resource u r l resource r0", "$ r2 = r6 get check ref", "$ r3 = org apache tool ant type resource u r l resource $ r2", "$ r4 = $ r3 get u r l", "return $ r4", "if $ z0 == 0 goto label1", "label r7 = org apache tool ant type resource u r l resource r0", "$ r1 = r7 url", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r4 = org apache tool ant type resource zip resource r0", "$ r2 = r4 get archive", "r1 = org apache tool ant type resource file resource $ r2", "$ r3 = r1 get file", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = org apache tool ant type selector and selector r0", "r7 validate", "r8 = org apache tool ant type selector and selector r0", "r4 = r8 selector element", "label $ z1 = r4 have more element", "if $ z1 == 0 goto label2", "$ r5 = r4 next element", "$ r6 = org apache tool ant type selector file selector $ r5", "z0 = $ r6 be select r1 r2 r3", "if z0 ! = 0 goto label1", "return 0", "if $ z1 == 0 goto label2", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant type selector contains regexp selector r0", "r2 user provide expression = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type selector contains regexp selector r0", "$ r1 = r2 user provide expression", "if $ r1 ! = null goto label1", "r3 = org apache tool ant type selector contains regexp selector r0", "r3 set error \\ `` the expression attribute be required\\ ``", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type selector contains selector r0", "$ r1 = r2 contain", "if $ r1 ! = null goto label1", "r3 = org apache tool ant type selector contains selector r0", "r3 set error \\ `` the text attribute be required\\ ``", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type selector date selector r0", "$ r1 = r2 date time", "if $ r1 == null goto label1", "r3 = org apache tool ant type selector date selector r0", "r3 validate", "label r4 = org apache tool ant type selector date selector r0", "$ l0 = r4 millis", "return $ l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant type selector extend selector r0", "r2 classname = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant type selector map selector r0", "r2 targetdir = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r2 = \\ `` sha\\ ``", "r5 = org apache tool ant type selector modifiedselector digest algorithm r0", "$ r1 = r5 algorithm", "$ z0 = $ r2 equal ignore case $ r1", "if $ z0 ! = 0 goto label1", "$ r4 = \\ `` md5\\ ``", "r6 = org apache tool ant type selector modifiedselector digest algorithm r0", "$ r3 = r6 algorithm", "$ z1 = $ r4 equal ignore case $ r3", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = r3 get absolute path", "r5 = org apache tool ant type selector modifiedselector modified selector r0", "$ z0 = specialinvoke r5 be select r1 r2 $ r4", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant type selector modifiedselector modified selector r0", "r1 select resource without input stream = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label2", "i1 = 0", "label $ i0 = lengthof r1", "if i1 > = $ i0 goto label2", "r4 = org apache tool ant type selector modifiedselector modified selector r0", "$ r3 = r4 config parameter", "$ r2 = r1 [ i1 ]", "$ r3 add $ r2", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant type selector modifiedselector modified selector r0", "$ z0 = r2 get delay update", "if $ z0 == 0 goto label1", "r3 = org apache tool ant type selector modifiedselector modified selector r0", "r3 save cache", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type selector modifiedselector modified selector r0", "$ r1 = r2 algorithm", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type selector modifiedselector propertiesfile cache r0", "$ r1 = r2 cachefile", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org apache tool ant type selector modifiedselector propertiesfile cache r0", "$ r3 = r7 cache", "$ r4 = java lang string value of r1", "$ r5 = java lang string value of r2", "$ r3 put $ r4 $ r5", "r8 = org apache tool ant type selector modifiedselector propertiesfile cache r0", "r8 cache dirty = 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r9 = org apache tool ant type spi provider r0", "$ r1 = r9 type", "if $ r1 ! = null goto label1", "r7 = new org apache tool ant build exception", "r10 = org apache tool ant type spi provider r0", "$ r6 = r10 get location", "specialinvoke r7 < init > \\ `` classname attribute must be set for provider element\\", "r11 = java lang throwable r7", "throw r11", "if $ r1 ! = null goto label1", "label r12 = org apache tool ant type spi provider r0", "$ r2 = r12 type", "$ i0 = $ r2 length", "if $ i0 ! = 0 goto label2", "r8 = new org apache tool ant build exception", "r13 = org apache tool ant type spi provider r0", "$ r4 = r13 get location", "specialinvoke r8 < init > \\ `` invalid empty classname\\", "r14 = java lang throwable r8", "throw r14", "if $ i0 ! = 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant type tar file set r0", "specialinvoke r2 check tar file set attribute allow", "r3 = org apache tool ant type tar file set r0", "r3 user name set = 1", "r4 = org apache tool ant type tar file set r0", "r4 user name = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "l1 = @ parameter1", "$ r1 = org apache tool ant type time comparison file_utils", "$ l2 = $ r1 get file timestamp granularity", "r2 = org apache tool ant type time comparison r0", "$ z0 = r2 evaluate l0 l1 $ l2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant unknown element r0", "$ r1 = r2 element name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache tool ant unknown element r0", "$ r2 = r6 child", "if $ r2 ! = null goto label1", "r5 = new java util array list", "specialinvoke r5 < init >", "r7 = org apache tool ant unknown element r0", "r7 child = r5", "label r8 = org apache tool ant unknown element r0", "$ r3 = r8 child", "$ r3 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant util concat file input stream r0", "r3 = org apache tool ant project component r1", "r2 set manage component r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant util concat resource input stream r0", "$ z0 = r1 ignore error", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z3 = 0", "r8 = org apache tool ant util container mapper r0", "$ r4 = r8 mapper", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label5", "if z3 ! = 0 goto label5", "$ r5 = r2 next", "$ r6 = org apache tool ant util file name mapper $ r5", "r3 = org apache tool ant util file name mapper $ r6", "$ z4 = z3", "if r3 == r1 goto label2", "$ z1 = r3 instanceof org apache tool ant util container mapper", "if $ z1 == 0 goto label3", "$ r7 = org apache tool ant util container mapper r3", "$ z2 = $ r7 contain r1", "if $ z2 == 0 goto label3", "label $ z5 = 1", "goto label4", "label z3 = $ z4 | $ z5", "goto label1", "if $ z2 == 0 goto label3", "label $ z5 = 0", "if z3 ! = 0 goto label5", "label return z3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [], [24], [25], [26], []]}
{"nodes": ["l0 = @ parameter0", "l1 = l0 1000l", "l2 = l1 60l", "$ r1 = newarray java lang object [ 2 ]", "$ r2 = new java lang long", "specialinvoke $ r2 < init > l2", "$ r1 [ 0 ] = $ r2", "$ r3 = new java lang long", "$ l3 = l1 % 60l", "specialinvoke $ r3 < init > $ l3", "$ r1 [ 1 ] = $ r3", "$ r4 = org apache tool ant util date utils minute_seconds", "$ r5 = $ r4 format $ r1", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "i0 = r0 get 6", "$ i2 = r0 get 1", "$ i3 = $ i2 - 1900", "$ i4 = $ i3 % 19", "i1 = $ i4 + 1", "$ i5 = 11 * i1", "$ i6 = $ i5 + 18", "i7 = $ i6 % 30", "if i7 ! = 25 goto label1", "if i1 > 11 goto label2", "label if i7 ! = 24 goto label3", "label i7 = i7 + 1", "label $ i8 = i0 + i7", "$ i9 = $ i8 * 6", "$ i10 = $ i9 + 11", "$ i11 = $ i10 % 177", "$ i12 = $ i11 22", "$ i13 = $ i12 & 7", "return $ i13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new java net url", "$ r3 = r1 get absolute path", "r6 = org apache tool ant util file utils r0", "$ r4 = r6 to u r i $ r3", "specialinvoke r5 < init > $ r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "z0 = @ parameter3", "r4 = org apache tool ant util file utils r0", "r4 copy file r1 r2 r3 z0 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r6 = @ parameter0", "r7 = @ parameter1", "if r6 ! = null goto label1", "$ r5 = new java io file", "specialinvoke $ r5 < init > r7", "r6 = $ r5 get parent file", "r7 = $ r5 get name", "label $ r1 = new java io file", "$ r2 = r6 get canonical path", "specialinvoke $ r1 < init > $ r2 r7", "$ r3 = $ r1 get absolute path", "$ r4 = $ r1 get canonical path", "$ z0 = $ r3 equal $ r4", "if $ z0 ! = 0 goto label2", "$ z1 = 1", "goto label3", "label return $ z1", "if $ z0 ! = 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "l0 = @ parameter2", "$ z0 = r2 exist", "if $ z0 ! = 0 goto label1", "return 0", "if $ z0 ! = 0 goto label1", "label l1 = r1 last modified", "l2 = r2 last modified", "r3 = org apache tool ant util file utils r0", "$ z1 = r3 be up to date l1 l2 l0", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r8 = new java io input stream reader", "r7 = new org apache tool ant util file utils $ 1", "r9 = org apache tool ant util file utils r0", "specialinvoke r7 < init > r9", "r10 = java io input stream r7", "specialinvoke r8 < init > r10", "label r2 = r8 get encode", "label org apache tool ant util file utils close r8", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant util glob pattern mapper r0", "r1 handle dir sep = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache tool ant util j a x p utils file_utils", "$ r2 = r0 get absolute path", "$ r3 = $ r1 to u r i $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant util lead pipe input stream r0", "r2 manage pc = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = java lang thread current thread", "r1 set context class loader r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tool ant util reader input stream r0", "$ r1 = r3 in", "if $ r1 == null goto label1", "r4 = org apache tool ant util reader input stream r0", "$ r2 = r4 in", "$ r2 close", "r5 = org apache tool ant util reader input stream r0", "r5 slack = null", "r6 = org apache tool ant util reader input stream r0", "r6 in = null", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "$ i2 = i0 & i1", "if $ i2 < = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i2 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant util script runner base r0", "$ r1 = r2 language", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant util script runner base r0", "$ r1 = r2 script", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r2 = java lang thread current thread", "r1 = $ r2 get context class loader", "r8 = org apache tool ant util script runner base r0", "$ r3 = r8 get script class loader", "if $ r3 ! = null goto label1", "$ r6 = r0 get class", "$ r7 = $ r6 get class loader", "r9 = org apache tool ant util script runner base r0", "r9 set script class loader $ r7", "label $ r4 = java lang thread current thread", "r10 = org apache tool ant util script runner base r0", "$ r5 = r10 get script class loader", "$ r4 set context class loader $ r5", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant util script runner helper r0", "r2 manager = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant util string tokenizer r0", "r1 delims be tokens = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 length", "if $ i0 < = 3 goto label1", "$ c1 = r1 char at 3", "if $ c1 ! = 45 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ c1 ! = 45 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r27 = org apache tool tar tar buffer r0", "$ z0 = r27 debug", "if $ z0 == 0 goto label1", "$ r17 = java lang system err", "r23 = new java lang string buffer", "specialinvoke r23 < init >", "$ r18 = r23 append \\ `` write record rec idx = \\ ``", "r28 = org apache tool tar tar buffer r0", "$ i14 = r28 curr rec idx", "$ r19 = $ r18 append $ i14", "$ r20 = $ r19 append \\ `` blk idx = \\ ``", "r29 = org apache tool tar tar buffer r0", "$ i15 = r29 curr blk idx", "$ r21 = $ r20 append $ i15", "$ r22 = $ r21 to string", "$ r17 println $ r22", "label r30 = org apache tool tar tar buffer r0", "$ r2 = r30 out stream", "if $ r2 ! = null goto label2", "r24 = new java io i o exception", "specialinvoke r24 < init > \\ `` write to an input buffer\\ ``", "throw r24", "if $ r2 ! = null goto label2", "label r31 = org apache tool tar tar buffer r0", "$ i1 = r31 record size", "$ i3 = i0 + $ i1", "$ i2 = lengthof r1", "if $ i3 < = $ i2 goto label3", "r26 = new java io i o exception", "r25 = new java lang string buffer", "specialinvoke r25 < init >", "$ r7 = r25 append \\ `` record have length \\'\\ ``", "$ i12 = lengthof r1", "$ r8 = $ r7 append $ i12", "$ r9 = $ r8 append \\ `` \\ ' with offset \\'\\ ``", "$ r10 = $ r9 append i0", "$ r11 = $ r10 append \\ `` \\ ' which be less than the record size of \\'\\ ``", "r32 = org apache tool tar tar buffer r0", "$ i13 = r32 record size", "$ r12 = $ r11 append $ i13", "$ r13 = $ r12 append \\ `` \\'\\ ``", "$ r14 = $ r13 to string", "specialinvoke r26 < init > $ r14", "throw r26", "if $ i3 < = $ i2 goto label3", "label r33 = org apache tool tar tar buffer r0", "$ i5 = r33 curr rec idx", "r34 = org apache tool tar tar buffer r0", "$ i4 = r34 recs per block", "if $ i5 < $ i4 goto label4", "r35 = org apache tool tar tar buffer r0", "specialinvoke r35 write block", "label r36 = org apache tool tar tar buffer r0", "$ r3 = r36 block buffer", "r37 = org apache tool tar tar buffer r0", "$ i7 = r37 curr rec idx", "r38 = org apache tool tar tar buffer r0", "$ i6 = r38 record size", "$ i9 = $ i7 * $ i6", "r39 = org apache tool tar tar buffer r0", "$ i8 = r39 record size", "java lang system arraycopy r1 i0 $ r3 $ i9 $ i8", "r40 = org apache tool tar tar buffer r0", "$ i10 = r40 curr rec idx", "$ i11 = $ i10 + 1", "r41 = org apache tool tar tar buffer r0", "r41 curr rec idx = $ i11", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], []]}
{"nodes": ["r0 = @ this", "r12 = org apache tool tar tar buffer r0", "$ z0 = r12 debug", "if $ z0 == 0 goto label1", "$ r11 = java lang system err", "$ r11 println \\ `` tar buffer close buffer \\ ``", "label r13 = org apache tool tar tar buffer r0", "$ r1 = r13 out stream", "if $ r1 == null goto label2", "r14 = org apache tool tar tar buffer r0", "specialinvoke r14 flush block", "r15 = org apache tool tar tar buffer r0", "$ r7 = r15 out stream", "$ r6 = java lang system out", "if $ r7 == $ r6 goto label3", "r16 = org apache tool tar tar buffer r0", "$ r9 = r16 out stream", "$ r8 = java lang system err", "if $ r9 == $ r8 goto label3", "r17 = org apache tool tar tar buffer r0", "$ r10 = r17 out stream", "$ r10 close", "r18 = org apache tool tar tar buffer r0", "r18 out stream = null", "goto label3", "label return", "if $ r1 == null goto label2", "label r19 = org apache tool tar tar buffer r0", "$ r2 = r19 in stream", "if $ r2 == null goto label3", "r20 = org apache tool tar tar buffer r0", "$ r4 = r20 in stream", "$ r3 = java lang system in", "if $ r4 == $ r3 goto label3", "r21 = org apache tool tar tar buffer r0", "$ r5 = r21 in stream", "$ r5 close", "r22 = org apache tool tar tar buffer r0", "r22 in stream = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r2 = r0 get class", "$ r3 = r1 get class", "if $ r2 == $ r3 goto label2", "label return 0", "if $ r2 == $ r3 goto label2", "label $ r4 = org apache tool tar tar entry r1", "r5 = org apache tool tar tar entry r0", "$ z0 = r5 equal $ r4", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache tool tar tar entry r0", "r1 group id = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool tar tar entry r0", "$ l0 = r1 size", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache tool tar tar utils parse name r1 0 100", "r7 = org apache tool tar tar entry r0", "r7 name = $ r2", "i14 = 0 + 100", "$ l0 = org apache tool tar tar utils parse octal r1 i14 8", "$ i1 = int $ l0", "r8 = org apache tool tar tar entry r0", "r8 mode = $ i1", "i15 = i14 + 8", "$ l2 = org apache tool tar tar utils parse octal r1 i15 8", "$ i3 = int $ l2", "r9 = org apache tool tar tar entry r0", "r9 user id = $ i3", "i16 = i15 + 8", "$ l4 = org apache tool tar tar utils parse octal r1 i16 8", "$ i5 = int $ l4", "r10 = org apache tool tar tar entry r0", "r10 group id = $ i5", "i17 = i16 + 8", "$ l6 = org apache tool tar tar utils parse octal r1 i17 12", "r11 = org apache tool tar tar entry r0", "r11 size = $ l6", "i18 = i17 + 12", "$ l7 = org apache tool tar tar utils parse octal r1 i18 12", "r12 = org apache tool tar tar entry r0", "r12 mod time = $ l7", "i19 = i18 + 12", "i20 = i19 + 8", "i21 = i20 + 1", "$ b8 = r1 [ i20 ]", "r13 = org apache tool tar tar entry r0", "r13 link flag = $ b8", "$ r3 = org apache tool tar tar utils parse name r1 i21 100", "r14 = org apache tool tar tar entry r0", "r14 link name = $ r3", "i22 = i21 + 100", "$ r4 = org apache tool tar tar utils parse name r1 i22 8", "r15 = org apache tool tar tar entry r0", "r15 magic = $ r4", "i23 = i22 + 8", "$ r5 = org apache tool tar tar utils parse name r1 i23 32", "r16 = org apache tool tar tar entry r0", "r16 user name = $ r5", "i24 = i23 + 32", "$ r6 = org apache tool tar tar utils parse name r1 i24 32", "r17 = org apache tool tar tar entry r0", "r17 group name = $ r6", "i25 = i24 + 32", "$ l9 = org apache tool tar tar utils parse octal r1 i25 8", "$ i10 = int $ l9", "r18 = org apache tool tar tar entry r0", "r18 dev major = $ i10", "i26 = i25 + 8", "$ l11 = org apache tool tar tar utils parse octal r1 i26 8", "$ i12 = int $ l11", "r19 = org apache tool tar tar entry r0", "r19 dev minor = $ i12", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool tar tar input stream r0", "$ l1 = r1 entry size", "r2 = org apache tool tar tar input stream r0", "$ l0 = r2 entry offset", "$ l2 = $ l1 - $ l0", "$ b3 = $ l2 cmp 2147483647l", "if $ b3 < = 0 goto label1", "return 2147483647", "if $ b3 < = 0 goto label1", "label r3 = org apache tool tar tar input stream r0", "$ l5 = r3 entry size", "r4 = org apache tool tar tar input stream r0", "$ l4 = r4 entry offset", "$ l6 = $ l5 - $ l4", "$ i7 = int $ l6", "return $ i7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache tool tar tar output stream r0", "$ r1 = r2 buffer", "$ r1 set debug z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "l4 = 0l", "i5 = 0", "label $ i0 = lengthof r0", "if i5 > = $ i0 goto label2", "$ b1 = r0 [ i5 ]", "$ s2 = 255 & $ b1", "$ l3 = long $ s2", "l4 = l4 + $ l3", "i5 = i5 + 1", "goto label1", "if i5 > = $ i0 goto label2", "label return l4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "i9 = 4 * $ i0", "i10 = 0", "label $ i1 = lengthof r0", "if i10 > = $ i1 goto label2", "$ r9 = r0 [ i10 ]", "$ r10 = $ r9 get central directory length", "$ i8 = $ r10 get value", "i9 = i9 + $ i8", "i10 = i10 + 1", "goto label1", "if i10 > = $ i1 goto label2", "label r11 = newarray byte [ i9 ]", "i11 = 0", "i12 = 0", "label $ i2 = lengthof r0", "if i12 > = $ i2 goto label4", "$ r2 = r0 [ i12 ]", "$ r3 = $ r2 get header id", "$ r4 = $ r3 get byte", "java lang system arraycopy $ r4 0 r11 i11 2", "$ r5 = r0 [ i12 ]", "$ r6 = $ r5 get central directory length", "$ r7 = $ r6 get byte", "$ i3 = i11 + 2", "java lang system arraycopy $ r7 0 r11 $ i3 2", "$ r8 = r0 [ i12 ]", "r1 = $ r8 get central directory data", "$ i5 = i11 + 4", "$ i4 = lengthof r1", "java lang system arraycopy r1 0 r11 $ i5 $ i4", "$ i6 = lengthof r1", "$ i7 = $ i6 + 4", "i11 = i11 + $ i7", "i12 = i12 + 1", "goto label3", "if i12 > = $ i2 goto label4", "label return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool zip zip entry r0", "$ i0 = r1 platform", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ z0 = r1 instanceof org apache tool zip zip long", "if $ z0 ! = 0 goto label2", "label return 0", "if $ z0 ! = 0 goto label2", "label r3 = org apache tool zip zip long r0", "$ l0 = r3 value", "$ r2 = org apache tool zip zip long r1", "$ l1 = $ r2 get value", "$ b2 = $ l0 cmp $ l1", "if $ b2 ! = 0 goto label3", "$ z1 = 1", "goto label4", "label return $ z1", "if $ b2 ! = 0 goto label3", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = newarray byte [ 1 ]", "$ i1 = i0 & 255", "$ b2 = byte $ i1", "r1 [ 0 ] = $ b2", "r2 = org apache tool zip zip output stream r0", "r2 write r1 0 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org apache tool ant component helper r0", "r4 = r9 create component r3", "$ z0 = r4 instanceof org apache tool ant task", "if $ z0 == 0 goto label1", "r5 = org apache tool ant task r4", "$ r6 = r1 get location", "r5 set location $ r6", "r5 set task type r3", "$ r7 = r1 get task name", "r5 set task name $ r7", "$ r8 = r1 get own target", "r5 set own target $ r8", "r5 init", "label return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache tool ant filter expand property r0", "$ r2 = r5 property set", "if $ r2 == null goto label1", "r4 = new org apache tool ant build exception", "specialinvoke r4 < init > \\ `` expandproperties filter accept only one propertyset\\ ``", "r6 = java lang throwable r4", "throw r6", "if $ r2 == null goto label1", "label r7 = org apache tool ant filter expand property r0", "r7 property set = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["$ r0 = org apache tool ant project helper prefix separator", "$ r1 = $ r0 get", "$ r2 = java lang string $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` attribute namespace\\ ``", "$ r3 = $ r2 append r0", "$ r4 = $ r3 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label $ r3 = newarray java lang class [ 0 ]", "$ r4 = r1 get constructor $ r3", "r14 = org apache tool ant project helper repository r0", "specialinvoke r14 register project helper $ r4", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tool ant property local property r0", "$ r1 = specialinvoke r3 current", "$ r2 = $ r1 copy", "r4 = org apache tool ant property local property r0", "r4 set $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof java lang boolean", "if $ z0 == 0 goto label1", "$ r6 = java lang boolean r0", "return $ r6", "if $ z0 == 0 goto label1", "label $ z1 = r0 instanceof java lang string", "if $ z1 == 0 goto label4", "r1 = java lang string r0", "$ z2 = org apache tool ant project to boolean r1", "if $ z2 == 0 goto label2", "$ r5 = java lang boolean true", "return $ r5", "if $ z2 == 0 goto label2", "label $ r2 = \\ `` off\\ ``", "$ z3 = $ r2 equal ignore case r1", "if $ z3 ! = 0 goto label3", "$ r3 = \\ `` false\\ ``", "$ z4 = $ r3 equal ignore case r1", "if $ z4 ! = 0 goto label3", "$ r4 = \\ `` no\\ ``", "$ z5 = $ r4 equal ignore case r1", "if $ z5 == 0 goto label4", "label $ r7 = java lang boolean false", "return $ r7", "if $ z5 == 0 goto label4", "label return null"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs abstract jar signer task r0", "r2 executable = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r2 = java lang string r1", "r3 = org apache tool ant taskdefs condition equal r0", "r3 set arg2 $ r2", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r4 = org apache tool ant taskdefs condition equal r0", "specialinvoke r4 set arg2 internal r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache tool ant taskdefs echo r0", "$ r3 = r9 output", "if $ r3 == null goto label1", "r8 = new org apache tool ant build exception", "specialinvoke r8 < init > \\ `` can not set > 1 output target\\ ``", "r10 = java lang throwable r8", "throw r10", "if $ r3 == null goto label1", "label r11 = org apache tool ant taskdefs echo r0", "r11 output = r1", "$ r4 = r1 a class \\ `` lorg apache tool ant type resource file provider \\ ``", "r2 = org apache tool ant type resource file provider $ r4", "if r2 == null goto label2", "$ r7 = r2 get file", "goto label3", "label r12 = org apache tool ant taskdefs echo r0", "r12 file = $ r7", "return", "if r2 == null goto label2", "label $ r7 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs email email task r0", "r1 ignore invalid recipient = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs exit r0", "r2 unless condition = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org apache tool ant taskdefs javac r0", "$ r1 = r4 facade", "r5 = org apache tool ant taskdefs javac r0", "$ r2 = r5 get project", "$ r3 = $ r1 get implementation classpath $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs javadoc r0", "r2 exclude doc file sub dir = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "if r4 ! = null goto label1", "r8 = org apache tool ant taskdefs launcher command launcher r0", "$ r6 = r8 exec r1 r2 r3", "return $ r6", "if r4 ! = null goto label1", "label r7 = new java io i o exception", "specialinvoke r7 < init > \\ `` can not execute a process in different directory under this jvm\\ ``", "throw r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs optional cab r0", "r1 do compress = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r2 get include file", "i1 = 0", "label $ i0 = lengthof r3", "if i1 > = $ i0 goto label2", "$ r4 = r3 [ i1 ]", "r1 add element $ r4", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant taskdefs optional ccm c c m reconfigure r0", "$ z0 = r1 recurse", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant taskdefs optional ccm c c m reconfigure r0", "$ z0 = r1 verbose", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional clearcase c c checkin r0", "r2 m cfile = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant taskdefs optional clearcase c c checkout r0", "$ z0 = r1 m notco", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional clearcase c c checkout r0", "r2 m branch = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional clearcase c c lock r0", "r2 m nusers = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs optional clearcase c c mkbl r0", "r1 m nwarn = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs optional clearcase c c mkelem r0", "r1 m master = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs optional clearcase c c mklbtype r0", "r1 m ordinary = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs optional clearcase c c rmtype r0", "r1 m rmall = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant taskdefs optional clearcase c c update r0", "$ z0 = r1 m overwrite", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant taskdefs optional clearcase c c update r0", "$ z0 = r1 m rename", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional clearcase clear case r0", "$ r1 = r2 mobj select", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "i1 = -1", "r11 = org apache tool ant taskdefs optional depend constantpool constant pool r0", "$ r6 = r11 entry", "i0 = $ r6 size", "i2 = 0", "label if i2 > = i0 goto label3", "if i1 ! = -1 goto label3", "r12 = org apache tool ant taskdefs optional depend constantpool constant pool r0", "$ r7 = r12 entry", "r4 = $ r7 get i2", "$ z0 = r4 instanceof org apache tool ant taskdefs optional depend constantpool method ref c p info", "if $ z0 == 0 goto label2", "r5 = org apache tool ant taskdefs optional depend constantpool method ref c p info r4", "$ r8 = r5 get method class name", "$ z1 = $ r8 equal r1", "if $ z1 == 0 goto label2", "$ r9 = r5 get method name", "$ z2 = $ r9 equal r2", "if $ z2 == 0 goto label2", "$ r10 = r5 get method type", "$ z3 = $ r10 equal r3", "if $ z3 == 0 goto label2", "i1 = i2", "label i2 = i2 + 1", "goto label1", "if i1 ! = -1 goto label3", "label return i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional depend constantpool interface method ref c p info r0", "$ r1 = r2 interface method type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant taskdefs optional ejb borland generate client r0", "$ r2 = r4 classpath", "if $ r2 ! = null goto label1", "r5 = org apache tool ant taskdefs optional ejb borland generate client r0", "r5 classpath = r1", "goto label2", "label return", "if $ r2 ! = null goto label1", "label r6 = org apache tool ant taskdefs optional ejb borland generate client r0", "$ r3 = r6 classpath", "$ r3 append r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r5 = new org apache tool ant taskdefs optional ejb ejb jar $ d t d location", "specialinvoke r5 < init >", "r6 = org apache tool ant taskdefs optional ejb ejb jar r0", "$ r3 = r6 config", "$ r4 = $ r3 dtd location", "$ r4 add r5", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional ejb generic deployment tool r0", "r2 generic jar suffix = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = new java io file", "r9 = org apache tool ant taskdefs optional ejb i planet deployment tool r0", "$ r4 = r9 get config", "$ r5 = $ r4 descriptor dir", "r10 = org apache tool ant taskdefs optional ejb i planet deployment tool r0", "$ r6 = specialinvoke r10 get ias descriptor name", "specialinvoke r8 < init > $ r5 $ r6", "r1 put \\ `` meta-inf ias-ejb-jar xml\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional ejb i planet ejbc r0", "$ r1 = r2 display name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional ejb jonas deployment tool r0", "r2 javac = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional ejb jonas deployment tool r0", "r2 orb = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs optional ejb weblogic deployment tool r0", "$ r2 = r3 sysprops", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional ejb weblogic deployment tool r0", "r2 weblogic d t d = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs optional ejb websphere deployment tool r0", "r1 quiet = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs optional ejb websphere deployment tool r0", "r1 noinform = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs optional ejb websphere deployment tool r0", "r1 always rebuild = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs optional ejb websphere deployment tool r0", "r1 new c m p = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional extension compatibility r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional extension extension r0", "$ r1 = r2 extension name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant taskdefs optional extension extension set r0", "$ z0 = r4 be reference", "if $ z0 == 0 goto label1", "r5 = org apache tool ant taskdefs optional extension extension set r0", "$ r3 = r5 no child allow", "r6 = java lang throwable $ r3", "throw r6", "if $ z0 == 0 goto label1", "label r7 = org apache tool ant taskdefs optional extension extension set r0", "r7 set check 0", "r8 = org apache tool ant taskdefs optional extension extension set r0", "$ r2 = r8 extension", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional extension jar lib available task r0", "r2 library file = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional extension resolvers ant resolver r0", "r2 antfile = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional extension resolvers ant resolver r0", "r2 destfile = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional extension resolvers u r l resolver r0", "r2 url = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional i18n translate r0", "r2 bundle country = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional j2ee abstract hot deployment tool r0", "r2 server = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs optional j2ee server deploy r0", "r1 set task r3", "r4 = org apache tool ant taskdefs optional j2ee server deploy r0", "$ r2 = r4 vendor tool", "$ r2 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional j2ee server deploy r0", "$ r1 = r2 source", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z1 = 0", "r6 = org apache tool ant taskdefs optional j2ee web logic hot deployment tool r0", "$ r2 = r6 get task", "r1 = $ r2 get action", "i1 = 0", "label $ r3 = org apache tool ant taskdefs optional j2ee web logic hot deployment tool valid_actions", "$ i0 = lengthof $ r3", "if i1 > = $ i0 goto label3", "$ r4 = org apache tool ant taskdefs optional j2ee web logic hot deployment tool valid_actions", "$ r5 = $ r4 [ i1 ]", "$ z0 = r1 equal $ r5", "if $ z0 == 0 goto label2", "z1 = 1", "goto label3", "label return z1", "if $ z0 == 0 goto label2", "label i1 = i1 + 1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional javacc j j doc r0", "r2 javacc home = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r5 = org apache tool ant taskdefs optional javacc j j tree r0", "$ r1 = r5 optional attrs", "if z0 == 0 goto label1", "$ r4 = java lang boolean true", "goto label2", "label $ r1 put \\ `` node_factory\\", "return", "if z0 == 0 goto label1", "label $ r4 = java lang boolean false"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r5 = org apache tool ant taskdefs optional javacc j j tree r0", "$ r1 = r5 optional attrs", "if z0 == 0 goto label1", "$ r4 = java lang boolean true", "goto label2", "label $ r1 put \\ `` visitor\\", "return", "if z0 == 0 goto label1", "label $ r4 = java lang boolean false"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r4 = new org apache tool ant taskdefs optional javah $ class argument", "r5 = org apache tool ant taskdefs optional javah r0", "specialinvoke r4 < init > r5", "r6 = org apache tool ant taskdefs optional javah r0", "$ r3 = r6 class", "$ r3 add element r4", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r31 = new java util array list", "specialinvoke r31 < init >", "r33 = org apache tool ant taskdefs optional javah r0", "$ r5 = r33 cl", "if $ r5 == null goto label2", "r32 = new java util string tokenizer", "r34 = org apache tool ant taskdefs optional javah r0", "$ r23 = r34 cl", "specialinvoke r32 < init > $ r23 \\", "label $ z3 = r32 have more token", "if $ z3 == 0 goto label2", "$ r24 = r32 next token", "$ r25 = $ r24 trim", "r31 add $ r25", "goto label1", "if $ z3 == 0 goto label2", "label r35 = org apache tool ant taskdefs optional javah r0", "$ r6 = r35 file", "$ i0 = $ r6 size", "if $ i0 < = 0 goto label6", "r36 = org apache tool ant taskdefs optional javah r0", "$ r14 = r36 file", "r27 = $ r14 element", "label $ z1 = r27 have more element", "if $ z1 == 0 goto label6", "$ r15 = r27 next element", "r28 = org apache tool ant type file set $ r15", "r37 = org apache tool ant taskdefs optional javah r0", "$ r16 = r37 get project", "$ r17 = r28 get directory scanner $ r16", "r2 = $ r17 get include file", "i5 = 0", "label $ i2 = lengthof r2", "if i5 > = $ i2 goto label5", "$ r18 = r2 [ i5 ]", "$ r19 = $ r18 replace 92 46", "$ r20 = $ r19 replace 47 46", "$ r21 = r2 [ i5 ]", "$ i3 = $ r21 length", "$ i4 = $ i3 - 6", "r3 = $ r20 substring 0 $ i4", "r31 add r3", "i5 = i5 + 1", "goto label4", "if i5 > = $ i2 goto label5", "label goto label3", "if $ z1 == 0 goto label6", "label r38 = org apache tool ant taskdefs optional javah r0", "$ r7 = r38 class", "r29 = $ r7 element", "label $ z5 = r29 have more element", "if $ z5 == 0 goto label8", "$ r12 = r29 next element", "r30 = org apache tool ant taskdefs optional javah $ class argument $ r12", "$ r13 = r30 get name", "r31 add $ r13", "goto label7", "if $ z5 == 0 goto label8", "label $ i1 = r31 size", "$ r8 = newarray java lang string [ $ i1 ]", "$ r9 = r31 to array $ r8", "$ r10 = java lang string [ ] $ r9", "$ r11 = java lang string [ ] $ r10", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [], [59], [60], [61], [62], [63], [64], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional javah r0", "$ r1 = r2 classpath", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional javah r0", "$ r1 = r2 bootclasspath", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 == null goto label1", "$ i0 = r2 length", "if $ i0 == 0 goto label1", "$ r3 = r1 create argument", "$ r3 set value r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant taskdefs optional jsp jsp c r0", "$ i0 = r1 verbose", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional jsp jsp c r0", "r2 log \\ `` uribase be currently an unused parameter\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = org apache tool ant taskdefs optional jsp jsp c r0", "$ r1 = r7 compiler classpath", "if $ r1 ! = null goto label1", "r6 = new org apache tool ant type path", "r8 = org apache tool ant taskdefs optional jsp jsp c r0", "$ r5 = r8 get project", "specialinvoke r6 < init > $ r5", "r9 = org apache tool ant taskdefs optional jsp jsp c r0", "r9 compiler classpath = r6", "label r10 = org apache tool ant taskdefs optional jsp jsp c r0", "$ r2 = r10 compiler classpath", "$ r3 = $ r2 create path", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional jsp jsp c r0", "$ r1 = r2 web app", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r11 = org apache tool ant taskdefs optional jsp jsp c r0", "$ r3 = r11 java file", "if $ r3 == null goto label3", "r12 = org apache tool ant taskdefs optional jsp jsp c r0", "$ r4 = r12 java file", "r1 = $ r4 element", "label $ z0 = r1 have more element", "if $ z0 == 0 goto label3", "$ r5 = r1 next element", "r2 = java io file $ r5", "$ z1 = r2 exist", "if $ z1 == 0 goto label2", "$ l0 = r2 length", "$ b1 = $ l0 cmp 0l", "if $ b1 ! = 0 goto label2", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r7 = r10 append \\ `` delete empty output file \\ ``", "$ r8 = $ r7 append r2", "$ r9 = $ r8 to string", "r13 = org apache tool ant taskdefs optional jsp jsp c r0", "r13 log $ r9", "r2 delete", "label goto label1", "if $ z0 == 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional native2 ascii r0", "$ r1 = r2 encode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional net set proxy r0", "r2 non proxy host = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional pvc pvc r0", "$ r1 = r2 revision", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs optional pvc pvc r0", "$ r2 = r3 pvc project", "$ r2 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional rename extension r0", "r2 to extension = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r11 = new org apache tool ant taskdefs execute", "specialinvoke r11 < init > r2 null", "r12 = org apache tool ant taskdefs optional rpm r0", "$ r5 = r12 get project", "r11 set ant run $ r5", "r13 = org apache tool ant taskdefs optional rpm r0", "$ r6 = r13 top dir", "if $ r6 ! = null goto label1", "r14 = org apache tool ant taskdefs optional rpm r0", "$ r9 = r14 get project", "$ r10 = $ r9 get base dir", "r15 = org apache tool ant taskdefs optional rpm r0", "r15 top dir = $ r10", "label r16 = org apache tool ant taskdefs optional rpm r0", "$ r7 = r16 top dir", "r11 set work directory $ r7", "$ r8 = r1 get commandline", "r11 set commandline $ r8", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "label r17 = org apache tool ant taskdefs optional schema validate r0", "$ r2 = r17 get xml reader", "$ r2 set feature r1 z0", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = org apache tool ant taskdefs optional script script def base r0", "$ r1 = specialinvoke r4 get script", "r5 = org apache tool ant taskdefs optional script script def base r0", "$ r3 = r5 attribute", "r6 = org apache tool ant taskdefs optional script script def base r0", "$ r2 = r6 nest element map", "r7 = org apache tool ant taskdefs optional script script def base r0", "$ r1 execute script $ r3 $ r2 r7", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs optional so so r0", "r1 verbose = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional so so r0", "r2 comment = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional so so r0", "$ z0 = r2 no compress", "if $ z0 == 0 goto label1", "$ r1 = \\ `` -nocompress\\ ``", "goto label2", "label return $ r1", "if $ z0 == 0 goto label1", "label $ r1 = \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "specialinvoke r0 set internal recursive z0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs optional test funtest r0", "$ r2 = r3 application", "r4 = org apache tool ant taskdefs optional test funtest r0", "specialinvoke r4 log override \\ `` application\\", "r5 = org apache tool ant taskdefs optional test funtest r0", "r5 application = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs optional test funtest r0", "$ r2 = r3 teardown", "r4 = org apache tool ant taskdefs optional test funtest r0", "specialinvoke r4 log override \\ `` teardown\\", "r5 = org apache tool ant taskdefs optional test funtest r0", "r5 teardown = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs optional test funtest r0", "r1 fail on teardown error = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional tra x liaison r0", "r2 factory name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache tool ant taskdefs optional tra x liaison r0", "$ r3 = r5 params", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional tra x liaison r0", "$ z0 = r2 suppress warning", "if $ z0 ! = 0 goto label1", "r3 = org apache tool ant taskdefs optional tra x liaison r0", "specialinvoke r3 log error r1 \\ `` warning\\ ``", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r9 = new org apache tool ant build exception", "r8 = new java lang string builder", "specialinvoke r8 < init >", "r10 = org apache tool ant taskdefs optional unix abstract access task r0", "$ r3 = r10 get task type", "$ r4 = r8 append $ r3", "$ r5 = $ r4 append \\ `` doesn\\'t support the addsourcefile attribute\\ ``", "$ r6 = $ r5 to string", "r11 = org apache tool ant taskdefs optional unix abstract access task r0", "$ r7 = r11 get location", "specialinvoke r9 < init > $ r6 $ r7", "r12 = java lang throwable r9", "throw r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r13 = org apache tool ant taskdefs optional v msvss r0", "r1 = r13 build cmd line", "r14 = org apache tool ant taskdefs optional v msvss r0", "i0 = specialinvoke r14 run r1", "$ z0 = org apache tool ant taskdefs execute be failure i0", "if $ z0 == 0 goto label1", "r15 = org apache tool ant taskdefs optional v msvss r0", "$ z1 = specialinvoke r15 get fail on error", "if $ z1 == 0 goto label1", "r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r4 = r11 append \\ `` fail execute \\ ``", "r16 = org apache tool ant taskdefs optional v msvss r0", "$ r5 = specialinvoke r16 format command line r1", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 append \\ `` with a return code of \\ ``", "$ r8 = $ r7 append i0", "r2 = $ r8 to string", "r12 = new org apache tool ant build exception", "r17 = org apache tool ant taskdefs optional v msvss r0", "$ r10 = r17 get location", "specialinvoke r12 < init > r2 $ r10", "r18 = java lang throwable r12", "throw r18", "if $ z1 == 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional v msvss r0", "r2 date = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional v msvss r0", "r2 from date = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "specialinvoke r0 set internal get local copy z0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set internal label r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set internal user r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java text simple date format", "specialinvoke $ r2 < init > r1", "specialinvoke r0 set internal date format $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set internal version r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set internal comment r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs optional window attrib r0", "specialinvoke r1 add arg z0 \\ `` r\\ ``", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional x m l validate task r0", "r2 reader class name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional x m l validate task r0", "r2 file = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = new org apache tool ant taskdefs optional x m l validate task $ property", "specialinvoke r4 < init >", "r5 = org apache tool ant taskdefs optional x m l validate task r0", "$ r3 = r5 property list", "$ r3 add element r4", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs rmic sun rmic r0", "$ r2 = r3 filter jvm compiler args r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org apache tool ant taskdefs rmic r0", "$ r1 = r4 get destdir", "if $ r1 == null goto label1", "r5 = org apache tool ant taskdefs rmic r0", "$ r3 = r5 get destdir", "return $ r3", "if $ r1 == null goto label1", "label r6 = org apache tool ant taskdefs rmic r0", "$ r2 = r6 get base", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant taskdefs sign jar r0", "$ z0 = r1 force", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs s q l exec r0", "$ r1 = r2 error property", "r3 = org apache tool ant taskdefs s q l exec r0", "specialinvoke r3 set property $ r1 \\ `` true\\ ``", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant taskdefs wait for r0", "$ l1 = r1 check every", "r2 = org apache tool ant taskdefs wait for r0", "$ l0 = r2 check every multiplier", "$ l2 = $ l1 * $ l0", "return $ l2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs x s l t process r0", "$ r2 = r3 sys property", "$ r2 add variable r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs zip r0", "r2 create unicode extra field = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r6 = new org apache tool ant type optional depend classfile set", "r7 = org apache tool ant type optional depend classfile set r0", "$ z0 = r7 be reference", "if $ z0 == 0 goto label1", "r8 = org apache tool ant type optional depend classfile set r0", "$ r2 = r8 get project", "r9 = org apache tool ant type optional depend classfile set r0", "$ r3 = r9 get ref $ r2", "$ r4 = org apache tool ant type optional depend classfile set $ r3", "$ r5 = org apache tool ant type optional depend classfile set $ r4", "goto label2", "label r10 = org apache tool ant type optional depend classfile set $ r5", "specialinvoke r6 < init > r10", "return r6", "if $ z0 == 0 goto label1", "label $ r5 = r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant type optional script mapper r0", "$ r2 = r3 file", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type optional script selector r0", "$ r1 = r2 filename", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type optional script selector r0", "$ r1 = r2 file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = class \\ `` lorg apache tool ant type resource appendable \\ ``", "$ z0 = $ r3 be assignable from r1", "if $ z0 == 0 goto label2", "r12 = org apache tool ant type resource content transform resource r0", "$ z2 = r12 be append support", "if $ z2 == 0 goto label1", "r13 = org apache tool ant type resource content transform resource r0", "$ r6 = r13 get resource", "$ r7 = $ r6 a class \\ `` lorg apache tool ant type resource appendable \\ ``", "r2 = org apache tool ant type resource appendable $ r7", "if r2 == null goto label1", "r11 = new org apache tool ant type resource content transform resource $ 1", "r14 = org apache tool ant type resource content transform resource r0", "specialinvoke r11 < init > r14 r2", "$ r9 = r1 cast r11", "return $ r9", "if r2 == null goto label1", "label return null", "if $ z0 == 0 goto label2", "label $ r4 = class \\ `` lorg apache tool ant type resource file provider \\ ``", "$ z1 = $ r4 be assignable from r1", "if $ z1 == 0 goto label3", "$ r10 = null", "goto label4", "label return $ r10", "if $ z1 == 0 goto label3", "label r15 = org apache tool ant type resource content transform resource r0", "$ r5 = r15 get resource", "$ r10 = $ r5 a r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache tool ant type resource map resource collection r0", "$ z0 = r7 be reference", "if $ z0 == 0 goto label1", "r8 = org apache tool ant type resource map resource collection r0", "$ r5 = r8 no child allow", "r9 = java lang throwable $ r5", "throw r9", "if $ z0 == 0 goto label1", "label r10 = org apache tool ant type resource map resource collection r0", "$ r2 = r10 nest", "if $ r2 == null goto label2", "r6 = new org apache tool ant build exception", "r11 = org apache tool ant type resource map resource collection r0", "$ r4 = r11 get location", "specialinvoke r6 < init > \\ `` only one resource collection can be nest into mappedresources\\", "r12 = java lang throwable r6", "throw r12", "if $ r2 == null goto label2", "label r13 = org apache tool ant type resource map resource collection r0", "r13 set check 0", "r14 = org apache tool ant type resource map resource collection r0", "r14 cache coll = null", "r15 = org apache tool ant type resource map resource collection r0", "r15 nest = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant type resource resource list r0", "$ z0 = r4 be reference", "if $ z0 == 0 goto label1", "r5 = org apache tool ant type resource resource list r0", "$ r3 = r5 no child allow", "r6 = java lang throwable $ r3", "throw r6", "if $ z0 == 0 goto label1", "label r7 = org apache tool ant type resource resource list r0", "$ r2 = r7 text document", "$ r2 add r1", "r8 = org apache tool ant type resource resource list r0", "r8 set check 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type resource selector name r0", "$ r1 = r2 regex", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type resource size limit collection r0", "$ r1 = r2 get resource collection", "i0 = $ r1 size", "r3 = org apache tool ant type resource size limit collection r0", "i1 = r3 get valid count", "if i0 > = i1 goto label1", "$ i2 = i0", "goto label2", "label return $ i2", "if i0 > = i1 goto label1", "label $ i2 = i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tool ant type resource size limit collection r0", "i0 = r3 get count", "if i0 > = 0 goto label1", "r2 = new org apache tool ant build exception", "specialinvoke r2 < init > \\ `` size-limited collection count should be set to an int > = 0\\ ``", "r4 = java lang throwable r2", "throw r4", "if i0 > = 0 goto label1", "label return i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant type selector select selector r0", "r2 unless condition = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r16 = new java lang string builder", "specialinvoke r16 < init >", "i5 = 0", "label r18 = org apache tool ant type selector tokenized pattern r0", "$ r4 = r18 tokenized pattern", "$ i0 = lengthof $ r4", "if i5 > = $ i0 goto label4", "r19 = org apache tool ant type selector tokenized pattern r0", "$ r9 = r19 tokenized pattern", "$ r10 = $ r9 [ i5 ]", "$ z0 = org apache tool ant type selector selector utils have wildcards $ r10", "if $ z0 == 0 goto label2", "goto label4", "label if i5 ! = 0 goto label5", "$ r8 = org apache tool ant type selector tokenized path empty_path", "return $ r8", "label if i5 ! = 0 goto label5", "label r2 = newarray java lang string [ i5 ]", "r21 = org apache tool ant type selector tokenized pattern r0", "$ r5 = r21 tokenized pattern", "java lang system arraycopy $ r5 0 r2 0 i5", "r17 = new org apache tool ant type selector tokenized path", "$ r7 = r16 to string", "specialinvoke r17 < init > $ r7 r2", "return r17", "if $ z0 == 0 goto label2", "label if i5 < = 0 goto label3", "$ i1 = r16 length", "$ i2 = $ i1 - 1", "$ c3 = r16 char at $ i2", "$ c4 = java io file separator char", "if $ c3 == $ c4 goto label3", "$ r12 = java io file separator", "r16 append $ r12", "label r20 = org apache tool ant type selector tokenized pattern r0", "$ r14 = r20 tokenized pattern", "$ r15 = $ r14 [ i5 ]", "r16 append $ r15", "i5 = i5 + 1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], []]}
{"nodes": ["r0 = @ parameter0", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "r2 = r0 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "r3 = r2 next", "$ i0 = $ r4 length", "if $ i0 == 0 goto label2", "$ r4 append \\", "label $ r4 append r3", "goto label1", "if $ z0 == 0 goto label3", "label $ r5 = $ r4 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return", "if r1 ! = null goto label1", "label r4 = org apache tool ant util depend abstract analyzer r0", "$ r2 = r4 root class", "$ z0 = $ r2 contain r1", "if $ z0 ! = 0 goto label2", "r5 = org apache tool ant util depend abstract analyzer r0", "$ r3 = r5 root class", "$ r3 add element r1", "label return"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org apache tool ant util file utils read fully r0", "if r1 ! = null goto label1", "$ r2 = \\ `` \\ ``", "goto label2", "label return $ r2", "if r1 ! = null goto label1", "label $ r2 = r1"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["$ r0 = java lang system err", "$ r1 = org apache tool ant util keep alive output stream wrap $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return \\ `` javax\\ ``"], "adj": [[1], []]}
{"nodes": ["z0 = @ parameter0", "$ i0 = org apache tool ant util regexp regexp util a option z0 0 0", "return $ i0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org apache tool ant type resource file resource", "if $ z0 ! = 0 goto label1", "if r0 ! = null goto label2", "label $ r2 = org apache tool ant type resource file resource r0", "return $ r2", "if r0 ! = null goto label2", "label $ r3 = new org apache tool ant type resource file resource", "$ r4 = r0 get file", "specialinvoke $ r3 < init > $ r4", "$ r5 = org apache tool ant project get project r0", "$ r3 set project $ r5", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant util script runner helper r0", "r2 text = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get parent file", "$ r3 = r1 get name", "r4 = org apache tool ant util symbolic link utils r0", "$ z0 = r4 be dangle symbolic link $ r2 $ r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant util worker ant r0", "$ r1 = r2 build exception", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool tar tar entry r0", "$ z0 = r1 be extend", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool tar tar entry r0", "$ b0 = r1 link flag", "if $ b0 ! = 51 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b0 ! = 51 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool tar tar entry r0", "$ b0 = r1 link flag", "if $ b0 ! = 52 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b0 ! = 52 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "c0 = @ parameter1", "if c0 < 0 goto label1", "if c0 > = 128 goto label1", "$ b2 = byte c0", "r1 put $ b2", "return 1", "if c0 > = 128 goto label1", "label r5 = org apache tool zip simple8 bit zip encode r0", "r2 = specialinvoke r5 encode high char c0", "if r2 ! = null goto label2", "return 0", "if r2 ! = null goto label2", "label $ b1 = r2 code", "r1 put $ b1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache tool zip zip entry r0", "$ r2 = r9 extra field", "if $ r2 ! = null goto label1", "r7 = new java util no such element exception", "specialinvoke r7 < init >", "throw r7", "if $ r2 ! = null goto label1", "label r10 = org apache tool zip zip entry r0", "$ r3 = r10 extra field", "$ r4 = $ r3 remove r1", "if $ r4 ! = null goto label2", "r8 = new java util no such element exception", "specialinvoke r8 < init >", "throw r8", "if $ r4 ! = null goto label2", "label r11 = org apache tool zip zip entry r0", "r11 set extra", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org antlr v4 runtime atn lexer indexed custom action r0", "$ r1 = r2 action", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org antlr v4 runtime dfa dfa r0", "$ z1 = r3 be precedence dfa", "if z0 == $ z1 goto label1", "r2 = new java lang unsupported operation exception", "specialinvoke r2 < init > \\ `` the precedence dfa field can not change after a dfa be construct \\ ``", "throw r2", "if z0 == $ z1 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = r0 goto label1", "return 1", "if r1 ! = r0 goto label1", "label $ z0 = r1 instanceof org antlr v4 runtime misc integer list", "if $ z0 ! = 0 goto label2", "return 0", "if $ z0 ! = 0 goto label2", "label r2 = org antlr v4 runtime misc integer list r1", "r5 = org antlr v4 runtime misc integer list r0", "$ i1 = r5 _size", "$ i0 = r2 _size", "if $ i1 == $ i0 goto label3", "label i5 = 0", "label r6 = org antlr v4 runtime misc integer list r0", "$ i2 = r6 _size", "if i5 > = $ i2 goto label6", "r7 = org antlr v4 runtime misc integer list r0", "$ r3 = r7 _data", "$ i4 = $ r3 [ i5 ]", "$ r4 = r2 _data", "$ i3 = $ r4 [ i5 ]", "if $ i4 == $ i3 goto label5", "label i5 = i5 + 1", "goto label4", "if i5 > = $ i2 goto label6", "label return 1"], "adj": [[1], [2], [3], [], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org antlr v4 runtime misc interval r0", "$ i1 = r2 a", "$ i0 = r1 a", "if $ i1 > = $ i0 goto label1", "r3 = org antlr v4 runtime misc interval r0", "$ i3 = r3 b", "$ i2 = r1 a", "if $ i3 > = $ i2 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i3 > = $ i2 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["$ i0 = org antlr v4 runtime misc murmur hash initialize 0", "return $ i0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i3 = org antlr v4 runtime misc murmur hash initialize i0", "i1 = lengthof r0", "i4 = 0", "label if i4 > = i1 goto label2", "r2 = r0 [ i4 ]", "i3 = org antlr v4 runtime misc murmur hash update i3 r2", "i4 = i4 + 1", "goto label1", "label if i4 > = i1 goto label2", "label $ i2 = lengthof r0", "i5 = org antlr v4 runtime misc murmur hash finish i3 $ i2", "return i5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org antlr v4 runtime parser r0", "r2 _input = null", "r3 = org antlr v4 runtime parser r0", "r3 reset", "r4 = org antlr v4 runtime parser r0", "r4 _input = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r6 = org antlr v4 runtime parser r0", "r6 set state i0", "r7 = org antlr v4 runtime parser r0", "r7 _ctx = r1", "r8 = org antlr v4 runtime parser r0", "$ r3 = r8 _ctx", "r9 = org antlr v4 runtime parser r0", "$ r2 = r9 _input", "$ r4 = $ r2 lt 1", "$ r3 start = $ r4", "r10 = org antlr v4 runtime parser r0", "$ z0 = r10 _build parse tree", "if $ z0 == 0 goto label1", "r11 = org antlr v4 runtime parser r0", "r11 add context to parse tree", "label r12 = org antlr v4 runtime parser r0", "$ r5 = r12 _parse listener", "if $ r5 == null goto label2", "r13 = org antlr v4 runtime parser r0", "r13 trigger enter rule event", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return 1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r1 test r0", "if $ z0 == 0 goto label1", "return r0", "if $ z0 == 0 goto label1", "label if r0 ! = null goto label2", "return null", "label if r0 ! = null goto label2", "label i0 = r0 get child count", "i1 = 0", "label if i1 > = i0 goto label5", "$ r3 = r0 get child i1", "r2 = org antlr v4 runtime tree tree find node such that $ r3 r1", "if r2 == null goto label4", "return r2", "if r2 == null goto label4", "label i1 = i1 + 1", "goto label3", "label if i1 > = i0 goto label5", "label return null"], "adj": [[1], [2], [3], [4], [], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r4 = r0 annotation", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = org jboss jandex annotation instance $ r5", "$ r6 = r3 target", "$ r7 = $ r6 kind", "$ r8 = org jboss jandex annotation target $ kind method_parameter", "$ z1 = $ r7 equal $ r8", "if $ z1 == 0 goto label2", "$ r9 = r3 name", "$ z2 = $ r9 equal r1", "if $ z2 == 0 goto label2", "return r3", "if $ z2 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org objectweb asm class visitor r0", "$ r3 = r5 cv", "if $ r3 == null goto label1", "r6 = org objectweb asm class visitor r0", "$ r4 = r6 cv", "$ r4 visit source r1 r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "z0 = @ parameter3", "r8 = org objectweb asm class visitor r0", "$ i1 = r8 api", "if $ i1 > = 327680 goto label1", "r7 = new java lang unsupported operation exception", "specialinvoke r7 < init > \\ `` this feature require asm5\\ ``", "throw r7", "if $ i1 > = 327680 goto label1", "label r9 = org objectweb asm class visitor r0", "$ r3 = r9 cv", "if $ r3 == null goto label2", "r10 = org objectweb asm class visitor r0", "$ r4 = r10 cv", "$ r5 = $ r4 visit type annotation i0 r1 r2 z0", "return $ r5", "if $ r3 == null goto label2", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r2 = org objectweb asm constant dynamic r0", "$ r1 = r2 descriptor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org objectweb asm field visitor r0", "$ r1 = r3 fv", "if $ r1 == null goto label1", "r4 = org objectweb asm field visitor r0", "$ r2 = r4 fv", "$ r2 visit end", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org objectweb asm handle r0", "$ r1 = r2 descriptor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r5 = org objectweb asm method visitor r0", "$ r2 = r5 mv", "if $ r2 == null goto label1", "r6 = org objectweb asm method visitor r0", "$ r3 = r6 mv", "$ r4 = $ r3 visit annotation r1 z0", "return $ r4", "if $ r2 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "z0 = @ parameter1", "r3 = org objectweb asm method visitor r0", "$ r1 = r3 mv", "if $ r1 == null goto label1", "r4 = org objectweb asm method visitor r0", "$ r2 = r4 mv", "$ r2 visit annotable parameter count i0 z0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "r5 = org objectweb asm method visitor r0", "$ r2 = r5 mv", "if $ r2 == null goto label1", "r6 = org objectweb asm method visitor r0", "$ r3 = r6 mv", "$ r4 = $ r3 visit parameter annotation i0 r1 z0", "return $ r4", "if $ r2 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r3 = org objectweb asm method visitor r0", "$ r1 = r3 mv", "if $ r1 == null goto label1", "r4 = org objectweb asm method visitor r0", "$ r2 = r4 mv", "$ r2 visit code", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "z0 = @ parameter3", "r6 = org objectweb asm record component visitor r0", "$ r3 = r6 delegate", "if $ r3 == null goto label1", "r7 = org objectweb asm record component visitor r0", "$ r4 = r7 delegate", "$ r5 = $ r4 visit type annotation i0 r1 r2 z0", "return $ r5", "if $ r3 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org objectweb asm class visitor r0", "$ i0 = r6 api", "if $ i0 > = 589824 goto label1", "r5 = new java lang unsupported operation exception", "specialinvoke r5 < init > \\ `` permit subclass require asm9\\ ``", "throw r5", "if $ i0 > = 589824 goto label1", "label r7 = org objectweb asm class visitor r0", "$ r2 = r7 cv", "if $ r2 == null goto label2", "r8 = org objectweb asm class visitor r0", "$ r3 = r8 cv", "$ r3 visit permit subclass r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org objectweb asm tree analysis analyzer r0", "$ r1 = r3 handler", "$ r2 = $ r1 [ i0 ]", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "return 1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org objectweb asm tree insn list r0", "$ r1 = r2 first insn", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 0 goto label1", "r7 = org objectweb asm tree insn list r0", "$ i1 = r7 size", "if i0 < $ i1 goto label2", "label r6 = new java lang index out of bound exception", "specialinvoke r6 < init >", "throw r6", "if i0 < $ i1 goto label2", "label r8 = org objectweb asm tree insn list r0", "$ r2 = r8 cache", "if $ r2 ! = null goto label3", "r9 = org objectweb asm tree insn list r0", "$ r5 = r9 to array", "r10 = org objectweb asm tree insn list r0", "r10 cache = $ r5", "label r11 = org objectweb asm tree insn list r0", "$ r3 = r11 cache", "$ r4 = $ r3 [ i0 ]", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org objectweb asm tree insn list r0", "r2 = r3 first insn", "label if r2 == null goto label2", "r2 accept r1", "r2 = r2 next insn", "goto label1", "label if r2 == null goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org objectweb asm tree insn list r0", "$ i0 = r4 size", "$ i1 = $ i0 + 1", "r5 = org objectweb asm tree insn list r0", "r5 size = $ i1", "r3 = r1 previous insn", "if r3 ! = null goto label1", "r6 = org objectweb asm tree insn list r0", "r6 first insn = r2", "goto label2", "label r1 previous insn = r2", "r2 next insn = r1", "r2 previous insn = r3", "r7 = org objectweb asm tree insn list r0", "r7 cache = null", "r2 index = 0", "return", "if r3 ! = null goto label1", "label r3 next insn = r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r22 = org objectweb asm tree local variable annotation node r0", "$ r5 = r22 start", "$ i1 = $ r5 size", "r2 = newarray org objectweb asm label [ $ i1 ]", "r23 = org objectweb asm tree local variable annotation node r0", "$ r6 = r23 end", "$ i2 = $ r6 size", "r3 = newarray org objectweb asm label [ $ i2 ]", "r24 = org objectweb asm tree local variable annotation node r0", "$ r7 = r24 index", "$ i3 = $ r7 size", "r4 = newarray int [ $ i3 ]", "i6 = 0", "i0 = lengthof r2", "label if i6 > = i0 goto label2", "r25 = org objectweb asm tree local variable annotation node r0", "$ r11 = r25 start", "$ r12 = $ r11 get i6", "$ r13 = org objectweb asm tree label node $ r12", "$ r14 = $ r13 get label", "r2 [ i6 ] = $ r14", "r26 = org objectweb asm tree local variable annotation node r0", "$ r15 = r26 end", "$ r16 = $ r15 get i6", "$ r17 = org objectweb asm tree label node $ r16", "$ r18 = $ r17 get label", "r3 [ i6 ] = $ r18", "r27 = org objectweb asm tree local variable annotation node r0", "$ r19 = r27 index", "$ r20 = $ r19 get i6", "$ r21 = java lang integer $ r20", "$ i5 = $ r21 int value", "r4 [ i6 ] = $ i5", "i6 = i6 + 1", "goto label1", "label if i6 > = i0 goto label2", "label r28 = org objectweb asm tree local variable annotation node r0", "$ i4 = r28 type ref", "r29 = org objectweb asm tree local variable annotation node r0", "$ r9 = r29 type path", "r30 = org objectweb asm tree local variable annotation node r0", "$ r8 = r30 desc", "$ r10 = r1 visit local variable annotation $ i4 $ r9 r2 r3 r4 $ r8 z0", "r31 = org objectweb asm tree local variable annotation node r0", "r31 accept $ r10", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org objectweb asm tree module require node r0", "$ r3 = r4 module", "r5 = org objectweb asm tree module require node r0", "$ i0 = r5 access", "r6 = org objectweb asm tree module require node r0", "$ r2 = r6 version", "r1 visit require $ r3 $ i0 $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r3 = org assertj core api abstract assert r0", "$ r1 = r3 info", "$ r1 use hexadecimal representation", "r4 = org assertj core api abstract assert r0", "$ r2 = r4 myself", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r7 = org assertj core api abstract character assert r0", "$ r4 = r7 character", "r8 = org assertj core api abstract character assert r0", "$ r3 = r8 info", "r9 = org assertj core api abstract character assert r0", "$ r1 = r9 actual", "$ r2 = java lang character $ r1", "r10 = org assertj core api assertion info $ r3", "$ r4 assert upper case r10 $ r2", "r11 = org assertj core api abstract character assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api abstract character assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r13 = org assertj core api abstract map assert r0", "$ r5 = r13 map", "r14 = org assertj core api abstract map assert r0", "$ r6 = r14 info", "r15 = org assertj core api abstract map assert r0", "$ r3 = r15 actual", "$ r7 = java util map $ r3", "$ r4 = newarray org assertj core data map entry [ 1 ]", "$ r8 = org assertj core data map entry entry r1 r2", "$ r4 [ 0 ] = $ r8", "$ r9 = org assertj core util array array $ r4", "$ r10 = java util map $ entry [ ] $ r9", "r16 = org assertj core api assertion info $ r6", "$ r5 assert do not contain r16 $ r7 $ r10", "r17 = org assertj core api abstract map assert r0", "$ r11 = r17 myself", "$ r12 = org assertj core api abstract map assert $ r11", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org assertj core api abstract object array assert r0", "$ r5 = r8 array", "r9 = org assertj core api abstract object array assert r0", "$ r4 = r9 info", "r10 = org assertj core api abstract object array assert r0", "$ r2 = r10 actual", "$ r3 = java lang object [ ] $ r2", "r11 = org assertj core api assertion info $ r4", "$ r5 assert contain exactly r11 $ r3 r1", "r12 = org assertj core api abstract object array assert r0", "$ r6 = r12 myself", "$ r7 = org assertj core api abstract object array assert $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org assertj core api abstract object array assert r0", "$ r6 = r9 array", "r10 = org assertj core api abstract object array assert r0", "$ r5 = r10 info", "r11 = org assertj core api abstract object array assert r0", "$ r3 = r11 actual", "$ r4 = java lang object [ ] $ r3", "r12 = org assertj core api assertion info $ r5", "$ r6 assert contain r12 $ r4 r1 r2", "r13 = org assertj core api abstract object array assert r0", "$ r7 = r13 myself", "$ r8 = org assertj core api abstract object array assert $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org assertj core api abstract object array assert r0", "$ r5 = r8 array", "r9 = org assertj core api abstract object array assert r0", "$ r4 = r9 info", "r10 = org assertj core api abstract object array assert r0", "$ r2 = r10 actual", "$ r3 = java lang object [ ] $ r2", "r11 = org assertj core api assertion info $ r4", "$ r5 assert start with r11 $ r3 r1", "r12 = org assertj core api abstract object array assert r0", "$ r6 = r12 myself", "$ r7 = org assertj core api abstract object array assert $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org assertj core api abstract object array assert r0", "$ r5 = r8 array", "r9 = org assertj core api abstract object array assert r0", "$ r4 = r9 info", "r10 = org assertj core api abstract object array assert r0", "$ r2 = r10 actual", "$ r3 = java lang object [ ] $ r2", "r11 = org assertj core api assertion info $ r4", "$ r5 assert be not r11 $ r3 r1", "r12 = org assertj core api abstract object array assert r0", "$ r6 = r12 myself", "$ r7 = org assertj core api abstract object array assert $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r5 = new org assertj core internal recursive field by field comparator", "r6 = org assertj core api abstract object array assert r0", "$ r2 = r6 comparators for element property or field name", "r7 = org assertj core api abstract object array assert r0", "$ r3 = r7 get comparators for element property or field type", "specialinvoke r5 < init > $ r2 $ r3", "r8 = org assertj core api abstract object array assert r0", "r9 = java util comparator r5", "$ r4 = specialinvoke r8 use extend by type element comparator r9", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new org assertj core internal ignoring field comparator", "r7 = org assertj core api abstract object array assert r0", "$ r3 = r7 comparators for element property or field name", "r8 = org assertj core api abstract object array assert r0", "$ r4 = r8 get comparators for element property or field type", "specialinvoke r6 < init > $ r3 $ r4 r1", "r9 = org assertj core api abstract object array assert r0", "r10 = java util comparator r6", "$ r5 = specialinvoke r9 use extend by type element comparator r10", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = org assertj core internal failure instance", "r2 = $ r3 failure r1", "r5 = org assertj core api abstract soft assertion r0", "$ r4 = r5 proxy", "$ r4 collect error r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org assertj core api abstract soft assertion r0", "$ r2 = specialinvoke r3 add line number to error message r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java nio charset charset default charset", "$ r2 = org assertj core util file line of r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org assertj core api atomic boolean assert r0", "r4 be not null", "r5 = org assertj core api atomic boolean assert r0", "specialinvoke r5 assert equal 0", "r6 = org assertj core api atomic boolean assert r0", "$ r2 = r6 myself", "$ r3 = org assertj core api atomic boolean assert $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org assertj core api atomic integer array assert r0", "$ r4 = r7 array", "r8 = org assertj core api atomic integer array assert r0", "$ r3 = r8 info", "r9 = org assertj core api atomic integer array assert r0", "$ r2 = r9 array", "r10 = org assertj core api assertion info $ r3", "$ r4 assert contain exactly r10 $ r2 r1", "r11 = org assertj core api atomic integer array assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api atomic integer array assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r6 = org assertj core api atomic integer array assert r0", "$ r3 = r6 array", "r7 = org assertj core api atomic integer array assert r0", "$ r2 = r7 info", "r8 = org assertj core api atomic integer array assert r0", "$ r1 = r8 array", "r9 = org assertj core api assertion info $ r2", "$ r3 assert have size r9 $ r1 i0", "r10 = org assertj core api atomic integer array assert r0", "$ r4 = r10 myself", "$ r5 = org assertj core api atomic integer array assert $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org assertj core api atomic integer array assert r0", "$ r4 = r7 array", "r8 = org assertj core api atomic integer array assert r0", "$ r3 = r8 info", "r9 = org assertj core api atomic integer array assert r0", "$ r2 = r9 array", "r10 = org assertj core api assertion info $ r3", "$ r4 assert contain only once r10 $ r2 r1", "r11 = org assertj core api atomic integer array assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api atomic integer array assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r7 = org assertj core api atomic integer array assert r0", "$ r4 = r7 array", "r8 = org assertj core api atomic integer array assert r0", "$ r3 = r8 info", "r9 = org assertj core api atomic integer array assert r0", "$ r2 = r9 array", "r10 = org assertj core api assertion info $ r3", "$ r4 assert do not contain r10 $ r2 i0 r1", "r11 = org assertj core api atomic integer array assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api atomic integer array assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r11 = org assertj core api atomic integer assert r0", "r11 be not null", "r12 = org assertj core api atomic integer assert r0", "$ r2 = r12 integer", "r13 = org assertj core api atomic integer assert r0", "$ r3 = r13 get writable assertion info", "r14 = org assertj core api atomic integer assert r0", "$ r4 = r14 actual", "$ r5 = java util concurrent atomic atomic integer $ r4", "$ i2 = $ r5 get", "$ r6 = java lang integer value of $ i2", "$ r7 = java lang integer value of i0", "$ r8 = java lang integer value of i1", "r15 = org assertj core api assertion info $ r3", "$ r2 assert be between r15 $ r6 $ r7 $ r8", "r16 = org assertj core api atomic integer assert r0", "$ r9 = r16 myself", "$ r10 = org assertj core api atomic integer assert $ r9", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r13 = org assertj core api atomic integer assert r0", "r13 be not null", "r14 = org assertj core api atomic integer assert r0", "$ r2 = r14 actual", "$ r3 = java util concurrent atomic atomic integer $ r2", "i1 = $ r3 get", "r15 = org assertj core api atomic integer assert r0", "$ r4 = r15 object", "$ r5 = $ r4 get comparison strategy", "$ r6 = java lang integer value of i1", "$ r7 = java lang integer value of i0", "$ z0 = $ r5 be equal $ r6 $ r7", "if $ z0 ! = 0 goto label1", "r16 = org assertj core api atomic integer assert r0", "$ r10 = r16 actual", "$ r11 = java lang integer value of i0", "$ r12 = org assertj core error should have value should have value $ r10 $ r11", "r17 = org assertj core api atomic integer assert r0", "r17 throw assertion error $ r12", "label r18 = org assertj core api atomic integer assert r0", "$ r8 = r18 myself", "$ r9 = org assertj core api atomic integer assert $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org assertj core api atomic long array assert r0", "$ r4 = r7 array", "r8 = org assertj core api atomic long array assert r0", "$ r3 = r8 info", "r9 = org assertj core api atomic long array assert r0", "$ r2 = r9 array", "r10 = org assertj core api assertion info $ r3", "$ r4 assert contain exactly in any order r10 $ r2 r1", "r11 = org assertj core api atomic long array assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api atomic long array assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r13 = org assertj core api atomic long assert r0", "r13 be not null", "r14 = org assertj core api atomic long assert r0", "$ r2 = r14 actual", "$ r3 = java util concurrent atomic atomic long $ r2", "l1 = $ r3 get", "r15 = org assertj core api atomic long assert r0", "$ r4 = r15 object", "$ r5 = $ r4 get comparison strategy", "$ r6 = java lang long value of l1", "$ r7 = java lang long value of l0", "$ z0 = $ r5 be equal $ r6 $ r7", "if $ z0 == 0 goto label1", "r16 = org assertj core api atomic long assert r0", "$ r10 = r16 actual", "$ r11 = java lang long value of l0", "$ r12 = org assertj core error should not contain value should not contain value $ r10 $ r11", "r17 = org assertj core api atomic long assert r0", "r17 throw assertion error $ r12", "label r18 = org assertj core api atomic long assert r0", "$ r8 = r18 myself", "$ r9 = org assertj core api atomic long assert $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org assertj core api atomic reference array assert r0", "$ r4 = r7 array", "r8 = org assertj core api atomic reference array assert r0", "$ r3 = r8 info", "r9 = org assertj core api atomic reference array assert r0", "$ r2 = r9 array", "r10 = org assertj core api assertion info $ r3", "$ r4 assert have same size a r10 $ r2 r1", "r11 = org assertj core api atomic reference array assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api atomic reference array assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org assertj core api atomic reference array assert r0", "$ r4 = r7 array", "r8 = org assertj core api atomic reference array assert r0", "$ r3 = r8 info", "r9 = org assertj core api atomic reference array assert r0", "$ r2 = r9 array", "r10 = org assertj core api assertion info $ r3", "$ r4 assert contain only r10 $ r2 r1", "r11 = org assertj core api atomic reference array assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api atomic reference array assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org assertj core api atomic reference array assert r0", "$ r4 = r7 array", "r8 = org assertj core api atomic reference array assert r0", "$ r3 = r8 info", "r9 = org assertj core api atomic reference array assert r0", "$ r2 = r9 array", "r10 = org assertj core api assertion info $ r3", "$ r4 assert start with r10 $ r2 r1", "r11 = org assertj core api atomic reference array assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api atomic reference array assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org assertj core api atomic reference array assert r0", "$ r4 = r7 array", "r8 = org assertj core api atomic reference array assert r0", "$ r3 = r8 info", "r9 = org assertj core api atomic reference array assert r0", "$ r2 = r9 array", "r10 = org assertj core api assertion info $ r3", "$ r4 assert be not r10 $ r2 r1", "r11 = org assertj core api atomic reference array assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api atomic reference array assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r7 = org assertj core api atomic reference array assert r0", "$ r4 = r7 array", "r8 = org assertj core api atomic reference array assert r0", "$ r3 = r8 info", "r9 = org assertj core api atomic reference array assert r0", "$ r2 = r9 array", "r10 = org assertj core api assertion info $ r3", "$ r4 assert have at least r10 $ r2 i0 r1", "r11 = org assertj core api atomic reference array assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api atomic reference array assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org assertj core api b d d soft assertion r0", "r1 = r2 error collect", "$ z0 = r1 be empty", "if $ z0 ! = 0 goto label1", "org assertj core api b d d soft assertion throw best multiple assertion error r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org assertj core condition join r0", "$ r1 = r3 condition", "$ r2 = java util collection unmodifiable collection $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org assertj core internal boolean array r0", "$ r4 = r5 array", "r6 = org assertj core internal boolean array r0", "$ r3 = r6 failure", "$ r4 assert not empty r1 $ r3 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r5 = org assertj core internal boolean array r0", "$ r4 = r5 array", "$ r4 assert have same size a r1 r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "org assertj core internal comparables assert not null r1 r2", "r8 = org assertj core internal comparables r0", "$ z0 = specialinvoke r8 be great than r2 r3", "if $ z0 ! = 0 goto label1", "return", "if $ z0 ! = 0 goto label1", "label r9 = org assertj core internal comparables r0", "$ r5 = r9 failure", "r10 = org assertj core internal comparables r0", "$ r4 = r10 comparison strategy", "$ r6 = org assertj core error should be less or equal should be less or equal r2 r3 $ r4", "$ r7 = $ r5 failure r1 $ r6", "throw $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = org assertj core internal failure r0", "r1 print thread dump = 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org assertj core internal file r0", "$ z0 = specialinvoke r6 be absolute path r1 r2", "if $ z0 ! = 0 goto label1", "return", "if $ z0 ! = 0 goto label1", "label r7 = org assertj core internal file r0", "$ r3 = r7 failure", "$ r4 = org assertj core error should be relative path should be relative path r2", "$ r5 = $ r3 failure r1 $ r4", "throw $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java lang comparable r2", "r6 = org assertj core internal number r0", "$ r4 = r6 zero", "$ r5 = java lang comparable $ r4", "r7 = org assertj core internal number r0", "r7 assert less than r1 $ r3 $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r7 = org assertj core internal object array r0", "$ r6 = r7 array", "r8 = org assertj core internal object array r0", "$ r5 = r8 failure", "$ r6 assert contain r1 $ r5 r2 r3 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = org assertj core internal object array r0", "$ r5 = r6 array", "r7 = org assertj core internal object array r0", "$ r4 = r7 failure", "$ r5 assert contain sequence r1 $ r4 r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r7 = org assertj core internal object array r0", "$ r6 = r7 array", "r8 = org assertj core internal object array r0", "$ r5 = r8 failure", "$ r6 assert end with r1 $ r5 r2 r3 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = org assertj core internal object r0", "$ z0 = specialinvoke r7 object be instance of one of give class r2 r3 r1", "if $ z0 ! = 0 goto label1", "return", "if $ z0 ! = 0 goto label1", "label r8 = org assertj core internal object r0", "$ r4 = r8 failure", "$ r5 = org assertj core error should not be instance of any should not be instance of any r2 r3", "$ r6 = $ r4 failure r1 $ r5", "throw $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = org assertj core internal object r0", "$ z0 = specialinvoke r7 have same class r2 r3 r1", "if $ z0 == 0 goto label1", "r8 = org assertj core internal object r0", "$ r4 = r8 failure", "$ r5 = org assertj core error should not have same class should not have same class r2 r3", "$ r6 = $ r4 failure r1 $ r5", "throw $ r6", "if $ z0 == 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["$ r0 = org assertj core util date util strict date format for pattern \\ `` yyyy- m m-dd\\ ' t\\ ' h hmmss sss\\ ``", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r2 = null", "goto label2", "label return $ r2", "if r0 ! = null goto label1", "label $ r1 = org assertj core util date util iso_date_time_format_with_ms", "$ r2 = $ r1 format r0"], "adj": [[1], [2], [3], [], [5], [6], [7], []]}
{"nodes": ["$ r1 = newarray java lang object [ 2 ]", "$ r2 = java util uuid random u u i d", "$ r3 = $ r2 to string", "$ r1 [ 0 ] = $ r3", "$ r1 [ 1 ] = \\ `` txt\\ ``", "r0 = org assertj core util string concat $ r1", "$ r4 = newarray java lang object [ 2 ]", "$ r5 = org assertj core util file temporary folder path", "$ r4 [ 0 ] = $ r5", "$ r4 [ 1 ] = r0", "$ r6 = org assertj core util string concat $ r4", "$ r7 = org assertj core util file new file $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["z0 = @ parameter0", "r0 = @ parameter1", "r1 = @ parameter2", "if z0 ! = 0 goto label1", "$ r2 = new java lang illegal argument exception", "$ r3 = java lang string format r0 r1", "specialinvoke $ r2 < init > $ r3", "throw $ r2", "if z0 ! = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["z0 = @ parameter0", "r0 = @ parameter1", "r1 = @ parameter2", "if z0 ! = 0 goto label1", "$ r2 = new java lang illegal state exception", "$ r3 = java lang string format r0 r1", "specialinvoke $ r2 < init > $ r3", "throw $ r2", "if z0 ! = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r7 = org assertj core api abstract boolean array assert r0", "$ r4 = r7 array", "r8 = org assertj core api abstract boolean array assert r0", "$ r3 = r8 info", "r9 = org assertj core api abstract boolean array assert r0", "$ r1 = r9 actual", "$ r2 = boolean [ ] $ r1", "r10 = org assertj core api assertion info $ r3", "$ r4 assert have size less than or equal to r10 $ r2 i0", "r11 = org assertj core api abstract boolean array assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api abstract boolean array assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r7 = org assertj core api abstract byte array assert r0", "$ r4 = r7 array", "r8 = org assertj core api abstract byte array assert r0", "$ r3 = r8 info", "r9 = org assertj core api abstract byte array assert r0", "$ r1 = r9 actual", "$ r2 = byte [ ] $ r1", "r10 = org assertj core api assertion info $ r3", "$ r4 assert have size great than r10 $ r2 i0", "r11 = org assertj core api abstract byte array assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api abstract byte array assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org assertj core api assumption assume that r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org assertj core api assumption assume that r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org assertj core api assumption assume that r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r4 = org assertj core api recursive comparison assert r0", "$ r1 = r4 recursive comparison configuration", "$ r1 ignore collection order 1", "r5 = org assertj core api recursive comparison assert r0", "$ r2 = r5 myself", "$ r3 = org assertj core api recursive comparison assert $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org assertj core configuration configuration r0", "r2 additional date format = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org assertj core error should not be null instance", "r1 = org assertj core error error message factory $ r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org assertj core error should not be null instance", "r1 = org assertj core error error message factory $ r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "r4 = org assertj core internal boolean array r0", "$ r3 = r4 array", "$ r3 assert have size great than r1 r2 i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i1 = 0", "label $ r2 = org assertj core presentation standard representation type_with_unambiguous_representation", "$ i0 = lengthof $ r2", "if i1 > = $ i0 goto label3", "$ r3 = org assertj core presentation standard representation type_with_unambiguous_representation", "$ r4 = $ r3 [ i1 ]", "$ z0 = $ r4 be instance r1", "if $ z0 == 0 goto label2", "return 1", "if $ z0 == 0 goto label2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org assertj core api abstract boolean array assert r0", "$ r5 = r8 array", "r9 = org assertj core api abstract boolean array assert r0", "$ r4 = r9 info", "r10 = org assertj core api abstract boolean array assert r0", "$ r2 = r10 actual", "$ r3 = boolean [ ] $ r2", "r11 = org assertj core api assertion info $ r4", "$ r5 assert contain exactly in any order r11 $ r3 r1", "r12 = org assertj core api abstract boolean array assert r0", "$ r6 = r12 myself", "$ r7 = org assertj core api abstract boolean array assert $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r7 = org assertj core api abstract double assert r0", "$ r4 = r7 double", "r8 = org assertj core api abstract double assert r0", "$ r3 = r8 info", "r9 = org assertj core api abstract double assert r0", "$ r1 = r9 actual", "$ r2 = java lang double $ r1", "r10 = org assertj core api assertion info $ r3", "$ r4 assert be finite r10 $ r2", "r11 = org assertj core api abstract double assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api abstract double assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = org assertj core api atomic reference assert r0", "r13 be not null", "r14 = org assertj core api atomic reference assert r0", "$ r4 = r14 actual", "$ r5 = java util concurrent atomic atomic reference $ r4", "r2 = $ r5 get", "r15 = org assertj core api atomic reference assert r0", "$ r6 = r15 object", "$ r7 = $ r6 get comparison strategy", "$ z0 = $ r7 be equal r2 r1", "if $ z0 == 0 goto label1", "r16 = org assertj core api atomic reference assert r0", "$ r10 = r16 actual", "$ r11 = org assertj core error should not contain value should not contain value $ r10 r1", "r17 = org assertj core api atomic reference assert r0", "$ r12 = r17 assertion error $ r11", "throw $ r12", "if $ z0 == 0 goto label1", "label r18 = org assertj core api atomic reference assert r0", "$ r8 = r18 myself", "$ r9 = org assertj core api atomic reference assert $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org assertj core api long2 d array assert r0", "$ r6 = r9 long2d array", "r10 = org assertj core api long2 d array assert r0", "$ r5 = r10 info", "r11 = org assertj core api long2 d array assert r0", "$ r3 = r11 actual", "$ r4 = long [ ] [ ] $ r3", "r12 = org assertj core api assertion info $ r5", "$ r6 assert do not contain r12 $ r4 r1 r2", "r13 = org assertj core api long2 d array assert r0", "$ r7 = r13 myself", "$ r8 = org assertj core api long2 d array assert $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r4 = org assertj core api recursive comparison assert r0", "$ r1 = r4 recursive comparison configuration", "$ r1 ignore all overridden equal", "r5 = org assertj core api recursive comparison assert r0", "$ r2 = r5 myself", "$ r3 = org assertj core api recursive comparison assert $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org assertj core configuration configuration r0", "r1 max element for print = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r5 = org assertj core internal boolean2 d array r0", "$ r4 = r5 array", "$ r4 assert have same dimension a r1 r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r9 = org assertj core api abstract integer assert r0", "$ r3 = r9 integer", "r10 = org assertj core api abstract integer assert r0", "$ r4 = r10 info", "r11 = org assertj core api abstract integer assert r0", "$ r2 = r11 actual", "$ r5 = java lang number $ r2", "$ r6 = java lang integer value of i0", "r12 = org assertj core api assertion info $ r4", "$ r3 assert be not close to r12 $ r5 $ r6 r1", "r13 = org assertj core api abstract integer assert r0", "$ r7 = r13 myself", "$ r8 = org assertj core api abstract integer assert $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org assertj core api abstract object array assert r0", "$ r5 = r8 array", "r9 = org assertj core api abstract object array assert r0", "$ r4 = r9 info", "r10 = org assertj core api abstract object array assert r0", "$ r2 = r10 actual", "$ r3 = java lang object [ ] $ r2", "r11 = org assertj core api assertion info $ r4", "$ r5 assert contain exactly r11 $ r3 r1", "r12 = org assertj core api abstract object array assert r0", "$ r6 = r12 myself", "$ r7 = org assertj core api abstract object array assert $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org assertj core api abstract short assert r0", "$ r6 = r9 short", "r10 = org assertj core api abstract short assert r0", "$ r5 = r10 info", "r11 = org assertj core api abstract short assert r0", "$ r3 = r11 actual", "$ r4 = java lang number $ r3", "r12 = org assertj core api assertion info $ r5", "$ r6 assert be not close to r12 $ r4 r1 r2", "r13 = org assertj core api abstract short assert r0", "$ r7 = r13 myself", "$ r8 = org assertj core api abstract short assert $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org assertj core api atomic reference array assert r0", "$ r4 = r7 array", "r8 = org assertj core api atomic reference array assert r0", "$ r3 = r8 info", "r9 = org assertj core api atomic reference array assert r0", "$ r2 = r9 array", "r10 = org assertj core api assertion info $ r3", "$ r4 assert be not r10 $ r2 r1", "r11 = org assertj core api atomic reference array assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api atomic reference array assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "label $ r3 = r1 cast r0", "label return $ r3"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new com jayway awaitility core condition factory", "r8 = com jayway awaitility core condition factory r0", "$ r6 = r8 alias", "r9 = com jayway awaitility core condition factory r0", "$ r5 = r9 timeout", "r10 = com jayway awaitility core condition factory r0", "$ r4 = r10 poll delay", "r11 = com jayway awaitility core condition factory r0", "$ z0 = r11 catch uncaught exception", "r12 = com jayway awaitility core condition factory r0", "$ r3 = r12 condition evaluation listener", "specialinvoke r7 < init > $ r6 $ r5 r1 $ r4 $ z0 $ r3", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["$ r0 = com jayway awaitility core method call recorder last target", "if $ r0 ! = null goto label1", "$ r2 = new java lang illegal state exception", "specialinvoke $ r2 < init > \\ `` no method call have be record perhaps the method be final ? \\ ``", "throw $ r2", "if $ r0 ! = null goto label1", "label $ r1 = com jayway awaitility core method call recorder last target", "return $ r1"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof java lang class", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = new org awaitility core condition factory", "r10 = org awaitility core condition factory r0", "$ r8 = r10 timeout constraint", "r11 = org awaitility core condition factory r0", "$ r7 = r11 poll interval", "r12 = org awaitility core condition factory r0", "$ r6 = r12 poll delay", "r13 = org awaitility core condition factory r0", "$ z0 = r13 catch uncaught exception", "r14 = org awaitility core condition factory r0", "$ r5 = r14 exception ignorer", "r15 = org awaitility core condition factory r0", "$ r4 = r15 condition evaluation listener", "r16 = org awaitility core condition factory r0", "$ r3 = r16 executor lifecycle", "specialinvoke r9 < init > r1 $ r8 $ r7 $ r6 $ z0 $ r5 $ r4 $ r3", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r12 = new java lang illegal argument exception", "specialinvoke r12 < init > \\ `` exception type can not be null\\ ``", "throw r12", "if r1 ! = null goto label1", "label r14 = new org awaitility core condition factory", "r15 = org awaitility core condition factory r0", "$ r4 = r15 alias", "r16 = org awaitility core condition factory r0", "$ r5 = r16 timeout constraint", "r17 = org awaitility core condition factory r0", "$ r6 = r17 poll interval", "r18 = org awaitility core condition factory r0", "$ r7 = r18 poll delay", "r19 = org awaitility core condition factory r0", "$ z0 = r19 catch uncaught exception", "r13 = new org awaitility core predicate exception ignorer", "$ r8 = condition factory $ lambda_ignore exception instance of_0__6 bootstrap $ r1", "specialinvoke r13 < init > $ r8", "r20 = org awaitility core condition factory r0", "$ r10 = r20 condition evaluation listener", "r21 = org awaitility core condition factory r0", "$ r9 = r21 executor lifecycle", "r22 = org awaitility core exception ignorer r13", "specialinvoke r14 < init > $ r4 $ r5 $ r6 $ r7 $ z0 r22 $ r10 $ r9", "return r14"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r12 = new java lang illegal argument exception", "specialinvoke r12 < init > \\ `` exception can not be null\\ ``", "throw r12", "if r1 ! = null goto label1", "label r14 = new org awaitility core condition factory", "r15 = org awaitility core condition factory r0", "$ r4 = r15 alias", "r16 = org awaitility core condition factory r0", "$ r5 = r16 timeout constraint", "r17 = org awaitility core condition factory r0", "$ r6 = r17 poll interval", "r18 = org awaitility core condition factory r0", "$ r7 = r18 poll delay", "r19 = org awaitility core condition factory r0", "$ z0 = r19 catch uncaught exception", "r13 = new org awaitility core predicate exception ignorer", "$ r8 = condition factory $ lambda_ignore exception_1__8 bootstrap $ r1", "specialinvoke r13 < init > $ r8", "r20 = org awaitility core condition factory r0", "$ r10 = r20 condition evaluation listener", "r21 = org awaitility core condition factory r0", "$ r9 = r21 executor lifecycle", "r22 = org awaitility core exception ignorer r13", "specialinvoke r14 < init > $ r4 $ r5 $ r6 $ r7 $ z0 r22 $ r10 $ r9", "return r14"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org awaitility pollinterval fibonacci poll interval r0", "$ i1 = specialinvoke r1 fib i0 1 0", "return $ i1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org awaitility pollinterval iterative poll interval", "r5 = org awaitility pollinterval iterative poll interval r0", "$ r3 = r5 function", "specialinvoke r4 < init > $ r3 r1", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r11 = new net bytebuddy asm modifier adjustment", "r12 = net bytebuddy asm modifier adjustment r0", "$ r5 = r12 type adjustment", "r13 = net bytebuddy asm modifier adjustment r0", "$ r6 = r13 field adjustment", "r10 = new net bytebuddy asm modifier adjustment $ adjustment", "$ r7 = net bytebuddy description modifier modifier contributor $ resolver of r2", "specialinvoke r10 < init > r1 $ r7", "r14 = net bytebuddy asm modifier adjustment r0", "$ r8 = r14 method adjustment", "$ r9 = net bytebuddy utility compound list of r10 $ r8", "specialinvoke r11 < init > $ r5 $ r6 $ r9", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = net bytebuddy description type type description $ for load type of r1", "r5 = net bytebuddy byte buddy r0", "$ r4 = r5 rebase $ r3 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = net bytebuddy description modifier parameter manifestation final", "if r0 ! = $ r1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if r0 ! = $ r1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["z0 = @ parameter0", "if z0 == 0 goto label1", "$ r0 = net bytebuddy implementation attribute annotation retention enable", "goto label2", "label return $ r0", "if z0 == 0 goto label1", "label $ r0 = net bytebuddy implementation attribute annotation retention disable"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get class", "if r1 ! = class \\ `` ljava lang string \\ `` goto label01", "r55 = new net bytebuddy implementation fix value $ for pool value", "r54 = new net bytebuddy implementation bytecode constant text constant", "$ r52 = java lang string r0", "specialinvoke r54 < init > $ r52", "$ r53 = net bytebuddy description type type description string", "r69 = net bytebuddy implementation bytecode stack manipulation r54", "specialinvoke r55 < init > r69 $ r53", "r70 = net bytebuddy implementation fix value $ assigner configurable r55", "return r70", "if r1 ! = class \\ `` ljava lang string \\ `` goto label01", "label if r1 ! = class \\ `` ljava lang class \\ `` goto label02", "r56 = new net bytebuddy implementation fix value $ for pool value", "$ r46 = java lang class r0", "$ r47 = net bytebuddy description type type description $ for load type of $ r46", "$ r48 = net bytebuddy implementation bytecode constant class constant of $ r47", "$ r49 = net bytebuddy description type type description class", "specialinvoke r56 < init > $ r48 $ r49", "r71 = net bytebuddy implementation fix value $ assigner configurable r56", "return r71", "label if r1 ! = class \\ `` ljava lang class \\ `` goto label02", "label if r1 ! = class \\ `` ljava lang boolean \\ `` goto label03", "r57 = new net bytebuddy implementation fix value $ for pool value", "$ r42 = java lang boolean r0", "$ z2 = $ r42 boolean value", "$ r43 = net bytebuddy implementation bytecode constant integer constant for value $ z2", "$ r44 = java lang boolean type", "specialinvoke r57 < init > $ r43 $ r44", "r72 = net bytebuddy implementation fix value $ assigner configurable r57", "return r72", "label if r1 ! = class \\ `` ljava lang boolean \\ `` goto label03", "label if r1 ! = class \\ `` ljava lang byte \\ `` goto label04", "r58 = new net bytebuddy implementation fix value $ for pool value", "$ r38 = java lang byte r0", "$ b4 = $ r38 byte value", "$ r39 = net bytebuddy implementation bytecode constant integer constant for value $ b4", "$ r40 = java lang byte type", "specialinvoke r58 < init > $ r39 $ r40", "r73 = net bytebuddy implementation fix value $ assigner configurable r58", "return r73", "label if r1 ! = class \\ `` ljava lang byte \\ `` goto label04", "label if r1 ! = class \\ `` ljava lang short \\ `` goto label05", "r59 = new net bytebuddy implementation fix value $ for pool value", "$ r34 = java lang short r0", "$ s3 = $ r34 short value", "$ r35 = net bytebuddy implementation bytecode constant integer constant for value $ s3", "$ r36 = java lang short type", "specialinvoke r59 < init > $ r35 $ r36", "r74 = net bytebuddy implementation fix value $ assigner configurable r59", "return r74", "label if r1 ! = class \\ `` ljava lang short \\ `` goto label05", "label if r1 ! = class \\ `` ljava lang character \\ `` goto label06", "r60 = new net bytebuddy implementation fix value $ for pool value", "$ r30 = java lang character r0", "$ c2 = $ r30 char value", "$ r31 = net bytebuddy implementation bytecode constant integer constant for value $ c2", "$ r32 = java lang character type", "specialinvoke r60 < init > $ r31 $ r32", "r75 = net bytebuddy implementation fix value $ assigner configurable r60", "return r75", "label if r1 ! = class \\ `` ljava lang character \\ `` goto label06", "label if r1 ! = class \\ `` ljava lang integer \\ `` goto label07", "r61 = new net bytebuddy implementation fix value $ for pool value", "$ r26 = java lang integer r0", "$ i1 = $ r26 int value", "$ r27 = net bytebuddy implementation bytecode constant integer constant for value $ i1", "$ r28 = java lang integer type", "specialinvoke r61 < init > $ r27 $ r28", "r76 = net bytebuddy implementation fix value $ assigner configurable r61", "return r76", "label if r1 ! = class \\ `` ljava lang integer \\ `` goto label07", "label if r1 ! = class \\ `` ljava lang long \\ `` goto label08", "r62 = new net bytebuddy implementation fix value $ for pool value", "$ r22 = java lang long r0", "$ l0 = $ r22 long value", "$ r23 = net bytebuddy implementation bytecode constant long constant for value $ l0", "$ r24 = java lang long type", "specialinvoke r62 < init > $ r23 $ r24", "r77 = net bytebuddy implementation fix value $ assigner configurable r62", "return r77", "label if r1 ! = class \\ `` ljava lang long \\ `` goto label08", "label if r1 ! = class \\ `` ljava lang float \\ `` goto label09", "r63 = new net bytebuddy implementation fix value $ for pool value", "$ r18 = java lang float r0", "$ f0 = $ r18 float value", "$ r19 = net bytebuddy implementation bytecode constant float constant for value $ f0", "$ r20 = java lang float type", "specialinvoke r63 < init > $ r19 $ r20", "r78 = net bytebuddy implementation fix value $ assigner configurable r63", "return r78", "label if r1 ! = class \\ `` ljava lang float \\ `` goto label09", "label if r1 ! = class \\ `` ljava lang double \\ `` goto label10", "r64 = new net bytebuddy implementation fix value $ for pool value", "$ r14 = java lang double r0", "$ d0 = $ r14 double value", "$ r15 = net bytebuddy implementation bytecode constant double constant for value $ d0", "$ r16 = java lang double type", "specialinvoke r64 < init > $ r15 $ r16", "r79 = net bytebuddy implementation fix value $ assigner configurable r64", "return r79", "label if r1 ! = class \\ `` ljava lang double \\ `` goto label10", "label $ r2 = net bytebuddy utility java type method_handle", "$ r3 = $ r2 get type stub", "$ z0 = $ r3 be assignable from r1", "if $ z0 == 0 goto label11", "r66 = new net bytebuddy implementation fix value $ for pool value", "r65 = new net bytebuddy implementation bytecode constant java constant value", "$ r12 = net bytebuddy utility java constant $ method handle of loaded r0", "r80 = net bytebuddy utility java constant $ r12", "specialinvoke r65 < init > r80", "r81 = net bytebuddy implementation bytecode stack manipulation r65", "specialinvoke r66 < init > r81 r1", "r82 = net bytebuddy implementation fix value $ assigner configurable r66", "return r82", "if $ z0 == 0 goto label11", "label $ r4 = net bytebuddy utility java type method_type", "$ r5 = $ r4 get type stub", "$ z1 = $ r5 represent r1", "if $ z1 == 0 goto label12", "r68 = new net bytebuddy implementation fix value $ for pool value", "r67 = new net bytebuddy implementation bytecode constant java constant value", "$ r9 = net bytebuddy utility java constant $ method type of loaded r0", "r83 = net bytebuddy utility java constant $ r9", "specialinvoke r67 < init > r83", "r84 = net bytebuddy implementation bytecode stack manipulation r67", "specialinvoke r68 < init > r84 r1", "r85 = net bytebuddy implementation fix value $ assigner configurable r68", "return r85", "if $ z1 == 0 goto label12", "label $ r6 = net bytebuddy implementation fix value reference r0", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], [44], [45], [46], [47], [48], [49], [50], [51], [], [53], [54], [55], [56], [57], [58], [59], [60], [61], [], [63], [64], [65], [66], [67], [68], [69], [70], [71], [], [73], [74], [75], [76], [77], [78], [79], [80], [81], [], [83], [84], [85], [86], [87], [88], [89], [90], [91], [], [93], [94], [95], [96], [97], [98], [99], [100], [101], [], [103], [104], [105], [106], [107], [108], [109], [110], [111], [112], [113], [114], [115], [], [117], [118], [119], [120], [121], [122], [123], [124], [125], [126], [127], [128], [129], [], [131], [132], []]}
{"nodes": ["r2 = new net bytebuddy implementation hash code method", "$ r1 = net bytebuddy implementation hash code method $ offset provider $ for super method call instance", "r3 = net bytebuddy implementation hash code method $ offset provider $ r1", "specialinvoke r2 < init > r3", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r10 = new net bytebuddy implementation invoke dynamic", "r11 = net bytebuddy implementation invoke dynamic r0", "$ r4 = r11 bootstrap method", "r12 = net bytebuddy implementation invoke dynamic r0", "$ r5 = r12 handle argument", "r13 = net bytebuddy implementation invoke dynamic r0", "$ r3 = r13 invocation provider", "$ r2 = net bytebuddy implementation invoke dynamic $ invocation provider $ argument provider $ for intercept method parameter instance", "r14 = net bytebuddy implementation invoke dynamic $ invocation provider $ argument provider $ r2", "$ r6 = $ r3 append argument r14", "r15 = net bytebuddy implementation invoke dynamic r0", "$ r9 = r15 termination handler", "r16 = net bytebuddy implementation invoke dynamic r0", "$ r8 = r16 assigner", "r17 = net bytebuddy implementation invoke dynamic r0", "$ r7 = r17 type", "specialinvoke r10 < init > $ r4 $ r5 $ r6 $ r9 $ r8 $ r7", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = net bytebuddy dynamic scaffold field locator $ for class hierarchy $ factory instance", "r4 = net bytebuddy implementation method call r0", "r5 = net bytebuddy dynamic scaffold field locator $ factory $ r2", "$ r3 = r4 with field r5 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new net bytebuddy description field field description $ for loaded field", "specialinvoke r4 < init > r1", "r5 = net bytebuddy implementation method call r0", "r6 = net bytebuddy description field field description r4", "$ r3 = r5 set field r6", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new net bytebuddy matcher negate matcher", "specialinvoke r2 < init > r0", "r3 = net bytebuddy matcher element matcher $ junction r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = net bytebuddy matcher element matcher take argument 0", "$ r1 = net bytebuddy description type type description void", "$ r2 = net bytebuddy matcher element matcher return $ r1", "r14 = net bytebuddy matcher element matcher $ r2", "$ r3 = net bytebuddy matcher element matcher not r14", "r15 = net bytebuddy matcher element matcher $ r3", "$ r4 = $ r0 and r15", "$ r5 = net bytebuddy matcher element matcher name start with \\ `` get\\ ``", "$ r6 = net bytebuddy matcher element matcher name start with \\ `` is\\ ``", "$ r7 = newarray java lang reflect type [ 2 ]", "$ r8 = java lang boolean type", "$ r7 [ 0 ] = $ r8", "$ r7 [ 1 ] = class \\ `` ljava lang boolean \\ ``", "$ r9 = net bytebuddy matcher element matcher any of $ r7", "r16 = net bytebuddy matcher element matcher $ r9", "$ r10 = net bytebuddy matcher element matcher return generic r16", "r17 = net bytebuddy matcher element matcher $ r10", "$ r11 = $ r6 and r17", "r18 = net bytebuddy matcher element matcher $ r11", "$ r12 = $ r5 or r18", "r19 = net bytebuddy matcher element matcher $ r12", "$ r13 = $ r4 and r19", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "r3 = new net bytebuddy matcher signature token matcher", "$ r2 = net bytebuddy matcher element matcher be r0", "r4 = net bytebuddy matcher element matcher $ r2", "specialinvoke r3 < init > r4", "r5 = net bytebuddy matcher element matcher $ junction r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = net bytebuddy description type type description $ for load type of r0", "$ r2 = net bytebuddy matcher element matcher inherit annotation $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = net bytebuddy matcher element matcher bootstrap_classloader", "if r0 ! = $ r1 goto label1", "r4 = new net bytebuddy matcher boolean matcher", "$ r3 = r4", "specialinvoke r4 < init > 1", "goto label2", "label r6 = net bytebuddy matcher element matcher $ junction $ r3", "return r6", "if r0 ! = $ r1 goto label1", "label $ r2 = net bytebuddy matcher element matcher be r0", "r5 = net bytebuddy matcher element matcher $ r2", "$ r3 = net bytebuddy matcher element matcher have child r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "label r5 = net bytebuddy type cache r0", "$ r2 = r5 poll", "if $ r2 == null goto label2", "r6 = net bytebuddy type cache r0", "$ r3 = r6 cache", "$ r3 remove $ r2", "goto label1", "if $ r2 == null goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = net bytebuddy utility open class reader experimental", "if $ z0 == 0 goto label2", "r1 = net bytebuddy class file version of class file r0", "$ r4 = net bytebuddy class file version java_v14", "$ z1 = r1 be great than $ r4", "if $ z1 == 0 goto label1", "$ r6 = net bytebuddy class file version java_v14", "$ s0 = $ r6 get major version", "$ s1 = $ s0 > > > 8", "$ b2 = byte $ s1", "r0 [ 6 ] = $ b2", "$ r7 = net bytebuddy class file version java_v14", "$ s3 = $ r7 get major version", "$ b4 = byte $ s3", "r0 [ 7 ] = $ b4", "$ r8 = new net bytebuddy jar asm class reader", "specialinvoke $ r8 < init > r0", "$ s5 = r1 get major version", "$ s6 = $ s5 > > > 8", "$ b7 = byte $ s6", "r0 [ 6 ] = $ b7", "$ s8 = r1 get major version", "$ b9 = byte $ s8", "r0 [ 7 ] = $ b9", "return $ r8", "if $ z1 == 0 goto label1", "label $ r5 = new net bytebuddy jar asm class reader", "specialinvoke $ r5 < init > r0", "return $ r5", "if $ z0 == 0 goto label2", "label $ r3 = new net bytebuddy jar asm class reader", "specialinvoke $ r3 < init > r0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "z0 = @ parameter4", "specialinvoke r0 visit method insn i0 r1 r2 r3 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "specialinvoke r0 visit lookup switch insn r1 r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["z0 = @ parameter0", "if z0 == 0 goto label1", "$ r0 = net bytebuddy matcher boolean matcher true", "goto label2", "label r1 = net bytebuddy matcher element matcher $ junction $ r0", "return r1", "if z0 == 0 goto label1", "label $ r0 = net bytebuddy matcher boolean matcher false"], "adj": [[1], [2], [3], [], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r2 = net bytebuddy implementation bytecode shift right r0", "$ r1 = r2 unsigned", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = net bytebuddy agent byte buddy agent $ attachment provider default", "net bytebuddy agent byte buddy agent attach r0 r1 r2 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = net bytebuddy agent byte buddy agent $ attachment provider default", "$ r1 = net bytebuddy agent byte buddy agent install $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = net bytebuddy agent byte buddy agent $ attachment provider default", "net bytebuddy agent byte buddy agent attach r0 r1 r2 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "java util object require non null r1", "r7 = com github benmanes caffeine cache caffeine r0", "$ l1 = r7 refresh nanos", "$ b2 = $ l1 cmp -1l", "if $ b2 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label $ r3 = newarray java lang object [ 1 ]", "r8 = com github benmanes caffeine cache caffeine r0", "$ l3 = r8 refresh nanos", "$ r4 = java lang long value of $ l3", "$ r3 [ 0 ] = $ r4", "com github benmanes caffeine cache caffeine require state $ z0 \\ `` refresh be already set to % s ns\\", "$ b4 = l0 cmp 0l", "if $ b4 < = 0 goto label3", "$ z1 = 1", "goto label4", "label $ r5 = newarray java lang object [ 2 ]", "$ r6 = java lang long value of l0", "$ r5 [ 0 ] = $ r6", "$ r5 [ 1 ] = r1", "com github benmanes caffeine cache caffeine require argument $ z1 \\ `` duration must be positive % s % s\\", "$ l5 = r1 to nanos l0", "r9 = com github benmanes caffeine cache caffeine r0", "r9 refresh nanos = $ l5", "r10 = com github benmanes caffeine cache caffeine r0", "return r10", "if $ b4 < = 0 goto label3", "label $ z1 = 0", "if $ b2 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ b2 = l0 cmp 0l", "if $ b2 < 0 goto label1", "$ z0 = 1", "goto label2", "label com github benmanes caffeine cache caffeine require argument $ z0", "$ l3 = java lang math min l0 1073741823l", "i1 = int $ l3", "r7 = com github benmanes caffeine cache frequency sketch r0", "$ r1 = r7 table", "if $ r1 == null goto label3", "r8 = com github benmanes caffeine cache frequency sketch r0", "$ r6 = r8 table", "$ i9 = lengthof $ r6", "if $ i9 < i1 goto label3", "return", "if $ i9 < i1 goto label3", "label if i1 ! = 0 goto label4", "$ i10 = 1", "goto label5", "label $ r2 = newarray long [ $ i10 ]", "r9 = com github benmanes caffeine cache frequency sketch r0", "r9 table = $ r2", "r10 = com github benmanes caffeine cache frequency sketch r0", "$ r3 = r10 table", "$ i4 = lengthof $ r3", "$ i5 = $ i4 - 1", "$ i6 = java lang math max 0 $ i5", "r11 = com github benmanes caffeine cache frequency sketch r0", "r11 table mask = $ i6", "$ b7 = l0 cmp 0l", "if $ b7 ! = 0 goto label6", "$ i11 = 10", "goto label7", "label r12 = com github benmanes caffeine cache frequency sketch r0", "r12 sample size = $ i11", "r13 = com github benmanes caffeine cache frequency sketch r0", "$ i8 = r13 sample size", "if $ i8 > 0 goto label8", "r14 = com github benmanes caffeine cache frequency sketch r0", "r14 sample size = 2147483647", "label r15 = com github benmanes caffeine cache frequency sketch r0", "r15 size = 0", "if $ b7 ! = 0 goto label6", "label $ i11 = 10 * i1", "label if i1 ! = 0 goto label4", "label $ i10 = com github benmanes caffeine cache caffeine ceiling power of two i1", "if $ b2 < 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return 0l"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ b1 = r0 get i0", "return $ b1"], "adj": [[1], [2], [3], []]}
{"nodes": ["b0 = @ parameter0", "$ l1 = long b0", "$ l2 = $ l1 & 255l", "return $ l2"], "adj": [[1], [2], [3], []]}
{"nodes": ["b0 = @ parameter0", "$ l1 = org checkerframework checker signedness signedness util to unsigned long b0", "$ r0 = org checkerframework checker signedness signedness util to unsigned big integer $ l1", "$ f0 = $ r0 float value", "return $ f0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["b0 = @ parameter0", "$ l1 = org checkerframework checker signedness signedness util to unsigned long b0", "$ r0 = org checkerframework checker signedness signedness util to unsigned big integer $ l1", "$ d0 = $ r0 double value", "return $ d0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["b0 = @ parameter0", "$ l1 = org checkerframework checker signedness signedness util to unsigned long b0", "$ r0 = org checkerframework checker signedness signedness util to unsigned big integer $ l1", "$ d0 = $ r0 double value", "return $ d0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["f0 = @ parameter0", "$ z0 = org checkerframework checker signedness signedness util $ assertion disable", "if $ z0 ! = 0 goto label1", "$ b1 = f0 cmpl 0 0f", "if $ b1 > = 0 goto label1", "$ r0 = new java lang assertion error", "specialinvoke $ r0 < init >", "throw $ r0", "if $ b1 > = 0 goto label1", "label $ i0 = int f0", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["$ r1 = new java util array list", "$ r2 = org checkerframework framework qual literal kind value", "$ r3 = java util array a list $ r2", "specialinvoke $ r1 < init > $ r3", "$ r4 = org checkerframework framework qual literal kind all", "$ r1 remove $ r4", "$ r5 = org checkerframework framework qual literal kind primitive", "$ r1 remove $ r5", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["c0 = @ parameter0", "$ r2 = newarray org checkerframework checker formatter qual conversion category [ 5 ]", "$ r3 = org checkerframework checker formatter qual conversion category general", "$ r2 [ 0 ] = $ r3", "$ r4 = org checkerframework checker formatter qual conversion category char", "$ r2 [ 1 ] = $ r4", "$ r5 = org checkerframework checker formatter qual conversion category int", "$ r2 [ 2 ] = $ r5", "$ r6 = org checkerframework checker formatter qual conversion category float", "$ r2 [ 3 ] = $ r6", "$ r7 = org checkerframework checker formatter qual conversion category time", "$ r2 [ 4 ] = $ r7", "i1 = lengthof $ r2", "i2 = 0", "label if i2 > = i1 goto label3", "r1 = $ r2 [ i2 ]", "$ r13 = r1 char", "$ r14 = java lang string value of c0", "$ z0 = $ r13 contain $ r14", "if $ z0 == 0 goto label2", "return r1", "if $ z0 == 0 goto label2", "label i2 = i2 + 1", "goto label1", "label if i2 > = i1 goto label3", "label $ r8 = new java lang illegal argument exception", "$ r9 = new java lang string builder", "specialinvoke $ r9 < init >", "$ r10 = $ r9 append \\ `` bad conversion character \\ ``", "$ r11 = $ r10 append c0", "$ r12 = $ r11 to string", "specialinvoke $ r8 < init > $ r12", "throw $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org checkerframework checker regex regex util regex error r0 0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["b0 = @ parameter0", "b1 = @ parameter1", "$ i2 = java lang byte to unsigned int b0", "$ i3 = java lang byte to unsigned int b1", "$ i4 = java lang integer compare unsigned $ i2 $ i3", "return $ i4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com fasterxml classmate member resolver r0", "r1 _cfg include lang object = z0", "r2 = com fasterxml classmate member resolver r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml classmate member resolve member r0", "$ r1 = r2 _type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = com fasterxml classmate resolve type r0", "$ r1 = r3 _type binding", "$ r2 = $ r1 get type parameter", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = new java lang string builder", "specialinvoke r5 < init >", "r6 = com fasterxml classmate resolve type r0", "$ r3 = r6 append brief description r5", "$ r4 = $ r3 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml classmate type binding r0", "$ r1 = r2 _types", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof com fasterxml classmate type resolve recursive type", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = com fasterxml classmate util class stack r0", "$ r4 = r7 _self refs", "if $ r4 == null goto label2", "r8 = com fasterxml classmate util class stack r0", "$ r5 = r8 _self refs", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r6 = r2 next", "r3 = com fasterxml classmate type resolve recursive type $ r6", "r3 set reference r1", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r1 [ i1 ]", "r5 = com rits clone cloner r0", "$ r4 = r5 ignore", "$ r4 add r3", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com rits clone cloner r0", "$ r2 = r3 ignore", "$ r2 add all r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com rits clone cloner r0", "$ r2 = r4 instantiation strategy", "$ r3 = $ r2 new instance r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = com rits clone cloner r0", "$ r3 = r13 field cache", "$ r4 = $ r3 get r1", "r10 = java util list $ r4", "if r10 ! = null goto label3", "r12 = new java util link list", "specialinvoke r12 < init >", "r10 = r12", "r2 = r1 get declare field", "r14 = com rits clone cloner r0", "specialinvoke r14 add all r12 r2", "r11 = r1", "label $ r6 = r11 get superclass", "r11 = $ r6", "if $ r6 == class \\ `` ljava lang object \\ `` goto label2", "if $ r6 == null goto label2", "$ r9 = $ r6 get declare field", "r15 = com rits clone cloner r0", "specialinvoke r15 add all r12 $ r9", "goto label1", "if $ r6 == null goto label2", "label r16 = com rits clone cloner r0", "$ r7 = r16 field cache", "$ r7 put if absent r1 r12", "label return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com rits clone cloner r0", "r1 dump clone class = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = new java io i o exception", "specialinvoke r2 < init > \\ `` abort\\ ``", "r3 = org cometd client bayeux client r0", "specialinvoke r3 abort r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r8 = @ parameter0", "r1 = @ parameter1", "r11 = org cometd common abstract transport r0", "r2 = r11 get option prefix", "if r2 == null goto label1", "$ i0 = r2 length", "if $ i0 < = 0 goto label1", "$ z0 = r8 start with r2", "if $ z0 ! = 0 goto label1", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r5 = r10 append r2", "$ r6 = $ r5 append \\ `` \\ ``", "$ r7 = $ r6 append r8", "r8 = $ r7 to string", "label r12 = org cometd common abstract transport r0", "$ r9 = r12 _options", "$ r9 put r8 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = null goto label1", "r21 = new java lang null pointer exception", "specialinvoke r21 < init >", "throw r21", "if r1 ! = null goto label1", "label r22 = new org cometd oort oort object $ data", "specialinvoke r22 < init > 4 r2", "r23 = org cometd oort oort object r0", "$ r6 = r23 get oort", "$ r7 = $ r6 get u r l", "r22 put \\ `` oort info url\\", "r24 = org cometd oort oort object r0", "$ r9 = r24 get name", "r22 put \\ `` oort info name\\", "r25 = org cometd oort oort object r0", "$ r11 = r25 serialize r1", "r22 put \\ `` oort info object\\", "r26 = org cometd oort oort object r0", "$ r13 = r26 logger", "$ z0 = $ r13 be debug enabled", "if $ z0 == 0 goto label2", "r27 = org cometd oort oort object r0", "$ r19 = r27 logger", "$ r19 debug \\ `` share { } \\", "label r28 = org cometd oort oort object r0", "$ r14 = r28 oort", "r4 = $ r14 get bayeux server", "r29 = org cometd oort oort object r0", "$ r15 = r29 get channel name", "$ r16 = r4 get channel $ r15", "r30 = org cometd oort oort object r0", "$ r17 = r30 get local session", "$ r18 = org cometd bayeux promise noop", "r31 = org cometd bayeux session $ r17", "$ r16 publish r31 r22 $ r18", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = java util set of r1", "r5 = org cometd oort seti r0", "r5 send message $ r4 r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r112 = new java lang string builder", "specialinvoke r112 < init >", "r127 = com pryv filter r0", "$ r3 = r127 from time", "if $ r3 == null goto label01", "r113 = new java lang string builder", "specialinvoke r113 < init >", "$ r101 = r113 append \\ `` & from time=\\ ``", "r128 = com pryv filter r0", "$ r102 = r128 from time", "$ r103 = $ r101 append $ r102", "$ r104 = $ r103 to string", "r112 append $ r104", "label r129 = com pryv filter r0", "$ r4 = r129 to time", "if $ r4 == null goto label02", "r114 = new java lang string builder", "specialinvoke r114 < init >", "$ r95 = r114 append \\ `` & to time=\\ ``", "r130 = com pryv filter r0", "$ r96 = r130 to time", "$ r97 = $ r95 append $ r96", "$ r98 = $ r97 to string", "r112 append $ r98", "label r131 = com pryv filter r0", "$ r5 = r131 stream", "if $ r5 == null goto label04", "r132 = com pryv filter r0", "$ r86 = r132 stream", "r106 = $ r86 iterator", "label $ z2 = r106 have next", "if $ z2 == 0 goto label04", "$ r87 = r106 next", "r107 = com pryv model stream $ r87", "r115 = new java lang string builder", "specialinvoke r115 < init >", "$ r89 = r115 append \\ `` & stream [ ] =\\ ``", "$ r90 = r107 get id", "$ r91 = $ r89 append $ r90", "$ r92 = $ r91 to string", "r112 append $ r92", "goto label03", "if $ z2 == 0 goto label04", "label r133 = com pryv filter r0", "$ r6 = r133 tag", "if $ r6 == null goto label06", "r134 = com pryv filter r0", "$ r79 = r134 tag", "r108 = $ r79 iterator", "label $ z1 = r108 have next", "if $ z1 == 0 goto label06", "$ r80 = r108 next", "r109 = java lang string $ r80", "r116 = new java lang string builder", "specialinvoke r116 < init >", "$ r82 = r116 append \\ `` & tag [ ] =\\ ``", "$ r83 = $ r82 append r109", "$ r84 = $ r83 to string", "r112 append $ r84", "goto label05", "if $ z1 == 0 goto label06", "label r135 = com pryv filter r0", "$ r7 = r135 type", "if $ r7 == null goto label08", "r136 = com pryv filter r0", "$ r72 = r136 type", "r110 = $ r72 iterator", "label $ z0 = r110 have next", "if $ z0 == 0 goto label08", "$ r73 = r110 next", "r111 = java lang string $ r73", "r117 = new java lang string builder", "specialinvoke r117 < init >", "$ r75 = r117 append \\ `` & type [ ] =\\ ``", "$ r76 = $ r75 append r111", "$ r77 = $ r76 to string", "r112 append $ r77", "goto label07", "if $ z0 == 0 goto label08", "label r137 = com pryv filter r0", "$ r8 = r137 run", "if $ r8 == null goto label09", "r118 = new java lang string builder", "specialinvoke r118 < init >", "$ r67 = r118 append \\ `` & running=\\ ``", "r138 = com pryv filter r0", "$ r68 = r138 run", "$ r69 = $ r67 append $ r68", "$ r70 = $ r69 to string", "r112 append $ r70", "label r139 = com pryv filter r0", "$ r9 = r139 sort ascend", "if $ r9 == null goto label10", "r119 = new java lang string builder", "specialinvoke r119 < init >", "$ r61 = r119 append \\ `` & sort ascending=\\ ``", "r140 = com pryv filter r0", "$ r62 = r140 sort ascend", "$ r63 = $ r61 append $ r62", "$ r64 = $ r63 to string", "r112 append $ r64", "label r141 = com pryv filter r0", "$ r10 = r141 skip", "if $ r10 == null goto label11", "r120 = new java lang string builder", "specialinvoke r120 < init >", "$ r55 = r120 append \\ `` & skip=\\ ``", "r142 = com pryv filter r0", "$ r56 = r142 skip", "$ r57 = $ r55 append $ r56", "$ r58 = $ r57 to string", "r112 append $ r58", "label r143 = com pryv filter r0", "$ r11 = r143 limit", "if $ r11 == null goto label12", "r121 = new java lang string builder", "specialinvoke r121 < init >", "$ r49 = r121 append \\ `` & limit=\\ ``", "r144 = com pryv filter r0", "$ r50 = r144 limit", "$ r51 = $ r49 append $ r50", "$ r52 = $ r51 to string", "r112 append $ r52", "label r145 = com pryv filter r0", "$ r12 = r145 state", "if $ r12 == null goto label13", "r122 = new java lang string builder", "specialinvoke r122 < init >", "$ r43 = r122 append \\ `` & state=\\ ``", "r146 = com pryv filter r0", "$ r44 = r146 state", "$ r45 = $ r43 append $ r44", "$ r46 = $ r45 to string", "r112 append $ r46", "label r147 = com pryv filter r0", "$ r13 = r147 modify since", "if $ r13 == null goto label14", "r123 = new java lang string builder", "specialinvoke r123 < init >", "$ r37 = r123 append \\ `` & modify since=\\ ``", "r148 = com pryv filter r0", "$ r38 = r148 modify since", "$ r39 = $ r37 append $ r38", "$ r40 = $ r39 to string", "r112 append $ r40", "label r149 = com pryv filter r0", "$ r14 = r149 parent id", "if $ r14 == null goto label15", "r124 = new java lang string builder", "specialinvoke r124 < init >", "$ r31 = r124 append \\ `` & parent id=\\ ``", "r150 = com pryv filter r0", "$ r32 = r150 parent id", "$ r33 = $ r31 append $ r32", "$ r34 = $ r33 to string", "r112 append $ r34", "label r151 = com pryv filter r0", "$ r15 = r151 include deletion", "if $ r15 == null goto label16", "r125 = new java lang string builder", "specialinvoke r125 < init >", "$ r25 = r125 append \\ `` & include deletions=\\ ``", "r152 = com pryv filter r0", "$ r26 = r152 include deletion", "$ r27 = $ r25 append $ r26", "$ r28 = $ r27 to string", "r112 append $ r28", "label r153 = com pryv filter r0", "$ r16 = r153 include deletion since", "if $ r16 == null goto label17", "r126 = new java lang string builder", "specialinvoke r126 < init >", "$ r19 = r126 append \\ `` & include deletion since=\\ ``", "r154 = com pryv filter r0", "$ r20 = r154 include deletion since", "$ r21 = $ r19 append $ r20", "$ r22 = $ r21 to string", "r112 append $ r22", "label $ r17 = r112 to string", "return $ r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [110], [111], [112], [113], [114], [115], [116], [117], [118], [119], [120], [121], [122], [123], [124], [125], [126], [127], [128], [129], [130], [131], [132], [133], [134], [135], [136], [137], [138], [139], [140], [141], [142], [143], [144], [145], [146], [147], [148], [149], [150], [151], [152], [153], [154], [155], [156], [157], [158], [159], [160], [161], [162], [163], [164], [165], [166], [167], [168], [169], [170], [171], [172], [173], [174], [175], [176], [177], [178], [179], [180], []]}
{"nodes": ["r0 = @ this", "r4 = com pryv model event r0", "$ r1 = r4 weak connection", "$ r2 = $ r1 get", "$ r3 = com pryv abstract connection $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["com pryv pryv supervisor activate = 0", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r15 = org apache common beanutils bean map r0", "$ r3 = r15 bean", "if $ r3 == null goto label7", "r16 = org apache common beanutils bean map r0", "r2 = r16 get read method r1", "if r2 == null goto label7", "label r17 = org apache common beanutils bean map r0", "$ r5 = r17 bean", "$ r4 = org apache common beanutils bean map null_arguments", "$ r6 = r2 invoke $ r5 $ r4", "label return $ r6", "if r2 == null goto label7", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r7 = new java util array list", "r8 = org apache common beanutils bean map r0", "$ r4 = r8 read method", "$ i0 = $ r4 size", "specialinvoke r7 < init > $ i0", "r9 = org apache common beanutils bean map r0", "r2 = r9 value iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r6 = r2 next", "r7 add $ r6", "goto label1", "if $ z0 == 0 goto label2", "label $ r5 = org apache common collection list unmodifiable list decorate r7", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common beanutils bean map r0", "r2 bean = r1", "r3 = org apache common beanutils bean map r0", "r3 reinitialise", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache common beanutils bean map r0", "$ r2 = r5 read method", "$ r3 = $ r2 get r1", "$ r4 = java lang reflect method $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common beanutils bean predicate r0", "r2 property name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 == r2 goto label1", "if r1 == null goto label2", "$ z0 = r1 equal r2", "if $ z0 == 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common beanutils bean utils bean r0", "$ r1 = r2 property utils bean", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label $ r3 = r1 get class", "$ z0 = $ r3 be array", "if $ z0 == 0 goto label3", "$ i1 = java lang reflect array get length r1", "if $ i1 < = 0 goto label2", "$ r6 = java lang reflect array get r1 0", "return $ r6", "if $ i1 < = 0 goto label2", "label return null", "if $ z0 == 0 goto label3", "label $ z1 = r1 instanceof java util collection", "if $ z1 == 0 goto label5", "r2 = java util collection r1", "$ i0 = r2 size", "if $ i0 < = 0 goto label4", "$ r4 = r2 iterator", "$ r5 = $ r4 next", "return $ r5", "if $ i0 < = 0 goto label4", "label return null", "if $ z1 == 0 goto label5", "label return r1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r9 = new java lang string buffer", "specialinvoke r9 < init >", "$ r2 = r0 get class", "r10 = org apache common beanutils converter abstract converter r0", "$ r3 = r10 to string $ r2", "$ r4 = r9 append $ r3", "$ r5 = $ r4 append \\ `` [ use default=\\ ``", "r11 = org apache common beanutils converter abstract converter r0", "$ z0 = r11 use default", "$ r6 = $ r5 append $ z0", "$ r7 = $ r6 append \\ `` ] \\ ``", "$ r8 = $ r7 to string", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common beanutils converter date time converter r0", "$ r1 = r2 pattern", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["b0 = @ parameter0", "$ r0 = org apache common beanutils convert utils bean get instance", "$ r0 set default byte b0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org apache common beanutils convert utils bean get instance", "$ c0 = $ r0 get default character", "return $ c0"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org apache common beanutils convert utils bean get instance", "$ d0 = $ r0 get default double", "return $ d0"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org apache common beanutils convert utils bean get instance", "$ i0 = $ r0 get default integer", "return $ i0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "z1 = @ parameter1", "i0 = @ parameter2", "r1 = org apache common beanutils convert utils bean r0", "specialinvoke r1 register primitive z0", "r2 = org apache common beanutils convert utils bean r0", "specialinvoke r2 register standard z0 z1", "r3 = org apache common beanutils convert utils bean r0", "specialinvoke r3 register other z0", "r4 = org apache common beanutils convert utils bean r0", "specialinvoke r4 register array z0 i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common beanutils dyna property r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = org apache common beanutils lazy dyna bean class $ java $ lang $ object", "if $ r4 ! = null goto label01", "$ r26 = org apache common beanutils lazy dyna bean class $ \\ `` java lang object\\ ``", "org apache common beanutils lazy dyna bean class $ java $ lang $ object = $ r26", "goto label02", "label if r2 == $ r26 goto label11", "$ r5 = org apache common beanutils lazy dyna bean class $ java $ lang $ string", "if $ r5 ! = null goto label03", "$ r27 = org apache common beanutils lazy dyna bean class $ \\ `` java lang string\\ ``", "org apache common beanutils lazy dyna bean class $ java $ lang $ string = $ r27", "goto label04", "label if r2 == $ r27 goto label11", "$ r6 = org apache common beanutils lazy dyna bean class $ java $ lang $ boolean", "if $ r6 ! = null goto label05", "$ r28 = org apache common beanutils lazy dyna bean class $ \\ `` java lang boolean\\ ``", "org apache common beanutils lazy dyna bean class $ java $ lang $ boolean = $ r28", "goto label06", "label if r2 == $ r28 goto label11", "$ r7 = org apache common beanutils lazy dyna bean class $ java $ lang $ character", "if $ r7 ! = null goto label07", "$ r29 = org apache common beanutils lazy dyna bean class $ \\ `` java lang character\\ ``", "org apache common beanutils lazy dyna bean class $ java $ lang $ character = $ r29", "goto label08", "label if r2 == $ r29 goto label11", "$ r8 = org apache common beanutils lazy dyna bean class $ java $ util $ date", "if $ r8 ! = null goto label09", "$ r30 = org apache common beanutils lazy dyna bean class $ \\ `` java util date\\ ``", "org apache common beanutils lazy dyna bean class $ java $ util $ date = $ r30", "goto label10", "label $ z0 = $ r30 be assignable from r2", "if $ z0 == 0 goto label12", "label return null", "if $ z0 == 0 goto label12", "label $ r9 = r2 new instance", "label return $ r9", "if $ r8 ! = null goto label09", "label $ r30 = org apache common beanutils lazy dyna bean class $ java $ util $ date", "if $ r7 ! = null goto label07", "label $ r29 = org apache common beanutils lazy dyna bean class $ java $ lang $ character", "if $ r6 ! = null goto label05", "label $ r28 = org apache common beanutils lazy dyna bean class $ java $ lang $ boolean", "if $ r5 ! = null goto label03", "label $ r27 = org apache common beanutils lazy dyna bean class $ java $ lang $ string", "if $ r4 ! = null goto label01", "label $ r26 = org apache common beanutils lazy dyna bean class $ java $ lang $ object"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], []]}
{"nodes": ["r0 = @ this", "r20 = org apache common beanutils lazy dyna list r0", "$ i0 = r20 size", "if $ i0 ! = 0 goto label01", "r21 = org apache common beanutils lazy dyna list r0", "$ r16 = r21 element type", "if $ r16 ! = null goto label01", "$ r17 = newarray org apache common beanutils lazy dyna bean [ 0 ]", "return $ r17", "if $ r16 ! = null goto label01", "label r22 = org apache common beanutils lazy dyna list r0", "$ r2 = r22 element type", "r23 = org apache common beanutils lazy dyna list r0", "$ i1 = r23 size", "$ r3 = java lang reflect array new instance $ r2 $ i1", "$ r4 = java lang object [ ] $ r3", "r1 = java lang object [ ] $ r4", "i2 = 0", "label r24 = org apache common beanutils lazy dyna list r0", "$ i3 = r24 size", "if i2 > = $ i3 goto label10", "$ r5 = org apache common beanutils lazy dyna list class $ java $ util $ map", "if $ r5 ! = null goto label03", "$ r18 = org apache common beanutils lazy dyna list class $ \\ `` java util map\\ ``", "org apache common beanutils lazy dyna list class $ java $ util $ map = $ r18", "goto label04", "label r25 = org apache common beanutils lazy dyna list r0", "$ r6 = r25 element type", "$ z0 = $ r18 be assignable from $ r6", "if $ z0 == 0 goto label05", "r26 = org apache common beanutils lazy dyna list r0", "$ r13 = r26 get i2", "$ r14 = org apache common beanutils lazy dyna map $ r13", "$ r15 = $ r14 get map", "r1 [ i2 ] = $ r15", "goto label09", "label i2 = i2 + 1", "goto label02", "if $ z0 == 0 goto label05", "label $ r7 = org apache common beanutils lazy dyna list class $ org $ apache $ common $ beanutils $ dyna bean", "if $ r7 ! = null goto label06", "$ r19 = org apache common beanutils lazy dyna list class $ \\ `` org apache common beanutils dyna bean\\ ``", "org apache common beanutils lazy dyna list class $ org $ apache $ common $ beanutils $ dyna bean = $ r19", "goto label07", "label r27 = org apache common beanutils lazy dyna list r0", "$ r8 = r27 element type", "$ z1 = $ r19 be assignable from $ r8", "if $ z1 == 0 goto label08", "r28 = org apache common beanutils lazy dyna list r0", "$ r12 = r28 get i2", "r1 [ i2 ] = $ r12", "if $ z1 == 0 goto label08", "label r29 = org apache common beanutils lazy dyna list r0", "$ r9 = r29 get i2", "$ r10 = org apache common beanutils wrap dyna bean $ r9", "$ r11 = $ r10 get instance", "r1 [ i2 ] = $ r11", "if $ r7 ! = null goto label06", "label $ r19 = org apache common beanutils lazy dyna list class $ org $ apache $ common $ beanutils $ dyna bean", "if $ r5 ! = null goto label03", "label $ r18 = org apache common beanutils lazy dyna list class $ java $ util $ map", "if i2 > = $ i3 goto label10", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [], [39], [40], [41], [42], [43], [], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], []]}
{"nodes": ["$ r0 = org apache common beanutils locale locale bean utils bean get locale bean utils instance", "$ z0 = $ r0 get apply localize", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org apache common beanutils method utils cache", "i0 = $ r0 size", "$ r1 = org apache common beanutils method utils cache", "$ r1 clear", "return i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common beanutils property utils bean get instance", "$ r2 = $ r1 get write method r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common collection array stack r0", "i0 = r4 size", "if i0 > 0 goto label1", "r3 = new java util empty stack exception", "specialinvoke r3 < init >", "throw r3", "if i0 > 0 goto label1", "label $ i1 = i0 - 1", "r5 = org apache common collection array stack r0", "$ r1 = r5 get $ i1", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common collection array stack r0", "i0 = r4 size", "if i0 > 0 goto label1", "r3 = new java util empty stack exception", "specialinvoke r3 < init >", "throw r3", "if i0 > 0 goto label1", "label $ i1 = i0 - 1", "r5 = org apache common collection array stack r0", "$ r1 = r5 remove $ i1", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common cli already select exception r0", "$ r1 = r2 option", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common cli help formatter r0", "r2 default new line = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common cli help formatter r0", "$ r1 = r2 default long opt prefix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common cli help formatter r0", "$ r1 = r2 default arg name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = r1 length", "if $ i0 ! = 0 goto label2", "label return r1", "if $ i0 ! = 0 goto label2", "label i3 = r1 length", "label if i3 < = 0 goto label4", "$ i1 = i3 - 1", "$ c2 = r1 char at $ i1", "$ z0 = java lang character be whitespace $ c2", "if $ z0 == 0 goto label4", "i3 = i3 + -1", "goto label3", "if $ z0 == 0 goto label4", "label $ r2 = r1 substring 0 i3", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common cli option r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common cli option r0", "r2 type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common cli option r0", "$ z0 = r1 require", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "org apache common cli option builder longopt = r0", "$ r1 = org apache common cli option builder instance", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["org apache common cli option builder require = 1", "$ r0 = org apache common cli option builder instance", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org apache common cli option builder longopt", "if $ r0 ! = null goto label1", "org apache common cli option builder reset", "$ r2 = new java lang illegal argument exception", "specialinvoke $ r2 < init > \\ `` must specify longopt\\ ``", "throw $ r2", "if $ r0 ! = null goto label1", "label $ r1 = org apache common cli option builder create null", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java io file", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache common codec binary binary codec to ascii byte r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache common codec binary binary codec from ascii r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r4 = org apache common codec binary binary codec empty_byte_array", "return $ r4", "if r1 ! = null goto label1", "label $ r2 = r1 to char array", "$ r3 = org apache common codec binary binary codec from ascii $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java lang string", "$ r2 = org apache common codec charsets iso_8859_1", "specialinvoke $ r1 < init > r0 $ r2", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org apache common codec digest digest utils get digest \\ `` sha-256\\ ``", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org apache common codec digest digest utils get digest \\ `` sha-512\\ ``", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common codec digest digest utils get md2 digest", "$ r2 = $ r1 digest r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common codec digest md5 crypt md5 crypt r0 r1 \\ `` $ 1 $ \\ ``", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common codec digest sha2 crypt sha256 crypt r0 null", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r16 = @ parameter0", "if r16 ! = null goto label01", "return null", "if r16 ! = null goto label01", "label r20 = org apache common codec language cologne phonetic r0", "r17 = specialinvoke r20 preprocess r16", "r18 = new org apache common codec language cologne phonetic $ cologne output buffer", "$ i1 = r17 length", "$ i2 = $ i1 * 2", "r21 = org apache common codec language cologne phonetic r0", "specialinvoke r18 < init > r21 $ i2", "r19 = new org apache common codec language cologne phonetic $ cologne input buffer", "$ r5 = r17 to char array", "r22 = org apache common codec language cologne phonetic r0", "specialinvoke r19 < init > r22 $ r5", "c4 = 45", "c5 = 47", "i6 = r19 length", "label if i6 < = 0 goto label32", "c0 = r19 remove next", "$ i3 = r19 length", "i6 = $ i3", "if $ i3 < = 0 goto label03", "c7 = r19 get next char", "goto label04", "label $ r7 = org apache common codec language cologne phonetic aeijouy", "$ z0 = org apache common codec language cologne phonetic array contain $ r7 c0", "if $ z0 == 0 goto label05", "c8 = 48", "goto label28", "label if c8 == 45 goto label31", "if c5 == c8 goto label29", "if c8 ! = 48 goto label30", "if c5 == 47 goto label30", "label if c8 < 48 goto label30", "if c8 < = 56 goto label31", "label r18 add right c8", "label c4 = c0", "c5 = c8", "goto label02", "if $ z0 == 0 goto label05", "label if c0 == 72 goto label06", "if c0 < 65 goto label06", "if c0 < = 90 goto label08", "label if c5 ! = 47 goto label07", "label c8 = 45", "if c0 < = 90 goto label08", "label if c0 == 66 goto label09", "if c0 ! = 80 goto label10", "if c7 == 72 goto label10", "label c8 = 49", "if c7 == 72 goto label10", "label if c0 == 68 goto label11", "if c0 ! = 84 goto label12", "label $ r8 = org apache common codec language cologne phonetic scz", "$ z1 = org apache common codec language cologne phonetic array contain $ r8 c7", "if $ z1 ! = 0 goto label12", "c8 = 50", "if $ z1 ! = 0 goto label12", "label $ r9 = org apache common codec language cologne phonetic wfpv", "$ z2 = org apache common codec language cologne phonetic array contain $ r9 c0", "if $ z2 == 0 goto label13", "c8 = 51", "if $ z2 == 0 goto label13", "label $ r10 = org apache common codec language cologne phonetic gkq", "$ z3 = org apache common codec language cologne phonetic array contain $ r10 c0", "if $ z3 == 0 goto label14", "c8 = 52", "if $ z3 == 0 goto label14", "label if c0 ! = 88 goto label15", "$ r15 = org apache common codec language cologne phonetic ckq", "$ z8 = org apache common codec language cologne phonetic array contain $ r15 c4", "if $ z8 ! = 0 goto label15", "label if c0 == 83 goto label16", "if c0 ! = 90 goto label17", "label c8 = 56", "if c0 ! = 90 goto label17", "label if c0 ! = 67 goto label22", "if c5 ! = 47 goto label19", "$ r14 = org apache common codec language cologne phonetic ahkloqrux", "$ z7 = org apache common codec language cologne phonetic array contain $ r14 c7", "if $ z7 == 0 goto label18", "label c8 = 56", "if c5 ! = 47 goto label19", "label $ r12 = org apache common codec language cologne phonetic sz", "$ z5 = org apache common codec language cologne phonetic array contain $ r12 c4", "if $ z5 ! = 0 goto label20", "$ r13 = org apache common codec language cologne phonetic ahoukqx", "$ z6 = org apache common codec language cologne phonetic array contain $ r13 c7", "if $ z6 ! = 0 goto label21", "label c8 = 56", "if $ z6 ! = 0 goto label21", "label c8 = 52", "label if c0 ! = 67 goto label22", "label $ r11 = org apache common codec language cologne phonetic tdx", "$ z4 = org apache common codec language cologne phonetic array contain $ r11 c0", "if $ z4 == 0 goto label23", "c8 = 56", "if $ z4 == 0 goto label23", "label if c0 ! = 82 goto label24", "c8 = 55", "label if c0 ! = 82 goto label24", "label if c0 ! = 76 goto label25", "c8 = 53", "label if c0 ! = 76 goto label25", "label if c0 == 77 goto label26", "if c0 ! = 78 goto label27", "label c8 = 54", "if c0 ! = 78 goto label27", "label c8 = c0", "if $ i3 < = 0 goto label03", "label c7 = 45", "label if i6 < = 0 goto label32", "label $ r6 = r18 to string", "return $ r6"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [110], [111], [112], [113], [114], [115], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common codec net q codec r0", "r1 encode blank = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r5 = @ parameter0", "r0 = @ parameter1", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label if r5 ! = null goto label2", "r5 = org apache common codec net u r l codec www_form_url", "label $ r3 = new java io byte array output stream", "specialinvoke $ r3 < init >", "i0 = lengthof r0", "i9 = 0", "label if i9 > = i0 goto label8", "b1 = r0 [ i9 ]", "i10 = b1", "if b1 > = 0 goto label4", "i10 = 256 + b1", "label $ z0 = r5 get i10", "if $ z0 == 0 goto label6", "if i10 ! = 32 goto label5", "i10 = 43", "label $ r3 write i10", "goto label7", "label i9 = i9 + 1", "goto label3", "if $ z0 == 0 goto label6", "label $ r3 write 37", "$ i4 = i10 > > 4", "$ i5 = $ i4 & 15", "$ c6 = java lang character for digit $ i5 16", "c2 = java lang character to upper case $ c6", "$ i7 = i10 & 15", "$ c8 = java lang character for digit $ i7 16", "c3 = java lang character to upper case $ c8", "$ r3 write c2", "$ r3 write c3", "label if i9 > = i0 goto label8", "label $ r4 = $ r3 to byte array", "return $ r4"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common codec net u r l codec r0", "$ r1 = r2 charset", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache common codec binary hex encode hex string r1", "r5 = org apache common codec binary hex r0", "$ r3 = r5 get charset", "$ r4 = $ r2 get bytes $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common codec digest hmac utils r0", "$ r2 = r4 mac", "$ r3 = $ r2 do final r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = org apache common codec digest digest utils get digest \\ `` sha-512 224\\ ``", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache common codec binary hex encode hex string r1", "r5 = org apache common codec binary hex r0", "$ r3 = r5 get charset name", "$ r4 = org apache common codec binary string utils get byte unchecked $ r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache common codec net u r l codec decode url r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common collections4 bag abstract map bag r0", "$ r2 = r3 map", "$ z0 = $ r2 contain key r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org apache common collections4 bag", "if $ z0 == 0 goto label1", "$ r3 = org apache common collections4 bag r1", "r5 = org apache common collections4 bag abstract map bag r0", "$ z2 = r5 retain all $ r3", "return $ z2", "if $ z0 == 0 goto label1", "label r4 = new org apache common collections4 bag hash bag", "specialinvoke r4 < init > r1", "r6 = org apache common collections4 bag abstract map bag r0", "r7 = org apache common collections4 bag r4", "$ z1 = r6 retain all r7", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r6 = org apache common collections4 bag abstract map bag r0", "$ i0 = r6 size", "r1 = newarray java lang object [ $ i0 ]", "i2 = 0", "r7 = org apache common collections4 bag abstract map bag r0", "$ r4 = r7 map", "$ r5 = $ r4 key set", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label4", "r3 = r2 next", "r8 = org apache common collections4 bag abstract map bag r0", "i3 = r8 get count r3", "label if i3 < = 0 goto label3", "$ i1 = i2", "i2 = i2 + 1", "r1 [ $ i1 ] = r3", "i3 = i3 + -1", "goto label2", "label if i3 < = 0 goto label3", "label goto label1", "if $ z0 == 0 goto label4", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r14 = org apache common collections4 bag abstract map bag r0", "$ i1 = r14 size", "if $ i1 ! = 0 goto label1", "return \\ `` [ ] \\ ``", "if $ i1 ! = 0 goto label1", "label r13 = new java lang string builder", "specialinvoke r13 < init >", "r13 append 91", "r15 = org apache common collections4 bag abstract map bag r0", "$ r6 = r15 unique set", "r2 = $ r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label4", "r3 = r2 next", "r16 = org apache common collections4 bag abstract map bag r0", "i0 = r16 get count r3", "r13 append i0", "r13 append 58", "r13 append r3", "$ z1 = r2 have next", "if $ z1 == 0 goto label3", "r13 append 44", "label goto label2", "if $ z0 == 0 goto label4", "label r13 append 93", "$ r8 = r13 to string", "return $ r8"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common collections4 bidimap abstract dual bidi map r0", "$ r1 = r5 key set", "if $ r1 ! = null goto label1", "r4 = new org apache common collections4 bidimap abstract dual bidi map $ key set", "r6 = org apache common collections4 bidimap abstract dual bidi map r0", "specialinvoke r4 < init > r6", "r7 = org apache common collections4 bidimap abstract dual bidi map r0", "r8 = java util set r4", "r7 key set = r8", "label r9 = org apache common collections4 bidimap abstract dual bidi map r0", "$ r2 = r9 key set", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collections4 bidimap abstract dual bidi map r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org apache common collections4 bidimap tree bidi map check key r1", "r3 = org apache common collections4 bidimap tree bidi map r0", "$ r2 = specialinvoke r3 lookup key r1", "if $ r2 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r2 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "i1 = 0", "r5 = org apache common collections4 collection composite collection r0", "$ r3 = r5 all", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r4 = r1 next", "r2 = java util collection $ r4", "$ i0 = r2 size", "i1 = i1 + $ i0", "goto label1", "if $ z0 == 0 goto label2", "label return i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common collections4 collection composite collection r0", "$ r3 = r5 all", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label3", "$ r4 = r1 next", "r2 = java util collection $ r4", "$ z1 = r2 be empty", "if $ z1 ! = 0 goto label2", "return 0", "if $ z1 ! = 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r11 = org apache common collections4 collection composite collection r0", "$ r4 = r11 all", "$ z0 = $ r4 be empty", "if $ z0 == 0 goto label1", "$ r9 = org apache common collections4 iterators empty iterator empty iterator", "return $ r9", "if $ z0 == 0 goto label1", "label r10 = new org apache common collections4 iterators iterator chain", "specialinvoke r10 < init >", "r12 = org apache common collections4 collection composite collection r0", "$ r6 = r12 all", "r2 = $ r6 iterator", "label $ z1 = r2 have next", "if $ z1 == 0 goto label3", "$ r7 = r2 next", "r3 = java util collection $ r7", "$ r8 = r3 iterator", "r10 add iterator $ r8", "goto label2", "if $ z1 == 0 goto label3", "label r13 = java util iterator r10", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache common collections4 collection indexed collection r0", "$ r2 = r5 index", "$ r3 = $ r2 get r1", "$ r4 = java util collection $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = new org apache common collections4 collection predicate collection $ builder", "$ r1 = org apache common collections4 functors not null predicate not null predicate", "specialinvoke $ r0 < init > $ r1", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = r0 size", "$ i1 = lengthof r1", "if $ i0 > = $ i1 goto label4", "r3 = r0 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label3", "r4 = r3 next", "$ z2 = org apache common collections4 array utils contain r1 r4", "if $ z2 == 0 goto label2", "return 1", "if $ z2 == 0 goto label2", "label goto label1", "if $ z1 == 0 goto label3", "label goto label7", "label return 0", "if $ i0 > = $ i1 goto label4", "label i2 = lengthof r1", "i3 = 0", "label if i3 > = i2 goto label7", "r2 = r1 [ i3 ]", "$ z0 = r0 contain r2", "if $ z0 == 0 goto label6", "label i3 = i3 + 1", "goto label5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 == null goto label1", "$ r2 = org apache common collections4 iterable utils find r0 r1", "goto label2", "label return $ r2", "if r1 == null goto label1", "label $ r2 = null"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 == null goto label1", "$ z0 = org apache common collections4 iterable utils match all r0 r1", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r1 instanceof java util collection", "if $ z0 == 0 goto label1", "$ r3 = java util collection r1", "$ z2 = r0 add all $ r3", "return $ z2", "if $ z0 == 0 goto label1", "label $ r2 = r1 iterator", "$ z1 = org apache common collections4 collection utils add all r0 $ r2", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label01", "return 0", "if r0 ! = null goto label01", "label i0 = 0", "$ z0 = r0 instanceof java util map", "if $ z0 == 0 goto label02", "$ r7 = java util map r0", "i0 = $ r7 size", "goto label12", "label return i0", "if $ z0 == 0 goto label02", "label $ z1 = r0 instanceof java util collection", "if $ z1 == 0 goto label03", "$ r6 = java util collection r0", "i0 = $ r6 size", "if $ z1 == 0 goto label03", "label $ z2 = r0 instanceof java lang iterable", "if $ z2 == 0 goto label04", "$ r5 = java lang iterable r0", "i0 = org apache common collections4 iterable utils size $ r5", "if $ z2 == 0 goto label04", "label $ z3 = r0 instanceof java lang object [ ]", "if $ z3 == 0 goto label05", "$ r3 = java lang object [ ] r0", "$ r4 = java lang object [ ] $ r3", "i0 = lengthof $ r4", "if $ z3 == 0 goto label05", "label $ z4 = r0 instanceof java util iterator", "if $ z4 == 0 goto label06", "$ r2 = java util iterator r0", "i0 = org apache common collections4 iterator utils size $ r2", "if $ z4 == 0 goto label06", "label $ z5 = r0 instanceof java util enumeration", "if $ z5 == 0 goto label09", "r16 = java util enumeration r0", "label $ z6 = r16 have more element", "if $ z6 == 0 goto label08", "i0 = i0 + 1", "r16 next element", "goto label07", "if $ z6 == 0 goto label08", "label goto label12", "if $ z5 == 0 goto label09", "label i0 = java lang reflect array get length r0", "label goto label12"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common collections4 list utils remove all r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org apache common collections4 comparators boolean comparator true_first", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org apache common collections4 comparators comparable comparator instance", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r5 = org apache common collections4 comparators comparator chain r0", "specialinvoke r5 check lock", "r6 = org apache common collections4 comparators comparator chain r0", "$ r2 = r6 comparator chain", "$ r2 add r1", "if z0 ! = 1 goto label1", "r7 = org apache common collections4 comparators comparator chain r0", "$ r4 = r7 order bit", "r8 = org apache common collections4 comparators comparator chain r0", "$ r3 = r8 comparator chain", "$ i0 = $ r3 size", "$ i1 = $ i0 - 1", "$ r4 set $ i1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = org apache common collections4 comparators comparator chain r0", "r2 set comparator i0 r1 0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collections4 comparators comparator chain r0", "$ r1 = r2 comparator chain", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache common collections4 comparators reverse comparator r0", "$ r3 = r4 comparator", "$ i0 = $ r3 compare r2 r1", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org apache common collections4 comparators transform comparator r0", "$ r5 = r8 transformer", "r3 = $ r5 transform r1", "r9 = org apache common collections4 comparators transform comparator r0", "$ r6 = r9 transformer", "r4 = $ r6 transform r2", "r10 = org apache common collections4 comparators transform comparator r0", "$ r7 = r10 decorate", "$ i0 = $ r7 compare r3 r4", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r2 ! = null goto label1", "r2 = org apache common collections4 comparator utils natural_comparator", "label i0 = r2 compare r0 r1", "if i0 < = 0 goto label2", "$ r3 = r0", "goto label3", "label return $ r3", "if i0 < = 0 goto label2", "label $ r3 = r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["$ r0 = org apache common collections4 iterable utils empty_iterable", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache common collections4 fluent iterable r0", "$ r2 = r5 iterable", "$ r3 = org apache common collections4 iterable utils chain iterable $ r2 r1", "$ r4 = org apache common collections4 fluent iterable of $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org apache common collections4 fluent iterable r0", "$ r3 = r6 iterable", "$ r4 = org apache common collections4 iterable utils collate iterable r2 $ r3 r1", "$ r5 = org apache common collections4 fluent iterable of $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common collections4 fluent iterable r0", "$ r2 = r3 iterable", "$ z0 = org apache common collections4 iterable utils match all $ r2 r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common collections4 functors abstract quantifier predicate r0", "$ r1 = r3 i predicate", "$ r2 = org apache common collections4 functors functor utils copy $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common collections4 functors chain closure r0", "$ r1 = r3 i closure", "$ r2 = org apache common collections4 functors functor utils copy $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collections4 functors closure transformer r0", "$ r1 = r2 i closure", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org apache common collections4 functor exception", "specialinvoke r3 < init > \\ `` exception closure invoked\\ ``", "r4 = java lang throwable r3", "throw r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache common collections4 functors if transformer r0", "$ r2 = r7 i predicate", "$ z0 = $ r2 evaluate r1", "if $ z0 == 0 goto label1", "r8 = org apache common collections4 functors if transformer r0", "$ r5 = r8 i true transformer", "$ r6 = $ r5 transform r1", "return $ r6", "if $ z0 == 0 goto label1", "label r9 = org apache common collections4 functors if transformer r0", "$ r3 = r9 i false transformer", "$ r4 = $ r3 transform r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collections4 functors instanceof predicate r0", "$ r1 = r2 i type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common collections4 functors map transformer r0", "$ r2 = r4 i map", "$ r3 = $ r2 get r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common collections4 functors predicate transformer r0", "$ r2 = r4 i predicate", "$ z0 = $ r2 evaluate r1", "$ r3 = java lang boolean value of $ z0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "org apache common collections4 iterable utils check not null r0", "$ b1 = l0 cmp 0l", "if $ b1 > = 0 goto label1", "r3 = new java lang illegal argument exception", "specialinvoke r3 < init > \\ `` element to skip parameter must not be negative \\ ``", "throw r3", "if $ b1 > = 0 goto label1", "label r4 = new org apache common collections4 iterable utils $ 9", "specialinvoke r4 < init > r0 l0", "r5 = java lang iterable r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r1 = org apache common collections4 iterable utils empty iterable", "goto label2", "label return $ r1", "if r0 ! = null goto label1", "label $ r1 = r0"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ this", "r6 = org apache common collections4 iterators entry set map iterator r0", "$ r1 = r6 last", "if $ r1 ! = null goto label1", "r5 = new java lang illegal state exception", "specialinvoke r5 < init > \\ `` iterator get key can only be call after next and before remove \\ ``", "throw r5", "if $ r1 ! = null goto label1", "label r7 = org apache common collections4 iterators entry set map iterator r0", "$ r2 = r7 last", "$ r3 = $ r2 get key", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common collections4 iterators filter iterator r0", "$ z0 = r4 next object set", "if $ z0 ! = 0 goto label1", "r5 = org apache common collections4 iterators filter iterator r0", "$ z1 = specialinvoke r5 set next object", "if $ z1 ! = 0 goto label1", "r3 = new java util no such element exception", "specialinvoke r3 < init >", "throw r3", "if $ z1 ! = 0 goto label1", "label r6 = org apache common collections4 iterators filter iterator r0", "r6 next object set = 0", "r7 = org apache common collections4 iterators filter iterator r0", "$ r1 = r7 next object", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common collections4 iterators filter iterator r0", "r2 predicate = r1", "r3 = org apache common collections4 iterators filter iterator r0", "r3 next object = null", "r4 = org apache common collections4 iterators filter iterator r0", "r4 next object set = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common collections4 iterators iterator chain r0", "specialinvoke r4 lock chain", "r5 = org apache common collections4 iterators iterator chain r0", "r5 update current iterator", "r6 = org apache common collections4 iterators iterator chain r0", "$ r1 = r6 current iterator", "r7 = org apache common collections4 iterators iterator chain r0", "r7 last used iterator = $ r1", "r8 = org apache common collections4 iterators iterator chain r0", "$ r2 = r8 current iterator", "$ r3 = $ r2 next", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common collections4 iterators iterator enumeration r0", "r2 iterator = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common collections4 iterators list iterator wrapper r0", "$ r2 = r4 iterator", "$ z0 = $ r2 instanceof java util list iterator", "if $ z0 == 0 goto label1", "r5 = org apache common collections4 iterators list iterator wrapper r0", "$ r3 = r5 iterator", "r1 = java util list iterator $ r3", "$ z1 = r1 have previous", "return $ z1", "if $ z0 == 0 goto label1", "label r6 = org apache common collections4 iterators list iterator wrapper r0", "$ i0 = r6 current index", "if $ i0 < = 0 goto label2", "$ z2 = 1", "goto label3", "label return $ z2", "if $ i0 < = 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collections4 iterators loop iterator r0", "$ r1 = r2 collection", "$ i0 = $ r1 size", "if $ i0 < = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common collections4 iterators pushback iterator r0", "$ r2 = r3 item", "$ r2 push r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collections4 iterators reverse list iterator r0", "$ r1 = r2 iterator", "$ z0 = $ r1 have previous", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collections4 iterators reverse list iterator r0", "$ r1 = r2 iterator", "$ i0 = $ r1 next index", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r2 = new org apache common collections4 iterators array iterator", "specialinvoke r2 < init > r0 i0", "r3 = org apache common collections4 resettable iterator r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r2 = new org apache common collections4 iterators array iterator", "specialinvoke r2 < init > r0 i0 i1", "r3 = org apache common collections4 resettable iterator r2", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "r5 = new java lang null pointer exception", "specialinvoke r5 < init > \\ `` iterator must not be null\\ ``", "throw r5", "if r0 ! = null goto label1", "label if r1 ! = null goto label2", "r6 = new java lang null pointer exception", "specialinvoke r6 < init > \\ `` predicate must not be null\\ ``", "throw r6", "label if r1 ! = null goto label2", "label r7 = new org apache common collections4 iterators filter iterator", "specialinvoke r7 < init > r0 r1", "r8 = java util iterator r7", "return r8"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common collections4 iterators pushback iterator pushback iterator r0", "r2 = java util iterator $ r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = org apache common collections4 iterator utils index of r0 r1", "if $ i0 == -1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 == -1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 ! = null goto label1", "$ r3 = new java lang null pointer exception", "specialinvoke $ r3 < init > \\ `` predicate must not be null\\ ``", "throw $ r3", "if r1 ! = null goto label1", "label if r0 == null goto label4", "label $ z0 = r0 have next", "if $ z0 == 0 goto label4", "r2 = r0 next", "$ z1 = r1 evaluate r2", "if $ z1 ! = 0 goto label3", "return 0", "if $ z1 ! = 0 goto label3", "label goto label2", "if $ z0 == 0 goto label4", "label return 1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common collections4 keyvalue multi key r0", "$ r1 = r4 key", "$ r2 = $ r1 clone", "$ r3 = java lang object [ ] $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache common collections4 keyvalue multi key r0", "$ r1 = r3 key", "$ r2 = $ r1 [ i0 ]", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = r0 goto label1", "return 1", "if r1 ! = r0 goto label1", "label $ z0 = r1 instanceof org apache common collections4 keyvalue multi key", "if $ z0 == 0 goto label2", "r2 = org apache common collections4 keyvalue multi key r1", "r5 = org apache common collections4 keyvalue multi key r0", "$ r4 = r5 key", "$ r3 = r2 key", "$ z1 = java util array equal $ r4 $ r3", "return $ z1", "if $ z0 == 0 goto label2", "label return 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collections4 list abstract link list r0", "$ r1 = r2 create header node", "r3 = org apache common collections4 list abstract link list r0", "r3 header = $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache common collections4 list abstract link list r0", "r3 = r4 create node r2", "r5 = org apache common collections4 list abstract link list r0", "r5 add node r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collections4 list cursorable link list r0", "$ r1 = r2 cursor 0", "r3 = java util list iterator $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org apache common collections4 list fix size list", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r6 = org apache common collections4 list growth list r0", "$ r2 = r6 decorate", "i1 = $ r2 size", "if i0 < = i1 goto label1", "r7 = org apache common collections4 list growth list r0", "$ r4 = r7 decorate", "$ i2 = i0 - i1", "$ r5 = java util collection n copy $ i2 null", "$ r4 add all $ r5", "label r8 = org apache common collections4 list growth list r0", "$ r3 = r8 decorate", "$ r3 add i0 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r7 = org apache common collections4 list growth list r0", "$ r2 = r7 decorate", "i1 = $ r2 size", "if i0 < i1 goto label1", "r8 = org apache common collections4 list growth list r0", "$ r5 = r8 decorate", "$ i2 = i0 - i1", "$ i3 = $ i2 + 1", "$ r6 = java util collection n copy $ i3 null", "$ r5 add all $ r6", "label r9 = org apache common collections4 list growth list r0", "$ r3 = r9 decorate", "$ r4 = $ r3 set i0 r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 be empty", "if $ z0 == 0 goto label1", "return 0", "if $ z0 == 0 goto label1", "label r10 = org apache common collections4 list tree list r0", "$ i0 = r10 mod count", "$ i1 = r1 size", "$ i2 = $ i0 + $ i1", "r11 = org apache common collections4 list tree list r0", "r11 mod count = $ i2", "r9 = new org apache common collections4 list tree list $ a v l node", "specialinvoke r9 < init > r1 null", "r12 = org apache common collections4 list tree list r0", "$ r4 = r12 root", "if $ r4 ! = null goto label2", "$ r8 = r9", "goto label3", "label r15 = org apache common collections4 list tree list r0", "r15 root = $ r8", "r16 = org apache common collections4 list tree list r0", "$ i4 = r16 size", "$ i5 = r1 size", "$ i6 = $ i4 + $ i5", "r17 = org apache common collections4 list tree list r0", "r17 size = $ i6", "return 1", "if $ r4 ! = null goto label2", "label r13 = org apache common collections4 list tree list r0", "$ r5 = r13 root", "r14 = org apache common collections4 list tree list r0", "$ i3 = r14 size", "$ r8 = org apache common collections4 list tree list $ a v l node access $ 300 $ r5 r9 $ i3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new java util array list", "$ i0 = r0 size", "specialinvoke $ r2 < init > $ i0", "$ r3 = org apache common collections4 collection utils select r0 r1 $ r2", "$ r4 = java util list $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common collections4 list predicated list predicate list r0 r1", "r3 = java util list $ r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collections4 map abstract hash map r0", "$ i0 = r2 mod count", "$ i1 = $ i0 + 1", "r3 = org apache common collections4 map abstract hash map r0", "r3 mod count = $ i1", "r4 = org apache common collections4 map abstract hash map r0", "r1 = r4 data", "$ i2 = lengthof r1", "i3 = $ i2 - 1", "label if i3 < 0 goto label2", "r1 [ i3 ] = null", "i3 = i3 + -1", "goto label1", "label if i3 < 0 goto label2", "label r5 = org apache common collections4 map abstract hash map r0", "r5 size = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "$ i2 = i1 - 1", "$ i3 = i0 & $ i2", "return $ i3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache common collections4 map abstract link map r0", "r2 = r7 get entry r1", "if r2 == null goto label1", "$ r4 = r2 after", "r8 = org apache common collections4 map abstract link map r0", "$ r3 = r8 header", "if $ r4 ! = $ r3 goto label2", "label $ r6 = null", "goto label3", "label return $ r6", "if $ r4 ! = $ r3 goto label2", "label $ r5 = r2 after", "$ r6 = $ r5 get key"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof java util map", "if $ z0 == 0 goto label1", "r2 = java util map r1", "r5 = org apache common collections4 map composite map r0", "$ r3 = r5 entry set", "$ r4 = r2 entry set", "$ z1 = $ r3 equal $ r4", "return $ z1", "if $ z0 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r4 = @ parameter0", "r7 = org apache common collections4 map link map r0", "r5 = r7 convert key r4", "i0 = 0", "r8 = org apache common collections4 map link map r0", "$ r1 = r8 header", "r6 = $ r1 after", "label r9 = org apache common collections4 map link map r0", "$ r2 = r9 header", "if r6 == $ r2 goto label3", "$ r3 = r6 key", "r10 = org apache common collections4 map link map r0", "$ z0 = r10 be equal key r5 $ r3", "if $ z0 == 0 goto label2", "return i0", "if $ z0 == 0 goto label2", "label r6 = r6 after", "i0 = i0 + 1", "goto label1", "if r6 == $ r2 goto label3", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache common collections4 map link map $ link map list", "r3 = org apache common collections4 map link map r0", "specialinvoke r2 < init > r3", "r4 = java util list r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common collections4 map list order map r0", "$ i0 = r5 size", "if $ i0 ! = 0 goto label1", "r4 = new java util no such element exception", "specialinvoke r4 < init > \\ `` map be empty\\ ``", "throw r4", "if $ i0 ! = 0 goto label1", "label r6 = org apache common collections4 map list order map r0", "$ r1 = r6 insert order", "$ r2 = $ r1 get 0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i3 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if i3 < 0 goto label1", "r23 = org apache common collections4 map list order map r0", "$ r13 = r23 insert order", "$ i2 = $ r13 size", "if i3 < = $ i2 goto label2", "label r22 = new java lang index out of bound exception", "r21 = new java lang string builder", "specialinvoke r21 < init >", "$ r7 = r21 append \\ `` index \\ ``", "$ r8 = $ r7 append i3", "$ r9 = $ r8 append \\", "r24 = org apache common collections4 map list order map r0", "$ r10 = r24 insert order", "$ i1 = $ r10 size", "$ r11 = $ r9 append $ i1", "$ r12 = $ r11 to string", "specialinvoke r22 < init > $ r12", "throw r22", "if i3 < = $ i2 goto label2", "label r25 = org apache common collections4 map list order map r0", "r3 = r25 decorate", "$ z0 = r3 contain key r1", "if $ z0 == 0 goto label4", "r4 = r3 remove r1", "r26 = org apache common collections4 map list order map r0", "$ r16 = r26 insert order", "i0 = $ r16 index of r1", "r27 = org apache common collections4 map list order map r0", "$ r17 = r27 insert order", "$ r17 remove i0", "if i0 > = i3 goto label3", "i3 = i3 + -1", "label r28 = org apache common collections4 map list order map r0", "$ r19 = r28 insert order", "$ r19 add i3 r1", "r3 put r1 r2", "return r4", "if $ z0 == 0 goto label4", "label r29 = org apache common collections4 map list order map r0", "$ r14 = r29 insert order", "$ r14 add i3 r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache common collections4 map multi value map r0", "r3 = r4 get collection r1", "if r3 ! = null goto label1", "return 0", "if r3 ! = null goto label1", "label $ z0 = r3 contain r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache common collections4 multiset abstract map multi set r0", "$ r3 = r5 map", "$ r4 = $ r3 get r1", "r2 = org apache common collections4 multiset abstract map multi set $ mutable integer $ r4", "if r2 == null goto label1", "$ i0 = r2 value", "return $ i0", "if r2 == null goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common collections4 functors any predicate any predicate r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common collections4 sequence edit script r0", "$ i0 = r1 lcs length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i1 = 0", "r5 = org apache common collections4 set composite set r0", "$ r3 = r5 all", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r4 = r1 next", "r2 = java util set $ r4", "$ i0 = r2 size", "i1 = i1 + $ i0", "goto label1", "if $ z0 == 0 goto label2", "label return i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common collections4 set composite set r0", "$ r3 = r5 all", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label3", "$ r4 = r1 next", "r2 = java util set $ r4", "$ z1 = r2 be empty", "if $ z1 ! = 0 goto label2", "return 0", "if $ z1 ! = 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache common collections4 set composite set r0", "$ r4 = r6 get set", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = java util set $ r5", "$ z1 = r3 contain r1", "if $ z1 == 0 goto label2", "$ z2 = r3 remove r1", "return $ z2", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common collections4 set list order set r0", "$ r1 = r3 set order", "$ r2 = org apache common collections4 list unmodifiable list unmodifiable list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common collections4 set unmodifiable sorted set unmodifiable sorted set r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == null goto label1", "if r1 ! = null goto label2", "label r6 = new java lang null pointer exception", "specialinvoke r6 < init > \\ `` set must not be null \\ ``", "throw r6", "if r1 ! = null goto label2", "label r2 = org apache common collections4 set utils difference r0 r1", "r3 = org apache common collections4 set utils difference r1 r0", "r7 = new org apache common collections4 set utils $ 6", "specialinvoke r7 < init > r0 r1 r2 r3", "r8 = org apache common collections4 set utils $ set view r7", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common collections4 trie abstract patricia trie r0", "r2 = r4 select r1", "if r2 ! = null goto label1", "return null", "if r2 ! = null goto label1", "label $ r3 = r2 get value", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache common compress archivers archive output stream r0", "$ r1 = r3 one byte", "$ i1 = i0 & 255", "$ b2 = byte $ i1", "$ r1 [ 0 ] = $ b2", "r4 = org apache common compress archivers archive output stream r0", "$ r2 = r4 one byte", "r5 = org apache common compress archivers archive output stream r0", "r5 write $ r2 0 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common compress archivers archive stream factory r0", "$ r1 = r2 entry encode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common compress archivers arj arj archive input stream r0", "$ r1 = r3 main header", "$ r2 = $ r1 comment", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = new java util date", "r3 = org apache common compress archivers dump dump archive entry r0", "$ l0 = r3 ctime", "specialinvoke r2 < init > $ l0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common compress archivers dump dump archive entry r0", "$ r1 = r3 header", "$ r2 = $ r1 get type", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress archivers dump dump archive entry r0", "$ i0 = r1 uid", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common compress archivers dump dump archive summary r0", "r2 filesys = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress archivers dump dump archive summary r0", "$ i0 = r1 firstrec", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress archivers dump dump archive summary r0", "$ i0 = r1 flag", "$ i1 = $ i0 & 256", "if $ i1 ! = 256 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 ! = 256 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ l1 = org apache common compress utils byte utils from little endian r0 i0 8", "return $ l1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common compress archivers dump tape input stream r0", "$ r1 = r5 in", "if $ r1 == null goto label1", "r6 = org apache common compress archivers dump tape input stream r0", "$ r3 = r6 in", "$ r2 = java lang system in", "if $ r3 == $ r2 goto label1", "r7 = org apache common compress archivers dump tape input stream r0", "$ r4 = r7 in", "$ r4 close", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common compress archivers sevenz seven z archive entry r0", "r1 have access date = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common compress archivers sevenz seven z archive entry r0", "r1 have crc = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label3", "r8 = new java util link list", "specialinvoke r8 < init >", "r3 = r1 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r7 = r3 next", "r4 = org apache common compress archivers sevenz seven z method configuration $ r7", "r8 add last r4", "goto label1", "if $ z0 == 0 goto label2", "label $ r6 = java util collection unmodifiable list r8", "r9 = org apache common compress archivers sevenz seven z archive entry r0", "r9 content method = $ r6", "goto label4", "label return", "if r1 == null goto label3", "label r10 = org apache common compress archivers sevenz seven z archive entry r0", "r10 content method = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r19 = org apache common compress archivers tar tar archive output stream r0", "$ z0 = r19 finish", "if $ z0 == 0 goto label1", "r15 = new java io i o exception", "specialinvoke r15 < init > \\ `` stream have already be finished\\ ``", "throw r15", "if $ z0 == 0 goto label1", "label r20 = org apache common compress archivers tar tar archive output stream r0", "$ z1 = r20 have unclosed entry", "if $ z1 ! = 0 goto label2", "r16 = new java io i o exception", "specialinvoke r16 < init > \\ `` no current entry to close\\ ``", "throw r16", "if $ z1 ! = 0 goto label2", "label r21 = org apache common compress archivers tar tar archive output stream r0", "$ r1 = r21 out", "$ r1 flush block", "r22 = org apache common compress archivers tar tar archive output stream r0", "$ l1 = r22 curr bytes", "r23 = org apache common compress archivers tar tar archive output stream r0", "$ l0 = r23 curr size", "$ b2 = $ l1 cmp $ l0", "if $ b2 > = 0 goto label3", "r18 = new java io i o exception", "r17 = new java lang string builder", "specialinvoke r17 < init >", "$ r4 = r17 append \\ `` entry \\'\\ ``", "r24 = org apache common compress archivers tar tar archive output stream r0", "$ r5 = r24 curr name", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 append \\ `` \\ ' close at \\'\\ ``", "r25 = org apache common compress archivers tar tar archive output stream r0", "$ l14 = r25 curr bytes", "$ r8 = $ r7 append $ l14", "$ r9 = $ r8 append \\ `` \\ ' before the \\'\\ ``", "r26 = org apache common compress archivers tar tar archive output stream r0", "$ l15 = r26 curr size", "$ r10 = $ r9 append $ l15", "$ r11 = $ r10 append \\ `` \\ ' byte specify in the header be written\\ ``", "$ r12 = $ r11 to string", "specialinvoke r18 < init > $ r12", "throw r18", "if $ b2 > = 0 goto label3", "label r27 = org apache common compress archivers tar tar archive output stream r0", "$ i3 = r27 record write", "$ l6 = long $ i3", "r28 = org apache common compress archivers tar tar archive output stream r0", "$ l4 = r28 curr size", "$ l5 = $ l4 512l", "$ l7 = $ l6 + $ l5", "$ i8 = int $ l7", "r29 = org apache common compress archivers tar tar archive output stream r0", "r29 record write = $ i8", "r30 = org apache common compress archivers tar tar archive output stream r0", "$ l9 = r30 curr size", "$ l10 = $ l9 % 512l", "$ b11 = 0l cmp $ l10", "if $ b11 == 0 goto label4", "r31 = org apache common compress archivers tar tar archive output stream r0", "$ i12 = r31 record write", "$ i13 = $ i12 + 1", "r32 = org apache common compress archivers tar tar archive output stream r0", "r32 record write = $ i13", "label r33 = org apache common compress archivers tar tar archive output stream r0", "r33 have unclosed entry = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], []]}
{"nodes": ["r0 = @ parameter0", "l0 = org apache common compress archivers tar tar utils parse octal r0 148 8", "l4 = 0l", "l5 = 0l", "i6 = 0", "label $ i1 = lengthof r0", "if i6 > = $ i1 goto label3", "b7 = r0 [ i6 ]", "if 148 > i6 goto label2", "if i6 > = 156 goto label2", "b7 = 32", "label $ s8 = 255 & b7", "$ l9 = long $ s8", "l4 = l4 + $ l9", "$ l10 = long b7", "l5 = l5 + $ l10", "i6 = i6 + 1", "goto label1", "if i6 > = $ i1 goto label3", "label $ b2 = l0 cmp l4", "if $ b2 == 0 goto label4", "$ b3 = l0 cmp l5", "if $ b3 ! = 0 goto label5", "label $ z0 = 1", "goto label6", "label return $ z0", "if $ b3 ! = 0 goto label5", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress archivers zip circular buffer r0", "$ i1 = r1 read index", "r2 = org apache common compress archivers zip circular buffer r0", "$ i0 = r2 write index", "if $ i1 == $ i0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == $ i0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common compress archivers zip circular buffer r0", "$ z0 = r2 available", "if $ z0 == 0 goto label1", "r3 = org apache common compress archivers zip circular buffer r0", "$ r1 = r3 buffer", "r4 = org apache common compress archivers zip circular buffer r0", "$ i1 = r4 read index", "b0 = $ r1 [ $ i1 ]", "r5 = org apache common compress archivers zip circular buffer r0", "$ i2 = r5 read index", "$ i4 = $ i2 + 1", "r6 = org apache common compress archivers zip circular buffer r0", "$ i3 = r6 size", "$ i5 = $ i4 % $ i3", "r7 = org apache common compress archivers zip circular buffer r0", "r7 read index = $ i5", "$ s6 = b0 & 255", "return $ s6", "if $ z0 == 0 goto label1", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress archivers zip general purpose bit r0", "$ z0 = r1 data descriptor flag", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress archivers zip scatter statistic r0", "$ l0 = r1 compression elapse", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r31 = org apache common compress archivers zip scatter zip output stream r0", "$ r9 = r31 back store", "$ r9 close for write", "r32 = org apache common compress archivers zip scatter zip output stream r0", "$ r10 = r32 back store", "r2 = $ r10 get input stream", "r23 = null", "label r33 = org apache common compress archivers zip scatter zip output stream r0", "$ r11 = r33 item", "r24 = $ r11 iterator", "label $ z0 = r24 have next", "if $ z0 == 0 goto label15", "$ r12 = r24 next", "r3 = org apache common compress archivers zip scatter zip output stream $ compress entry $ r12", "r30 = new org apache common compress utils bound input stream", "$ l0 = r3 compress size", "specialinvoke r30 < init > r2 $ l0", "r25 = null", "label $ r14 = r3 transfer to archive entry", "r34 = java io input stream r30", "r1 add raw archive entry $ r14 r34", "label if r30 == null goto label14", "goto label05", "label r30 close", "goto label14", "label goto label02", "if $ z0 == 0 goto label15", "label if r2 == null goto label25", "goto label16", "label r2 close", "goto label25", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [], [28], [29], [30], [], [32], [], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r5 = org apache common compress archivers zip stream compressor r0", "r5 reset", "label r6 = org apache common compress archivers zip stream compressor r0", "$ r3 = r6 reader buf", "r7 = org apache common compress archivers zip stream compressor r0", "$ r2 = r7 reader buf", "$ i2 = lengthof $ r2", "$ i3 = r1 read $ r3 0 $ i2", "if $ i3 < 0 goto label2", "r8 = org apache common compress archivers zip stream compressor r0", "$ r4 = r8 reader buf", "r9 = org apache common compress archivers zip stream compressor r0", "r9 write $ r4 0 $ i3 i0", "goto label1", "if $ i3 < 0 goto label2", "label if i0 ! = 8 goto label3", "r10 = org apache common compress archivers zip stream compressor r0", "r10 flush deflater", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common compress archivers zip x000a_ntfs r0", "$ r1 = r2 modify time", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress archivers zip x5455_ extend timestamp r0", "$ b0 = r1 flag", "return $ b0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress archivers zip x5455_ extend timestamp r0", "$ z0 = r1 bit1_access time present", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common compress archivers zip x7875_ new unix r0", "$ r1 = r2 uid", "$ l0 = org apache common compress archivers zip zip util big to long $ r1", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["l0 = @ parameter0", "r0 = @ parameter1", "i1 = @ parameter2", "org apache common compress utils byte utils to little endian r0 l0 i1 4", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common compress compressor gzip gzip compressor input stream r0", "$ r1 = r2 parameter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common compress compressor gzip gzip utils file name util", "$ r2 = $ r1 get compress filename r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress compressor lz77support parameter r0", "$ i0 = r1 max offset", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "if r0 == null goto label1", "if i0 < 3 goto label1", "$ b1 = r0 [ 0 ]", "if $ b1 ! = 93 goto label1", "$ b2 = r0 [ 1 ]", "if $ b2 ! = 0 goto label1", "$ b3 = r0 [ 2 ]", "if $ b3 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b3 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 to char array", "$ i2 = lengthof r1", "if $ i2 > 255 goto label1", "$ r10 = r1", "goto label2", "label r2 = $ r10", "$ i3 = lengthof r1", "if $ i3 < = 255 goto label4", "i4 = 252", "label if i4 > = 255 goto label4", "r2 [ i4 ] = 46", "i4 = i4 + 1", "goto label3", "label if i4 > = 255 goto label4", "label $ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "i0 = lengthof r2", "i5 = 0", "label if i5 > = i0 goto label8", "c1 = r2 [ i5 ]", "$ z0 = java lang character be i s o control c1", "if $ z0 ! = 0 goto label6", "r4 = java lang character $ unicode block of c1", "if r4 == null goto label6", "$ r8 = java lang character $ unicode block special", "if r4 == $ r8 goto label6", "$ r5 append c1", "goto label7", "label i5 = i5 + 1", "goto label5", "if r4 == $ r8 goto label6", "label $ r5 append 63", "label if i5 > = i0 goto label8", "label $ r6 = $ r5 to string", "return $ r6", "if $ i2 > 255 goto label1", "label $ r10 = java util array copy of r1 255"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [], [32], [33], [34], [35], [], [37], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress utils bit input stream r0", "r1 bit cache = 0l", "r2 = org apache common compress utils bit input stream r0", "r2 bit cache size = 0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "i1 = @ parameter2", "i2 = @ parameter3", "l7 = l0", "i8 = 0", "label if i8 > = i2 goto label2", "$ i6 = i1 + i8", "$ l3 = l7 & 255l", "$ i4 = int $ l3", "$ b5 = byte $ i4", "r0 [ $ i6 ] = $ b5", "l7 = l7 > > 8", "i8 = i8 + 1", "goto label1", "label if i8 > = i2 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "$ r1 = org apache common compress archivers zip extra field utils $ unparseable extra field throw", "$ r2 = org apache common compress archivers zip extra field utils parse r0 z0 $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common compress change change set result r0", "$ r1 = r2 delete", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common compress compressor bzip2 b zip2 utils file name util", "$ r2 = $ r1 get compress filename r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = lengthof r1", "r2 = org apache common compress archivers sevenz seven z output file r0", "r2 write r1 0 $ i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ b1 = l0 cmp 0l", "if $ b1 > = 0 goto label1", "r2 = new java lang illegal argument exception", "specialinvoke r2 < init > \\ `` the offset can not be small than 0\\ ``", "throw r2", "if $ b1 > = 0 goto label1", "label r3 = org apache common compress archivers tar tar archive entry r0", "r3 data offset = l0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = new java util array list", "r4 = org apache common compress archivers tar tar file r0", "$ r2 = r4 entry", "specialinvoke r3 < init > $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "c0 = @ parameter1", "$ r1 = newarray java lang object [ 1 ]", "$ r2 = java lang string value of c0", "$ r1 [ 0 ] = $ r2", "$ r3 = org apache common compress harmony archive internal nls message get string r0 $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common compress harmony pack200 packing option r0", "r1 effort = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common compress harmony unpack200 archive r0", "r1 remove pack file = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r2 = new java io byte array output stream", "specialinvoke $ r2 < init >", "$ l1 = long i0", "org apache common compress utils i o utils copy range r0 $ l1 $ r2", "$ r3 = $ r2 to byte array", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common digester digester r0", "$ r1 = r2 public id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r12 = org apache common digester digester r0", "$ r1 = r12 reader", "if $ r1 ! = null goto label1", "r13 = org apache common digester digester r0", "$ r10 = r13 get parser", "$ r11 = $ r10 get x m l reader", "r14 = org apache common digester digester r0", "r14 reader = $ r11", "label r15 = org apache common digester digester r0", "$ r2 = r15 reader", "$ r2 set d t d handler r0", "r16 = org apache common digester digester r0", "$ r3 = r16 reader", "$ r3 set content handler r0", "r17 = org apache common digester digester r0", "$ r4 = r17 entity resolver", "if $ r4 ! = null goto label2", "r18 = org apache common digester digester r0", "$ r9 = r18 reader", "$ r9 set entity resolver r0", "goto label3", "label r21 = org apache common digester digester r0", "$ r7 = r21 reader", "$ r7 set error handler r0", "r22 = org apache common digester digester r0", "$ r8 = r22 reader", "return $ r8", "if $ r4 ! = null goto label2", "label r19 = org apache common digester digester r0", "$ r6 = r19 reader", "r20 = org apache common digester digester r0", "$ r5 = r20 entity resolver", "$ r6 set entity resolver $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common digester digester r0", "r2 stack action = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org apache common digester digester r0", "$ r2 = r10 sax log", "$ z0 = $ r2 be debug enabled", "if $ z0 == 0 goto label1", "r11 = org apache common digester digester r0", "$ r4 = r11 sax log", "r9 = new java lang string buffer", "specialinvoke r9 < init >", "$ r5 = r9 append \\ `` set document locator \\ ``", "$ r6 = $ r5 append r1", "$ r7 = $ r6 append \\ `` \\ ``", "$ r8 = $ r7 to string", "$ r4 debug $ r8", "label r12 = org apache common digester digester r0", "r12 locator = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common digester plugins log utils get logger null", "z0 = r2 be debug enabled", "r3 = r1 get plugin class", "r4 = r1 get id", "r20 = org apache common digester plugins plugin manager r0", "$ r5 = r20 declaration by class", "$ r6 = r3 get name", "$ r5 put $ r6 r1", "if r4 == null goto label1", "r21 = org apache common digester plugins plugin manager r0", "$ r8 = r21 declaration by id", "$ r8 put r4 r1", "if z0 == 0 goto label1", "r19 = new java lang string buffer", "specialinvoke r19 < init >", "$ r11 = r19 append \\ `` index plugin-id [ \\ ``", "$ r12 = $ r11 append r4", "$ r13 = $ r12 append \\ `` ] \\ ``", "$ r14 = $ r13 append \\ `` - > class [ \\ ``", "$ r15 = r3 get name", "$ r16 = $ r14 append $ r15", "$ r17 = $ r16 append \\ `` ] \\ ``", "$ r18 = $ r17 to string", "r2 debug $ r18", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common digester plugins plugin rule r0", "$ r1 = r2 decorate rule", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common digester regex rule r0", "$ r1 = r2 matcher", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common digester regex rule r0", "$ r1 = r2 register rule", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common digester abstract rule impl r0", "r2 namespace u r i = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common digester set nested property rule r0", "r1 allow unknown child element = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache common digester with default rule wrapper r0", "$ r4 = r7 wrap rule", "$ r4 set digester r1", "r8 = org apache common digester with default rule wrapper r0", "$ r5 = r8 default rule", "r2 = $ r5 iterator", "goto label2", "label $ z0 = r2 have next", "if $ z0 ! = 0 goto label1", "label $ r6 = r2 next", "r3 = org apache common digester rule $ r6", "r3 set digester r1", "if $ z0 ! = 0 goto label1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common digester xmlrules digester rule parser r0", "r2 target digester = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common digester3 binder abstract rule module r0", "$ r2 = r3 rule binder", "$ r2 add error r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common digester3 binder call method builder r0", "r2 param type = r1", "if r1 == null goto label1", "$ i0 = lengthof r1", "r3 = org apache common digester3 binder call method builder r0", "r3 param count = $ i0", "goto label2", "label r5 = org apache common digester3 binder call method builder r0", "return r5", "if r1 == null goto label1", "label r4 = org apache common digester3 binder call method builder r0", "r4 param count = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common digester3 binder call param builder r0", "r1 stack index = i0", "r2 = org apache common digester3 binder call param builder r0", "r2 from stack = 1", "r3 = org apache common digester3 binder call param builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache common digester3 binder digester loader r0", "$ r1 = r2 factory", "$ r1 set validate z0", "r3 = org apache common digester3 binder digester loader r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common digester3 binder error message r0", "$ r1 = r2 message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = r1 length", "if $ i0 ! = 0 goto label2", "label r12 = org apache common digester3 binder link rule builder r0", "$ r4 = r12 main binder", "$ r2 = newarray java lang object [ 1 ]", "r13 = org apache common digester3 binder link rule builder r0", "$ r3 = r13 key pattern", "$ r2 [ 0 ] = $ r3", "$ r4 add error \\ `` { for pattern \\\\\\ `` % s\\\\\\ `` set property string } empty \\'attribute property name\\ ' not allowed\\", "label r11 = new org apache common digester3 binder set property builder", "r14 = org apache common digester3 binder link rule builder r0", "$ r6 = r14 key pattern", "r15 = org apache common digester3 binder link rule builder r0", "$ r7 = r15 namespace u r i", "r16 = org apache common digester3 binder link rule builder r0", "$ r8 = r16 main binder", "r17 = org apache common digester3 binder link rule builder r0", "specialinvoke r11 < init > $ r6 $ r7 $ r8 r17 r1", "r18 = org apache common digester3 binder link rule builder r0", "r19 = org apache common digester3 binder abstract back to link rule builder r11", "$ r9 = specialinvoke r18 add provider r19", "$ r10 = org apache common digester3 binder set property builder $ r9", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = r1 length", "if $ i0 ! = 0 goto label2", "label r13 = org apache common digester3 binder link rule builder r0", "$ r4 = r13 main binder", "$ r2 = newarray java lang object [ 1 ]", "r14 = org apache common digester3 binder link rule builder r0", "$ r3 = r14 key pattern", "$ r2 [ 0 ] = $ r3", "$ r4 add error \\ `` { for pattern \\\\\\ `` % s\\\\\\ `` set root string } empty \\'method name\\ ' not allowed\\", "label r12 = new org apache common digester3 binder set root builder", "r15 = org apache common digester3 binder link rule builder r0", "$ r6 = r15 key pattern", "r16 = org apache common digester3 binder link rule builder r0", "$ r7 = r16 namespace u r i", "r17 = org apache common digester3 binder link rule builder r0", "$ r8 = r17 main binder", "r18 = org apache common digester3 binder link rule builder r0", "$ r9 = r18 class loader", "r19 = org apache common digester3 binder link rule builder r0", "specialinvoke r12 < init > $ r6 $ r7 $ r8 r19 r1 $ r9", "r20 = org apache common digester3 binder link rule builder r0", "r21 = org apache common digester3 binder abstract back to link rule builder r12", "$ r10 = specialinvoke r20 add provider r21", "$ r11 = org apache common digester3 binder set root builder $ r10", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r2 = org apache common digester3 binder object create builder r0", "r2 report error \\ `` create object use constructor class < ? > [ ] \\", "r3 = org apache common digester3 binder object create builder r0", "return r3", "if r1 ! = null goto label1", "label r4 = org apache common digester3 binder object create builder r0", "r4 constructor argument type = r1", "r5 = org apache common digester3 binder object create builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > = 0 goto label1", "r1 = org apache common digester3 binder object param builder r0", "r1 report error \\ `` object param % s of index int \\", "label r2 = org apache common digester3 binder object param builder r0", "r2 param index = i0", "r3 = org apache common digester3 binder object param builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common digester3 binder plugin create rule builder r0", "r2 dflt plugin class = r1", "r3 = org apache common digester3 binder plugin create rule builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r5 = org apache common digester3 binder set property builder r0", "r5 report error \\ `` set property add alias string \\", "label r4 = new org apache common digester3 binder add alias builder", "r6 = org apache common digester3 binder set property builder r0", "$ r3 = r6 aliases", "specialinvoke r4 < init > r0 $ r3 r1", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common digester3 digester r0", "r2 sax log = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common digester3 digester r0", "r1 xinclude aware = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common digester3 digester r0", "r1 validate = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org apache common digester3 digester $ 1", "r5 = org apache common digester3 digester r0", "specialinvoke r4 < init > r5 r1", "r6 = org apache common digester3 digester r0", "r7 = java util concurrent callable r4", "$ r3 = specialinvoke r6 async parse r7", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache common digester3 digester r0", "r2 set digester r4", "r5 = org apache common digester3 digester r0", "$ r3 = r5 get rule", "$ r3 add r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "z0 = @ parameter2", "r3 = new org apache common digester3 call param rule", "specialinvoke r3 < init > i0 z0", "r4 = org apache common digester3 digester r0", "r5 = org apache common digester3 rule r3", "r4 add rule r1 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache common digester3 digester r0", "$ r2 = r6 log", "$ z0 = $ r2 be trace enabled", "if $ z0 == 0 goto label1", "r7 = org apache common digester3 digester r0", "$ r5 = r7 log", "$ r5 trace \\ `` push params\\ ``", "label r8 = org apache common digester3 digester r0", "$ r3 = r8 params", "$ r3 push r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common digester3 plugins declaration r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache common digester3 plugins plugin manager r0", "$ r2 = r7 declaration by id", "$ r3 = $ r2 get r1", "r6 = org apache common digester3 plugins declaration $ r3", "if r6 ! = null goto label1", "r8 = org apache common digester3 plugins plugin manager r0", "$ r4 = r8 parent", "if $ r4 == null goto label1", "r9 = org apache common digester3 plugins plugin manager r0", "$ r5 = r9 parent", "r6 = $ r5 get declaration by id r1", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common digester3 record invocation r0", "$ r1 = r2 argument", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common exec default execute result handler r0", "$ z0 = r1 have result", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = org apache common exec pump stream handler r0", "$ r4 = r12 input", "if $ r4 == null goto label2", "r13 = org apache common exec pump stream handler r0", "$ r6 = r13 input", "$ r5 = java lang system in", "if $ r6 ! = $ r5 goto label1", "r14 = org apache common exec pump stream handler r0", "$ r9 = r14 input", "r15 = org apache common exec pump stream handler r0", "$ r10 = specialinvoke r15 create system in pump $ r9 r1", "r16 = org apache common exec pump stream handler r0", "r16 input thread = $ r10", "goto label5", "label return", "if $ r6 ! = $ r5 goto label1", "label r17 = org apache common exec pump stream handler r0", "$ r7 = r17 input", "r18 = org apache common exec pump stream handler r0", "$ r8 = r18 create pump $ r7 r1 1", "r19 = org apache common exec pump stream handler r0", "r19 input thread = $ r8", "if $ r4 == null goto label2", "label r1 close", "label goto label5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z1 = r2 instanceof java io pip output stream", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label r4 = org apache common exec pump stream handler r0", "$ r3 = r4 create pump r1 r2 $ z2", "return $ r3", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common httpclient auth auth state r0", "r1 auth attempt = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = org apache common httpclient auth n t l m scheme log", "$ r4 trace \\ `` enter n t l m scheme authenticate credential string string \\ ``", "label r15 = org apache common httpclient n t credential r1", "label goto label4", "label r19 = org apache common httpclient auth n t l m scheme r0", "$ r5 = r19 ntlmchallenge", "$ r6 = org apache common httpclient auth n t l m scheme authenticate r15 $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient auth r f c2617 scheme r0", "$ r1 = r2 get parameter \\ `` realm\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "i2 = -1", "r2 = org apache common httpclient auto close input stream r0", "$ z0 = specialinvoke r2 be read allow", "if $ z0 == 0 goto label1", "i2 = specialinvoke r0 read r1 i0 i1", "r3 = org apache common httpclient auto close input stream r0", "specialinvoke r3 check close i2", "label return i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = org apache common httpclient cookie cookie spec base log", "$ r4 trace \\ `` enter cookie spec base format cookie cookie \\ ``", "if r1 ! = null goto label1", "r12 = new java lang illegal argument exception", "specialinvoke r12 < init > \\ `` cookie may not be null\\ ``", "throw r12", "if r1 ! = null goto label1", "label r13 = new java lang string buffer", "specialinvoke r13 < init >", "r14 = org apache common httpclient name value pair r1", "$ r6 = r14 get name", "r13 append $ r6", "r13 append \\ `` =\\ ``", "r15 = org apache common httpclient name value pair r1", "r3 = r15 get value", "if r3 == null goto label2", "r13 append r3", "label $ r9 = r13 to string", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common httpclient header group r0", "$ r2 = r3 header", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common httpclient header group r0", "$ r2 = r3 header", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common httpclient protocol protocol get protocol \\ `` http\\ ``", "$ i0 = r2 get default port", "r3 = org apache common httpclient host configuration r0", "r3 set host r1 $ i0 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r2 = org apache common httpclient http client r0", "$ r1 = r2 params", "$ r1 set connection manager timeout l0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient http connection r0", "$ r1 = r2 params", "$ z0 = $ r1 be stale check enabled", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common httpclient http connection r0", "r2 last response input stream = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache common httpclient http connection log", "$ r1 trace \\ `` enter http connection close \\ ``", "r2 = org apache common httpclient http connection r0", "r2 close socket and stream", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient http exception r0", "$ r1 = r2 reason", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common httpclient http method base r0", "r2 query string = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache common httpclient http method base r0", "$ r3 = r8 get request header group", "r9 = org apache common httpclient name value pair r1", "$ r4 = r9 get name", "r2 = $ r3 get header $ r4", "i1 = 0", "goto label2", "label $ i0 = lengthof r2", "if i1 < $ i0 goto label1", "label r10 = org apache common httpclient http method base r0", "$ r5 = r10 get request header group", "$ r6 = r2 [ i1 ]", "$ r5 remove header $ r6", "i1 = i1 + 1", "if i1 < $ i0 goto label1", "r11 = org apache common httpclient http method base r0", "$ r7 = r11 get request header group", "$ r7 add header r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label r4 = org apache common httpclient http method base r0", "$ r2 = r4 get request header group", "$ r3 = $ r2 get condense header r1", "return $ r3"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "r3 = org apache common httpclient http method base r0", "$ r2 = r3 params", "$ r2 make strict", "goto label2", "label return", "if z0 == 0 goto label1", "label r4 = org apache common httpclient http method base r0", "$ r1 = r4 params", "$ r1 make lenient"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common httpclient http method base r0", "$ r1 = r3 get response header \\ `` content- type\\ ``", "r4 = org apache common httpclient http method base r0", "$ r2 = r4 get content char set $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient http state r0", "$ r1 = r2 proxy cred", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "if i0 > = 0 goto label1", "$ r6 = new java lang illegal argument exception", "specialinvoke $ r6 < init > \\ `` status code may not be negative\\ ``", "throw $ r6", "if i0 > = 0 goto label1", "label i1 = i0 100", "$ i3 = i1 * 100", "i2 = i0 - $ i3", "if i1 < 1 goto label2", "$ r0 = org apache common httpclient http status reason_phrases", "$ i4 = lengthof $ r0", "$ i5 = $ i4 - 1", "if i1 > $ i5 goto label2", "if i2 < 0 goto label2", "$ r1 = org apache common httpclient http status reason_phrases", "$ r2 = $ r1 [ i1 ]", "$ i6 = lengthof $ r2", "$ i7 = $ i6 - 1", "if i2 < = $ i7 goto label3", "label return null", "if i2 < = $ i7 goto label3", "label $ r3 = org apache common httpclient http status reason_phrases", "$ r4 = $ r3 [ i1 ]", "$ r5 = $ r4 [ i2 ]", "return $ r5"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common httpclient uri r0", "$ i0 = r1 _port", "if $ i0 ! = -1 goto label1", "$ i1 = 443", "goto label2", "label return $ i1", "if $ i0 ! = -1 goto label1", "label r2 = org apache common httpclient uri r0", "$ i1 = r2 _port"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "$ r1 = r0 _path", "if $ r1 == null goto label1", "$ r2 = r0 _path", "$ i0 = lengthof $ r2", "if $ i0 ! = 0 goto label2", "label $ r4 = org apache common httpclient uri root path", "goto label3", "label return $ r4", "if $ i0 ! = 0 goto label2", "label $ r3 = r0 _path", "$ r4 = specialinvoke r0 get raw current hier path $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache common httpclient method entity enclose method log", "$ r1 trace \\ `` enter entity enclose method renerate request body \\ ``", "return null"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = r0 get params", "r2 = org apache common httpclient params default http params $ r1", "$ i0 = r2 get int parameter \\ `` http protocol head-body-timeout\\", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache common httpclient method multipart part log", "$ r2 trace \\ `` enter send output stream out \\ ``", "r3 = org apache common httpclient method multipart part r0", "r3 send start r1", "r4 = org apache common httpclient method multipart part r0", "r4 send disposition header r1", "r5 = org apache common httpclient method multipart part r0", "r5 send content type header r1", "r6 = org apache common httpclient method multipart part r0", "r6 send transfer encode header r1", "r7 = org apache common httpclient method multipart part r0", "r7 send end of header r1", "r8 = org apache common httpclient method multipart part r0", "r8 send data r1", "r9 = org apache common httpclient method multipart part r0", "r9 send end r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common httpclient method multipart part default_boundary_bytes", "org apache common httpclient method multipart part send part r0 r1 $ r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient method multipart part base r0", "$ r1 = r2 char set", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r0 check use", "r3 = org apache common httpclient method option method r0", "$ r2 = r3 method allow", "$ z0 = $ r2 contain r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r0 check use", "r3 = org apache common httpclient method option method r0", "$ r1 = r3 method allow", "$ r2 = $ r1 element", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r7 = org apache common httpclient method option method log", "$ r7 trace \\ `` enter option method process response header http state http connection \\ ``", "r3 = r0 get response header \\ `` allow\\ ``", "if r3 == null goto label3", "r13 = org apache common httpclient name value pair r3", "r4 = r13 get value", "r12 = new java util string tokenizer", "specialinvoke r12 < init > r4 \\", "goto label2", "label $ z0 = r12 have more element", "if $ z0 ! = 0 goto label1", "label $ r9 = r12 next token", "$ r10 = $ r9 trim", "r6 = $ r10 to upper case", "r14 = org apache common httpclient method option method r0", "$ r11 = r14 method allow", "$ r11 add element r6", "if $ z0 ! = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common httpclient multi thread http connection manager r0", "$ i0 = r1 get connection in pool", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i1 = 0", "goto label2", "label $ i0 = lengthof r1", "if i1 < $ i0 goto label1", "label $ r3 = r1 [ i1 ]", "r4 = org apache common httpclient params default http params r0", "r4 set parameter $ r3 r2", "i1 = i1 + 1", "if i1 < $ i0 goto label1", "return"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common httpclient params default http params r0", "$ l0 = r1 get long parameter \\ `` http connection-manager timeout\\", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common httpclient params default http params r0", "$ z0 = r1 get boolean parameter \\ `` http authentication preemptive\\", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r0 set boolean parameter \\ `` http tcp nodelay\\", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common httpclient uri r0", "$ z0 = r1 _is_rel_path", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common httpclient uri r0", "$ r1 = r3 protocol charset", "if $ r1 == null goto label1", "r4 = org apache common httpclient uri r0", "$ r2 = r4 protocol charset", "goto label2", "label return $ r2", "if $ r1 == null goto label1", "label $ r2 = org apache common httpclient uri default protocol charset"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common httpclient uri r0", "$ r1 = r5 _authority", "if $ r1 ! = null goto label1", "$ r3 = null", "goto label2", "label return $ r3", "if $ r1 ! = null goto label1", "label r4 = new java lang string", "$ r3 = r4", "r6 = org apache common httpclient uri r0", "$ r2 = r6 _authority", "specialinvoke r4 < init > $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common httpclient uri r0", "$ i0 = r1 _port", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common httpclient uri r0", "r1 = r4 get raw path", "if r1 ! = null goto label1", "$ r3 = null", "goto label2", "label return $ r3", "if r1 ! = null goto label1", "label r5 = org apache common httpclient uri r0", "$ r2 = r5 get protocol charset", "$ r3 = org apache common httpclient uri decode r1 $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common httpclient uri r0", "r1 = r4 get raw name", "if r1 ! = null goto label1", "$ r2 = null", "goto label2", "label return $ r2", "if r1 ! = null goto label1", "label r3 = new java lang string", "$ r2 = r3", "specialinvoke r3 < init > r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = r1 length", "if $ i0 ! = 0 goto label4", "label if r1 ! = null goto label2", "$ r6 = null", "goto label3", "label r7 = org apache common httpclient uri r0", "r7 _fragment = $ r6", "r8 = org apache common httpclient uri r0", "r8 hash = 0", "return", "label if r1 ! = null goto label2", "label $ r6 = r1 to char array", "if $ i0 ! = 0 goto label4", "label $ r3 = org apache common httpclient uri allowed_fragment", "r9 = org apache common httpclient uri r0", "$ r4 = r9 get protocol charset", "$ r5 = org apache common httpclient uri encode r1 $ r3 $ r4", "r10 = org apache common httpclient uri r0", "r10 _fragment = $ r5", "r11 = org apache common httpclient uri r0", "r11 hash = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common httpclient uri r0", "r1 = r4 get raw u r i reference", "if r1 ! = null goto label1", "$ r3 = null", "goto label2", "label return $ r3", "if r1 ! = null goto label1", "label r5 = org apache common httpclient uri r0", "$ r2 = r5 get protocol charset", "$ r3 = org apache common httpclient uri decode r1 $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient username password credential r0", "$ r1 = r2 password", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common httpclient util date parser parse date r0 null", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "$ r5 = new java lang illegal argument exception", "specialinvoke $ r5 < init > \\ `` data may not be null\\ ``", "throw $ r5", "if r0 ! = null goto label1", "label if r1 == null goto label2", "$ i0 = r1 length", "if $ i0 ! = 0 goto label3", "label $ r3 = new java lang illegal argument exception", "specialinvoke $ r3 < init > \\ `` charset may not be null or empty\\ ``", "throw $ r3", "if $ i0 ! = 0 goto label3", "label $ r4 = r0 get bytes r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common httpclient util idle connection handler r0", "$ r2 = r4 connection to add", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "s0 = @ parameter1", "$ s1 = s0 > > 0", "$ s2 = $ s1 & 255", "$ b3 = byte $ s2", "r0 write $ b3", "$ s4 = s0 > > 8", "$ s5 = $ s4 & 255", "$ b6 = byte $ s5", "r0 write $ b6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = org apache common io endian utils read r0", "$ i1 = $ i0 & 255", "$ i2 = $ i1 < < 0", "$ i3 = org apache common io endian utils read r0", "$ i4 = $ i3 & 255", "$ i5 = $ i4 < < 8", "$ i6 = $ i2 + $ i5", "$ s7 = short $ i6", "return $ s7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "d0 = @ parameter1", "$ l0 = java lang double double to long bit d0", "org apache common io endian utils write swap long r0 $ l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common io file accumulator path visitor r0", "$ r1 = r2 dir list", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache common io file copy directory visitor r0", "$ r3 = r5 copy option", "java nio file file copy r1 r2 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common io file count path visitor r0", "$ r1 = r2 path counter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common io file directory stream filter r0", "$ r1 = r2 path filter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = org apache common io file path utils empty_link_option_array", "$ r2 = org apache common io file path utils empty_file_visit_option_array", "$ z0 = org apache common io file path utils directory content equal r0 r1 2147483647 $ r3 $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java nio file file visit result terminate", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 can execute", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 be directory", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 be directory", "if $ z0 == 0 goto label3", "r2 = r1 list file", "$ i2 = org apache common io i o utils length r2", "if $ i2 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ i2 ! = 0 goto label1", "label $ z1 = 0", "if $ z0 == 0 goto label3", "label $ l0 = r1 length", "$ b1 = $ l0 cmp 0l", "if $ b1 ! = 0 goto label4", "$ z2 = 1", "goto label5", "label return $ z2", "if $ b1 ! = 0 goto label4", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 negate", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["l0 = @ parameter0", "r1 = new org apache common io filefilter size file filter", "specialinvoke r1 < init > l0", "r2 = org apache common io filefilter i o file filter r1", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache common io filefilter regex file filter r0", "$ r3 = r5 pattern", "$ r4 = $ r3 matcher r2", "$ z0 = $ r4 match", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get name", "r3 = org apache common io filefilter suffix file filter r0", "$ z0 = specialinvoke r3 accept $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return -1", "if r0 ! = null goto label1", "label i0 = r0 last index of 47", "i1 = r0 last index of 92", "$ i2 = java lang math max i0 i1", "return $ i2"], "adj": [[1], [2], [], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common io filename utils do get full path r0 0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common io i o case system", "$ z0 = org apache common io filename utils equal r0 r1 1 $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java util zip crc32", "specialinvoke $ r1 < init >", "$ r2 = org apache common io file utils checksum r0 $ r1", "$ l0 = $ r2 get value", "return $ l0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "org apache common io file utils copy directory r0 r1 null z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "z0 = @ parameter3", "$ r3 = newarray java nio file copy option [ 1 ]", "$ r4 = java nio file standard copy option replace_existing", "$ r3 [ 0 ] = $ r4", "org apache common io file utils copy directory r0 r1 r2 z0 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r6 = r0 to path", "$ r7 = newarray java nio file open option [ 0 ]", "r2 = java nio file file new input stream $ r6 $ r7", "r12 = null", "label l0 = org apache common io i o utils copy large r2 r1", "label if r2 == null goto label04", "goto label03", "label r2 close", "label return l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "label $ r3 = org apache common io file utils stream file r0 z0 r1", "$ r4 = org apache common io stream iterator iterator $ r3", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "org apache common io file utils validate move parameter r0 r1", "$ z1 = r1 be directory", "if $ z1 ! = 0 goto label3", "$ z2 = r1 exist", "if $ z2 == 0 goto label1", "$ r13 = new java io i o exception", "$ r14 = new java lang string builder", "specialinvoke $ r14 < init >", "$ r15 = $ r14 append \\ `` destination \\'\\ ``", "$ r16 = $ r15 append r1", "$ r17 = $ r16 append \\ `` \\ ' be not a directory\\ ``", "$ r18 = $ r17 to string", "specialinvoke $ r13 < init > $ r18", "throw $ r13", "if $ z2 == 0 goto label1", "label if z0 ! = 0 goto label2", "$ r5 = new java io file not find exception", "$ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "$ r7 = $ r6 append \\ `` destination directory \\'\\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 append \\ `` \\ ' do not exist [ create d dir=\\ ``", "$ r10 = $ r9 append 0", "$ r11 = $ r10 append \\ `` ] \\ ``", "$ r12 = $ r11 to string", "specialinvoke $ r5 < init > $ r12", "throw $ r5", "label if z0 ! = 0 goto label2", "label org apache common io file utils mkdirs r1", "label $ r2 = new java io file", "$ r3 = r0 get name", "specialinvoke $ r2 < init > r1 $ r3", "org apache common io file utils move directory r0 $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "org apache common io file utils validate move parameter r0 r1", "$ z1 = r0 be directory", "if $ z1 == 0 goto label1", "org apache common io file utils move directory to directory r0 r1 z0", "goto label2", "label return", "if $ z1 == 0 goto label1", "label org apache common io file utils move file to directory r0 r1 z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "$ r2 = java nio charset charset default charset", "org apache common io file utils write r0 r1 $ r2 z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common io input buffer circular byte buffer r0", "$ i1 = r2 current number of byte", "r3 = org apache common io input buffer circular byte buffer r0", "$ r1 = r3 buffer", "$ i0 = lengthof $ r1", "if $ i1 > = $ i0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 > = $ i0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common io input char sequence reader r0", "$ i0 = r1 start", "r2 = org apache common io input char sequence reader r0", "r2 idx = $ i0", "r3 = org apache common io input char sequence reader r0", "$ i1 = r3 start", "r4 = org apache common io input char sequence reader r0", "r4 mark = $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org apache common io input close shield input stream", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 == -1 goto label1", "r1 = org apache common io input count input stream r0", "$ l2 = r1 count", "$ l1 = long i0", "$ l3 = $ l2 + $ l1", "r2 = org apache common io input count input stream r0", "r2 count = $ l3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common io input observable input stream r0", "$ r2 = r3 observer", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common io input observable input stream r0", "$ r1 = r2 observer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "throw r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common io input random access file input stream r0", "$ z0 = r1 close on close", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "l0 = @ parameter2", "z0 = @ parameter3", "z1 = @ parameter4", "$ r2 = org apache common io input tailer create r0 r1 l0 z0 z1 8192", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common io input timestamped observer r0", "$ r1 = r2 close instant", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common io i o exception list r0", "$ r1 = r2 cause list", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "r0 close", "label return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java lang string", "$ r2 = java nio charset charset default charset", "specialinvoke $ r1 < init > r0 $ r2", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r9 = org apache common io monitor file alteration observer r0", "$ r3 = r9 root entry", "r10 = org apache common io monitor file alteration observer r0", "$ r2 = r10 root entry", "$ r4 = $ r2 get file", "$ r3 refresh $ r4", "r11 = org apache common io monitor file alteration observer r0", "$ r5 = r11 root entry", "$ r6 = $ r5 get file", "r12 = org apache common io monitor file alteration observer r0", "$ r7 = r12 root entry", "r13 = org apache common io monitor file alteration observer r0", "r1 = specialinvoke r13 do list file $ r6 $ r7", "r14 = org apache common io monitor file alteration observer r0", "$ r8 = r14 root entry", "$ r8 set child r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common io monitor file entry r0", "$ r1 = r2 parent", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i10 = 0", "r8 = org apache common io output abstract byte array output stream r0", "$ i1 = r8 count", "r9 = org apache common io output abstract byte array output stream r0", "$ i0 = r9 fill buffer sum", "i11 = $ i1 - $ i0", "r10 = org apache common io output abstract byte array output stream r0", "$ r3 = r10 current buffer", "r11 = org apache common io output abstract byte array output stream r0", "$ r2 = r11 current buffer", "$ i2 = lengthof $ r2", "$ i3 = $ i2 - i11", "i12 = r1 read $ r3 i11 $ i3", "label if i12 == -1 goto label3", "i10 = i10 + i12", "i11 = i11 + i12", "r12 = org apache common io output abstract byte array output stream r0", "$ i4 = r12 count", "$ i5 = $ i4 + i12", "r13 = org apache common io output abstract byte array output stream r0", "r13 count = $ i5", "r14 = org apache common io output abstract byte array output stream r0", "$ r4 = r14 current buffer", "$ i6 = lengthof $ r4", "if i11 ! = $ i6 goto label2", "r15 = org apache common io output abstract byte array output stream r0", "$ r7 = r15 current buffer", "$ i9 = lengthof $ r7", "r16 = org apache common io output abstract byte array output stream r0", "r16 need new buffer $ i9", "i11 = 0", "label r17 = org apache common io output abstract byte array output stream r0", "$ r6 = r17 current buffer", "r18 = org apache common io output abstract byte array output stream r0", "$ r5 = r18 current buffer", "$ i7 = lengthof $ r5", "$ i8 = $ i7 - i11", "i12 = r1 read $ r6 i11 $ i8", "goto label1", "label if i12 == -1 goto label3", "label return i10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r4 = org apache common io output appendable writer r0", "$ r2 = r4 appendable", "$ r2 append r1 i0 i1", "return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r3 = org apache common io output file writer with encode r0", "$ r2 = r3 out", "$ r2 write r1 i0 i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r9 = null", "i2 = 0", "r11 = org apache common io output filter collection writer r0", "$ r5 = r11 writer", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label6", "$ r7 = r2 next", "r3 = java io writer $ r7", "if r3 == null goto label5", "label r3 write r1 i0 i1", "label goto label5", "label i2 = i2 + 1", "goto label1", "if $ z0 == 0 goto label6", "label r13 = org apache common io output filter collection writer r0", "$ z1 = specialinvoke r13 not empty r9", "if $ z1 == 0 goto label7", "r10 = new org apache common io i o exception list", "specialinvoke r10 < init > \\ `` write\\", "r14 = java lang throwable r10", "throw r14", "if $ z1 == 0 goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r3 = org apache common io output lockable file writer r0", "$ r2 = r3 out", "$ r2 write r1 i0 i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r3 = org apache common io output string builder writer r0", "$ r1 = r3 builder", "$ r1 append c0", "return r0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common io output tag writer r0", "$ r2 = r3 tag", "$ z0 = org apache common io tag i o exception be tag with r1 $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "specialinvoke r0 flush", "r2 = org apache common io output tee output stream r0", "$ r1 = r2 branch", "$ r1 flush", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common io output thresholding output stream r0", "$ i0 = r1 threshold", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache common io output thresholding output stream r0", "r1 write = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r1 [ i1 ]", "r9 = org apache common io serialization validate object input stream r0", "$ r6 = r9 accept matcher", "r8 = new org apache common io serialization full class name matcher", "$ r5 = newarray java lang string [ 1 ]", "$ r7 = r3 get name", "$ r5 [ 0 ] = $ r7", "specialinvoke r8 < init > $ r5", "$ r6 add r8", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label r10 = org apache common io serialization validate object input stream r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org apache common io filefilter delegate file filter", "specialinvoke r2 < init > r0", "r3 = org apache common io filefilter i o file filter r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 exist", "if $ z0 ! = 0 goto label1", "r6 = org apache common io file utils open output stream r0", "org apache common io i o utils close quietly r6", "label $ l0 = java lang system current time millis", "z1 = r0 set last modified $ l0", "if z1 ! = 0 goto label2", "$ r1 = new java io i o exception", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append \\ `` unable to set the last modification time for \\ ``", "$ r4 = $ r3 append r0", "$ r5 = $ r4 to string", "specialinvoke $ r1 < init > $ r5", "throw $ r1", "if z1 ! = 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 ! = null goto label1", "$ r8 = new java lang illegal argument exception", "specialinvoke $ r8 < init > \\ `` no specified reference file\\ ``", "throw $ r8", "if r1 ! = null goto label1", "label $ z0 = r1 exist", "if $ z0 ! = 0 goto label2", "$ r2 = new java lang illegal argument exception", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append \\ `` the reference file \\'\\ ``", "$ r5 = $ r4 append r1", "$ r6 = $ r5 append \\ `` \\ ' doesn\\'t exist\\ ``", "$ r7 = $ r6 to string", "specialinvoke $ r2 < init > $ r7", "throw $ r2", "if $ z0 ! = 0 goto label2", "label $ l0 = r1 last modified", "$ z1 = org apache common io file utils be file new r0 $ l0", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 be directory", "if $ z0 == 0 goto label1", "r9 = new java lang illegal argument exception", "specialinvoke r9 < init > \\ `` checksum can\\'t be compute on directories\\ ``", "throw r9", "if $ z0 == 0 goto label1", "label r8 = null", "label r11 = new java util zip check input stream", "r10 = new java io file input stream", "specialinvoke r10 < init > r0", "specialinvoke r11 < init > r10 r1", "r8 = r11", "r12 = new org apache common io output null output stream", "specialinvoke r12 < init >", "r13 = java io output stream r12", "org apache common io i o utils copy r11 r13", "label org apache common io i o utils close quietly r11", "goto label6", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common io input b o m input stream r0", "i0 = specialinvoke r2 read first bytes", "if i0 < 0 goto label1", "$ i1 = i0", "goto label2", "label return $ i1", "if i0 < 0 goto label1", "label r3 = org apache common io input b o m input stream r0", "$ r1 = r3 in", "$ i1 = $ r1 read"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common io input bound input stream r0", "$ r1 = r3 in", "$ r2 = $ r1 to string", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r3 = org apache common io input null reader r0", "$ z0 = r3 eof", "if $ z0 == 0 goto label1", "r2 = new java io i o exception", "specialinvoke r2 < init > \\ `` skip after end of file\\ ``", "throw r2", "if $ z0 == 0 goto label1", "label r4 = org apache common io input null reader r0", "$ l2 = r4 position", "r5 = org apache common io input null reader r0", "$ l1 = r5 size", "$ b3 = $ l2 cmp $ l1", "if $ b3 ! = 0 goto label2", "r6 = org apache common io input null reader r0", "$ i13 = specialinvoke r6 do end of file", "$ l14 = long $ i13", "return $ l14", "if $ b3 ! = 0 goto label2", "label r7 = org apache common io input null reader r0", "$ l4 = r7 position", "$ l5 = $ l4 + l0", "r8 = org apache common io input null reader r0", "r8 position = $ l5", "l15 = l0", "r9 = org apache common io input null reader r0", "$ l7 = r9 position", "r10 = org apache common io input null reader r0", "$ l6 = r10 size", "$ b8 = $ l7 cmp $ l6", "if $ b8 < = 0 goto label3", "r11 = org apache common io input null reader r0", "$ l10 = r11 position", "r12 = org apache common io input null reader r0", "$ l9 = r12 size", "$ l11 = $ l10 - $ l9", "l15 = l0 - $ l11", "r13 = org apache common io input null reader r0", "$ l12 = r13 size", "r14 = org apache common io input null reader r0", "r14 position = $ l12", "label return l15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r3 = org apache common io input xml stream reader r0", "$ r2 = r3 reader", "$ i2 = $ r2 read r1 i0 i1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org apache common io line iterator", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common io charsets to charset r1", "$ r3 = org apache common io i o utils to input stream r0 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == null goto label1", "r1 write r0", "label return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "l0 = org apache common io i o utils copy large r0 r1", "$ b1 = l0 cmp 2147483647l", "if $ b1 < = 0 goto label1", "return -1", "if $ b1 < = 0 goto label1", "label $ i2 = int l0", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "i1 = @ parameter3", "i2 = org apache common io i o utils read r0 r1 i0 i1", "if i2 == i1 goto label1", "$ r2 = new java io e o f exception", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append \\ `` length to read \\ ``", "$ r5 = $ r4 append i1", "$ r6 = $ r5 append \\ `` actual \\ ``", "$ r7 = $ r6 append i2", "$ r8 = $ r7 to string", "specialinvoke $ r2 < init > $ r8", "throw $ r2", "if i2 == i1 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r3 = org apache common io monitor file alteration monitor r0", "$ r2 = r3 observer", "$ r2 add r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r3 = org apache common io output string builder writer r0", "$ r1 = r3 builder", "$ r1 append c0", "return r0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "r6 = null", "$ b1 = l0 cmp 0l", "if $ b1 < = 0 goto label1", "r7 = new org apache common io thread monitor", "specialinvoke r7 < init > r0 l0", "r8 = new java lang thread", "$ r4 = class \\ `` lorg apache common io thread monitor \\ ``", "$ r5 = $ r4 get simple name", "r9 = java lang runnable r7", "specialinvoke r8 < init > r9 $ r5", "r6 = r8", "r8 set daemon 1", "r8 start", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == null goto label1", "r1 write r0", "label return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "l0 = @ parameter2", "l1 = @ parameter3", "$ r2 = newarray byte [ 4096 ]", "$ l2 = org apache common io i o utils copy large r0 r1 l0 l1 $ r2", "return $ l2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "$ r2 = newarray byte [ i0 ]", "$ l1 = org apache common io i o utils copy large r0 r1 $ r2", "return $ l1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "$ r3 = org apache common lang array utils empty_boolean_array", "return $ r3", "if $ i0 ! = 0 goto label2", "label $ i1 = lengthof r0", "r1 = newarray boolean [ $ i1 ]", "i3 = 0", "label $ i2 = lengthof r0", "if i3 > = $ i2 goto label4", "$ r2 = r0 [ i3 ]", "$ z0 = $ r2 boolean value", "r1 [ i3 ] = $ z0", "i3 = i3 + 1", "goto label3", "if i3 > = $ i2 goto label4", "label return r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "$ r3 = org apache common lang array utils empty_boolean_object_array", "return $ r3", "if $ i0 ! = 0 goto label2", "label $ i1 = lengthof r0", "r1 = newarray java lang boolean [ $ i1 ]", "i4 = 0", "label $ i2 = lengthof r0", "if i4 > = $ i2 goto label6", "$ i3 = i4", "$ z0 = r0 [ i4 ]", "if $ z0 == 0 goto label4", "$ r4 = java lang boolean true", "goto label5", "label r1 [ $ i3 ] = $ r4", "i4 = i4 + 1", "goto label3", "if $ z0 == 0 goto label4", "label $ r4 = java lang boolean false", "if i4 > = $ i2 goto label6", "label return r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [], [23], [24], [25], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "$ r3 = org apache common lang array utils empty_boolean_array", "return $ r3", "if $ i0 ! = 0 goto label2", "label $ i1 = lengthof r0", "r1 = newarray boolean [ $ i1 ]", "i3 = 0", "label $ i2 = lengthof r0", "if i3 > = $ i2 goto label4", "$ r2 = r0 [ i3 ]", "$ z0 = $ r2 boolean value", "r1 [ i3 ] = $ z0", "i3 = i3 + 1", "goto label3", "if i3 > = $ i2 goto label4", "label return r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = lengthof r0", "if $ i0 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = org apache common lang array utils remove r0 i0", "$ r2 = boolean [ ] $ r1", "$ r3 = boolean [ ] $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r1 = org apache common lang bit field r0", "$ i2 = r1 _mask", "$ i3 = $ i2 ^ -1", "$ i8 = i0 & $ i3", "r2 = org apache common lang bit field r0", "$ i4 = r2 _shift_count", "$ i6 = i1 < < $ i4", "r3 = org apache common lang bit field r0", "$ i5 = r3 _mask", "$ i7 = $ i6 & $ i5", "$ i9 = $ i8 | $ i7", "return $ i9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "z1 = @ parameter1", "r1 = org apache common lang builder compare to builder r0", "$ i0 = r1 comparison", "if $ i0 == 0 goto label1", "r2 = org apache common lang builder compare to builder r0", "return r2", "if $ i0 == 0 goto label1", "label if z0 ! = z1 goto label2", "r3 = org apache common lang builder compare to builder r0", "return r3", "label if z0 ! = z1 goto label2", "label if z0 ! = 0 goto label3", "r4 = org apache common lang builder compare to builder r0", "r4 comparison = -1", "goto label4", "label r6 = org apache common lang builder compare to builder r0", "return r6", "label if z0 ! = 0 goto label3", "label r5 = org apache common lang builder compare to builder r0", "r5 comparison = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [], [13], [14], [15], [16], [], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "z1 = @ parameter1", "r1 = org apache common lang builder compare to builder r0", "$ i0 = r1 comparison", "if $ i0 == 0 goto label1", "r2 = org apache common lang builder compare to builder r0", "return r2", "if $ i0 == 0 goto label1", "label if z0 ! = z1 goto label2", "r3 = org apache common lang builder compare to builder r0", "return r3", "label if z0 ! = z1 goto label2", "label if z0 ! = 0 goto label3", "r4 = org apache common lang builder compare to builder r0", "r4 comparison = -1", "goto label4", "label r6 = org apache common lang builder compare to builder r0", "return r6", "label if z0 ! = 0 goto label3", "label r5 = org apache common lang builder compare to builder r0", "r5 comparison = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [], [13], [14], [15], [16], [], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "z1 = @ parameter1", "r1 = org apache common lang builder compare to builder r0", "$ i0 = r1 comparison", "if $ i0 == 0 goto label1", "r2 = org apache common lang builder compare to builder r0", "return r2", "if $ i0 == 0 goto label1", "label if z0 ! = z1 goto label2", "r3 = org apache common lang builder compare to builder r0", "return r3", "label if z0 ! = z1 goto label2", "label if z0 ! = 0 goto label3", "r4 = org apache common lang builder compare to builder r0", "r4 comparison = -1", "goto label4", "label r6 = org apache common lang builder compare to builder r0", "return r6", "label if z0 ! = 0 goto label3", "label r5 = org apache common lang builder compare to builder r0", "r5 comparison = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [], [13], [14], [15], [16], [], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "z1 = @ parameter1", "r2 = org apache common lang builder equal builder r0", "$ z2 = r2 be equal", "if $ z2 ! = 0 goto label1", "r3 = org apache common lang builder equal builder r0", "return r3", "if $ z2 ! = 0 goto label1", "label if z0 ! = z1 goto label2", "$ z3 = 1", "goto label3", "label r4 = org apache common lang builder equal builder r0", "r4 be equal = $ z3", "r5 = org apache common lang builder equal builder r0", "return r5", "label if z0 ! = z1 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "z1 = @ parameter1", "r2 = org apache common lang builder equal builder r0", "$ z2 = r2 be equal", "if $ z2 ! = 0 goto label1", "r3 = org apache common lang builder equal builder r0", "return r3", "if $ z2 ! = 0 goto label1", "label if z0 ! = z1 goto label2", "$ z3 = 1", "goto label3", "label r4 = org apache common lang builder equal builder r0", "r4 be equal = $ z3", "r5 = org apache common lang builder equal builder r0", "return r5", "label if z0 ! = z1 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache common lang builder hash code builder r0", "$ i1 = r2 i total", "r3 = org apache common lang builder hash code builder r0", "$ i0 = r3 i constant", "$ i2 = $ i1 * $ i0", "if z0 == 0 goto label1", "$ b4 = 0", "goto label2", "label $ i3 = $ i2 + $ b4", "r4 = org apache common lang builder hash code builder r0", "r4 i total = $ i3", "r5 = org apache common lang builder hash code builder r0", "return r5", "if z0 == 0 goto label1", "label $ b4 = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "specialinvoke r0 set use field name z0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ z0 = specialinvoke r0 be field separator at start", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common lang builder reflection to string builder to string r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache common lang builder to string builder r0", "$ r2 = r3 style", "r4 = org apache common lang builder to string builder r0", "$ r1 = r4 buffer", "$ r2 append $ r1 null z0", "r5 = org apache common lang builder to string builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache common lang builder to string builder r0", "$ r2 = r3 style", "r4 = org apache common lang builder to string builder r0", "$ r1 = r4 buffer", "$ r2 append $ r1 null z0", "r5 = org apache common lang builder to string builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache common lang builder to string builder r0", "$ r2 = r3 style", "r4 = org apache common lang builder to string builder r0", "$ r1 = r4 buffer", "$ r2 append $ r1 null z0", "r5 = org apache common lang builder to string builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r4 = org apache common lang builder to string builder r0", "$ r3 = r4 style", "r5 = org apache common lang builder to string builder r0", "$ r2 = r5 buffer", "$ r3 append $ r2 r1 z0", "r6 = org apache common lang builder to string builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common lang builder to string builder r0", "$ r2 = r3 get string buffer", "org apache common lang object utils identity to string $ r2 r1", "r4 = org apache common lang builder to string builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r4 = org apache common lang builder to string builder r0", "$ r3 = r4 style", "r5 = org apache common lang builder to string builder r0", "$ r2 = r5 buffer", "$ r3 append to string $ r2 r1", "label r6 = org apache common lang builder to string builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ i0 = lengthof r3", "r4 = org apache common lang builder to string style r0", "r4 append summary size r1 r2 $ i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "r1 append z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "r1 append z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common lang builder to string style r0", "$ r2 = r4 content start", "r1 append $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["c0 = @ parameter0", "$ r0 = new org apache common lang char range", "specialinvoke $ r0 < init > c0 c0 0", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["c0 = @ parameter0", "$ r0 = new org apache common lang char range", "specialinvoke $ r0 < init > c0 c0 1", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r11 = org apache common lang char range r0", "$ r2 = r11 i to string", "if $ r2 ! = null goto label3", "r10 = new java lang string buffer", "specialinvoke r10 < init > 4", "r12 = org apache common lang char range r0", "$ z0 = r12 be negate", "if $ z0 == 0 goto label1", "r10 append 94", "label r13 = org apache common lang char range r0", "$ c0 = r13 start", "r10 append $ c0", "r14 = org apache common lang char range r0", "$ c2 = r14 start", "r15 = org apache common lang char range r0", "$ c1 = r15 end", "if $ c2 == $ c1 goto label2", "r10 append 45", "r16 = org apache common lang char range r0", "$ c3 = r16 end", "r10 append $ c3", "label $ r5 = r10 to string", "r17 = org apache common lang char range r0", "r17 i to string = $ r5", "label r18 = org apache common lang char range r0", "$ r9 = r18 i to string", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return \\ `` \\ ``", "if r0 ! = null goto label1", "label $ r1 = r0 get name", "$ r2 = org apache common lang class utils get package name $ r1", "return $ r2"], "adj": [[1], [2], [], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return 0", "if r0 ! = null goto label1", "label $ r1 = r0 get name", "$ i0 = $ r1 index of 36", "if $ i0 < 0 goto label2", "$ z0 = 1", "goto label3", "label return $ z0", "if $ i0 < 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common lang class utils get class r0 r1 1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return \\ `` \\ ``", "if r0 ! = null goto label1", "label $ r1 = r0 get name", "$ r2 = org apache common lang class utils get package canonical name $ r1", "return $ r2"], "adj": [[1], [2], [], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = r0 get class", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org apache common lang exception exception utils get throwable list r0", "$ i0 = r1 size", "if $ i0 > = 2 goto label1", "$ r3 = null", "goto label2", "label return $ r3", "if $ i0 > = 2 goto label1", "label $ i1 = r1 size", "$ i2 = $ i1 - 1", "$ r2 = r1 get $ i2", "$ r3 = java lang throwable $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "$ i1 = org apache common lang exception exception utils index of r0 r1 i0 0", "return $ i1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r11 = org apache common lang exception nestable delegate r0", "r1 = r11 get throwables", "$ i0 = lengthof r1", "r2 = newarray java lang string [ $ i0 ]", "i3 = 0", "label $ i1 = lengthof r1", "if i3 > = $ i1 goto label6", "$ i2 = i3", "$ r3 = org apache common lang exception nestable delegate class $ org $ apache $ common $ lang $ exception $ nestable", "if $ r3 ! = null goto label2", "$ r9 = org apache common lang exception nestable delegate class $ \\ `` org apache common lang exception nestable\\ ``", "org apache common lang exception nestable delegate class $ org $ apache $ common $ lang $ exception $ nestable = $ r9", "goto label3", "label $ r4 = r1 [ i3 ]", "$ z0 = $ r9 be instance $ r4", "if $ z0 == 0 goto label4", "$ r6 = r1 [ i3 ]", "$ r7 = org apache common lang exception nestable $ r6", "$ r10 = $ r7 get message 0", "goto label5", "label r2 [ $ i2 ] = $ r10", "i3 = i3 + 1", "goto label1", "if $ z0 == 0 goto label4", "label $ r5 = r1 [ i3 ]", "$ r10 = $ r5 get message", "if $ r3 ! = null goto label2", "label $ r9 = org apache common lang exception nestable delegate class $ org $ apache $ common $ lang $ exception $ nestable", "if i3 > = $ i1 goto label6", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [], [22], [23], [], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = r1 size", "i6 = i0 - 1", "label if i6 < = 0 goto label3", "$ r6 = r1 get i6", "$ r7 = java lang string [ ] $ r6", "r2 = java lang string [ ] $ r7", "$ i2 = i6 - 1", "$ r8 = r1 get $ i2", "$ r9 = java lang string [ ] $ r8", "r3 = java lang string [ ] $ r9", "$ r10 = new java util array list", "$ r11 = java util array a list r2", "specialinvoke $ r10 < init > $ r11", "$ r12 = new java util array list", "$ r13 = java util array a list r3", "specialinvoke $ r12 < init > $ r13", "org apache common lang exception exception utils remove common frames $ r10 $ r12", "$ i3 = lengthof r2", "$ i4 = $ r10 size", "i1 = $ i3 - $ i4", "if i1 < = 0 goto label2", "$ r14 = new java lang string buffer", "specialinvoke $ r14 < init >", "$ r15 = $ r14 append \\ `` \\t \\ ``", "$ r16 = $ r15 append i1", "$ r17 = $ r16 append \\ `` more\\ ``", "$ r18 = $ r17 to string", "$ r10 add $ r18", "$ i5 = $ r10 size", "$ r19 = newarray java lang string [ $ i5 ]", "$ r20 = $ r10 to array $ r19", "r1 set i6 $ r20", "label i6 = i6 + -1", "goto label1", "label if i6 < = 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = new java lang null pointer exception", "specialinvoke r6 < init >", "throw r6", "if r1 ! = null goto label1", "label r7 = org apache common lang int hash map r0", "r2 = r7 table", "i1 = lengthof r2", "label $ i0 = i1", "i1 = i1 + -1", "if $ i0 < = 0 goto label6", "r5 = r2 [ i1 ]", "label if r5 == null goto label5", "$ r3 = r5 value", "$ z0 = $ r3 equal r1", "if $ z0 == 0 goto label4", "return 1", "if $ z0 == 0 goto label4", "label r5 = r5 next", "goto label3", "label if r5 == null goto label5", "label goto label2", "if $ i0 < = 0 goto label6", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org apache common lang int hash map r0", "r1 = r4 table", "$ i4 = i0 & 2147483647", "$ i3 = lengthof r1", "i2 = $ i4 % $ i3", "r3 = r1 [ i2 ]", "label if r3 == null goto label3", "$ i5 = r3 hash", "if $ i5 ! = i0 goto label2", "$ r2 = r3 value", "return $ r2", "if $ i5 ! = i0 goto label2", "label r3 = r3 next", "goto label1", "label if r3 == null goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common lang int hash map r0", "r1 = r2 table", "i0 = lengthof r1", "label i0 = i0 + -1", "if i0 < 0 goto label2", "r1 [ i0 ] = null", "goto label1", "if i0 < 0 goto label2", "label r3 = org apache common lang int hash map r0", "r3 count = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common lang locale utils available locale list", "$ z0 = $ r1 contain r0", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang math double range r0", "$ d0 = r1 min", "$ i0 = int $ d0", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang math fraction r0", "$ i0 = r1 numerator", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang math fraction r0", "$ i0 = r1 denominator", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "$ z0 = java lang double be na n d0", "if $ z0 == 0 goto label1", "return d1", "if $ z0 == 0 goto label1", "label $ z1 = java lang double be na n d1", "if $ z1 == 0 goto label2", "return d0", "if $ z1 == 0 goto label2", "label $ d2 = java lang math min d0 d1", "return $ d2"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "$ d3 = org apache common lang math i e e e754r utils min d0 d1", "$ d4 = org apache common lang math i e e e754r utils min $ d3 d2", "return $ d4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label $ i0 = r1 int value", "r2 = org apache common lang math int range r0", "$ z0 = r2 contain integer $ i0", "return $ z0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache common lang math j v m random shared_random", "$ z0 = $ r1 next boolean", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label $ l0 = r1 long value", "r2 = org apache common lang math long range r0", "$ z0 = r2 contain long $ l0", "return $ z0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label r2 = org apache common lang math long range r0", "$ l0 = r2 min", "$ z0 = r1 contain long $ l0", "if $ z0 ! = 0 goto label2", "r3 = org apache common lang math long range r0", "$ l1 = r3 max", "$ z1 = r1 contain long $ l1", "if $ z1 ! = 0 goto label2", "$ l2 = r1 get minimum long", "r4 = org apache common lang math long range r0", "$ z2 = r4 contain long $ l2", "if $ z2 == 0 goto label3", "label $ z3 = 1", "goto label4", "label return $ z3", "if $ z2 == 0 goto label3", "label $ z3 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common lang math long range r0", "$ l1 = r2 max", "r3 = org apache common lang math long range r0", "$ l0 = r3 min", "$ l2 = $ l1 - $ l0", "$ l3 = $ l2 + 1l", "$ i4 = int $ l3", "r1 = newarray long [ $ i4 ]", "i9 = 0", "label $ i5 = lengthof r1", "if i9 > = $ i5 goto label2", "r4 = org apache common lang math long range r0", "$ l7 = r4 min", "$ l6 = long i9", "$ l8 = $ l7 + $ l6", "r1 [ i9 ] = $ l8", "i9 = i9 + 1", "goto label1", "if i9 > = $ i5 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common lang math int range r0", "$ i1 = r1 min", "if i0 < $ i1 goto label1", "r2 = org apache common lang math int range r0", "$ i2 = r2 max", "if i0 > $ i2 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if i0 > $ i2 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common lang mutable mutable boolean r0", "$ z0 = r2 value", "$ r1 = org apache common lang boolean utils to boolean object $ z0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang mutable mutable boolean r0", "$ z0 = r1 value", "if $ z0 ! = 1 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 1 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang mutable mutable boolean r0", "$ z0 = r1 value", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org apache common lang mutable mutable boolean", "if $ z0 == 0 goto label3", "r3 = org apache common lang mutable mutable boolean r0", "$ z1 = r3 value", "$ r2 = org apache common lang mutable mutable boolean r1", "$ z2 = $ r2 boolean value", "if $ z1 ! = $ z2 goto label1", "$ z3 = 1", "goto label2", "label return $ z3", "if $ z1 ! = $ z2 goto label1", "label $ z3 = 0", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common lang mutable mutable boolean r0", "$ z0 = r3 value", "if $ z0 == 0 goto label1", "$ r2 = java lang boolean true", "$ i0 = $ r2 hash code", "goto label2", "label return $ i0", "if $ z0 == 0 goto label1", "label $ r1 = java lang boolean false", "$ i0 = $ r1 hash code"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang mutable mutable byte r0", "$ b0 = r1 value", "$ i1 = $ b0 + 1", "$ b2 = byte $ i1", "r2 = org apache common lang mutable mutable byte r0", "r2 value = $ b2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang mutable mutable float r0", "$ f0 = r1 value", "$ z0 = java lang float be na n $ f0", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang mutable mutable long r0", "$ l0 = r1 value", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang mutable mutable short r0", "$ s0 = r1 value", "$ f0 = float $ s0", "return $ f0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = r0 goto label1", "return 1", "if r1 ! = r0 goto label1", "label $ z0 = r1 instanceof org apache common lang number range", "if $ z0 ! = 0 goto label2", "return 0", "if $ z0 ! = 0 goto label2", "label r2 = org apache common lang number range r1", "r7 = org apache common lang number range r0", "$ r4 = r7 min", "$ r3 = r2 min", "$ z1 = $ r4 equal $ r3", "if $ z1 == 0 goto label3", "r8 = org apache common lang number range r0", "$ r6 = r8 max", "$ r5 = r2 max", "$ z2 = $ r6 equal $ r5", "if $ z2 == 0 goto label3", "$ z3 = 1", "goto label4", "label return $ z3", "if $ z2 == 0 goto label3", "label $ z3 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 ! = null goto label1", "$ r8 = new java lang null pointer exception", "specialinvoke $ r8 < init > \\ `` can not get the to string of a null identity\\ ``", "throw $ r8", "if r1 ! = null goto label1", "label $ r2 = r1 get class", "$ r3 = $ r2 get name", "$ r4 = r0 append $ r3", "$ r5 = $ r4 append 64", "$ i0 = java lang system identity hash code r1", "$ r6 = java lang integer to hex string $ i0", "$ r5 append $ r6", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = org apache common lang random string utils random i0 0 0", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "org apache common lang reflect field utils write static field r0 r1 r2 0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "z0 = @ parameter3", "if r0 ! = null goto label1", "$ r13 = new java lang illegal argument exception", "specialinvoke $ r13 < init > \\ `` target object must not be null\\ ``", "throw $ r13", "if r0 ! = null goto label1", "label r3 = r0 get class", "r4 = org apache common lang reflect field utils get field r3 r1 z0", "if r4 ! = null goto label2", "$ r5 = new java lang illegal argument exception", "$ r6 = new java lang string buffer", "specialinvoke $ r6 < init >", "$ r7 = $ r6 append \\ `` can not locate declared field \\ ``", "$ r8 = r3 get name", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 append \\ `` \\ ``", "$ r11 = $ r10 append r1", "$ r12 = $ r11 to string", "specialinvoke $ r5 < init > $ r12", "throw $ r5", "if r4 ! = null goto label2", "label org apache common lang reflect field utils write field r4 r0 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common lang text composite format r0", "$ r2 = r4 parse object r1", "r5 = org apache common lang text composite format r0", "$ r3 = r5 format $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 0 goto label1", "r3 = org apache common lang text str builder r0", "$ i1 = r3 size", "if i0 < $ i1 goto label2", "label r2 = new java lang string index out of bound exception", "specialinvoke r2 < init > i0", "throw r2", "if i0 < $ i1 goto label2", "label $ i2 = i0 + 1", "r4 = org apache common lang text str builder r0", "specialinvoke r4 delete impl i0 $ i2 1", "r5 = org apache common lang text str builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache common lang text str builder r0", "$ r1 = r3 append z0", "$ r2 = $ r1 append new line", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i2 = @ parameter1", "r1 = org apache common lang text str builder r0", "i3 = r1 validate range i0 i2", "i1 = i3 - i0", "if i1 < = 0 goto label1", "r2 = org apache common lang text str builder r0", "specialinvoke r2 delete impl i0 i3 i1", "label r3 = org apache common lang text str builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "i7 = 0", "label r3 = org apache common lang text str builder r0", "$ i3 = r3 size", "if i7 > = $ i3 goto label5", "r4 = org apache common lang text str builder r0", "$ r1 = r4 buffer", "$ c4 = $ r1 [ i7 ]", "if $ c4 ! = c0 goto label4", "i1 = i7", "label i7 = i7 + 1", "r5 = org apache common lang text str builder r0", "$ i5 = r5 size", "if i7 > = $ i5 goto label3", "r6 = org apache common lang text str builder r0", "$ r2 = r6 buffer", "$ c6 = $ r2 [ i7 ]", "if $ c6 == c0 goto label2", "goto label3", "label i2 = i7 - i1", "r7 = org apache common lang text str builder r0", "specialinvoke r7 delete impl i1 i7 i2", "i7 = i7 - i2", "label i7 = i7 + 1", "goto label1", "if i7 > = $ i3 goto label5", "label r8 = org apache common lang text str builder r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [], [27], [28], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "c1 = @ parameter1", "if c0 == c1 goto label3", "i4 = 0", "label r3 = org apache common lang text str builder r0", "$ i2 = r3 size", "if i4 > = $ i2 goto label3", "r4 = org apache common lang text str builder r0", "$ r1 = r4 buffer", "$ c3 = $ r1 [ i4 ]", "if $ c3 ! = c0 goto label2", "r5 = org apache common lang text str builder r0", "$ r2 = r5 buffer", "$ r2 [ i4 ] = c1", "label i4 = i4 + 1", "goto label1", "if i4 > = $ i2 goto label3", "label r6 = org apache common lang text str builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache common lang text str builder $ str builder tokenizer", "r3 = org apache common lang text str builder r0", "specialinvoke r2 < init > r3", "r4 = org apache common lang text str tokenizer r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common lang text str builder r0", "r1 = r2 buffer", "i3 = 0", "r3 = org apache common lang text str builder r0", "$ i0 = r3 size", "i4 = $ i0 - 1", "label if i4 < 0 goto label2", "$ i2 = 31 * i3", "$ c1 = r1 [ i4 ]", "i3 = $ i2 + $ c1", "i4 = i4 + -1", "goto label1", "label if i4 < 0 goto label2", "label return i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i2 = @ parameter1", "if i0 > = 0 goto label1", "r3 = new java lang string index out of bound exception", "specialinvoke r3 < init > i0", "throw r3", "if i0 > = 0 goto label1", "label r5 = org apache common lang text str builder r0", "$ i1 = r5 size", "if i2 < = $ i1 goto label2", "r6 = org apache common lang text str builder r0", "i2 = r6 size", "label if i0 < = i2 goto label3", "r4 = new java lang string index out of bound exception", "specialinvoke r4 < init > \\ `` end < start\\ ``", "throw r4", "label if i0 < = i2 goto label3", "label return i2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 0 goto label1", "r3 = org apache common lang text str builder r0", "$ i1 = r3 size", "if i0 < = $ i1 goto label2", "label r2 = new java lang string index out of bound exception", "specialinvoke r2 < init > i0", "throw r2", "if i0 < = $ i1 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org apache common lang text str lookup $ map str lookup", "specialinvoke r2 < init > r0", "r3 = org apache common lang text str lookup r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["c0 = @ parameter0", "r1 = new org apache common lang text str matcher $ char matcher", "specialinvoke r1 < init > c0", "r2 = org apache common lang text str matcher r1", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = r0 length", "if $ i0 ! = 0 goto label2", "label $ r1 = org apache common lang text str matcher none_matcher", "return $ r1", "if $ i0 ! = 0 goto label2", "label r3 = new org apache common lang text str matcher $ string matcher", "specialinvoke r3 < init > r0", "r4 = org apache common lang text str matcher r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r3 = new java lang illegal argument exception", "specialinvoke r3 < init > \\ `` variable prefix matcher must not be null ! \\ ``", "throw r3", "if r1 ! = null goto label1", "label r4 = org apache common lang text str substitutor r0", "r4 prefix matcher = r1", "r5 = org apache common lang text str substitutor r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common lang text str tokenizer r0", "$ r1 = r2 delim matcher", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r2 = org apache common lang text str tokenizer r0", "r2 quote matcher = r1", "label r3 = org apache common lang text str tokenizer r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common lang text str tokenizer r0", "r1 empty a null = z0", "r2 = org apache common lang text str tokenizer r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang text str tokenizer r0", "$ z0 = r1 ignore empty token", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common lang text str tokenizer r0", "$ r1 = r5 char", "if $ r1 ! = null goto label1", "return null", "if $ r1 ! = null goto label1", "label r4 = new java lang string", "r6 = org apache common lang text str tokenizer r0", "$ r3 = r6 char", "specialinvoke r4 < init > $ r3", "return r4"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common lang time stop watch r0", "$ i0 = r3 run state", "if $ i0 == 1 goto label1", "r2 = new java lang illegal state exception", "specialinvoke r2 < init > \\ `` stopwatch must be run to suspend \\ ``", "throw r2", "if $ i0 == 1 goto label1", "label $ l1 = java lang system current time millis", "r4 = org apache common lang time stop watch r0", "r4 stop time = $ l1", "r5 = org apache common lang time stop watch r0", "r5 run state = 3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["z0 = @ parameter0", "r0 = @ parameter1", "d0 = @ parameter2", "if z0 ! = 0 goto label1", "$ r1 = new java lang illegal argument exception", "$ r2 = new java lang string buffer", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append r0", "$ r4 = $ r3 append d0", "$ r5 = $ r4 to string", "specialinvoke $ r1 < init > $ r5", "throw $ r1", "if z0 ! = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common lang word utils initial r0 null", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = org apache common lang object utils equal r0 r1", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof java lang cloneable", "if $ z0 == 0 goto label10", "$ r1 = r0 get class", "$ z1 = $ r1 be array", "if $ z1 == 0 goto label04", "$ r2 = r0 get class", "r32 = $ r2 get component type", "$ z2 = r32 be primitive", "if $ z2 ! = 0 goto label01", "$ r4 = java lang object [ ] r0", "$ r5 = java lang object [ ] $ r4", "r33 = $ r5 clone", "goto label03", "label goto label09", "label return r33", "if $ z2 ! = 0 goto label01", "label i1 = java lang reflect array get length r0", "r33 = java lang reflect array new instance r32 i1", "label $ i0 = i1", "i1 = i1 + -1", "if $ i0 < = 0 goto label03", "$ r3 = java lang reflect array get r0 i1", "java lang reflect array set r33 i1 $ r3", "goto label02", "if $ z1 == 0 goto label04", "label r33 = org apache common lang reflect method utils invoke method r0 \\ `` clone\\", "label goto label09", "if $ z0 == 0 goto label10", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label java lang enum value of r0 r1", "label return 1"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org apache common lang3 validate no null element r1", "$ r3 = java util array a list r1", "$ l0 = org apache common lang3 enum utils generate bit vector r0 $ r3", "return $ l0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i3 = 1", "if r0 == null goto label2", "i0 = lengthof r0", "i4 = 0", "label if i4 > = i0 goto label2", "r2 = r0 [ i4 ]", "$ i1 = i3 * 31", "$ i2 = org apache common lang3 object utils hash code r2", "i3 = $ i1 + $ i2", "i4 = i4 + 1", "goto label1", "label if i4 > = i0 goto label2", "label return i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = org apache common lang3 object utils compare r0 r1 0", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["c0 = @ parameter0", "$ r0 = new org apache common lang3 char range", "specialinvoke $ r0 < init > c0 c0 0", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "if r0 ! = null goto label1", "$ r12 = new java lang illegal argument exception", "specialinvoke $ r12 < init > \\ `` target object must not be null\\ ``", "throw $ r12", "if r0 ! = null goto label1", "label r2 = r0 get class", "r3 = org apache common lang3 reflect field utils get field r2 r1 z0", "if r3 ! = null goto label2", "$ r5 = new java lang illegal argument exception", "$ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "$ r7 = $ r6 append \\ `` can not locate field \\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 append \\ `` on \\ ``", "$ r10 = $ r9 append r2", "$ r11 = $ r10 to string", "specialinvoke $ r5 < init > $ r11", "throw $ r5", "if r3 ! = null goto label2", "label $ r4 = org apache common lang3 reflect field utils read field r3 r0", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "z0 = @ parameter3", "if r0 ! = null goto label1", "$ r13 = new java lang illegal argument exception", "specialinvoke $ r13 < init > \\ `` target object must not be null\\ ``", "throw $ r13", "if r0 ! = null goto label1", "label r3 = r0 get class", "r4 = org apache common lang3 reflect field utils get field r3 r1 z0", "if r4 ! = null goto label2", "$ r5 = new java lang illegal argument exception", "$ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "$ r7 = $ r6 append \\ `` can not locate declared field \\ ``", "$ r8 = r3 get name", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 append \\ `` \\ ``", "$ r11 = $ r10 append r1", "$ r12 = $ r11 to string", "specialinvoke $ r5 < init > $ r12", "throw $ r5", "if r4 ! = null goto label2", "label org apache common lang3 reflect field utils write field r4 r0 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = org apache common lang3 text translate numeric entity escaper outside of 0 i0", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "$ r0 = new org apache common lang3 text translate numeric entity escaper", "specialinvoke $ r0 < init > i0 i1 1", "return $ r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "$ r0 = new org apache common lang3 text translate numeric entity escaper", "specialinvoke $ r0 < init > i0 i1 0", "return $ r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common lang3 tuple mutable pair r0", "r2 right = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "r2 = @ parameter3", "org apache common lang3 validate not null r0", "if i0 < 0 goto label1", "$ i1 = r0 length", "if i0 < $ i1 goto label2", "label $ r4 = new java lang index out of bound exception", "$ r5 = java lang string format r1 r2", "specialinvoke $ r4 < init > $ r5", "throw $ r4", "if i0 < $ i1 goto label2", "label return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "i1 = @ parameter2", "$ r2 = new java util bit set", "specialinvoke $ r2 < init >", "if r0 ! = null goto label1", "return $ r2", "if r0 ! = null goto label1", "label $ i0 = lengthof r0", "if i1 > = $ i0 goto label3", "i2 = org apache common lang3 array utils index of r0 z0 i1", "if i2 ! = -1 goto label2", "goto label3", "label return $ r2", "if i2 ! = -1 goto label2", "label $ r2 set i2", "i1 = i2 + 1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org apache common lang3 builder equal builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append r0 r1", "$ z0 = $ r3 be equal", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "$ i0 = org apache common lang3 array utils last index of r0 z0 2147483647", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "$ r1 = org apache common lang3 array utils index of r0 z0", "$ r2 = org apache common lang3 array utils remove all r0 $ r1", "$ r3 = boolean [ ] $ r2", "$ r4 = boolean [ ] $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "if r0 ! = null goto label1", "return", "if r0 ! = null goto label1", "label $ i1 = lengthof r0", "org apache common lang3 array utils shift r0 0 $ i1 i0"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ z0 = org apache common lang3 array utils be empty r0", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label org apache common lang3 array utils swap r0 i0 i1 1"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ parameter0", "i7 = @ parameter1", "i8 = @ parameter2", "i9 = @ parameter3", "$ z1 = org apache common lang3 array utils be empty r0", "if $ z1 ! = 0 goto label1", "$ i0 = lengthof r0", "if i7 > = $ i0 goto label1", "$ i1 = lengthof r0", "if i8 < $ i1 goto label2", "label return", "if i8 < $ i1 goto label2", "label if i7 > = 0 goto label3", "i7 = 0", "label if i8 > = 0 goto label4", "i8 = 0", "label $ i2 = lengthof r0", "$ i3 = $ i2 - i7", "$ i4 = java lang math min i9 $ i3", "$ i5 = lengthof r0", "$ i6 = $ i5 - i8", "i10 = java lang math min $ i4 $ i6", "i11 = 0", "label if i11 > = i10 goto label6", "z0 = r0 [ i7 ]", "$ z2 = r0 [ i8 ]", "r0 [ i7 ] = $ z2", "r0 [ i8 ] = z0", "i11 = i11 + 1", "i7 = i7 + 1", "i8 = i8 + 1", "goto label5", "label if i11 > = i10 goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "$ r3 = org apache common lang3 array utils empty_boolean_array", "return $ r3", "if $ i0 ! = 0 goto label2", "label $ i1 = lengthof r0", "r1 = newarray boolean [ $ i1 ]", "i3 = 0", "label $ i2 = lengthof r0", "if i3 > = $ i2 goto label4", "$ r2 = r0 [ i3 ]", "$ z0 = $ r2 boolean value", "r1 [ i3 ] = $ z0", "i3 = i3 + 1", "goto label3", "if i3 > = $ i2 goto label4", "label return r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "$ r3 = org apache common lang3 array utils empty_boolean_array", "return $ r3", "if $ i0 ! = 0 goto label2", "label $ i1 = lengthof r0", "r1 = newarray boolean [ $ i1 ]", "i3 = 0", "label $ i2 = lengthof r0", "if i3 > = $ i2 goto label4", "$ r2 = r0 [ i3 ]", "$ z0 = $ r2 boolean value", "r1 [ i3 ] = $ z0", "i3 = i3 + 1", "goto label3", "if i3 > = $ i2 goto label4", "label return r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "$ r3 = org apache common lang3 array utils empty_boolean_array", "return $ r3", "if $ i0 ! = 0 goto label2", "label $ i1 = lengthof r0", "r1 = newarray boolean [ $ i1 ]", "i3 = 0", "label $ i2 = lengthof r0", "if i3 > = $ i2 goto label4", "$ r2 = r0 [ i3 ]", "$ z0 = $ r2 boolean value", "r1 [ i3 ] = $ z0", "i3 = i3 + 1", "goto label3", "if i3 > = $ i2 goto label4", "label return r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "$ r3 = org apache common lang3 array utils empty_boolean_array", "return $ r3", "if $ i0 ! = 0 goto label2", "label $ i1 = lengthof r0", "r1 = newarray boolean [ $ i1 ]", "i3 = 0", "label $ i2 = lengthof r0", "if i3 > = $ i2 goto label4", "$ r2 = r0 [ i3 ]", "$ z0 = $ r2 boolean value", "r1 [ i3 ] = $ z0", "i3 = i3 + 1", "goto label3", "if i3 > = $ i2 goto label4", "label return r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common lang3 builder equal builder r0", "r1 test transient = z0", "r2 = org apache common lang3 builder equal builder r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common lang3 builder equal builder r0", "r2 exclude field = r1", "r3 = org apache common lang3 builder equal builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org apache common lang3 compare comparable utils $ comparable check builder", "specialinvoke $ r1 < init > r0 null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common lang3 concurrent abstract circuit breaker r0", "$ r2 = r3 change support", "$ r2 add property change listener r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang3 concurrent event count circuit breaker r0", "$ i0 = r1 open threshold", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label04", "if r1 == null goto label01", "$ z12 = r1 be primitive", "if $ z12 ! = 0 goto label02", "label $ z13 = 1", "goto label03", "label return $ z13", "if $ z12 ! = 0 goto label02", "label $ z13 = 0", "if r0 ! = null goto label04", "label if r1 ! = null goto label05", "return 0", "label if r1 ! = null goto label05", "label $ z0 = r1 equal r0", "if $ z0 == 0 goto label06", "return 1", "if $ z0 == 0 goto label06", "label $ z1 = r0 instanceof java lang class", "if $ z1 == 0 goto label07", "$ r15 = java lang class r0", "$ z11 = org apache common lang3 class utils be assignable $ r15 r1", "return $ z11", "if $ z1 == 0 goto label07", "label $ z2 = r0 instanceof java lang reflect parameterized type", "if $ z2 == 0 goto label08", "$ r13 = java lang reflect parameterized type r0", "$ r14 = org apache common lang3 reflect type utils get raw type $ r13", "$ z10 = org apache common lang3 reflect type utils be assignable $ r14 r1", "return $ z10", "if $ z2 == 0 goto label08", "label $ z3 = r0 instanceof java lang reflect type variable", "if $ z3 == 0 goto label12", "$ r12 = java lang reflect type variable r0", "r2 = $ r12 get bound", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label11", "r3 = r2 [ i1 ]", "$ z9 = org apache common lang3 reflect type utils be assignable r3 r1", "if $ z9 == 0 goto label10", "label i1 = i1 + 1", "goto label09", "label if i1 > = i0 goto label11", "label return 0", "if $ z3 == 0 goto label12", "label $ z4 = r0 instanceof java lang reflect generic array type", "if $ z4 == 0 goto label16", "$ z6 = r1 equal class \\ `` ljava lang object \\ ``", "if $ z6 ! = 0 goto label13", "$ z7 = r1 be array", "if $ z7 == 0 goto label14", "$ r9 = java lang reflect generic array type r0", "$ r10 = $ r9 get generic component type", "$ r11 = r1 get component type", "$ z8 = org apache common lang3 reflect type utils be assignable $ r10 $ r11", "if $ z8 == 0 goto label14", "label $ z14 = 1", "goto label15", "label return $ z14", "if $ z8 == 0 goto label14", "label $ z14 = 0", "if $ z4 == 0 goto label16", "label $ z5 = r0 instanceof java lang reflect wildcard type", "if $ z5 == 0 goto label17", "label $ r4 = new java lang illegal state exception", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ r6 = $ r5 append \\ `` find an unhandled type \\ ``", "$ r7 = $ r6 append r0", "$ r8 = $ r7 to string", "specialinvoke $ r4 < init > $ r8", "throw $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [], [15], [16], [17], [], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common lang3 reg ex utils replace first r0 r1 \\ `` \\ ``", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r0 == null goto label1", "if r1 == null goto label1", "if r2 ! = null goto label2", "label return r0", "if r2 ! = null goto label2", "label $ r3 = r0 replace all r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r0 == null goto label1", "if r1 == null goto label1", "if r2 ! = null goto label2", "label return r0", "if r2 ! = null goto label2", "label $ r3 = r0 replace first r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "$ r1 = org apache common lang3 text str matcher char matcher c0", "r3 = org apache common lang3 text str substitutor r0", "$ r2 = r3 set value delimiter matcher $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = java lang thread current thread", "r2 = $ r0 get thread group", "label $ r1 = r2 get parent", "if $ r1 == null goto label2", "r2 = r2 get parent", "goto label1", "if $ r1 == null goto label2", "label return r2"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common lang3 thread utils get system thread group", "$ r2 = org apache common lang3 thread utils find threads $ r1 1 r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common lang3 time calendar utils r0", "$ r1 = r2 calendar", "$ i0 = $ r1 get 2", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "r0 = @ parameter1", "$ r1 = org apache common lang3 time fast date format cache", "$ r2 = $ r1 get time instance i0 null r0", "$ r3 = org apache common lang3 time fast date format $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "$ r0 = org apache common lang3 time fast date format cache", "$ r1 = $ r0 get date time instance i0 i1 null null", "$ r2 = org apache common lang3 time fast date format $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "r0 = @ parameter2", "$ r1 = org apache common lang3 time fast date format cache", "$ r2 = $ r1 get date time instance i0 i1 null r0", "$ r3 = org apache common lang3 time fast date format $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common lang3 time fast date format r0", "$ r1 = r3 printer", "$ r2 = $ r1 get time zone", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common lang3 time fast date parser r0", "$ r1 = r4 pattern", "$ i0 = $ r1 hash code", "r5 = org apache common lang3 time fast date parser r0", "$ r2 = r5 time zone", "$ i1 = $ r2 hash code", "r6 = org apache common lang3 time fast date parser r0", "$ r3 = r6 locale", "$ i2 = $ r3 hash code", "$ i3 = 13 * $ i2", "$ i4 = $ i1 + $ i3", "$ i5 = 13 * $ i4", "$ i6 = $ i0 + $ i5", "return $ i6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common lang3 time stop watch r0", "$ r1 = r2 run state", "$ z0 = $ r1 be stop", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r14 = new java lang string builder", "specialinvoke r14 < init >", "$ r2 = r14 append \\ `` fast date parser [ \\ ``", "r15 = org apache common lang3 time fast date parser r0", "$ r3 = r15 pattern", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append \\", "r16 = org apache common lang3 time fast date parser r0", "$ r6 = r16 locale", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append \\", "r17 = org apache common lang3 time fast date parser r0", "$ r9 = r17 time zone", "$ r10 = $ r9 get i d", "$ r11 = $ r8 append $ r10", "$ r12 = $ r11 append \\ `` ] \\ ``", "$ r13 = $ r12 to string", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common lang3 time fast date format r0", "$ r1 = r2 printer", "$ i0 = $ r1 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common lang3 time fast date parser r0", "$ r1 = r4 pattern", "$ i0 = $ r1 hash code", "r5 = org apache common lang3 time fast date parser r0", "$ r2 = r5 time zone", "$ i1 = $ r2 hash code", "r6 = org apache common lang3 time fast date parser r0", "$ r3 = r6 locale", "$ i2 = $ r3 hash code", "$ i3 = 13 * $ i2", "$ i4 = $ i1 + $ i3", "$ i5 = 13 * $ i4", "$ i6 = $ i0 + $ i5", "return $ i6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common log impl avalon logger r0", "$ r1 = r2 logger", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org apache common log impl avalon logger r0", "$ r3 = r6 get logger", "$ z0 = $ r3 be error enable", "if $ z0 == 0 goto label1", "r7 = org apache common log impl avalon logger r0", "$ r4 = r7 get logger", "$ r5 = java lang string value of r1", "$ r4 error $ r5 r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org apache common log impl avalon logger r0", "$ r3 = r6 get logger", "$ z0 = $ r3 be fatal error enable", "if $ z0 == 0 goto label1", "r7 = org apache common log impl avalon logger r0", "$ r4 = r7 get logger", "$ r5 = java lang string value of r1", "$ r4 fatal error $ r5 r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common log impl avalon logger r0", "$ r1 = r2 get logger", "$ z0 = $ r1 be error enable", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common log impl avalon logger r0", "$ r1 = r2 get logger", "$ z0 = $ r1 be warn enabled", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common log impl jdk13 lumberjack logger r0", "$ r1 = r3 get logger", "$ r2 = java util log level fine", "$ z0 = $ r1 be loggable $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache common log impl log4 j logger r0", "$ r2 = r5 get logger", "$ r4 = org apache common log impl log4 j logger fqcn", "$ r3 = org apache log4j priority debug", "r6 = org apache log4j category $ r2", "r6 log $ r4 $ r3 r1 null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache common log impl log4 j logger r0", "$ r2 = r5 get logger", "$ r4 = org apache common log impl log4 j logger fqcn", "$ r3 = org apache log4j priority error", "r6 = org apache log4j category $ r2", "r6 log $ r4 $ r3 r1 null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common log impl log4 j logger r0", "$ r1 = r2 get logger", "r3 = org apache log4j category $ r1", "$ z0 = r3 be debug enabled", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common log impl log factory impl r0", "$ z0 = specialinvoke r1 be log library available \\ `` jdk13 lumberjack\\", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r4 = org apache common log impl log kit logger r0", "$ r2 = r4 get logger", "$ r3 = java lang string value of r1", "$ r2 fatal error $ r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java lang unsupported operation exception", "specialinvoke $ r1 < init >", "throw $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 analysis differentiation finite difference differentiator r0", "$ i0 = r1 nb point", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 analysis integration base abstract univariate integrator r0", "$ r1 = r2 count", "$ r1 increment", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache common math3 analysis integration gauss gauss integrator r0", "$ r1 = r2 weight", "$ d0 = $ r1 [ i0 ]", "return $ d0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r13 = org apache common math3 analysis polynomial polynomial function newton form r0", "i0 = r13 degree", "$ i1 = i0 + 1", "$ r1 = newarray double [ $ i1 ]", "r14 = org apache common math3 analysis polynomial polynomial function newton form r0", "r14 coefficient = $ r1", "i3 = 0", "label if i3 > i0 goto label2", "r15 = org apache common math3 analysis polynomial polynomial function newton form r0", "$ r12 = r15 coefficient", "$ r12 [ i3 ] = 0 0", "i3 = i3 + 1", "goto label1", "label if i3 > i0 goto label2", "label r16 = org apache common math3 analysis polynomial polynomial function newton form r0", "$ r3 = r16 coefficient", "r17 = org apache common math3 analysis polynomial polynomial function newton form r0", "$ r2 = r17 a", "$ d0 = $ r2 [ i0 ]", "$ r3 [ 0 ] = $ d0", "i4 = i0 - 1", "label if i4 < 0 goto label6", "i5 = i0 - i4", "label if i5 < = 0 goto label5", "r18 = org apache common math3 analysis polynomial polynomial function newton form r0", "$ r11 = r18 coefficient", "r19 = org apache common math3 analysis polynomial polynomial function newton form r0", "$ r8 = r19 coefficient", "$ i2 = i5 - 1", "$ d9 = $ r8 [ $ i2 ]", "r20 = org apache common math3 analysis polynomial polynomial function newton form r0", "$ r9 = r20 c", "$ d7 = $ r9 [ i4 ]", "r21 = org apache common math3 analysis polynomial polynomial function newton form r0", "$ r10 = r21 coefficient", "$ d6 = $ r10 [ i5 ]", "$ d8 = $ d7 * $ d6", "$ d10 = $ d9 - $ d8", "$ r11 [ i5 ] = $ d10", "i5 = i5 + -1", "goto label4", "label if i5 < = 0 goto label5", "label r22 = org apache common math3 analysis polynomial polynomial function newton form r0", "$ r7 = r22 coefficient", "r23 = org apache common math3 analysis polynomial polynomial function newton form r0", "$ r4 = r23 a", "$ d4 = $ r4 [ i4 ]", "r24 = org apache common math3 analysis polynomial polynomial function newton form r0", "$ r5 = r24 c", "$ d2 = $ r5 [ i4 ]", "r25 = org apache common math3 analysis polynomial polynomial function newton form r0", "$ r6 = r25 coefficient", "$ d1 = $ r6 [ 0 ]", "$ d3 = $ d2 * $ d1", "$ d5 = $ d4 - $ d3", "$ r7 [ 0 ] = $ d5", "i4 = i4 + -1", "goto label3", "label if i4 < 0 goto label6", "label r26 = org apache common math3 analysis polynomial polynomial function newton form r0", "r26 coefficient compute = 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [], [60], [61], [62], []]}
{"nodes": ["i0 = @ parameter0", "$ r1 = org apache common math3 analysis polynomial polynomial utils legendre_coefficients", "r3 = new org apache common math3 analysis polynomial polynomial utils $ 4", "specialinvoke r3 < init >", "r4 = org apache common math3 analysis polynomial polynomial utils $ recurrence coefficient generator r3", "$ r2 = org apache common math3 analysis polynomial polynomial utils build polynomial i0 $ r1 r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r2 = new org apache common math3 complex quaternion", "r3 = org apache common math3 complex quaternion r0", "$ d1 = r3 q0", "$ d8 = d0 * $ d1", "r4 = org apache common math3 complex quaternion r0", "$ d2 = r4 q1", "$ d7 = d0 * $ d2", "r5 = org apache common math3 complex quaternion r0", "$ d3 = r5 q2", "$ d6 = d0 * $ d3", "r6 = org apache common math3 complex quaternion r0", "$ d4 = r6 q3", "$ d5 = d0 * $ d4", "specialinvoke r2 < init > $ d8 $ d7 $ d6 $ d5", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "$ r1 = specialinvoke r0 get relative accuracy", "$ r2 = org apache common math3 dfp dfp $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ i1 = i0 & 31", "r1 = org apache common math3 dfp dfp field r0", "r1 ieee flag = $ i1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 dfp dfp field r0", "$ r1 = r2 two", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 dfp dfp field r0", "$ r1 = r2 ln5", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 distribution f distribution r0", "$ d0 = r1 numerator degree of freedom", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 exception no bracketing exception r0", "$ d0 = r1 lo", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org apache common math3 linear array real vector", "specialinvoke r4 < init > r1 0", "r5 = org apache common math3 fit leastsquares least square builder r0", "r6 = org apache common math3 linear real vector r4", "$ r3 = r5 target r6", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 fit weight observed point r0", "$ d0 = r1 x", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 geometry enclose enclose ball r0", "$ r1 = r2 center", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache common math3 geometry euclidean oned interval set", "r3 = org apache common math3 geometry euclidean oned orient point r0", "$ d0 = r3 tolerance", "specialinvoke r2 < init > $ d0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 geometry euclidean oned orient point r0", "$ r1 = r2 location", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = java util locale get default", "$ r1 = org apache common math3 geometry euclidean oned vector1 d format get instance $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 geometry euclidean threed field rotation r0", "$ r1 = r2 q1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache common math3 geometry euclidean threed rotation convention vector_operator", "r3 = org apache common math3 geometry euclidean threed field rotation r0", "$ r2 = r3 get axis $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = org apache common math3 geometry euclidean threed field vector3 d r0", "$ r1 = r7 z", "r8 = org apache common math3 geometry euclidean threed field vector3 d r0", "$ r2 = r8 get norm", "$ r3 = $ r1 divide $ r2", "$ r4 = org apache common math3 real field element $ r3", "$ r5 = $ r4 asin", "$ r6 = org apache common math3 real field element $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r11 = new org apache common math3 geometry euclidean threed field vector3 d", "r12 = org apache common math3 geometry euclidean threed field vector3 d r0", "$ r2 = r12 x", "$ r3 = $ r2 multiply d0", "$ r5 = org apache common math3 real field element $ r3", "r13 = org apache common math3 geometry euclidean threed field vector3 d r0", "$ r4 = r13 y", "$ r6 = $ r4 multiply d0", "$ r8 = org apache common math3 real field element $ r6", "r14 = org apache common math3 geometry euclidean threed field vector3 d r0", "$ r7 = r14 z", "$ r9 = $ r7 multiply d0", "$ r10 = org apache common math3 real field element $ r9", "specialinvoke r11 < init > $ r5 $ r8 $ r10", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common math3 geometry euclidean threed field vector3 d r0", "$ r1 = r4 x", "$ d0 = $ r1 get real", "$ z0 = java lang double be na n $ d0", "if $ z0 ! = 0 goto label1", "r5 = org apache common math3 geometry euclidean threed field vector3 d r0", "$ r2 = r5 y", "$ d1 = $ r2 get real", "$ z1 = java lang double be na n $ d1", "if $ z1 ! = 0 goto label1", "r6 = org apache common math3 geometry euclidean threed field vector3 d r0", "$ r3 = r6 z", "$ d2 = $ r3 get real", "$ z2 = java lang double be na n $ d2", "if $ z2 == 0 goto label2", "label $ z3 = 1", "goto label3", "label return $ z3", "if $ z2 == 0 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache common math3 geometry euclidean threed line r0", "$ r3 = r5 direction", "$ r2 = r1 direction", "d0 = org apache common math3 geometry euclidean threed vector3 d angle $ r3 $ r2", "r6 = org apache common math3 geometry euclidean threed line r0", "$ d1 = r6 tolerance", "$ b0 = d0 cmpg $ d1", "if $ b0 < 0 goto label1", "r7 = org apache common math3 geometry euclidean threed line r0", "$ d2 = r7 tolerance", "$ d3 = 3 141592653589793 - $ d2", "$ b1 = d0 cmpl $ d3", "if $ b1 < = 0 goto label2", "label $ r4 = r1 zero", "r8 = org apache common math3 geometry euclidean threed line r0", "$ z0 = r8 contain $ r4", "if $ z0 == 0 goto label2", "$ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 geometry euclidean threed plane r0", "$ r1 = r2 u", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common math3 geometry euclidean threed plane r0", "r1 = r5 u", "r6 = org apache common math3 geometry euclidean threed plane r0", "$ r2 = r6 v", "r7 = org apache common math3 geometry euclidean threed plane r0", "r7 u = $ r2", "r8 = org apache common math3 geometry euclidean threed plane r0", "r8 v = r1", "r9 = org apache common math3 geometry euclidean threed plane r0", "$ r3 = r9 w", "$ r4 = $ r3 negate", "r10 = org apache common math3 geometry euclidean threed plane r0", "r10 w = $ r4", "r11 = org apache common math3 geometry euclidean threed plane r0", "$ d0 = r11 origin offset", "$ d1 = neg $ d0", "r12 = org apache common math3 geometry euclidean threed plane r0", "r12 origin offset = $ d1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 geometry euclidean threed segment r0", "$ r1 = r2 end", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 geometry euclidean threed spherical coordinate r0", "$ d0 = r1 phi", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "r2 = org apache common math3 geometry euclidean twod line r0", "specialinvoke r2 unlink reverse", "$ d1 = org apache common math3 util math utils normalize angle d0 3 141592653589793", "r3 = org apache common math3 geometry euclidean twod line r0", "r3 angle = $ d1", "r4 = org apache common math3 geometry euclidean twod line r0", "$ d2 = r4 angle", "$ d3 = org apache common math3 util fast math cos $ d2", "r5 = org apache common math3 geometry euclidean twod line r0", "r5 co = $ d3", "r6 = org apache common math3 geometry euclidean twod line r0", "$ d4 = r6 angle", "$ d5 = org apache common math3 util fast math sin $ d4", "r7 = org apache common math3 geometry euclidean twod line r0", "r7 sin = $ d5", "r8 = org apache common math3 geometry euclidean twod line r0", "$ d6 = r8 co", "$ d7 = r1 get y", "r9 = org apache common math3 geometry euclidean twod line r0", "$ d8 = r9 sin", "$ d9 = neg $ d8", "$ d10 = r1 get x", "$ d11 = org apache common math3 util math array linear combination $ d6 $ d7 $ d9 $ d10", "r10 = org apache common math3 geometry euclidean twod line r0", "r10 origin offset = $ d11", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common math3 geometry euclidean twod line r0", "r3 = org apache common math3 geometry vector r1", "$ d0 = r2 get offset r3", "$ d1 = org apache common math3 util fast math ab $ d0", "r4 = org apache common math3 geometry euclidean twod line r0", "$ d2 = r4 tolerance", "$ b0 = $ d1 cmpg $ d2", "if $ b0 > = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b0 > = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 geometry euclidean twod line r0", "$ d0 = r1 origin offset", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r7 = new java util array list", "specialinvoke r7 < init >", "r9 = org apache common math3 geometry spherical oned arcs set r0", "r2 = r9 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r5 = r2 next", "r3 = double [ ] $ r5", "r8 = new org apache common math3 geometry spherical oned arc", "$ d0 = r3 [ 0 ]", "$ d1 = r3 [ 1 ]", "r10 = org apache common math3 geometry spherical oned arcs set r0", "$ d2 = r10 get tolerance", "specialinvoke r8 < init > $ d0 $ d1 $ d2", "r7 add r8", "goto label1", "if $ z0 == 0 goto label2", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 geometry spherical twod circle r0", "$ r1 = r2 pole", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 geometry vector format r0", "$ r1 = r2 prefix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 geometry vector format r0", "$ r1 = r2 suffix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = org apache common math3 linear array field vector r0", "$ r3 = r14 data", "i0 = lengthof $ r3", "$ r4 = r1 data", "i1 = lengthof $ r4", "r13 = new org apache common math3 linear array2 d row field matrix", "r15 = org apache common math3 linear array field vector r0", "$ r6 = r15 field", "specialinvoke r13 < init > $ r6 i0 i1", "i2 = 0", "label if i2 > = i0 goto label4", "i3 = 0", "label if i3 > = i1 goto label3", "r16 = org apache common math3 linear array field vector r0", "$ r7 = r16 data", "$ r10 = $ r7 [ i2 ]", "$ r8 = r1 data", "$ r9 = $ r8 [ i3 ]", "$ r11 = $ r10 multiply $ r9", "$ r12 = org apache common math3 field element $ r11", "r17 = org apache common math3 linear field matrix r13", "r17 set entry i2 i3 $ r12", "i3 = i3 + 1", "goto label2", "label if i3 > = i1 goto label3", "label i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label4", "label r18 = org apache common math3 linear field matrix r13", "return r18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [], [30], [31], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r5 = org apache common math3 linear array field vector r0", "$ r1 = r5 data", "$ i1 = lengthof $ r1", "if $ i1 == i0 goto label1", "r4 = new org apache common math3 exception dimension mismatch exception", "r6 = org apache common math3 linear array field vector r0", "$ r3 = r6 data", "$ i2 = lengthof $ r3", "specialinvoke r4 < init > $ i2 i0", "r7 = java lang throwable r4", "throw r7", "if $ i1 == i0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ parameter0", "d0 = @ parameter1", "org apache common math3 linear matrix utils be symmetric internal r0 d0 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "d2 = 0 0", "r2 = org apache common math3 linear array real vector r0", "r1 = r2 data", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "d0 = r1 [ i1 ]", "$ d1 = org apache common math3 util fast math ab d0", "d2 = d2 + $ d1", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return d2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new java util array list", "specialinvoke r6 < init >", "r7 = org apache common math3 ml neuralnet network r0", "$ r4 = r7 neuron map", "$ r5 = $ r4 value", "r6 add all $ r5", "java util collection sort r6 r1", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 ml neuralnet twod neuron square mesh2 d r0", "$ i0 = r1 number of columns", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 ode abstract field integrator r0", "$ r1 = r2 step start", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ i1 = lengthof r2", "r5 = org apache common math3 ode equation mapper r0", "$ i0 = r5 dimension", "if $ i1 == $ i0 goto label1", "r4 = new org apache common math3 exception dimension mismatch exception", "$ i5 = lengthof r2", "r6 = org apache common math3 ode equation mapper r0", "$ i4 = r6 dimension", "specialinvoke r4 < init > $ i5 $ i4", "r7 = java lang throwable r4", "throw r7", "if $ i1 == $ i0 goto label1", "label r8 = org apache common math3 ode equation mapper r0", "$ i3 = r8 first index", "r9 = org apache common math3 ode equation mapper r0", "$ i2 = r9 dimension", "java lang system arraycopy r1 $ i3 r2 0 $ i2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 ode event event state r0", "$ z0 = r1 pending event", "if $ z0 == 0 goto label1", "r2 = org apache common math3 ode event event state r0", "$ d0 = r2 pending event time", "goto label3", "label return $ d0", "if $ z0 == 0 goto label1", "label r3 = org apache common math3 ode event event state r0", "$ z1 = r3 forward", "if $ z1 == 0 goto label2", "$ d0 = #infinity", "if $ z1 == 0 goto label2", "label $ d0 = #- infinity"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 ode expandable stateful o d e r0", "$ r1 = r2 primary", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 ode expandable stateful o d e r0", "$ d0 = r1 time", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = r1 get time", "$ r4 = $ r3 get field", "r8 = org apache common math3 ode field equation mapper r0", "$ i0 = r8 get total dimension", "$ r5 = org apache common math3 util math array build array $ r4 $ i0", "r2 = org apache common math3 real field element [ ] $ r5", "i2 = 0", "$ r6 = r1 get state", "r9 = org apache common math3 ode field equation mapper r0", "r9 insert equation data 0 $ r6 r2", "label i2 = i2 + 1", "r10 = org apache common math3 ode field equation mapper r0", "$ i1 = r10 get number of equation", "if i2 > = $ i1 goto label2", "$ r7 = r1 get secondary state i2", "r11 = org apache common math3 ode field equation mapper r0", "r11 insert equation data i2 $ r7 r2", "goto label1", "if i2 > = $ i1 goto label2", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 ode field expandable o d e r0", "$ r1 = r2 mapper", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 ode field o d e state r0", "$ r1 = r2 state", "$ i0 = lengthof $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common math3 ode jacobian matrix r0", "$ r2 = r3 jacobian provider", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get field", "$ r3 = $ r2 get zero", "$ r4 = org apache common math3 real field element $ r3", "r18 = org apache common math3 ode multistep field integrator r0", "$ d0 = r18 max growth", "$ r5 = $ r4 add $ d0", "$ r6 = org apache common math3 real field element $ r5", "$ r7 = r1 get field", "$ r8 = $ r7 get zero", "$ r9 = org apache common math3 real field element $ r8", "r19 = org apache common math3 ode multistep field integrator r0", "$ d1 = r19 min reduction", "$ r10 = $ r9 add $ d1", "$ r11 = org apache common math3 real field element $ r10", "r20 = org apache common math3 ode multistep field integrator r0", "$ d2 = r20 exp", "$ r12 = r1 pow $ d2", "$ r13 = org apache common math3 real field element $ r12", "r21 = org apache common math3 ode multistep field integrator r0", "$ d3 = r21 safety", "$ r14 = $ r13 multiply $ d3", "$ r15 = org apache common math3 real field element $ r14", "$ r16 = org apache common math3 util math utils max $ r11 $ r15", "$ r17 = org apache common math3 util math utils min $ r6 $ r16", "return $ r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 optim base optimizer r0", "$ r1 = r2 evaluation", "$ i0 = $ r1 get count", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache common math3 optim linear simplex tableau r0", "$ r1 = r3 basic variable", "i1 = $ r1 [ i0 ]", "if i1 ! = -1 goto label1", "$ r2 = null", "goto label2", "label return $ r2", "if i1 ! = -1 goto label1", "label $ r2 = java lang integer value of i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 optim linear simplex tableau r0", "$ i0 = r1 num decision variable", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 optim nonlinear vector jacobian abstract least square optimizer r0", "$ d0 = r1 get chi square", "r2 = org apache common math3 optim nonlinear vector jacobian abstract least square optimizer r0", "$ i0 = r2 get target size", "$ d1 = double $ i0", "$ d2 = $ d0 $ d1", "$ d3 = org apache common math3 util fast math sqrt $ d2", "return $ d3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 optimization direct base abstract multivariate vector optimizer r0", "$ r1 = r2 function", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 optimization linear linear constraint r0", "$ r1 = r2 relationship", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 random abstract random generator r0", "$ d0 = r1 cache normal deviate", "$ z0 = java lang double be na n $ d0", "if $ z0 ! = 0 goto label1", "r2 = org apache common math3 random abstract random generator r0", "d12 = r2 cache normal deviate", "r3 = org apache common math3 random abstract random generator r0", "r3 cache normal deviate = #na n", "return d12", "if $ z0 ! = 0 goto label1", "label d13 = 0 0", "d14 = 0 0", "d15 = 1 0", "label $ b0 = d15 cmpl 1 0", "if $ b0 < 0 goto label3", "r4 = org apache common math3 random abstract random generator r0", "$ d6 = r4 next double", "$ d7 = 2 0 * $ d6", "d13 = $ d7 - 1 0", "r5 = org apache common math3 random abstract random generator r0", "$ d8 = r5 next double", "$ d9 = 2 0 * $ d8", "d14 = $ d9 - 1 0", "$ d11 = d13 * d13", "$ d10 = d14 * d14", "d15 = $ d11 + $ d10", "goto label2", "if $ b0 < 0 goto label3", "label $ b1 = d15 cmpl 0 0", "if $ b1 == 0 goto label4", "$ d3 = org apache common math3 util fast math log d15", "$ d4 = -2 0 * $ d3", "$ d5 = $ d4 d15", "d15 = org apache common math3 util fast math sqrt $ d5", "label $ d1 = d14 * d15", "r6 = org apache common math3 random abstract random generator r0", "r6 cache normal deviate = $ d1", "$ d2 = d13 * d15", "return $ d2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 random correlate random vector generator r0", "$ r1 = r2 normalize", "$ i0 = lengthof $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 random empirical distribution r0", "$ z0 = r1 load", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 random gaussian random generator r0", "$ r1 = r2 generator", "$ d0 = $ r1 next gaussian", "return $ d0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["d0 = @ parameter0", "$ d2 = org apache common math3 util fast math ab d0", "$ b0 = $ d2 cmpl 40 0", "if $ b0 < = 0 goto label3", "$ b2 = d0 cmpl 0 0", "if $ b2 < = 0 goto label1", "$ d4 = 1 0", "goto label2", "label return $ d4", "if $ b2 < = 0 goto label1", "label $ d4 = -1 0", "if $ b0 < = 0 goto label3", "label $ d3 = d0 * d0", "d1 = org apache common math3 special gamma regularize gamma p 0 5 $ d3 1 0e-15 10000", "$ b1 = d0 cmpg 0 0", "if $ b1 > = 0 goto label4", "$ d5 = neg d1", "goto label5", "label return $ d5", "if $ b1 > = 0 goto label4", "label $ d5 = d1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], []]}
{"nodes": ["d0 = @ parameter0", "$ b0 = d0 cmpg -0 5", "if $ b0 > = 0 goto label1", "r6 = new org apache common math3 exception number be too small exception", "$ r4 = java lang double value of d0", "$ r5 = java lang double value of -0 5", "specialinvoke r6 < init > $ r4 $ r5 1", "r8 = java lang throwable r6", "throw r8", "if $ b0 > = 0 goto label1", "label $ b1 = d0 cmpl 1 5", "if $ b1 < = 0 goto label2", "r7 = new org apache common math3 exception number be too large exception", "$ r1 = java lang double value of d0", "$ r2 = java lang double value of 1 5", "specialinvoke r7 < init > $ r1 $ r2 1", "r9 = java lang throwable r7", "throw r9", "if $ b1 < = 0 goto label2", "label $ b2 = d0 cmpg 0 5", "if $ b2 > 0 goto label3", "$ d58 = d0", "goto label4", "label $ b3 = $ d58 cmpg 0 0", "if $ b3 > = 0 goto label7", "$ d31 = $ d58 * 6 247308301164655e-9", "d59 = 6 116095104481416e-9 + $ d31", "$ d32 = $ d58 * 1 9575583661463974e-10", "d61 = -6 077618957228252e-8 + $ d32", "$ d33 = $ d58 * d61", "d62 = 9 926418406727737e-7 + $ d33", "$ d34 = $ d58 * d62", "d63 = -6 4304548177935305e-6 + $ d34", "$ d35 = $ d58 * d63", "d64 = -8 514194324403149e-6 + $ d35", "$ d36 = $ d58 * d64", "d65 = 4 939449793824468e-4 + $ d36", "$ d37 = $ d58 * d65", "d66 = 0 026620534842894922 + $ d37", "$ d38 = $ d58 * d66", "d67 = 0 203610414066807 + $ d38", "$ d39 = $ d58 * d67", "d68 = 1 0 + $ d39", "$ d40 = d59 d68", "$ d41 = $ d58 * $ d40", "d69 = -2 056338416977607e-7 + $ d41", "$ d42 = $ d58 * d69", "d70 = 1 133027231981696e-6 + $ d42", "$ d43 = $ d58 * d70", "d71 = -1 2504934821426706e-6 + $ d43", "$ d44 = $ d58 * d71", "d72 = -2 013485478078824e-5 + $ d44", "$ d45 = $ d58 * d72", "d73 = 1 280502823881162e-4 + $ d45", "$ d46 = $ d58 * d73", "d74 = -2 1524167411495098e-4 + $ d46", "$ d47 = $ d58 * d74", "d75 = -0 0011651675918590652 + $ d47", "$ d48 = $ d58 * d75", "d76 = 0 0072189432466631 + $ d48", "$ d49 = $ d58 * d76", "d77 = -0 009621971527876973 + $ d49", "$ d50 = $ d58 * d77", "d78 = -0 04219773455554433 + $ d50", "$ d51 = $ d58 * d78", "d79 = 0 16653861138229148 + $ d51", "$ d52 = $ d58 * d79", "d80 = -0 04200263503409524 + $ d52", "$ d53 = $ d58 * d80", "d81 = -0 6558780715202539 + $ d53", "$ d54 = $ d58 * d81", "d82 = -0 42278433509846713 + $ d54", "$ b5 = d0 cmpl 0 5", "if $ b5 < = 0 goto label5", "$ d57 = $ d58 * d82", "d83 = $ d57 d0", "goto label6", "label goto label9", "label return d83", "if $ b5 < = 0 goto label5", "label $ d55 = d82 + 0 5", "$ d56 = $ d55 + 0 5", "d83 = d0 * $ d56", "if $ b3 > = 0 goto label7", "label $ d3 = $ d58 * 4 343529937408594e-15", "d85 = -1 2494415722763663e-13 + $ d3", "$ d4 = $ d58 * d85", "d86 = 1 5728330277104463e-12 + $ d4", "$ d5 = $ d58 * d86", "d87 = 4 686843322948848e-11 + $ d5", "$ d6 = $ d58 * d87", "d88 = 6 820161668496171e-10 + $ d6", "$ d7 = $ d58 * d88", "d89 = 6 8716741130671986e-9 + $ d7", "$ d8 = $ d58 * d89", "d90 = 6 116095104481416e-9 + $ d8", "$ d9 = $ d58 * 2 6923694661863613e-4", "d92 = 0 004956830093825887 + $ d9", "$ d10 = $ d58 * d92", "d93 = 0 054642130860422966 + $ d10", "$ d11 = $ d58 * d93", "d94 = 0 3056961078365221 + $ d11", "$ d12 = $ d58 * d94", "d95 = 1 0 + $ d12", "$ d13 = d90 d95", "$ d14 = $ d13 * $ d58", "d96 = -2 056338416977607e-7 + $ d14", "$ d15 = $ d58 * d96", "d97 = 1 133027231981696e-6 + $ d15", "$ d16 = $ d58 * d97", "d98 = -1 2504934821426706e-6 + $ d16", "$ d17 = $ d58 * d98", "d99 = -2 013485478078824e-5 + $ d17", "$ d18 = $ d58 * d99", "d100 = 1 280502823881162e-4 + $ d18", "$ d19 = $ d58 * d100", "d101 = -2 1524167411495098e-4 + $ d19", "$ d20 = $ d58 * d101", "d102 = -0 0011651675918590652 + $ d20", "$ d21 = $ d58 * d102", "d103 = 0 0072189432466631 + $ d21", "$ d22 = $ d58 * d103", "d104 = -0 009621971527876973 + $ d22", "$ d23 = $ d58 * d104", "d105 = -0 04219773455554433 + $ d23", "$ d24 = $ d58 * d105", "d106 = 0 16653861138229148 + $ d24", "$ d25 = $ d58 * d106", "d107 = -0 04200263503409524 + $ d25", "$ d26 = $ d58 * d107", "d108 = -0 6558780715202539 + $ d26", "$ d27 = $ d58 * d108", "d109 = 0 5772156649015329 + $ d27", "$ b4 = d0 cmpl 0 5", "if $ b4 < = 0 goto label8", "$ d30 = $ d58 d0", "$ d28 = d109 - 0 5", "$ d29 = $ d28 - 0 5", "d83 = $ d30 * $ d29", "goto label9", "if $ b4 < = 0 goto label8", "label d83 = d0 * d109", "if $ b2 > 0 goto label3", "label $ d2 = d0 - 0 5", "$ d58 = $ d2 - 0 5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [110], [111], [112], [113], [114], [115], [116], [117], [118], [119], [120], [121], [122], [123], [124], [125], [126], [127], [128], [129], [130], [131], [132], [133], [134], [135], [136], [137], [138], [139], [], [141], [142], [143], [144], []]}
{"nodes": ["r0 = @ this", "d1 = #na n", "r1 = org apache common math3 stat descriptive descriptive statistic r0", "$ l0 = r1 get n", "$ b1 = $ l0 cmp 0l", "if $ b1 < = 0 goto label2", "r2 = org apache common math3 stat descriptive descriptive statistic r0", "$ l2 = r2 get n", "$ b3 = $ l2 cmp 1l", "if $ b3 < = 0 goto label1", "r3 = org apache common math3 stat descriptive descriptive statistic r0", "$ d0 = r3 get variance", "d1 = org apache common math3 util fast math sqrt $ d0", "goto label2", "label return d1", "if $ b3 < = 0 goto label1", "label d1 = 0 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 stat descriptive descriptive statistic r0", "$ r1 = r2 skewness impl", "r3 = org apache common math3 stat descriptive descriptive statistic r0", "$ d0 = r3 apply $ r1", "return $ d0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 stat descriptive descriptive statistic r0", "$ r1 = r2 e d a", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 stat descriptive descriptive statistic r0", "$ i0 = r1 window size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common math3 stat descriptive descriptive statistic r0", "r2 kurtosis impl = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common math3 stat descriptive descriptive statistic r0", "r2 max impl = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "r3 = org apache common math3 stat descriptive moment semi variance r0", "$ r2 = r3 variance direction", "r4 = org apache common math3 stat descriptive moment semi variance r0", "$ z0 = r4 bias correct", "$ i0 = lengthof r1", "r5 = org apache common math3 stat descriptive moment semi variance r0", "$ d1 = r5 evaluate r1 d0 $ r2 $ z0 0 $ i0", "return $ d1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "i1 = @ parameter3", "d3 = #na n", "r3 = org apache common math3 stat descriptive summary product r0", "$ z0 = r3 test r1 r2 i0 i1 1", "if $ z0 == 0 goto label2", "d3 = 1 0", "i3 = i0", "label $ i2 = i0 + i1", "if i3 > = $ i2 goto label2", "$ d1 = r1 [ i3 ]", "$ d0 = r2 [ i3 ]", "$ d2 = org apache common math3 util fast math pow $ d1 $ d0", "d3 = d3 * $ d2", "i3 = i3 + 1", "goto label1", "if i3 > = $ i2 goto label2", "label return d3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ i0 = lengthof r1", "r3 = org apache common math3 stat descriptive summary sum r0", "$ d0 = r3 evaluate r1 r2 0 $ i0", "return $ d0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common math3 stat frequency r0", "$ r1 = r4 freq table", "$ r2 = $ r1 key set", "$ r3 = $ r2 iterator", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "$ r1 = java lang character value of c0", "r2 = org apache common math3 stat frequency r0", "$ d0 = r2 get pct $ r1", "return $ d0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org apache common math3 stat inference kolmogorov smirnov test r0", "$ l0 = specialinvoke r3 integral kolmogorov smirnov statistic r1 r2", "$ d1 = double $ l0", "$ i1 = lengthof r1", "$ l4 = long $ i1", "$ i2 = lengthof r2", "$ l3 = long $ i2", "$ l5 = $ l4 * $ l3", "$ d0 = double $ l5", "$ d2 = $ d1 $ d0", "return $ d2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org apache common math3 stat inference kolmogorov smirnov test r0", "$ l0 = specialinvoke r3 integral kolmogorov smirnov statistic r1 r2", "$ d1 = double $ l0", "$ i1 = lengthof r1", "$ l4 = long $ i1", "$ i2 = lengthof r2", "$ l3 = long $ i2", "$ l5 = $ l4 * $ l3", "$ d0 = double $ l5", "$ d2 = $ d1 $ d0", "return $ d2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r11 = org apache common math3 stat regression o l s multiple linear regression r0", "$ r3 = r11 get x", "i0 = $ r3 get column dimension", "r12 = org apache common math3 stat regression o l s multiple linear regression r0", "$ r4 = r12 qr", "$ r5 = $ r4 get r", "$ i2 = i0 - 1", "$ i1 = i0 - 1", "r1 = $ r5 get sub matrix 0 $ i2 0 $ i1", "r10 = new org apache common math3 linear l u decomposition", "specialinvoke r10 < init > r1", "$ r7 = r10 get solver", "r2 = $ r7 get inverse", "$ r8 = r2 transpose", "$ r9 = r2 multiply $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 stat regression simple regression r0", "$ l0 = r1 n", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 stat regression simple regression r0", "$ z0 = r1 have intercept", "if $ z0 ! = 0 goto label1", "return #na n", "if $ z0 ! = 0 goto label1", "label r2 = org apache common math3 stat regression simple regression r0", "$ d0 = r2 get mean square error", "r3 = org apache common math3 stat regression simple regression r0", "$ l0 = r3 n", "$ d1 = double $ l0", "$ d7 = 1 0 $ d1", "r4 = org apache common math3 stat regression simple regression r0", "$ d3 = r4 xbar", "r5 = org apache common math3 stat regression simple regression r0", "$ d2 = r5 xbar", "$ d5 = $ d3 * $ d2", "r6 = org apache common math3 stat regression simple regression r0", "$ d4 = r6 sum x x", "$ d6 = $ d5 $ d4", "$ d8 = $ d7 + $ d6", "$ d9 = $ d0 * $ d8", "$ d10 = org apache common math3 util fast math sqrt $ d9", "return $ d10"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ r1 = org apache common math3 stat stat utils variance", "$ d0 = $ r1 evaluate r0 i0 i1", "return $ d0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ r1 = org apache common math3 stat stat utils max", "$ d0 = $ r1 evaluate r0 i0 i1", "return $ d0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "$ r0 = new org apache common math3 util combination", "specialinvoke $ r0 < init > i0 i1", "$ r1 = $ r0 iterator", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common math3 util iteration manager r0", "$ r2 = r3 listener", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "r2 = new org apache common math3 exception null argument exception", "specialinvoke r2 < init >", "r3 = java lang throwable r2", "throw r3", "if r0 ! = null goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 util multidimensional counter r0", "$ r1 = r2 iterator", "r3 = java util iterator $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = #na n", "$ z0 = r1 instanceof java lang number", "if $ z0 ! = 0 goto label1", "$ z1 = r1 instanceof java lang string", "if $ z1 == 0 goto label2", "label r5 = org apache common math3 util transformer map r0", "$ r3 = r5 default transformer", "d0 = $ r3 transform r1", "goto label3", "label return d0", "if $ z1 == 0 goto label2", "label $ r4 = r1 get class", "r6 = org apache common math3 util transformer map r0", "r2 = r6 get transformer $ r4", "if r2 == null goto label3", "d0 = r2 transform r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r5 = @ parameter0", "z0 = @ parameter1", "r0 = @ parameter2", "$ z1 = org apache common lang3 string utils be empty r5", "if $ z1 == 0 goto label01", "return r5", "if $ z1 == 0 goto label01", "label r6 = r5 to lower case", "i0 = r6 length", "r1 = newarray int [ i0 ]", "i8 = 0", "r2 = org apache common text case utils generate delimiter set r0", "z3 = 0", "if z0 == 0 goto label02", "z3 = 1", "label i9 = 0", "label if i9 > = i0 goto label09", "i1 = r6 code point at i9", "$ r4 = java lang integer value of i1", "$ z2 = r2 contain $ r4", "if $ z2 == 0 goto label05", "label if z3 ! = 0 goto label06", "if i8 ! = 0 goto label07", "if z0 == 0 goto label07", "label i2 = java lang character to title case i1", "$ i3 = i8", "i8 = i8 + 1", "r1 [ $ i3 ] = i2", "$ i4 = java lang character char count i2", "i9 = i9 + $ i4", "if z0 == 0 goto label07", "label $ i5 = i8", "label if i9 > = i0 goto label09", "label if i8 == 0 goto label10", "$ r3 = new java lang string", "specialinvoke $ r3 < init > r1 0 i8", "return $ r3", "label if i8 == 0 goto label10", "label return r6"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache common text matcher string matcher factory split_matcher", "r2 = org apache common text matcher string matcher $ r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = r1 length", "if $ i0 ! = 0 goto label2", "label $ r2 = org apache common text matcher string matcher factory none_matcher", "r5 = org apache common text matcher string matcher $ r2", "return r5", "if $ i0 ! = 0 goto label2", "label r4 = new org apache common text matcher abstract string matcher $ string matcher", "specialinvoke r4 < init > r1", "r6 = org apache common text matcher string matcher r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common text similarity edit distance from r0", "$ r1 = r2 leave", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ i0 = r1 length", "$ i1 = $ i0 + 1", "$ i2 = r2 length", "$ i3 = $ i2 + 1", "r3 = newmultiarray int [ $ i1 ] [ $ i3 ]", "i19 = 0", "label $ i4 = r1 length", "if i19 > = $ i4 goto label8", "i20 = 0", "label $ i5 = r2 length", "if i20 > = $ i5 goto label7", "if i19 ! = 0 goto label3", "$ r10 = r3 [ i19 ]", "$ r10 [ i20 ] = 0", "label if i20 ! = 0 goto label4", "$ r9 = r3 [ i19 ]", "$ r9 [ i20 ] = 0", "label $ c6 = r1 char at i19", "$ c7 = r2 char at i20", "if $ c6 ! = $ c7 goto label5", "$ i15 = i19 + 1", "$ r8 = r3 [ $ i15 ]", "$ i18 = i20 + 1", "$ r7 = r3 [ i19 ]", "$ i16 = $ r7 [ i20 ]", "$ i17 = $ i16 + 1", "$ r8 [ $ i18 ] = $ i17", "goto label6", "label i20 = i20 + 1", "goto label2", "if $ c6 ! = $ c7 goto label5", "label $ i8 = i19 + 1", "$ r6 = r3 [ $ i8 ]", "$ i13 = i20 + 1", "$ i9 = i19 + 1", "$ r4 = r3 [ $ i9 ]", "$ i12 = $ r4 [ i20 ]", "$ r5 = r3 [ i19 ]", "$ i10 = i20 + 1", "$ i11 = $ r5 [ $ i10 ]", "$ i14 = java lang math max $ i12 $ i11", "$ r6 [ $ i13 ] = $ i14", "if i20 > = $ i5 goto label7", "label i19 = i19 + 1", "goto label1", "if i19 > = $ i4 goto label8", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [], [49], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label r5 = new org apache common text text string builder", "$ i0 = lengthof r1", "specialinvoke r5 < init > $ i0", "r2 = r5 append r1", "$ i1 = lengthof r1", "r6 = org apache common text string substitutor r0", "r6 substitute r2 0 $ i1", "$ r4 = r2 to string", "return $ r4"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "c1 = @ parameter1", "r3 = org apache common text text string builder r0", "$ i2 = r3 size", "if $ i2 < = 0 goto label1", "r4 = org apache common text text string builder r0", "r4 append c0", "goto label2", "label r6 = org apache common text text string builder r0", "return r6", "if $ i2 < = 0 goto label1", "label r5 = org apache common text text string builder r0", "r5 append c1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "c2 = @ parameter2", "$ r1 = java lang string value of i0", "r3 = org apache common text text string builder r0", "$ r2 = r3 append fix width pad leave $ r1 i1 c2", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i20 = @ parameter0", "z0 = @ parameter1", "r16 = org apache common text text string builder r0", "r16 validate index i20", "if z0 == 0 goto label1", "r17 = org apache common text text string builder r0", "$ i11 = r17 size", "$ i10 = org apache common text text string builder true_string_size", "$ i12 = $ i11 + $ i10", "r18 = org apache common text text string builder r0", "r18 ensure capacity $ i12", "r19 = org apache common text text string builder r0", "$ r11 = r19 buffer", "r20 = org apache common text text string builder r0", "$ r10 = r20 buffer", "$ i13 = org apache common text text string builder true_string_size", "$ i16 = i20 + $ i13", "r21 = org apache common text text string builder r0", "$ i14 = r21 size", "$ i15 = $ i14 - i20", "java lang system arraycopy $ r11 i20 $ r10 $ i16 $ i15", "r22 = org apache common text text string builder r0", "$ r12 = r22 buffer", "i21 = i20 + 1", "$ r12 [ i20 ] = 116", "r23 = org apache common text text string builder r0", "$ r13 = r23 buffer", "i22 = i21 + 1", "$ r13 [ i21 ] = 114", "r24 = org apache common text text string builder r0", "$ r14 = r24 buffer", "i23 = i22 + 1", "$ r14 [ i22 ] = 117", "r25 = org apache common text text string builder r0", "$ r15 = r25 buffer", "$ r15 [ i23 ] = 101", "r26 = org apache common text text string builder r0", "$ i18 = r26 size", "$ i17 = org apache common text text string builder true_string_size", "$ i19 = $ i18 + $ i17", "r27 = org apache common text text string builder r0", "r27 size = $ i19", "goto label2", "label r40 = org apache common text text string builder r0", "return r40", "if z0 == 0 goto label1", "label r28 = org apache common text text string builder r0", "$ i1 = r28 size", "$ i0 = org apache common text text string builder false_string_size", "$ i2 = $ i1 + $ i0", "r29 = org apache common text text string builder r0", "r29 ensure capacity $ i2", "r30 = org apache common text text string builder r0", "$ r3 = r30 buffer", "r31 = org apache common text text string builder r0", "$ r2 = r31 buffer", "$ i3 = org apache common text text string builder false_string_size", "$ i6 = i20 + $ i3", "r32 = org apache common text text string builder r0", "$ i4 = r32 size", "$ i5 = $ i4 - i20", "java lang system arraycopy $ r3 i20 $ r2 $ i6 $ i5", "r33 = org apache common text text string builder r0", "$ r4 = r33 buffer", "i24 = i20 + 1", "$ r4 [ i20 ] = 102", "r34 = org apache common text text string builder r0", "$ r5 = r34 buffer", "i25 = i24 + 1", "$ r5 [ i24 ] = 97", "r35 = org apache common text text string builder r0", "$ r6 = r35 buffer", "i26 = i25 + 1", "$ r6 [ i25 ] = 108", "r36 = org apache common text text string builder r0", "$ r7 = r36 buffer", "i27 = i26 + 1", "$ r7 [ i26 ] = 115", "r37 = org apache common text text string builder r0", "$ r8 = r37 buffer", "$ r8 [ i27 ] = 101", "r38 = org apache common text text string builder r0", "$ i8 = r38 size", "$ i7 = org apache common text text string builder false_string_size", "$ i9 = $ i8 + $ i7", "r39 = org apache common text text string builder r0", "r39 size = $ i9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], [], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label $ r6 = java lang string value of 58", "r2 = r1 split $ r6", "i0 = lengthof r2", "if i0 > = 2 goto label2", "$ r11 = newarray java lang object [ 1 ]", "$ r11 [ 0 ] = r1", "$ r12 = org apache common text lookup illegal argument exception format \\ `` bad file key format [ % s ] expect format be charset name document path \\", "throw $ r12", "if i0 > = 2 goto label2", "label r3 = r2 [ 0 ]", "r4 = org apache common lang3 string utils substring after r1 58", "label $ r7 = new java lang string", "$ r8 = newarray java lang string [ 0 ]", "$ r9 = java nio file path get r4 $ r8", "$ r10 = java nio file file read all byte $ r9", "specialinvoke $ r7 < init > $ r10 r3", "label return $ r7"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["org apache common text lookup constant string lookup clear", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common text string substitutor r0", "$ z0 = r1 enable undefined variable exception", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common text text string builder r0", "$ i0 = r1 reallocation", "if $ i0 < = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r2 = @ parameter0", "r0 = @ parameter1", "$ z0 = org apache common lang3 string utils be empty r2", "if $ z0 == 0 goto label1", "return r2", "if $ z0 == 0 goto label1", "label r3 = r2 to lower case", "$ r1 = org apache common text word utils capitalize r3 r0", "return $ r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache common validator email validator user_pattern", "$ r3 = $ r2 matcher r1", "$ z0 = $ r3 match", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = r1", "r3 = java util regex pattern compile \\ `` ^ ? [ ^\\\\\\ `` \\\\\\\\ ] |\\\\\\\\ * ? \\\\\\ `` ? [ ^\\\\\\ `` \\\\\\\\ ] |\\\\\\\\ * \\\\\\ `` ? [ ^\\\\\\ `` \\\\\\\\ ] |i111\\\\\\\\ * * \\\\ ? [ ^ \\\\\\\\ ] |\\\\\\\\ * \\\\ \\ ``", "label $ r4 = r3 matcher r5", "$ z0 = $ r4 match", "if $ z0 == 0 goto label2", "r5 = r5 replace first \\ `` ^ ? [ ^\\\\\\ `` \\\\\\\\ ] |\\\\\\\\ * ? \\\\\\ `` ? [ ^\\\\\\ `` \\\\\\\\ ] |\\\\\\\\ * \\\\\\ `` ? [ ^\\\\\\ `` \\\\\\\\ ] |i111\\\\\\\\ * * \\\\ ? [ ^ \\\\\\\\ ] |\\\\\\\\ * \\\\ \\", "goto label1", "if $ z0 == 0 goto label2", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common validator field r0", "r2 indexed property = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common validator field r0", "$ r1 = r2 h msg", "r3 = java util map $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r2 = new java lang float", "specialinvoke $ r2 < init > r0", "label return $ r2"], "adj": [[1], [2], [], [4], [5], [6], []]}
{"nodes": ["b0 = @ parameter0", "b1 = @ parameter1", "b2 = @ parameter2", "if b0 < b1 goto label1", "if b0 > b2 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if b0 > b2 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i1 = r0 length", "if $ i1 > i0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 > i0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "i2 = org apache common validator generic validator adjust for line end r0 i1", "$ i3 = r0 length", "$ i4 = $ i3 + i2", "if $ i4 > i0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i4 > i0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i1 = r0 length", "if $ i1 < i0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 < i0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = java lang string null", "$ r2 = java util locale null", "r4 = org apache common validator routine abstract format validator r0", "$ z0 = r4 be valid r1 $ r3 $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 instanceof java lang long", "if $ z0 == 0 goto label1", "$ r6 = java lang long r1", "$ l1 = $ r6 long value", "r7 = java math big decimal value of $ l1", "goto label2", "label $ r5 = java text number format r2", "r9 = org apache common validator routine big decimal validator r0", "i0 = r9 determine scale $ r5", "if i0 < 0 goto label3", "r7 = r7 set scale i0 1", "label return r7", "if $ z0 == 0 goto label1", "label r8 = new java math big decimal", "$ r4 = r1 to string", "specialinvoke r8 < init > $ r4", "r7 = r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java util locale null", "r6 = org apache common validator routine byte validator r0", "$ r4 = r6 parse r1 r2 $ r3", "$ r5 = java lang byte $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = java lang string null", "$ r3 = java util locale null", "$ r2 = java util time zone null", "r7 = org apache common validator routine calendar validator r0", "$ r5 = r7 parse r1 $ r4 $ r3 $ r2", "$ r6 = java util calendar $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "i2 = @ parameter2", "$ r1 = org apache common validator routine checkdigit e a n13 check digit position_weight", "$ i4 = i2 % 2", "i3 = $ r1 [ $ i4 ]", "$ i5 = i0 * i3", "return $ i5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r14 = new java lang string buffer", "$ i1 = r1 length", "$ i2 = $ i1 * 2", "specialinvoke r14 < init > $ i2", "i7 = 0", "label $ i3 = r1 length", "if i7 > = $ i3 goto label4", "$ c5 = r1 char at i7", "i0 = java lang character get numeric value $ c5", "if i0 < 0 goto label2", "if i0 < = 35 goto label3", "label r16 = new org apache common validator routine checkdigit check digit exception", "r15 = new java lang string buffer", "specialinvoke r15 < init >", "$ r7 = r15 append \\ `` invalid character [ \\ ``", "$ i6 = i7 + 1", "$ r8 = $ r7 append $ i6", "$ r9 = $ r8 append \\ `` ] = \\'\\ ``", "$ r10 = $ r9 append i0", "$ r11 = $ r10 append \\ `` \\'\\ ``", "$ r12 = $ r11 to string", "specialinvoke r16 < init > $ r12", "r17 = java lang throwable r16", "throw r17", "if i0 < = 35 goto label3", "label r14 append i0", "i7 = i7 + 1", "goto label1", "if i7 > = $ i3 goto label4", "label $ r4 = r14 to string", "$ i4 = specialinvoke r0 calculate modulus $ r4 z0", "return $ i4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [], [32], [33], [34], []]}
{"nodes": ["i0 = @ parameter0", "i2 = 0", "i3 = i0", "label if i3 < = 0 goto label2", "$ i1 = i3 % 10", "i2 = i2 + $ i1", "i3 = i3 10", "goto label1", "label if i3 < = 0 goto label2", "label return i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common validator routine code validator r0", "$ i0 = r1 min length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = java util time zone null", "r7 = org apache common validator routine date validator r0", "$ r5 = r7 parse r1 r2 r3 $ r4", "$ r6 = java util date $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = java lang string null", "$ r2 = java util locale null", "r6 = org apache common validator routine double validator r0", "$ r4 = r6 parse r1 $ r3 $ r2", "$ r5 = java lang double $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java lang number r1", "d0 = $ r3 double value", "$ b0 = d0 cmpl 0 0", "if $ b0 < = 0 goto label2", "$ b4 = d0 cmpg 1 401298464324817e-45", "if $ b4 > = 0 goto label1", "return null", "if $ b4 > = 0 goto label1", "label $ b5 = d0 cmpl 3 4028234663852886e38", "if $ b5 < = 0 goto label4", "label $ r4 = new java lang float", "$ f0 = float d0", "specialinvoke $ r4 < init > $ f0", "return $ r4", "if $ b0 < = 0 goto label2", "label $ b1 = d0 cmpg 0 0", "if $ b1 > = 0 goto label4", "d1 = d0 * -1 0", "$ b2 = d1 cmpg 1 401298464324817e-45", "if $ b2 > = 0 goto label3", "label $ b3 = d1 cmpl 3 4028234663852886e38", "if $ b3 < = 0 goto label4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java util locale null", "r6 = org apache common validator routine big integer validator r0", "$ r4 = r6 parse r1 r2 $ r3", "$ r5 = java math big integer $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = java lang string null", "$ r2 = java util locale null", "r6 = org apache common validator routine long validator r0", "$ r4 = r6 parse r1 $ r3 $ r2", "$ r5 = java lang long $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = org apache common validator routine long validator r0", "$ r4 = r6 parse r1 r2 r3", "$ r5 = java lang long $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = java util time zone null", "r7 = org apache common validator routine time validator r0", "$ r5 = r7 parse r1 r2 r3 $ r4", "$ r6 = java util calendar $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label $ r2 = org apache common validator routine url validator scheme_pattern", "$ r3 = $ r2 matcher r1", "$ z0 = $ r3 match", "if $ z0 ! = 0 goto label2", "label r5 = org apache common validator routine url validator r0", "$ z1 = specialinvoke r5 be off 1l", "if $ z1 == 0 goto label3", "r6 = org apache common validator routine url validator r0", "$ r4 = r6 allow scheme", "$ z2 = $ r4 contain r1", "if $ z2 ! = 0 goto label3", "label return 1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label $ r2 = org apache common validator routine url validator path_pattern", "$ r3 = $ r2 matcher r1", "$ z0 = $ r3 match", "if $ z0 ! = 0 goto label2", "label r4 = org apache common validator routine url validator r0", "i0 = r4 count token \\ `` \\", "r5 = org apache common validator routine url validator r0", "$ z1 = specialinvoke r5 be off 2l", "if $ z1 == 0 goto label3", "if i0 < = 0 goto label3", "label r6 = org apache common validator routine url validator r0", "i1 = r6 count token \\ `` \\", "r7 = org apache common validator routine url validator r0", "i2 = r7 count token \\ `` \\", "if i2 < = 0 goto label4", "$ i3 = i1 - i0", "$ i4 = $ i3 - 1", "if $ i4 > i2 goto label4", "label return 1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common validator util flag r0", "r1 flag = 9223372036854775807l", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r13 = @ parameter0", "r0 = @ parameter1", "r1 = @ parameter2", "if r13 == null goto label1", "if r0 == null goto label1", "if r1 ! = null goto label2", "label return r13", "if r1 ! = null goto label2", "label i0 = r13 index of r0", "if i0 > = 0 goto label3", "return r13", "if i0 > = 0 goto label3", "label i1 = r13 length", "$ i4 = r0 length", "i3 = i0 + $ i4", "$ i5 = r0 length", "if i1 ! = $ i5 goto label4", "r14 = r1", "goto label6", "label return r14", "if i1 ! = $ i5 goto label4", "label if i3 ! = i1 goto label5", "$ r9 = new java lang string buffer", "specialinvoke $ r9 < init >", "$ r10 = r13 substring 0 i0", "$ r11 = $ r9 append $ r10", "$ r12 = $ r11 append r1", "r14 = $ r12 to string", "label if i3 ! = i1 goto label5", "label $ r2 = new java lang string buffer", "specialinvoke $ r2 < init >", "$ r3 = r13 substring 0 i0", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append r1", "$ r6 = r13 substring i3", "$ r7 = org apache common validator util validator utils replace $ r6 r0 r1", "$ r8 = $ r5 append $ r7", "r14 = $ r8 to string"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common validator validator action r0", "$ r1 = r3 dependency list", "$ r2 = java util collection unmodifiable list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r14 = org apache common validator validator resource r0", "$ r3 = specialinvoke r14 get log", "$ z0 = $ r3 be debug enabled", "if $ z0 == 0 goto label1", "r15 = org apache common validator validator resource r0", "$ r6 = specialinvoke r15 get log", "r13 = new java lang string buffer", "specialinvoke r13 < init >", "$ r8 = r13 append \\ `` add global constant \\ ``", "$ r9 = $ r8 append r1", "$ r10 = $ r9 append \\", "$ r11 = $ r10 append r2", "$ r12 = $ r11 to string", "$ r6 debug $ r12", "label r16 = org apache common validator validator resource r0", "$ r4 = r16 h constant", "$ r4 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common validator validator result r0", "$ r1 = r5 h action", "$ r2 = java util collection unmodifiable map $ r1", "$ r3 = $ r2 key set", "$ r4 = $ r3 iterator", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i6 = 0", "i7 = 0", "i8 = 0", "i9 = 0", "label $ i1 = r0 length", "if i9 > = $ i1 goto label5", "c0 = r0 char at i9", "if c0 ! = 13 goto label3", "$ i2 = i9 + 1", "$ i3 = r0 length", "if $ i2 > = $ i3 goto label2", "$ i4 = i9 + 1", "$ c5 = r0 char at $ i4", "if $ c5 ! = 10 goto label2", "i8 = i8 + 1", "i9 = i9 + 1", "goto label4", "label i9 = i9 + 1", "goto label1", "if $ c5 ! = 10 goto label2", "label i7 = i7 + 1", "if c0 ! = 13 goto label3", "label if c0 ! = 10 goto label4", "i6 = i6 + 1", "if i9 > = $ i1 goto label5", "label if i6 < = i7 goto label6", "if i6 < = i8 goto label6", "$ r6 = eu solven cleanthat formatter line end lf", "$ r7 = java util optional of $ r6", "return $ r7", "if i6 < = i8 goto label6", "label if i8 < = i6 goto label7", "if i8 < = i7 goto label7", "$ r4 = eu solven cleanthat formatter line end crlf", "$ r5 = java util optional of $ r4", "return $ r5", "if i8 < = i7 goto label7", "label if i7 < = i6 goto label8", "if i7 < = i8 goto label8", "$ r2 = eu solven cleanthat formatter line end cr", "$ r3 = java util optional of $ r2", "return $ r3", "if i7 < = i8 goto label8", "label $ r1 = java util optional empty", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [], [38], [39], [40], [41], [42], [], [44], [45], []]}
{"nodes": ["r0 = @ this", "$ r1 = org javacc parser option string value \\ `` output_file\\ ``", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r9 = org javacc jjtree j j t j j tree parser state r0", "$ i0 = r9 sp", "$ i1 = $ i0 - 1", "r10 = org javacc jjtree j j t j j tree parser state r0", "r10 sp = $ i1", "r11 = org javacc jjtree j j t j j tree parser state r0", "$ i2 = r11 mk", "if $ i1 > = $ i2 goto label1", "r12 = org javacc jjtree j j t j j tree parser state r0", "$ r6 = r12 mark", "r13 = org javacc jjtree j j t j j tree parser state r0", "$ r5 = r13 mark", "$ i5 = $ r5 size", "$ i6 = $ i5 - 1", "$ r7 = $ r6 remove $ i6", "$ r8 = java lang integer $ r7", "$ i7 = $ r8 int value", "r14 = org javacc jjtree j j t j j tree parser state r0", "r14 mk = $ i7", "label r15 = org javacc jjtree j j t j j tree parser state r0", "$ r2 = r15 node", "r16 = org javacc jjtree j j t j j tree parser state r0", "$ r1 = r16 node", "$ i3 = $ r1 size", "$ i4 = $ i3 - 1", "$ r3 = $ r2 remove $ i4", "$ r4 = org javacc jjtree node $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r5 = org javacc jjtree j j t j j tree parser state r0", "$ r2 = r5 node", "r6 = org javacc jjtree j j t j j tree parser state r0", "$ r1 = r6 node", "$ i0 = $ r1 size", "$ i1 = $ i0 - 1", "$ r3 = $ r2 get $ i1", "$ r4 = org javacc jjtree node $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org javacc parser context r0", "$ r1 = r2 error", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org javacc parser expansion r0", "$ i0 = r1 get line", "r2 = org javacc parser expansion r0", "$ i1 = r2 get column", "$ i2 = $ i0 + $ i1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ z0 = org javacc parser option boolean value \\ `` build_parser\\ ``", "return $ z0"], "adj": [[1], []]}
{"nodes": ["$ z0 = org javacc parser option boolean value \\ `` common_token_action\\ ``", "return $ z0"], "adj": [[1], []]}
{"nodes": ["$ i0 = org javacc parser option int value \\ `` depth_limit\\ ``", "return $ i0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "$ b0 = d0 cmpl d1", "if $ b0 < = 0 goto label1", "r2 = new java lang illegal argument exception", "specialinvoke r2 < init > \\ `` t_min < = t_max require \\ ``", "throw r2", "if $ b0 < = 0 goto label1", "label r3 = com graphbuilder curve bezier curve r0", "r3 t_min = d0", "r4 = com graphbuilder curve bezier curve r0", "r4 t_max = d1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = com graphbuilder curve bezier curve r0", "$ d0 = r1 t_max", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com graphbuilder curve multi path r0", "$ r1 = r2 point", "$ i0 = lengthof $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "d3 = @ parameter3", "d4 = d0 + d2", "d5 = d1 + d3", "r13 = com graphbuilder curve shape multi path r0", "$ z0 = r13 contain d0 d1", "if $ z0 == 0 goto label01", "return 1", "if $ z0 == 0 goto label01", "label r14 = com graphbuilder curve shape multi path r0", "$ z1 = r14 contain d0 d5", "if $ z1 == 0 goto label02", "label r15 = com graphbuilder curve shape multi path r0", "$ z2 = r15 contain d4 d1", "if $ z2 == 0 goto label03", "label r16 = com graphbuilder curve shape multi path r0", "$ z3 = r16 contain d4 d5", "if $ z3 == 0 goto label04", "label r17 = com graphbuilder curve shape multi path r0", "i0 = r17 get num point", "if i0 ! = 0 goto label05", "return 0", "if i0 ! = 0 goto label05", "label r18 = com graphbuilder curve shape multi path r0", "r11 = r18 get 0", "r19 = com graphbuilder curve shape multi path r0", "$ i1 = r19 ai0", "d8 = r11 [ $ i1 ]", "r20 = com graphbuilder curve shape multi path r0", "$ i2 = r20 ai1", "d9 = r11 [ $ i2 ]", "i12 = 1", "label if i12 > = i0 goto label13", "r21 = com graphbuilder curve shape multi path r0", "r12 = r21 get i12", "r22 = com graphbuilder curve shape multi path r0", "$ i3 = r22 ai0", "d6 = r12 [ $ i3 ]", "r23 = com graphbuilder curve shape multi path r0", "$ i4 = r23 ai1", "d7 = r12 [ $ i4 ]", "r24 = com graphbuilder curve shape multi path r0", "$ r1 = r24 get type i12", "$ r2 = com graphbuilder curve multi path line_to", "if $ r1 ! = $ r2 goto label12", "$ r3 = com graphbuilder geom geom get seg seg intersection d6 d7 d8 d9 d0 d1 d4 d1 null", "$ r4 = com graphbuilder geom geom intersect", "if $ r3 ! = $ r4 goto label07", "label $ r5 = com graphbuilder geom geom get seg seg intersection d6 d7 d8 d9 d0 d1 d0 d5 null", "$ r6 = com graphbuilder geom geom intersect", "if $ r5 ! = $ r6 goto label08", "label $ r7 = com graphbuilder geom geom get seg seg intersection d6 d7 d8 d9 d0 d5 d4 d5 null", "$ r8 = com graphbuilder geom geom intersect", "if $ r7 ! = $ r8 goto label09", "label $ r9 = com graphbuilder geom geom get seg seg intersection d6 d7 d8 d9 d4 d1 d4 d5 null", "$ r10 = com graphbuilder geom geom intersect", "if $ r9 ! = $ r10 goto label10", "label $ b5 = d6 cmpl d0", "if $ b5 < 0 goto label11", "$ b9 = d7 cmpl d1", "if $ b9 < 0 goto label11", "$ b10 = d6 cmpg d4", "if $ b10 > 0 goto label11", "$ b11 = d7 cmpg d5", "if $ b11 > 0 goto label11", "label $ b13 = d8 cmpl d0", "if $ b13 < 0 goto label12", "$ b6 = d9 cmpl d1", "if $ b6 < 0 goto label12", "$ b7 = d8 cmpg d4", "if $ b7 > 0 goto label12", "$ b8 = d9 cmpg d5", "if $ b8 > 0 goto label12", "label d8 = d6", "d9 = d7", "i12 = i12 + 1", "goto label06", "label if i12 > = i0 goto label13", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [], [81], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = com graphbuilder curve value vector r0", "$ i0 = r1 size", "r2 = com graphbuilder curve value vector r0", "r2 insert d0 $ i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "d3 = @ parameter3", "d4 = @ parameter4", "d5 = @ parameter5", "r0 = @ parameter6", "d6 = d2 - d0", "d7 = d3 - d1", "d25 = 0 0", "$ d14 = d6 * d6", "$ d13 = d7 * d7", "d8 = $ d14 + $ d13", "$ b0 = d8 cmpl 0 0", "if $ b0 == 0 goto label1", "$ d20 = d4 - d0", "$ d23 = d6 * $ d20", "$ d21 = d5 - d1", "$ d22 = d7 * $ d21", "$ d24 = $ d23 + $ d22", "d25 = $ d24 d8", "label $ d15 = d25 * d6", "d9 = d0 + $ d15", "$ d16 = d25 * d7", "d10 = d1 + $ d16", "if r0 == null goto label2", "r0 [ 0 ] = d9", "r0 [ 1 ] = d10", "r0 [ 2 ] = d25", "label d11 = d4 - d9", "d12 = d5 - d10", "$ d18 = d11 * d11", "$ d17 = d12 * d12", "$ d19 = $ d18 + $ d17", "return $ d19"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "d3 = @ parameter3", "d4 = @ parameter4", "d5 = @ parameter5", "r0 = @ parameter6", "d6 = d2 - d0", "d7 = d3 - d1", "d23 = 0 0", "$ d14 = d6 * d6", "$ d13 = d7 * d7", "d8 = $ d14 + $ d13", "$ b0 = d8 cmpl 0 0", "if $ b0 == 0 goto label1", "$ d18 = d4 - d0", "$ d21 = d6 * $ d18", "$ d19 = d5 - d1", "$ d20 = d7 * $ d19", "$ d22 = $ d21 + $ d20", "d23 = $ d22 d8", "label $ b1 = d23 cmpg 0 0", "if $ b1 > = 0 goto label2", "label $ b2 = d23 cmpl 1 0", "if $ b2 < = 0 goto label3", "d23 = 1 0", "label $ d24 = d23 * d6", "d9 = d0 + $ d24", "$ d25 = d23 * d7", "d10 = d1 + $ d25", "if r0 == null goto label4", "r0 [ 0 ] = d9", "r0 [ 1 ] = d10", "r0 [ 2 ] = d23", "label d11 = d4 - d9", "d12 = d5 - d10", "$ d16 = d11 * d11", "$ d15 = d12 * d12", "$ d17 = $ d16 + $ d15", "return $ d17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "d3 = @ parameter3", "d4 = @ parameter4", "d5 = @ parameter5", "d6 = @ parameter6", "d7 = @ parameter7", "r0 = @ parameter8", "d8 = d2 - d0", "d9 = d3 - d1", "d10 = d6 - d4", "d11 = d7 - d5", "$ d17 = d8 * d11", "$ d16 = d9 * d10", "d12 = $ d17 - $ d16", "$ b0 = d12 cmpl 0 0", "if $ b0 ! = 0 goto label1", "$ r2 = com graphbuilder geom geom parallel", "return $ r2", "if $ b0 ! = 0 goto label1", "label d13 = d4 - d0", "d14 = d5 - d1", "$ d19 = d13 * d9", "$ d18 = d14 * d8", "$ d20 = $ d19 - $ d18", "d15 = $ d20 d12", "$ b1 = d15 cmpg 0 0", "if $ b1 < 0 goto label2", "$ b2 = d15 cmpl 1 0", "if $ b2 < = 0 goto label3", "label return null", "if $ b2 < = 0 goto label3", "label if r0 == null goto label4", "$ d21 = d15 * d10", "$ d22 = d4 + $ d21", "r0 [ 0 ] = $ d22", "$ d23 = d15 * d11", "$ d24 = d5 + $ d23", "r0 [ 1 ] = $ d24", "r0 [ 2 ] = d15", "label $ r1 = com graphbuilder geom geom intersect", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r8 = new java lang string builder", "specialinvoke r8 < init >", "$ r2 = r8 append \\ `` \\ ``", "r9 = com graphbuilder math expression parse exception r0", "$ i0 = r9 index", "$ r3 = $ r2 append $ i0", "$ r4 = $ r3 append \\ `` \\ ``", "r10 = com graphbuilder math expression parse exception r0", "$ r5 = r10 descrip", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "$ d0 = r1 [ 0 ]", "i1 = int $ d0", "d2 = 1 0", "i2 = i1", "label if i2 < = 1 goto label2", "$ d1 = double i2", "d2 = d2 * $ d1", "i2 = i2 + -1", "goto label1", "label if i2 < = 1 goto label2", "label return d2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com graphbuilder math func node r0", "$ r2 = r3 bag", "$ i0 = $ r2 size", "r4 = com graphbuilder math func node r0", "r4 insert r1 $ i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["$ r1 = org apache deltaspike core api config config resolver config source", "$ r0 = class \\ `` lorg apache deltaspike core api config config resolver \\ ``", "$ r2 = $ r0 get class loader", "$ r1 remove $ r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache deltaspike core api exception control event exception to catch event r0", "$ r1 = r3 qualifier", "$ r2 = java util collection unmodifiable set $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r24 = org apache deltaspike core util bean bean builder r0", "$ z0 = r24 passivation capable", "if $ z0 ! = 0 goto label1", "r22 = new org apache deltaspike core util bean immutable bean", "r25 = org apache deltaspike core util bean bean builder r0", "$ r21 = r25 bean class", "r26 = org apache deltaspike core util bean bean builder r0", "$ r20 = r26 name", "r27 = org apache deltaspike core util bean bean builder r0", "$ r19 = r27 qualifier", "r28 = org apache deltaspike core util bean bean builder r0", "$ r18 = r28 scope", "r29 = org apache deltaspike core util bean bean builder r0", "$ r17 = r29 stereotype", "r30 = org apache deltaspike core util bean bean builder r0", "$ r16 = r30 type", "r31 = org apache deltaspike core util bean bean builder r0", "$ z4 = r31 alternative", "r32 = org apache deltaspike core util bean bean builder r0", "$ z3 = r32 nullable", "r33 = org apache deltaspike core util bean bean builder r0", "$ r15 = r33 injection point", "r34 = org apache deltaspike core util bean bean builder r0", "$ r14 = r34 to string", "r35 = org apache deltaspike core util bean bean builder r0", "$ r13 = r35 bean lifecycle", "specialinvoke r22 < init > $ r21 $ r20 $ r19 $ r18 $ r17 $ r16 $ z4 $ z3 $ r15 $ r14 $ r13", "r36 = javax enterprise inject spi bean r22", "return r36", "if $ z0 ! = 0 goto label1", "label r23 = new org apache deltaspike core util bean immutable passivation capable bean", "r37 = org apache deltaspike core util bean bean builder r0", "$ r11 = r37 bean class", "r38 = org apache deltaspike core util bean bean builder r0", "$ r10 = r38 name", "r39 = org apache deltaspike core util bean bean builder r0", "$ r9 = r39 qualifier", "r40 = org apache deltaspike core util bean bean builder r0", "$ r8 = r40 scope", "r41 = org apache deltaspike core util bean bean builder r0", "$ r7 = r41 stereotype", "r42 = org apache deltaspike core util bean bean builder r0", "$ r6 = r42 type", "r43 = org apache deltaspike core util bean bean builder r0", "$ z2 = r43 alternative", "r44 = org apache deltaspike core util bean bean builder r0", "$ z1 = r44 nullable", "r45 = org apache deltaspike core util bean bean builder r0", "$ r5 = r45 injection point", "r46 = org apache deltaspike core util bean bean builder r0", "$ r4 = r46 to string", "r47 = org apache deltaspike core util bean bean builder r0", "$ r3 = r47 bean lifecycle", "r48 = org apache deltaspike core util bean bean builder r0", "$ r2 = r48 id", "specialinvoke r23 < init > $ r11 $ r10 $ r9 $ r8 $ r7 $ r6 $ z2 $ z1 $ r5 $ r4 $ r3 $ r2", "r49 = javax enterprise inject spi bean r23", "return r49"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], []]}
{"nodes": ["r0 = @ this", "r2 = org apache deltaspike core util bean bean builder r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache deltaspike core util bean bean builder r0", "$ r2 = r3 type", "$ r2 add r1", "r4 = org apache deltaspike core util bean bean builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache deltaspike core util bean bean builder r0", "r2 bean class = r1", "r3 = org apache deltaspike core util bean bean builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 get modifier", "$ z0 = java lang reflect modifier be final $ i0", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org dom4j datatype datatype document factory r0", "$ r2 = r3 schema builder", "$ r2 build r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = new org dom4j tree q name cache", "r3 = org dom4j document factory r0", "specialinvoke r2 < init > r3", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org dom4j document helper create x path r1", "r2 sort r0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org dom4j dtd external entity decl r0", "$ r1 = r2 public i d", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org dom4j io dispatch handler r0", "r2 default handler = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org dom4j io d o m s a x content handler r0", "$ z0 = r1 ignore comment", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org dom4j io d o m s a x content handler r0", "r1 ignore comment = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org dom4j io output format r0", "r1 pad text = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r18 = org dom4j io d o m s a x content handler r0", "$ z0 = r18 strip whitespace text", "if $ z0 == 0 goto label5", "z2 = 1", "i2 = 0", "r19 = org dom4j io d o m s a x content handler r0", "$ r7 = r19 text buffer", "i0 = $ r7 length", "label if i2 > = i0 goto label3", "r20 = org dom4j io d o m s a x content handler r0", "$ r13 = r20 text buffer", "$ c1 = $ r13 char at i2", "$ z1 = java lang character be whitespace $ c1", "if $ z1 ! = 0 goto label2", "z2 = 0", "goto label3", "label if z2 ! = 0 goto label4", "r16 = new org dom4j dom d o m text", "r21 = org dom4j io d o m s a x content handler r0", "$ r9 = r21 text buffer", "$ r10 = $ r9 to string", "specialinvoke r16 < init > $ r10", "r22 = org dom4j io d o m s a x content handler r0", "$ r11 = r22 current element", "$ r12 = org dom4j dom d o m element $ r11", "r23 = org dom4j text r16", "$ r12 add r23", "label goto label6", "label r27 = org dom4j io d o m s a x content handler r0", "$ r6 = r27 text buffer", "$ r6 set length 0", "r28 = org dom4j io d o m s a x content handler r0", "r28 text in text buffer = 0", "return", "if $ z1 ! = 0 goto label2", "label i2 = i2 + 1", "goto label1", "if $ z0 == 0 goto label5", "label r17 = new org dom4j dom d o m text", "r24 = org dom4j io d o m s a x content handler r0", "$ r2 = r24 text buffer", "$ r3 = $ r2 to string", "specialinvoke r17 < init > $ r3", "r25 = org dom4j io d o m s a x content handler r0", "$ r4 = r25 current element", "$ r5 = org dom4j dom d o m element $ r4", "r26 = org dom4j text r17", "$ r5 add r26"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], []]}
{"nodes": ["r0 = @ this", "r2 = org dom4j io s a x reader r0", "$ r1 = r2 get dispatch handler", "$ r1 reset handler", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org dom4j io s a x reader r0", "$ r1 = r2 xml filter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label4", "r16 = org dom4j io s a x validator r0", "r2 = r16 get x m l reader", "r17 = org dom4j io s a x validator r0", "$ r4 = r17 error handler", "if $ r4 == null goto label1", "r18 = org dom4j io s a x validator r0", "$ r6 = r18 error handler", "r2 set error handler $ r6", "label r13 = new org dom4j io document input source", "specialinvoke r13 < init > r1", "r19 = org xml sax input source r13", "r2 parse r19", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org dom4j jaxb j a x b modifier r0", "$ r2 = specialinvoke r5 create x m l writer", "r4 = new java io file output stream", "specialinvoke r4 < init > r1", "$ r2 set output stream r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org dom4j namespace cache", "$ r3 = $ r2 get r0 r1", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org dom4j rule rule r0", "r2 mode = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org dom4j rule rule r0", "$ r1 = r2 pattern", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org dom4j rule stylesheet r0", "$ r3 = r4 mode name", "r5 = org dom4j rule stylesheet r0", "r5 apply templates r1 r2 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org dom4j rule stylesheet r0", "r2 mode name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org dom4j tree namespace stack r0", "$ r1 = r3 namespace stack", "$ i0 = $ r1 size", "$ i1 = $ i0 - 1", "r4 = org dom4j tree namespace stack r0", "$ r2 = r4 remove $ i1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org dom4j util user data element r0", "$ r1 = r2 data", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org dom4j x path exception r0", "$ r1 = r2 xpath", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r5 = org dom4j q name get r3 r1", "r8 = org dom4j xpp proxy xml start tag r0", "$ r6 = r8 element", "$ r6 add attribute r5 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r15 = org rnorth ducttape ratelimits rate limiter builder r0", "$ r1 = r15 invocation", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label org rnorth ducttape precondition check \\ `` a rate must be set\\", "r16 = org rnorth ducttape ratelimits rate limiter builder r0", "$ r2 = r16 per time unit", "if $ r2 == null goto label3", "$ z1 = 1", "goto label4", "label org rnorth ducttape precondition check \\ `` a rate must be set\\", "r17 = org rnorth ducttape ratelimits rate limiter builder r0", "$ r3 = r17 strategy", "if $ r3 == null goto label5", "$ z2 = 1", "goto label6", "label org rnorth ducttape precondition check \\ `` a rate limit strategy must be set\\", "r18 = org rnorth ducttape ratelimits rate limiter builder r0", "$ r5 = r18 strategy", "$ r4 = org rnorth ducttape ratelimits rate limiter builder $ rate limiter strategy constant_throughput", "if $ r5 ! = $ r4 goto label7", "r13 = new org rnorth ducttape ratelimits constant throughput rate limiter", "r19 = org rnorth ducttape ratelimits rate limiter builder r0", "$ r9 = r19 invocation", "r20 = org rnorth ducttape ratelimits rate limiter builder r0", "$ r8 = r20 per time unit", "specialinvoke r13 < init > $ r9 $ r8", "r21 = org rnorth ducttape ratelimits rate limiter r13", "return r21", "if $ r5 ! = $ r4 goto label7", "label r14 = new java lang illegal state exception", "specialinvoke r14 < init >", "throw r14", "if $ r3 == null goto label5", "label $ z2 = 0", "if $ r2 == null goto label3", "label $ z1 = 0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [], [36], [37], [38], [39], [40], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new nl jqno equalsverifier api single type equal verifier api", "r7 = nl jqno equalsverifier configure equal verifier r0", "$ r3 = r7 warning to suppress", "$ r4 = java util enum set copy of $ r3", "r8 = nl jqno equalsverifier configure equal verifier r0", "$ r5 = r8 factory cache", "r9 = nl jqno equalsverifier configure equal verifier r0", "$ z0 = r9 use get class", "specialinvoke r6 < init > r1 $ r4 $ r5 $ z0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = nl jqno equalsverifier internal prefabvalues prefab value r0", "$ r2 = specialinvoke r5 empty stack", "r6 = nl jqno equalsverifier internal prefabvalues prefab value r0", "r6 realize cache for r1 $ r2", "r7 = nl jqno equalsverifier internal prefabvalues prefab value r0", "$ r3 = r7 cache", "$ r4 = $ r3 get tuple r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r1 get type", "if r2 == null goto label1", "$ r10 = r2 get class", "$ z4 = r3 be assignable from $ r10", "if $ z4 ! = 0 goto label1", "$ r11 = r2 get class", "r15 = nl jqno equalsverifier internal prefabvalues prefab value r0", "$ z5 = specialinvoke r15 wrap r3 $ r11", "if $ z5 ! = 0 goto label1", "r14 = new nl jqno equalsverifier internal exception reflection exception", "specialinvoke r14 < init > \\ `` type tag do not match value \\ ``", "r16 = java lang throwable r14", "throw r16", "if $ z5 ! = 0 goto label1", "label r17 = nl jqno equalsverifier internal prefabvalues prefab value r0", "r4 = r17 give tuple r1", "$ r13 = r4 get red", "if $ r13 ! = null goto label2", "return null", "if $ r13 ! = null goto label2", "label $ z0 = r3 be array", "if $ z0 == 0 goto label3", "$ r8 = r4 get red", "r18 = nl jqno equalsverifier internal prefabvalues prefab value r0", "$ z3 = specialinvoke r18 array be deeply equal $ r8 r2", "if $ z3 == 0 goto label3", "$ r9 = r4 get blue", "return $ r9", "if $ z3 == 0 goto label3", "label $ z1 = r3 be array", "if $ z1 ! = 0 goto label4", "$ r6 = r4 get red", "$ z2 = $ r6 equal r2", "if $ z2 == 0 goto label4", "$ r7 = r4 get blue", "return $ r7", "if $ z2 == 0 goto label4", "label $ r5 = r4 get red", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = nl jqno equalsverifier internal reflection annotation annotation property r0", "$ r2 = r5 array value", "$ r3 = $ r2 get r1", "$ r4 = java util set $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = nl jqno equalsverifier internal reflection class accessor r0", "$ r1 = r5 type", "$ r2 = $ r1 get superclass", "r6 = nl jqno equalsverifier internal reflection class accessor r0", "$ r3 = r6 prefab value", "$ r4 = nl jqno equalsverifier internal reflection class accessor of $ r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = nl jqno equalsverifier internal reflection conditional instantiator r0", "$ r1 = r3 fully qualified class name", "$ r2 = nl jqno equalsverifier internal reflection util class for name $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r11 = nl jqno equalsverifier internal util formatter r0", "r8 = r11 message", "r12 = nl jqno equalsverifier internal util formatter r0", "r1 = r12 object", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label3", "r2 = r1 [ i1 ]", "r13 = nl jqno equalsverifier internal util formatter r0", "$ r5 = specialinvoke r13 stringify r2", "$ r6 = java util regex matcher quote replacement $ r5", "r3 = r8 replace first \\ `` % % \\", "$ z1 = r8 equal r3", "if $ z1 == 0 goto label2", "r9 = new java lang illegal state exception", "specialinvoke r9 < init > \\ `` too many parameters\\ ``", "throw r9", "if $ z1 == 0 goto label2", "label r8 = r3", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ z0 = r8 contain \\ `` % % \\ ``", "if $ z0 == 0 goto label4", "r10 = new java lang illegal state exception", "specialinvoke r10 < init > \\ `` not enough parameters\\ ``", "throw r10", "if $ z0 == 0 goto label4", "label return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [], [23], [24], [25], [26], [27], [], [29], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 size", "$ r1 = new java util hash set", "specialinvoke $ r1 < init > r0", "$ i1 = $ r1 size", "if $ i0 == $ i1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 == $ i1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data autodiscover alternate mailbox collection r0", "$ r1 = r2 entry", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = microsoft exchange webservices data autodiscover protocol connection r0", "r1 port = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data autodiscover request autodiscover request r0", "$ r1 = r2 get service", "$ r1 validate", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data autodiscover request autodiscover request r0", "$ r1 = r2 url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data autodiscover request get domain setting request r0", "r2 setting = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data autodiscover request get user setting request r0", "r2 smtp address = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data autodiscover response autodiscover response r0", "$ r1 = r2 error code", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data autodiscover response autodiscover response r0", "$ r1 = r2 error message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data autodiscover web client url r0", "r2 url = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core enumeration misc xml namespace r0", "$ r1 = r2 name space uri", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z7 = 1", "r2 set param null", "if r1 == null goto label8", "$ r4 = r1 get class", "$ z0 = $ r4 be enum", "if $ z0 == 0 goto label1", "$ r16 = microsoft exchange webservices data core ew utility serialize enum r1", "r2 set param $ r16", "goto label8", "label return z7", "if $ z0 == 0 goto label1", "label $ r5 = r1 get class", "$ z1 = $ r5 equal class \\ `` ljava lang boolean \\ ``", "if $ z1 == 0 goto label2", "$ r14 = java lang boolean r1", "$ r15 = microsoft exchange webservices data core ew utility bool to x s bool $ r14", "r2 set param $ r15", "if $ z1 == 0 goto label2", "label $ z2 = r1 instanceof java util date", "if $ z2 == 0 goto label3", "r17 = microsoft exchange webservices data core ews service xml writer r0", "$ r12 = r17 service", "$ r11 = java util date r1", "$ r13 = $ r12 convert date time to universal date time string $ r11", "r2 set param $ r13", "if $ z2 == 0 goto label3", "label $ r6 = r1 get class", "$ z3 = $ r6 be primitive", "if $ z3 == 0 goto label4", "$ r10 = r1 to string", "r2 set param $ r10", "if $ z3 == 0 goto label4", "label $ z4 = r1 instanceof java lang string", "if $ z4 == 0 goto label5", "$ r9 = r1 to string", "r2 set param $ r9", "if $ z4 == 0 goto label5", "label $ z5 = r1 instanceof microsoft exchange webservices data property complex i search string provider", "if $ z5 == 0 goto label6", "r3 = microsoft exchange webservices data property complex i search string provider r1", "$ r8 = r3 get search string", "r2 set param $ r8", "if $ z5 == 0 goto label6", "label $ z6 = r1 instanceof java lang number", "if $ z6 == 0 goto label7", "$ r7 = r1 to string", "r2 set param $ r7", "if $ z6 == 0 goto label7", "label z7 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r5 = microsoft exchange webservices data core ew utility enum_version_dictionaries", "$ r6 = $ r5 get member", "r2 = java util map $ r6", "$ r7 = r0 get class", "$ r8 = r2 get $ r7", "r3 = java util map $ r8", "$ r9 = r0 to string", "$ r10 = r3 get $ r9", "r4 = microsoft exchange webservices data core enumeration misc exchange version $ r10", "if r4 == null goto label1", "r18 = java lang enum r4", "i0 = r1 compare to r18", "if i0 > = 0 goto label1", "r17 = new microsoft exchange webservices data core exception service local service version exception", "$ r12 = newarray java lang object [ 3 ]", "$ r13 = r0 to string", "$ r12 [ 0 ] = $ r13", "$ r14 = r0 get class", "$ r15 = $ r14 get name", "$ r12 [ 1 ] = $ r15", "$ r12 [ 2 ] = r4", "$ r16 = java lang string format \\ `` enumeration value % s in enumeration type % s be only valid for exchange version % s or later \\", "specialinvoke r17 < init > $ r16", "r19 = java lang throwable r17", "throw r19", "if i0 > = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = 0", "r1 = r0 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label3", "r2 = r1 next", "if i1 ! = i0 goto label2", "return r2", "if i1 ! = i0 goto label2", "label i1 = i1 + 1", "goto label1", "if $ z0 == 0 goto label3", "label $ r3 = new java lang index out of bound exception", "specialinvoke $ r3 < init > \\ `` the i enumerable doesn\\'t contain that many object \\ ``", "throw $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = microsoft exchange webservices data core ew xml reader r0", "$ r3 = r5 read attribute value r2", "$ r4 = microsoft exchange webservices data core ew utility parse r1 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z4 = 0", "$ z0 = r1 be end element", "if $ z0 == 0 goto label4", "$ r4 = r1 a end element", "r2 = $ r4 get name", "$ r5 = r0 a start element", "r3 = $ r5 get name", "$ r6 = r2 get local part", "$ r7 = r3 get local part", "$ z1 = $ r6 equal $ r7", "if $ z1 == 0 goto label2", "$ r8 = r2 get prefix", "$ r9 = r3 get prefix", "$ z2 = $ r8 equal $ r9", "if $ z2 ! = 0 goto label1", "$ r10 = r2 get namespace u r i", "$ r11 = r3 get namespace u r i", "$ z3 = $ r10 equal $ r11", "if $ z3 == 0 goto label2", "label $ z5 = 1", "goto label3", "label z4 = $ z5", "label return z4", "if $ z3 == 0 goto label2", "label $ z5 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r9 = microsoft exchange webservices data core ew xml reader r0", "$ r1 = r9 present event", "$ z0 = $ r1 be start element", "if $ z0 == 0 goto label1", "r10 = microsoft exchange webservices data core ew xml reader r0", "$ r5 = r10 present event", "$ r6 = $ r5 a start element", "$ r7 = $ r6 get name", "r8 = $ r7 to string", "goto label2", "label return r8", "if $ z0 == 0 goto label1", "label r11 = microsoft exchange webservices data core ew xml reader r0", "$ r2 = r11 present event", "$ r3 = $ r2 a end element", "$ r4 = $ r3 get name", "r8 = $ r4 to string"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data core exchange server info r0", "$ i0 = r1 major version", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data core exchange server info r0", "r2 version string = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "microsoft exchange webservices data core ew utility validate param r1 \\ `` name\\ ``", "microsoft exchange webservices data core ew utility validate param r2 \\ `` parent folder id\\ ``", "r6 = new microsoft exchange webservices data core request delete user configuration request", "r7 = microsoft exchange webservices data core exchange service r0", "specialinvoke r6 < init > r7", "r6 set name r1", "r6 set parent folder id r2", "r6 execute", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r5 = new microsoft exchange webservices data core request get inbox rule request", "r6 = microsoft exchange webservices data core exchange service r0", "specialinvoke r5 < init > r6", "$ r3 = r5 execute", "$ r4 = $ r3 get rule", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data core exchange service r0", "$ z0 = r1 exchange2007 compatibility mode", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = microsoft exchange webservices data core exchange service r0", "r1 exchange2007 compatibility mode = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = microsoft exchange webservices data core exchange service base r0", "$ z0 = r6 be trace enable for r1", "if $ z0 == 0 goto label1", "r3 = r1 to string", "r4 = microsoft exchange webservices data core ew utility format log message with xml content r3 r2", "r7 = microsoft exchange webservices data core exchange service base r0", "$ r5 = r7 trace listener", "$ r5 trace r3 r4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = microsoft exchange webservices data core exchange service base r0", "r3 trace listener = r1", "if r1 == null goto label1", "$ z0 = 1", "goto label2", "label r4 = microsoft exchange webservices data core exchange service base r0", "r4 trace enable = $ z0", "return", "if r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core exchange service base r0", "$ r1 = r2 user agent", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r3 = r9 append r1", "$ r4 = $ r3 append \\ `` \\ ``", "$ r5 = microsoft exchange webservices data core exchange service base default user agent", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 append \\ `` \\ ``", "$ r8 = $ r7 to string", "r10 = microsoft exchange webservices data core exchange service base r0", "r10 user agent = $ r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core exchange service base r0", "$ r1 = r2 server info", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data core property set r0", "specialinvoke r2 throw if readonly", "r3 = microsoft exchange webservices data core property set r0", "r3 request body type = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core property set r0", "$ r1 = r2 convert html code page to u t f8", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request convert id request r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util collection r1", "r3 = microsoft exchange webservices data core request create folder request r0", "r3 set object $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request create request r0", "$ r1 = r2 object", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request create user configuration request r0", "$ r1 = r2 user configuration", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request delete user configuration request r0", "$ r1 = r2 parent folder id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request execute diagnostic method request r0", "$ r1 = r2 xml node", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request get password expiration date request r0", "$ r1 = r2 mailbox smtp address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data core request get request r0", "r2 property set = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request get server time zone request r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request get user availability request r0", "$ r1 = r2 request data", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request get user oof setting request r0", "$ r1 = r2 smtp address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = microsoft exchange webservices data core request http client web request r0", "specialinvoke r6 throw if response be null", "r7 = microsoft exchange webservices data core request http client web request r0", "$ r1 = r7 response", "$ r2 = $ r1 get first header \\ `` content-encoding\\ ``", "if $ r2 == null goto label1", "r8 = microsoft exchange webservices data core request http client web request r0", "$ r3 = r8 response", "$ r4 = $ r3 get first header \\ `` content-encoding\\ ``", "$ r5 = $ r4 get value", "goto label2", "label return $ r5", "if $ r2 == null goto label1", "label $ r5 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data core request http web request r0", "r2 proxy = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data core request http web request r0", "r2 username = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data core request http web request r0", "$ z0 = r1 allow auto redirect", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data core request move copy request r0", "r2 destination folder id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data core request play on phone request r0", "r2 dial string = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request send item request r0", "$ r1 = r2 item", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request send item request r0", "$ r1 = r2 save copy destination folder id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request set user oof setting request r0", "$ r1 = r2 smtp address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = r1 get", "r2 = microsoft exchange webservices data core request http web request $ r3", "r5 = microsoft exchange webservices data core request simple service request base r0", "$ r4 = r5 read response r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = microsoft exchange webservices data core request subscribe to pull notification request r0", "r1 timeout = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request sync folder item request r0", "$ r1 = r2 ignore item id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core response attendee availability r0", "$ r1 = r2 work hour", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = microsoft exchange webservices data core enumeration misc xml namespace message", "r1 read start element $ r3 \\ `` suggestion day result array\\ ``", "label r1 read", "$ r4 = microsoft exchange webservices data core enumeration misc xml namespace type", "$ z0 = r1 be start element $ r4 \\ `` suggestion day result\\ ``", "if $ z0 == 0 goto label2", "r9 = new microsoft exchange webservices data property complex availability suggestion", "specialinvoke r9 < init >", "$ r7 = r1 get local name", "r9 load from xml r1 $ r7", "r10 = microsoft exchange webservices data core response suggestion response r0", "$ r8 = r10 day suggestion", "$ r8 add r9", "label $ r5 = microsoft exchange webservices data core enumeration misc xml namespace message", "$ z1 = r1 be end element $ r5 \\ `` suggestion day result array\\ ``", "if $ z1 == 0 goto label1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core response update inbox rule response r0", "$ r1 = r2 error", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = microsoft exchange webservices data core enumeration misc exchange version exchange2007_ s p1", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ r1 = microsoft exchange webservices data core service schema folder schema instance", "r2 = microsoft exchange webservices data core service schema service object schema $ r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r4 = microsoft exchange webservices data core service folder folder r0", "r4 throw if this be new", "r5 = microsoft exchange webservices data core service folder folder r0", "$ r2 = r5 get service", "r6 = microsoft exchange webservices data core service folder folder r0", "$ r3 = r6 get id", "$ r2 empty folder $ r3 r1 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = microsoft exchange webservices data core service item appointment r0", "$ r2 = r4 get property bag", "$ r3 = microsoft exchange webservices data core service schema appointment schema legacy free busy status", "$ r2 set object from property definition $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = microsoft exchange webservices data core service item appointment r0", "$ r2 = r4 get property bag", "$ r3 = microsoft exchange webservices data core service schema appointment schema be response request", "$ r2 set object from property definition $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item appointment r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema appointment schema modify occurrence", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = microsoft exchange webservices data property complex occurrence info collection $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item appointment r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema appointment schema conference type", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang integer $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item appointment r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema appointment schema allow new time proposal", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang boolean $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item contact r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema contact schema file a", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = microsoft exchange webservices data core service item contact r0", "$ r2 = r4 get property bag", "$ r3 = microsoft exchange webservices data core service schema contact schema middle name", "$ r2 set object from property definition $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item contact r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema contact schema nick name", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = microsoft exchange webservices data core service item contact r0", "$ r2 = r4 get property bag", "$ r3 = microsoft exchange webservices data core service schema contact schema nick name", "$ r2 set object from property definition $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = microsoft exchange webservices data core service item contact r0", "$ r2 = r4 get property bag", "$ r3 = microsoft exchange webservices data core service schema contact schema assistant name", "$ r2 set object from property definition $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = microsoft exchange webservices data core service item contact r0", "$ r2 = r4 get property bag", "$ r3 = microsoft exchange webservices data core service schema contact schema child", "$ r2 set object from property definition $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item contact r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema contact schema company", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = microsoft exchange webservices data property complex string list $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = microsoft exchange webservices data core service item contact r0", "$ r2 = r4 get property bag", "$ r3 = microsoft exchange webservices data core service schema contact schema department", "$ r2 set object from property definition $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item contact r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema contact schema generation", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item contact r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema contact schema profession", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item contact r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema contact schema direct report", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = microsoft exchange webservices data property complex email address collection $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = microsoft exchange webservices data core service schema contact schema file a", "r4 = microsoft exchange webservices data core service item contact group r0", "r5 = microsoft exchange webservices data property definition property definition base $ r1", "$ r2 = r4 get object from property definition r5", "$ r3 = java lang string $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r8 = \\ `` \\ ``", "r10 = microsoft exchange webservices data core service item conversation r0", "$ r2 = r10 get property bag", "$ r3 = microsoft exchange webservices data core service schema conversation schema topic", "$ z0 = $ r2 contain $ r3", "if $ z0 == 0 goto label1", "r9 = new microsoft exchange webservices data misc out param", "specialinvoke r9 < init >", "r11 = microsoft exchange webservices data core service item conversation r0", "$ r5 = r11 get property bag", "$ r6 = microsoft exchange webservices data core service schema conversation schema topic", "$ r5 try get property type class \\ `` ljava lang string \\", "$ r7 = r9 get param", "r8 = java lang string $ r7", "label return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r8 = null", "r10 = microsoft exchange webservices data core service item conversation r0", "$ r2 = r10 get property bag", "$ r3 = microsoft exchange webservices data core service schema conversation schema unique unread sender", "$ z0 = $ r2 contain $ r3", "if $ z0 == 0 goto label1", "r9 = new microsoft exchange webservices data misc out param", "specialinvoke r9 < init >", "r11 = microsoft exchange webservices data core service item conversation r0", "$ r5 = r11 get property bag", "$ r6 = microsoft exchange webservices data core service schema conversation schema unique unread sender", "$ r5 try get property type class \\ `` lmicrosoft exchange webservices data property complex string list \\", "$ r7 = r9 get param", "r8 = microsoft exchange webservices data property complex string list $ r7", "label return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item conversation r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema conversation schema global size", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang integer $ r3", "$ i0 = $ r4 int value", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item conversation r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema conversation schema item class", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = microsoft exchange webservices data property complex string list $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item conversation r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema conversation schema global item class", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = microsoft exchange webservices data property complex string list $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = microsoft exchange webservices data core service item email message r0", "r3 throw if this be new", "r2 = new microsoft exchange webservices data core service response suppress read receipt", "specialinvoke r2 < init > r0", "r2 internal create null null", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item email message r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema email message schema bcc recipient", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = microsoft exchange webservices data property complex email address collection $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item item r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema item schema mime content", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = microsoft exchange webservices data property complex mime content $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = microsoft exchange webservices data core service item item r0", "$ r2 = r4 get property bag", "$ r3 = microsoft exchange webservices data core service schema item schema mime content", "$ r2 set object from property definition $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item item r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema item schema in reply to", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item item r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema item schema allow response action", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java util enum set $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = microsoft exchange webservices data core service item item r0", "$ r2 = r4 get property bag", "$ r3 = microsoft exchange webservices data core service schema item schema subject", "$ r2 set object from property definition $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item meeting message r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema meeting message schema response type", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = microsoft exchange webservices data core enumeration property meeting response type $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item meeting message r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema meeting message schema be delegate", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang boolean $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item meet request r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema meeting request schema intend free busy status", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = microsoft exchange webservices data core enumeration property legacy free busy status $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r5 = microsoft exchange webservices data core service item post item r0", "r5 throw if this be new", "r4 = new microsoft exchange webservices data core service response response message", "if z0 == 0 goto label1", "$ r3 = microsoft exchange webservices data core enumeration service response message type reply all", "goto label2", "label specialinvoke r4 < init > r0 $ r3", "return r4", "if z0 == 0 goto label1", "label $ r3 = microsoft exchange webservices data core enumeration service response message type reply"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item post item r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema email message schema from", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = microsoft exchange webservices data property complex email address $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item post item r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema email message schema be read", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang boolean $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item post item r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema email message schema reference", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item task r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema task schema assign time", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java util date $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item task r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema task schema bill information", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item task r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema task schema delegation state", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = microsoft exchange webservices data core enumeration property task delegation state $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = microsoft exchange webservices data core service schema item schema attachment", "r4 = microsoft exchange webservices data core service response calendar response message r0", "r5 = microsoft exchange webservices data property definition property definition base $ r1", "$ r2 = r4 get object from property definition r5", "$ r3 = microsoft exchange webservices data property complex attachment collection $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = microsoft exchange webservices data core service schema item schema body", "r4 = microsoft exchange webservices data core service response calendar response message r0", "r5 = microsoft exchange webservices data property definition property definition base $ r1", "$ r2 = r4 get object from property definition r5", "$ r3 = microsoft exchange webservices data property complex message body $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = microsoft exchange webservices data core simple property bag r0", "$ r1 = r4 remove item", "$ r1 clear", "r5 = microsoft exchange webservices data core simple property bag r0", "$ r2 = r5 add item", "$ r2 clear", "r6 = microsoft exchange webservices data core simple property bag r0", "$ r3 = r6 modify item", "$ r3 clear", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data core web proxy r0", "$ i0 = r1 port", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data misc availability availability option r0", "r2 global object id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data misc availability legacy availability time zone time r0", "$ r1 = r2 time of day", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data misc conversation action r0", "$ r1 = r2 category", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data misc conversation action r0", "$ r1 = r2 context folder id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data misc conversation action r0", "r2 context folder id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data misc id alternate public folder id r0", "r2 folder id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data misc impersonate user id r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data misc soap fault detail r0", "$ r1 = r2 exception type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data misc soap fault detail r0", "$ i0 = r1 position within line", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 0 goto label1", "if i0 > = 24 goto label1", "r3 = microsoft exchange webservices data misc time r0", "r3 hour = i0", "goto label2", "label return", "if i0 > = 24 goto label1", "label r2 = new microsoft exchange webservices data core exception misc argument exception", "specialinvoke r2 < init > \\ `` hour must be between 0 and 23 \\ ``", "r4 = java lang throwable r2", "throw r4"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data misc user configuration r0", "$ r1 = r2 item id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = microsoft exchange webservices data core enumeration misc user configuration property binary data", "r3 = microsoft exchange webservices data misc user configuration r0", "specialinvoke r3 validate property access $ r1", "r4 = microsoft exchange webservices data misc user configuration r0", "$ r2 = r4 binary data", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data notification get event result r0", "$ z0 = r1 more event available", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r8 = new java util array list", "specialinvoke r8 < init >", "r9 = microsoft exchange webservices data notification get event result r0", "$ r5 = r9 event", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r6 = r2 next", "r3 = microsoft exchange webservices data notification notification event $ r6", "$ z1 = r3 instanceof microsoft exchange webservices data notification item event", "if $ z1 == 0 goto label2", "$ r7 = microsoft exchange webservices data notification item event r3", "r8 add $ r7", "label goto label1", "if $ z0 == 0 goto label3", "label return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data notification notification event r0", "$ r1 = r2 timestamp", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = microsoft exchange webservices data notification pull subscription r0", "$ r2 = r3 get service", "$ r2 end unsubscribe r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data notification stream subscription connection r0", "$ r1 = r2 on notification event", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = microsoft exchange webservices data core enumeration misc xml namespace message", "$ r3 = r1 read element value $ r2 \\ `` subscription id\\ ``", "r6 = microsoft exchange webservices data notification subscription base r0", "r6 id = $ r3", "r7 = microsoft exchange webservices data notification subscription base r0", "$ z0 = r7 get use watermark", "if $ z0 == 0 goto label1", "$ r4 = microsoft exchange webservices data core enumeration misc xml namespace message", "$ r5 = r1 read element value $ r4 \\ `` watermark\\ ``", "r8 = microsoft exchange webservices data notification subscription base r0", "r8 watermark = $ r5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r3 = microsoft exchange webservices data property complex attachment r0", "$ r1 = r3 get id", "if $ r1 == null goto label1", "r4 = microsoft exchange webservices data property complex attachment r0", "$ r2 = r4 get id", "$ z0 = $ r2 be empty", "if $ z0 == 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex attachment r0", "$ r1 = r2 owner", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex attachment collection r0", "$ r1 = r2 owner", "r3 = microsoft exchange webservices data core service service object $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get local name", "$ z0 = $ r2 equal ignore case \\ `` mailbox\\ ``", "if $ z0 == 0 goto label1", "$ r8 = r1 get local name", "r9 = microsoft exchange webservices data property complex attendee r0", "r9 load from xml r1 $ r8", "return 1", "if $ z0 == 0 goto label1", "label $ r3 = r1 get local name", "$ z1 = $ r3 equal ignore case \\ `` response type\\ ``", "if $ z1 == 0 goto label2", "$ r6 = r1 read element value class \\ `` lmicrosoft exchange webservices data core enumeration property meeting response type \\ ``", "$ r7 = microsoft exchange webservices data core enumeration property meeting response type $ r6", "r10 = microsoft exchange webservices data property complex attendee r0", "r10 response type = $ r7", "if $ z1 == 0 goto label2", "label $ r4 = r1 get local name", "$ z2 = $ r4 equal ignore case \\ `` last response time\\ ``", "if $ z2 == 0 goto label3", "$ r5 = r1 read element value a date time", "r11 = microsoft exchange webservices data property complex attendee r0", "r11 last response time = $ r5", "if $ z2 == 0 goto label3", "label $ z3 = specialinvoke r0 try read element from xml r1", "return $ z3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 equal ignore case \\ `` attendee\\ ``", "if $ z0 == 0 goto label1", "$ r2 = new microsoft exchange webservices data property complex attendee", "specialinvoke $ r2 < init >", "return $ r2", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex availability calendar event r0", "$ r1 = r2 free busy status", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data property complex availability calendar event detail r0", "$ z0 = r1 be reminder set", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data property complex availability conflict r0", "$ i0 = r1 number of member with conflict", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex availability oof setting r0", "$ r1 = r2 internal reply", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex availability time suggestion r0", "$ r1 = r2 meeting time", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data property complex availability time suggestion r0", "$ z0 = r1 be work time", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex complete name r0", "$ r1 = r2 title", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data property complex complex property r0", "r2 xml namespace = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex complex property r0", "$ r1 = r2 on change list", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data property complex complex property collection r0", "specialinvoke r2 internal add r1 0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 0 goto label1", "r4 = microsoft exchange webservices data property complex complex property collection r0", "$ i1 = r4 get count", "if i0 > = $ i1 goto label1", "$ z1 = 1", "goto label2", "label microsoft exchange webservices data core ew utility ews assert $ z1 \\ `` complex property collection internal remove at\\", "r5 = microsoft exchange webservices data property complex complex property collection r0", "$ r1 = r5 item", "$ r2 = $ r1 get i0", "$ r3 = microsoft exchange webservices data property complex complex property $ r2", "r6 = microsoft exchange webservices data property complex complex property collection r0", "r6 internal remove $ r3", "return", "if i0 > = $ i1 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex create rule operation r0", "$ r1 = r2 rule", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = microsoft exchange webservices data property complex delegate permission r0", "$ r3 = r10 delegate folder permission", "$ r4 = $ r3 value", "r1 = $ r4 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label3", "$ r5 = r1 next", "r2 = microsoft exchange webservices data property complex delegate permission $ delegate folder permission $ r5", "$ r6 = r2 get permission level", "$ r7 = microsoft exchange webservices data core enumeration permission folder delegate folder permission level custom", "if $ r6 ! = $ r7 goto label2", "$ z1 = microsoft exchange webservices data property complex delegate permission $ delegate folder permission access $ 100 r2", "if $ z1 ! = 0 goto label2", "r9 = new microsoft exchange webservices data core exception service local service validation exception", "specialinvoke r9 < init > \\ `` this operation can\\'t be perform because one or more folder permission level be set to custom \\ ``", "r11 = java lang throwable r9", "throw r11", "if $ z1 ! = 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex delegate user r0", "$ r1 = r2 permission", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = microsoft exchange webservices data property complex dictionary property r0", "$ r3 = r14 entry", "$ r4 = r1 get key", "$ z0 = $ r3 contain key $ r4", "if $ z0 == 0 goto label2", "r15 = microsoft exchange webservices data property complex dictionary property r0", "$ r5 = r15 entry", "$ r6 = r1 get key", "$ r7 = $ r5 get $ r6", "r2 = microsoft exchange webservices data property complex dictionary entry property $ r7", "r2 remove change event r0", "r1 add on change event r0", "r16 = microsoft exchange webservices data property complex dictionary property r0", "$ r8 = r16 add entry", "$ r9 = r1 get key", "$ z1 = $ r8 contain $ r9", "if $ z1 ! = 0 goto label1", "r17 = microsoft exchange webservices data property complex dictionary property r0", "$ r10 = r17 modify entry", "$ r11 = r1 get key", "$ z2 = $ r10 contain $ r11", "if $ z2 ! = 0 goto label1", "r18 = microsoft exchange webservices data property complex dictionary property r0", "$ r12 = r18 modify entry", "$ r13 = r1 get key", "$ r12 add $ r13", "label r19 = microsoft exchange webservices data property complex dictionary property r0", "r19 change", "goto label3", "label return", "if $ z0 == 0 goto label2", "label r20 = microsoft exchange webservices data property complex dictionary property r0", "r20 internal add r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data property complex file attachment r0", "r2 throw if this be not new", "r3 = microsoft exchange webservices data property complex file attachment r0", "r3 file name = r1", "r4 = microsoft exchange webservices data property complex file attachment r0", "r4 content = null", "r5 = microsoft exchange webservices data property complex file attachment r0", "r5 content stream = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex file attachment r0", "$ r1 = r2 content", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex folder permission r0", "$ r1 = r2 edit item", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex folder permission r0", "$ r1 = r2 delete item", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data property complex group member collection r0", "r3 = microsoft exchange webservices data property complex complex property r1", "$ z0 = r2 internal remove r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex im address entry r0", "$ r1 = r2 im address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data property complex internet message header r0", "r2 name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex internet message header r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = microsoft exchange webservices data property complex item attachment r0", "r6 throw if this be not new", "r7 = microsoft exchange webservices data property complex item attachment r0", "$ r2 = r7 item", "if $ r2 == null goto label1", "r8 = microsoft exchange webservices data property complex item attachment r0", "$ r5 = r8 item", "$ r5 remove service object change event r0", "label r9 = microsoft exchange webservices data property complex item attachment r0", "r9 item = r1", "r10 = microsoft exchange webservices data property complex item attachment r0", "$ r3 = r10 item", "if $ r3 == null goto label2", "r11 = microsoft exchange webservices data property complex item attachment r0", "$ r4 = r11 item", "$ r4 add service object change event r0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex item collection r0", "$ r1 = r2 item", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = microsoft exchange webservices data property complex meeting time zone r0", "$ r2 = r3 name", "r4 = microsoft exchange webservices data property complex meeting time zone r0", "$ z0 = r4 can set field value $ r2 r1", "if $ z0 == 0 goto label1", "r5 = microsoft exchange webservices data property complex meeting time zone r0", "r5 base offset = r1", "r6 = microsoft exchange webservices data property complex meeting time zone r0", "r6 change", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex meeting time zone r0", "$ r1 = r2 standard", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 read attribute value class \\ `` lmicrosoft exchange webservices data core enumeration property body type \\", "$ r3 = microsoft exchange webservices data core enumeration property body type $ r2", "r4 = microsoft exchange webservices data property complex message body r0", "r4 body type = $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = microsoft exchange webservices data property complex recurrence range number recurrence range r0", "$ r2 = r3 number of occurrence", "r4 = microsoft exchange webservices data property complex recurrence range number recurrence range r0", "r4 can set field value $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data property complex rule action r0", "$ z0 = r1 mark a read", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return \\ `` create rule operation\\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex rule predicate r0", "$ r1 = r2 contain sender string", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex rule predicate r0", "$ r1 = r2 from address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data property complex rule predicate r0", "$ z0 = r1 be approval request", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data property complex rule predicate r0", "$ z0 = r1 be encrypt", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data property complex rule predicate r0", "$ z0 = r1 be non delivery report", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data property complex rule predicate r0", "$ z0 = r1 be read receipt", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex search folder parameter r0", "$ r1 = r2 traversal", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex service id r0", "$ r1 = r2 unique id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = microsoft exchange webservices data property complex service id r0", "$ z0 = r4 equal r1", "if $ z0 == 0 goto label1", "r5 = microsoft exchange webservices data property complex service id r0", "$ r2 = r5 get change key", "$ r3 = r1 get change key", "$ z1 = org apache common lang3 string utils equal $ r2 $ r3", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z3 = 0", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r4 = r2 next", "r3 = java lang string $ r4", "r6 = microsoft exchange webservices data property complex string list r0", "$ z1 = r6 contain r3", "if $ z1 ! = 0 goto label2", "r7 = microsoft exchange webservices data property complex string list r0", "$ r5 = r7 item", "$ r5 add r3", "z3 = 1", "label goto label1", "if $ z0 == 0 goto label3", "label if z3 == 0 goto label4", "r8 = microsoft exchange webservices data property complex string list r0", "r8 change", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof microsoft exchange webservices data property complex string list", "if $ z0 == 0 goto label1", "r2 = microsoft exchange webservices data property complex string list r1", "r5 = microsoft exchange webservices data property complex string list r0", "$ r3 = r5 to string", "$ r4 = r2 to string", "$ z1 = $ r3 equal $ r4", "return $ z1", "if $ z0 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex time time zone transition group r0", "$ r1 = r2 transition", "$ i0 = $ r1 size", "if $ i0 ! = 2 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 ! = 2 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = microsoft exchange webservices data property complex time change recurrence r0", "$ r2 = r3 day of the week", "r4 = microsoft exchange webservices data property complex time change recurrence r0", "$ z0 = r4 can set field value $ r2 r1", "if $ z0 == 0 goto label1", "r5 = microsoft exchange webservices data property complex time change recurrence r0", "r5 day of the week = r1", "r6 = microsoft exchange webservices data property complex time change recurrence r0", "r6 change", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = microsoft exchange webservices data property complex user configuration dictionary r0", "r1 be dirty = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = microsoft exchange webservices data property complex user id r0", "$ r2 = r3 standard user", "r4 = microsoft exchange webservices data property complex user id r0", "$ z0 = r4 can set field value $ r2 r1", "if $ z0 == 0 goto label1", "r5 = microsoft exchange webservices data property complex user id r0", "r5 standard user = r1", "r6 = microsoft exchange webservices data property complex user id r0", "r6 change", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property definition extend property definition r0", "$ r1 = r2 mapi type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r0 ! = r1 goto label1", "return 1", "if r0 ! = r1 goto label1", "label $ z0 = r1 instanceof microsoft exchange webservices data property definition indexed property definition", "if $ z0 == 0 goto label2", "$ r2 = microsoft exchange webservices data property definition indexed property definition r1", "r3 = microsoft exchange webservices data property definition indexed property definition r0", "$ z1 = microsoft exchange webservices data property definition indexed property definition be equal to $ r2 r3", "return $ z1", "if $ z0 == 0 goto label2", "label return 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data property definition property definition r0", "$ z0 = r2 have flag r1 null", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data property definition property definition r0", "r2 name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = microsoft exchange webservices data core enumeration service service object type item", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data search conversation indexed item view r0", "$ r1 = r2 order by", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = microsoft exchange webservices data search find item result r0", "r1 total count = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data search folder view r0", "$ r1 = r2 traversal", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data search folder view r0", "r2 traversal = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data search group find item result r0", "$ r1 = r2 item group", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = microsoft exchange webservices data search order by collection r0", "$ r1 = r3 prop def sort order pair list", "$ r1 remove i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data search page view r0", "$ r1 = r2 offset base point", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data sync change collection r0", "$ r1 = r2 change", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = microsoft exchange webservices data sync item change r0", "$ r1 = r3 get service object", "$ r2 = microsoft exchange webservices data core service item item $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data sync item change r0", "$ z0 = r1 be read", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = microsoft exchange webservices data util date time utils parse internal r0 1", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org xhtmlrenderer context standard attribute resolver r0", "$ r3 = r5 nsh", "$ r2 = org w3c dom element r1", "$ r4 = $ r3 get link uri $ r2", "if $ r4 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r4 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org xhtmlrenderer context stylesheet factory impl r0", "$ r3 = r5 _cache", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org xhtmlrenderer css newmatch cascade style r0", "r2 = r4 property by name r1", "if r2 ! = null goto label1", "$ r3 = null", "goto label2", "label return $ r3", "if r2 ! = null goto label1", "label $ r3 = r2 a ident value"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org xhtmlrenderer css style derive value r0", "$ r1 = r2 _as string", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = \\ `` \\ ``", "r2 = r1 get document element", "r8 = org xhtmlrenderer simple extend xhtml cs only namespace handler r0", "r3 = specialinvoke r8 find first child r2 \\ `` head\\ ``", "if r3 == null goto label1", "r9 = org xhtmlrenderer simple extend xhtml cs only namespace handler r0", "r4 = specialinvoke r9 find first child r3 \\ `` title\\ ``", "if r4 == null goto label1", "$ r5 = org xhtmlrenderer simple extend xhtml cs only namespace handler read text content r4", "$ r6 = $ r5 trim", "r7 = org xhtmlrenderer simple extend xhtml cs only namespace handler collapse white space $ r6", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = org xhtmlrenderer simple x h t m l panel r0", "$ f0 = r1 font scale factor", "r2 = org xhtmlrenderer simple x h t m l panel r0", "specialinvoke r2 scale font $ f0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = org xhtmlrenderer simple x h t m l panel r0", "r1 = r4 get share context", "$ r2 = r1 get text renderer", "$ r2 set font scale 1 0f", "r5 = org xhtmlrenderer simple x h t m l panel r0", "$ r3 = r5 get document", "r6 = org xhtmlrenderer simple x h t m l panel r0", "r6 set document $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org xhtmlrenderer simple x h t m l panel r0", "$ f0 = r1 font scale factor", "$ f1 = 1 0f $ f0", "r2 = org xhtmlrenderer simple x h t m l panel r0", "specialinvoke r2 scale font $ f1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org xhtmlrenderer swing basic panel r0", "$ r2 = r4 document listener", "$ r2 put r1 r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r17 = org xhtmlrenderer swing basic panel r0", "$ r5 = r17 get share context", "$ r6 = $ r5 get uac", "r2 = $ r6 resolve u r i r1", "r18 = org xhtmlrenderer swing basic panel r0", "$ z0 = specialinvoke r18 be anchor in current document r1", "if $ z0 == 0 goto label3", "r19 = org xhtmlrenderer swing basic panel r0", "r12 = specialinvoke r19 get anchor id r1", "r20 = org xhtmlrenderer swing basic panel r0", "$ r7 = r20 get share context", "r3 = $ r7 get box by id r12", "if r3 == null goto label3", "$ r8 = r3 get style", "$ z1 = $ r8 be inline", "if $ z1 == 0 goto label1", "r15 = new java awt point", "$ i6 = r3 get abs x", "$ i7 = r3 get abs y", "specialinvoke r15 < init > $ i6 $ i7", "r13 = r15", "goto label2", "label r23 = org xhtmlrenderer swing basic panel r0", "r23 scroll to r13", "return", "if $ z1 == 0 goto label1", "label r21 = org xhtmlrenderer swing basic panel r0", "$ r9 = r21 get layout context", "r22 = org xhtmlrenderer css style cs context $ r9", "r4 = r3 get margin r22", "r16 = new java awt point", "$ i0 = r3 get abs x", "$ f0 = r4 leave", "$ i1 = int $ f0", "$ i2 = $ i0 + $ i1", "$ i3 = r3 get abs y", "$ f1 = r4 top", "$ i4 = int $ f1", "$ i5 = $ i3 + $ i4", "specialinvoke r16 < init > $ i2 $ i5", "r13 = r16", "if r3 == null goto label3", "label r24 = org xhtmlrenderer swing basic panel r0", "r14 = r24 load document r2", "r25 = org xhtmlrenderer swing basic panel r0", "r25 set document r14 r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org xhtmlrenderer swing basic panel r0", "$ r2 = r3 hovered_element", "if r1 ! = $ r2 goto label1", "return 1", "if r1 ! = $ r2 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org xhtmlrenderer swing box renderer r0", "r2 render hint = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org xhtmlrenderer swing java2 d text renderer r0", "$ r1 = r2 anti alias render hint", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r1 set document relative r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org xhtmlrenderer swing scalable x h t m l panel r0", "specialinvoke r3 reset scale accord to policy", "r4 = org xhtmlrenderer swing scalable x h t m l panel r0", "r4 last layout size = null", "specialinvoke r0 set document r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "c0 = @ parameter1", "r1 = org xhtmlrenderer util configuration value for r0", "if r1 ! = null goto label1", "return c0", "if r1 ! = null goto label1", "label $ i1 = r1 length", "if $ i1 < = 1 goto label2", "$ r2 = new java lang string buffer", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append \\ `` property \\'\\ ``", "$ r4 = $ r3 append r0", "$ r5 = $ r4 append \\ `` \\ ' be request a a character the value of \\'\\ ``", "$ r6 = $ r5 append r1", "$ r7 = $ r6 append \\ `` \\ ' be too long to be a char return only the first character \\ ``", "$ r8 = $ r7 to string", "org xhtmlrenderer util x r log exception $ r8", "label $ c2 = r1 char at 0", "return $ c2"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org xhtmlrenderer util f s image writer r0", "r1 write compression quality = f0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache fontbox afm char metric r0", "r2 bound box = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache fontbox afm char metric r0", "$ r2 = r3 ligatures", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache fontbox afm char metric r0", "$ r1 = r2 ligatures", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org apache fontbox afm char metric r0", "r1 w0y = f0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org apache fontbox afm char metric r0", "r1 w1x = f0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache fontbox afm font metric r0", "r2 font b box = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache fontbox afm font metric r0", "r2 notice = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache fontbox afm font metric r0", "r2 encode scheme = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org apache fontbox afm font metric r0", "r1 cap height = f0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache fontbox afm font metric r0", "$ f0 = r1 ascender", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org apache fontbox afm font metric r0", "r1 underline position = f0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache fontbox afm font metric r0", "$ r1 = r3 composite", "$ r2 = java util collection unmodifiable list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org apache fontbox afm font metric r0", "r1 standard vertical width = f0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache fontbox afm kern pair r0", "$ r1 = r2 second kern character", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache fontbox afm ligature r0", "$ r1 = r2 successor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache fontbox afm ligature r0", "r2 successor = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache fontbox cff c f f operator name map", "$ r2 = $ r1 get r0", "$ r3 = org apache fontbox cff c f f operator $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = org apache fontbox cff c f f standard string sid2str", "$ r1 = $ r0 [ i0 ]", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = new java lang string", "r5 = org apache fontbox cff data input r0", "$ r3 = r5 input buffer", "$ r2 = org apache fontbox util charsets iso_8859_1", "specialinvoke r4 < init > $ r3 $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "i0 = lengthof r0", "i4 = 0", "label if i4 > = i0 goto label3", "b1 = r0 [ i4 ]", "$ s2 = b1 & 255", "r3 = java lang integer to hex string $ s2", "$ i3 = r3 length", "if $ i3 ! = 1 goto label2", "$ r4 append \\ `` 0\\ ``", "label $ r6 = java util locale u", "$ r7 = r3 to upper case $ r6", "$ r4 append $ r7", "i4 = i4 + 1", "goto label1", "label if i4 > = i0 goto label3", "label $ r5 = $ r4 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache fontbox cmap c map r0", "r1 supplement = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = r0 get class", "r2 = $ r3 get resource r1", "if r2 ! = null goto label1", "$ r5 = new java io i o exception", "$ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "$ r7 = $ r6 append \\ `` error could not find referenced cmap stream \\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 to string", "specialinvoke $ r5 < init > $ r9", "throw $ r5", "if r2 ! = null goto label1", "label $ r4 = r2 open stream", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org apache fontbox ttf c f f table r0", "$ r1 = r2 cff font", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r3 = org apache fontbox ttf cmap table r0", "r1 = r3 cmaps", "i2 = lengthof r1", "i5 = 0", "label if i5 > = i2 goto label3", "r2 = r1 [ i5 ]", "$ i3 = r2 get platform id", "if $ i3 ! = i0 goto label2", "$ i4 = r2 get platform encode id", "if $ i4 ! = i1 goto label2", "return r2", "if $ i4 ! = i1 goto label2", "label i5 = i5 + 1", "goto label1", "label if i5 > = i2 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache fontbox ttf glyf composite comp r0", "r1 first contour = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache fontbox ttf glyph data r0", "$ s0 = r1 y max", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r4 = org apache fontbox ttf kern subtable r0", "$ r1 = r4 pair", "if $ r1 ! = null goto label1", "$ r3 = org apache fontbox ttf kern subtable log", "$ r3 warn \\ `` no kerning subtable data available due to an unsupported kerning subtable version\\ ``", "return 0", "if $ r1 ! = null goto label1", "label r5 = org apache fontbox ttf kern subtable r0", "$ r2 = r5 pair", "$ i2 = $ r2 get kern i0 i1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r3 = org apache fontbox ttf true type font r0", "$ r1 = r3 get table \\ `` maxp\\ ``", "$ r2 = org apache fontbox ttf maximum profile table $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache fontbox ttf t t f data stream r0", "i0 = r1 read", "if i0 > = 127 goto label1", "$ i1 = i0", "goto label2", "label return $ i1", "if i0 > = 127 goto label1", "label $ i1 = i0 - 256"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache fontbox type1 type1 font r0", "$ i0 = r1 blue shift", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache fontbox type1 type1 font r0", "$ i0 = r1 language group", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org apache fontbox util bound box r0", "r1 lower leave y = f0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache fontbox util bound box r0", "$ f0 = r1 get upper right x", "r2 = org apache fontbox util bound box r0", "$ f1 = r2 get low left x", "$ f2 = $ f0 - $ f1", "return $ f2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r5 = new java util hash set", "specialinvoke $ r5 < init >", "$ z0 = r0 instanceof org objectweb fractal api control bind controller", "if $ z0 == 0 goto label2", "$ r9 = org objectweb fractal api control bind controller r0", "r2 = $ r9 list fc", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label2", "r4 = r2 [ i1 ]", "$ r5 add r4", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label $ r6 = newarray java lang string [ 0 ]", "$ r7 = $ r5 to array $ r6", "$ r8 = java lang string [ ] $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "org objectweb fractal adl util printer log 0 r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "org objectweb fractal adl util printer log 1 r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = gate annotation annotation impl r0", "$ r1 = r2 end", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r12 = gate annotation annotation set impl r0", "$ r6 = r12 annots by start node", "if $ r6 ! = null goto label1", "r13 = gate annotation annotation set impl r0", "r13 index by start offset", "label r14 = gate annotation annotation set impl r0", "$ r7 = r14 node by offset", "r1 = $ r7 value", "r11 = new java util array list", "specialinvoke r11 < init >", "r3 = r1 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label4", "$ r9 = r3 next", "r4 = gate node $ r9", "$ r10 = r4 get id", "r15 = gate annotation annotation set impl r0", "r5 = specialinvoke r15 get annots by start node $ r10", "if r5 == null goto label3", "r11 add all r5", "label goto label2", "if $ z1 == 0 goto label4", "label return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r2 = gate annotation annotation set impl r0", "$ r1 = r2 doc", "r3 = gate document $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = gate annotation annotation set impl r0", "r4 index by type", "r5 = gate annotation annotation set impl r0", "$ r1 = r5 annots by type", "$ r2 = $ r1 key set", "$ r3 = java util collection unmodifiable set $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = gate config config xml handler r0", "$ r2 = r3 _seh", "$ r2 error r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = gate corpus document content impl r0", "$ r1 = r2 to string", "$ i0 = $ r1 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = gate corpus document impl r0", "$ r1 = r2 collect reposition info", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = gate corpus serial corpus impl r0", "r2 unload document r1 1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r2 = new gate util method not implement exception", "specialinvoke r2 < init >", "r3 = java lang throwable r2", "throw r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r5 = gate creole abstract controller r0", "r5 interrupt = 1", "r6 = gate creole abstract controller r0", "$ r2 = r6 get p r", "r1 = $ r2 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r3 = r1 next", "$ r4 = gate processing resource $ r3", "$ r4 interrupt", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole abstract language resource r0", "$ r1 = r2 data store", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r9 = new gate creole execution exception", "r8 = new java lang string builder", "specialinvoke r8 < init >", "$ r3 = r8 append \\ `` resource \\ ``", "$ r4 = r0 get class", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 append \\ `` hasn\\'t overriden the execute method\\ ``", "$ r7 = $ r6 to string", "specialinvoke r9 < init > $ r7", "r10 = java lang throwable r9", "throw r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = gate resource r0", "$ r1 = gate creole abstract process resource get runtime parameter value r2", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = gate creole annic apache lucene analysis token r0", "$ i0 = r1 start offset", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = gate creole annic apache lucene analysis token r0", "$ i0 = r1 end offset", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole annic apache lucene analysis tokenizer r0", "$ r1 = r2 input", "$ r1 close", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = gate creole annic apache lucene document document r0", "$ r1 = r4 field", "$ r2 = java util vector $ r1", "$ r3 = $ r2 element", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = gate creole annic apache lucene index index writer r0", "$ r2 = r3 analyzer", "r4 = gate creole annic apache lucene index index writer r0", "r4 add document r1 $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r3 = gate creole annic apache lucene index term enum r0", "$ z0 = r3 next", "if $ z0 ! = 0 goto label2", "return 0", "if $ z0 ! = 0 goto label2", "label r4 = gate creole annic apache lucene index term enum r0", "$ r2 = r4 term", "$ i0 = r1 compare to $ r2", "if $ i0 > 0 goto label1", "return 1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r6 = gate creole annic apache lucene index term vector writer r0", "$ z0 = r6 be document open", "if $ z0 ! = 0 goto label1", "r4 = new java lang illegal state exception", "specialinvoke r4 < init > \\ `` can not add term when document be not open\\ ``", "throw r4", "if $ z0 ! = 0 goto label1", "label r7 = gate creole annic apache lucene index term vector writer r0", "$ z1 = r7 be field open", "if $ z1 ! = 0 goto label2", "r5 = new java lang illegal state exception", "specialinvoke r5 < init > \\ `` can not add term when field be not open\\ ``", "throw r5", "if $ z1 ! = 0 goto label2", "label r8 = gate creole annic apache lucene index term vector writer r0", "specialinvoke r8 add term internal r1 i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = gate creole annic apache lucene index term vector writer r0", "$ z0 = r6 be document open", "if $ z0 ! = 0 goto label1", "r4 = new java lang illegal state exception", "specialinvoke r4 < init > \\ `` can not add term vector when document be not open\\ ``", "throw r4", "if $ z0 ! = 0 goto label1", "label r7 = gate creole annic apache lucene index term vector writer r0", "$ z1 = r7 be field open", "if $ z1 == 0 goto label2", "r5 = new java lang illegal state exception", "specialinvoke r5 < init > \\ `` can not add term vector when field be open\\ ``", "throw r5", "if $ z1 == 0 goto label2", "label r8 = gate creole annic apache lucene index term vector writer r0", "specialinvoke r8 add term freq vector internal r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["$ i0 = gate creole annic apache lucene search boolean query max clause count", "return $ i0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = gate creole annic apache lucene search explanation r0", "r2 description = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r1 = @ parameter2", "i2 = @ parameter3", "i3 = @ parameter4", "r15 = gate creole annic apache lucene search index searcher r0", "$ r3 = r15 query type", "r11 = new java lang integer", "specialinvoke r11 < init > i0", "$ r3 add r11", "r16 = gate creole annic apache lucene search index searcher r0", "$ r4 = r16 first term position", "$ r4 add r1", "r17 = gate creole annic apache lucene search index searcher r0", "$ r6 = r17 document number", "r12 = new java lang integer", "specialinvoke r12 < init > i1", "$ r6 add r12", "r18 = gate creole annic apache lucene search index searcher r0", "$ r8 = r18 pattern length", "r13 = new java lang integer", "specialinvoke r13 < init > i2", "$ r8 add r13", "r19 = gate creole annic apache lucene search index searcher r0", "$ r10 = r19 frequency", "r14 = new java lang integer", "specialinvoke r14 < init > i3", "$ r10 add r14", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get similarity", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "$ d1 = double i1", "$ i2 = i0 + 1", "$ d0 = double $ i2", "$ d2 = $ d1 $ d0", "$ d3 = java lang math log $ d2", "$ d4 = $ d3 + 1 0", "$ f0 = float $ d4", "return $ f0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "r3 = gate creole annic apache lucene store output stream r0", "$ i1 = r3 buffer position", "if $ i1 < 1024 goto label1", "r4 = gate creole annic apache lucene store output stream r0", "r4 flush", "label r5 = gate creole annic apache lucene store output stream r0", "$ r1 = r5 buffer", "r6 = gate creole annic apache lucene store output stream r0", "$ i2 = r6 buffer position", "$ i3 = $ i2 + 1", "r7 = gate creole annic apache lucene store output stream r0", "r7 buffer position = $ i3", "$ r1 [ $ i2 ] = b0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "i5 = @ parameter0", "label $ i0 = i5 & -128", "if $ i0 == 0 goto label2", "$ i2 = i5 & 127", "$ i3 = $ i2 | 128", "$ b4 = byte $ i3", "r1 = gate creole annic apache lucene store output stream r0", "r1 write byte $ b4", "i5 = i5 > > > 7", "goto label1", "if $ i0 == 0 goto label2", "label $ b1 = byte i5", "r2 = gate creole annic apache lucene store output stream r0", "r2 write byte $ b1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = gate creole annic apache lucene util priority queue r0", "$ i0 = r3 size", "$ i1 = $ i0 + 1", "r4 = gate creole annic apache lucene util priority queue r0", "r4 size = $ i1", "r5 = gate creole annic apache lucene util priority queue r0", "$ r2 = r5 heap", "r6 = gate creole annic apache lucene util priority queue r0", "$ i2 = r6 size", "$ r2 [ $ i2 ] = r1", "r7 = gate creole annic apache lucene util priority queue r0", "specialinvoke r7 up heap", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = gate creole annic apache lucene util priority queue r0", "specialinvoke r1 down heap", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole annic lucene lucene indexer r0", "$ r1 = r2 corpus", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole annic lucene lucene searcher r0", "$ r1 = r2 query", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = gate creole annic lucene lucene searcher r0", "$ r3 = r5 query tokens", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole annic pattern r0", "$ r1 = r2 pattern text", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = gate creole annic pattern r0", "$ i0 = r1 leave context start offset", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = gate creole annic pattern annotation r0", "r1 st offset = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = gate creole conditional serial controller r0", "$ r3 = r6 strategy list", "$ r3 clear", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "r7 = gate creole conditional serial controller r0", "$ r4 = r7 strategy list", "$ r5 = r2 next", "$ r4 add $ r5", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r4 = new java util hash set", "r5 = gate creole creole register impl r0", "$ r2 = r5 vr type", "specialinvoke r4 < init > $ r2", "$ r3 = java util collection unmodifiable set r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = gate creole creole register impl r0", "$ r1 = r4 get lr instance", "r5 = gate creole creole register impl r0", "$ r2 = r5 get public $ r1", "$ r3 = java util collection unmodifiable list $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = gate creole creole register impl r0", "$ r1 = r4 get vr instance", "r5 = gate creole creole register impl r0", "$ r2 = r5 get public $ r1", "$ r3 = java util collection unmodifiable list $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r8 = new java util array list", "specialinvoke r8 < init >", "r9 = gate creole creole xml handler r0", "$ r5 = r9 current param disjunction", "$ r6 = $ r5 value", "r2 = $ r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r7 = r2 next", "r3 = java util list $ r7", "r8 add all r3", "goto label1", "if $ z0 == 0 goto label2", "label return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["label r3 = new gate creole ontology boolean d t", "specialinvoke r3 < init > \\ `` http www w3 org 2001 x m l schema #boolean\\ ``", "label r4 = gate creole ontology data type r3", "return r4"], "adj": [[1], [2], [3], []]}
{"nodes": ["label r3 = new gate creole ontology unsigned byte d t", "specialinvoke r3 < init > \\ `` http www w3 org 2001 x m l schema #unsigned byte\\ ``", "label r4 = gate creole ontology data type r3", "return r4"], "adj": [[1], [2], [3], []]}
{"nodes": ["label r3 = new gate creole ontology unsigned short d t", "specialinvoke r3 < init > \\ `` http www w3 org 2001 x m l schema #unsigned short\\ ``", "label r4 = gate creole ontology data type r3", "return r4"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole ontology literal r0", "$ r1 = r2 language", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r25 = gate creole ontology literal r0", "r19 = r25 value", "r20 = r19 replace \\ `` \\\\\\ `` \\", "r22 = new java lang string builder", "specialinvoke r22 < init >", "$ r2 = r22 append \\ `` \\\\\\ `` \\ ``", "$ r3 = $ r2 append r20", "$ r4 = $ r3 append \\ `` \\\\\\ `` \\ ``", "r21 = $ r4 to string", "r26 = gate creole ontology literal r0", "$ r5 = r26 data type", "if $ r5 ! = null goto label1", "r27 = gate creole ontology literal r0", "$ r13 = r27 language", "if $ r13 == null goto label2", "r23 = new java lang string builder", "specialinvoke r23 < init >", "$ r15 = r23 append r21", "$ r16 = $ r15 append \\ `` @ \\ ``", "r28 = gate creole ontology literal r0", "$ r17 = r28 language", "$ r18 = $ r16 append $ r17", "r21 = $ r18 to string", "goto label2", "label return r21", "if $ r5 ! = null goto label1", "label r24 = new java lang string builder", "specialinvoke r24 < init >", "$ r7 = r24 append r21", "$ r8 = $ r7 append \\ `` ^^ < \\ ``", "r29 = gate creole ontology literal r0", "$ r9 = r29 data type", "$ r10 = $ r9 get xml schema u r i string", "$ r11 = $ r8 append $ r10", "$ r12 = $ r11 append \\ `` > \\ ``", "r21 = $ r12 to string"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole realtime corpus controller r0", "$ r1 = r2 timeout", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = specialinvoke r0 remove r1", "if z0 == 0 goto label1", "r4 = new gate event creole event", "$ r3 = gate data store r1", "specialinvoke r4 < init > $ r3 5", "r5 = gate data store register r0", "r5 fire datastore close r4", "label return z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = gate document format r0", "$ r1 = r2 mime type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = gate gate get creole register", "$ r3 = r0 get class", "$ r4 = $ r3 get name", "$ r5 = $ r2 get $ r4", "r1 = gate creole resource data $ r5", "if r1 == null goto label1", "$ z0 = r1 remove instantiation r0", "if $ z0 == 0 goto label1", "$ r7 = gate factory creole proxy", "$ r6 = new gate event creole event", "specialinvoke $ r6 < init > r0 2", "$ r7 fire resource unload $ r6", "r0 cleanup", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["$ r0 = new gate data store register", "specialinvoke $ r0 < init >", "gate gate data store register = $ r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = gate gate current executable", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r8 = \\ `` \\ ``", "$ z0 = gate gate run on unix", "if $ z0 == 0 goto label1", "r8 = \\ `` \\ ``", "label $ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = java lang system get property \\ `` user home\\ ``", "$ r3 = $ r1 append $ r2", "$ r4 = gate util string get file sep", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 append r8", "$ r7 = $ r6 append \\ `` gate xml\\ ``", "r0 = $ r7 to string", "return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["$ r0 = gate gate plugins home", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = gate gate user config file", "if $ r1 == null goto label1", "$ r2 = new java lang illegal state exception", "specialinvoke $ r2 < init > \\ `` user config file have already be set\\ ``", "throw $ r2", "if $ r1 == null goto label1", "label gate gate user config file = r0", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = gate gate builtin creole dir", "if $ r1 == null goto label1", "$ r2 = new java lang illegal state exception", "specialinvoke $ r2 < init > \\ `` builtin creole dir have already be set\\ ``", "throw $ r2", "if $ r1 == null goto label1", "label gate gate builtin creole dir = r0", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = new java util array list", "specialinvoke r2 < init >", "r3 = gate gui corpus filler component r0", "r3 extension = r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java util array list", "specialinvoke $ r1 < init >", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = gate gui option dialog text component key", "$ r1 = new javax swing plaf font u i resource", "specialinvoke $ r1 < init > r0", "gate gui option dialog set u i default $ r2 $ r1", "$ r3 = gate gui option dialog user config", "$ r3 put \\ `` text_components_font\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = gate gui parameter disjunction r0", "r1 select index = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = gate gui parameter disjunction r0", "$ i0 = r1 select index", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java util hash set", "specialinvoke $ r2 < init >", "gate gui teamware teamware utils populate input set name for controller $ r2 r0 0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r37 = gate gui text attribute chooser r0", "$ r2 = r37 font family combo", "r38 = gate gui text attribute chooser r0", "$ r1 = r38 current style", "$ r3 = javax swing text style constant get font family $ r1", "$ r2 set select item $ r3", "r39 = gate gui text attribute chooser r0", "$ r6 = r39 font size combo", "r36 = new java lang integer", "r40 = gate gui text attribute chooser r0", "$ r5 = r40 current style", "$ i0 = javax swing text style constant get font size $ r5", "specialinvoke r36 < init > $ i0", "$ r7 = r36 to string", "$ r6 set select item $ r7", "r41 = gate gui text attribute chooser r0", "$ r9 = r41 bold chk", "r42 = gate gui text attribute chooser r0", "$ r8 = r42 current style", "$ z0 = javax swing text style constant be bold $ r8", "$ r9 set select $ z0", "r43 = gate gui text attribute chooser r0", "$ r11 = r43 italic chk", "r44 = gate gui text attribute chooser r0", "$ r10 = r44 current style", "$ z1 = javax swing text style constant be italic $ r10", "$ r11 set select $ z1", "r45 = gate gui text attribute chooser r0", "$ r13 = r45 italic chk", "r46 = gate gui text attribute chooser r0", "$ r12 = r46 current style", "$ z2 = javax swing text style constant be italic $ r12", "$ r13 set select $ z2", "r47 = gate gui text attribute chooser r0", "$ r15 = r47 underline chk", "r48 = gate gui text attribute chooser r0", "$ r14 = r48 current style", "$ z3 = javax swing text style constant be underline $ r14", "$ r15 set select $ z3", "r49 = gate gui text attribute chooser r0", "$ r17 = r49 subscript chk", "r50 = gate gui text attribute chooser r0", "$ r16 = r50 current style", "$ z4 = javax swing text style constant be subscript $ r16", "$ r17 set select $ z4", "r51 = gate gui text attribute chooser r0", "$ r19 = r51 superscript chk", "r52 = gate gui text attribute chooser r0", "$ r18 = r52 current style", "$ z5 = javax swing text style constant be superscript $ r18", "$ r19 set select $ z5", "r53 = gate gui text attribute chooser r0", "$ r21 = r53 strikethrough chk", "r54 = gate gui text attribute chooser r0", "$ r20 = r54 current style", "$ z6 = javax swing text style constant be strike through $ r20", "$ r21 set select $ z6", "r55 = gate gui text attribute chooser r0", "$ r23 = r55 current style", "$ r22 = javax swing text style constant foreground", "$ z7 = $ r23 be define $ r22", "if $ z7 == 0 goto label1", "r56 = gate gui text attribute chooser r0", "$ r33 = r56 fg chooser", "r57 = gate gui text attribute chooser r0", "$ r32 = r57 current style", "$ r34 = javax swing text style constant get foreground $ r32", "$ r33 set color $ r34", "r58 = gate gui text attribute chooser r0", "$ r35 = r58 use foreground chk", "$ r35 set select 1", "goto label2", "label r60 = gate gui text attribute chooser r0", "$ r26 = r60 current style", "$ r25 = javax swing text style constant background", "$ z8 = $ r26 be define $ r25", "if $ z8 == 0 goto label3", "r61 = gate gui text attribute chooser r0", "$ r29 = r61 bg chooser", "r62 = gate gui text attribute chooser r0", "$ r28 = r62 current style", "$ r30 = javax swing text style constant get background $ r28", "$ r29 set color $ r30", "r63 = gate gui text attribute chooser r0", "$ r31 = r63 use background chk", "$ r31 set select 1", "goto label4", "label return", "if $ z8 == 0 goto label3", "label r64 = gate gui text attribute chooser r0", "$ r27 = r64 use background chk", "$ r27 set select 0", "if $ z7 == 0 goto label1", "label r59 = gate gui text attribute chooser r0", "$ r24 = r59 use foreground chk", "$ r24 set select 0"], "adj}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = gate html neko html document handler r0", "r2 ignorable tag = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = r1 to string", "i0 = r3 last index of \\ `` ___\\ ``", "r4 = r3 substring 0 i0", "i1 = r4 last index of \\ `` ___\\ ``", "$ r2 = r4 substring 0 i1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = gate swing x j table r0", "$ r1 = r2 sort model", "$ i1 = $ r1 target to source i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = gate util ant packager gapp model r0", "$ r1 = r3 plugin relpaths map", "$ r2 = $ r1 key set", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r14 = gate util ant packager gapp model r0", "r14 finish", "r15 = gate util ant packager gapp model r0", "$ r5 = r15 gapp file u r l", "r1 = gate util file file from u r l $ r5", "r11 = new java io file output stream", "specialinvoke r11 < init > r1", "r12 = new java io buffer output stream", "specialinvoke r12 < init > r11", "r13 = new org jdom output x m l outputter", "$ r9 = org jdom output format get raw format", "specialinvoke r13 < init > $ r9", "r16 = gate util ant packager gapp model r0", "$ r10 = r16 gapp document", "r13 output $ r10 r12", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = gate util ant packager gazetteer list r0", "specialinvoke r2 load", "r3 = gate util ant packager gazetteer list r0", "$ r1 = r3 list name", "$ i0 = lengthof $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = gate util extension file filter r0", "$ r1 = r3 description", "if $ r1 ! = null goto label1", "r4 = gate util extension file filter r0", "$ r2 = r4 to string", "goto label2", "label return $ r2", "if $ r1 ! = null goto label1", "label r5 = gate util extension file filter r0", "$ r2 = r5 description"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = new java io file input stream", "specialinvoke $ r3 < init > r0", "$ l1 = r0 length", "i0 = int $ l1", "r2 = newarray byte [ i0 ]", "$ r3 read r2 0 i0", "$ r3 close", "$ r4 = new java lang string", "specialinvoke $ r4 < init > r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = gate util file get resource a string r0 null", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 add u r l r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = gate util gate class loader r0", "$ r2 = r3 get disposable class loader r1 null 0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = gate util object pool r0", "$ r2 = r5 object", "i0 = $ r2 size", "if i0 < = 0 goto label1", "r6 = gate util object pool r0", "$ r3 = r6 object", "$ i1 = i0 - 1", "r1 = $ r3 element at $ i1", "r7 = gate util object pool r0", "$ r4 = r7 object", "$ i2 = i0 - 1", "$ r4 remove element at $ i2", "return r1", "if i0 < = 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r2 = gate util object writer r0", "$ r1 = r2 input stream", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r7 = gate util option map r0", "$ r3 = r7 get r1", "$ r4 = java lang string $ r3", "$ r5 = java lang double value of $ r4", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = gate util persistence persistence manager persistence file", "$ r1 = $ r0 get", "$ r2 = java util link list $ r1", "$ r3 = $ r2 get first", "$ r4 = java io file $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = gate util profile profiler r0", "$ l1 = r1 m_last check time", "r2 = gate util profile profiler r0", "$ l0 = r2 m_profiler time", "$ l2 = $ l1 - $ l0", "return $ l2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = gate util simple sort set r0", "$ i1 = r2 tsindex", "r3 = gate util simple sort set r0", "$ i0 = r3 size", "if $ i1 < $ i0 goto label1", "return -1l", "if $ i1 < $ i0 goto label1", "label r4 = gate util simple sort set r0", "$ r1 = r4 the array", "r5 = gate util simple sort set r0", "$ i2 = r5 tsindex", "$ l3 = $ r1 [ $ i2 ]", "return $ l3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get content", "$ r2 = $ r1 size", "l0 = $ r2 long value", "$ b1 = l0 cmp 2147483647l", "if $ b1 < = 0 goto label1", "r9 = new gate util gate runtime exception", "r8 = new java lang string builder", "specialinvoke r8 < init >", "$ r5 = r8 append \\ `` length of document too big to be return a an int \\ ``", "$ r6 = $ r5 append l0", "$ r7 = $ r6 to string", "specialinvoke r9 < init > $ r7", "r10 = java lang throwable r9", "throw r10", "if $ b1 < = 0 goto label1", "label $ i2 = int l0", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = gate xml xml position correction handler r0", "$ l0 = r1 m_real offset", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com google googlejavaformat java java input r0", "$ i0 = r1 k n", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com google googlejavaformat java main process args r1", "$ z0 = r2 version", "if $ z0 == 0 goto label1", "r12 = com google googlejavaformat java main r0", "$ r8 = r12 err writer", "$ r9 = com google googlejavaformat java main version string", "$ r8 println $ r9", "return 0", "if $ z0 == 0 goto label1", "label $ z1 = r2 help", "if $ z1 == 0 goto label2", "r11 = new com google googlejavaformat java usage exception", "specialinvoke r11 < init >", "r13 = java lang throwable r11", "throw r13", "if $ z1 == 0 goto label2", "label $ r4 = com google googlejavaformat java java formatter option builder", "$ z2 = r2 aosp", "if $ z2 == 0 goto label3", "$ r10 = com google googlejavaformat java java formatter option $ style aosp", "goto label4", "label $ r5 = $ r4 style $ r10", "$ z3 = r2 format javadoc", "$ r6 = $ r5 format javadoc $ z3", "r3 = $ r6 build", "$ z4 = r2 stdin", "if $ z4 == 0 goto label5", "r14 = com google googlejavaformat java main r0", "$ i1 = r14 format stdin r2 r3", "return $ i1", "if $ z4 == 0 goto label5", "label r15 = com google googlejavaformat java main r0", "$ i0 = r15 format file r2 r3", "return $ i0", "if $ z2 == 0 goto label3", "label $ r10 = com google googlejavaformat java java formatter option $ style google"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [], [37], []]}
{"nodes": ["i0 = @ parameter0", "r12 = @ parameter1", "r0 = @ parameter2", "$ z0 = com google googlejavaformat java string wrapper long line i0 r12", "if $ z0 ! = 0 goto label1", "return r12", "if $ z0 ! = 0 goto label1", "label r13 = com google googlejavaformat java string wrapper get reflow replacement i0 r12", "$ r5 = r13 a map of range", "$ r6 = $ r5 key set", "r1 = r0 format source r12 $ r6", "$ z1 = r1 equal r12", "if $ z1 ! = 0 goto label2", "r12 = r1", "r13 = com google googlejavaformat java string wrapper get reflow replacement i0 r1", "label r2 = com google googlejavaformat java string wrapper apply replacement r12 r13", "$ r7 = com google googlejavaformat java string wrapper parse r12 1", "r3 = $ r7 to string", "$ r8 = com google googlejavaformat java string wrapper parse r2 1", "r4 = $ r8 to string", "$ z2 = r3 equal r4", "if $ z2 ! = 0 goto label3", "r14 = new com google googlejavaformat java formatter exception", "$ r10 = newarray java lang object [ 2 ]", "$ r10 [ 0 ] = r4", "$ r10 [ 1 ] = r3", "$ r11 = java lang string format \\ `` something have go terribly wrong please file a bug http github com google google-java-format issue new\\n\\n=== actual ===\\n % s\\n=== expect ===\\n % s\\n\\", "specialinvoke r14 < init > $ r11", "r15 = java lang throwable r14", "throw r15", "if $ z2 ! = 0 goto label3", "label return r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], []]}
{"nodes": ["r0 = @ this", "r10 = com google googlejavaformat ops builder r0", "$ i0 = r10 last partial format boundary", "if $ i0 ! = -1 goto label1", "r11 = com google googlejavaformat ops builder r0", "$ i7 = r11 token i", "r12 = com google googlejavaformat ops builder r0", "r12 last partial format boundary = $ i7", "return", "if $ i0 ! = -1 goto label1", "label r13 = com google googlejavaformat ops builder r0", "$ i2 = r13 token i", "r14 = com google googlejavaformat ops builder r0", "$ i1 = r14 last partial format boundary", "if $ i2 ! = $ i1 goto label2", "label r15 = com google googlejavaformat ops builder r0", "$ r3 = r15 input", "$ r4 = $ r3 get token", "r16 = com google googlejavaformat ops builder r0", "$ i3 = r16 last partial format boundary", "$ r5 = $ r4 get $ i3", "r1 = com google googlejavaformat input $ token $ r5", "r17 = com google googlejavaformat ops builder r0", "$ r6 = r17 input", "$ r7 = $ r6 get token", "r18 = com google googlejavaformat ops builder r0", "$ i4 = r18 token i", "$ i5 = $ i4 - 1", "$ r8 = $ r7 get $ i5", "r2 = com google googlejavaformat input $ token $ r8", "r19 = com google googlejavaformat ops builder r0", "$ r9 = r19 output", "$ r9 mark for partial format r1 r2", "r20 = com google googlejavaformat ops builder r0", "$ i6 = r20 token i", "r21 = com google googlejavaformat ops builder r0", "r21 last partial format boundary = $ i6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], []]}
{"nodes": ["$ r0 = \\ `` runtime\\ ``", "$ r1 = java lang system get property \\ `` org graalvm nativeimage imagecode\\ ``", "$ z0 = $ r0 equal $ r1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["org graalvm nativeimage image info ensure kind available", "$ r0 = \\ `` shared\\ ``", "$ r1 = java lang system get property \\ `` org graalvm nativeimage kind\\ ``", "$ z0 = $ r0 equal $ r1", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org graalvm nativeimage image singleton lookup class \\ `` lorg graalvm nativeimage impl isolate support \\ ``", "$ r2 = org graalvm nativeimage impl isolate support $ r1", "$ r3 = $ r2 attach current thread r0", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org graalvm option option descriptor r0", "$ r1 = r2 help", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "java util object require non null r0", "java util object require non null r1", "$ r4 = new org graalvm option option descriptor $ builder", "$ r5 = org graalvm option option descriptor empty", "$ r5 get class", "specialinvoke $ r4 < init > $ r5 r0 r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org graalvm polyglot context r0", "$ r1 = r2 impl", "r3 = org graalvm polyglot context r0", "$ r1 explicit enter r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org graalvm polyglot engine r0", "$ r1 = r3 impl", "$ r2 = $ r1 get option", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org graalvm polyglot language r0", "$ r1 = r3 impl", "$ r2 = $ r1 get default mime type", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r2 = org graalvm polyglot management management impl", "r4 = org graalvm polyglot management execution event r0", "$ r1 = r4 impl", "$ r3 = $ r2 get execution event input value $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r2 = org graalvm polyglot management management impl", "r4 = org graalvm polyglot management execution event r0", "$ r1 = r4 impl", "$ r3 = $ r2 get execution event exception $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = new org graalvm polyglot management execution listener $ builder", "$ r1 = org graalvm polyglot management execution listener empty", "$ r1 get class", "specialinvoke $ r0 < init > $ r1", "return $ r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org graalvm polyglot polyglot exception r0", "$ r1 = r3 impl", "$ r2 = $ r1 get message", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org graalvm polyglot polyglot exception r0", "$ r1 = r3 impl", "$ r2 = $ r1 a host exception", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org graalvm polyglot polyglot exception r0", "$ r1 = r2 impl", "$ z0 = $ r1 be cancel", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org graalvm polyglot polyglot exception r0", "$ r1 = r3 impl", "$ r2 = $ r1 get guest object", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org graalvm polyglot source get impl", "r4 = org graalvm polyglot source r0", "$ r2 = r4 impl", "$ r3 = $ r1 get code $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = org graalvm polyglot source get impl", "r3 = org graalvm polyglot source r0", "$ r2 = r3 impl", "$ z0 = $ r1 have bytes $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = org graalvm polyglot source get impl", "r3 = org graalvm polyglot source r0", "$ r2 = r3 impl", "$ i1 = $ r1 get column number $ r2 i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org graalvm polyglot source new builder r0 r1 \\ `` unnamed\\ ``", "$ r3 = $ r2 build literal", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r2 = org graalvm polyglot source section impl", "r3 = org graalvm polyglot source section r0", "$ r1 = r3 impl", "$ z0 = $ r2 be available $ r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r2 = org graalvm polyglot source section impl", "r4 = org graalvm polyglot source section r0", "$ r1 = r4 impl", "$ r3 = $ r2 to string $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org graalvm polyglot value r0", "$ r2 = r3 impl", "r4 = org graalvm polyglot value r0", "$ r1 = r4 receiver", "$ z0 = $ r2 have member $ r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "java util object require non null r1 \\ `` identifier\\ ``", "r5 = org graalvm polyglot value r0", "$ r4 = r5 impl", "r6 = org graalvm polyglot value r0", "$ r3 = r6 receiver", "$ z0 = $ r4 remove member $ r3 r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "java util object require non null r1 \\ `` identifier\\ ``", "r5 = org graalvm polyglot value r0", "$ r4 = r5 impl", "r6 = org graalvm polyglot value r0", "$ r3 = r6 receiver", "$ z0 = $ r4 can invoke r1 $ r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = org graalvm polyglot value r0", "$ r2 = r3 impl", "r4 = org graalvm polyglot value r0", "$ r1 = r4 receiver", "$ z0 = $ r2 be duration $ r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org graalvm word location identity r0", "$ z0 = r2 be any", "if $ z0 ! = 0 goto label1", "$ z1 = r1 be any", "if $ z1 ! = 0 goto label1", "$ z2 = r0 equal r1", "if $ z2 == 0 goto label2", "label $ z3 = 1", "goto label3", "label return $ z3", "if $ z2 == 0 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["$ r0 = org graalvm word impl word box factory box 0l", "$ r1 = org graalvm word pointer base $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ z0 = r0 be empty", "if $ z0 ! = 0 goto label1", "$ r1 = graphql assert valid name pattern", "$ r2 = $ r1 matcher r0", "$ z1 = $ r2 match", "if $ z1 == 0 goto label1", "return r0", "if $ z1 == 0 goto label1", "label r6 = new graphql assert exception", "$ r4 = newarray java lang object [ 1 ]", "$ r4 [ 0 ] = r0", "$ r5 = java lang string format \\ `` name must be non-null non-empty and match [ _ a- za-z ] [ _0-9 a- za-z ] * - be \\ ' % s\\'\\", "specialinvoke r6 < init > $ r5", "r7 = java lang throwable r6", "throw r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = graphql execution data fetcher result r0", "$ r1 = r2 local context", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = graphql execution fetch value r0", "$ r1 = r2 fetch value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = graphql execution reactive completion stage mapping publisher r0", "$ r1 = r2 upstream publisher", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = graphql execution result path root_path", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r30 = new graphql graph q l $ builder", "r31 = graphql graph q l r0", "$ r4 = r31 graph q l schema", "specialinvoke r30 < init > $ r4", "r32 = graphql graph q l r0", "$ r5 = r32 query strategy", "$ r6 = r30 query execution strategy $ r5", "r33 = graphql graph q l r0", "$ r7 = r33 mutation strategy", "$ r8 = $ r6 mutation execution strategy $ r7", "r34 = graphql graph q l r0", "$ r9 = r34 subscription strategy", "$ r10 = $ r8 subscription execution strategy $ r9", "r35 = graphql graph q l r0", "$ r11 = r35 id provider", "$ r12 = java util optional of nullable $ r11", "$ r13 = graphql graph q l $ builder access $ 400 r30", "$ r14 = $ r12 or else $ r13", "$ r15 = graphql execution execution id provider $ r14", "$ r16 = $ r10 execution id provider $ r15", "r36 = graphql graph q l r0", "$ r17 = r36 instrumentation", "$ r18 = java util optional of nullable $ r17", "$ r19 = graphql graph q l $ builder access $ 500 r30", "$ r20 = $ r18 or else $ r19", "$ r21 = graphql execution instrumentation instrumentation $ r20", "$ r22 = $ r16 instrumentation $ r21", "r37 = graphql graph q l r0", "$ r23 = r37 preparsed document provider", "$ r24 = java util optional of nullable $ r23", "$ r25 = graphql graph q l $ builder access $ 600 r30", "$ r26 = $ r24 or else $ r25", "$ r27 = graphql execution preparsed preparsed document provider $ r26", "$ r22 preparsed document provider $ r27", "r1 accept r30", "$ r29 = r30 build", "return $ r29"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], []]}
{"nodes": ["r0 = @ this", "r1 = graphql language directive definition r0", "$ z0 = r1 repeatable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = graphql parse and validate parse r1", "$ z0 = r2 be failure", "if $ z0 ! = 0 goto label1", "$ r4 = r2 get document", "r3 = graphql parse and validate validate r0 $ r4", "$ r5 = parse and validate $ lambda_parse and validate_0__1 bootstrap $ r3", "$ r6 = r2 transform $ r5", "return $ r6", "if $ z0 ! = 0 goto label1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ parameter0", "label r17 = new graphql parser parser", "specialinvoke r17 < init >", "$ r3 = r0 get query", "r1 = r17 parse document $ r3", "$ r4 = graphql parse and validate result new result", "$ r5 = $ r4 document r1", "$ r6 = r0 get variable", "$ r7 = $ r5 variables $ r6", "$ r8 = $ r7 build", "label return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = graphql relay simple list connection r0", "$ r3 = r6 data", "i0 = $ r3 index of r1", "if i0 ! = -1 goto label1", "return null", "if i0 ! = -1 goto label1", "label r7 = graphql relay simple list connection r0", "r2 = specialinvoke r7 create cursor i0", "r5 = new graphql relay default connection cursor", "specialinvoke r5 < init > r2", "r8 = graphql relay connection cursor r5", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new graphql schema async data fetcher", "specialinvoke $ r2 < init > r0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = graphql schema graph q l schema r0", "$ r2 = r5 type map", "$ r3 = $ r2 get r1", "$ r4 = graphql schema graph q l type $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = graphql schema graph q l schema r0", "$ r2 = r4 schema directives", "$ r3 = $ r2 get directive r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = graphql schema graph q l type util be non null r0", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof graphql schema graph q l scalar type", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = graphql schema graph q l type util unwrap all r0", "$ z0 = r1 instanceof graphql schema graph q l scalar type", "if $ z0 ! = 0 goto label1", "$ z1 = r1 instanceof graphql schema graph q l enum type", "if $ z1 ! = 0 goto label1", "$ z2 = r1 instanceof graphql schema graph q l input object type", "if $ z2 == 0 goto label2", "label $ z3 = 1", "goto label3", "label return $ z3", "if $ z2 == 0 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = type runtime wire $ lambda_new type wiring_0__1 bootstrap $", "graphql assert assert not null r0 $ r1", "$ r3 = new graphql schema idl type runtime wire $ builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 type name r0", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ z0 = groovy grape grape enable grape", "return $ z0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r9 = groovy inspect inspector r0", "$ r6 = r9 object under inspection", "r1 = org codehaus groovy runtime invoker helper get meta class $ r6", "r2 = r1 get meta method", "$ i0 = r2 size", "r3 = newarray java lang object [ $ i0 ]", "i1 = 0", "r4 = r2 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label2", "$ r7 = r4 next", "r5 = groovy lang meta method $ r7", "r10 = groovy inspect inspector r0", "$ r8 = r10 method info r5", "r3 [ i1 ] = $ r8", "i1 = i1 + 1", "goto label1", "if $ z0 == 0 goto label2", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org codehaus groovy runtime invoker helper to string r1", "r3 = groovy io groovy print stream r0", "r3 println $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = groovy lang bind r0", "$ r2 = r5 variable", "if null ! = $ r2 goto label1", "return", "if null ! = $ r2 goto label1", "label r6 = groovy lang bind r0", "$ r3 = r6 variable", "$ r3 remove r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["org codehaus groovy runtime metaclass default meta class info set without custom metaclass creation handle 1", "groovy lang expando meta class creation handle disable", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get expando method", "r16 = r2 iterator", "label $ z2 = r16 have next", "if $ z2 == 0 goto label5", "$ r8 = r16 next", "r17 = groovy lang meta method $ r8", "$ z1 = r17 be static", "if $ z1 == 0 goto label3", "$ r9 = r1 get the class", "r20 = groovy lang expando meta class r0", "$ r10 = r20 get the class", "if $ r9 == $ r10 goto label2", "goto label1", "if $ r9 == $ r10 goto label2", "label $ r11 = r17 get name", "$ r12 = org codehaus groovy runtime metaclass closure static meta method r17", "$ r13 = $ r12 get closure", "$ r14 = $ r13 clone", "$ r15 = groovy lang closure $ r14", "r21 = groovy lang expando meta class r0", "r21 register static method $ r11 $ r15", "goto label4", "label goto label1", "if $ z1 == 0 goto label3", "label r22 = groovy lang expando meta class r0", "specialinvoke r22 add super method if not overridden r17", "if $ z2 == 0 goto label5", "label r18 = r1 get expando property", "r19 = r18 iterator", "label $ z0 = r19 have next", "if $ z0 == 0 goto label7", "r3 = r19 next", "r4 = groovy lang meta bean property r3", "r23 = groovy lang expando meta class r0", "$ r5 = r23 expando property", "$ r6 = r4 get name", "$ r5 put $ r6 r4", "r24 = groovy lang expando meta class r0", "r24 add meta bean property r4", "goto label6", "if $ z0 == 0 goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = r1 length", "if $ i0 ! = 0 goto label2", "label return null", "if $ i0 ! = 0 goto label2", "label $ z0 = r1 start with \\ `` set\\ ``", "if $ z0 == 0 goto label3", "r2 = r1 substring 3", "$ r3 = org codehaus groovy runtime meta class helper convert property name r2", "return $ r3", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "z1 = @ parameter2", "z2 = @ parameter3", "r33 = groovy lang groovy class loader r0", "r18 = r33 get class cache entry r1", "r34 = groovy lang groovy class loader r0", "z3 = r34 be recompilable r18", "if z3 ! = 0 goto label01", "return r18", "if z3 ! = 0 goto label01", "label r19 = null", "label r20 = specialinvoke r0 load class r1 z2", "if r18 == r20 goto label04", "label return r20", "if r18 == r20 goto label04", "label goto label08", "label r23 = java lang system get security manager", "if r23 == null goto label09", "r24 = r1 replace 47 46", "i1 = r24 last index of 46", "if i1 == -1 goto label09", "$ z4 = r24 start with \\ `` sun reflect \\ ``", "if $ z4 ! = 0 goto label09", "$ r6 = r24 substring 0 i1", "r23 check package access $ r6", "label if r18 == null goto label10", "if z1 == 0 goto label10", "label if z0 == 0 goto label25", "label r35 = groovy lang groovy class loader r0", "r25 = r35 get class cache entry r1", "if r25 == r18 goto label15", "label if r18 ! = null goto label13", "r36 = groovy lang groovy class loader r0", "r36 remove class cache entry r1", "goto label14", "label return r25", "label if r18 ! = null goto label13", "label r37 = groovy lang groovy class loader r0", "r37 set class cache entry r18", "if r25 == r18 goto label15", "label r38 = groovy lang groovy class loader r0", "$ r5 = r38 resource loader", "r27 = $ r5 load groovy source r1", "r2 = r18", "r18 = null", "r39 = groovy lang groovy class loader r0", "r18 = r39 recompile r27 r1 r2", "label if r18 ! = null goto label17", "r40 = groovy lang groovy class loader r0", "r40 remove class cache entry r1", "goto label25", "label if r18 ! = null goto label27", "if r19 ! = null goto label26", "r32 = new java lang assertion error", "specialinvoke r32 < init > 1", "throw r32", "if r19 ! = null goto label26", "label throw r19", "label if r18 ! = null goto label27", "label return r18", "label if r18 ! = null goto label17", "label r41 = groovy lang groovy class loader r0", "r41 set class cache entry r18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [], [54], [55], [56], [57], [], [59], [60], [61], [62], [63], [64], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ l0 = org codehaus groovy classgen verifier get timestamp r1", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r6 = groovy shell $ lambda_run_3__2 bootstrap $ r1 r2", "$ r7 = java security access controller do privilege $ r6", "r4 = groovy lang groovy code source $ r7", "r9 = groovy lang groovy shell r0", "r5 = specialinvoke r9 parse class r4", "r10 = groovy lang groovy shell r0", "$ r8 = specialinvoke r10 run script or main or test or runnable r5 r3", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = new groovy lang read only property exception", "$ r4 = r1 get class", "specialinvoke r5 < init > \\ `` length\\", "r6 = java lang throwable r5", "throw r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = groovy lang meta bean property r0", "$ r1 = r2 setter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = groovy lang meta class registry change event r0", "$ r1 = r3 source", "$ r2 = groovy lang meta class registry $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = groovy lang meta method r0", "$ i0 = r1 get modifier", "$ i1 = $ i0 & 2", "if $ i1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = groovy ui groovy main search for groovy script file r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = groovy util charset toolkit r0", "$ r1 = r2 default charset", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = groovy util charset toolkit r0", "$ r1 = r4 buffer", "$ i0 = lengthof $ r1", "if $ i0 < 2 goto label3", "r5 = groovy util charset toolkit r0", "$ r2 = r5 buffer", "$ b1 = $ r2 [ 0 ]", "if $ b1 ! = -2 goto label1", "r6 = groovy util charset toolkit r0", "$ r3 = r6 buffer", "$ b2 = $ r3 [ 1 ]", "if $ b2 ! = -1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b2 ! = -1 goto label1", "label $ z0 = 0", "if $ i0 < 2 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = groovy util eval me null null r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r19 = groovy util factory builder support r0", "$ r4 = r19 get proxy builder", "$ r5 = specialinvoke $ r4 do get property r1", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = groovy util factory builder support r0", "$ r2 = r4 get proxy builder", "$ r3 = $ r2 invoke method r1 null", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = groovy util factory builder support r0", "$ r2 = r4 get proxy builder", "$ r3 = $ r2 attribute delegate", "$ r3 add first r1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = groovy util factory builder support r0", "$ r2 = r4 get proxy builder", "$ r3 = $ r2 attribute delegate", "$ r3 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r10 = groovy util factory builder support r0", "$ r5 = r10 get proxy builder", "$ r6 = $ r5 get post node completion delegate", "r3 = $ r6 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r7 = r3 next", "r4 = groovy lang closure $ r7", "$ r8 = newarray java lang object [ 3 ]", "$ r8 [ 0 ] = r0", "$ r8 [ 1 ] = r1", "$ r8 [ 2 ] = r2", "r4 call $ r8", "goto label1", "if $ z0 == 0 goto label2", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r11 = groovy util factory builder support r0", "$ r6 = r11 get proxy builder", "$ r7 = $ r6 get pre instantiate delegate", "r4 = $ r7 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label2", "$ r8 = r4 next", "r5 = groovy lang closure $ r8", "$ r9 = newarray java lang object [ 3 ]", "$ r9 [ 0 ] = r0", "$ r9 [ 1 ] = r2", "$ r9 [ 2 ] = r3", "r5 call $ r9", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java util array a list r0", "$ r2 = groovy util groovy collection transpose $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof groovy util object graph builder $ identifier resolver", "if $ z0 == 0 goto label1", "$ r6 = groovy util object graph builder $ identifier resolver r1", "r8 = groovy util object graph builder r0", "r8 identifier resolver = $ r6", "goto label4", "label return", "if $ z0 == 0 goto label1", "label $ z1 = r1 instanceof java lang string", "if $ z1 == 0 goto label2", "$ r5 = object graph builder $ lambda_set identifier resolver_3__6 bootstrap $ r1", "r9 = groovy util object graph builder r0", "r9 identifier resolver = $ r5", "if $ z1 == 0 goto label2", "label $ z2 = r1 instanceof groovy lang closure", "if $ z2 == 0 goto label3", "r10 = groovy util object graph builder r0", "$ r4 = object graph builder $ lambda_set identifier resolver_4__1 bootstrap $ r1 r10", "r11 = groovy util object graph builder r0", "r11 identifier resolver = $ r4", "if $ z2 == 0 goto label3", "label r7 = new groovy util object graph builder $ default identifier resolver", "specialinvoke r7 < init >", "r12 = groovy util object graph builder r0", "r13 = groovy util object graph builder $ identifier resolver r7", "r12 identifier resolver = r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = groovy util proxy r0", "r2 set adaptee r1", "r3 = groovy util proxy r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 redirect", "$ r2 = $ r1 get out class", "if $ r2 == null goto label1", "$ i0 = r0 get modifier", "$ z0 = java lang reflect modifier be static $ i0", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = new java lang string builder", "$ r4 = r0 get name", "$ i0 = $ r4 length", "$ r5 = r0 get parameter", "$ i1 = lengthof $ r5", "$ i2 = $ i1 * 10", "$ i3 = $ i0 + $ i2", "specialinvoke $ r3 < init > $ i3", "$ r6 = r0 get return type", "$ r7 = $ r6 get name", "$ r3 append $ r7", "$ r3 append 32", "$ r10 = r0 get name", "$ r3 append $ r10", "$ r3 append 40", "i5 = 0", "label $ r13 = r0 get parameter", "$ i4 = lengthof $ r13", "if i5 > = $ i4 goto label3", "if i5 < = 0 goto label2", "$ r3 append \\", "label $ r16 = r0 get parameter", "r2 = $ r16 [ i5 ]", "$ r17 = r2 get type", "$ r18 = org apache groovy ast tool class node utils format type name $ r17", "$ r3 append $ r18", "i5 = i5 + 1", "goto label1", "if i5 > = $ i4 goto label3", "label $ r3 append 41", "$ r15 = $ r3 to string", "return $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = java lang string r1", "$ r3 = org apache groovy plugin groovy runner r2", "r6 = org apache groovy plugin groovy runner registry r0", "$ r5 = r6 put $ r4 $ r3", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map r0", "$ r1 = r2 capacity", "$ l0 = $ r1 get", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map check not null r1", "org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map check not null r2", "r22 = org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map r0", "$ r7 = r22 weigher", "i0 = $ r7 weight of r1 r2", "r18 = new org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map $ weighted value", "specialinvoke r18 < init > r2 i0", "r19 = new org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map $ node", "specialinvoke r19 < init > r1 r18", "label r23 = org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map r0", "$ r11 = r23 data", "$ r10 = r19 key", "$ r12 = $ r11 put if absent $ r10 r19", "r5 = org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map $ node $ r12", "if r5 ! = null goto label2", "r20 = new org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map $ add task", "r24 = org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map r0", "specialinvoke r20 < init > r24 r19 i0", "r25 = org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map r0", "r26 = java lang runnable r20", "r25 after write r26", "return null", "if r5 ! = null goto label2", "label if z0 == 0 goto label3", "r27 = org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map r0", "r27 after read r5", "$ r16 = r5 get value", "return $ r16", "label if z0 == 0 goto label3", "label $ r13 = r5 get", "r6 = org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map $ weight value $ r13", "$ z1 = r6 be alive", "if $ z1 ! = 0 goto label4", "goto label8", "label goto label1", "if $ z1 ! = 0 goto label4", "label $ z2 = r5 compare and set r6 r18", "if $ z2 == 0 goto label7", "$ i2 = r6 weight", "i1 = i0 - $ i2", "if i1 ! = 0 goto label5", "r28 = org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map r0", "r28 after read r5", "goto label6", "label $ r15 = r6 value", "return $ r15", "if i1 ! = 0 goto label5", "label r21 = new org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map $ update task", "r29 = org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map r0", "specialinvoke r21 < init > r29 r5 i1", "r30 = org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map r0", "r31 = java lang runnable r21", "r30 after write r31", "if $ z2 == 0 goto label7", "label goto label3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], [46], [47], [], [49], [], [51], [52], [53], [54], [55], [56], [57], [58], []]}
{"nodes": ["r0 = @ this", "r1 = org codehaus groovy ast annotate node r0", "$ z0 = r1 synthetic", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r3 = @ parameter0", "r4 = r3 redirect", "$ z0 = org codehaus groovy ast class helper be primitive type r4", "if $ z0 ! = 0 goto label1", "return r4", "if $ z0 ! = 0 goto label1", "label $ r1 = org codehaus groovy ast class helper primitive_type_to_wrapper_type_map", "$ r2 = $ r1 get r4", "r0 = org codehaus groovy ast class node $ r2", "if null == r0 goto label2", "return r0", "if null == r0 goto label2", "label return r4"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org codehaus groovy classgen asm util type util be primitive type r0", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org codehaus groovy ast class node r0", "$ r2 = r9 redirect", "if $ r2 == null goto label1", "r10 = org codehaus groovy ast class node r0", "$ r6 = r10 redirect", "$ r7 = $ r6 get declare field r1", "return $ r7", "if $ r2 == null goto label1", "label r11 = org codehaus groovy ast class node r0", "specialinvoke r11 lazy class init", "r12 = org codehaus groovy ast class node r0", "$ r3 = r12 field index", "if $ r3 ! = null goto label2", "$ r8 = null", "goto label3", "label return $ r8", "if $ r3 ! = null goto label2", "label r13 = org codehaus groovy ast class node r0", "$ r4 = r13 field index", "$ r5 = $ r4 get r1", "$ r8 = org codehaus groovy ast field node $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org codehaus groovy ast class node r0", "$ r2 = r3 get object initializer statement", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus groovy ast expr closure expression r0", "$ r1 = r2 code", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org codehaus groovy ast expr method call expression r0", "$ r2 = r5 method", "$ z0 = $ r2 instanceof org codehaus groovy ast expr constant expression", "if $ z0 ! = 0 goto label1", "return null", "if $ z0 ! = 0 goto label1", "label r6 = org codehaus groovy ast expr method call expression r0", "$ r3 = r6 method", "r1 = org codehaus groovy ast expr constant expression $ r3", "$ r4 = r1 get text", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org codehaus groovy ast expr variable expression r0", "r1 closure share = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r22 = org codehaus groovy ast method node r0", "$ r4 = r22 return type", "r1 = org codehaus groovy ast ast to text helper get class text $ r4", "r23 = org codehaus groovy ast method node r0", "$ r5 = r23 exception", "r2 = org codehaus groovy ast ast to text helper get throw clause text $ r5", "r24 = org codehaus groovy ast method node r0", "$ r6 = r24 parameter", "r3 = org codehaus groovy ast ast to text helper get parameter text $ r6", "r21 = new java lang string builder", "specialinvoke r21 < init >", "r25 = org codehaus groovy ast method node r0", "$ i0 = r25 modifier", "$ r8 = org codehaus groovy ast ast to text helper get modifier text $ i0", "$ r9 = r21 append $ r8", "$ r10 = $ r9 append \\ `` \\ ``", "$ r11 = $ r10 append r1", "$ r12 = $ r11 append \\ `` \\ ``", "r26 = org codehaus groovy ast method node r0", "$ r13 = r26 name", "$ r14 = $ r12 append $ r13", "$ r15 = $ r14 append \\ `` \\ ``", "$ r16 = $ r15 append r3", "$ r17 = $ r16 append \\ `` \\ ``", "$ r18 = $ r17 append r2", "$ r19 = $ r18 append \\ `` { } \\ ``", "$ r20 = $ r19 to string", "return $ r20"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 get maximum number of parameter", "if $ i0 == 1 goto label1", "return 0", "if $ i0 == 1 goto label1", "label $ r2 = r0 get parameter type", "$ r3 = $ r2 [ 0 ]", "r1 = $ r3 get name", "$ z0 = r1 equal \\ `` char\\ ``", "if $ z0 ! = 0 goto label2", "$ z1 = r1 equal \\ `` java lang character\\ ``", "if $ z1 == 0 goto label3", "label $ z2 = 1", "goto label4", "label return $ z2", "if $ z1 == 0 goto label3", "label $ z2 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "r15 = null", "$ r7 = r0 get generic type", "if null ! = $ r7 goto label1", "return null", "if null ! = $ r7 goto label1", "label r2 = r0 get generic type", "$ r8 = new java util link list", "$ r9 = org codehaus groovy ast tool generic utils get all super class and interface r1", "specialinvoke $ r8 < init > $ r9", "$ r8 add 0 r1", "$ r10 = new java util link list", "specialinvoke $ r10 < init >", "r5 = $ r8 iterator", "label $ z5 = r5 have next", "if $ z5 == 0 goto label7", "$ r12 = r5 next", "r6 = org codehaus groovy ast class node $ r12", "if r6 ! = r0 goto label3", "goto label2", "if r6 ! = r0 goto label3", "label if z0 == 0 goto label4", "$ r14 = r6 get generic type", "if null == $ r14 goto label4", "$ z3 = org codehaus groovy ast tool generic utils have non place holder r6", "if $ z3 == 0 goto label4", "$ r10 add r6", "label $ r16 = r6 redirect", "$ z6 = r0 equal $ r16", "if $ z6 ! = 0 goto label5", "label $ r13 = r6 get generic type", "$ z2 = org codehaus groovy ast tool generic utils be generic type array length equal r2 $ r13", "if $ z2 == 0 goto label6", "r15 = r6", "goto label7", "label if null ! = r15 goto label8", "$ z1 = $ r10 be empty", "if $ z1 ! = 0 goto label8", "$ r11 = $ r10 get last", "r15 = org codehaus groovy ast class node $ r11", "label return r15", "if $ z2 == 0 goto label6", "label goto label2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], [39], [40], [41], [42], [43], [44], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = generic utils $ lambda_has non place holders_1__4 bootstrap $", "$ z0 = org codehaus groovy ast tool generic utils check place holder r0 $ r1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i1 = @ parameter0", "z0 = @ parameter1", "i2 = i1 - 280", "if i2 < 0 goto label1", "if i2 < = 2 goto label2", "label return 0", "if i2 < = 2 goto label2", "label if z0 ! = 0 goto label3", "r6 = org codehaus groovy classgen asm binary expression writer r0", "i0 = r6 get shift operation bytecode i2", "r7 = org codehaus groovy classgen asm binary expression writer r0", "$ r1 = r7 controller", "$ r2 = $ r1 get method visitor", "$ r2 visit insn i0", "r8 = org codehaus groovy classgen asm binary expression writer r0", "$ r3 = r8 controller", "$ r4 = $ r3 get operand stack", "r9 = org codehaus groovy classgen asm binary expression writer r0", "$ r5 = r9 get normal op result type", "$ r4 replace $ r5 2", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r4 = org codehaus groovy classgen asm compile stack r0", "r4 push state", "r3 = new groovyjarjarasm asm label", "specialinvoke r3 < init >", "r5 = org codehaus groovy classgen asm compile stack r0", "r5 break label = r3", "r6 = org codehaus groovy classgen asm compile stack r0", "$ r2 = r6 break label", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 start with \\ `` this $ \\ ``", "if $ z0 ! = 0 goto label1", "$ z2 = r0 start with \\ `` super $ \\ ``", "if $ z2 == 0 goto label2", "label $ z1 = r0 contain \\ `` $ dist $ \\ ``", "if $ z1 ! = 0 goto label2", "$ z3 = 1", "goto label3", "label return $ z3", "if $ z1 ! = 0 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r6 = org codehaus groovy classgen asm class generator r0", "$ z0 = specialinvoke r6 be inner class", "if $ z0 == 0 goto label1", "r5 = new org codehaus groovy ast expr field expression", "r7 = org codehaus groovy classgen asm class generator r0", "$ r2 = r7 controller", "$ r3 = $ r2 get class node", "$ r4 = $ r3 get declare field \\ `` owner\\ ``", "specialinvoke r5 < init > $ r4", "r8 = org codehaus groovy classgen asm class generator r0", "r8 visit field expression r5", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r9 = org codehaus groovy classgen asm class generator r0", "specialinvoke r9 load this null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["i0 = @ parameter0", "r0 = org codehaus groovy control compile phase value", "i1 = lengthof r0", "i3 = 0", "label if i3 > = i1 goto label3", "r1 = r0 [ i3 ]", "$ i2 = r1 phase number", "if $ i2 ! = i0 goto label2", "return r1", "if $ i2 ! = i0 goto label2", "label i3 = i3 + 1", "goto label1", "label if i3 > = i1 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r4 = new java io print writer", "$ r3 = org codehaus groovy control io null writer default", "r5 = java io writer $ r3", "specialinvoke r4 < init > r5", "r6 = org codehaus groovy control compiler configuration r0", "r6 output = r4", "goto label2", "label return", "if r1 ! = null goto label1", "label r7 = org codehaus groovy control compiler configuration r0", "r7 output = r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org codehaus groovy control compiler configuration r0", "r2 script base class = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org codehaus groovy control compiler configuration r0", "r1 preview feature = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r8 = org codehaus groovy control compiler configuration r0", "$ r2 = r8 get optimization option", "$ r3 = $ r2 get \\ `` groovydoc\\ ``", "r1 = java lang boolean $ r3", "$ r4 = java util optional of nullable r1", "$ r5 = java lang boolean false", "$ r6 = $ r4 or else $ r5", "$ r7 = java lang boolean $ r6", "$ z0 = $ r7 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org codehaus groovy control error collector r0", "r5 add error and continue r1", "r6 = org codehaus groovy control error collector r0", "$ r2 = r6 error", "if $ r2 == null goto label1", "r7 = org codehaus groovy control error collector r0", "$ r3 = r7 error", "$ i0 = $ r3 size", "r8 = org codehaus groovy control error collector r0", "$ r4 = r8 configuration", "$ i1 = $ r4 get tolerance", "if $ i0 < $ i1 goto label1", "r9 = org codehaus groovy control error collector r0", "r9 fail if error", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus groovy control error collector r0", "$ z0 = r2 have warning", "if $ z0 == 0 goto label1", "r3 = org codehaus groovy control error collector r0", "$ r1 = r3 warning", "$ i0 = $ r1 size", "goto label2", "label return $ i0", "if $ z0 == 0 goto label1", "label $ i0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus groovy control error collector r0", "$ r1 = r2 warning", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "if i0 > i1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if i0 > i1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org codehaus groovy control process unit r0", "r2 set configuration r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org codehaus groovy control process unit r0", "$ i0 = r1 phase", "$ i1 = $ i0 + 1", "r2 = org codehaus groovy control process unit r0", "r2 goto phase $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r1 = @ parameter2", "r25 = null", "r29 = org codehaus groovy control source unit r0", "$ r4 = r29 source", "r2 = $ r4 get line i0 r1", "if r2 == null goto label6", "if i1 < = 0 goto label5", "r26 = new java lang string builder", "specialinvoke r26 < init >", "$ i4 = i1 - 1", "$ r6 = org codehaus groovy tool utility repeat string \\ `` \\", "$ r7 = r26 append $ r6", "$ r8 = $ r7 append \\ `` ^\\ ``", "r3 = $ r8 to string", "if i1 < = 40 goto label3", "$ i5 = i1 - 30", "i2 = $ i5 - 1", "$ i6 = i1 + 10", "$ i7 = r2 length", "if $ i6 < = $ i7 goto label1", "$ i9 = r2 length", "goto label2", "label r27 = new java lang string builder", "specialinvoke r27 < init >", "$ r17 = r27 append \\ `` \\ ``", "$ r18 = r2 substring i2 $ i9", "$ r19 = $ r17 append $ r18", "$ r20 = org codehaus groovy tool utility eol", "$ r21 = $ r19 append $ r20", "$ r22 = $ r21 append \\ `` \\ ``", "$ r23 = r3 substring i2", "$ r24 = $ r22 append $ r23", "r25 = $ r24 to string", "goto label4", "label goto label6", "label return r25", "if $ i6 < = $ i7 goto label1", "label $ i8 = i1 + 10", "$ i9 = $ i8 - 1", "if i1 < = 40 goto label3", "label r28 = new java lang string builder", "specialinvoke r28 < init >", "$ r10 = r28 append \\ `` \\ ``", "$ r11 = $ r10 append r2", "$ r12 = org codehaus groovy tool utility eol", "$ r13 = $ r11 append $ r12", "$ r14 = $ r13 append \\ `` \\ ``", "$ r15 = $ r14 append r3", "r25 = $ r15 to string", "if i1 < = 0 goto label5", "label r25 = r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], []]}
{"nodes": ["r0 = @ this", "r15 = org codehaus groovy groovy bug error r0", "$ r1 = r15 message", "if $ r1 == null goto label1", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r9 = r13 append \\ `` bug ! \\ ``", "r16 = org codehaus groovy groovy bug error r0", "$ r10 = r16 message", "$ r11 = $ r9 append $ r10", "$ r12 = $ r11 to string", "return $ r12", "if $ r1 == null goto label1", "label r14 = new java lang string builder", "specialinvoke r14 < init >", "$ r3 = r14 append \\ `` bug ! uncaught exception \\ ``", "r17 = org codehaus groovy groovy bug error r0", "$ r4 = r17 exception", "$ r5 = $ r4 get message", "$ r6 = $ r3 append $ r5", "$ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "r1 = java lang management management factory get thread m x bean", "$ r2 = r1 dump all thread 1 1", "$ r3 = java util array stream $ r2", "$ r4 = default groovy static method $ to string__1 bootstrap $", "$ r5 = $ r3 map $ r4", "$ r6 = java util stream collector join \\ `` \\ ``", "$ r7 = $ r5 collect $ r6", "$ r8 = java lang string $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["$ i0 = org codehaus groovy runtime groovy category support category in use", "if $ i0 ! = 0 goto label1", "return 0", "if $ i0 ! = 0 goto label1", "label $ r1 = org codehaus groovy runtime groovy category support thread_info", "r0 = $ r1 get info nullable", "if r0 == null goto label2", "$ i1 = r0 level", "if $ i1 == 0 goto label2", "$ z0 = 1", "goto label3", "label return $ z0", "if $ i1 == 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r0 write r1", "r0 flush", "return r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org codehaus groovy runtime i o groovy method new object output stream r0", "$ r3 = org codehaus groovy runtime i o groovy method with stream $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new java io output stream writer", "specialinvoke $ r2 < init > r0", "$ r3 = org codehaus groovy runtime i o groovy method with writer $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org codehaus groovy runtime memoize unlimited concurrent cache r0", "$ r3 = r5 map", "$ r4 = $ r3 put r1 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["z0 = @ parameter0", "org codehaus groovy runtime metaclass default meta class info orig double = z0", "$ z1 = org codehaus groovy runtime metaclass default meta class info without custom handle", "if $ z1 == 0 goto label1", "$ z2 = org codehaus groovy runtime metaclass default meta class info orig double", "if $ z2 == 0 goto label1", "$ z3 = 1", "goto label2", "label org codehaus groovy runtime metaclass default meta class info orig double res = $ z3", "return", "if $ z2 == 0 goto label1", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r4 = new java lang illegal argument exception", "specialinvoke r4 < init > \\ `` can not set meta class creation handle to null value ! \\ ``", "throw r4", "if r1 ! = null goto label1", "label org codehaus groovy reflection class info clear modify expandos", "r5 = org codehaus groovy runtime metaclass meta class registry impl r0", "$ r2 = r5 meta class creation handle", "$ z0 = $ r2 be disable custom meta class lookup", "r1 set disable custom meta class lookup $ z0", "r6 = org codehaus groovy runtime metaclass meta class registry impl r0", "r6 meta class creation handle = r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 instanceof groovy lang groovy object", "if $ z0 == 0 goto label1", "$ r2 = groovy lang groovy object r0", "org codehaus groovy runtime default groovy method set meta class $ r2 r1", "goto label2", "label return", "if $ z0 == 0 goto label1", "label org codehaus groovy runtime default groovy method set meta class r0 r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r7 = org codehaus groovy runtime method key r0", "i0 = r7 get parameter count", "r1 = newarray java lang class [ i0 ]", "i1 = 0", "label if i1 > = i0 goto label2", "r8 = org codehaus groovy runtime method key r0", "$ r5 = r8 get parameter type i1", "r1 [ i1 ] = $ r5", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label r6 = new org codehaus groovy runtime default method key", "r9 = org codehaus groovy runtime method key r0", "$ r4 = r9 sender", "r10 = org codehaus groovy runtime method key r0", "$ r3 = r10 name", "r11 = org codehaus groovy runtime method key r0", "$ z0 = r11 be call to super", "specialinvoke r6 < init > $ r4 $ r3 r1 $ z0", "r12 = org codehaus groovy runtime method key r6", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r4 = r0 get constructor", "r2 = org codehaus groovy runtime method rank helper rank constructor r1 $ r4", "$ i0 = lengthof r2", "if $ i0 < = 0 goto label4", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ r5 append \\ `` \\n possible solution \\ ``", "i2 = 0", "label $ i1 = lengthof r2", "if i2 > = $ i1 goto label3", "if i2 == 0 goto label2", "$ r5 append \\", "label $ r8 = r0 get name", "$ r9 = $ r5 append $ r8", "$ r9 append \\ `` \\ ``", "$ r11 = r2 [ i2 ]", "$ r12 = $ r11 get parameter type", "$ r13 = org codehaus groovy runtime method rank helper list parameter names $ r12", "$ r5 append $ r13", "$ r5 append \\ `` \\ ``", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label3", "label $ r7 = $ r5 to string", "return $ r7", "if $ i0 < = 0 goto label4", "label return \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [], [28], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java io buffer reader", "$ r3 = new java io input stream reader", "$ r4 = r0 get input stream", "specialinvoke $ r3 < init > $ r4", "specialinvoke $ r2 < init > $ r3", "r1 = org codehaus groovy runtime i o groovy method get text $ r2", "org codehaus groovy runtime process groovy method close stream r0", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new java lang thread", "$ r3 = process groovy method $ lambda_with output stream_1__2 bootstrap $ r0 r1", "specialinvoke $ r2 < init > $ r3", "$ r2 start", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus groovy runtime resource groovy method new reader r0", "$ r2 = org codehaus groovy runtime i o groovy method read line $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus groovy runtime resource groovy method new reader r0", "$ r2 = org codehaus groovy runtime i o groovy method read line $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus groovy runtime resource groovy method new reader r0", "$ r2 = org codehaus groovy runtime i o groovy method get text $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "z0 = @ parameter3", "org codehaus groovy runtime resource groovy method append buffer r0 r1 r2 z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java io data output stream", "$ r2 = new java io file output stream", "specialinvoke $ r2 < init > r0", "specialinvoke $ r1 < init > $ r2", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org codehaus groovy runtime resource groovy method new writer r0", "$ r3 = org codehaus groovy runtime i o groovy method with writer $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org codehaus groovy runtime resource groovy method new writer r0 r1 1", "$ r4 = org codehaus groovy runtime i o groovy method with writer $ r3 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r4 = @ parameter0", "r0 = @ parameter1", "if r4 ! = null goto label1", "r4 = org codehaus groovy runtime null object get null object", "label $ r1 = r4 get class", "$ r2 = newarray java lang object [ 1 ]", "$ r2 [ 0 ] = r0", "$ r3 = org codehaus groovy runtime script bytecode adapter invoke method n $ r1 r4 \\ `` a type\\", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus groovy runtime stack trace utils extract root cause r0", "$ r2 = org codehaus groovy runtime stack trace utils sanitize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = null", "r4 = org codehaus groovy syntax reduction r0", "$ i1 = r4 size", "if i0 > = $ i1 goto label1", "r5 = org codehaus groovy syntax reduction r0", "$ r1 = r5 element", "$ r2 = $ r1 get i0", "r3 = org codehaus groovy syntax c s t node $ r2", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > = 1 goto label1", "r5 = new org codehaus groovy groovy bug error", "specialinvoke r5 < init > \\ `` attempt to remove root node of reduction\\ ``", "r6 = java lang throwable r5", "throw r6", "if i0 > = 1 goto label1", "label r7 = org codehaus groovy syntax reduction r0", "$ r1 = r7 element", "$ r2 = $ r1 remove i0", "$ r3 = org codehaus groovy syntax c s t node $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "i2 = @ parameter2", "$ r0 = new org codehaus groovy syntax token", "$ r1 = org codehaus groovy syntax type get text i0", "specialinvoke $ r0 < init > i0 $ r1 i1 i2", "return $ r0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r11 = new org codehaus groovy control compilation unit", "r13 = org codehaus groovy tool compiler r0", "$ r5 = r13 configuration", "specialinvoke r11 < init > $ r5", "r12 = new org codehaus groovy control source unit", "r14 = org codehaus groovy tool compiler r0", "$ r7 = r14 configuration", "$ r8 = r11 get class loader", "$ r9 = r11 get error collector", "specialinvoke r12 < init > r1 r2 $ r7 $ r8 $ r9", "r11 add source r12", "r11 compile", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r57 = new java io buffer reader", "r56 = new java io input stream reader", "specialinvoke r56 < init > r1", "specialinvoke r57 < init > r56", "label i6 = 0", "label r47 = r57 read line", "if r47 ! = null goto label03", "goto label12", "label r57 close", "goto label18", "label r68 = org codehaus groovy tool loader configuration r0", "$ z8 = r68 require main", "if $ z8 == 0 goto label19", "r69 = org codehaus groovy tool loader configuration r0", "$ r43 = r69 main", "if $ r43 ! = null goto label19", "r62 = new java io i o exception", "specialinvoke r62 < init > \\ `` miss main class definition in config file\\ ``", "throw r62", "if $ r43 ! = null goto label19", "label r70 = org codehaus groovy tool loader configuration r0", "$ r39 = r70 config script", "$ z9 = $ r39 be empty", "if $ z9 ! = 0 goto label20", "r71 = org codehaus groovy tool loader configuration r0", "$ r40 = r71 config script", "$ r41 = org codehaus groovy runtime default groovy method join $ r40 \\", "java lang system set property \\ `` groovy starter configscripts\\", "label return", "if r47 ! = null goto label03", "label r48 = r47 trim", "i6 = i6 + 1", "$ z0 = r48 start with \\ `` #\\ ``", "if $ z0 ! = 0 goto label02", "$ i0 = r48 length", "if $ i0 ! = 0 goto label04", "goto label02", "if $ i0 ! = 0 goto label04", "label $ z1 = r48 start with \\ `` load\\ ``", "if $ z1 == 0 goto label05", "$ r37 = \\ `` load\\ ``", "$ i5 = $ r37 length", "$ r38 = r48 substring $ i5", "r49 = $ r38 trim", "r50 = org codehaus groovy tool loader configuration assign property r49", "r63 = org codehaus groovy tool loader configuration r0", "specialinvoke r63 load filter path r50", "goto label11", "label goto label02", "if $ z1 == 0 goto label05", "label $ z2 = r48 start with \\ `` grab\\ ``", "if $ z2 == 0 goto label06", "$ r33 = \\ `` grab\\ ``", "$ i4 = $ r33 length", "$ r34 = r48 substring $ i4", "r51 = $ r34 trim", "r64 = org codehaus groovy tool loader configuration r0", "$ r35 = r64 grab list", "$ r36 = org codehaus groovy tool loader configuration assign property r51", "$ r35 add $ r36", "if $ z2 == 0 goto label06", "label $ z3 = r48 start with \\ `` main is\\ ``", "if $ z3 == 0 goto label08", "r65 = org codehaus groovy tool loader configuration r0", "$ r22 = r65 main", "if $ r22 == null goto label07", "r59 = new java io i o exception", "r58 = new java lang string builder", "specialinvoke r58 < init >", "$ r28 = r58 append \\ `` duplicate definition of main in line \\ ``", "$ r29 = $ r28 append i6", "$ r30 = $ r29 append \\ `` \\ ``", "$ r31 = $ r30 append r48", "$ r32 = $ r31 to string", "specialinvoke r59 < init > $ r32", "throw r59", "if $ r22 == null goto label07", "label $ r23 = \\ `` main is\\ ``", "$ i3 = $ r23 length", "$ r24 = r48 substring $ i3", "$ r25 = $ r24 trim", "r66 = org codehaus groovy tool loader configuration r0", "r66 main = $ r25", "if $ z3 == 0 goto label08", "label $ z4 = r48 start with \\ `` property\\ ``", "if $ z4 == 0 goto label09", "$ r17 = \\ `` property\\ ``", "$ i2 = $ r17 length", "$ r18 = r48 substring $ i2", "r52 = $ r18 trim", "r3 = org apache groovy util system util set system property from r52", "$ r19 = java lang system get property r3", "$ r20 = org codehaus groovy tool loader configuration assign property $ r19", "java lang system set property r3 $ r20", "if $ z4 == 0 goto label09", "label $ z5 = r48 start with \\ `` configscript\\ ``", "if $ z5 == 0 goto label10", "$ r13 = \\ `` configscript\\ ``", "$ i1 = $ r13 length", "$ r14 = r48 substring $ i1", "r53 = $ r14 trim", "r67 = org codehaus groovy tool loader configuration r0", "$ r15 = r67 config script", "$ r16 = org codehaus groovy tool loader configuration assign property r53", "$ r15 add $ r16", "if $ z5 == 0 goto label10", "label r61 = new java io i o exception", "r60 = new java lang string builder", "specialinvoke r60 < init >", "$ r8 = r60 append \\ `` unexpected line in \\ ``", "$ r9 = $ r8 append i6", "$ r10 = $ r9 append \\ `` \\ ``", "$ r11 = $ r10 append r48", "$ r12 = $ r11 to string", "specialinvoke r61 < init > $ r12", "throw r61"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [110], [111], [112], [113], [114], [115], [116], [117], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r4 = org codehaus groovy transform stc type check context r0", "$ r1 = r4 enclose binary expression", "$ r2 = $ r1 remove first", "$ r3 = org codehaus groovy ast expr binary expression $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = org codehaus groovy transform stc type check context r0", "$ r1 = r5 enclose method", "$ z0 = $ r1 be empty", "if $ z0 == 0 goto label1", "return null", "if $ z0 == 0 goto label1", "label r6 = org codehaus groovy transform stc type check context r0", "$ r2 = r6 enclose method", "$ r3 = $ r2 get first", "$ r4 = org codehaus groovy ast method node $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 be interface", "if $ z0 == 0 goto label1", "r1 add r0", "label r2 = r0 get interface", "$ i0 = lengthof r2", "i1 = $ i0 - 1", "label if i1 < 0 goto label3", "r3 = r2 [ i1 ]", "$ r4 = org codehaus groovy ast tool generic utils parameterize type r0 r3", "r1 add $ r4", "org codehaus groovy transform trait trait collect all interface reverse order r3 r1", "i1 = i1 + -1", "goto label2", "label if i1 < 0 goto label3", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r4 = org codehaus groovy util iterator buffer iterator r0", "$ z0 = r4 have buffer", "if $ z0 ! = 0 goto label1", "r5 = org codehaus groovy util iterator buffer iterator r0", "$ r2 = r5 iter", "$ r3 = $ r2 next", "r6 = org codehaus groovy util iterator buffer iterator r0", "r6 buffer = $ r3", "r7 = org codehaus groovy util iterator buffer iterator r0", "r7 have buffer = 1", "label r8 = org codehaus groovy util iterator buffer iterator r0", "$ r1 = r8 buffer", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new org codehaus groovy util manage concurrent link queue $ element", "r6 = org codehaus groovy util manage concurrent link queue r0", "specialinvoke r5 < init > r6 r1", "r7 = org codehaus groovy util manage concurrent link queue r0", "$ r4 = r7 queue", "$ r4 offer r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus groovy util manage link list r0", "$ r1 = r2 head", "if $ r1 ! = null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 ! = null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = null goto label1", "r7 = new java lang illegal argument exception", "specialinvoke r7 < init > \\ `` byte must not be null\\ ``", "throw r7", "if r1 ! = null goto label1", "label if r2 ! = null goto label2", "r8 = new java lang illegal argument exception", "specialinvoke r8 < init > \\ `` charset must not be null\\ ``", "throw r8", "label if r2 ! = null goto label2", "label r9 = groovy json json slurper r0", "$ r4 = specialinvoke r9 create parser", "r3 = $ r4 parse r1 r2", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r5 = new java lang illegal argument exception", "specialinvoke r5 < init > \\ `` byte must not be null\\ ``", "throw r5", "if r1 ! = null goto label1", "label r6 = groovy json json slurper r0", "$ r3 = specialinvoke r6 create parser", "r2 = $ r3 parse r1", "return r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = org apache groovy json internal value map impl r0", "specialinvoke r3 build if need map", "r4 = org apache groovy json internal value map impl r0", "$ r1 = r4 map", "$ r2 = $ r1 value", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r5 = groovy util slurpersupport g path result r0", "$ r3 = r5 get at i0", "r2 = groovy util slurpersupport g path result $ r3", "$ z0 = r1 instanceof groovy lang closure", "if $ z0 == 0 goto label1", "$ r4 = groovy lang closure r1", "r2 replace node $ r4", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r2 replace body r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = new groovy util slurpersupport g path result $ 4", "r3 = groovy util slurpersupport g path result r0", "specialinvoke r2 < init > r3", "r4 = java util iterator r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = groovy util slurpersupport node child r0", "$ r1 = r3 node", "$ r2 = $ r1 attribute", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = groovy xml markup builder r0", "r1 use double quote = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org apache groovy xml extension xml extension $ 1", "specialinvoke r2 < init > r0", "r3 = java util iterator r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = new java io string writer", "specialinvoke r6 < init >", "r7 = com google gson gson r0", "r7 to json r1 r2 r6", "$ r5 = r6 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = com google gson gson builder r0", "r1 pretty print = 1", "r2 = com google gson gson builder r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r11 = com google gson internal bind json tree writer r0", "$ r1 = r11 stack", "$ z0 = $ r1 be empty", "if $ z0 ! = 0 goto label1", "r10 = new java lang illegal state exception", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r5 = r9 append \\ `` expect one json element but be \\ ``", "r12 = com google gson internal bind json tree writer r0", "$ r6 = r12 stack", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 to string", "specialinvoke r10 < init > $ r8", "throw r10", "if $ z0 ! = 0 goto label1", "label r13 = com google gson internal bind json tree writer r0", "$ r2 = r13 product", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = @ parameter0", "if r2 ! = null goto label1", "r2 = com google gson json null instance", "label r3 = com google gson json array r0", "$ r1 = r3 element", "$ r1 add r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com google gson json array r0", "$ r3 = r4 element", "$ r2 = r1 element", "$ r3 add all $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = com google gson json array r0", "$ r1 = r2 element", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = com google gson json array r0", "$ r1 = r7 element", "$ i0 = $ r1 size", "if $ i0 ! = 1 goto label1", "r8 = com google gson json array r0", "$ r3 = r8 element", "$ r4 = $ r3 get 0", "$ r5 = com google gson json element $ r4", "$ d0 = $ r5 get a double", "return $ d0", "if $ i0 ! = 1 goto label1", "label r6 = new java lang illegal state exception", "specialinvoke r6 < init >", "throw r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang unsupported operation exception", "$ r2 = r0 get class", "$ r3 = $ r2 get simple name", "specialinvoke $ r1 < init > $ r3", "throw $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com google gson json primitive r0", "$ r1 = r2 value", "$ z0 = $ r1 instanceof java lang string", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = new com google gson type adapter $ 1", "r3 = com google gson type adapter r0", "specialinvoke r2 < init > r3", "r4 = com google gson type adapter r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = com google gson json object r0", "$ r1 = r3 member", "$ r2 = $ r1 key set", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = new java util array list", "specialinvoke r3 < init >", "r4 = io gsonfire util simple iterable r0", "specialinvoke r4 add to r3", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r1 = new java lang null pointer exception", "specialinvoke $ r1 < init >", "throw $ r1", "if r0 ! = null goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ this", "r8 = new java lang string builder", "specialinvoke r8 < init >", "r9 = com google common base standard system property r0", "$ r2 = r9 key", "$ r3 = r8 append $ r2", "$ r4 = $ r3 append \\ `` =\\ ``", "r10 = com google common base standard system property r0", "$ r5 = r10 value", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r1 = \\ `` \\ ``", "goto label2", "label return $ r1", "if r0 ! = null goto label1", "label $ r1 = r0"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = com google common collect abstract bi map r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com google common collect array table r0", "$ r1 = r2 column list", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = specialinvoke r0 value", "$ r2 = com google common collect immutable collection $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = com google common collect immutable sort set natural_empty_set", "r1 = com google common collect immutable sort set $ r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = com google common collect immutable list of r0 r1 r2", "r5 = java lang iterable $ r3", "$ r4 = com google common collect iterables concat r5", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "com google common base precondition check not null r0", "$ z0 = r0 instanceof java util list", "if $ z0 == 0 goto label1", "$ r3 = java util list r0", "$ r4 = $ r3 get i0", "goto label2", "label return $ r4", "if $ z0 == 0 goto label1", "label $ r2 = r0 iterator", "$ r4 = com google common collect iterators get $ r2 i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "label $ z0 = r0 have next", "if $ z0 == 0 goto label4", "$ z2 = r1 have next", "if $ z2 ! = 0 goto label2", "return 0", "if $ z2 ! = 0 goto label2", "label r2 = r0 next", "r3 = r1 next", "$ z3 = com google common base object equal r2 r3", "if $ z3 ! = 0 goto label3", "label goto label1", "if $ z0 == 0 goto label4", "label $ z1 = r1 have next", "if $ z1 ! = 0 goto label5", "$ z4 = 1", "goto label6", "label return $ z4", "if $ z1 ! = 0 goto label5", "label $ z4 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = com google common collect list new array list r0", "$ r3 = com google common collect iterables to array r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "com google common base precondition check not null r0", "r3 = new com google common collect iterators $ 4", "specialinvoke r3 < init > r0", "r4 = java util iterator r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "com google common base precondition check not null r0", "com google common base precondition check not null r1", "com google common base precondition check not null r2", "r9 = new com google common collect consume queue iterator", "$ r7 = newarray java util iterator [ 3 ]", "$ r7 [ 0 ] = r0", "$ r7 [ 1 ] = r1", "$ r7 [ 2 ] = r2", "specialinvoke r9 < init > $ r7", "r10 = java util iterator r9", "$ r8 = com google common collect iterators concat r10", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = com google common collect iterators partition impl r0 i0 1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ i1 = lengthof r0", "$ i0 = lengthof r1", "$ i2 = $ i1 + $ i0", "r3 = com google common collect object array new array r2 $ i2", "$ i3 = lengthof r0", "java lang system arraycopy r0 0 r3 0 $ i3", "$ i5 = lengthof r0", "$ i4 = lengthof r1", "java lang system arraycopy r1 0 r3 $ i5 $ i4", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = com google common collect order r0", "$ i0 = r4 compare r1 r2", "if $ i0 < 0 goto label1", "$ r3 = r1", "goto label2", "label return $ r3", "if $ i0 < 0 goto label1", "label $ r3 = r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com google common collect synchronize navigable set r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r2 = new com google common collect tree multiset", "$ r1 = com google common collect order natural", "r3 = java util comparator $ r1", "specialinvoke r2 < init > r3", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "com google common base precondition check not null r1", "r4 = new com google common collect tree traverser $ 1", "r5 = com google common collect tree traverser r0", "specialinvoke r4 < init > r5 r1", "r6 = com google common collect fluent iterable r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "label r9 = com google common hash abstract byte hasher r0", "$ r2 = r9 scratch", "$ r3 = $ r2 array", "r10 = com google common hash abstract byte hasher r0", "r10 update $ r3 0 i0", "label r11 = com google common hash abstract byte hasher r0", "$ r4 = r11 scratch", "$ r4 clear", "goto label5", "label r13 = com google common hash hasher r0", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["$ r0 = com google common hash hash $ crc32c holder crc_32_c", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ i3 = i0 + i1", "$ i2 = lengthof r1", "com google common base precondition check position index i0 $ i3 $ i2", "r8 = new java lang string builder", "r10 = com google common io base encode r0", "$ i4 = r10 max encode size i1", "specialinvoke r8 < init > $ i4", "label r11 = com google common io base encode r0", "r11 encode to r8 r1 i0 i1", "label goto label4", "label $ r5 = r8 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "$ r1 = com google common base optional absent", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = lengthof r1", "com google common io byte stream read fully r0 r1 0 $ i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "com google common base precondition check not null r0", "com google common base precondition check not null r1", "$ r4 = new java io buffer writer", "$ r5 = new java io output stream writer", "$ r6 = new java io file output stream", "specialinvoke $ r6 < init > r0", "specialinvoke $ r5 < init > $ r6 r1", "specialinvoke $ r4 < init > $ r5", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com google common io file a byte source r0", "$ r2 = $ r1 read", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "com google common base precondition check not null r0", "$ r3 = new java io file", "specialinvoke $ r3 < init > r0", "r1 = $ r3 get name", "i0 = r1 last index of 46", "if i0 ! = -1 goto label1", "$ r4 = r1", "goto label2", "label return $ r4", "if i0 ! = -1 goto label1", "label $ r4 = r1 substring 0 i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = com google common net host specifier r0", "$ r1 = r2 canonical form", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = com google common primitives ints to byte array i0", "$ r1 = com google common net inet address get inet4 address $ r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = com google common net internet domain name r0", "$ z0 = r4 be top private domain", "if $ z0 == 0 goto label1", "r5 = com google common net internet domain name r0", "return r5", "if $ z0 == 0 goto label1", "label r6 = com google common net internet domain name r0", "$ z1 = r6 be under public suffix", "$ r1 = newarray java lang object [ 1 ]", "r7 = com google common net internet domain name r0", "$ r2 = r7 name", "$ r1 [ 0 ] = $ r2", "com google common base precondition check state $ z1 \\ `` not under a public suffix % s\\", "r8 = com google common net internet domain name r0", "$ i0 = r8 public suffix index", "$ i1 = $ i0 - 1", "r9 = com google common net internet domain name r0", "$ r3 = specialinvoke r9 ancestor $ i1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r5 = com google common reflect class path r0", "$ r1 = r5 resource", "r6 = java lang iterable $ r1", "$ r2 = com google common collect fluent iterable from r6", "$ r3 = $ r2 filter class \\ `` lcom google common reflect class path $ class info \\ ``", "$ r4 = $ r3 to set", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = com google common reflect element r0", "$ i0 = r1 get modifier", "$ z0 = java lang reflect modifier be abstract $ i0", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = com google common reflect element r0", "$ i0 = r1 get modifier", "$ z0 = java lang reflect modifier be synchronize $ i0", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = new com google common reflect immutable type to instance map $ builder", "specialinvoke $ r0 < init > null", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = com google common util concurrent listenable future task r0", "$ r1 = r2 execution list", "$ r1 execute", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r2 = @ parameter2", "$ r4 = r1 monitor", "if $ r4 == r0 goto label1", "r9 = new java lang illegal monitor state exception", "specialinvoke r9 < init >", "throw r9", "if $ r4 == r0 goto label1", "label r10 = com google common util concurrent monitor r0", "$ z1 = r10 enter l0 r2", "if $ z1 ! = 0 goto label2", "return 0", "if $ z1 ! = 0 goto label2", "label z3 = 0", "label $ z2 = r1 be satisfied", "z3 = $ z2", "label if $ z2 ! = 0 goto label5", "r11 = com google common util concurrent monitor r0", "$ r5 = r11 lock", "$ r5 unlock", "label return $ z2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = com google common util concurrent monitor r0", "$ r1 = r2 lock", "$ z0 = $ r1 be lock", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com google common util concurrent monitor r0", "$ r1 = r2 lock", "$ z0 = $ r1 have queue thread", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = com google common util concurrent serialize executor r0", "$ r4 = r7 internal lock", "entermonitor $ r4", "label r8 = com google common util concurrent serialize executor r0", "$ r5 = r8 queue", "$ r5 add r1", "exitmonitor $ r4", "label goto label5", "label r9 = com google common util concurrent serialize executor r0", "specialinvoke r9 start queue worker", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = com google common util concurrent service manager r0", "$ r1 = r2 state", "$ r1 await stop", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["c0 = @ parameter0", "$ r0 = com google common base char matcher be c0", "$ r1 = com google common base splitter on $ r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label r4 = com google common collect map maker internal map r0", "i0 = r4 hash r1", "r5 = com google common collect map maker internal map r0", "$ r2 = r5 segment for i0", "$ r3 = $ r2 get entry r1 i0", "return $ r3"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = com google common collect order r0", "$ i0 = r4 compare r1 r2", "if $ i0 > 0 goto label1", "$ r3 = r1", "goto label2", "label return $ r3", "if $ i0 > 0 goto label1", "label $ r3 = r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["$ r0 = new com google common escape escapers $ builder", "specialinvoke $ r0 < init > null", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = com google common hash hash $ sip hash24 holder sip_hash_24", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new javax crypto spec secret key spec", "$ r2 = com google common base precondition check not null r0", "$ r3 = byte [ ] $ r2", "specialinvoke $ r1 < init > $ r3 \\ `` hmac m d5\\ ``", "$ r4 = com google common hash hash hmac md5 $ r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 iterator", "$ z0 = r1 have next", "com google common base precondition check argument $ z0 \\ `` must be at least 1 hash code to combine \\ ``", "$ r6 = r1 next", "$ r7 = com google common hash hash code $ r6", "$ i0 = $ r7 bit", "$ i1 = $ i0 8", "r2 = newarray byte [ $ i1 ]", "r3 = r0 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label6", "$ r9 = r3 next", "r4 = com google common hash hash code $ r9", "r5 = r4 a byte", "$ i3 = lengthof r5", "$ i2 = lengthof r2", "if $ i3 ! = $ i2 goto label2", "$ z2 = 1", "goto label3", "label com google common base precondition check argument $ z2 \\ `` all hashcodes must have the same bit length \\ ``", "i8 = 0", "label $ i9 = lengthof r5", "if i8 > = $ i9 goto label5", "$ b5 = r2 [ i8 ]", "$ b4 = r5 [ i8 ]", "$ i6 = $ b5 + $ b4", "$ b7 = byte $ i6", "r2 [ i8 ] = $ b7", "i8 = i8 + 1", "goto label4", "if i8 > = $ i9 goto label5", "label goto label1", "if $ i3 ! = $ i2 goto label2", "label $ z2 = 0", "if $ z1 == 0 goto label6", "label $ r8 = com google common hash hash code from bytes no copy r2", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["$ r0 = com google common io base encode base16", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = com google common math pair stats r0", "$ r1 = r2 x stats", "$ l0 = $ r1 count", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com google common math pair stats r0", "$ r1 = r2 x stats", "$ l0 = $ r1 count", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "com google common base precondition check not null r0", "$ i0 = lengthof r0", "if $ i0 ! = 88 goto label1", "$ z0 = 1", "goto label2", "label $ i1 = lengthof r0", "com google common base precondition check argument $ z0 \\ `` expect paired stats bytes = % s get % s\\", "$ r5 = java nio byte buffer wrap r0", "$ r6 = java nio byte order little_endian", "r1 = $ r5 order $ r6", "r2 = com google common math stats read from r1", "r3 = com google common math stats read from r1", "d0 = r1 get double", "$ r7 = new com google common math pair stats", "specialinvoke $ r7 < init > r2 r3 d0", "return $ r7", "if $ i0 ! = 88 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "r1 = newarray byte [ $ i0 ]", "i6 = 0", "label $ i1 = lengthof r0", "if i6 > = $ i1 goto label2", "$ i2 = lengthof r0", "$ i3 = $ i2 - i6", "$ i4 = $ i3 - 1", "$ b5 = r0 [ $ i4 ]", "r1 [ i6 ] = $ b5", "i6 = i6 + 1", "goto label1", "if i6 > = $ i1 goto label2", "label $ r2 = java net inet address get by address r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r3 = com google common net internet domain name r0", "$ z0 = r3 be top private domain", "if $ z0 == 0 goto label1", "r4 = com google common net internet domain name r0", "return r4", "if $ z0 == 0 goto label1", "label r5 = com google common net internet domain name r0", "$ z1 = r5 be under public suffix", "r6 = com google common net internet domain name r0", "$ r1 = r6 name", "com google common base precondition check state $ z1 \\ `` not under a public suffix % s\\", "r7 = com google common net internet domain name r0", "$ i0 = r7 public suffix index", "$ i1 = $ i0 - 1", "r8 = com google common net internet domain name r0", "$ r2 = specialinvoke r8 ancestor $ i1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["d0 = @ parameter0", "$ r0 = com google common util concurrent rate limiter $ sleep stopwatch create from system timer", "$ r1 = com google common util concurrent rate limiter create $ r0 d0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = com google common collect immutable list multimap of", "r5 = com google common collect multimap $ r3", "r2 = com google common net medium type create r0 r1 r5", "$ r4 = com google common base optional absent", "r2 parse charset = $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "com google common base precondition check not null r0", "r35 = new com google common net medium type $ tokenizer", "specialinvoke r35 < init > r0", "label $ r8 = com google common net medium type token_matcher", "r32 = r35 consume token $ r8", "r35 consume character 47", "$ r9 = com google common net medium type token_matcher", "r2 = r35 consume token $ r9", "r3 = com google common collect immutable list multimap builder", "label $ z0 = r35 have more", "if $ z0 == 0 goto label08", "$ r12 = com google common net medium type linear_white_space", "r35 consume token if present $ r12", "r35 consume character 59", "$ r14 = com google common net medium type linear_white_space", "r35 consume token if present $ r14", "$ r16 = com google common net medium type token_matcher", "r4 = r35 consume token $ r16", "r35 consume character 61", "$ c3 = r35 preview char", "if 34 ! = $ c3 goto label06", "r35 consume character 34", "r36 = new java lang string builder", "specialinvoke r36 < init >", "label $ c9 = r35 preview char", "if 34 == $ c9 goto label05", "$ c6 = r35 preview char", "if 92 ! = $ c6 goto label04", "r35 consume character 92", "$ r23 = com google common base char matcher ascii", "$ c8 = r35 consume character $ r23", "r36 append $ c8", "goto label03", "if 92 ! = $ c6 goto label04", "label $ r20 = com google common net medium type quoted_text_matcher", "$ r21 = r35 consume token $ r20", "r36 append $ r21", "if 34 == $ c9 goto label05", "label r33 = r36 to string", "if 34 ! = $ c3 goto label06", "label $ r17 = com google common net medium type token_matcher", "r33 = r35 consume token $ r17", "label r3 put r4 r33", "goto label02", "if $ z0 == 0 goto label08", "label $ r10 = r3 build", "r39 = com google common collect multimap $ r10", "$ r11 = com google common net medium type create r32 r2 r39", "label return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [], [46], [47], [48], [49], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com google common collect order natural", "$ r3 = newarray java lang comparable [ 2 ]", "$ r3 [ 0 ] = r0", "$ r3 [ 1 ] = r1", "r5 = java util comparator $ r2", "$ r4 = com google common collect immutable sort set construct r5 2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "com google common base precondition check not null r0 \\ `` set1\\ ``", "com google common base precondition check not null r1 \\ `` set2\\ ``", "r5 = new com google common collect set $ 2", "specialinvoke r5 < init > r0 r1", "r6 = com google common collect set $ set view r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r6 = null", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label4", "r3 = r1 [ i1 ]", "r4 = r3 annotation type", "$ z0 = com google inject internal annotation be scope annotation r4", "if $ z0 == 0 goto label3", "if r6 == null goto label2", "r0 duplicate scope annotation r6 r4", "goto label3", "label i1 = i1 + 1", "goto label1", "if r6 == null goto label2", "label r6 = r4", "label if i1 > = i0 goto label4", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get parameter type", "$ r2 = com google inject internal aop class building signature \\ `` < init > \\", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ z0 = r0 instanceof com google inject spi instance bind", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r4 = com google inject internal internal context r0", "$ i1 = r4 enter count", "$ i2 = $ i1 - 1", "r5 = com google inject internal internal context r0", "r5 enter count = $ i2", "if $ i2 > = 0 goto label1", "r3 = new java lang illegal state exception", "specialinvoke r3 < init > \\ `` call close too many times\\ ``", "throw r3", "if $ i2 > = 0 goto label1", "label if $ i2 ! = 0 goto label2", "r6 = com google inject internal internal context r0", "$ r1 = r6 to clear", "$ r1 [ 0 ] = null", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com google inject internal provide method scanner instance", "r3 = com google inject spi module annotate method scanner $ r1", "$ r2 = com google inject internal provider method module for object r0 0 r3", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com google inject internal provider method module for object r0 0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r7 = com google inject internal util continuous stopwatch r0", "$ r2 = r7 stopwatch", "$ r1 = java util concurrent time unit milliseconds", "l0 = $ r2 elapse $ r1", "r8 = com google inject internal util continuous stopwatch r0", "$ r3 = r8 stopwatch", "$ r3 reset", "r9 = com google inject internal util continuous stopwatch r0", "$ r5 = r9 stopwatch", "$ r5 start", "return l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = com google inject key r0", "$ r1 = r2 type literal", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com google inject spi dependency r0", "$ z0 = r1 nullable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = java util optional empty", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = com google inject spi injection point r0", "$ z0 = r1 optional", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = com google inject spi member injector lookup r0", "$ r1 = r3 type", "$ r2 = com google inject spi injection point for instance method and field $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org h2 bnf bnf r0", "r6 syntax = r2", "r7 = org h2 bnf bnf r0", "$ r4 = specialinvoke r7 tokenize", "r8 = org h2 bnf bnf r0", "r8 tokens = $ r4", "r9 = org h2 bnf bnf r0", "r9 index = 0", "r10 = org h2 bnf bnf r0", "r3 = specialinvoke r10 parse rule", "r11 = org h2 bnf bnf r0", "$ r5 = r11 rule map", "r3 set link $ r5", "r3 accept r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 bnf sentence r0", "$ r1 = r2 last match table", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org h2 message db exception get 90001", "r2 = java lang throwable $ r1", "throw r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org h2 command ddl grant revoke r0", "$ r2 = r5 role name", "if $ r2 ! = null goto label1", "$ r4 = org h2 util new array list", "r6 = org h2 command ddl grant revoke r0", "r6 role name = $ r4", "label r7 = org h2 command ddl grant revoke r0", "$ r3 = r7 role name", "$ r3 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "if i0 > = 0 goto label1", "return null", "if i0 > = 0 goto label1", "label r1 = org h2 command dml script command get lob stream r0 \\ `` cdata\\", "r3 = new org h2 command dml script command $ 4", "specialinvoke r3 < init > r1", "r4 = java io reader r3", "return r4"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org h2 util new array list", "r4 = org h2 command parser r0", "r4 parameter = $ r2", "r5 = org h2 command parser r0", "specialinvoke r5 initialize r1", "r6 = org h2 command parser r0", "specialinvoke r6 read", "r7 = org h2 command parser r0", "$ r3 = specialinvoke r7 read expression", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "return 3"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r3 = org h2 engine connection info r0", "r2 = r3 remove property r1 null", "if r2 ! = null goto label1", "$ z1 = z0", "goto label2", "label return $ z1", "if r2 ! = null goto label1", "label $ z1 = java lang boolean parse boolean r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 engine connection info r0", "$ r1 = r2 original u r l", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org h2 engine db object base r0", "$ r1 = r4 database", "if $ r1 ! = null goto label1", "$ l0 = -1l", "goto label2", "label r6 = org h2 engine db object base r0", "r6 modification id = $ l0", "return", "if $ r1 ! = null goto label1", "label r5 = org h2 engine db object base r0", "$ r2 = r5 database", "$ l0 = $ r2 get next modification meta id"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "r2 = @ parameter3", "z0 = @ parameter4", "r9 = new org h2 engine function alias", "specialinvoke r9 < init > r0 i0 r1", "i1 = r2 index of 40", "if i1 > = 0 goto label1", "$ i5 = r2 length", "goto label2", "label i2 = r2 last index of 46 $ i5", "if i2 > = 0 goto label3", "$ r7 = org h2 message db exception get 42000 r2", "r10 = java lang throwable $ r7", "throw r10", "if i2 > = 0 goto label3", "label $ r5 = r2 substring 0 i2", "r9 class name = $ r5", "$ i3 = i2 + 1", "$ r6 = r2 substring $ i3", "r9 method name = $ r6", "specialinvoke r9 init z0", "return r9", "if i1 > = 0 goto label1", "label $ i5 = i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [], [25], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 engine session r0", "r2 throttle", "r3 = org h2 engine session r0", "$ l1 = r3 cancel at", "$ b2 = $ l1 cmp 0l", "if $ b2 ! = 0 goto label1", "return", "if $ b2 ! = 0 goto label1", "label l0 = java lang system current time millis", "r4 = org h2 engine session r0", "$ l3 = r4 cancel at", "$ b4 = l0 cmp $ l3", "if $ b4 < 0 goto label2", "r5 = org h2 engine session r0", "r5 cancel at = 0l", "$ r1 = org h2 message db exception get 57014", "r6 = java lang throwable $ r1", "throw r6", "if $ b4 < 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org h2 engine session r0", "$ r2 = r6 unlink lob map", "if $ r2 == null goto label1", "r7 = org h2 engine session r0", "$ r3 = r7 unlink lob map", "$ r4 = r1 to string", "$ r3 remove $ r4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r17 = org h2 engine session remote r0", "$ r3 = r17 transfer list", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label6", "$ r4 = r1 next", "r2 = org h2 value transfer $ r4", "label r15 = r2 open new connection", "r15 init", "r18 = org h2 engine session remote r0", "$ i1 = r18 client version", "r15 write int $ i1", "r19 = org h2 engine session remote r0", "$ i2 = r19 client version", "r15 write int $ i2", "r15 write string null", "if $ z0 == 0 goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 expression expression r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org h2 expression expression visitor", "specialinvoke $ r1 < init > 1 0 null null r0 null null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org h2 expression expression visitor", "specialinvoke $ r1 < init > 9 0 null r0 null null null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "org h2 fulltext full text lucene init r0", "r3 = r0 prepare statement \\ `` delete from ftl index where schema= ? and table= ? \\ ``", "r3 set string 1 r1", "r3 set string 2 r2", "i0 = r3 execute update", "if i0 ! = 0 goto label1", "return", "if i0 ! = 0 goto label1", "label org h2 fulltext full text lucene reindex r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org h2 fulltext full text setting r0", "r1 initialize = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org h2 fulltext full text setting setting", "$ r0 clear", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 index index type r0", "$ z0 = r1 persistent", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "i6 = 0", "label r11 = org h2 index page btree node r0", "$ i2 = r11 entry count", "$ i3 = $ i2 + 1", "if i6 > = $ i3 goto label3", "r12 = org h2 index page btree node r0", "$ r2 = r12 child page id", "$ i4 = $ r2 [ i6 ]", "if $ i4 ! = i0 goto label2", "r13 = org h2 index page btree node r0", "$ r3 = r13 index", "$ r4 = $ r3 get page store", "r14 = org h2 index page btree node r0", "$ r5 = r14 data", "r15 = org h2 store page r0", "$ r4 log undo r15 $ r5", "r16 = org h2 index page btree node r0", "r16 write = 0", "r17 = org h2 index page btree node r0", "$ r6 = r17 index", "$ r7 = $ r6 get page store", "$ i5 = $ r7 get change count", "r18 = org h2 index page btree node r0", "r18 change count = $ i5", "r19 = org h2 index page btree node r0", "$ r8 = r19 child page id", "$ r8 [ i6 ] = i1", "r20 = org h2 index page btree node r0", "$ r9 = r20 index", "$ r10 = $ r9 get page store", "r21 = org h2 store page r0", "$ r10 update r21", "return", "if $ i4 ! = i0 goto label2", "label i6 = i6 + 1", "goto label1", "if i6 > = $ i3 goto label3", "label $ r1 = org h2 message db exception throw internal error", "throw $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], [], [40], [41], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org h2 jdbc jdbc callable statement r0", "specialinvoke r3 check register i0", "r4 = org h2 jdbc jdbc callable statement r0", "$ r1 = specialinvoke r4 get open result set", "$ r2 = $ r1 get array i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r4 = org h2 jdbc jdbc callable statement r0", "specialinvoke r4 check register i0", "r5 = org h2 jdbc jdbc callable statement r0", "$ r2 = specialinvoke r5 get open result set", "$ r3 = $ r2 get time i0 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` null be sort at start\\ ``", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` get search string escape\\ ``", "return \\ `` \\\\\\\\ ``"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` support column aliasing\\ ``", "return 1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` support minimum s q l grammar\\ ``", "return 1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` get procedure term\\ ``", "return \\ `` procedure\\ ``"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` support schema in privilege definitions\\ ``", "return 1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` support catalog in procedure calls\\ ``", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` support catalog in privilege definitions\\ ``", "return 1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` supports subqueries in quantifieds\\ ``", "return 1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` support data manipulation transaction only\\ ``", "return 1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 jdbc jdbc database meta data r0", "r2 debug code call \\ `` store low case identifiers\\ ``", "r3 = org h2 jdbc jdbc database meta data r0", "r1 = specialinvoke r3 get mode", "$ z0 = r1 equal \\ `` my s q l\\ ``", "if $ z0 == 0 goto label1", "return 1", "if $ z0 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` get max binary literal length\\ ``", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` get max column in group by\\ ``", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` get max column in index\\ ``", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` get max connections\\ ``", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` get max schema name length\\ ``", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` get database minor version\\ ``", "return 3"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org h2 jdbc jdbc database meta data r0", "$ r2 = r3 unsupported \\ `` be wrapper for\\ ``", "throw $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r3 = org h2 jdbc jdbc prepared statement r0", "$ r2 = r3 unsupported \\ `` row id\\ ``", "throw $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 jdbc jdbc s q l exception r0", "$ r1 = r2 message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 jdbcx jdbc data source r0", "r2 debug code call \\ `` get description\\ ``", "r3 = org h2 jdbcx jdbc data source r0", "$ r1 = r3 description", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org h2 message db exception", "if $ z0 == 0 goto label1", "$ r17 = org h2 message db exception r0", "return $ r17", "if $ z0 == 0 goto label1", "label $ z1 = r0 instanceof java sql s q l exception", "if $ z1 == 0 goto label2", "$ r15 = new org h2 message db exception", "$ r16 = java sql s q l exception r0", "specialinvoke $ r15 < init > $ r16", "return $ r15", "if $ z1 == 0 goto label2", "label $ z2 = r0 instanceof java lang reflect invocation target exception", "if $ z2 == 0 goto label3", "$ r13 = java lang reflect invocation target exception r0", "$ r14 = org h2 message db exception convert invocation $ r13 null", "return $ r14", "if $ z2 == 0 goto label3", "label $ z3 = r0 instanceof java io i o exception", "if $ z3 == 0 goto label4", "$ r10 = newarray java lang string [ 1 ]", "$ r11 = r0 to string", "$ r10 [ 0 ] = $ r11", "$ r12 = org h2 message db exception get 90028 r0 $ r10", "return $ r12", "if $ z3 == 0 goto label4", "label $ z4 = r0 instanceof java lang out of memory error", "if $ z4 == 0 goto label5", "$ r8 = newarray java lang string [ 0 ]", "$ r9 = org h2 message db exception get 90108 r0 $ r8", "return $ r9", "if $ z4 == 0 goto label5", "label $ z5 = r0 instanceof java lang stack overflow error", "if $ z5 ! = 0 goto label6", "$ z6 = r0 instanceof java lang linkage error", "if $ z6 == 0 goto label7", "label $ r1 = newarray java lang string [ 1 ]", "$ r2 = r0 to string", "$ r1 [ 0 ] = $ r2", "$ r3 = org h2 message db exception get 50000 r0 $ r1", "return $ r3", "if $ z6 == 0 goto label7", "label $ z7 = r0 instanceof java lang error", "if $ z7 == 0 goto label8", "$ r7 = java lang error r0", "throw $ r7", "if $ z7 == 0 goto label8", "label $ r4 = newarray java lang string [ 1 ]", "$ r5 = r0 to string", "$ r4 [ 0 ] = $ r5", "$ r6 = org h2 message db exception get 50000 r0 $ r4", "return $ r6"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], [44], [45], [46], [], [48], [49], [50], [51], [52], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r2 = @ parameter3", "r20 = org h2 message trace object r0", "$ r3 = r20 trace", "$ z0 = $ r3 be debug enabled", "if $ z0 == 0 goto label1", "r21 = org h2 message trace object r0", "$ r5 = r21 trace", "r19 = new java lang string builder", "specialinvoke r19 < init >", "$ r6 = r19 append r1", "$ r7 = $ r6 append \\ `` \\ ``", "$ r8 = org h2 message trace object prefix", "$ r9 = $ r8 [ i0 ]", "$ r10 = $ r7 append $ r9", "$ r11 = $ r10 append i1", "$ r12 = $ r11 append \\ `` = \\ ``", "r22 = org h2 message trace object r0", "$ r13 = r22 get trace object name", "$ r14 = $ r12 append $ r13", "$ r15 = $ r14 append \\ `` \\ ``", "$ r16 = $ r15 append r2", "$ r17 = $ r16 append \\ `` \\ ``", "$ r18 = $ r17 to string", "$ r5 debug code $ r18", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r16 = org h2 message trace object r0", "$ r3 = r16 trace", "$ z0 = $ r3 be debug enabled", "if $ z0 == 0 goto label1", "r17 = org h2 message trace object r0", "$ r5 = r17 trace", "r15 = new java lang string builder", "specialinvoke r15 < init >", "r18 = org h2 message trace object r0", "$ r6 = r18 get trace object name", "$ r7 = r15 append $ r6", "$ r8 = $ r7 append \\ `` \\ ``", "$ r9 = $ r8 append r1", "$ r10 = $ r9 append \\ `` \\ ``", "$ r11 = org h2 message trace object quote r2", "$ r12 = $ r10 append $ r11", "$ r13 = $ r12 append \\ `` \\ ``", "$ r14 = $ r13 to string", "$ r5 debug code $ r14", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = org h2 message trace object r0", "$ r2 = r11 trace", "$ z0 = $ r2 be debug enabled", "if $ z0 == 0 goto label1", "r12 = org h2 message trace object r0", "$ r4 = r12 trace", "r10 = new java lang string builder", "specialinvoke r10 < init >", "r13 = org h2 message trace object r0", "$ r5 = r13 get trace object name", "$ r6 = r10 append $ r5", "$ r7 = $ r6 append \\ `` \\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 to string", "$ r4 debug code $ r9", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return \\ `` null\\ ``", "if r0 ! = null goto label1", "label $ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` time value of \\\\\\ `` \\ ``", "$ r3 = r0 to string", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append \\ `` \\\\\\ `` \\ ``", "$ r6 = $ r5 to string", "return $ r6"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org h2 util string utils quote java string array r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org h2 util string utils quote java int array r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org h2 message trace system r0", "r2 sys out = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 ! = 4 goto label7", "label $ r2 = java lang class for name \\ `` org h2 message trace writer adapter\\ ``", "$ r3 = $ r2 new instance", "$ r4 = org h2 message trace writer $ r3", "r12 = org h2 message trace system r0", "r12 writer = $ r4", "label goto label4", "label r15 = org h2 message trace system r0", "r11 = r15 file name", "if r11 == null goto label7", "$ z0 = r11 end with \\ `` trace db\\ ``", "if $ z0 == 0 goto label5", "$ i5 = r11 length", "$ r6 = \\ `` trace db\\ ``", "$ i6 = $ r6 length", "$ i7 = $ i5 - $ i6", "r11 = r11 substring 0 $ i7", "label $ i2 = r11 last index of 47", "$ i3 = r11 last index of 92", "i1 = java lang math max $ i2 $ i3", "if i1 < 0 goto label6", "$ i4 = i1 + 1", "r11 = r11 substring $ i4", "label r16 = org h2 message trace system r0", "$ r5 = r16 writer", "$ r5 set name r11", "label r17 = org h2 message trace system r0", "r17 level file = i0", "r18 = org h2 message trace system r0", "specialinvoke r18 update level", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 mvstore cache cache long key l i r s r0", "$ i0 = r1 average memory", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r9 = new java util array list", "specialinvoke r9 < init >", "r10 = org h2 mvstore cache cache long key l i r s r0", "$ r5 = r10 key set", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r6 = r2 next", "$ r7 = java lang long $ r6", "l0 = $ r7 long value", "r11 = org h2 mvstore cache cache long key l i r s r0", "$ r8 = specialinvoke r11 find l0", "r3 = $ r8 value", "if r3 == null goto label2", "r9 add r3", "label goto label1", "if $ z0 == 0 goto label3", "label return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "r1 = @ parameter2", "label i6 = 0", "label $ l2 = long i6", "$ l3 = l0 + $ l2", "i1 = r0 write r1 $ l3", "i6 = i6 + i1", "$ i4 = r1 remain", "if $ i4 > 0 goto label2", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["l0 = @ parameter0", "$ l1 = l0 > > > 38", "$ i2 = int $ l1", "return $ i2"], "adj": [[1], [2], [3], []]}
{"nodes": ["l0 = @ parameter0", "$ l2 = l0 > > 1", "$ l3 = $ l2 & 31l", "i1 = int $ l3", "if i1 ! = 31 goto label1", "return 2147483647", "if i1 ! = 31 goto label1", "label $ i4 = i1 & 1", "$ i7 = 2 + $ i4", "$ i5 = i1 > > 1", "$ i6 = $ i5 + 4", "$ i8 = $ i7 < < $ i6", "return $ i8"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 > > 16", "$ i2 = $ i1 ^ i0", "$ s3 = short $ i2", "return $ s3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 util new array list", "r23 = org h2 mvstore db transaction store r0", "$ r5 = r23 undo log", "$ r6 = $ r5 first key", "r19 = long [ ] $ r6", "label if r19 == null goto label4", "l0 = r19 [ 0 ]", "$ r7 = newarray long [ 2 ]", "$ r7 [ 0 ] = l0", "$ r7 [ 1 ] = 9223372036854775807l", "r24 = org h2 mvstore db transaction store r0", "$ r8 = r24 undo log", "$ r9 = $ r8 floor key $ r7", "r20 = long [ ] $ r9", "$ l2 = r20 [ 1 ]", "l1 = $ l2 + 1l", "r25 = org h2 mvstore db transaction store r0", "$ r10 = r25 prepare transaction", "$ r11 = java lang long value of l0", "$ r12 = $ r10 get $ r11", "r3 = java lang object [ ] $ r12", "if r3 ! = null goto label2", "i3 = 0", "r21 = null", "goto label3", "label r22 = new org h2 mvstore db transaction store $ transaction", "r26 = org h2 mvstore db transaction store r0", "specialinvoke r22 < init > r26 l0 i3 r21 l1", "r1 add r22", "r27 = org h2 mvstore db transaction store r0", "$ r17 = r27 undo log", "$ r18 = $ r17 high key $ r7", "r19 = long [ ] $ r18", "goto label1", "if r3 ! = null goto label2", "label $ r13 = r3 [ 0 ]", "$ r14 = java lang integer $ r13", "i3 = $ r14 int value", "$ r15 = r3 [ 1 ]", "r21 = java lang string $ r15", "label if r19 == null goto label4", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = org h2 mvstore m v map r0", "r4 = r6 get r1", "r7 = org h2 mvstore m v map r0", "$ z0 = r7 be value equal r4 r2", "if $ z0 == 0 goto label1", "r8 = org h2 mvstore m v map r0", "r8 put r1 r3", "return 1", "if $ z0 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = org h2 mvstore m v map r0", "$ r4 = r11 root", "if $ r4 == r1 goto label5", "r12 = org h2 mvstore m v map r0", "r12 remove unused old version", "r13 = org h2 mvstore m v map r0", "$ r5 = r13 root", "$ l0 = $ r5 get version", "$ l1 = r1 get version", "$ b2 = $ l0 cmp $ l1", "if $ b2 == 0 goto label4", "r14 = org h2 mvstore m v map r0", "r2 = r14 old root", "$ i3 = r2 size", "if $ i3 < = 0 goto label2", "$ i4 = r2 size", "$ i5 = $ i4 - 1", "$ r8 = r2 get $ i5", "r3 = org h2 mvstore page $ r8", "$ l6 = r3 get version", "r15 = org h2 mvstore m v map r0", "$ r9 = r15 root", "$ l7 = $ r9 get version", "$ b8 = $ l6 cmp $ l7", "if $ b8 == 0 goto label1", "r16 = org h2 mvstore m v map r0", "$ r10 = r16 root", "r2 add $ r10", "label goto label3", "label r18 = org h2 mvstore m v map r0", "$ r7 = r18 store", "r19 = org h2 mvstore m v map r0", "$ r7 mark change r19", "label r20 = org h2 mvstore m v map r0", "r20 root = r1", "label return", "if $ i3 < = 0 goto label2", "label r17 = org h2 mvstore m v map r0", "$ r6 = r17 root", "r2 add $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 mvstore m v map r0", "$ r1 = r2 key type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 get child page count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "if r1 == null goto label1", "org h2 mvstore data utils append map r7 \\ `` name\\", "label r8 = org h2 mvstore m v map r0", "$ l0 = r8 create version", "$ b1 = $ l0 cmp 0l", "if $ b1 == 0 goto label2", "r9 = org h2 mvstore m v map r0", "$ l2 = r9 create version", "$ r6 = java lang long value of $ l2", "org h2 mvstore data utils append map r7 \\ `` create version\\", "label r10 = org h2 mvstore m v map r0", "r3 = r10 get type", "if r3 == null goto label3", "org h2 mvstore data utils append map r7 \\ `` type\\", "label $ r5 = r7 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org h2 mvstore page r0", "$ z0 = r2 be leaf", "if $ z0 == 0 goto label1", "r3 = org h2 mvstore page r0", "$ r1 = specialinvoke r3 split leaf i0", "goto label2", "label return $ r1", "if $ z0 == 0 goto label1", "label r4 = org h2 mvstore page r0", "$ r1 = specialinvoke r4 split node i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r14 = org h2 mvstore page r0", "$ r2 = r14 child page", "$ r3 = $ r2 [ i0 ]", "if r1 ! = $ r3 goto label1", "$ l8 = r1 get pos", "r15 = org h2 mvstore page r0", "$ r13 = r15 child", "$ l9 = $ r13 [ i0 ]", "$ b10 = $ l8 cmp $ l9", "if $ b10 == 0 goto label3", "label r16 = org h2 mvstore page r0", "$ i1 = r16 share flag", "$ i2 = $ i1 & 4", "if $ i2 == 0 goto label2", "r17 = org h2 mvstore page r0", "$ r7 = r17 child", "r18 = org h2 mvstore page r0", "$ r6 = r18 child", "$ i4 = lengthof $ r6", "$ r8 = java util array copy of $ r7 $ i4", "r19 = org h2 mvstore page r0", "r19 child = $ r8", "r20 = org h2 mvstore page r0", "$ r10 = r20 child page", "r21 = org h2 mvstore page r0", "$ r9 = r21 child page", "$ i5 = lengthof $ r9", "$ r11 = java util array copy of $ r10 $ i5", "$ r12 = org h2 mvstore page [ ] $ r11", "r22 = org h2 mvstore page r0", "r22 child page = $ r12", "r23 = org h2 mvstore page r0", "$ i6 = r23 share flag", "$ i7 = $ i6 & -5", "r24 = org h2 mvstore page r0", "r24 share flag = $ i7", "label r25 = org h2 mvstore page r0", "$ r4 = r25 child", "$ l3 = r1 get pos", "$ r4 [ i0 ] = $ l3", "r26 = org h2 mvstore page r0", "$ r5 = r26 child page", "$ r5 [ i0 ] = r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r19 = org h2 mvstore page r0", "$ i1 = r19 key count", "$ i2 = $ i1 + 1", "r3 = newarray java lang object [ $ i2 ]", "r20 = org h2 mvstore page r0", "$ r7 = r20 key", "r21 = org h2 mvstore page r0", "$ i3 = r21 key count", "org h2 mvstore data utils copy with gap $ r7 r3 $ i3 i0", "r3 [ i0 ] = r1", "r22 = org h2 mvstore page r0", "r22 key = r3", "r23 = org h2 mvstore page r0", "$ i4 = r23 key count", "$ i5 = $ i4 + 1", "r24 = org h2 mvstore page r0", "r24 key count = $ i5", "r25 = org h2 mvstore page r0", "$ r8 = r25 child", "$ i6 = lengthof $ r8", "$ i7 = $ i6 + 1", "r4 = newarray long [ $ i7 ]", "r26 = org h2 mvstore page r0", "$ r10 = r26 child", "r27 = org h2 mvstore page r0", "$ r9 = r27 child", "$ i8 = lengthof $ r9", "org h2 mvstore data utils copy with gap $ r10 r4 $ i8 i0", "$ l9 = r2 get pos", "r4 [ i0 ] = $ l9", "r28 = org h2 mvstore page r0", "r28 child = r4", "r29 = org h2 mvstore page r0", "$ r11 = r29 child page", "$ i10 = lengthof $ r11", "$ i11 = $ i10 + 1", "r5 = newarray org h2 mvstore page [ $ i11 ]", "r30 = org h2 mvstore page r0", "$ r13 = r30 child page", "r31 = org h2 mvstore page r0", "$ r12 = r31 child page", "$ i12 = lengthof $ r12", "org h2 mvstore data utils copy with gap $ r13 r5 $ i12 i0", "r5 [ i0 ] = r2", "r32 = org h2 mvstore page r0", "r32 child page = r5", "r33 = org h2 mvstore page r0", "$ r14 = r33 count", "$ i13 = lengthof $ r14", "$ i14 = $ i13 + 1", "r6 = newarray long [ $ i14 ]", "r34 = org h2 mvstore page r0", "$ r16 = r34 count", "r35 = org h2 mvstore page r0", "$ r15 = r35 count", "$ i15 = lengthof $ r15", "org h2 mvstore data utils copy with gap $ r16 r6 $ i15 i0", "$ l16 = r2 total count", "r6 [ i0 ] = $ l16", "r36 = org h2 mvstore page r0", "r36 count = r6", "r37 = org h2 mvstore page r0", "$ i17 = r37 share flag", "$ i18 = $ i17 & -14", "r38 = org h2 mvstore page r0", "r38 share flag = $ i18", "r39 = org h2 mvstore page r0", "$ l20 = r39 total count", "$ l19 = r2 total count", "$ l21 = $ l20 + $ l19", "r40 = org h2 mvstore page r0", "r40 total count = $ l21", "r41 = org h2 mvstore page r0", "$ i22 = r41 memory", "r42 = org h2 mvstore page r0", "$ r17 = r42 map", "$ r18 = $ r17 get key type", "$ i23 = $ r18 get memory r1", "$ i24 = $ i22 + $ i23", "r43 = org h2 mvstore page r0", "r43 memory = $ i24", "r44 = org h2 mvstore page r0", "$ i25 = r44 memory", "$ i26 = $ i25 + 16", "r45 = org h2 mvstore page r0", "r45 memory = $ i26", "return"], "adj}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org h2 mvstore rtree m v r tree map r0", "r5 check open", "r4 = new org h2 mvstore rtree m v r tree map $ 2", "r6 = org h2 mvstore rtree m v r tree map r0", "$ r3 = r6 root", "r7 = org h2 mvstore rtree m v r tree map r0", "r8 = org h2 mvstore rtree m v r tree map r0", "specialinvoke r4 < init > r7 r8 $ r3 r1", "r9 = java util iterator r4", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org h2 mvstore rtree spatial key r1", "r4 = org h2 mvstore rtree spatial key r2", "i1 = 0", "label r5 = org h2 mvstore rtree spatial data type r0", "$ i0 = r5 dimension", "if i1 > = $ i0 goto label2", "$ f0 = r3 min i1", "$ f1 = r4 min i1", "$ f2 = java lang math min $ f0 $ f1", "r3 set min i1 $ f2", "$ f3 = r3 max i1", "$ f4 = r4 max i1", "$ f5 = java lang math max $ f3 $ f4", "r3 set max i1 $ f5", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org h2 mvstore rtree spatial key r1", "r4 = org h2 mvstore rtree spatial key r2", "i3 = 0", "label r5 = org h2 mvstore rtree spatial data type r0", "$ i0 = r5 dimension", "if i3 > = $ i0 goto label4", "$ f0 = r3 min i3", "$ f1 = r4 min i3", "$ b1 = $ f0 cmpl $ f1", "if $ b1 > 0 goto label2", "$ f2 = r3 max i3", "$ f3 = r4 max i3", "$ b2 = $ f2 cmpg $ f3", "if $ b2 > = 0 goto label3", "label return 0", "if $ b2 > = 0 goto label3", "label i3 = i3 + 1", "goto label1", "if i3 > = $ i0 goto label4", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ this", "r18 = org h2 result row list r0", "$ r2 = r18 file", "if $ r2 ! = null goto label1", "r19 = org h2 result row list r0", "$ r14 = r19 list", "r20 = org h2 result row list r0", "$ i11 = r20 index", "$ i12 = $ i11 + 1", "r21 = org h2 result row list r0", "r21 index = $ i12", "$ r15 = $ r14 get $ i11", "r16 = org h2 result row $ r15", "goto label5", "label return r16", "if $ r2 ! = null goto label1", "label r22 = org h2 result row list r0", "$ i2 = r22 list index", "r23 = org h2 result row list r0", "$ r3 = r23 list", "$ i3 = $ r3 size", "if $ i2 < $ i3 goto label4", "r24 = org h2 result row list r0", "$ r6 = r24 list", "$ r6 clear", "r25 = org h2 result row list r0", "r25 list index = 0", "r26 = org h2 result row list r0", "r1 = r26 row buff", "r1 reset", "r27 = org h2 result row list r0", "$ r7 = r27 file", "$ r8 = r1 get bytes", "$ r7 read fully $ r8 0 16", "$ i8 = r1 read int", "i1 = $ i8 * 16", "r1 check capacity i1", "$ i9 = i1 - 16", "if $ i9 < = 0 goto label2", "r28 = org h2 result row list r0", "$ r12 = r28 file", "$ r13 = r1 get bytes", "$ i10 = i1 - 16", "$ r12 read fully $ r13 16 $ i10", "label r29 = org h2 result row list r0", "r17 = specialinvoke r29 read row r1", "if r17 ! = null goto label3", "goto label4", "label r31 = org h2 result row list r0", "$ i4 = r31 index", "$ i5 = $ i4 + 1", "r32 = org h2 result row list r0", "r32 index = $ i5", "r33 = org h2 result row list r0", "$ r4 = r33 list", "r34 = org h2 result row list r0", "$ i6 = r34 list index", "$ i7 = $ i6 + 1", "r35 = org h2 result row list r0", "r35 list index = $ i7", "$ r5 = $ r4 get $ i6", "r16 = org h2 result row $ r5", "if r17 ! = null goto label3", "label r30 = org h2 result row list r0", "$ r9 = r30 list", "$ r9 add r17", "goto label2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org h2 schema schema r0", "$ r3 = r6 constraint", "$ r4 = $ r3 get r2", "r5 = org h2 constraint constraint $ r4", "if r5 ! = null goto label1", "r5 = r1 find local temp table constraint r2", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r2 be temporary", "if $ z0 == 0 goto label1", "$ z1 = r2 be global temporary", "if $ z1 ! = 0 goto label1", "r3 = r1 get local temp table constraint", "goto label2", "label r6 = org h2 schema schema r0", "r7 = org h2 engine db object r2", "$ r4 = specialinvoke r6 get unique name r7 r3 \\ `` constraint_\\ ``", "return $ r4", "if $ z1 ! = 0 goto label1", "label r5 = org h2 schema schema r0", "r3 = r5 constraint"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org h2 schema sequence r0", "$ l1 = r4 increment", "$ b2 = $ l1 cmp 0l", "if $ b2 < = 0 goto label1", "r5 = org h2 schema sequence r0", "$ l14 = r5 value", "r6 = org h2 schema sequence r0", "$ l13 = r6 value with margin", "$ b15 = $ l14 cmp $ l13", "if $ b15 > = 0 goto label2", "label r7 = org h2 schema sequence r0", "$ l3 = r7 increment", "$ b4 = $ l3 cmp 0l", "if $ b4 > = 0 goto label3", "r8 = org h2 schema sequence r0", "$ l6 = r8 value", "r9 = org h2 schema sequence r0", "$ l5 = r9 value with margin", "$ b7 = $ l6 cmp $ l5", "if $ b7 > 0 goto label3", "label r10 = org h2 schema sequence r0", "$ l11 = r10 value with margin", "r11 = org h2 schema sequence r0", "$ l9 = r11 increment", "r12 = org h2 schema sequence r0", "$ l8 = r12 cache size", "$ l10 = $ l9 * $ l8", "$ l12 = $ l11 + $ l10", "r13 = org h2 schema sequence r0", "r13 value with margin = $ l12", "r14 = org h2 schema sequence r0", "r14 flush r1", "label r15 = org h2 schema sequence r0", "l0 = r15 value", "r16 = org h2 schema sequence r0", "$ l16 = r16 value", "r17 = org h2 schema sequence r0", "$ l17 = r17 increment", "$ l18 = $ l16 + $ l17", "r18 = org h2 schema sequence r0", "r18 value = $ l18", "return l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 schema sequence r0", "r1 flush without margin", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org h2 store f file path r0", "$ r1 = r5 name", "$ i1 = $ r1 index of 58", "r6 = org h2 store f file path r0", "$ r2 = r6 name", "$ i2 = $ r2 last index of 47", "i0 = java lang math max $ i1 $ i2", "if i0 > = 0 goto label1", "r7 = org h2 store f file path r0", "$ r4 = r7 name", "goto label2", "label return $ r4", "if i0 > = 0 goto label1", "label r8 = org h2 store f file path r0", "$ r3 = r8 name", "$ i3 = i0 + 1", "$ r4 = $ r3 substring $ i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], []]}
{"nodes": ["r5 = @ parameter0", "$ z0 = r5 start with \\ `` ~\\ ``", "if $ z0 == 0 goto label2", "$ i0 = r5 length", "if $ i0 == 1 goto label1", "$ z1 = r5 start with \\ `` ~ \\ ``", "if $ z1 == 0 goto label2", "label r0 = org h2 constant sys property user_home", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append r0", "$ r3 = r5 substring 1", "$ r4 = $ r2 append $ r3", "r5 = $ r4 to string", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org h2 store f file path get r0", "$ r1 create directory", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org h2 store f file path get r0", "$ z0 = $ r1 be absolute", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org h2 store f file path get r0", "$ r3 = org h2 store f file path get r1", "$ r2 move to $ r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org h2 store f file path get r0", "$ z0 = $ r1 set read only", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "label $ r2 = org h2 store f file path get r0", "$ r2 delete", "label return 1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org h2 table function table r0", "r2 = specialinvoke r10 get value result set r1", "if r2 ! = null goto label1", "return null", "if r2 ! = null goto label1", "label r11 = org h2 table function table r0", "$ r4 = r11 cache result", "if $ r4 == null goto label2", "r12 = org h2 table function table r0", "$ r7 = r12 cache value", "if $ r7 ! = r2 goto label2", "r13 = org h2 table function table r0", "$ r8 = r13 cache result", "$ r8 reset", "r14 = org h2 table function table r0", "$ r9 = r14 cache result", "r15 = org h2 result result interface $ r9", "return r15", "if $ r7 ! = r2 goto label2", "label $ r5 = r2 get result set", "r3 = org h2 result local result read r1 $ r5 0", "r16 = org h2 table function table r0", "$ r6 = r16 function", "$ z0 = $ r6 be deterministic", "if $ z0 == 0 goto label3", "r17 = org h2 table function table r0", "r17 cache result = r3", "r18 = org h2 table function table r0", "r19 = org h2 value value r2", "r18 cache value = r19", "label r20 = org h2 result result interface r3", "return r20"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d2 = 1 0", "z1 = 0", "i1 = 1", "r11 = org h2 table plan r0", "r7 = r11 all filter", "i2 = lengthof r7", "i3 = 0", "label if i3 > = i2 goto label3", "r8 = r7 [ i3 ]", "$ i0 = i1", "i1 = i1 + 1", "r2 = r8 get best plan item r1 $ i0", "r12 = org h2 table plan r0", "$ r4 = r12 plan item", "$ r4 put r8 r2", "$ d0 = r2 cost", "$ d1 = d2 * $ d0", "d2 = d2 + $ d1", "r13 = org h2 table plan r0", "specialinvoke r13 set evaluatable r8 1", "r3 = r8 get join condition", "if r3 == null goto label2", "$ r6 = org h2 expression expression visitor evaluatable_visitor", "$ z0 = r3 be everything $ r6", "if $ z0 ! = 0 goto label2", "z1 = 1", "goto label3", "label if z1 == 0 goto label4", "d2 = #infinity", "label r14 = org h2 table plan r0", "r9 = r14 all filter", "i4 = lengthof r9", "i5 = 0", "label if i5 > = i4 goto label6", "r10 = r9 [ i5 ]", "r15 = org h2 table plan r0", "specialinvoke r15 set evaluatable r10 0", "i5 = i5 + 1", "goto label5", "label if i5 > = i4 goto label6", "label return d2", "if $ z0 ! = 0 goto label2", "label i3 = i3 + 1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org h2 result row", "specialinvoke $ r1 < init > r0 -1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "z1 = @ parameter2", "if z0 == 0 goto label2", "if z1 == 0 goto label2", "r7 = org h2 table table r0", "$ r4 = r7 constraint", "if $ r4 == null goto label2", "r8 = org h2 table table r0", "$ r5 = r8 constraint", "r2 = $ r5 iterator", "label $ z2 = r2 have next", "if $ z2 == 0 goto label2", "$ r6 = r2 next", "r3 = org h2 constraint constraint $ r6", "r3 check exist data r1", "goto label1", "if $ z2 == 0 goto label2", "label r9 = org h2 table table r0", "r9 check foreign key constraint = z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r5 = org h2 table table filter r0", "$ r1 = r5 nest join", "if $ r1 == null goto label1", "r6 = org h2 table table filter r0", "$ r4 = r6 nest join", "$ r4 reset", "label r7 = org h2 table table filter r0", "$ r2 = r7 join", "if $ r2 == null goto label2", "r8 = org h2 table table filter r0", "$ r3 = r8 join", "$ r3 reset", "label r9 = org h2 table table filter r0", "r9 state = 0", "r10 = org h2 table table filter r0", "r10 find one = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 table table filter r0", "$ z0 = r1 join outer", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org h2 table table filter r0", "$ i0 = r3 state", "if $ i0 ! = 1 goto label1", "r4 = org h2 table table filter r0", "$ r2 = r4 get", "r1 add $ r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "z0 = @ parameter3", "z1 = @ parameter4", "r8 = org h2 table table view r0", "r4 = r8 query s q l", "r9 = org h2 table table view r0", "r5 = r9 column name", "r10 = org h2 table table view r0", "z2 = r10 recursive", "r11 = org h2 table table view r0", "specialinvoke r11 init r1 null r2 r3 z0", "r12 = org h2 table table view r0", "r6 = r12 recompile r3 z1", "if r6 == null goto label1", "r13 = org h2 table table view r0", "specialinvoke r13 init r4 null r5 r3 z2", "r14 = org h2 table table view r0", "r14 recompile r3 1", "r15 = java lang throwable r6", "throw r15", "if r6 == null goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org h2 tool csv r0", "r3 output = r1", "r4 = org h2 tool csv r0", "$ i0 = specialinvoke r4 write result set r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 tool csv r0", "$ c0 = r1 escape character", "return $ c0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org h2 tool server r0", "r3 start = 0", "r4 = org h2 tool server r0", "$ r1 = r4 service", "if $ r1 == null goto label1", "r5 = org h2 tool server r0", "$ r2 = r5 service", "$ r2 stop", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r3 = org h2 tool server r0", "$ r1 = r3 service", "$ r2 = $ r1 get u r l", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["z0 = @ parameter0", "org h2 upgrade db upgrade delete old db = z0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org h2 util bit field r0", "$ i0 = r3 max length", "i9 = $ i0 > > 6", "label if i9 < = 0 goto label2", "r4 = org h2 util bit field r0", "$ r2 = r4 data", "$ l7 = $ r2 [ i9 ]", "$ b8 = $ l7 cmp 0l", "if $ b8 ! = 0 goto label2", "i9 = i9 + -1", "goto label1", "if $ b8 ! = 0 goto label2", "label $ i2 = i9 < < 6", "r5 = org h2 util bit field r0", "$ r1 = r5 data", "$ l1 = $ r1 [ i9 ]", "$ i3 = java lang long number of lead zeros $ l1", "$ i4 = 64 - $ i3", "$ i5 = $ i2 + $ i4", "r6 = org h2 util bit field r0", "r6 max length = $ i5", "r7 = org h2 util bit field r0", "$ i6 = r7 max length", "return $ i6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["l0 = @ parameter0", "l11 = l0 1000000l", "l12 = l11 1000l", "$ l3 = l12 * 1000l", "l13 = l11 - $ l3", "l14 = l12 60l", "$ l4 = l14 * 60l", "l15 = l12 - $ l4", "l1 = l14 60l", "$ l5 = l1 * 60l", "l16 = l14 - $ l5", "$ r0 = java util time zone get default", "$ l6 = l1 % 24l", "$ i10 = int $ l6", "$ i9 = int l16", "$ i8 = int l15", "$ i7 = int l13", "l2 = org h2 util date time utils get millis $ r0 1970 1 1 $ i10 $ i9 $ i8 $ i7", "$ r1 = new java sql time", "specialinvoke $ r1 < init > l2", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 util int array r0", "$ i0 = r1 size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "label l1 = org h2 util i o utils copy and close input r0 r1", "r1 close", "label org h2 util i o utils close silently r1", "return l1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r6 = @ parameter0", "$ z0 = r6 start with \\ `` jdbc\\ ``", "if $ z0 == 0 goto label3", "$ r1 = \\ `` jdbc\\ ``", "$ i0 = $ r1 length", "r7 = r6 substring $ i0", "i3 = 0", "label $ r2 = org h2 util jdbc utils driver", "$ i1 = lengthof $ r2", "if i3 > = $ i1 goto label3", "$ r3 = org h2 util jdbc utils driver", "r0 = $ r3 [ i3 ]", "$ z1 = r7 start with r0", "if $ z1 == 0 goto label2", "$ r4 = org h2 util jdbc utils driver", "$ i2 = i3 + 1", "$ r5 = $ r4 [ $ i2 ]", "return $ r5", "if $ z1 == 0 goto label2", "label i3 = i3 + 2", "goto label1", "if i3 > = $ i1 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org h2 util profiler", "specialinvoke $ r1 < init >", "specialinvoke $ r1 run r0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = new java lang thread", "specialinvoke r4 < init > r0 \\ `` profiler\\ ``", "r5 = org h2 util profiler r0", "r5 thread = r4", "r6 = org h2 util profiler r0", "$ r2 = r6 thread", "$ r2 set daemon 1", "r7 = org h2 util profiler r0", "$ r3 = r7 thread", "$ r3 start", "r8 = org h2 util profiler r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "z0 = @ parameter1", "r6 = org h2 util small map r0", "$ i1 = r6 cache id", "if i0 ! = $ i1 goto label1", "r7 = org h2 util small map r0", "$ r5 = r7 cache", "return $ r5", "if i0 ! = $ i1 goto label1", "label r8 = org h2 util small map r0", "$ r2 = r8 map", "$ r3 = java lang integer value of i0", "r1 = $ r2 get $ r3", "if r1 ! = null goto label2", "if z0 ! = 0 goto label2", "$ r4 = org h2 message db exception get 90007", "r9 = java lang throwable $ r4", "throw r9", "if z0 ! = 0 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ parameter0", "$ r4 = new org h2 util sort property", "specialinvoke $ r4 < init >", "r2 = org h2 util string utils array split r0 10 1", "i0 = lengthof r2", "i3 = 0", "label if i3 > = i0 goto label3", "r3 = r2 [ i3 ]", "i1 = r3 index of 61", "if i1 < = 0 goto label2", "$ r5 = r3 substring 0 i1", "$ i2 = i1 + 1", "$ r6 = r3 substring $ i2", "$ r4 put $ r5 $ r6", "label i3 = i3 + 1", "goto label1", "label if i3 > = i0 goto label3", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org h2 util synchronize verifier enable", "if $ z0 == 0 goto label1", "org h2 util synchronize verifier detect concurrent access r0", "label return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 equal r1", "if $ z0 == 0 goto label1", "return 1", "if $ z0 == 0 goto label1", "label $ z1 = r0 start with r1", "if $ z1 == 0 goto label2", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r3 = r9 append \\ `` expect \\ ``", "$ r4 = $ r3 append r1", "$ r5 = $ r4 append \\ `` get \\ ``", "$ r6 = $ r5 append r0", "$ r7 = $ r6 to string", "$ r8 = org h2 message db exception get unsupported exception $ r7", "r10 = java lang throwable $ r8", "throw r10", "if $ z1 == 0 goto label2", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label i0 = lengthof r0", "if i0 ! = 0 goto label2", "$ r2 = org h2 util utils empty_bytes", "return $ r2", "if i0 ! = 0 goto label2", "label r1 = newarray byte [ i0 ]", "java lang system arraycopy r0 0 r1 0 i0", "return r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["i0 = @ parameter0", "if i0 ! = 0 goto label1", "$ r1 = org h2 util utils empty_int_array", "return $ r1", "if i0 ! = 0 goto label1", "label $ r0 = newarray int [ i0 ]", "return $ r0"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org h2 util utils resource", "$ r2 = $ r1 get r0", "r5 = byte [ ] $ r2", "if r5 ! = null goto label1", "r5 = org h2 util utils load resource r0", "$ r3 = org h2 util utils resource", "$ r3 put r0 r5", "label if r5 ! = null goto label2", "$ r6 = org h2 util utils empty_bytes", "goto label3", "label return $ r6", "label if r5 ! = null goto label2", "label $ r6 = r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org h2 value value array", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "r1 = @ parameter2", "label if r1 ! = null goto label03", "$ i3 = int l0", "r12 = org h2 util i o utils read string and close r0 $ i3", "$ r7 = org h2 engine constant utf8", "$ r8 = r12 get bytes $ r7", "$ r9 = org h2 value value lob create small lob 16 $ r8", "label return $ r9", "label if r1 ! = null goto label03", "label $ r2 = r1 get lob compression algorithm 16", "if $ r2 == null goto label04", "$ z0 = 1", "goto label05", "label z1 = $ z0", "l4 = 9223372036854775807l", "$ b1 = l0 cmp 0l", "if $ b1 < 0 goto label06", "$ b2 = l0 cmp 9223372036854775807l", "if $ b2 > = 0 goto label06", "l4 = l0", "label i5 = org h2 value value lob get buff size r1 z1 l4", "if i5 < 2147483647 goto label07", "r13 = org h2 util i o utils read string and close r0 -1", "r14 = r13 to char array", "i6 = lengthof r14", "goto label10", "label $ i9 = r1 get max length inplace lob", "if i6 > $ i9 goto label12", "r18 = new java lang string", "specialinvoke r18 < init > r14 0 i6", "$ r5 = org h2 engine constant utf8", "r15 = r18 get bytes $ r5", "$ r6 = org h2 value value lob create small lob 16 r15", "label return $ r6", "if i6 > $ i9 goto label12", "label r19 = new org h2 value value lob", "specialinvoke r19 < init > 16 null", "specialinvoke r19 create from reader r14 i6 r0 l4 r1", "label return r19", "if i5 < 2147483647 goto label07", "label r14 = newarray char [ i5 ]", "i7 = org h2 util i o utils read fully r0 r14 i5", "if i7 > = 0 goto label08", "$ i8 = 0", "goto label09", "label i6 = $ i8", "if i7 > = 0 goto label08", "label $ i8 = i7", "if $ r2 == null goto label04", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [], [48], [49], [50], [51], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 value value lob r0", "$ z0 = r1 compression", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "r1 = @ parameter2", "label $ r2 = r1 get lob compression algorithm 16", "if $ r2 == null goto label02", "$ z0 = 1", "goto label03", "label z1 = $ z0", "l4 = 9223372036854775807l", "$ b1 = l0 cmp 0l", "if $ b1 < 0 goto label04", "$ b3 = l0 cmp 9223372036854775807l", "if $ b3 > = 0 goto label04", "l4 = l0", "label i5 = org h2 value value lob db get buffer size r1 z1 l4", "if i5 < 2147483647 goto label05", "r9 = org h2 util i o utils read string and close r0 -1", "r10 = r9 to char array", "i6 = lengthof r10", "goto label08", "label $ i9 = r1 get max length inplace lob", "if i6 > $ i9 goto label10", "r14 = new java lang string", "specialinvoke r14 < init > r10 0 i6", "$ r5 = org h2 engine constant utf8", "r11 = r14 get bytes $ r5", "$ l2 = long i6", "$ r6 = org h2 value value lob db create small lob 16 r11 $ l2", "label return $ r6", "if i6 > $ i9 goto label10", "label r15 = new org h2 value value lob db", "specialinvoke r15 < init > 16 null 0l", "specialinvoke r15 create temp from reader r10 i6 r0 l4 r1", "label return r15", "if i5 < 2147483647 goto label05", "label r10 = newarray char [ i5 ]", "i7 = org h2 util i o utils read fully r0 r10 i5", "if i7 > = 0 goto label06", "$ i8 = 0", "goto label07", "label i6 = $ i8", "if i7 > = 0 goto label06", "label $ i8 = i7", "if $ r2 == null goto label02", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], [44], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 value value uuid r0", "$ l0 = r1 high", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i2 = 0", "label $ i0 = r1 length", "if i2 > = $ i0 goto label2", "$ c1 = r1 char at i2", "r2 = org hamcrest base description r0", "r2 append $ c1", "i2 = i2 + 1", "goto label1", "if i2 > = $ i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = java lang integer value of i0", "$ r1 = org hamcrest core be equal equal to $ r0", "$ r2 = org hamcrest collection be array with size array with size $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org hamcrest core be equal equal to r0", "$ r2 = org hamcrest core be be $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org hamcrest core be instance of instance of r0", "$ r2 = org hamcrest core be be $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org hamcrest object have to string have to string r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org hibernate annotation common util string helper be quote r0", "if $ z0 == 0 goto label1", "$ i0 = r0 length", "$ i1 = $ i0 - 1", "$ r1 = r0 substring 1 $ i1", "return $ r1", "if $ z0 == 0 goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate action internal entity action r0", "$ r1 = r2 persister", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb cfg spi jaxb cfg config property type r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb cfg spi jaxb cfg event listener group type r0", "r2 type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org hibernate boot jaxb hbm spi jaxb hbm any association type r0", "$ r1 = r5 column", "if $ r1 ! = null goto label1", "r4 = new java util array list", "specialinvoke r4 < init >", "r6 = org hibernate boot jaxb hbm spi jaxb hbm any association type r0", "r6 column = r4", "label r7 = org hibernate boot jaxb hbm spi jaxb hbm any association type r0", "$ r2 = r7 column", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm any association type r0", "r2 access = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0", "$ r1 = r2 list index", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0", "$ r1 = r2 one to many", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org hibernate boot jaxb hbm spi jaxb hbm array type r0", "$ r1 = r3 batch size", "if $ r1 ! = null goto label1", "return -1", "if $ r1 ! = null goto label1", "label r4 = org hibernate boot jaxb hbm spi jaxb hbm array type r0", "$ r2 = r4 batch size", "$ i0 = $ r2 int value", "return $ i0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0", "$ r1 = r2 element class", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0", "$ r1 = r2 persister", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0", "r2 table = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm auxiliary database object type r0", "r2 drop = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org hibernate boot jaxb hbm spi jaxb hbm auxiliary database object type r0", "$ r1 = r5 dialect scope", "if $ r1 ! = null goto label1", "r4 = new java util array list", "specialinvoke r4 < init >", "r6 = org hibernate boot jaxb hbm spi jaxb hbm auxiliary database object type r0", "r6 dialect scope = r4", "label r7 = org hibernate boot jaxb hbm spi jaxb hbm auxiliary database object type r0", "$ r2 = r7 dialect scope", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm bag collection type r0", "$ r1 = r2 order by", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm column type r0", "r2 read = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm column type r0", "$ r1 = r2 sql type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm column type r0", "r2 sql type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm composite attribute type r0", "$ r1 = r2 parent", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm composite key many to one type r0", "r2 foreign key = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm composite key many to one type r0", "r2 on delete = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org hibernate boot jaxb hbm spi jaxb hbm discriminator subclass entity type r0", "$ r1 = r5 fetch profile", "if $ r1 ! = null goto label1", "r4 = new java util array list", "specialinvoke r4 < init >", "r6 = org hibernate boot jaxb hbm spi jaxb hbm discriminator subclass entity type r0", "r6 fetch profile = r4", "label r7 = org hibernate boot jaxb hbm spi jaxb hbm discriminator subclass entity type r0", "$ r2 = r7 fetch profile", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm entity base definition r0", "r2 _abstract = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm entity base definition r0", "r2 dynamic update = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm entity base definition r0", "r2 select before update = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm filter alias map type r0", "$ r1 = r2 entity", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm filter parameter type r0", "r2 parameter value type name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org hibernate boot jaxb hbm spi jaxb hbm filter type r0", "$ r1 = r5 content", "if $ r1 ! = null goto label1", "r4 = new java util array list", "specialinvoke r4 < init >", "r6 = org hibernate boot jaxb hbm spi jaxb hbm filter type r0", "r6 content = r4", "label r7 = org hibernate boot jaxb hbm spi jaxb hbm filter type r0", "$ r2 = r7 content", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm filter type r0", "r2 auto alias injection = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org hibernate boot jaxb hbm spi jaxb hbm hibernate mapping r0", "$ r1 = r3 default cascade", "if $ r1 ! = null goto label1", "return \\ `` none\\ ``", "if $ r1 ! = null goto label1", "label r4 = org hibernate boot jaxb hbm spi jaxb hbm hibernate mapping r0", "$ r2 = r4 default cascade", "return $ r2"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm map type r0", "r2 sort = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm name native query type r0", "r2 cacheable = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm root entity type r0", "$ r1 = r2 natural id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm root entity type r0", "$ r1 = r2 version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org hibernate boot jaxb hbm spi jaxb hbm secondary table type r0", "$ r1 = r3 optional", "if $ r1 ! = null goto label1", "return 0", "if $ r1 ! = null goto label1", "label r4 = org hibernate boot jaxb hbm spi jaxb hbm secondary table type r0", "$ r2 = r4 optional", "$ z0 = $ r2 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm subclass entity base definition r0", "r2 _extends = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r4 = null", "goto label2", "label return $ r4", "if r1 ! = null goto label1", "label r5 = org hibernate boot model relational database r0", "$ r2 = r5 jdbc environment", "$ r3 = $ r2 get identifier helper", "$ r4 = $ r3 to identifier r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot model source spi abstract attribute key r0", "$ r1 = r2 property", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot registry standard service registry builder r0", "$ r1 = r2 setting", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org hibernate bytecode internal javassist bulk accessor r0", "$ r1 = r4 type", "$ r2 = $ r1 clone", "$ r3 = java lang class [ ] $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate cache spi query key r0", "$ r1 = r2 custom transformer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r2 = java util locale root", "$ r3 = r0 to upper case $ r2", "$ r4 = org hibernate cache mode value of $ r3", "label return $ r4"], "adj": [[1], [2], [], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r14 = org hibernate cfg abstract property holder r0", "r14 current property column override = null", "r15 = org hibernate cfg abstract property holder r0", "r15 current property join column override = null", "r16 = org hibernate cfg abstract property holder r0", "r16 current property join table override = null", "r17 = org hibernate cfg abstract property holder r0", "r17 current property foreign key override = null", "goto label5", "label return", "if r1 ! = null goto label1", "label r18 = org hibernate cfg abstract property holder r0", "$ r2 = r18 get path", "r19 = org hibernate annotation common reflection x annotate element r1", "$ r3 = org hibernate cfg abstract property holder build column override r19 $ r2", "r20 = org hibernate cfg abstract property holder r0", "r20 current property column override = $ r3", "r21 = org hibernate cfg abstract property holder r0", "$ r4 = r21 current property column override", "$ i0 = $ r4 size", "if $ i0 ! = 0 goto label2", "r22 = org hibernate cfg abstract property holder r0", "r22 current property column override = null", "label r23 = org hibernate cfg abstract property holder r0", "$ r5 = r23 get path", "r24 = org hibernate annotation common reflection x annotate element r1", "$ r6 = org hibernate cfg abstract property holder build join column override r24 $ r5", "r25 = org hibernate cfg abstract property holder r0", "r25 current property join column override = $ r6", "r26 = org hibernate cfg abstract property holder r0", "$ r7 = r26 current property join column override", "$ i1 = $ r7 size", "if $ i1 ! = 0 goto label3", "r27 = org hibernate cfg abstract property holder r0", "r27 current property join column override = null", "label r28 = org hibernate cfg abstract property holder r0", "$ r8 = r28 get path", "r29 = org hibernate annotation common reflection x annotate element r1", "$ r9 = org hibernate cfg abstract property holder build join table override r29 $ r8", "r30 = org hibernate cfg abstract property holder r0", "r30 current property join table override = $ r9", "r31 = org hibernate cfg abstract property holder r0", "$ r10 = r31 current property join table override", "$ i2 = $ r10 size", "if $ i2 ! = 0 goto label4", "r32 = org hibernate cfg abstract property holder r0", "r32 current property join table override = null", "label r33 = org hibernate cfg abstract property holder r0", "$ r11 = r33 get path", "r34 = org hibernate annotation common reflection x annotate element r1", "$ r12 = org hibernate cfg abstract property holder build foreign key override r34 $ r11", "r35 = org hibernate cfg abstract property holder r0", "r35 current property foreign key override = $ r12", "r36 = org hibernate cfg abstract property holder r0", "$ r13 = r36 current property foreign key override", "$ i3 = $ r13 size", "if $ i3 ! = 0 goto label5", "r37 = org hibernate cfg abstract property holder r0", "r37 current property foreign key override = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org hibernate cfg configuration r0", "$ r3 = r5 property", "r2 = $ r3 get r1", "$ z0 = r2 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r2", "goto label2", "label return $ r4", "if $ z0 == 0 goto label1", "label $ r4 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org hibernate cfg configuration r0", "$ r2 = r3 property", "$ r2 put all r1", "r4 = org hibernate cfg configuration r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org hibernate cfg configuration r0", "$ r2 = r4 metadata source", "$ r2 add u r l r1", "r5 = org hibernate cfg configuration r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org hibernate cfg attribute converter definition from r1", "r3 = org hibernate cfg configuration r0", "r3 add attribute converter $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org hibernate internal util string helper unqualify r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org hibernate collection internal abstract persistent collection r0", "$ z0 = r1 initialize", "if $ z0 ! = 0 goto label1", "r2 = org hibernate collection internal abstract persistent collection r0", "$ z1 = r2 be connect to session", "if $ z1 == 0 goto label1", "r3 = org hibernate collection internal abstract persistent collection r0", "$ z2 = r3 be inverse collection no orphan delete", "if $ z2 == 0 goto label1", "$ z3 = 1", "goto label2", "label return $ z3", "if $ z2 == 0 goto label1", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r5 = org hibernate collection internal abstract persistent collection r0", "$ r3 = r5 session", "$ r4 = $ r3 get persistence context internal", "r1 = $ r4 get collection entry r0", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label r2 = r1 get load persister", "$ z0 = r2 be inverse", "if $ z0 == 0 goto label2", "$ z1 = r2 have orphan delete", "if $ z1 ! = 0 goto label2", "$ z2 = 1", "goto label3", "label return $ z2", "if $ z1 ! = 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r5 = org hibernate collection internal abstract persistent collection r0", "$ r3 = r5 operation queue", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r4 = r1 next", "r2 = org hibernate collection internal abstract persistent collection $ delayed operation $ r4", "r2 operate", "goto label1", "if $ z0 == 0 goto label2", "label r6 = org hibernate collection internal abstract persistent collection r0", "r6 clear operation queue", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = specialinvoke r0 equal r1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org hibernate criterion example r0", "r1 be ignore case enable = 1", "r2 = org hibernate criterion example r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate criterion example r0", "r2 selector = r1", "r3 = org hibernate criterion example r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = org hibernate criterion example $ not null or zero property selector instance", "r3 = org hibernate criterion example r0", "r4 = org hibernate criterion example $ property selector $ r1", "r3 set property selector r4", "r5 = org hibernate criterion example r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r4 = new org hibernate criterion s q l criterion", "specialinvoke r4 < init > r0 r1 r2", "r5 = org hibernate criterion criterion r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org hibernate criterion junction r0", "$ r2 = r3 condition", "$ r2 add r1", "r4 = org hibernate criterion junction r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org hibernate criterion natural identifier r0", "$ r3 = r6 conjunction", "$ r4 = org hibernate criterion restriction eq r1 r2", "r7 = org hibernate criterion criterion $ r4", "$ r3 add r7", "r8 = org hibernate criterion natural identifier r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r28 = org hibernate criterion order r0", "$ r9 = r28 property name", "r3 = r2 get column use projection r1 $ r9", "r29 = org hibernate criterion order r0", "$ r10 = r29 property name", "r4 = r2 get type use projection r1 $ r10", "r5 = r2 get factory", "r30 = org hibernate engine spi map r5", "r6 = r4 sql type r30", "r26 = new java lang string builder", "specialinvoke r26 < init >", "i2 = 0", "label $ i1 = lengthof r3", "if i2 > = $ i1 goto label13", "r27 = new java lang string builder", "specialinvoke r27 < init >", "z2 = 0", "r31 = org hibernate criterion order r0", "$ z0 = r31 ignore case", "if $ z0 == 0 goto label05", "i0 = r6 [ i2 ]", "if i0 == 12 goto label02", "if i0 == 1 goto label02", "if i0 ! = -1 goto label03", "label $ z3 = 1", "goto label04", "label z2 = $ z3", "label if z2 == 0 goto label06", "$ r17 = r5 get dialect", "$ r18 = $ r17 get lowercase function", "$ r19 = r27 append $ r18", "$ r19 append 40", "label $ r14 = r3 [ i2 ]", "r27 append $ r14", "if z2 == 0 goto label07", "r27 append 41", "label $ r21 = r5 get dialect", "$ r22 = r27 to string", "r32 = org hibernate criterion order r0", "$ z1 = r32 ascend", "if $ z1 == 0 goto label08", "$ r23 = \\ `` asc\\ ``", "goto label09", "label r33 = org hibernate criterion order r0", "$ r15 = r33 null precedence", "if $ r15 == null goto label10", "r34 = org hibernate criterion order r0", "$ r24 = r34 null precedence", "goto label11", "label $ r25 = $ r21 render order by element $ r22 null $ r23 $ r24", "r26 append $ r25", "$ i3 = lengthof r3", "$ i4 = $ i3 - 1", "if i2 > = $ i4 goto label12", "r26 append \\", "label i2 = i2 + 1", "goto label01", "if $ r15 == null goto label10", "label $ r16 = r5 get setting", "$ r24 = $ r16 get default null precedence", "if $ z1 == 0 goto label08", "label $ r23 = \\ `` desc\\ ``", "if i0 ! = -1 goto label03", "label $ z3 = 0", "if i2 > = $ i1 goto label13", "label $ r12 = r26 to string", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [], [47], [48], [49], [50], [51], [], [53], [54], [55], [56], [57], [58], [59], [], [61], [62], [63], [64], [65], [66], [67], [68], [69], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org hibernate criterion projection list r0", "$ r2 = r3 element", "$ r2 add r1", "r4 = org hibernate criterion projection list r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org hibernate criterion projection list r0", "$ r1 = r4 element", "$ r2 = $ r1 get i0", "$ r3 = org hibernate criterion projection $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org hibernate criterion property projection", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r5 = new org hibernate criterion s q l projection", "specialinvoke r5 < init > r0 r1 r2 r3", "r6 = org hibernate criterion projection r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org hibernate criterion property r0", "$ r3 = r5 get property name", "$ r4 = org hibernate criterion restriction between $ r3 r1 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org hibernate criterion property r0", "$ r2 = r4 get property name", "$ r3 = org hibernate criterion restriction in $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org hibernate criterion property r0", "$ r2 = r4 get property name", "$ r3 = org hibernate criterion subqueries property ne $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org hibernate criterion property r0", "$ r2 = r4 get property name", "$ r3 = org hibernate criterion subqueries property le $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org hibernate criterion property r0", "$ r2 = r4 get property name", "$ r3 = org hibernate criterion restriction eq property $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org hibernate criterion property r0", "$ r2 = r4 get property name", "$ r3 = org hibernate criterion restriction ne property $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org hibernate criterion property r0", "$ r2 = r4 get property name", "$ r3 = org hibernate criterion restriction le property $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org hibernate criterion property r0", "$ r1 = r3 get property name", "$ r2 = org hibernate criterion projection avg $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org hibernate criterion property r0", "$ r1 = r3 get property name", "$ r2 = org hibernate criterion order asc $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org hibernate criterion simple expression", "specialinvoke $ r2 < init > r0 r1 \\ `` > =\\ ``", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org hibernate criterion property expression", "specialinvoke $ r2 < init > r0 r1 \\ `` =\\ ``", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org hibernate criterion property expression", "specialinvoke $ r2 < init > r0 r1 \\ `` < \\ ``", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org hibernate criterion simple projection r0", "r3 = r7 get type r1 r2", "i2 = 0", "i0 = lengthof r3", "i3 = 0", "label if i3 > = i0 goto label2", "r5 = r3 [ i3 ]", "$ r6 = r2 get factory", "r8 = org hibernate engine spi map $ r6", "$ i1 = r5 get column span r8", "i2 = i2 + $ i1", "i3 = i3 + 1", "goto label1", "label if i3 > = i0 goto label2", "label return i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org hibernate criterion property subquery expression", "specialinvoke r3 < init > r0 \\ `` < \\", "r4 = org hibernate criterion criterion r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org hibernate criterion property subquery expression", "specialinvoke r3 < init > r0 \\ `` < =\\", "r4 = org hibernate criterion criterion r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org hibernate criterion property subquery expression", "specialinvoke r3 < init > r0 \\ `` < =\\", "r4 = org hibernate criterion criterion r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org hibernate dialect function s q l function registry r0", "$ r2 = r3 function map", "$ z0 = $ r2 contain key r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r11 = @ parameter0", "r1 = @ parameter1", "r15 = org hibernate engine internal natural id xref delegate r0", "r12 = r15 locate persister for key r11", "r16 = org hibernate engine internal natural id xref delegate r0", "$ r3 = r16 natural id resolution cache map", "$ r4 = $ r3 get r12", "r2 = org hibernate engine internal natural id xref delegate $ natural id resolution cache $ r4", "if r2 ! = null goto label1", "r14 = new org hibernate assertion failure", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r7 = r13 append \\ `` expect natural id resolution cache to exist already for entity \\ ``", "$ r8 = r12 get entity name", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 to string", "specialinvoke r14 < init > $ r10", "r17 = java lang throwable r14", "throw r17", "if r2 ! = null goto label1", "label r2 stash invalid natural id reference r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org hibernate engine jdbc internal jdbc coordinator impl r0", "$ z0 = r5 be ready for serialization", "if $ z0 ! = 0 goto label1", "r4 = new org hibernate hibernate exception", "specialinvoke r4 < init > \\ `` can not serialize session while connected\\ ``", "r6 = java lang throwable r4", "throw r6", "if $ z0 ! = 0 goto label1", "label r7 = org hibernate engine jdbc internal jdbc coordinator impl r0", "$ z1 = r7 be user supplied connection", "r1 write boolean $ z1", "r8 = org hibernate engine jdbc internal jdbc coordinator impl r0", "$ r2 = r8 logical connection", "$ r2 serialize r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = org hibernate engine profile fetch profile r0", "$ z0 = r1 contain join fetched collection", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 start with \\ `` { \\ ``", "if $ z0 == 0 goto label1", "$ z1 = r0 end with \\ `` } \\ ``", "if $ z1 ! = 0 goto label2", "label return 0", "if $ z1 ! = 0 goto label2", "label i0 = r0 index of \\ `` call\\ ``", "if i0 > 0 goto label3", "return 0", "if i0 > 0 goto label3", "label $ i3 = i0 + 4", "r1 = r0 substring 1 $ i3", "i6 = 0", "z3 = 1", "i1 = r1 length", "i7 = 0", "label if i7 > = i1 goto label8", "$ c4 = r1 char at i7", "c2 = java lang character to low case $ c4", "$ z2 = java lang character be whitespace c2", "if $ z2 == 0 goto label5", "goto label7", "label i7 = i7 + 1", "goto label4", "if $ z2 == 0 goto label5", "label $ r3 = \\ `` ? =call\\ ``", "$ c5 = $ r3 char at i6", "if c2 ! = $ c5 goto label6", "i6 = i6 + 1", "if c2 ! = $ c5 goto label6", "label z3 = 0", "goto label8", "label return z3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [], [26], [27], [28], [29], [30], [31], [32], [], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r8 = new org hibernate engine query spi query plan cache $ parameter metadata key", "specialinvoke r8 < init > r1 z0", "r9 = org hibernate engine query spi query plan cache r0", "$ r4 = r9 parameter metadata cache", "r10 = org hibernate engine query spi query plan cache r0", "$ r5 = query plan cache $ lambda_get s q l parameter metadata_0__1 bootstrap $ r10 r1", "$ r6 = $ r4 compute if absent r8 $ r5", "$ r7 = org hibernate query parameter metadata $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate engine query spi sql native s q l query join return r0", "$ r1 = r2 owner property", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate engine query spi sql native s q l query non scalar return r0", "$ r1 = r2 alias", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org hibernate engine spi action queue r0", "$ z0 = r5 have unresolved entity insert action", "if $ z0 == 0 goto label1", "r4 = new java lang illegal state exception", "specialinvoke r4 < init > \\ `` about to execute action but there be unresolved entity insert action \\ ``", "throw r4", "if $ z0 == 0 goto label1", "label $ r1 = org hibernate engine spi action queue executable_lists_map", "r6 = org hibernate engine spi action queue r0", "$ r2 = action queue $ lambda_execute actions_1__2 bootstrap $ r6", "$ r1 for each $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r4 = org hibernate engine spi action queue r0", "r4 be transaction coordinator share = z0", "$ r2 = org hibernate engine spi action queue $ transaction completion process access $ 1400 r1", "r5 = org hibernate engine spi action queue r0", "r5 before transaction process = $ r2", "$ r3 = org hibernate engine spi action queue $ transaction completion process access $ 1500 r1", "r6 = org hibernate engine spi action queue r0", "r6 after transaction process = $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org hibernate engine spi batch fetch queue r0", "$ r3 = r8 subselects by entity key", "if $ r3 ! = null goto label1", "r7 = new java util hash map", "specialinvoke r7 < init > 12", "r9 = org hibernate engine spi batch fetch queue r0", "r9 subselects by entity key = r7", "label r10 = org hibernate engine spi batch fetch queue r0", "$ r4 = r10 subselects by entity key", "$ r4 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org hibernate engine spi batch fetch queue r0", "$ r3 = r9 batch loadable collection", "if $ r3 ! = null goto label1", "return", "if $ r3 ! = null goto label1", "label r10 = org hibernate engine spi batch fetch queue r0", "$ r4 = r10 batch loadable collection", "$ r5 = r1 get load persister", "$ r6 = $ r5 get role", "$ r7 = $ r4 get $ r6", "r2 = java util link hash map $ r7", "if r2 == null goto label2", "r2 remove r1", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org hibernate engine spi collection entry r0", "$ z0 = r10 be ignore", "if $ z0 == 0 goto label1", "r11 = org hibernate engine spi collection entry r0", "r11 ignore = 0", "goto label2", "label r14 = org hibernate engine spi collection entry r0", "$ r4 = r14 load key", "r15 = org hibernate engine spi collection entry r0", "$ r3 = r15 role", "r16 = org hibernate engine spi collection entry r0", "$ r2 = r16 snapshot", "r1 set snapshot $ r4 $ r3 $ r2", "return", "if $ z0 == 0 goto label1", "label r12 = org hibernate engine spi collection entry r0", "$ z1 = r12 be process", "if $ z1 ! = 0 goto label2", "r9 = new org hibernate hibernate exception", "$ r6 = org hibernate engine spi collection entry log", "$ r7 = r1 get role", "$ r8 = $ r6 collection not process by flush $ r7", "specialinvoke r9 < init > $ r8", "r13 = java lang throwable r9", "throw r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org hibernate engine spi collection entry r0", "$ r3 = r8 snapshot", "if $ r3 ! = null goto label1", "r7 = new org hibernate assertion failure", "specialinvoke r7 < init > \\ `` no collection snapshot for orphan delete\\ ``", "r9 = java lang throwable r7", "throw r9", "if $ r3 ! = null goto label1", "label r10 = org hibernate engine spi collection entry r0", "$ r4 = r10 snapshot", "$ r5 = r2 get orphan $ r4 r1", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate event spi pre update event r0", "$ r1 = r2 old state", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return", "if r0 ! = null goto label1", "label $ z0 = r0 instanceof org hibernate proxy hibernate proxy", "if $ z0 == 0 goto label2", "$ r6 = org hibernate proxy hibernate proxy r0", "$ r7 = $ r6 get hibernate lazy initializer", "$ r7 initialize", "goto label4", "label return", "if $ z0 == 0 goto label2", "label $ z1 = r0 instanceof org hibernate collection spi persistent collection", "if $ z1 == 0 goto label3", "$ r5 = org hibernate collection spi persistent collection r0", "$ r5 force initialization", "if $ z1 == 0 goto label3", "label $ z2 = r0 instanceof org hibernate engine spi persistent attribute interceptable", "if $ z2 == 0 goto label4", "r1 = org hibernate engine spi persistent attribute interceptable r0", "r2 = r1 $ $ _hibernate_get interceptor", "$ z3 = r2 instanceof org hibernate bytecode enhance spi interceptor enhancement a proxy laziness interceptor", "if $ z3 == 0 goto label4", "$ r3 = org hibernate bytecode enhance spi interceptor enhancement a proxy laziness interceptor r2", "$ r3 force initialize r0 null"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "$ r1 = org hibernate hql internal ast tree from clause from element predicate", "r3 = antlr collection ast r0", "$ r2 = org hibernate hql internal ast util a s t util collect child r3 $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "r2 = @ parameter3", "r3 = r0 create i0 r1", "$ r4 = org hibernate hql internal ast util a s t util insert sibling r3 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r1 get next sibling", "r0 set next sibling $ r2", "r1 set next sibling r0", "return r0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r24 = org hibernate hql internal ast util session factory helper r0", "$ r2 = r24 sfi", "$ r3 = $ r2 get metamodel", "$ r4 = $ r3 collection persister r1", "$ r5 = org hibernate persister collection queryable collection $ r4", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org hibernate hql internal ast util session factory helper r0", "$ r2 = r5 collection property mapping by role", "$ r3 = $ r2 get r1", "$ r4 = org hibernate persister entity property map $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "l1 = @ parameter3", "r2 = org hibernate id enhance optimizer factory build optimizer r0 r1 i0", "$ r3 = class \\ `` lorg hibernate id enhance initial value aware optimizer \\ ``", "$ z0 = $ r3 be instance r2", "if $ z0 == 0 goto label1", "$ r4 = org hibernate id enhance initial value aware optimizer r2", "$ r4 inject initial value l1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "i3 = 0", "i4 = 0", "label if i4 > = 4 goto label2", "$ i0 = i3 < < 8", "$ i2 = $ i0 - -128", "$ b1 = r0 [ i4 ]", "i3 = $ i2 + $ b1", "i4 = i4 + 1", "goto label1", "label if i4 > = 4 goto label2", "label return i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate internal util collection bound concurrent hash map r0", "$ z0 = r2 contain value r1", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i1 = 0", "label r4 = org hibernate internal util collection bound concurrent hash map r0", "$ r1 = r4 segment", "$ i0 = lengthof $ r1", "if i1 > = $ i0 goto label2", "r5 = org hibernate internal util collection bound concurrent hash map r0", "$ r2 = r5 segment", "$ r3 = $ r2 [ i1 ]", "$ r3 clear", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "r2 = r1 get r0", "if r2 ! = null goto label1", "return i0", "if r2 ! = null goto label1", "label $ r3 = class \\ `` ljava lang integer \\ ``", "$ z0 = $ r3 be instance r2", "if $ z0 == 0 goto label2", "$ r18 = java lang integer r2", "$ i2 = $ r18 int value", "return $ i2", "if $ z0 == 0 goto label2", "label $ r4 = class \\ `` ljava lang string \\ ``", "$ z1 = $ r4 be instance r2", "if $ z1 == 0 goto label3", "$ r17 = java lang string r2", "$ i1 = java lang integer parse int $ r17", "return $ i1", "if $ z1 == 0 goto label3", "label r20 = new org hibernate internal util config configuration exception", "r19 = new java lang string builder", "specialinvoke r19 < init >", "$ r7 = r19 append \\ `` could not determine how to handle configuration value [ name=\\ ``", "$ r8 = $ r7 append r0", "$ r9 = $ r8 append \\", "$ r10 = $ r9 append r2", "$ r11 = $ r10 append \\ `` \\ ``", "$ r12 = r2 get class", "$ r13 = $ r12 get name", "$ r14 = $ r11 append $ r13", "$ r15 = $ r14 append \\ `` ] a int\\ ``", "$ r16 = $ r15 to string", "specialinvoke r20 < init > $ r16", "r21 = java lang throwable r20", "throw r21"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = r1 get modifier", "$ z0 = java lang reflect modifier be public $ i0", "if $ z0 == 0 goto label1", "$ i1 = r0 get modifier", "$ z1 = java lang reflect modifier be public $ i1", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate jpa boot internal entity manager factory builder impl r0", "$ r1 = r2 metadata", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r9 = org hibernate jpa boot internal entity manager factory builder impl r0", "$ r1 = r9 metadata", "if $ r1 ! = null goto label1", "r10 = org hibernate jpa boot internal entity manager factory builder impl r0", "$ r4 = r10 manage resource", "r11 = org hibernate jpa boot internal entity manager factory builder impl r0", "$ r3 = r11 metamodel builder", "$ r5 = $ r3 get bootstrap context", "r12 = org hibernate jpa boot internal entity manager factory builder impl r0", "$ r6 = r12 metamodel builder", "$ r7 = $ r6 get metadata building option", "$ r8 = org hibernate boot model process spi metadata building process complete $ r4 $ r5 $ r7", "r13 = org hibernate jpa boot internal entity manager factory builder impl r0", "r13 metadata = $ r8", "label r14 = org hibernate jpa boot internal entity manager factory builder impl r0", "$ r2 = r14 metadata", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org hibernate jpa internal util xml helper get element content r0 null", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate loader custom fetch return r0", "$ r1 = r2 owner", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org hibernate loader join walker r0", "$ r5 = r10 get dialect", "r2 = $ r5 create outer join fragment", "r3 = r1 iterator", "r9 = null", "label $ z0 = r3 have next", "if $ z0 == 0 goto label4", "$ r6 = r3 next", "r4 = org hibernate loader outer joinable association $ r6", "if r9 == null goto label2", "$ z1 = r9 be many to many with r4", "if $ z1 == 0 goto label2", "$ r7 = r9 get joinable", "$ r8 = org hibernate persister collection queryable collection $ r7", "r4 add many to many join r2 $ r8", "goto label3", "label r9 = r4", "goto label1", "if $ z1 == 0 goto label2", "label r4 add join r2", "if $ z0 == 0 goto label4", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r26 = org hibernate loader basic loader r0", "r1 = r26 get entity persisters", "r27 = org hibernate loader basic loader r0", "r2 = r27 get suffixes", "$ i0 = lengthof r1", "$ r4 = newarray org hibernate loader entity aliases [ $ i0 ]", "r28 = org hibernate loader basic loader r0", "r28 descriptor = $ r4", "i5 = 0", "label r29 = org hibernate loader basic loader r0", "$ r5 = r29 descriptor", "$ i1 = lengthof $ r5", "if i5 > = $ i1 goto label2", "r30 = org hibernate loader basic loader r0", "$ r15 = r30 descriptor", "r22 = new org hibernate loader default entity aliases", "$ r14 = r1 [ i5 ]", "$ r13 = r2 [ i5 ]", "specialinvoke r22 < init > $ r14 $ r13", "$ r15 [ i5 ] = r22", "i5 = i5 + 1", "goto label1", "if i5 > = $ i1 goto label2", "label r31 = org hibernate loader basic loader r0", "r16 = r31 get collection persisters", "r17 = null", "if r16 == null goto label7", "r32 = org hibernate loader basic loader r0", "r3 = r32 get collection suffix", "$ i3 = lengthof r16", "$ r7 = newarray org hibernate loader collection aliases [ $ i3 ]", "r33 = org hibernate loader basic loader r0", "r33 collection descriptor = $ r7", "i6 = 0", "label $ i4 = lengthof r16", "if i6 > = $ i4 goto label6", "$ r8 = r16 [ i6 ]", "r34 = org hibernate loader basic loader r0", "$ z0 = specialinvoke r34 be bag $ r8", "if $ z0 == 0 goto label5", "if r17 ! = null goto label4", "r23 = new java util array list", "specialinvoke r23 < init >", "r17 = r23", "label $ r9 = r16 [ i6 ]", "$ r10 = $ r9 get role", "r17 add $ r10", "label r35 = org hibernate loader basic loader r0", "$ r18 = r35 collection descriptor", "r24 = new org hibernate loader generate collection alias", "$ r20 = r16 [ i6 ]", "$ r21 = r3 [ i6 ]", "specialinvoke r24 < init > $ r20 $ r21", "$ r18 [ i6 ] = r24", "i6 = i6 + 1", "goto label3", "if i6 > = $ i4 goto label6", "label goto label8", "label if r17 == null goto label9", "$ i2 = r17 size", "if $ i2 < = 1 goto label9", "r25 = new org hibernate loader multiple bag fetch exception", "specialinvoke r25 < init > r17", "r37 = java lang throwable r25", "throw r37", "if $ i2 < = 1 goto label9", "label return", "if r16 == null goto label7", "label r36 = org hibernate loader basic loader r0", "r36 collection descriptor = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [], [58], [59], [60], [61], [62], [63], [64], [65], [], [67], [68], [69], [70], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r32 = org hibernate loader plan exec internal entity load query detail r0", "$ r5 = r32 entity reference aliases", "r2 = $ r5 get table alias", "r33 = org hibernate loader plan exec internal entity load query detail r0", "$ r6 = specialinvoke r33 get root entity return", "$ r7 = $ r6 get entity persister", "r3 = org hibernate persister entity outer join loadable $ r7", "r34 = org hibernate loader plan exec internal entity load query detail r0", "$ r8 = r34 get session factory", "$ r9 = $ r8 get jdbc service", "$ r10 = $ r9 get jdbc environment", "r4 = $ r10 get dialect", "r35 = org hibernate loader plan exec internal entity load query detail r0", "$ r11 = r35 get query building parameter", "$ r12 = $ r11 get lock option", "if $ r12 == null goto label1", "r36 = org hibernate loader plan exec internal entity load query detail r0", "$ r20 = r36 get query building parameter", "$ r21 = $ r20 get lock option", "$ r22 = r3 from table fragment r2", "r25 = r4 append lock hint $ r21 $ r22", "r37 = org hibernate loader plan exec internal entity load query detail r0", "$ r23 = r37 get query building parameter", "$ r24 = $ r23 get lock option", "r1 set lock option $ r24", "goto label3", "label r31 = new java lang string builder", "specialinvoke r31 < init >", "$ r27 = r31 append r25", "$ r28 = r3 from join fragment r2 1 1", "$ r29 = $ r27 append $ r28", "$ r30 = $ r29 to string", "r1 append from clause fragment $ r30", "return", "if $ r12 == null goto label1", "label r38 = org hibernate loader plan exec internal entity load query detail r0", "$ r13 = r38 get query building parameter", "$ r14 = $ r13 get lock mode", "if $ r14 == null goto label2", "r39 = org hibernate loader plan exec internal entity load query detail r0", "$ r15 = r39 get query building parameter", "$ r16 = $ r15 get lock mode", "$ r17 = r3 from table fragment r2", "r25 = r4 append lock hint $ r16 $ r17", "r40 = org hibernate loader plan exec internal entity load query detail r0", "$ r18 = r40 get query building parameter", "$ r19 = $ r18 get lock mode", "r1 set lock mode $ r19", "if $ r14 == null goto label2", "label r25 = r3 from table fragment r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org hibernate loader plan exec query internal select statement builder r0", "$ r2 = r8 from clause", "$ i0 = $ r2 length", "if $ i0 < = 0 goto label1", "r9 = org hibernate loader plan exec query internal select statement builder r0", "$ r5 = r9 from clause", "$ r5 append \\", "r10 = org hibernate loader plan exec query internal select statement builder r0", "$ i4 = r10 guesstimate buffer size", "$ i5 = $ i4 + 2", "r11 = org hibernate loader plan exec query internal select statement builder r0", "r11 guesstimate buffer size = $ i5", "label r12 = org hibernate loader plan exec query internal select statement builder r0", "$ r3 = r12 from clause", "$ r3 append r1", "r13 = org hibernate loader plan exec query internal select statement builder r0", "$ i1 = r13 guesstimate buffer size", "$ i2 = r1 length", "$ i3 = $ i1 + $ i2", "r14 = org hibernate loader plan exec query internal select statement builder r0", "r14 guesstimate buffer size = $ i3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate loader plan exec query internal select statement builder r0", "r2 comment = r1", "r3 = org hibernate loader plan exec query internal select statement builder r0", "$ i0 = r3 guesstimate buffer size", "$ i1 = r1 length", "$ i2 = $ i0 + $ i1", "r4 = org hibernate loader plan exec query internal select statement builder r0", "r4 guesstimate buffer size = $ i2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r8 = org hibernate lock option r0", "r7 = r8 get lock mode", "if r7 ! = null goto label1", "r7 = org hibernate lock mode none", "label r9 = org hibernate lock option r0", "$ r3 = r9 alias specific lock mode", "if $ r3 ! = null goto label2", "return r7", "if $ r3 ! = null goto label2", "label r10 = org hibernate lock option r0", "$ r4 = r10 alias specific lock mode", "$ r5 = $ r4 value", "r1 = $ r5 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label5", "$ r6 = r1 next", "r2 = org hibernate lock mode $ r6", "$ z1 = r2 great than r7", "if $ z1 == 0 goto label4", "r7 = r2", "label goto label3", "if $ z0 == 0 goto label5", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r17 = org hibernate mapping persistent class r0", "$ r3 = r17 get referenceable property iterator", "r18 = org hibernate mapping persistent class r0", "$ r4 = specialinvoke r18 get recursive property r1 $ r3", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate mapping simple value r0", "$ r1 = r2 identifier generator strategy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r9 = org hibernate proxy abstract lazy initializer r0", "$ r1 = r9 session", "if $ r1 == null goto label1", "r10 = org hibernate proxy abstract lazy initializer r0", "$ r2 = r10 session", "$ r3 = $ r2 get factory", "$ r4 = $ r3 get session factory option", "$ z0 = $ r4 be initialize lazy state outside transaction enable", "r11 = org hibernate proxy abstract lazy initializer r0", "r11 allow load outside transaction = $ z0", "r12 = org hibernate proxy abstract lazy initializer r0", "$ z1 = r12 allow load outside transaction", "if $ z1 == 0 goto label1", "r13 = org hibernate proxy abstract lazy initializer r0", "$ r5 = r13 session factory uuid", "if $ r5 ! = null goto label1", "r14 = org hibernate proxy abstract lazy initializer r0", "$ r6 = r14 session", "$ r7 = $ r6 get factory", "$ r8 = $ r7 get uuid", "r15 = org hibernate proxy abstract lazy initializer r0", "r15 session factory uuid = $ r8", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new org hibernate query criterion internal expression function basic function expression", "r5 = org hibernate query criterion internal criterion builder impl r0", "specialinvoke r4 < init > r5 r2 r1", "r6 = javax persistence criterion expression r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r3 = r0 get class", "$ z0 = r1 equal $ r3", "if $ z0 == 0 goto label2", "return r0", "if $ z0 == 0 goto label2", "label r2 = org hibernate query criteria internal value handler factory determine appropriate handler r1", "if r2 ! = null goto label3", "$ r5 = org hibernate query criteria internal value handler factory unknown conversion r0 r1", "throw $ r5", "if r2 ! = null goto label3", "label $ r4 = r2 convert r0", "return $ r4"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org hibernate query internal abstract produce query r0", "r3 set comment r1", "return 1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 have theta join", "if $ z0 == 0 goto label1", "r4 = org hibernate sql join fragment r0", "r4 have theta join = 1", "label $ r2 = r1 to from fragment string", "$ r3 = r1 to where fragment string", "r5 = org hibernate sql join fragment r0", "r5 add join $ r2 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org hibernate sql join fragment r0", "$ z0 = r1 have theta join", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org hibernate sql order antlr order by fragment parser r0", "$ r2 = r8 get a s t factory", "r9 = org hibernate sql order antlr order by fragment parser r0", "$ r3 = r9 context", "$ r4 = $ r3 get dialect", "$ r5 = r1 get text", "$ r6 = $ r4 quote $ r5", "$ r7 = $ r2 create 21 $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r4 = org hibernate sql order antlr sort specification r0", "$ r2 = r4 get sort key", "r1 = $ r2 get next sibling", "if r1 == null goto label1", "$ i0 = r1 get type", "if 13 ! = $ i0 goto label1", "$ r3 = org hibernate sql order antlr collation specification r1", "goto label2", "label return $ r3", "if 13 ! = $ i0 goto label1", "label $ r3 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate sql select r0", "r2 from clause = r1", "r3 = org hibernate sql select r0", "$ i0 = r3 guesstimate buffer size", "$ i1 = r1 length", "$ i2 = $ i0 + $ i1", "r4 = org hibernate sql select r0", "r4 guesstimate buffer size = $ i2", "r5 = org hibernate sql select r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate sql select r0", "r2 where clause = r1", "r3 = org hibernate sql select r0", "$ i0 = r3 guesstimate buffer size", "$ i1 = r1 length", "$ i2 = $ i0 + $ i1", "r4 = org hibernate sql select r0", "r4 guesstimate buffer size = $ i2", "r5 = org hibernate sql select r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org hibernate sql select r0", "$ r2 = r4 lock option", "$ r2 set lock mode r1", "r5 = org hibernate sql select r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate stat internal query statistic impl r0", "$ r1 = r2 plan cache hit count", "$ l0 = $ r1 sum", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate tool hbm2ddl schema export r0", "r2 output file = r1", "r3 = org hibernate tool hbm2ddl schema export r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = org hibernate type entity type r0", "$ r1 = r4 return class", "if $ r1 ! = null goto label1", "r5 = org hibernate type entity type r0", "$ r3 = specialinvoke r5 determine associate entity class", "r6 = org hibernate type entity type r0", "r6 return class = $ r3", "label r7 = org hibernate type entity type r0", "$ r2 = r7 return class", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org hibernate type entity type r0", "$ z0 = r8 be reference to primary key", "if $ z0 ! = 0 goto label1", "r9 = org hibernate type entity type r0", "$ r3 = r9 unique key property name", "if $ r3 ! = null goto label2", "label r10 = org hibernate type entity type r0", "$ r2 = r10 get identifier type r1", "return $ r2", "if $ r3 ! = null goto label2", "label r11 = org hibernate type entity type r0", "$ r4 = r11 get associate entity name", "r12 = org hibernate type entity type r0", "$ r5 = r12 unique key property name", "r7 = r1 get reference property type $ r4 $ r5", "$ z1 = r7 be entity type", "if $ z1 == 0 goto label3", "$ r6 = org hibernate type entity type r7", "r7 = $ r6 get identifier or unique key type r1", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org hibernate type type factory r0", "$ r3 = r4 any r1 r2 1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r0 ! = null goto label1", "r4 = new org hibernate unresolvable object exception", "specialinvoke r4 < init > r1 r2", "r5 = java lang throwable r4", "throw r5", "if r0 ! = null goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org glassfish hk2 utility bind abstract bind builder create factory binder r0 r1", "r3 = org glassfish hk2 utility bind service bind builder $ r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r0 ! = null goto label01", "r35 = new java lang illegal argument exception", "specialinvoke r35 < init >", "throw r35", "if r0 ! = null goto label01", "label r3 = org glassfish hk2 utility reflection reflection helper get scope annotation from object r0", "if r3 ! = null goto label02", "$ r23 = class \\ `` lorg glassfish hk2 api per lookup \\ ``", "goto label03", "label r4 = $ r23", "r5 = org glassfish hk2 utility reflection reflection helper get qualifier from object r0", "r36 = new java util hash map", "specialinvoke r36 < init >", "if r3 == null goto label04", "org glassfish hk2 utility builder helper get metadata value r3 r36", "label r24 = r5 iterator", "label $ z3 = r24 have next", "if $ z3 == 0 goto label06", "$ r21 = r24 next", "r25 = java lang annotation annotation $ r21", "org glassfish hk2 utility builder helper get metadata value r25 r36", "goto label05", "if $ z3 == 0 goto label06", "label $ i1 = lengthof r2", "if $ i1 > 0 goto label07", "r26 = org glassfish hk2 utility reflection reflection helper get advertise type from object r0 class \\ `` lorg jvnet hk2 annotation contract \\ ``", "goto label09", "label r29 = null", "$ r11 = r0 get class", "$ r12 = $ r11 get annotation class \\ `` lorg glassfish hk2 api use proxy \\ ``", "r30 = org glassfish hk2 api use proxy $ r12", "if r30 == null goto label10", "$ z1 = r30 value", "r29 = java lang boolean value of $ z1", "label r31 = null", "$ r13 = r0 get class", "$ r14 = $ r13 get annotation class \\ `` lorg glassfish hk2 api proxy for same scope \\ ``", "r32 = org glassfish hk2 api proxy for same scope $ r14", "if r32 == null goto label11", "$ z0 = r32 value", "r31 = java lang boolean value of $ z0", "label r33 = org glassfish hk2 api descriptor visibility normal", "$ r15 = r0 get class", "$ r16 = $ r15 get annotation class \\ `` lorg glassfish hk2 api visibility \\ ``", "r7 = org glassfish hk2 api visibility $ r16", "if r7 == null goto label12", "r33 = r7 value", "label r34 = null", "$ r17 = r0 get class", "$ r18 = $ r17 get annotation class \\ `` lorg jvnet hk2 annotation service \\ ``", "r8 = org jvnet hk2 annotation service $ r18", "if r8 == null goto label13", "r34 = r8 analyzer", "label $ r19 = r0 get class", "i0 = org glassfish hk2 utility builder helper get rank $ r19", "r38 = new org glassfish hk2 internal constant active descriptor", "specialinvoke r38 < init > r0 r26 r4 r1 r5 r33 r29 r31 r34 r36 i0", "r39 = org glassfish hk2 utility abstract active descriptor r38", "return r39", "if $ i1 > 0 goto label07", "label r37 = new java util link hash set", "specialinvoke r37 < init >", "r26 = r37", "i2 = lengthof r2", "i3 = 0", "label if i3 > = i2 goto label09", "r28 = r2 [ i3 ]", "r37 add r28", "i3 = i3 + 1", "goto label08", "if r3 ! = null goto label02", "label $ r23 = r3 annotation type"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [], [74], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org glassfish hk2 utility descriptor impl r0", "r2 proxiable = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org glassfish hk2 utility injectee impl r0", "r1 be optional = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org glassfish hk2 utility injectee impl r0", "r2 unqualified = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "r1 = @ parameter2", "$ r7 = newarray java lang annotation annotation [ 0 ]", "$ r8 = r0 get service class \\ `` lorg glassfish hk2 api dynamic configuration service \\", "r2 = org glassfish hk2 api dynamic configuration service $ r8", "r3 = r2 create dynamic configuration", "r25 = new java util link list", "specialinvoke r25 < init >", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label6", "r6 = r1 [ i1 ]", "$ r10 = class \\ `` lorg glassfish hk2 api factory \\ ``", "$ z1 = $ r10 be assignable from r6", "if $ z1 == 0 goto label3", "r23 = r3 add active factory descriptor r6", "if z0 == 0 goto label2", "$ r17 = newarray org glassfish hk2 api filter [ 1 ]", "$ r18 = r23 get factory a a service", "$ r19 = org glassfish hk2 utility builder helper create descriptor filter $ r18 0", "$ r17 [ 0 ] = $ r19", "r26 = org glassfish hk2 api filter [ ] $ r17", "r3 add idempotent filter r26", "$ r20 = newarray org glassfish hk2 api filter [ 1 ]", "$ r21 = r23 get factory a a factory", "$ r22 = org glassfish hk2 utility builder helper create descriptor filter $ r21 0", "$ r20 [ 0 ] = $ r22", "r27 = org glassfish hk2 api filter [ ] $ r20", "r3 add idempotent filter r27", "label $ r13 = r23 get factory a a service", "$ r14 = org glassfish hk2 api active descriptor $ r13", "r25 add $ r14", "$ r15 = r23 get factory a a factory", "$ r16 = org glassfish hk2 api active descriptor $ r15", "r25 add $ r16", "goto label5", "label i1 = i1 + 1", "goto label1", "if $ z1 == 0 goto label3", "label r24 = r3 add active descriptor r6", "if z0 == 0 goto label4", "$ r11 = newarray org glassfish hk2 api filter [ 1 ]", "r28 = org glassfish hk2 api descriptor r24", "$ r12 = org glassfish hk2 utility builder helper create descriptor filter r28 0", "$ r11 [ 0 ] = $ r12", "r29 = org glassfish hk2 api filter [ ] $ r11", "r3 add idempotent filter r29", "label r25 add r24", "label if i1 > = i0 goto label6", "label r3 commit", "return r25"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], [], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org glassfish hk2 utility service locator utility remove filter r0 r1 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish hk2 utility service locator utility create and populate service locator null", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == null goto label1", "if r1 ! = null goto label2", "label $ r5 = new java lang illegal argument exception", "specialinvoke $ r5 < init >", "throw $ r5", "if r1 ! = null goto label2", "label $ r6 = org glassfish hk2 utility builder helper all filter", "r2 = r0 get descriptor $ r6", "r3 = r2 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label4", "$ r7 = r3 next", "r4 = org glassfish hk2 api active descriptor $ r7", "$ r8 = r4 to string", "r1 println $ r8", "goto label3", "if $ z0 == 0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org jvnet hk2 internal service handle impl r0", "$ r4 = r7 lock", "entermonitor $ r4", "label r8 = org jvnet hk2 internal service handle impl r0", "$ r5 = r8 sub handle", "$ r5 add r1", "exitmonitor $ r4", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "label r14 = r1 get constructor r0", "label goto label5", "label if r14 ! = null goto label6", "r19 = new java lang assertion error", "r18 = new java lang string builder", "specialinvoke r18 < init >", "$ r6 = r18 append \\ `` null return from get constructor method of analyzer \\ ``", "$ r7 = $ r6 append r1", "$ r8 = $ r7 append \\ `` for class \\ ``", "$ r9 = r0 get name", "$ r10 = $ r8 append $ r9", "$ r11 = $ r10 to string", "specialinvoke r19 < init > $ r11", "r2 add throwable r19", "return r14", "label if r14 ! = null goto label6", "label r20 = new org jvnet hk2 internal utility $ 2", "specialinvoke r20 < init > r14", "r22 = java security privilege action r20", "java security access controller do privilege r22"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "label $ r3 = r1 get pre destroy method r0", "label return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r24 = new org jvnet hk2 internal collector", "specialinvoke r24 < init >", "$ r10 = r0 get error", "r3 = $ r10 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label11", "$ r11 = r3 next", "r4 = org jvnet hk2 internal error result $ r11", "r5 = r1 iterator", "label $ z1 = r5 have next", "if $ z1 == 0 goto label10", "$ r12 = r5 next", "r6 = org glassfish hk2 api error service $ r12", "label r25 = new org jvnet hk2 internal error information impl", "$ r14 = org glassfish hk2 api error type failure_to_reify", "$ r15 = r4 get descriptor", "$ r16 = r4 get injectee", "$ r17 = r4 get me", "r26 = org glassfish hk2 api descriptor $ r15", "specialinvoke r25 < init > $ r14 r26 $ r16 $ r17", "r27 = org glassfish hk2 api error information r25", "r6 on failure r27", "label goto label09", "label goto label02", "if $ z1 == 0 goto label10", "label goto label01", "if $ z0 == 0 goto label11", "label r24 throw if error", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ parameter0", "r13 = new org jvnet hk2 internal three thirty resolver", "specialinvoke r13 < init > r0", "r14 = new java util hash set", "specialinvoke r14 < init >", "r3 = newarray java lang reflect type [ 1 ]", "r3 [ 0 ] = class \\ `` ljavax inject inject \\ ``", "r15 = new org glassfish hk2 utility reflection parameterized type impl", "specialinvoke r15 < init > class \\ `` lorg glassfish hk2 api injection resolver \\", "r14 add r15", "r16 = new java util hash set", "specialinvoke r16 < init >", "r17 = new org glassfish hk2 utility name impl", "specialinvoke r17 < init > \\ `` system inject resolver\\ ``", "r16 add r17", "r18 = new org jvnet hk2 internal constant active descriptor", "$ r12 = org glassfish hk2 api descriptor visibility local", "$ l0 = r0 get locator id", "specialinvoke r18 < init > r13 r14 class \\ `` ljavax inject singleton \\", "r19 = org glassfish hk2 api active descriptor r18", "return r19"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "label $ r4 = r1 get class reflection helper", "$ r5 = $ r4 find post construct r0 class \\ `` lorg glassfish hk2 api post construct \\ ``", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r0 get generic parameter type", "r3 = r0 get parameter annotation", "$ r6 = new java util link list", "specialinvoke $ r6 < init >", "i1 = 0", "label $ i0 = lengthof r2", "if i1 > = $ i0 goto label2", "$ r7 = r3 [ i1 ]", "r5 = org jvnet hk2 internal utility get param information $ r7", "$ r8 = new org jvnet hk2 internal system injectee impl", "$ r9 = r2 [ i1 ]", "$ r10 = org jvnet hk2 internal utility $ annotation information access $ 100 r5", "$ z0 = org jvnet hk2 internal utility $ annotation information access $ 200 r5", "$ z1 = org jvnet hk2 internal utility $ annotation information access $ 300 r5", "$ r11 = org jvnet hk2 internal utility $ annotation information access $ 400 r5", "specialinvoke $ r8 < init > $ r9 $ r10 i1 r0 $ z0 $ z1 $ r11 r1", "$ r6 add $ r8", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ this", "$ r5 = java lang thread current thread", "r1 = $ r5 get stack trace", "z4 = 0", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label5", "r3 = r1 [ i1 ]", "if z4 ! = 0 goto label3", "$ r8 = \\ `` org jvnet hk2 internal service locator impl\\ ``", "$ r9 = r3 get class name", "$ z1 = $ r8 equal $ r9", "if $ z1 == 0 goto label4", "$ r10 = \\ `` validate\\ ``", "$ r11 = r3 get method name", "$ z2 = $ r10 equal $ r11", "if $ z2 ! = 0 goto label2", "$ r12 = \\ `` check configuration\\ ``", "$ r13 = r3 get method name", "$ z3 = $ r12 equal $ r13", "if $ z3 == 0 goto label4", "label z4 = 1", "goto label4", "label i1 = i1 + 1", "goto label1", "if z4 ! = 0 goto label3", "label $ r6 = r3 get class name", "r14 = org jvnet hk2 internal validation information impl r0", "r4 = specialinvoke r14 get package $ r6", "$ r7 = org jvnet hk2 internal validation information impl packages_to_skip", "$ z0 = $ r7 contain r4", "if $ z0 ! = 0 goto label4", "return r3", "label if i1 > = i0 goto label5", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [], [26], [27], [28], [29], [30], [31], [32], [], [34], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish hk2 utility cache l r u hybrid cache r0", "$ r1 = r2 cache", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish hk2 utility general hk2 thread local r0", "$ r1 = r2 local", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = r2 get type parameter", "i1 = 0", "label $ i0 = lengthof r3", "if i1 > = $ i0 goto label3", "r4 = r3 [ i1 ]", "$ r5 = r4 get name", "$ r6 = r0 get name", "$ z0 = org glassfish hk2 utility general general utility safe equal $ r5 $ r6", "if $ z0 == 0 goto label2", "$ r7 = r1 get actual type argument", "$ r8 = $ r7 [ i1 ]", "return $ r8", "if $ z0 == 0 goto label2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org glassfish hk2 utility reflection reflection helper get type closure r0", "$ r7 = new java util hash set", "specialinvoke $ r7 < init >", "r4 = r2 iterator", "label $ z2 = r4 have next", "if $ z2 == 0 goto label4", "$ r8 = r4 next", "r5 = java lang reflect type $ r8", "r6 = org glassfish hk2 utility reflection reflection helper get raw class r5", "if r6 ! = null goto label2", "goto label1", "if r6 ! = null goto label2", "label $ r9 = r6 get name", "$ z0 = r1 contain $ r9", "if $ z0 == 0 goto label3", "$ r7 add r5", "label goto label1", "if $ z2 == 0 goto label4", "label return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r2 = org jvnet hk2 component multi map r0", "$ r1 = r2 store", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache http impl nio client http async client builder r0", "r2 proxy = r1", "r3 = org apache http impl nio client http async client builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org apache http util args not null r0 \\ `` http host\\ ``", "org apache http util args not null r1 \\ `` http request\\ ``", "r5 = new org apache http nio client method http async method $ request producer impl", "specialinvoke r5 < init > r0 r1", "r6 = org apache http nio protocol http async request producer r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r1 = new org apache http nio protocol basic async response consumer", "specialinvoke r1 < init >", "r2 = org apache http nio protocol http async response consumer r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r12 = @ parameter0", "r15 = org codehaus httpcache4j conditionals r0", "$ r1 = r15 match", "$ z0 = $ r1 be empty", "$ r2 = newarray java lang object [ 2 ]", "$ r2 [ 0 ] = \\ `` if- modified- since\\ ``", "$ r2 [ 1 ] = \\ `` if- match\\ ``", "$ r3 = java lang string format \\ `` the combination of % s and % s be undefined by the http specification\\", "org codehaus httpcache4j util precondition check argument $ z0 $ r3", "r16 = org codehaus httpcache4j conditionals r0", "$ r4 = r16 un modify since", "$ z1 = $ r4 be present", "if $ z1 ! = 0 goto label1", "$ z2 = 1", "goto label2", "label $ r5 = newarray java lang object [ 2 ]", "$ r5 [ 0 ] = \\ `` if- modified- since\\ ``", "$ r5 [ 1 ] = \\ `` if- unmodified- since\\ ``", "$ r6 = java lang string format \\ `` the combination of % s and % s be undefined by the http specification\\", "org codehaus httpcache4j util precondition check argument $ z2 $ r6", "r13 = r12 with nano 0", "r14 = new org codehaus httpcache4j conditionals", "$ r8 = org codehaus httpcache4j conditionals empty", "r17 = org codehaus httpcache4j conditionals r0", "$ r9 = r17 none match", "$ r10 = java util optional of r13", "$ r11 = java util optional empty", "specialinvoke r14 < init > $ r8 $ r9 $ r10 $ r11", "return r14", "if $ z1 ! = 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], []]}
{"nodes": ["$ r0 = org apache http conn multihome plain socket factory default_factory", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r8 = org apache http conn rout http route r0", "$ r1 = r8 target host", "i2 = org apache http util lang utils hash code 17 $ r1", "r9 = org apache http conn rout http route r0", "$ r2 = r9 local address", "i3 = org apache http util lang utils hash code i2 $ r2", "i4 = 0", "label r10 = org apache http conn rout http route r0", "$ r3 = r10 proxy chain", "$ i0 = lengthof $ r3", "if i4 > = $ i0 goto label2", "r11 = org apache http conn rout http route r0", "$ r6 = r11 proxy chain", "$ r7 = $ r6 [ i4 ]", "i3 = org apache http util lang utils hash code i3 $ r7", "i4 = i4 + 1", "goto label1", "if i4 > = $ i0 goto label2", "label r12 = org apache http conn rout http route r0", "$ z0 = r12 secure", "i5 = org apache http util lang utils hash code i3 $ z0", "r13 = org apache http conn rout http route r0", "$ r4 = r13 tunnel", "i6 = org apache http util lang utils hash code i5 $ r4", "r14 = org apache http conn rout http route r0", "$ r5 = r14 layer", "i7 = org apache http util lang utils hash code i6 $ r5", "return i7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r9 = org apache http conn rout route tracker r0", "$ r1 = r9 target host", "i2 = org apache http util lang utils hash code 17 $ r1", "r10 = org apache http conn rout route tracker r0", "$ r2 = r10 local address", "i3 = org apache http util lang utils hash code i2 $ r2", "r11 = org apache http conn rout route tracker r0", "$ r3 = r11 proxy chain", "if $ r3 == null goto label2", "i4 = 0", "label r12 = org apache http conn rout route tracker r0", "$ r6 = r12 proxy chain", "$ i0 = lengthof $ r6", "if i4 > = $ i0 goto label2", "r13 = org apache http conn rout route tracker r0", "$ r7 = r13 proxy chain", "$ r8 = $ r7 [ i4 ]", "i3 = org apache http util lang utils hash code i3 $ r8", "i4 = i4 + 1", "goto label1", "if i4 > = $ i0 goto label2", "label r14 = org apache http conn rout route tracker r0", "$ z0 = r14 connect", "i5 = org apache http util lang utils hash code i3 $ z0", "r15 = org apache http conn rout route tracker r0", "$ z1 = r15 secure", "i6 = org apache http util lang utils hash code i5 $ z1", "r16 = org apache http conn rout route tracker r0", "$ r4 = r16 tunnel", "i7 = org apache http util lang utils hash code i6 $ r4", "r17 = org apache http conn rout route tracker r0", "$ r5 = r17 layer", "i8 = org apache http util lang utils hash code i7 $ r5", "return i8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache http impl client abstract authentication handler default_scheme_priority", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org apache http impl client client params stack r0", "$ r1 = r2 request params", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java lang unsupported operation exception", "specialinvoke $ r2 < init > \\ `` remove parameter in a stack be not support \\ ``", "throw $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache http impl conn abstract pool entry r0", "$ r1 = r2 state", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache http impl conn abstract pool entry r0", "r2 state = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache http impl conn tsccm wait thread aborter r0", "r3 abort = 1", "r4 = org apache http impl conn tsccm wait thread aborter r0", "$ r1 = r4 wait thread", "if $ r1 == null goto label1", "r5 = org apache http impl conn tsccm wait thread aborter r0", "$ r2 = r5 wait thread", "$ r2 interrupt", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache http impl conn tsccm wait thread aborter r0", "r2 wait thread = r1", "r3 = org apache http impl conn tsccm wait thread aborter r0", "$ z0 = r3 abort", "if $ z0 == 0 goto label1", "r1 interrupt", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache http impl cookie public suffix filter r0", "$ z0 = specialinvoke r4 be for public suffix r1", "if $ z0 == 0 goto label1", "return 0", "if $ z0 == 0 goto label1", "label r5 = org apache http impl cookie public suffix filter r0", "$ r3 = r5 wrap", "$ z1 = $ r3 match r1 r2", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = null goto label1", "r8 = new java lang illegal argument exception", "specialinvoke r8 < init > \\ `` cookie may not be null\\ ``", "throw r8", "if r1 ! = null goto label1", "label if r2 ! = null goto label2", "r9 = new org apache http cookie malformed cookie exception", "specialinvoke r9 < init > \\ `` miss value for version attribute\\ ``", "r11 = java lang throwable r9", "throw r11", "label if r2 ! = null goto label2", "label i1 = java lang integer parse int r2", "label goto label5", "label if i1 > = 0 goto label6", "r10 = new org apache http cookie malformed cookie exception", "specialinvoke r10 < init > \\ `` invalid cookie version \\ ``", "r12 = java lang throwable r10", "throw r12", "label if i1 > = 0 goto label6", "label r1 set version i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http client method http request base r0", "r1 reset", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ r1 = r0 get connection manager", "$ r1 shutdown", "label return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache http conn util inet address utils ipv6_std_pattern", "$ r2 = $ r1 matcher r0", "$ z0 = $ r2 match", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r2 = new java lang illegal argument exception", "specialinvoke $ r2 < init > \\ `` parameter name may not be null\\ ``", "throw $ r2", "if r1 ! = null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http client config request config r0", "$ z0 = r1 expect continue enable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http client config request config r0", "$ i0 = r1 connection request timeout", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get content type", "if r1 == null goto label1", "r2 = r1 get element", "$ i0 = lengthof r2", "if $ i0 < = 0 goto label1", "$ r4 = r2 [ 0 ]", "r3 = $ r4 get name", "$ z0 = r3 equal ignore case \\ `` application x-www-form-urlencoded\\ ``", "return $ z0", "if $ i0 < = 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["label r6 = javax net ssl s s l context get instance \\ `` tls\\ ``", "r6 init null null null", "label return r6"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r13 = org apache http impl client redirect location r0", "$ r4 = r13 all", "$ r3 = java net uri r1", "$ r5 = $ r4 set i0 $ r3", "r2 = java net uri $ r5", "r14 = org apache http impl client redirect location r0", "$ r6 = r14 unique", "$ r6 remove r2", "r15 = org apache http impl client redirect location r0", "$ r8 = r15 unique", "$ r7 = java net uri r1", "$ r8 add $ r7", "r16 = org apache http impl client redirect location r0", "$ r9 = r16 all", "$ i1 = $ r9 size", "r17 = org apache http impl client redirect location r0", "$ r10 = r17 unique", "$ i2 = $ r10 size", "if $ i1 == $ i2 goto label1", "r18 = org apache http impl client redirect location r0", "$ r12 = r18 unique", "r19 = org apache http impl client redirect location r0", "$ r11 = r19 all", "$ r12 add all $ r11", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache http impl conn pool http client connection manager r0", "$ r1 = r2 pool", "$ r1 set validate after inactivity i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache http impl io content length output stream r0", "$ z0 = r2 close", "if $ z0 ! = 0 goto label1", "r3 = org apache http impl io content length output stream r0", "r3 close = 1", "r4 = org apache http impl io content length output stream r0", "$ r1 = r4 out", "$ r1 flush", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r6 = org apache http message basic header iterator r0", "$ r1 = r6 header name", "if $ r1 == null goto label1", "r7 = org apache http message basic header iterator r0", "$ r4 = r7 header name", "r8 = org apache http message basic header iterator r0", "$ r2 = r8 all header", "$ r3 = $ r2 [ i0 ]", "$ r5 = $ r3 get name", "$ z0 = $ r4 equal ignore case $ r5", "if $ z0 == 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r8 = new java lang illegal argument exception", "specialinvoke r8 < init > \\ `` list must not be null \\ ``", "throw r8", "if r1 ! = null goto label1", "label r9 = org apache http protocol basic http processor r0", "$ r3 = r9 request interceptor", "$ r3 clear", "r10 = org apache http protocol basic http processor r0", "$ r4 = r10 response interceptor", "$ r4 clear", "i1 = 0", "label $ i0 = r1 size", "if i1 > = $ i0 goto label5", "r2 = r1 get i1", "$ z0 = r2 instanceof org apache http http request interceptor", "if $ z0 == 0 goto label3", "$ r6 = org apache http http request interceptor r2", "r11 = org apache http protocol basic http processor r0", "r11 add interceptor $ r6", "label $ z1 = r2 instanceof org apache http http response interceptor", "if $ z1 == 0 goto label4", "$ r5 = org apache http http response interceptor r2", "r12 = org apache http protocol basic http processor r0", "r12 add interceptor $ r5", "label i1 = i1 + 1", "goto label2", "if i1 > = $ i0 goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 equal \\ `` * \\ ``", "if $ z0 == 0 goto label1", "return 1", "if $ z0 == 0 goto label1", "label $ z1 = r1 end with \\ `` * \\ ``", "if $ z1 == 0 goto label2", "$ i1 = r1 length", "$ i2 = $ i1 - 1", "$ r4 = r1 substring 0 $ i2", "$ z4 = r2 start with $ r4", "if $ z4 ! = 0 goto label3", "label $ z2 = r1 start with \\ `` * \\ ``", "if $ z2 == 0 goto label4", "$ i0 = r1 length", "$ r3 = r1 substring 1 $ i0", "$ z3 = r2 end with $ r3", "if $ z3 == 0 goto label4", "label $ z5 = 1", "goto label5", "label return $ z5", "if $ z3 == 0 goto label4", "label $ z5 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], []]}
{"nodes": ["r0 = @ this", "r2 = org apache http util byte array buffer r0", "$ r1 = r2 buffer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache http pool abstract conn pool r0", "$ r3 = r4 lease r1 r2 null", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "if r1 ! = null goto label1", "r14 = new java lang illegal argument exception", "specialinvoke r14 < init > \\ `` time unit must not be null \\ ``", "throw r14", "if r1 ! = null goto label1", "label l6 = r1 to millis l0", "$ b2 = l6 cmp 0l", "if $ b2 > = 0 goto label2", "l6 = 0l", "label $ l3 = java lang system current time millis", "l1 = $ l3 - l6", "r15 = org apache http pool abstract conn pool r0", "$ r6 = r15 lock", "$ r6 lock", "label r16 = org apache http pool abstract conn pool r0", "$ r7 = r16 available", "r2 = $ r7 iterator", "label $ z1 = r2 have next", "if $ z1 == 0 goto label6", "$ r9 = r2 next", "r3 = org apache http pool pool entry $ r9", "$ l4 = r3 get update", "$ b5 = $ l4 cmp l1", "if $ b5 > 0 goto label5", "r3 close", "$ r10 = r3 get route", "r17 = org apache http pool abstract conn pool r0", "r4 = specialinvoke r17 get pool $ r10", "r4 remove r3", "r2 remove", "r18 = org apache http pool abstract conn pool r0", "specialinvoke r18 notify pending r4", "label goto label4", "if $ z1 == 0 goto label6", "label r19 = org apache http pool abstract conn pool r0", "$ r8 = r19 lock", "$ r8 unlock", "goto label9", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], []]}
{"nodes": ["r0 = @ this", "l0 = java lang system current time millis", "r12 = org apache http pool abstract conn pool r0", "$ r5 = r12 lock", "$ r5 lock", "label r13 = org apache http pool abstract conn pool r0", "$ r6 = r13 available", "r1 = $ r6 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label4", "$ r8 = r1 next", "r2 = org apache http pool pool entry $ r8", "$ z1 = r2 be expire l0", "if $ z1 == 0 goto label3", "r2 close", "$ r9 = r2 get route", "r14 = org apache http pool abstract conn pool r0", "r3 = specialinvoke r14 get pool $ r9", "r3 remove r2", "r1 remove", "r15 = org apache http pool abstract conn pool r0", "specialinvoke r15 notify pending r3", "label goto label2", "if $ z0 == 0 goto label4", "label r16 = org apache http pool abstract conn pool r0", "$ r7 = r16 lock", "$ r7 unlock", "goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], []]}
{"nodes": ["r0 = @ this", "r8 = org apache http message basic http request r0", "$ r1 = r8 requestline", "if $ r1 ! = null goto label1", "r7 = new org apache http message basic request line", "r9 = org apache http message basic http request r0", "$ r6 = r9 method", "r10 = org apache http message basic http request r0", "$ r5 = r10 uri", "$ r4 = org apache http http version http_1_1", "r11 = org apache http protocol version $ r4", "specialinvoke r7 < init > $ r6 $ r5 r11", "r12 = org apache http message basic http request r0", "r13 = org apache http request line r7", "r12 requestline = r13", "label r14 = org apache http message basic http request r0", "$ r2 = r14 requestline", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r8 = new java lang string builder", "specialinvoke r8 < init >", "z3 = 0", "label $ z0 = r2 at end", "if $ z0 ! = 0 goto label6", "$ i1 = r2 get pos", "c0 = r1 char at $ i1", "if r3 == null goto label2", "$ z2 = r3 get c0", "if $ z2 == 0 goto label2", "goto label6", "label $ r6 = r8 to string", "return $ r6", "if $ z2 == 0 goto label2", "label $ z1 = org apache http message token parser be whitespace c0", "if $ z1 == 0 goto label3", "r9 = org apache http message token parser r0", "r9 skip white space r1 r2", "z3 = 1", "goto label5", "label goto label1", "if $ z1 == 0 goto label3", "label if z3 == 0 goto label4", "$ i2 = r8 length", "if $ i2 < = 0 goto label4", "r8 append 32", "label r10 = org apache http message token parser r0", "r10 copy content r1 r2 r3 r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache http ssl s s l context builder r0", "r2 protocol = r1", "r3 = org apache http ssl s s l context builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache http ssl s s l context builder r0", "r2 trust manager factory algorithm = r1", "r3 = org apache http ssl s s l context builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http impl nio codecs abstract content decoder r0", "r1 complete = 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = org apache http impl nio codecs abstract content encoder r0", "$ i1 = specialinvoke r2 do write chunk r1 i0 1", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = org apache http impl nio codecs abstract content encoder r0", "$ i1 = specialinvoke r2 do write chunk r1 i0 0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r9 = org apache http impl nio reactor abstract i o reactor r0", "$ r5 = r9 session", "entermonitor $ r5", "label r10 = org apache http impl nio reactor abstract i o reactor r0", "$ r6 = r10 session", "r2 = $ r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r7 = r2 next", "r3 = org apache http nio reactor i o session $ r7", "r3 close", "goto label2", "if $ z0 == 0 goto label3", "label exitmonitor $ r5", "label goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r8 = org apache http impl nio reactor abstract multiworker i o reactor r0", "$ r3 = r8 audit log", "entermonitor $ r3", "label r7 = new java util array list", "r9 = org apache http impl nio reactor abstract multiworker i o reactor r0", "$ r5 = r9 audit log", "specialinvoke r7 < init > $ r5", "exitmonitor $ r3", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache http nio protocol http async service r0", "$ r1 = r2 handler mapper", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org apache http nio util expandable buffer r0", "$ i0 = r6 mode", "if $ i0 == 0 goto label3", "r7 = org apache http nio util expandable buffer r0", "$ r1 = r7 buffer", "$ z0 = $ r1 have remain", "if $ z0 == 0 goto label1", "r8 = org apache http nio util expandable buffer r0", "$ r4 = r8 buffer", "$ r4 compact", "goto label2", "label r10 = org apache http nio util expandable buffer r0", "r10 mode = 0", "label return", "if $ z0 == 0 goto label1", "label r9 = org apache http nio util expandable buffer r0", "$ r2 = r9 buffer", "$ r2 clear"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache http nio util expandable buffer r0", "$ r1 = r2 buffer", "$ i1 = $ r1 capacity", "if i0 < = $ i1 goto label1", "r3 = org apache http nio util expandable buffer r0", "specialinvoke r3 expand capacity i0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org objectweb fractal cecilia adl idl ast complex type", "if $ z0 == 0 goto label1", "$ r5 = org objectweb fractal cecilia adl idl ast complex type r0", "return $ r5", "if $ z0 == 0 goto label1", "label $ z1 = r0 instanceof org objectweb fractal cecilia adl idl ast array of", "if $ z1 ! = 0 goto label2", "$ z2 = r0 instanceof org objectweb fractal cecilia adl idl ast pointer of", "if $ z2 == 0 goto label3", "label $ r1 = org objectweb fractal cecilia adl idl ast type container r0", "$ r2 = org objectweb fractal cecilia adl idl util util get contain type $ r1", "$ r3 = org objectweb fractal cecilia adl idl util util get complex type $ r2", "return $ r3", "if $ z2 == 0 goto label3", "label $ r4 = new java lang illegal argument exception", "specialinvoke $ r4 < init > \\ `` the give type be not a complex type \\ ``", "throw $ r4"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = \\ `` const\\ ``", "$ r2 = r0 get qualifier", "$ z0 = $ r1 equal $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get value", "r3 = com fasterxml jackson core base generator base r0", "r3 write field name $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = com fasterxml jackson core base generator base r0", "r1 _closed = 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r1 = @ parameter2", "i17 = @ parameter3", "i18 = i17 + 1", "r7 = com fasterxml jackson core base64 variant r0", "$ r2 = r7 _base64 to ascii b", "$ i3 = i0 > > 18", "$ i4 = $ i3 & 63", "$ b5 = $ r2 [ $ i4 ]", "r1 [ i17 ] = $ b5", "i19 = i18 + 1", "r8 = com fasterxml jackson core base64 variant r0", "$ r3 = r8 _base64 to ascii b", "$ i6 = i0 > > 12", "$ i7 = $ i6 & 63", "$ b8 = $ r3 [ $ i7 ]", "r1 [ i18 ] = $ b8", "r9 = com fasterxml jackson core base64 variant r0", "$ z0 = r9 _uses pad", "if $ z0 == 0 goto label3", "r10 = com fasterxml jackson core base64 variant r0", "$ c13 = r10 _padding char", "b2 = byte $ c13", "$ i14 = i19", "i20 = i19 + 1", "if i1 ! = 2 goto label1", "r11 = com fasterxml jackson core base64 variant r0", "$ r5 = r11 _base64 to ascii b", "$ i15 = i0 > > 6", "$ i16 = $ i15 & 63", "$ b21 = $ r5 [ $ i16 ]", "goto label2", "label r1 [ $ i14 ] = $ b21", "i19 = i20 + 1", "r1 [ i20 ] = b2", "goto label4", "label return i19", "if i1 ! = 2 goto label1", "label $ b21 = b2", "if $ z0 == 0 goto label3", "label if i1 ! = 2 goto label4", "$ i9 = i19", "i19 = i19 + 1", "r12 = com fasterxml jackson core base64 variant r0", "$ r4 = r12 _base64 to ascii b", "$ i10 = i0 > > 6", "$ i11 = $ i10 & 63", "$ b12 = $ r4 [ $ i11 ]", "r1 [ $ i9 ] = $ b12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com fasterxml jackson core base64 variant r0", "$ r2 = r3 encode r1 0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = com fasterxml jackson core format data format detector r0", "$ r2 = r7 _minimal match", "if r1 ! = $ r2 goto label1", "r8 = com fasterxml jackson core format data format detector r0", "return r8", "if r1 ! = $ r2 goto label1", "label r6 = new com fasterxml jackson core format data format detector", "r9 = com fasterxml jackson core format data format detector r0", "$ r5 = r9 _detectors", "r10 = com fasterxml jackson core format data format detector r0", "$ r4 = r10 _optimal match", "r11 = com fasterxml jackson core format data format detector r0", "$ i0 = r11 _max input lookahead", "specialinvoke r6 < init > $ r5 $ r4 r1 $ i0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r3 = com fasterxml jackson core format data format matcher r0", "$ z0 = r3 have match", "if $ z0 == 0 goto label1", "r4 = com fasterxml jackson core format data format matcher r0", "$ r1 = r4 get match", "$ r2 = $ r1 get format name", "goto label2", "label return $ r2", "if $ z0 == 0 goto label1", "label $ r2 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r4 = com fasterxml jackson core io i o context r0", "$ r1 = r4 _read i o buffer", "r5 = com fasterxml jackson core io i o context r0", "r5 _verify alloc $ r1", "r6 = com fasterxml jackson core io i o context r0", "$ r2 = r6 _buffer recycler", "$ r3 = $ r2 alloc byte buffer 0", "r7 = com fasterxml jackson core io i o context r0", "r7 _read i o buffer = $ r3", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r4 = com fasterxml jackson core io i o context r0", "$ r2 = r4 _read i o buffer", "r5 = com fasterxml jackson core io i o context r0", "r5 _verify release r1 $ r2", "r6 = com fasterxml jackson core io i o context r0", "r6 _read i o buffer = null", "r7 = com fasterxml jackson core io i o context r0", "$ r3 = r7 _buffer recycler", "$ r3 release byte buffer 0 r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r5 = com fasterxml jackson core io serialize string r0", "r4 = r5 _unquoted u t f8 ref", "if r4 ! = null goto label1", "$ r2 = com fasterxml jackson core io serialize string json_encoder", "r6 = com fasterxml jackson core io serialize string r0", "$ r1 = r6 _value", "$ r3 = $ r2 encode a u t f8 $ r1", "r4 = $ r3", "r7 = com fasterxml jackson core io serialize string r0", "r7 _unquoted u t f8 ref = $ r3", "label return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com fasterxml jackson core json factory r0", "$ i0 = r2 _factory feature", "$ i1 = r1 get mask", "$ i2 = $ i0 | $ i1", "r3 = com fasterxml jackson core json factory r0", "r3 _factory feature = $ i2", "r4 = com fasterxml jackson core json factory r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = com fasterxml jackson core json factory r0", "r2 = r8 _create context r1 1", "r9 = com fasterxml jackson core json factory r0", "$ r4 = r9 _input decorator", "if $ r4 == null goto label1", "r10 = com fasterxml jackson core json factory r0", "$ r6 = r10 _input decorator", "$ i1 = lengthof r1", "r3 = $ r6 decorate r2 r1 0 $ i1", "if r3 == null goto label1", "r11 = com fasterxml jackson core json factory r0", "$ r7 = r11 _create parser r3 r2", "return $ r7", "if r3 == null goto label1", "label $ i0 = lengthof r1", "r12 = com fasterxml jackson core json factory r0", "$ r5 = r12 _create parser r1 0 $ i0 r2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = com fasterxml jackson core json factory r0", "$ r3 = r5 _create data output wrapper r1", "r6 = com fasterxml jackson core json factory r0", "$ r4 = r6 create generator $ r3 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r13 = new com fasterxml jackson core json writer base json generator", "r14 = com fasterxml jackson core json factory r0", "$ i1 = r14 _generator feature", "r15 = com fasterxml jackson core json factory r0", "$ r6 = r15 _object codec", "r16 = com fasterxml jackson core json factory r0", "$ c0 = r16 _quote char", "specialinvoke r13 < init > r2 $ i1 $ r6 r1 $ c0", "r17 = com fasterxml jackson core json factory r0", "$ i2 = r17 _maximum non escape char", "if $ i2 < = 0 goto label1", "r18 = com fasterxml jackson core json factory r0", "$ i3 = r18 _maximum non escape char", "r13 set high non escape char $ i3", "label r19 = com fasterxml jackson core json factory r0", "$ r7 = r19 _character escape", "if $ r7 == null goto label2", "r20 = com fasterxml jackson core json factory r0", "$ r10 = r20 _character escape", "r13 set character escape $ r10", "label r21 = com fasterxml jackson core json factory r0", "r4 = r21 _root value separator", "$ r8 = com fasterxml jackson core json factory default_root_value_separator", "if r4 == $ r8 goto label3", "r13 set root value separator r4", "label r22 = com fasterxml jackson core json generator r13", "return r22"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > 0 goto label1", "$ i1 = 0", "goto label2", "label r2 = com fasterxml jackson core json factory builder r0", "r2 _maximum non escape char = $ i1", "r3 = com fasterxml jackson core json factory builder r0", "return r3", "if i0 > 0 goto label1", "label $ i1 = java lang math max 127 i0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson core json location r0", "$ r1 = r2 _source ref", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = com fasterxml jackson core json token r0", "$ z0 = r1 _is struct start", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson core sym char to name canonicalizer r0", "$ r1 = r2 _symbols", "$ i0 = lengthof $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i2 = 0", "r3 = com fasterxml jackson core sym char to name canonicalizer r0", "r1 = r3 _buckets", "i0 = lengthof r1", "i3 = 0", "label if i3 > = i0 goto label3", "r2 = r1 [ i3 ]", "if r2 == null goto label2", "$ i1 = r2 length", "i2 = i2 + $ i1", "label i3 = i3 + 1", "goto label1", "label if i3 > = i0 goto label3", "label return i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson core util json generator delegate r0", "$ r1 = r2 delegate", "$ r1 flush", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson core util json parser delegate r0", "$ r1 = r2 delegate", "$ i0 = $ r1 get value a int", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = com fasterxml jackson core util thread local buffer manager $ thread local buffer manager holder manager", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "$ r1 = newarray java lang object [ 1 ]", "r4 = com fasterxml jackson core base64 variant r0", "$ r2 = r4 get name", "$ r1 [ 0 ] = $ r2", "$ r3 = java lang string format \\ `` unexpected end of base64-encoded string base64 variant \\ ' % s\\ ' expect no padding at the end while decode this base64 variant might have be incorrectly configured\\", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com fasterxml jackson core json factory r0", "$ i0 = r2 _factory feature", "$ i1 = r1 get mask", "$ i2 = $ i0 & $ i1", "if $ i2 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i2 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson core json parser r0", "$ r1 = r2 get current name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com fasterxml jackson core json token r0", "$ z0 = r1 _is scalar", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com fasterxml jackson core json location r0", "$ i0 = r1 _column nr", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = com github fge jackson jsonpointer json pointer bundle", "$ r3 check not null r1 \\ `` null input\\ ``", "r9 = com github fge jackson jsonpointer json pointer r0", "$ r5 = r9 token resolvers", "r2 = com google common collect list new array list $ r5", "$ r6 = r1 token resolvers", "r2 add all $ r6", "r8 = new com github fge jackson jsonpointer json pointer", "specialinvoke r8 < init > r2", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com github fge jackson jsonpointer reference token bundle", "$ r1 check not null r0 \\ `` null input\\ ``", "$ r3 = new com github fge jackson jsonpointer reference token", "$ r4 = com github fge jackson jsonpointer reference token a cooked r0", "specialinvoke $ r3 < init > $ r4 r0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["i0 = @ parameter0", "r0 = java lang integer to string i0", "$ r1 = new com github fge jackson jsonpointer reference token", "specialinvoke $ r1 < init > r0 r0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com fasterxml jackson databind cfg mapper config r0", "$ i0 = r2 _mapper feature", "$ i1 = r1 get mask", "$ i2 = $ i0 & $ i1", "if $ i2 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i2 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = com fasterxml jackson databind cfg mapper config base r0", "$ r3 = r6 get attribute", "$ r4 = $ r3 with share attribute r1 r2", "r7 = com fasterxml jackson databind cfg mapper config base r0", "$ r5 = r7 with $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r5 = com fasterxml jackson databind deser bean deserializer builder r0", "$ r2 = r5 _properties", "$ r3 = r1 get name", "$ r2 put $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com fasterxml jackson databind deser creator property r0", "r2 _fallback setter = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson databind deser deserializer cache r0", "$ r1 = r2 _cached deserializers", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = com fasterxml jackson databind deser impl bean property map r0", "$ i0 = r1 _size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com fasterxml jackson databind deser impl null constant provider nuller", "if r0 ! = $ r1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if r0 ! = $ r1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = com fasterxml jackson databind deser impl readable object id r0", "$ r5 = r11 _resolver", "r12 = com fasterxml jackson databind deser impl readable object id r0", "$ r4 = r12 _key", "$ r5 bind item $ r4 r1", "r13 = com fasterxml jackson databind deser impl readable object id r0", "r13 _item = r1", "r14 = com fasterxml jackson databind deser impl readable object id r0", "$ r6 = r14 _key", "r2 = $ r6 key", "r15 = com fasterxml jackson databind deser impl readable object id r0", "$ r7 = r15 _referring property", "if $ r7 == null goto label2", "r16 = com fasterxml jackson databind deser impl readable object id r0", "$ r8 = r16 _referring property", "r3 = $ r8 iterator", "r17 = com fasterxml jackson databind deser impl readable object id r0", "r17 _referring property = null", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r9 = r3 next", "$ r10 = com fasterxml jackson databind deser impl readable object id $ refer $ r9", "$ r10 handle resolve forward reference r2 r1", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com fasterxml jackson databind deser std reference type deserializer r0", "$ r2 = r5 _value deserializer", "if $ r2 ! = null goto label1", "$ r4 = null", "goto label2", "label return $ r4", "if $ r2 ! = null goto label1", "label r6 = com fasterxml jackson databind deser std reference type deserializer r0", "$ r3 = r6 _value deserializer", "$ r4 = $ r3 support update r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "return class \\ `` ljava lang object \\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r3 = com fasterxml jackson databind deserialization context r0", "$ r1 = r3 _config", "$ r2 = $ r1 get base64 variant", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = com fasterxml jackson databind deserialization context r0", "$ r1 = r3 _config", "$ r2 = $ r1 get node factory", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = com fasterxml jackson databind deserialization context r0", "$ r1 = r5 _array builder", "if $ r1 ! = null goto label1", "r4 = new com fasterxml jackson databind util array builder", "specialinvoke r4 < init >", "r6 = com fasterxml jackson databind deserialization context r0", "r6 _array builder = r4", "label r7 = com fasterxml jackson databind deserialization context r0", "$ r2 = r7 _array builder", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = com fasterxml jackson databind deserialization context r0", "$ r3 = r10 _parser", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r4 = r9 append \\ `` unexpected end-of-input when try to deserialize a \\ ``", "$ r5 = r1 get name", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 to string", "$ r8 = com fasterxml jackson databind exc mismatch input exception from $ r3 r1 $ r7", "r11 = com fasterxml jackson databind json map exception $ r8", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson databind exc invalid definition exception r0", "$ r1 = r2 _property", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson databind introspect annotate field r0", "$ r1 = r2 _annotations", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = com fasterxml jackson databind jsontype impl std type resolver builder no type info builder", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = new com fasterxml jackson databind introspect simple mix in resolver", "r4 = com fasterxml jackson databind introspect simple mix in resolver r0", "$ r2 = r4 _overrides", "specialinvoke r3 < init > $ r2 null", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = com fasterxml jackson databind java type r0", "$ z0 = r1 _as static", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com fasterxml jackson databind json deserializer r0", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java lang unsupported operation exception", "specialinvoke $ r2 < init >", "throw $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com fasterxml jackson databind json serializer r0", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = com fasterxml jackson databind util class util empty iterator", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com fasterxml jackson databind module simple module r0", "r2 _abstract type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "z0 = @ parameter1", "r3 = com fasterxml jackson databind node array node r0", "$ r1 = r3 boolean node z0", "r4 = com fasterxml jackson databind node array node r0", "r5 = com fasterxml jackson databind json node $ r1", "$ r2 = r4 _insert i0 r5", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 0 goto label1", "r5 = com fasterxml jackson databind node array node r0", "$ r1 = r5 _children", "$ i1 = $ r1 size", "if i0 > = $ i1 goto label1", "r6 = com fasterxml jackson databind node array node r0", "$ r2 = r6 _children", "$ r3 = $ r2 remove i0", "$ r4 = com fasterxml jackson databind json node $ r3", "return $ r4", "if i0 > = $ i1 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "$ r1 = com fasterxml jackson core json token value_number_int", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ r1 = com fasterxml jackson databind node null node get instance", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "$ r1 = com fasterxml jackson databind node int node value of b0", "r2 = com fasterxml jackson databind node numeric node $ r1", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com fasterxml jackson databind node binary node value of r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = @ parameter1", "if r5 ! = null goto label1", "r6 = com fasterxml jackson databind node object node r0", "r5 = r6 null node", "label r7 = com fasterxml jackson databind node object node r0", "$ r2 = r7 _children", "$ r3 = $ r2 put r1 r5", "$ r4 = com fasterxml jackson databind json node $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson databind object mapper r0", "$ r1 = r2 _deserialization config", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com fasterxml jackson databind object reader r0", "$ r2 = r5 _config", "$ r3 = $ r2 with root name r1", "r6 = com fasterxml jackson databind object reader r0", "$ r4 = r6 _with $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com fasterxml jackson databind object reader r0", "$ r2 = r5 _config", "$ r3 = $ r2 with view r1", "r6 = com fasterxml jackson databind object reader r0", "$ r4 = r6 _with $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = com fasterxml jackson databind object reader r0", "$ r7 = r9 _config", "r10 = com fasterxml jackson databind object reader r0", "$ r6 = r10 _value type", "r11 = com fasterxml jackson databind object reader r0", "$ r5 = r11 _root deserializer", "r12 = com fasterxml jackson databind object reader r0", "$ r4 = r12 _value to update", "r13 = com fasterxml jackson databind object reader r0", "$ r3 = r13 _schema", "r14 = com fasterxml jackson databind object reader r0", "$ r2 = r14 _injectable value", "r15 = com fasterxml jackson databind object reader r0", "r16 = com fasterxml jackson databind object reader r0", "$ r8 = r15 _new r16 $ r7 $ r6 $ r5 $ r4 $ r3 $ r2 r1", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com fasterxml jackson databind object writer r0", "$ r2 = r5 _config", "$ r3 = $ r2 with root name r1", "r6 = com fasterxml jackson databind object writer r0", "r7 = com fasterxml jackson databind object writer r0", "$ r4 = r6 _new r7 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com fasterxml jackson databind object writer r0", "$ r2 = r5 _config", "$ r3 = $ r2 with view r1", "r6 = com fasterxml jackson databind object writer r0", "r7 = com fasterxml jackson databind object writer r0", "$ r4 = r6 _new r7 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson databind ser default serializer provider r0", "$ r1 = r2 _serializer cache", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com fasterxml jackson databind type type factory unknown type", "r4 = com fasterxml jackson databind type type factory r0", "$ r3 = r4 construct collection type r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return \\ `` unknown\\ ``", "if r0 ! = null goto label1", "label $ z0 = r0 instanceof java lang class", "if $ z0 == 0 goto label2", "$ r3 = java lang class r0", "goto label3", "label $ r2 = com fasterxml jackson databind util class util name of $ r3", "return $ r2", "if $ z0 == 0 goto label2", "label $ r3 = r0 get class"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r3 = com fasterxml jackson databind util enum value r0", "$ r1 = r3 _values", "$ r2 = java util array a list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = new com fasterxml jackson databind util root name lookup", "specialinvoke $ r1 < init >", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 ! = 0 goto label1", "return \\ `` k\\ ``", "if i0 ! = 0 goto label1", "label if i0 ! = 1 goto label2", "return \\ `` v\\ ``", "label if i0 ! = 1 goto label2", "label return null"], "adj": [[1], [2], [3], [], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new com fasterxml jackson databind type simple type", "specialinvoke $ r1 < init > r0 null null null null 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com fasterxml jackson databind util std date format r0", "$ r2 = r3 _timezone", "if r1 == $ r2 goto label1", "r4 = com fasterxml jackson databind util std date format r0", "r4 _format r f c1123 = null", "r5 = com fasterxml jackson databind util std date format r0", "r5 _format i s o8601 = null", "r6 = com fasterxml jackson databind util std date format r0", "r6 _format i s o8601_z = null", "r7 = com fasterxml jackson databind util std date format r0", "r7 _format plain = null", "r8 = com fasterxml jackson databind util std date format r0", "r8 _timezone = r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "$ r1 = com fasterxml jackson databind object mapper $ default type object_and_non_concrete", "r3 = com fasterxml jackson databind object mapper r0", "$ r2 = r3 enable default type $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com sun el method expression impl r0", "$ r1 = specialinvoke r2 get node", "$ i0 = $ r1 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = com sun el parser j j t e l parser state r0", "$ r1 = r3 node", "$ r1 clear", "r4 = com sun el parser j j t e l parser state r0", "$ r2 = r4 mark", "$ r2 clear", "r5 = com sun el parser j j t e l parser state r0", "r5 sp = 0", "r6 = com sun el parser j j t e l parser state r0", "r6 mk = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = com sun el stream stream r0", "r2 = r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r3 = newarray java lang object [ 1 ]", "$ r4 = r2 next", "$ r3 [ 0 ] = $ r4", "r1 invoke $ r3", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r5 = r1 get parameter type", "$ z0 = r1 be var args", "r4 = com sun el util reflection util build parameter r0 $ r5 $ z0 r3", "label $ r6 = r1 invoke r2 r4", "label return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "if r1 ! = null goto label1", "r24 = new java lang null pointer exception", "specialinvoke r24 < init >", "throw r24", "if r1 ! = null goto label1", "label if r2 == null goto label2", "if r3 ! = null goto label3", "label return null", "if r3 ! = null goto label3", "label r28 = javax el bean e l resolver r0", "$ r6 = specialinvoke r28 get bean property r1 r2 r3", "r4 = $ r6 get read method", "if r4 ! = null goto label4", "r25 = new javax el property not find exception", "$ r9 = newarray java lang object [ 2 ]", "$ r10 = r2 get class", "$ r11 = $ r10 get name", "$ r9 [ 0 ] = $ r11", "$ r12 = r3 to string", "$ r9 [ 1 ] = $ r12", "$ r13 = javax el e l util get exception message string r1 \\ `` property not readable\\", "specialinvoke r25 < init > $ r13", "r29 = java lang throwable r25", "throw r29", "if r4 ! = null goto label4", "label $ r7 = newarray java lang object [ 0 ]", "r5 = r4 invoke r2 $ r7", "r1 set property resolve r2 r3", "label goto label9", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "if r1 ! = null goto label1", "r10 = new java lang null pointer exception", "specialinvoke r10 < init >", "throw r10", "if r1 ! = null goto label1", "label if r2 ! = null goto label2", "$ z0 = r3 instanceof java lang string", "if $ z0 == 0 goto label2", "r11 = javax el bean name e l resolver r0", "$ r5 = r11 bean name resolver", "$ r4 = java lang string r3", "$ z1 = $ r5 be name resolved $ r4", "if $ z1 == 0 goto label2", "r1 set property resolve r2 r3", "r12 = javax el bean name e l resolver r0", "$ r7 = r12 bean name resolver", "$ r6 = java lang string r3", "$ r8 = $ r7 get bean $ r6", "return $ r8", "if $ z1 == 0 goto label2", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "if r1 ! = null goto label1", "r9 = new java lang null pointer exception", "specialinvoke r9 < init >", "throw r9", "if r1 ! = null goto label1", "label if r2 ! = null goto label2", "$ z0 = r3 instanceof java lang string", "if $ z0 == 0 goto label2", "r10 = javax el bean name e l resolver r0", "$ r5 = r10 bean name resolver", "$ r4 = java lang string r3", "$ z1 = $ r5 be name resolved $ r4", "if $ z1 == 0 goto label2", "r1 set property resolve 1", "r11 = javax el bean name e l resolver r0", "$ r7 = r11 bean name resolver", "$ r6 = java lang string r3", "$ z2 = $ r7 be read only $ r6", "return $ z2", "if $ z1 == 0 goto label2", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r8 = new java lang null pointer exception", "specialinvoke r8 < init >", "throw r8", "if r1 ! = null goto label1", "label r9 = javax el composite e l resolver r0", "$ i1 = r9 size", "r10 = javax el composite e l resolver r0", "$ r3 = r10 el resolvers", "$ i0 = lengthof $ r3", "if $ i1 < $ i0 goto label2", "r11 = javax el composite e l resolver r0", "$ i4 = r11 size", "$ i5 = $ i4 * 2", "r2 = newarray javax el e l resolver [ $ i5 ]", "r12 = javax el composite e l resolver r0", "$ r5 = r12 el resolvers", "r13 = javax el composite e l resolver r0", "$ i6 = r13 size", "java lang system arraycopy $ r5 0 r2 0 $ i6", "r14 = javax el composite e l resolver r0", "r14 el resolvers = r2", "label r15 = javax el composite e l resolver r0", "$ r4 = r15 el resolvers", "r16 = javax el composite e l resolver r0", "$ i2 = r16 size", "$ i3 = $ i2 + 1", "r17 = javax el composite e l resolver r0", "r17 size = $ i3", "$ r4 [ $ i2 ] = r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r17 = javax el e l context r0", "z0 = r17 be property resolve", "label r18 = javax el e l context r0", "r18 set property resolve 0", "r19 = javax el e l context r0", "r12 = r19 get e l resolver", "if r12 == null goto label3", "r20 = javax el e l context r0", "r3 = r12 convert to type r20 r1 r2", "r21 = javax el e l context r0", "$ z1 = r21 be property resolve", "if $ z1 == 0 goto label3", "label r22 = javax el e l context r0", "r22 set property resolve z0", "return r3", "if $ z1 == 0 goto label3", "label r23 = javax el e l context r0", "r23 set property resolve z0", "goto label8", "label r26 = javax el e l context r0", "$ r6 = r26 get context class \\ `` ljavax el expression factory \\ ``", "r15 = javax el expression factory $ r6", "if r15 ! = null goto label9", "r15 = javax el e l util get expression factory", "label $ r7 = r15 coerce to type r1 r2", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r2 = javax el method info r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r27 = javax el standard e l context r0", "$ r2 = r27 el resolver", "if $ r2 ! = null goto label2", "r17 = new javax el composite e l resolver", "specialinvoke r17 < init >", "r18 = new javax el composite e l resolver", "specialinvoke r18 < init >", "r28 = javax el standard e l context r0", "r28 custom resolvers = r18", "r29 = javax el standard e l context r0", "$ r5 = r29 custom resolvers", "r30 = javax el e l resolver $ r5", "r17 add r30", "r20 = new javax el bean name e l resolver", "r19 = new javax el standard e l context $ local bean name resolver", "r31 = javax el standard e l context r0", "specialinvoke r19 < init > r31 null", "r32 = javax el bean name resolver r19", "specialinvoke r20 < init > r32", "r33 = javax el e l resolver r20", "r17 add r33", "r34 = javax el standard e l context r0", "$ r8 = r34 stream e l resolver", "if $ r8 == null goto label1", "r35 = javax el standard e l context r0", "$ r15 = r35 stream e l resolver", "r17 add $ r15", "label r21 = new javax el static field e l resolver", "specialinvoke r21 < init >", "r36 = javax el e l resolver r21", "r17 add r36", "r22 = new javax el map e l resolver", "specialinvoke r22 < init >", "r37 = javax el e l resolver r22", "r17 add r37", "r23 = new javax el resource bundle e l resolver", "specialinvoke r23 < init >", "r38 = javax el e l resolver r23", "r17 add r38", "r24 = new javax el list e l resolver", "specialinvoke r24 < init >", "r39 = javax el e l resolver r24", "r17 add r39", "r25 = new javax el array e l resolver", "specialinvoke r25 < init >", "r40 = javax el e l resolver r25", "r17 add r40", "r26 = new javax el bean e l resolver", "specialinvoke r26 < init >", "r41 = javax el e l resolver r26", "r17 add r41", "r42 = javax el standard e l context r0", "r43 = javax el e l resolver r17", "r42 el resolver = r43", "label r44 = javax el standard e l context r0", "$ r16 = r44 el resolver", "return $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return null"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = javax json bind jsonb config r0", "specialinvoke r2 merge property \\ `` jsonb serializers\\", "r3 = javax json bind jsonb config r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r1 = new javax persistence persistence $ persistence util impl", "specialinvoke r1 < init > null", "r2 = javax persistence persistence util r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = javax w r core cache control r0", "$ z0 = r1 private flag", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ i0 = 17 * 3", "r3 = javax w r core entity tag r0", "$ r1 = r3 value", "if $ r1 == null goto label1", "r4 = javax w r core entity tag r0", "$ r2 = r4 value", "$ i3 = $ r2 hash code", "goto label2", "label i4 = $ i0 + $ i3", "$ i1 = 17 * i4", "r5 = javax w r core entity tag r0", "$ z0 = r5 weak", "if $ z0 == 0 goto label3", "$ b5 = 1", "goto label4", "label i6 = $ i1 + $ b5", "return i6", "if $ z0 == 0 goto label3", "label $ b5 = 0", "if $ r1 == null goto label1", "label $ i3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = javax w r core generic entity r0", "$ r1 = r2 entity", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = javax w r ext runtime delegate get instance", "r1 = $ r2 create link builder", "r1 uri r0", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = javax w r core uri builder from path r0", "$ r2 = javax w r core link from uri builder $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i6 = specialinvoke r0 hash code", "$ i0 = 59 * i6", "r5 = javax w r core new cookie r0", "$ r1 = r5 comment", "if $ r1 == null goto label1", "r6 = javax w r core new cookie r0", "$ r4 = r6 comment", "$ i7 = $ r4 hash code", "goto label2", "label i8 = $ i0 + $ i7", "$ i2 = 59 * i8", "r7 = javax w r core new cookie r0", "$ i1 = r7 max age", "i9 = $ i2 + $ i1", "$ i3 = 59 + i9", "r8 = javax w r core new cookie r0", "$ r2 = r8 expiry", "if $ r2 == null goto label3", "r9 = javax w r core new cookie r0", "$ r3 = r9 expiry", "$ i10 = $ r3 hash code", "goto label4", "label i11 = $ i3 + $ i10", "$ i4 = 59 * i11", "r10 = javax w r core new cookie r0", "$ z0 = r10 secure", "if $ z0 == 0 goto label5", "$ b12 = 1", "goto label6", "label i13 = $ i4 + $ b12", "$ i5 = 59 * i13", "r11 = javax w r core new cookie r0", "$ z1 = r11 http only", "if $ z1 == 0 goto label7", "$ b14 = 1", "goto label8", "label i15 = $ i5 + $ b14", "return i15", "if $ z1 == 0 goto label7", "label $ b14 = 0", "if $ z0 == 0 goto label5", "label $ b12 = 0", "if $ r2 == null goto label3", "label $ i10 = 0", "if $ r1 == null goto label1", "label $ i7 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [], [38], [], [40], [41], [42], [43], [44], [45], [46], []]}
{"nodes": ["i0 = @ parameter0", "r0 = @ parameter1", "$ r1 = javax w r core response $ response builder new instance", "$ r2 = $ r1 status i0 r0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = javax w r core response $ status ok", "$ r1 = javax w r core response status $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = javax w r core response $ status accept", "$ r1 = javax w r core response status $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = javax w r core response $ status temporary_redirect", "$ r2 = javax w r core response status $ r1", "$ r3 = $ r2 location r0", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = javax w r core uri builder new instance", "$ r2 = $ r1 path r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax w r core variant r0", "$ r1 = r2 language", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = javax xml bind datatype converter the converter", "if $ r1 ! = null goto label1", "javax xml bind datatype converter init converter", "label $ r2 = javax xml bind datatype converter the converter", "$ l0 = $ r2 parse long r0", "return $ l0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = javax xml bind datatype converter the converter", "if $ r1 ! = null goto label1", "javax xml bind datatype converter init converter", "label $ r2 = javax xml bind datatype converter the converter", "$ i0 = $ r2 parse unsigned short r0", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = javax xml bind helper abstract unmarshaller impl r0", "$ z0 = r1 validate", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax xml bind j a x b element r0", "$ r1 = r2 declare type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = javax xml bind j a x b element r0", "r2 value = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "specialinvoke r0 print stack trace", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org jboss jandex annotation instance r0", "$ r2 = r3 value with default r1 \\ `` value\\ ``", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss jandex annotation instance r0", "$ r1 = r2 to string 1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang illegal argument exception", "specialinvoke $ r1 < init > \\ `` not a number\\ ``", "throw $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang illegal argument exception", "specialinvoke $ r1 < init > \\ `` not a number\\ ``", "throw $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org jboss jandex class info r0", "$ r1 = r4 super class type", "if $ r1 ! = null goto label1", "$ r3 = null", "goto label2", "label return $ r3", "if $ r1 ! = null goto label1", "label r5 = org jboss jandex class info r0", "$ r2 = r5 super class type", "$ r3 = $ r2 name"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org jboss jandex class info r0", "$ r5 = r9 annotation", "$ r6 = $ r5 get r1", "r2 = java util list $ r6", "if r2 == null goto label3", "r3 = r2 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r7 = r3 next", "r4 = org jboss jandex annotation instance $ r7", "$ r8 = r4 target", "if $ r8 ! = r0 goto label2", "return r4", "if $ r8 ! = r0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = new org jboss jandex class info $ 1", "r3 = org jboss jandex class info r0", "specialinvoke r2 < init > r3", "r4 = java util list r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = org jboss jandex class info r0", "$ r2 = r4 type parameter", "r1 = java util array a list $ r2", "$ r3 = java util collection unmodifiable list r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss jandex dot name r0", "$ r1 = r2 prefix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org jboss jandex dot name r1", "r3 = org jboss jandex dot name r0", "$ i0 = r3 compare to $ r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r5 = java lang system out", "$ r5 println \\ `` subclasses\\ ``", "r26 = org jboss jandex index r0", "$ r6 = r26 subclasses", "$ r7 = $ r6 entry set", "r1 = $ r7 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label4", "$ r8 = r1 next", "r2 = java util map $ entry $ r8", "$ r10 = java lang system out", "r24 = new java lang string builder", "specialinvoke r24 < init >", "$ r11 = r2 get key", "$ r12 = r24 append $ r11", "$ r13 = $ r12 append \\ `` \\ ``", "$ r14 = $ r13 to string", "$ r10 println $ r14", "$ r15 = r2 get value", "$ r16 = java util list $ r15", "r3 = $ r16 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label3", "$ r17 = r3 next", "r4 = org jboss jandex class info $ r17", "$ r19 = java lang system out", "r25 = new java lang string builder", "specialinvoke r25 < init >", "$ r20 = r25 append \\ `` \\ ``", "$ r21 = r4 name", "$ r22 = $ r20 append $ r21", "$ r23 = $ r22 to string", "$ r19 println $ r23", "goto label2", "if $ z1 == 0 goto label3", "label goto label1", "if $ z0 == 0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], []]}
{"nodes": ["r0 = @ this", "r3 = org jboss jandex method info r0", "$ r1 = r3 method internal", "$ r2 = $ r1 return type", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss jandex method parameter info r0", "$ r1 = r2 method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = @ parameter0", "r7 = org jboss jandex strong intern pool mask null r6", "r9 = org jboss jandex strong intern pool r0", "r1 = r9 table", "i0 = org jboss jandex strong intern pool hash r7", "i1 = lengthof r1", "i8 = org jboss jandex strong intern pool index i0 i1", "i2 = i8", "label r2 = r1 [ i8 ]", "if r2 ! = null goto label2", "goto label5", "label r11 = org jboss jandex strong intern pool r0", "$ i3 = r11 mod count", "$ i4 = $ i3 + 1", "r12 = org jboss jandex strong intern pool r0", "r12 mod count = $ i4", "r1 [ i8 ] = r7", "r13 = org jboss jandex strong intern pool r0", "$ i5 = r13 size", "$ i6 = $ i5 + 1", "r14 = org jboss jandex strong intern pool r0", "r14 size = $ i6", "r15 = org jboss jandex strong intern pool r0", "$ i7 = r15 threshold", "if $ i6 < $ i7 goto label6", "r16 = org jboss jandex strong intern pool r0", "specialinvoke r16 resize i1", "label $ r5 = org jboss jandex strong intern pool unmask null r7", "return $ r5", "if r2 ! = null goto label2", "label $ z0 = org jboss jandex strong intern pool eq r7 r2", "if $ z0 == 0 goto label3", "$ r4 = org jboss jandex strong intern pool unmask null r2", "return $ r4", "if $ z0 == 0 goto label3", "label r10 = org jboss jandex strong intern pool r0", "i8 = specialinvoke r10 next index i8 i1", "if i8 ! = i2 goto label4", "r8 = new java lang illegal state exception", "specialinvoke r8 < init > \\ `` table be full ! \\ ``", "throw r8", "if i8 ! = i2 goto label4", "label goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], [41], [], [43], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang illegal argument exception", "specialinvoke $ r1 < init > \\ `` not a class extend type target\\ ``", "throw $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org dataloader data loader r0", "$ r1 = r3 stats", "$ r2 = $ r1 get statistic", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new org dataloader data loader registry", "specialinvoke r10 < init >", "r11 = org dataloader data loader registry r0", "$ r4 = r11 data loader", "r10 get class", "$ r6 = data loader registry $ register__1 bootstrap $ r10", "$ r4 for each $ r6", "$ r7 = r1 data loader"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = com github javaparser ast body callable declaration r0", "$ z0 = r1 be variable arity method", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = com github javaparser ast comment comment r0", "$ r1 = r2 content", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = com github javaparser ast compilation unit r0", "$ r2 = r9 get type", "$ r3 = $ r2 stream", "$ r4 = compilation unit $ lambda_get class by name_2__5 bootstrap $ r1", "$ r5 = $ r3 filter $ r4", "$ r6 = $ r5 find first", "$ r7 = compilation unit $ lambda_get class by name_3__13 bootstrap $", "$ r8 = $ r6 map $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = com github javaparser ast expr boolean literal expr r0", "$ z0 = r1 value", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "com github javaparser utils utils assert not null r1", "r9 = com github javaparser ast expr enclose expr r0", "$ r3 = r9 inner", "if r1 ! = $ r3 goto label1", "r10 = com github javaparser ast expr enclose expr r0", "return r10", "if r1 ! = $ r3 goto label1", "label $ r5 = com github javaparser ast observer observable property inner", "r11 = com github javaparser ast expr enclose expr r0", "$ r4 = r11 inner", "r12 = com github javaparser ast expr enclose expr r0", "r12 notify property change $ r5 $ r4 r1", "r13 = com github javaparser ast expr enclose expr r0", "$ r6 = r13 inner", "if $ r6 == null goto label2", "r14 = com github javaparser ast expr enclose expr r0", "$ r7 = r14 inner", "$ r7 set parent node null", "label r15 = com github javaparser ast expr enclose expr r0", "r15 inner = r1", "r16 = com github javaparser ast expr enclose expr r0", "r17 = com github javaparser ast node r1", "r16 set a parent node of r17", "r18 = com github javaparser ast expr enclose expr r0", "return r18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r7 = com github javaparser ast expr expression r0", "$ r1 = r7 get parent node", "$ z0 = $ r1 be present", "if $ z0 == 0 goto label1", "r8 = com github javaparser ast expr expression r0", "$ r2 = r8 get parent node", "$ r3 = $ r2 get", "$ z1 = $ r3 instanceof com github javaparser ast expr expression", "if $ z1 == 0 goto label1", "r9 = com github javaparser ast expr expression r0", "$ r4 = r9 get parent node", "$ r5 = $ r4 get", "$ r6 = com github javaparser ast expr expression $ r5", "$ z2 = $ r6 be assignment context", "return $ z2", "if $ z1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com github javaparser ast module module declaration r0", "$ r2 = r3 get directives", "r4 = com github javaparser ast node r1", "$ r2 add r4", "r5 = com github javaparser ast module module declaration r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = r1 get token range", "$ r5 = $ r4 or else null", "$ r6 = com github javaparser token range $ r5", "r7 = com github javaparser ast validator problem reporter r0", "r7 report $ r6 r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com github javaparser parse start simple_name", "$ r3 = com github javaparser provider provider r1", "r5 = com github javaparser java parser r0", "$ r4 = r5 parse $ r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "com github javaparser utils utils assert not null r1", "r5 = com github javaparser java token r0", "$ r3 = r5 get previous token", "$ r4 = java token $ lambda_insert_0__2 bootstrap $ r1", "$ r3 if present $ r4", "r6 = com github javaparser java token r0", "r6 previous token = r1", "r7 = com github javaparser java token r0", "r1 next token = r7", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "com github javaparser utils utils assert not null r1", "r7 = com github javaparser java token r0", "$ r3 = r7 get previous token", "$ r4 = java token $ lambda_replace token_4__3 bootstrap $ r1", "$ r3 if present $ r4", "r8 = com github javaparser java token r0", "$ r5 = r8 get next token", "$ r6 = java token $ lambda_replace token_5__6 bootstrap $ r1", "$ r5 if present $ r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "$ r1 = r0 get class", "$ r2 = $ r1 get simple name", "$ r3 = com github javaparser utils utils decapitalize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com github javaparser parser configuration r0", "r1 tab size = i0", "r2 = com github javaparser parser configuration r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com github javaparser parse result r0", "$ z0 = r3 be successful", "if $ z0 == 0 goto label1", "r4 = com github javaparser parse result r0", "$ r2 = r4 result", "r1 accept $ r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = com github javaparser printer configuration default printer configuration r0", "$ r2 = r7 default option", "$ r3 = $ r2 stream", "$ r4 = default printer configuration $ lambda_get_0__1 bootstrap $ r1", "$ r5 = $ r3 filter $ r4", "$ r6 = $ r5 find first", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = com github javaparser printer configuration indentation r0", "$ r1 = r2 format indentation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com github javaparser printer configuration pretty printer configuration r0", "$ r1 = r2 get indentation", "$ i0 = $ r1 get size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "i2 = @ parameter2", "i3 = @ parameter3", "$ r0 = new com github javaparser range", "$ r1 = new com github javaparser position", "specialinvoke $ r1 < init > i0 i1", "$ r2 = new com github javaparser position", "specialinvoke $ r2 < init > i2 i3", "specialinvoke $ r0 < init > $ r1 $ r2", "return $ r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com github javaparser utils code generation utils class loader root r0", "$ r2 = newarray java lang string [ 1 ]", "$ r2 [ 0 ] = \\ `` \\ ``", "$ r3 = java nio file path get \\ `` \\", "$ r4 = $ r1 resolve $ r3", "$ r5 = $ r4 normalize", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "com github javaparser utils utils assert not null r1", "com github javaparser utils utils assert not null r2", "r4 = com github javaparser utils code generation utils file in package relative path r1 r2", "r27 = com github javaparser utils source root r0", "$ r9 = r27 cache", "$ z0 = $ r9 contain key r4", "if $ z0 == 0 goto label1", "$ r21 = newarray java util function supplier [ 1 ]", "$ r22 = source root $ lambda_try to parse_1__10 bootstrap $ r4", "$ r21 [ 0 ] = $ r22", "com github javaparser utils log trace \\ `` retrieve cache % s\\", "r28 = com github javaparser utils source root r0", "$ r23 = r28 cache", "$ r24 = $ r23 get r4", "$ r25 = com github javaparser parse result $ r24", "return $ r25", "if $ z0 == 0 goto label1", "label r29 = com github javaparser utils source root r0", "$ r10 = r29 root", "r5 = $ r10 resolve r4", "$ r11 = newarray java util function supplier [ 1 ]", "$ r12 = source root $ lambda_try to parse_2__3 bootstrap $ r5", "$ r11 [ 0 ] = $ r12", "com github javaparser utils log trace \\ `` parse % s\\", "r26 = new com github javaparser java parser", "specialinvoke r26 < init > r3", "$ r14 = com github javaparser parse start compilation_unit", "$ r15 = r3 get character encode", "$ r16 = com github javaparser provider provider r5 $ r15", "r6 = r26 parse $ r14 $ r16", "$ r17 = r6 get result", "$ r18 = source root $ lambda_try to parse_3__9 bootstrap $ r5 r3", "$ r17 if present $ r18", "r30 = com github javaparser utils source root r0", "$ r19 = r30 cache", "$ r19 put r4 r6", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], []]}
{"nodes": ["r0 = @ this", "r2 = com github javaparser utils source root r0", "$ r1 = r2 try to parse \\ `` \\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = com github javaparser utils source root r0", "$ r3 = r5 parser configuration", "r6 = com github javaparser utils source root r0", "$ r4 = r6 parse parallelize r1 $ r3 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "com github javaparser utils utils assert not null r1", "$ r5 = r1 get storage", "$ z0 = $ r5 be present", "if $ z0 == 0 goto label1", "$ r7 = r1 get storage", "$ r8 = $ r7 get", "$ r9 = com github javaparser ast compilation unit $ storage $ r8", "r2 = $ r9 get path", "$ r10 = newarray java util function supplier [ 1 ]", "$ r11 = source root $ lambda_add_13__15 bootstrap $ r2", "$ r10 [ 0 ] = $ r11", "com github javaparser utils log trace \\ `` add new file % s\\", "r17 = new com github javaparser parse result", "r16 = new java util array list", "specialinvoke r16 < init >", "specialinvoke r17 < init > r1 r16 null", "r19 = com github javaparser utils source root r0", "$ r14 = r19 cache", "$ r14 put r2 r17", "goto label2", "label r20 = com github javaparser utils source root r0", "return r20", "if $ z0 == 0 goto label1", "label r18 = new java lang assertion error", "specialinvoke r18 < init > \\ `` file add with this method should have their path set \\ ``", "throw r18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r2 = com github javaparser symbolsolver javaparsermodel declaration java parser parameter declaration r0", "$ r1 = r2 wrap node", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = javaslang api $ match $ pattern0 any", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` array be null\\ ``", "$ r2 = javaslang collection iterator of all r0", "r4 = java lang iterable $ r2", "$ r3 = javaslang collection array of all r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` array be null\\ ``", "$ r2 = javaslang collection iterator of all r0", "r4 = java lang iterable $ r2", "$ r3 = javaslang collection array of all r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` array be null\\ ``", "$ r2 = javaslang collection iterator of all r0", "r4 = java lang iterable $ r2", "$ r3 = javaslang collection array of all r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` element be null\\ ``", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "r2 = r0 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r6 = r2 next", "r3 = java lang character $ r6", "$ r5 append r3", "goto label1", "if $ z0 == 0 goto label2", "label $ i0 = $ r5 length", "if $ i0 ! = 0 goto label3", "$ r8 = javaslang collection char seq empty", "goto label4", "label return $ r8", "if $ i0 ! = 0 goto label3", "label $ r8 = javaslang collection char seq of $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = javaslang collection char seq r0", "$ r2 = r3 back", "$ z0 = $ r2 contain r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r5 = javaslang collection char seq r0", "$ r2 = r5 split seq r1 i0", "$ r3 = $ r2 to java array class \\ `` ljavaslang collection char seq \\ ``", "$ r4 = javaslang collection char seq [ ] $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = javaslang collection char seq r0", "$ r1 = r3 back", "$ r2 = $ r1 to char array", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = javaslang collection hash set empty", "$ r2 = $ r1 add r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` array be null\\ ``", "$ r2 = javaslang collection iterator of all r0", "r4 = java lang iterable $ r2", "$ r3 = javaslang collection hash set of all r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` array be null\\ ``", "$ r2 = javaslang collection iterator of all r0", "r4 = java lang iterable $ r2", "$ r3 = javaslang collection tree set of all r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` array be null\\ ``", "$ r2 = javaslang collection bit map trie of all r0", "$ r3 = javaslang collection vector of all $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = javaslang tuple3 r0", "$ r1 = r2 _3", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 7", "if $ i1 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = javassist bytecode analysis frame r0", "r1 top = 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = javassist bytecode analysis multi type r0", "$ r1 = r6 resolve", "if $ r1 == null goto label1", "r7 = javassist bytecode analysis multi type r0", "$ r4 = r7 resolve", "$ r5 = $ r4 get ct class", "return $ r5", "if $ r1 == null goto label1", "label $ r2 = javassist bytecode analysis type object", "$ r3 = $ r2 get ct class", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = javassist bytecode analysis type prim", "$ r3 = $ r2 get r0", "r1 = javassist bytecode analysis type $ r3", "if r1 == null goto label1", "$ r4 = r1", "goto label2", "label return $ r4", "if r1 == null goto label1", "label $ r4 = new javassist bytecode analysis type", "specialinvoke $ r4 < init > r0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r6 = javassist bytecode analysis multi type r0", "$ r1 = r6 resolve", "if $ r1 == null goto label1", "r7 = javassist bytecode analysis multi type r0", "$ r4 = r7 resolve", "$ r5 = $ r4 get ct class", "return $ r5", "if $ r1 == null goto label1", "label $ r2 = javassist bytecode analysis type object", "$ r3 = $ r2 get ct class", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = javassist bytecode annotation annotation writer r0", "r1 write16bit i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = javassist bytecode annotation attribute r0", "r2 = r6 get annotation", "i1 = 0", "label $ i0 = lengthof r2", "if i1 > = $ i0 goto label3", "$ r3 = r2 [ i1 ]", "$ r4 = $ r3 get type name", "$ z0 = $ r4 equal r1", "if $ z0 == 0 goto label2", "$ r5 = r2 [ i1 ]", "return $ r5", "if $ z0 == 0 goto label2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r2 = javassist bytecode attribute info r0", "$ r1 = r2 info", "$ i0 = lengthof $ r1", "$ i1 = $ i0 + 6", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = javassist bytecode attribute info r0", "$ r1 = r2 info", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "r0 = @ parameter1", "i1 = @ parameter2", "$ i2 = i0 > > > 8", "$ b3 = byte $ i2", "r0 [ i1 ] = $ b3", "$ i5 = i1 + 1", "$ b4 = byte i0", "r0 [ $ i5 ] = $ b4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = javassist bytecode bytecode r0", "$ r1 = r2 const pool", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = javassist bytecode bytecode r0", "$ i0 = r1 get size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = javassist bytecode bytecode r0", "r2 add i0", "$ r1 = javassist bytecode bytecode stack_grow", "$ i1 = $ r1 [ i0 ]", "r3 = javassist bytecode bytecode r0", "r3 grow stack $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ i1 = i0 > > 8", "r1 = javassist bytecode bytecode r0", "r1 add $ i1 i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r1 = javassist bytecode bytecode r0", "r1 add iconst i1", "r2 = javassist bytecode bytecode r0", "r2 add opcode 188", "r3 = javassist bytecode bytecode r0", "r3 add i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = javassist bytecode bytecode r0", "r2 add getstatic \\ `` java lang system\\", "r3 = javassist bytecode bytecode r0", "r3 add ldc r1", "r4 = javassist bytecode bytecode r0", "r4 add invokevirtual \\ `` java io print stream\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r19 = javassist bytecode class file r0", "r1 = specialinvoke r19 compact0", "r18 = new java util array list", "specialinvoke r18 < init >", "r20 = javassist bytecode class file r0", "r8 = r20 get attribute \\ `` runtime invisible annotations\\ ``", "if r8 == null goto label1", "r9 = r8 copy r1 null", "r18 add r9", "label r21 = javassist bytecode class file r0", "r10 = r21 get attribute \\ `` runtime visible annotations\\ ``", "if r10 == null goto label2", "r11 = r10 copy r1 null", "r18 add r11", "label r22 = javassist bytecode class file r0", "r12 = r22 get attribute \\ `` signature\\ ``", "if r12 == null goto label3", "r13 = r12 copy r1 null", "r18 add r13", "label r23 = javassist bytecode class file r0", "$ r4 = r23 method", "r14 = $ r4 iterator", "label $ z4 = r14 have next", "if $ z4 == 0 goto label5", "$ r7 = r14 next", "r15 = javassist bytecode method info $ r7", "r15 prune r1", "goto label4", "if $ z4 == 0 goto label5", "label r24 = javassist bytecode class file r0", "$ r5 = r24 field", "r16 = $ r5 iterator", "label $ z0 = r16 have next", "if $ z0 == 0 goto label7", "$ r6 = r16 next", "r17 = javassist bytecode field info $ r6", "r17 prune r1", "goto label6", "if $ z0 == 0 goto label7", "label r25 = javassist bytecode class file r0", "r25 attribute = r18", "r26 = javassist bytecode class file r0", "r26 const pool = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], []]}
{"nodes": ["r0 = @ this", "i1 = @ parameter0", "$ i0 = i1 & 512", "if $ i0 ! = 0 goto label1", "i1 = i1 | 32", "label r1 = javassist bytecode class file r0", "r1 access flag = i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = javassist bytecode class file r0", "$ r2 = r3 thisclassname", "r4 = javassist bytecode class file r0", "r4 rename class $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = javassist bytecode class file r0", "$ r4 = r7 method", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = javassist bytecode method info $ r5", "$ r6 = r3 get name", "$ z1 = $ r6 equal r1", "if $ z1 == 0 goto label2", "return r3", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = javassist bytecode class file r0", "$ r4 = r7 attribute", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = javassist bytecode attribute info $ r5", "$ r6 = r3 get name", "$ z1 = $ r6 equal r1", "if $ z1 == 0 goto label2", "return r3", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = javassist bytecode class file r0", "$ i0 = r1 major", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = javassist bytecode class file r0", "r1 minor = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = javassist bytecode code attribute r0", "$ r2 = r5 attribute", "javassist bytecode attribute info remove $ r2 \\ `` stack map\\ ``", "if r1 == null goto label1", "r6 = javassist bytecode code attribute r0", "$ r4 = r6 attribute", "$ r4 add r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = javassist bytecode code iterator r0", "$ i0 = specialinvoke r1 skip super constructor0 -1", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r2 = javassist bytecode code iterator r0", "$ r1 = r2 insert gap at i0 i1 1", "$ i2 = $ r1 length", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r4 = javassist bytecode code iterator r0", "$ r3 = r4 code attr", "r2 = $ r3 get exception table", "$ i1 = r2 size", "r2 add $ i1 r1 i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = javassist bytecode const pool r0", "$ i0 = r1 num of item", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = javassist bytecode const pool r0", "$ r2 = r3 get item i0", "r1 = javassist bytecode memberref info $ r2", "$ i1 = r1 name and type index", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = javassist bytecode const pool r0", "$ r2 = r3 get item i0", "r1 = javassist bytecode method type info $ r2", "$ i1 = r1 descriptor", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = javassist bytecode const pool r0", "$ r2 = r3 get item i0", "r1 = javassist bytecode invoke dynamic info $ r2", "$ i1 = r1 name and type", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = javassist bytecode exception table r0", "$ r1 = r3 entry", "$ r1 remove i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = javassist bytecode line number attribute r0", "i1 = r4 table length", "i6 = 0", "i7 = 0", "if i1 < = 0 goto label1", "r5 = javassist bytecode line number attribute r0", "$ i5 = r5 line number 0", "i7 = $ i5 - i0", "r6 = javassist bytecode line number attribute r0", "i6 = r6 start pc 0", "label i8 = 1", "label if i8 > = i1 goto label6", "r7 = javassist bytecode line number attribute r0", "$ i4 = r7 line number i8", "i2 = $ i4 - i0", "if i2 > = 0 goto label3", "if i2 > i7 goto label4", "label if i2 < 0 goto label5", "if i2 < i7 goto label4", "if i7 > = 0 goto label5", "label i7 = i2", "r8 = javassist bytecode line number attribute r0", "i6 = r8 start pc i8", "label i8 = i8 + 1", "goto label2", "label if i8 > = i1 goto label6", "label r3 = new javassist bytecode line number attribute $ pc", "specialinvoke r3 < init >", "r3 index = i6", "$ i3 = i0 + i7", "r3 line = $ i3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = javassist class pool r0", "$ r2 = r3 import package", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = null", "if r1 ! = null goto label1", "label r5 = javassist class pool r0", "r4 = r5 get0 r1 1", "label goto label4", "label if r4 == null goto label5", "r4 inc get counter", "label return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = javassist class pool r0", "$ r2 = r4 source", "$ r3 = $ r2 find r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = javassist compiler ast a s t list r0", "$ r1 = r2 right", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = r1 get oprand", "r10 = javassist compiler ast visitor r0", "$ r3 accept r10", "r11 = javassist compiler jvst code gen r0", "$ i1 = r11 expr type", "if $ i1 == 344 goto label1", "r12 = javassist compiler jvst code gen r0", "$ i2 = r12 expr type", "$ z0 = javassist compiler jvst code gen be ref type $ i2", "if $ z0 ! = 0 goto label1", "r13 = javassist compiler jvst code gen r0", "$ i3 = r13 array dim", "if $ i3 < = 0 goto label2", "label r14 = javassist compiler jvst code gen r0", "$ r7 = r14 return type", "r15 = javassist compiler jvst code gen r0", "$ r8 = r15 bytecode", "r16 = javassist compiler jvst code gen r0", "r16 compile unwrap value $ r7 $ r8", "goto label4", "label return", "if $ i3 < = 0 goto label2", "label r17 = javassist compiler jvst code gen r0", "$ r4 = r17 return type", "$ z1 = $ r4 instanceof javassist ct primitive type", "if $ z1 == 0 goto label3", "r18 = javassist compiler jvst code gen r0", "$ r6 = r18 return type", "r2 = javassist ct primitive type $ r6", "$ c4 = r2 get descriptor", "i0 = javassist compiler member resolver desc to type $ c4", "r19 = javassist compiler jvst code gen r0", "$ i5 = r19 expr type", "r20 = javassist compiler jvst code gen r0", "r20 at num cast expr $ i5 i0", "r21 = javassist compiler jvst code gen r0", "r21 expr type = i0", "r22 = javassist compiler jvst code gen r0", "r22 array dim = 0", "r23 = javassist compiler jvst code gen r0", "r23 class name = null", "if $ z1 == 0 goto label3", "label r9 = new javassist compiler compile error", "specialinvoke r9 < init > \\ `` invalid cast\\ ``", "r24 = java lang throwable r9", "throw r24"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = javassist compiler jvst code gen r0", "$ r3 = r8 param type list", "if $ r3 == null goto label3", "if r1 == null goto label3", "$ r4 = r1 tail", "if $ r4 ! = null goto label3", "r2 = r1 head", "$ z0 = r2 instanceof javassist compiler ast member", "if $ z0 == 0 goto label1", "$ r5 = javassist compiler ast member r2", "$ r6 = $ r5 get", "r9 = javassist compiler jvst code gen r0", "$ r7 = r9 param list name", "$ z1 = $ r6 equal $ r7", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0", "if $ r4 ! = null goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = javassist compiler member code gen r0", "r3 = javassist compiler ast a s tree r1", "r2 at field read r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = javassist ct behavior r0", "$ r2 = r5 method info", "$ r3 = $ r2 get attribute \\ `` signature\\ ``", "r1 = javassist bytecode signature attribute $ r3", "if r1 ! = null goto label1", "$ r4 = null", "goto label2", "label return $ r4", "if r1 ! = null goto label1", "label $ r4 = r1 get signature"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r8 = new java lang runtime exception", "r7 = new java lang string builder", "specialinvoke r7 < init >", "$ r3 = r7 append \\ `` can not defrost \\ ``", "r9 = javassist ct class r0", "$ r4 = r9 get name", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 to string", "specialinvoke r8 < init > $ r6", "throw r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = javassist ct class r0", "r2 check modify", "if r1 == null goto label1", "r3 = javassist ct class r0", "r3 qualify name = r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = javassist ct class r0", "r3 check modify", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r9 = new java lang runtime exception", "r8 = new java lang string builder", "specialinvoke r8 < init >", "r10 = javassist ct class r0", "$ r4 = r10 get name", "$ r5 = r8 append $ r4", "$ r6 = $ r5 append \\ `` be not a class\\ ``", "$ r7 = $ r6 to string", "specialinvoke r9 < init > $ r7", "throw r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new javassist not find exception", "specialinvoke r4 < init > r1", "r5 = java lang throwable r4", "throw r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = javassist ct class r0", "r2 check modify", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = javassist class pool r0", "$ r2 = r4 get class loader", "r5 = javassist class pool r0", "$ r3 = r5 to class r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = javassist ct class type r0", "$ r1 = r5 member cache", "if $ r1 == null goto label1", "r6 = javassist ct class type r0", "$ r2 = r6 member cache", "$ r3 = $ r2 get", "$ r4 = javassist ct member $ cache $ r3", "return $ r4", "if $ r1 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r9 = new java lang string builder", "specialinvoke r9 < init >", "r10 = javassist ct constructor r0", "$ r2 = r10 get declare class", "$ r3 = $ r2 get name", "$ r4 = r9 append $ r3", "r11 = javassist ct constructor r0", "$ z0 = r11 be constructor", "if $ z0 == 0 goto label1", "r12 = javassist ct constructor r0", "$ r7 = r12 get signature", "$ r8 = javassist bytecode descriptor to string $ r7", "goto label2", "label $ r5 = $ r4 append $ r8", "$ r6 = $ r5 to string", "return $ r6", "if $ z0 == 0 goto label1", "label $ r8 = \\ `` < clinit > \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r2 = javassist ct method r0", "$ r1 = r2 get string rep", "$ i0 = $ r1 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = javassist ct primitive type r0", "$ r1 = r2 get method name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = javassist ct primitive type r0", "$ i0 = r1 return op", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javassist expr expr r0", "$ r1 = r2 this method", "$ i0 = $ r1 get access flag", "$ i1 = $ i0 & 8", "if $ i1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = javassist expr field access r0", "$ i0 = r1 opcode", "if $ i0 == 180 goto label1", "r2 = javassist expr field access r0", "$ i1 = r2 opcode", "if $ i1 ! = 178 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if $ i1 ! = 178 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "$ r1 = specialinvoke r0 where", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = javassist expr method call r0", "r1 = r3 get const pool", "r4 = javassist expr method call r0", "i0 = specialinvoke r4 get name and type r1", "$ i1 = r1 get name and type name i0", "$ r2 = r1 get utf8 info $ i1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r6 = javassist expr method call r0", "$ r1 = r6 iterator", "r7 = javassist expr method call r0", "$ i0 = r7 current po", "$ i1 = $ r1 byte at $ i0", "if $ i1 ! = 183 goto label1", "r8 = javassist expr method call r0", "$ r2 = r8 where", "$ r3 = $ r2 get declare class", "$ r4 = $ r3 get name", "r9 = javassist expr method call r0", "$ r5 = r9 get class name", "$ z0 = $ r4 equal $ r5", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 8", "if $ i1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 16", "if $ i1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 32", "if $ i1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 128", "if $ i1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & -7", "$ i2 = $ i1 | 1", "return $ i2"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "$ i2 = i1 ^ -1", "$ i3 = i0 & $ i2", "return $ i3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = javassist runtime cflow r0", "$ r1 = r3 get", "$ r2 = javassist runtime cflow $ depth $ r1", "$ r2 dec", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = javassist scopedpool scoped class pool r0", "$ r2 = r9 softcache", "$ r2 remove r1", "r10 = javassist scopedpool scoped class pool r0", "$ r4 = r10 class", "$ r5 = $ r4 get r1", "r7 = javassist ct class $ r5", "if r7 ! = null goto label2", "r11 = javassist scopedpool scoped class pool r0", "r7 = r11 create ct class r1 1", "if r7 ! = null goto label1", "r8 = new javassist not find exception", "specialinvoke r8 < init > r1", "r12 = java lang throwable r8", "throw r12", "if r7 ! = null goto label1", "label specialinvoke r0 cache ct class r1 r7 0", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = javassist tool web webserver r0", "r2 class pool = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = javassist tool web webserver r0", "$ r1 = r2 socket", "$ r1 close", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = javassist util proxy runtime support find method2 r0 r1 r2", "if r3 ! = null goto label1", "javassist util proxy runtime support error r0 r1 r2", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = javassist bytecode code iterator r0", "$ i0 = r1 mark2", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet http cookie r0", "$ r1 = r2 comment", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet http cookie r0", "$ r1 = r2 domain", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet http cookie r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = javax servlet http http servlet request wrapper r0", "$ r2 = specialinvoke r4 _get http servlet request", "$ r3 = $ r2 get header r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = javax servlet http http servlet request wrapper r0", "$ r2 = specialinvoke r4 _get http servlet request", "$ r3 = $ r2 get header r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = javax servlet http http servlet request wrapper r0", "$ r1 = specialinvoke r3 _get http servlet request", "$ r2 = $ r1 get path translate", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = javax servlet http http servlet request wrapper r0", "$ r1 = specialinvoke r3 _get http servlet request", "$ r2 = $ r1 get remote user", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = javax servlet http http servlet request wrapper r0", "$ r1 = specialinvoke r3 _get http servlet request", "$ r2 = $ r1 get request session id", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet http http servlet request wrapper r0", "$ r1 = specialinvoke r2 _get http servlet request", "$ z0 = $ r1 be request session id from url", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r3 = javax servlet http http servlet response wrapper r0", "$ r2 = specialinvoke r3 _get http servlet response", "$ r2 set date header r1 l0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r3 = javax servlet http http servlet response wrapper r0", "$ r2 = specialinvoke r3 _get http servlet response", "$ r2 add date header r1 l0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = javax servlet http http servlet response wrapper r0", "$ r3 = specialinvoke r4 _get http servlet response", "$ r3 add header r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet http constraint element r0", "$ r1 = r2 empty role semantic", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet http constraint element r0", "$ r1 = r2 transport guarantee", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet servlet context attribute event r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet servlet exception r0", "$ r1 = r2 root cause", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = javax servlet servlet output stream r0", "r1 print \\ `` \\r\\n\\ ``", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet servlet request attribute event r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = javax servlet servlet request wrapper r0", "$ r2 = r4 request", "$ r3 = $ r2 get attribute r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = javax servlet servlet request wrapper r0", "$ r1 = r3 request", "$ r2 = $ r1 get locale", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet servlet request wrapper r0", "$ r1 = r2 request", "$ z0 = $ r1 be async support", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = javax servlet servlet request wrapper r0", "$ r1 = r3 request", "$ r2 = $ r1 get dispatcher type", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = javax servlet servlet response wrapper r0", "$ r2 = r3 response", "$ r2 set locale r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = javax servlet unavailable exception r0", "$ z0 = r1 permanent", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r18 = javax websocket close reason r0", "$ r1 = r18 reason phrase", "if $ r1 ! = null goto label1", "r16 = new java lang string builder", "specialinvoke r16 < init >", "$ r11 = r16 append \\ `` close reason [ \\ ``", "r19 = javax websocket close reason r0", "$ r12 = r19 close code", "$ i1 = $ r12 get code", "$ r13 = $ r11 append $ i1", "$ r14 = $ r13 append \\ `` ] \\ ``", "$ r15 = $ r14 to string", "goto label2", "label return $ r15", "if $ r1 ! = null goto label1", "label r17 = new java lang string builder", "specialinvoke r17 < init >", "$ r3 = r17 append \\ `` close reason [ \\ ``", "r20 = javax websocket close reason r0", "$ r4 = r20 close code", "$ i0 = $ r4 get code", "$ r5 = $ r3 append $ i0", "$ r6 = $ r5 append \\", "r21 = javax websocket close reason r0", "$ r7 = r21 reason phrase", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 append \\ `` ] \\ ``", "$ r15 = $ r9 to string"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r6 = null", "$ r2 = java util service loader load class \\ `` ljavax websocket container provider \\ ``", "r0 = $ r2 iterator", "label $ z0 = r0 have next", "if $ z0 == 0 goto label3", "$ r5 = r0 next", "r1 = javax websocket container provider $ r5", "r6 = r1 get container", "if r6 == null goto label2", "return r6", "if r6 == null goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label if r6 ! = null goto label4", "$ r4 = new java lang runtime exception", "specialinvoke $ r4 < init > \\ `` could not find an implementation class \\ ``", "throw $ r4", "label if r6 ! = null goto label4", "label $ r3 = new java lang runtime exception", "specialinvoke $ r3 < init > \\ `` could not find an implementation class with a non-null web socket container \\ ``", "throw $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r2 = javax websocket decode exception r0", "$ r1 = r2 encode string", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax websocket server default server endpoint config r0", "$ r1 = r2 decoder", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = com sun xml bind api type reference r0", "r2 = r7 annotation", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label3", "r3 = r2 [ i1 ]", "$ r4 = r3 annotation type", "if $ r4 ! = r1 goto label2", "$ r5 = r1 cast r3", "$ r6 = java lang annotation annotation $ r5", "return $ r6", "if $ r4 ! = r1 goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "$ r1 = com sun xml bind marshaller namespace prefix mapper empty_string", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = com sun xml bind v2 runtime jax bean info r0", "$ r1 = r2 lcm", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = com sun xml bind v2 runtime jax bean info r0", "$ r5 = r6 get lifecycle method", "r4 = $ r5 after unmarshal", "r7 = com sun xml bind v2 runtime jax bean info r0", "specialinvoke r7 invoke unmarshall callback r4 r2 r1 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = com sun xml bind v2 runtime unmarshaller unmarshaller impl r0", "$ r1 = r2 get event handler", "if $ r1 == r0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == r0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com sun xml bind v2 runtime unmarshaller unmarshalling context r0", "r2 handle error r1 1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = com sun xml bind v2 runtime unmarshaller unmarshalling context r0", "$ r1 = r4 current", "$ r2 = com sun xml bind v2 runtime unmarshaller unmarshalling context $ state access $ 500 $ r1", "$ i0 = com sun xml bind v2 runtime unmarshaller unmarshalling context $ state access $ 1400 $ r2", "r5 = com sun xml bind v2 runtime unmarshaller unmarshalling context r0", "$ r3 = specialinvoke r5 get prefix list $ i0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = new javax xml bind helper validation event impl", "$ r5 = r2 get message", "r8 = com sun xml bind v2 runtime x m l serializer r0", "$ r6 = r8 get current location r1", "specialinvoke r7 < init > 1 $ r5 $ r6 r2", "r9 = com sun xml bind v2 runtime x m l serializer r0", "r10 = javax xml bind validation event r7", "r9 report error r10", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = com sun xml bind v2 runtime x m l serializer r0", "$ r1 = r3 current property", "if $ r1 == null goto label1", "r4 = com sun xml bind v2 runtime x m l serializer r0", "$ r2 = r4 current property", "$ r2 remove", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r9 = new java lang string builder", "specialinvoke r9 < init >", "r10 = com sun xml bind v2 util collision check stack r0", "$ i0 = r10 size", "i1 = $ i0 - 1", "r11 = com sun xml bind v2 util collision check stack r0", "r2 = r11 get i1", "r9 append r2", "label r9 append \\ `` - > \\ ``", "i1 = i1 + -1", "r12 = com sun xml bind v2 util collision check stack r0", "r3 = r12 get i1", "r9 append r3", "if r2 ! = r3 goto label1", "$ r8 = r9 to string", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = com sun xml bind v2 util q name map r0", "$ i0 = r1 size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jaxen context r0", "$ r1 = r2 node set", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jaxen context support r0", "$ r1 = r2 function context", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jaxen context support r0", "$ r1 = r2 navigator", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org jaxen expr predicate set r0", "$ r3 = r7 predicate", "$ r2 = java util collection empty_list", "if $ r3 ! = $ r2 goto label1", "r6 = new java util array list", "specialinvoke r6 < init >", "r8 = org jaxen expr predicate set r0", "r8 predicate = r6", "label r9 = org jaxen expr predicate set r0", "$ r4 = r9 predicate", "$ r4 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org jaxen jaxen handler r0", "$ r1 = r2 xpath factory", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jaxen jdom x path namespace r0", "$ r1 = r2 jdom element", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jaxen jdom x path namespace r0", "r2 jdom element = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jaxen jdom x path namespace r0", "$ r1 = r2 jdom namespace", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org jaxen pattern location path pattern r0", "$ r1 = r3 filter", "if $ r1 == null goto label1", "return 0 5", "if $ r1 == null goto label1", "label r4 = org jaxen pattern location path pattern r0", "$ r2 = r4 node test", "$ d0 = $ r2 get priority", "return $ d0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org jaxen saxpath x path syntax exception r0", "$ i0 = r1 position", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r7 = org jaxen util precede sibling axis iterator r0", "$ z0 = r7 have next", "if $ z0 ! = 0 goto label1", "r6 = new java util no such element exception", "specialinvoke r6 < init >", "throw r6", "if $ z0 ! = 0 goto label1", "label r8 = org jaxen util precede sibling axis iterator r0", "r1 = r8 next obj", "r9 = org jaxen util precede sibling axis iterator r0", "$ r2 = r9 sibling iter", "$ z1 = $ r2 have next", "if $ z1 == 0 goto label2", "r10 = org jaxen util precede sibling axis iterator r0", "$ r3 = r10 sibling iter", "$ r4 = $ r3 next", "r11 = org jaxen util precede sibling axis iterator r0", "r11 next obj = $ r4", "goto label3", "label return r1", "if $ z1 == 0 goto label2", "label r12 = org jaxen util precede sibling axis iterator r0", "r12 next obj = null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r4 = org jaxen util single object iterator r0", "$ z0 = r4 have next", "if $ z0 == 0 goto label1", "r5 = org jaxen util single object iterator r0", "r5 see = 1", "r6 = org jaxen util single object iterator r0", "$ r2 = r6 object", "return $ r2", "if $ z0 == 0 goto label1", "label r3 = new java util no such element exception", "specialinvoke r3 < init >", "throw r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = javax resource spi connection event r0", "$ r1 = r2 e", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = javax resource spi security password credential r0", "r6 = r10 user name", "r8 = new java lang string builder", "specialinvoke r8 < init >", "$ r2 = r8 append r6", "r9 = new java lang string", "r11 = javax resource spi security password credential r0", "$ r4 = r11 password", "specialinvoke r9 < init > $ r4", "$ r5 = $ r2 append r9", "r7 = $ r5 to string", "$ i0 = r7 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org jboss log delegate basic logger r0", "$ r3 = r4 log", "$ r2 = org jboss log delegate basic logger fqcn", "$ r3 trace $ r2 r1 null", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org jboss log delegate basic logger r0", "$ r4 = r5 log", "$ r3 = org jboss log delegate basic logger fqcn", "$ r4 trace $ r3 r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org jboss log delegate basic logger r0", "$ r3 = r4 log", "$ r2 = org jboss log delegate basic logger fqcn", "$ r3 debug $ r2 r1 null", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org jboss log delegate basic logger r0", "$ r4 = r5 log", "$ r3 = org jboss log delegate basic logger fqcn", "$ r4 info $ r3 r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org jboss log delegate basic logger r0", "$ r5 = r6 log", "$ r4 = org jboss log delegate basic logger fqcn", "$ r3 = org jboss log logger $ level warn", "$ r5 logf $ r4 $ r3 null r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org jboss log delegate basic logger r0", "$ r4 = r5 log", "$ r3 = org jboss log delegate basic logger fqcn", "$ r4 error $ r3 r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = org jboss log delegate basic logger r0", "$ r5 = r6 log", "$ r4 = org jboss log delegate basic logger fqcn", "$ r5 log $ r4 r1 r2 null r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 get name", "$ r3 = org jboss log logger get logger $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get name", "$ r2 = org jboss log logger get logger $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["z0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r0 = @ parameter3", "$ r1 = org jboss logmanager formatters formatters module name format step z0 i0 0 i1 r0", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["z0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ r0 = org jboss logmanager formatters formatters resource key format step z0 i0 0 i1", "return $ r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r6 = java time format date time formatter iso_offset_date_time", "r8 = org jboss logmanager formatters structure formatter r0", "$ r5 = r8 zone id", "$ r7 = $ r6 with zone $ r5", "r9 = org jboss logmanager formatters structure formatter r0", "r9 date time formatter = $ r7", "goto label2", "label return", "if r1 ! = null goto label1", "label $ r2 = java time format date time formatter of pattern r1", "r10 = org jboss logmanager formatters structure formatter r0", "$ r3 = r10 zone id", "$ r4 = $ r2 with zone $ r3", "r11 = org jboss logmanager formatters structure formatter r0", "r11 date time formatter = $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r5 = org jboss logmanager handler periodic size rotate file handler r0", "$ r3 = r5 output lock", "entermonitor $ r3", "label r6 = org jboss logmanager handler periodic size rotate file handler r0", "r6 rotate size = l0", "exitmonitor $ r3", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r5 = org jboss logmanager handler queue handler r0", "$ r3 = r5 buffer", "entermonitor $ r3", "label r6 = org jboss logmanager handler queue handler r0", "$ i0 = r6 limit", "exitmonitor $ r3", "label return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r10 = org jboss logmanager handler queue handler r0", "$ r3 = r10 buffer", "entermonitor $ r3", "label r11 = org jboss logmanager handler queue handler r0", "$ r5 = r11 buffer", "r12 = org jboss logmanager handler queue handler r0", "$ r4 = r12 buffer", "$ i0 = $ r4 size", "$ r6 = newarray org jboss logmanager ext log record [ $ i0 ]", "$ r7 = $ r5 to array $ r6", "$ r8 = org jboss logmanager ext log record [ ] $ r7", "exitmonitor $ r3", "label return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r11 = org jboss logmanager handler queue handler r0", "r1 = r11 get queue", "i0 = lengthof r1", "r2 = newarray java lang string [ i0 ]", "r12 = org jboss logmanager handler queue handler r0", "r3 = r12 get formatter", "i3 = 0", "i4 = 0", "label if i4 > = i0 goto label6", "label $ r6 = r1 [ i4 ]", "r13 = java util log log record $ r6", "r4 = r3 format r13", "$ i1 = r4 length", "if $ i1 < = 0 goto label3", "$ i2 = i3", "i3 = i3 + 1", "r14 = org jboss logmanager handler queue handler r0", "$ r7 = r14 get formatter", "$ r8 = r1 [ i4 ]", "r15 = java util log log record $ r8", "$ r9 = $ r7 format r15", "r2 [ $ i2 ] = $ r9", "label goto label5", "label i4 = i4 + 1", "goto label1", "label if i4 > = i0 goto label6", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss logmanager handler socket handler r0", "$ r1 = r2 address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org jboss logmanager log context r0", "$ r3 = r5 root logger", "$ r4 = $ r3 attach r1 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org jboss logmanager log context r0", "$ r2 = r5 root logger", "$ r3 = $ r2 get or create r1", "$ r4 = $ r3 create logger", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r9 = org jboss logmanager log context level_map", "$ r10 = $ r9 get r1", "r2 = java util log level $ r10", "if r2 == null goto label1", "return r2", "if r2 == null goto label1", "label $ r3 = new java lang illegal argument exception", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = $ r4 append \\ `` unknown level \\\\\\ `` \\ ``", "$ r6 = $ r5 append r1", "$ r7 = $ r6 append \\ `` \\\\\\ `` \\ ``", "$ r8 = $ r7 to string", "specialinvoke $ r3 < init > $ r8", "throw $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org jboss logmanager logger r0", "$ r2 = r5 logger node", "$ r3 = $ r2 get context", "$ r4 = $ r3 get level for name r1", "r6 = org jboss logmanager logger r0", "r6 set level $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org jboss logmanager log context r0", "$ r3 = r5 root logger", "$ r4 = $ r3 attach r1 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r5 = r1 clone", "r2 = java util log handler [ ] $ r5", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label3", "r4 = r2 [ i1 ]", "if r4 ! = null goto label2", "r9 = new java lang illegal argument exception", "specialinvoke r9 < init > \\ `` a handler be null\\ ``", "throw r9", "if r4 ! = null goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label r10 = org jboss logmanager logger r0", "$ r6 = r10 logger node", "$ r7 = $ r6 set handler r2", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r6 = r1 clone", "r3 = java util log handler [ ] $ r6", "$ r7 = r2 clone", "r4 = java util log handler [ ] $ r7", "i0 = lengthof r4", "i1 = 0", "label if i1 > = i0 goto label3", "r5 = r4 [ i1 ]", "if r5 ! = null goto label2", "r13 = new java lang illegal argument exception", "specialinvoke r13 < init > \\ `` a handler be null\\ ``", "throw r13", "if r5 ! = null goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label r14 = org jboss logmanager logger r0", "$ r8 = r14 logger node", "r12 = $ r8 get handler", "$ z0 = java util array equal r12 r3", "if $ z0 ! = 0 goto label4", "return 0", "if $ z0 ! = 0 goto label4", "label r15 = org jboss logmanager logger r0", "$ r9 = r15 logger node", "$ z1 = $ r9 compare and set handler r12 r4", "if $ z1 == 0 goto label3", "return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r3 = org jboss logmanager logger r0", "$ r1 = r3 logger node", "$ r2 = $ r1 clear handler", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org jboss logmanager ext log record wrap r1", "r3 = org jboss logmanager logger r0", "r3 log raw $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org jboss logmanager log uncaught exception handler r0", "$ r4 = r5 log", "$ r3 = org jboss logmanager level error", "r6 = java util log level $ r3", "$ r4 log r6 \\ `` uncaught exception\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org wildfly common assert check not null param \\ `` exception handler\\", "r3 = org jboss thread enhance queue executor r0", "r3 exception handler = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ z0 = org jboss thread enhance queue executor update_statistics", "if $ z0 == 0 goto label1", "r2 = org jboss thread enhance queue executor r0", "$ r1 = r2 submit task counter", "$ l0 = $ r1 long value", "goto label2", "label return $ l0", "if $ z0 == 0 goto label1", "label $ l0 = -1l"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org jboss tm transaction local r0", "$ r3 = r4 delegate", "r5 = org jboss tm transaction local r0", "$ r3 store value r5 r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = org jboss tm transaction local r0", "$ r1 = r3 get transaction", "r4 = org jboss tm transaction local r0", "$ r2 = r4 get $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = org jboss tm transaction manager locator get instance", "$ r1 = $ r0 locate", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common log impl s l f4 j location aware log r0", "$ r1 = r2 logger", "$ z0 = $ r1 be trace enabled", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org apache common log impl s l f4 j location aware log r0", "$ r3 = r6 logger", "$ r4 = org apache common log impl s l f4 j location aware log fqcn", "$ r5 = java lang string value of r1", "$ r3 log null $ r4 10 $ r5 null r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 ! = null goto label1", "r7 = org apache common log impl s l f4 j log factory r0", "$ r5 = r7 attribute", "$ r5 remove r1", "goto label2", "label return", "if r2 ! = null goto label1", "label r8 = org apache common log impl s l f4 j log factory r0", "$ r3 = r8 attribute", "$ r3 put r1 r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org jdom attribute r0", "$ r1 = r2 namespace", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org jdom attribute r0", "$ r1 = r3 namespace", "$ r2 = $ r1 get prefix", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r1 instanceof org jdom attribute", "if $ z0 == 0 goto label2", "r2 = org jdom attribute r1", "r17 = org jdom attribute list r0", "i1 = specialinvoke r17 index of duplicate r2", "if i1 < 0 goto label1", "if i1 == i0 goto label1", "r13 = new org jdom illegal add exception", "specialinvoke r13 < init > \\ `` can not set duplicate attribute\\ ``", "r18 = java lang throwable r13", "throw r18", "if i1 == i0 goto label1", "label r19 = org jdom attribute list r0", "$ r11 = r19 set i0 r2", "return $ r11", "if $ z0 == 0 goto label2", "label if r1 ! = null goto label3", "r14 = new org jdom illegal add exception", "specialinvoke r14 < init > \\ `` can not add null attribute\\ ``", "r20 = java lang throwable r14", "throw r20", "label if r1 ! = null goto label3", "label r16 = new org jdom illegal add exception", "r15 = new java lang string buffer", "specialinvoke r15 < init > \\ `` class \\ ``", "$ r5 = r1 get class", "$ r6 = $ r5 get name", "$ r7 = r15 append $ r6", "$ r8 = $ r7 append \\ `` be not an attribute\\ ``", "$ r9 = $ r8 to string", "specialinvoke r16 < init > $ r9", "r21 = java lang throwable r16", "throw r21"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "r2 = org jdom comment r0", "$ r1 = r2 text", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jdom doc type r0", "$ r1 = r2 system i d", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jdom verifier check system literal r1", "if r2 == null goto label1", "r4 = new org jdom illegal data exception", "specialinvoke r4 < init > r1 \\ `` doc type\\", "r5 = java lang throwable r4", "throw r5", "if r2 == null goto label1", "label r6 = org jdom doc type r0", "r6 system i d = r1", "r7 = org jdom doc type r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r10 = org jdom element r0", "$ r6 = r10 content", "r9 = new org jdom filter element filter", "specialinvoke r9 < init > r1 r2", "r11 = org jdom filter filter r9", "r3 = $ r6 get view r11", "r4 = r3 iterator", "$ z0 = r4 have next", "if $ z0 == 0 goto label1", "$ r7 = r4 next", "$ r8 = org jdom element $ r7", "return $ r8", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r3 = org jdom element r0", "$ r1 = r3 namespace", "$ r2 = $ r1 get u r i", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org jdom namespace no_namespace", "r3 = org jdom element r0", "$ z0 = r3 remove child r1 $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r9 = new java lang string buffer", "specialinvoke r9 < init >", "$ r2 = r9 append \\ `` [ entity ref \\ ``", "$ r3 = $ r2 append \\ `` & \\ ``", "r10 = org jdom entity ref r0", "$ r4 = r10 name", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 append \\ `` \\ ``", "$ r7 = $ r6 append \\ `` ] \\ ``", "$ r8 = $ r7 to string", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org jdom filter content filter r0", "$ i0 = r1 filter mask", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org jdom input s a x handler r0", "$ r1 = r5 current element", "if $ r1 ! = null goto label1", "r4 = new org xml sax s a x exception", "specialinvoke r4 < init > \\ `` ill-formed xml document multiple root element detect \\ ``", "throw r4", "if $ r1 ! = null goto label1", "label r6 = org jdom input s a x handler r0", "$ r2 = r6 current element", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org jdom input s a x handler r0", "$ z0 = r1 expand", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jdom j d o m exception r0", "r2 cause = r1", "return r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r9 = new java lang string buffer", "specialinvoke r9 < init > \\ `` [ namespace prefix \\\\\\ `` \\ ``", "r10 = org jdom namespace r0", "$ r2 = r10 prefix", "$ r3 = r9 append $ r2", "$ r4 = $ r3 append \\ `` \\\\\\ `` be map to uri \\\\\\ `` \\ ``", "r11 = org jdom namespace r0", "$ r5 = r11 uri", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 append \\ `` \\\\\\ `` ] \\ ``", "$ r8 = $ r7 to string", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org jdom output format r0", "$ r1 = r2 indent", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org jdom output format r0", "$ z0 = r1 omit declaration", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org jdom output format r0", "$ z0 = r1 omit encode", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org jdom output format r0", "r1 expand empty element = z0", "r2 = org jdom output format r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org jdom comment r0", "$ r1 = r2 text", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jdom transform j d o m result r0", "r2 factory = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r19 = org jdom xpath jaxen x path r0", "r19 current context = r1", "r20 = org jdom xpath jaxen x path r0", "$ r5 = r20 x path", "r21 = org jaxen base x path $ r5", "r2 = r21 select single node r1", "goto label6", "label r25 = org jdom xpath jaxen x path r0", "r25 current context = null", "goto label2", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org jdom xpath x path new instance r1", "$ r3 = $ r2 select node r0", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["c0 = @ parameter0", "if c0 == 32 goto label1", "if c0 == 10 goto label1", "if c0 == 9 goto label1", "if c0 ! = 13 goto label2", "label return 1", "if c0 ! = 13 goto label2", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp pdfa x m p schema p d f a id r0", "$ r3 = r8 prefix", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append \\ `` part\\ ``", "$ r6 = $ r5 to string", "r9 = org apache jempbox xmp pdfa x m p schema p d f a id r0", "r9 set integer property $ r6 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache jempbox xmp resource event r0", "$ r2 = r3 parent", "org apache jempbox impl x m l util set string value $ r2 \\ `` st evtsoftware agent\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache jempbox xmp resource event r0", "$ r2 = r3 parent", "org apache jempbox impl x m l util set string value $ r2 \\ `` st refmanager\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache jempbox xmp resource ref r0", "$ r2 = r3 parent", "org apache jempbox impl x m l util set string value $ r2 \\ `` st refinstance i d\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache jempbox xmp resource ref r0", "$ r2 = r3 parent", "org apache jempbox impl x m l util set string value $ r2 \\ `` st refrendition class\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache jempbox xmp thumbnail r0", "$ r1 = r3 parent", "$ r2 = org apache jempbox impl x m l util get int value $ r1 \\ `` xap g imgheight\\ ``", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache jempbox xmp x m p metadata r0", "$ r1 = r3 get schema by class class \\ `` lorg apache jempbox xmp x m p schema p d f \\ ``", "$ r2 = org apache jempbox xmp x m p schema p d f $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = new org apache jempbox xmp x m p schema right management", "r6 = org apache jempbox xmp x m p metadata r0", "specialinvoke r5 < init > r6", "r7 = org apache jempbox xmp x m p metadata r0", "r8 = org apache jempbox xmp x m p schema r5", "$ r3 = r7 basic add schema r8", "$ r4 = org apache jempbox xmp x m p schema right management $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r5 = new org apache jempbox xmp x m p schema page text", "r6 = org apache jempbox xmp x m p metadata r0", "specialinvoke r5 < init > r6", "r7 = org apache jempbox xmp x m p metadata r0", "r8 = org apache jempbox xmp x m p schema r5", "$ r3 = r7 basic add schema r8", "$ r4 = org apache jempbox xmp x m p schema page text $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r10 = org apache jempbox xmp x m p metadata r0", "$ r7 = r10 xmp document", "r1 = $ r7 get element by tag name \\ `` rdf description\\ ``", "i2 = 0", "label $ i0 = r1 get length", "if i2 > = $ i0 goto label5", "$ r8 = r1 item i2", "r2 = org w3c dom element $ r8", "r3 = r2 get attribute", "i3 = 0", "label $ i1 = r3 get length", "if i3 > = $ i1 goto label4", "r4 = r3 item i3", "r5 = r4 get node name", "r6 = r4 get node value", "$ z0 = r5 start with \\ `` xmlns\\ ``", "if $ z0 == 0 goto label3", "r11 = org apache jempbox xmp x m p metadata r0", "$ r9 = r11 ns mapping", "$ z1 = $ r9 contain key r6", "if $ z1 ! = 0 goto label3", "$ z2 = r6 equal \\ `` http n adobe com xap 1 0 s type resource event #\\ ``", "if $ z2 ! = 0 goto label3", "return 1", "if $ z2 ! = 0 goto label3", "label i3 = i3 + 1", "goto label2", "if i3 > = $ i1 goto label4", "label i2 = i2 + 1", "goto label1", "if i2 > = $ i0 goto label5", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [], [29], [30], [], [32], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = null", "if r2 == null goto label3", "$ z0 = r2 boolean value", "if $ z0 == 0 goto label1", "$ r4 = \\ `` true\\ ``", "goto label2", "label r3 = $ r4", "label r5 = org apache jempbox xmp x m p schema r0", "r5 set text property r1 r3", "return", "if $ z0 == 0 goto label1", "label $ r4 = \\ `` false\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r14 = org apache jempbox xmp x m p schema r0", "$ r9 = r14 schema", "r3 = $ r9 get element by tag name r1", "$ i0 = r3 get length", "if $ i0 < = 0 goto label3", "$ r10 = r3 item 0", "r4 = org w3c dom element $ r10", "r5 = r4 get element by tag name \\ `` rdf bag\\ ``", "$ i1 = r5 get length", "if $ i1 < = 0 goto label3", "$ r11 = r5 item 0", "r13 = org w3c dom element $ r11", "r6 = r13 get element by tag name \\ `` rdfli\\ ``", "$ i2 = r6 get length", "i3 = $ i2 - 1", "label if i3 < 0 goto label3", "$ r12 = r6 item i3", "r7 = org w3c dom element $ r12", "r8 = org apache jempbox impl x m l util get string value r7", "$ z0 = r8 equal r2", "if $ z0 == 0 goto label2", "r13 remove child r7", "label i3 = i3 + -1", "goto label1", "label if i3 < 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema basic r0", "$ r3 = r8 prefix", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append \\ `` create date\\ ``", "$ r6 = $ r5 to string", "r9 = org apache jempbox xmp x m p schema basic r0", "r9 set date property $ r6 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema basic r0", "$ r3 = r8 prefix", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append \\ `` creator tool\\ ``", "$ r6 = $ r5 to string", "r9 = org apache jempbox xmp x m p schema basic r0", "r9 set text property $ r6 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema basic r0", "$ r2 = r8 prefix", "$ r3 = r7 append $ r2", "$ r4 = $ r3 append \\ `` title\\ ``", "$ r5 = $ r4 to string", "r9 = org apache jempbox xmp x m p schema basic r0", "$ r6 = r9 get text property $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema basic r0", "$ r2 = r8 prefix", "$ r3 = r7 append $ r2", "$ r4 = $ r3 append \\ `` rating\\ ``", "$ r5 = $ r4 to string", "r9 = org apache jempbox xmp x m p schema basic r0", "$ r6 = r9 get integer property $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema dublin core r0", "$ r2 = r8 prefix", "$ r3 = r7 append $ r2", "$ r4 = $ r3 append \\ `` description\\ ``", "$ r5 = $ r4 to string", "r9 = org apache jempbox xmp x m p schema dublin core r0", "$ r6 = r9 get language property $ r5 null", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema dublin core r0", "$ r3 = r8 prefix", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append \\ `` rights\\ ``", "$ r6 = $ r5 to string", "r9 = org apache jempbox xmp x m p schema dublin core r0", "r9 set language property $ r6 null r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema dublin core r0", "$ r2 = r8 prefix", "$ r3 = r7 append $ r2", "$ r4 = $ r3 append \\ `` title\\ ``", "$ r5 = $ r4 to string", "r9 = org apache jempbox xmp x m p schema dublin core r0", "$ r6 = r9 get language property languages $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r13 = org apache jempbox xmp x m p schema medium management r0", "$ r3 = r13 schema", "$ r4 = $ r3 get owner document", "r11 = new java lang string builder", "specialinvoke r11 < init >", "r14 = org apache jempbox xmp x m p schema medium management r0", "$ r6 = r14 prefix", "$ r7 = r11 append $ r6", "$ r8 = $ r7 append \\ `` derived from\\ ``", "$ r9 = $ r8 to string", "r1 = $ r4 create element $ r9", "r12 = new org apache jempbox xmp resource ref", "specialinvoke r12 < init > r1", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache jempbox xmp x m p schema medium management r0", "$ r3 = r9 schema", "r8 = new java lang string builder", "specialinvoke r8 < init >", "r10 = org apache jempbox xmp x m p schema medium management r0", "$ r4 = r10 prefix", "$ r5 = r8 append $ r4", "$ r6 = $ r5 append \\ `` derived from\\ ``", "$ r7 = $ r6 to string", "r11 = org apache jempbox xmp elementable r1", "org apache jempbox impl x m l util set elementable value $ r3 $ r7 r11", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema medium management r0", "$ r2 = r8 prefix", "$ r3 = r7 append $ r2", "$ r4 = $ r3 append \\ `` document i d\\ ``", "$ r5 = $ r4 to string", "r9 = org apache jempbox xmp x m p schema medium management r0", "$ r6 = r9 get text property $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema medium management r0", "$ r2 = r8 prefix", "$ r3 = r7 append $ r2", "$ r4 = $ r3 append \\ `` manager\\ ``", "$ r5 = $ r4 to string", "r9 = org apache jempbox xmp x m p schema medium management r0", "$ r6 = r9 get text property $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema photoshop r0", "$ r3 = r8 prefix", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append \\ `` supplemental categories\\ ``", "$ r6 = $ r5 to string", "r9 = org apache jempbox xmp x m p schema photoshop r0", "r9 add bag value $ r6 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema right management r0", "$ r3 = r8 prefix", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append \\ `` owner\\ ``", "$ r6 = $ r5 to string", "r9 = org apache jempbox xmp x m p schema right management r0", "r9 add bag value $ r6 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema right management r0", "$ r2 = r8 prefix", "$ r3 = r7 append $ r2", "$ r4 = $ r3 append \\ `` usage terms\\ ``", "$ r5 = $ r4 to string", "r9 = org apache jempbox xmp x m p schema right management r0", "$ r6 = r9 get language property languages $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org glassfish jersey client authentication http authentication feature $ mode basic_preemptive", "$ r3 = org glassfish jersey client authentication http authentication feature build $ r2 r0 r1", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r2 = new org glassfish jersey client authentication http authentication feature $ builder impl", "$ r1 = org glassfish jersey client authentication http authentication feature $ mode universal", "specialinvoke r2 < init > $ r1", "r3 = org glassfish jersey client authentication http authentication feature $ universal builder r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey client chunk input r0", "$ r1 = r2 parser", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = javax w r core medium type value of r1", "r3 = org glassfish jersey client chunk input r0", "r3 medium type = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org glassfish jersey client client config r0", "$ r1 = r3 state", "$ r2 = $ r1 get connector", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org glassfish jersey client client config r0", "$ r1 = r3 state", "$ r2 = $ r1 get client", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey client client response r0", "$ r1 = r2 request context", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey client internal jdkconnector localization message localizer", "$ r2 = org glassfish jersey client internal jdkconnector localization message localizable h t t p_ i n v a l i d_ c h u n k_ s i z e_ h e x_ v a l u e r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org glassfish jersey client internal jdkconnector localization message localizer", "$ r1 = org glassfish jersey client internal jdkconnector localization message localizable h t t p_ i n i t i a l_ l i n e_ o v e r f l o w", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey client internal localization message localizer", "$ r2 = org glassfish jersey client internal localization message localizable e r r o r_ p a r a m e t e r_ t y p e_ p r o c e s s i n g r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org glassfish jersey client internal localization message localizer", "$ r1 = org glassfish jersey client internal localization message localizable c l i e n t_ i n s t a n c e_ c l o s e d", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish jersey client internal localization message localizer", "$ r1 = org glassfish jersey client internal localization message localizable r e q u e s t_ e n t i t y_ w r i t e r_ n u l l", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish jersey client internal localization message localizer", "$ r1 = org glassfish jersey client internal localization message localizable p r e i n v o c a t i o n_ i n t e r c e p t o r_ m u l t i p l e_ a b o r t i o n s", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish jersey client internal localization message localizer", "$ r1 = org glassfish jersey client internal localization message localizable c l i e n t_ r x_ p r o v i d e r_ n u l l", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish jersey client internal localization message localizer", "$ r1 = org glassfish jersey client internal localization message localizable p o s t i n v o c a t i o n_ i n t e r c e p t o r_ m u l t i p l e_ r e s o l v e s", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey client internal localization message localizer", "$ r2 = org glassfish jersey client internal localization message localizable e r r o r_ h t t p_ m e t h o d_ e n t i t y_ n o t_ n u l l r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey internal error process r0 1", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org glassfish jersey internal error get instance", "specialinvoke $ r0 _mark", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey internal inject bind r0", "$ r1 = r2 contract", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey internal inject bind r0", "$ r1 = r2 aliases", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org glassfish jersey internal inject injectee impl r0", "r2 parent class scope = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org glassfish jersey internal inject injectee impl r0", "r2 injectee class = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org glassfish jersey internal localization message localizer", "$ r1 = org glassfish jersey internal localization message localizable s s l_ k m f_ i n i t_ f a i l e d", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish jersey internal localization message localizer", "$ r1 = org glassfish jersey internal localization message localizable t e m p l a t e_ p a r a m_ n u l l", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish jersey internal localization message localizer", "$ r1 = org glassfish jersey internal localization message localizable l i n k_ i s_ n u l l", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish jersey internal localization message localizer", "$ r1 = org glassfish jersey internal localization message localizable s s l_ k s_ c e r t_ l o a d_ e r r o r", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey internal localization message localizer", "$ r2 = org glassfish jersey internal localization message localizable s s l_ t s_ f i l e_ n o t_ f o u n d r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org glassfish jersey internal localization message localizer", "$ r1 = org glassfish jersey internal localization message localizable s s l_ t s_ p r o v i d e r s_ n o t_ r e g i s t e r e d", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org glassfish jersey internal localization message localizer", "$ r3 = org glassfish jersey internal localization message localizable e r r o r_ p r o v i d e r_ r e g i s t e r e d_ w r o n g_ r u n t i m e r0 r1", "$ r4 = $ r2 localize $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = org glassfish jersey internal localization message localizer", "$ r1 = org glassfish jersey internal localization message localizable i n v a l i d_ h o s t", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org glassfish jersey internal localization message localizer", "$ r3 = org glassfish jersey internal localization message localizable u r i_ b u i l d e r_ s c h e m e_ p a r t_ u n e x p e c t e d_ c o m p o n e n t r0 r1", "$ r4 = $ r2 localize $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "org glassfish jersey internal service finder $ service iterator provider access $ 000 r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r6 = new java lang string builder", "specialinvoke r6 < init >", "r7 = org glassfish jersey internal sonar sonar jersey common r0", "$ r2 = r7 common", "$ r3 = r6 append $ r2", "$ r4 = $ r3 append \\ `` server jvm\\ ``", "$ r5 = $ r4 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r4 = new java lang string buffer", "specialinvoke $ r4 < init >", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ r6 = org glassfish jersey internal util reflection helper get raw class r0", "$ r7 = org glassfish jersey internal util pretty clazz $ r6", "$ r8 = $ r5 append $ r7", "$ r9 = $ r8 append \\ `` < \\ ``", "$ r10 = $ r9 to string", "$ r4 append $ r10", "z0 = 1", "r2 = r0 get actual type argument", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label4", "r3 = r2 [ i1 ]", "if z0 == 0 goto label2", "z0 = 0", "$ r20 = org glassfish jersey internal util pretty type r3", "$ r4 append $ r20", "goto label3", "label i1 = i1 + 1", "goto label1", "if z0 == 0 goto label2", "label $ r14 = new java lang string builder", "specialinvoke $ r14 < init >", "$ r15 = $ r14 append \\", "$ r16 = org glassfish jersey internal util pretty type r3", "$ r17 = $ r15 append $ r16", "$ r18 = $ r17 to string", "$ r4 append $ r18", "label if i1 > = i0 goto label4", "label $ r4 append \\ `` > \\ ``", "$ r13 = $ r4 to string", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org glassfish jersey internal util reflection helper $ 9", "specialinvoke r2 < init > r0", "r3 = java security privilege action r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof java lang reflect parameterized type", "if $ z0 ! = 0 goto label1", "return null", "if $ z0 ! = 0 goto label1", "label $ r1 = java lang reflect parameterized type r0", "$ r2 = $ r1 get actual type argument", "return $ r2"], "adj": [[1], [2], [3], [], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey message abstract entity provider model r0", "$ r1 = r2 provide type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ r1 = org glassfish jersey message internal grammar util filter token r0 i0 i1 0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = org glassfish jersey message internal quality source medium type comparator", "$ r1 = org glassfish jersey message internal http header reader quality_source_media_type_creator", "$ r3 = org glassfish jersey message internal http header reader read qualified list $ r2 $ r1 r0", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org glassfish jersey message internal inbound message context r0", "$ r3 = r6 get header", "r7 = org glassfish jersey message internal inbound message context r0", "$ r4 = r7 configuration", "$ r5 = org glassfish jersey message internal header utils a string r2 $ r4", "$ r3 add r1 $ r5", "r8 = org glassfish jersey message internal inbound message context r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r6 = org glassfish jersey message internal inbound message context r0", "r1 = r6 get header string \\ `` if- none- match\\ ``", "if r1 == null goto label1", "$ z0 = r1 be empty", "if $ z0 == 0 goto label2", "label return null", "if $ z0 == 0 goto label2", "label $ r3 = org glassfish jersey message internal http header reader read match entity tag r1", "label return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r4 = new org glassfish jersey message internal inbound message context $ 7", "r5 = org glassfish jersey message internal inbound message context r0", "specialinvoke r4 < init > r5", "r6 = org glassfish jersey message internal inbound message context r0", "r7 = java util function function r4", "$ r2 = specialinvoke r6 single header \\ `` last- modified\\", "$ r3 = java util date $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r4 = org glassfish jersey message internal inbound message context r0", "$ r1 = r4 entity content", "$ r1 ensure not close", "r5 = org glassfish jersey message internal inbound message context r0", "$ r2 = r5 entity content", "$ r3 = $ r2 get wrap stream", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org glassfish jersey message internal interceptor executor r0", "r1 last traced interceptor = null", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 be wildcard type", "if $ z0 ! = 0 goto label1", "$ z1 = r0 be wildcard subtype", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org glassfish jersey message internal reader writer write to r0 r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish jersey message internal tracing logger empty", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r3 = org glassfish jersey model annotate method r0", "$ r1 = r3 be", "$ r2 = $ r1 get generic parameter type", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org glassfish jersey model contract provider $ builder", "specialinvoke $ r1 < init > r0 null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = @ parameter2", "r4 = org glassfish jersey model internal component bag r0", "z0 = specialinvoke r4 register model r1 i0 null r2", "if z0 == 0 goto label1", "r5 = org glassfish jersey model internal component bag r0", "$ r3 = r5 class", "$ r3 add r1", "label return z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey spi content encoder r0", "$ r1 = r2 support encoding", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org glassfish jersey ssl configurator r0", "r2 key store file = r1", "r3 = org glassfish jersey ssl configurator r0", "r3 key store byte = null", "r4 = org glassfish jersey ssl configurator r0", "r4 key store = null", "r5 = org glassfish jersey ssl configurator r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org glassfish jersey ssl configurator r0", "r2 trust manager factory provider = r1", "r3 = org glassfish jersey ssl configurator r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java net uri create r0", "$ r2 = org glassfish jersey uri uri template normalize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey uri path pattern r0", "$ r1 = r2 template", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey uri uri template r0", "$ r1 = r2 pattern", "$ i0 = $ r1 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jersey core header content disposition r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = com sun jersey core header content disposition r0", "$ r1 = r3 to string buffer", "$ r2 = $ r1 to string", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["c0 = @ parameter0", "if c0 > = 128 goto label1", "$ r0 = com sun jersey core header grammar util is_white_space", "$ z0 = $ r0 [ c0 ]", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r2 = @ parameter0", "r0 = @ parameter1", "r3 = r2 get component type", "$ z0 = r0 be jaxb type r3", "if $ z0 ! = 0 goto label1", "$ r1 = class \\ `` ljavax xml bind j a x b element \\ ``", "$ z1 = $ r1 be assignable from r3", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["$ r0 = com sun jersey impl impl message localizer", "$ r1 = com sun jersey impl impl message localizable s a x_ x d k_ n o_ s e c u r i t y_ f e a t u r e s", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com sun jersey impl impl message localizer", "$ r2 = com sun jersey impl impl message localizable a m b i g u o u s_ c t o r s r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com sun jersey impl impl message localizer", "$ r3 = com sun jersey impl impl message localizable e r r o r_ s u b r e s_ l o c_ u r i_ p a t h_ i n v a l i d r0 r1", "$ r4 = $ r2 localize $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com sun jersey impl impl message localizer", "$ r3 = com sun jersey impl impl message localizable a m b i g u o u s_ p a r a m e t e r r0 r1", "$ r4 = $ r2 localize $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com sun jersey impl impl message localizer", "$ r3 = com sun jersey impl impl message localizable a m b i g u o u s_ r r_ p a t h r0 r1", "$ r4 = $ r2 localize $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = com sun jersey impl impl message localizer", "$ r1 = com sun jersey impl impl message localizable n o_ w e b r e s o u r c e c l a s s_ i n_ w e b x m l", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com sun jersey impl impl message localizer", "$ r3 = com sun jersey impl impl message localizable d e f a u l t_ c o u l d_ n o t_ p r o c e s s_ c o n s t r u c t o r r0 r1", "$ r4 = $ r2 localize $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = javax w r core entity tag r0", "$ z0 = r1 weak", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 be empty", "if $ z0 ! = 0 goto label1", "$ z2 = r2 be empty", "if $ z2 ! = 0 goto label1", "$ r3 = org glassfish jersey message filter common scope provider logger", "$ r4 = java util log level fine", "$ r5 = org glassfish jersey message filter internal localization message merging_filtering_scopes", "$ r3 log $ r4 $ r5", "label r1 add all r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i2 = lengthof r0", "if $ i2 ! = 0 goto label2", "label $ r7 = org glassfish jersey message filter spi filter helper empty_annotations", "return $ r7", "if $ i2 ! = 0 goto label2", "label $ r8 = new java util array list", "$ i3 = lengthof r0", "specialinvoke $ r8 < init > $ i3", "i0 = lengthof r0", "i5 = 0", "label if i5 > = i0 goto label7", "r3 = r0 [ i5 ]", "r4 = r3 annotation type", "r5 = r4 get declare annotation", "i1 = lengthof r5", "i6 = 0", "label if i6 > = i1 goto label6", "r6 = r5 [ i6 ]", "$ z0 = r6 instanceof org glassfish jersey message filter entity filter", "if $ z0 == 0 goto label5", "$ r8 add r3", "label i6 = i6 + 1", "goto label4", "label if i6 > = i1 goto label6", "label i5 = i5 + 1", "goto label3", "label if i5 > = i0 goto label7", "label $ i4 = $ r8 size", "$ r9 = newarray java lang annotation annotation [ $ i4 ]", "$ r10 = $ r8 to array $ r9", "$ r11 = java lang annotation annotation [ ] $ r10", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = jakarta servlet http constraint element r0", "$ r1 = r2 transport guarantee", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = jakarta servlet servlet response wrapper r0", "$ r1 = r3 response", "$ r2 = $ r1 get writer", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label $ r4 = org eclipse jetty jndi context factory __lock", "r2 = $ r4 lock", "label $ r5 = org eclipse jetty jndi context factory __context map", "$ r6 = $ r5 get r1", "r9 = javax name context $ r6", "label if r2 == null goto label4", "r2 close", "label return r9"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = r1 get server", "r9 = org eclipse jetty server handler context handler collection r0", "$ r4 = r9 get server", "if $ r3 == $ r4 goto label1", "r10 = org eclipse jetty server handler context handler collection r0", "$ r7 = r10 get server", "r1 set server $ r7", "label r11 = org eclipse jetty server handler context handler collection r0", "$ r6 = r11 _serialized executor", "r8 = new org eclipse jetty server handler context handler collection $ 1", "r12 = org eclipse jetty server handler context handler collection r0", "specialinvoke r8 < init > r12 r1 r2", "r13 = java lang runnable r8", "$ r6 execute r13", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jetty server handler resource handler r0", "$ r1 = r2 _resource service", "$ z0 = $ r1 be dir allow", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jetty server http configuration r0", "r1 _request header size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = new java lang string builder", "specialinvoke r5 < init > 128", "r6 = org eclipse jetty server request r0", "$ r3 = r6 get scheme", "r7 = org eclipse jetty server request r0", "$ r4 = r7 get server name", "r8 = org eclipse jetty server request r0", "$ i0 = r8 get server port", "org eclipse jetty util u r i util append scheme host port r5 $ r3 $ r4 $ i0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jetty server request r0", "r2 _authentication = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r1 get session", "r26 = org eclipse jetty server secure request customizer r0", "$ z0 = r26 be sni required", "if $ z0 ! = 0 goto label1", "r27 = org eclipse jetty server secure request customizer r0", "$ z7 = r27 be sni host check", "if $ z7 == 0 goto label8", "label $ r5 = r3 get value \\ `` org eclipse jetty util ssl sni host\\ ``", "r4 = java lang string $ r5", "$ r6 = r3 get value \\ `` org eclipse jetty server x509_cert\\ ``", "r16 = org eclipse jetty util ssl x509 $ r6", "if r16 ! = null goto label4", "r17 = r3 get local certificate", "if r17 == null goto label2", "$ i0 = lengthof r17", "if $ i0 == 0 goto label2", "$ r12 = r17 [ 0 ]", "$ z6 = $ r12 instanceof java security cert x509 certificate", "if $ z6 ! = 0 goto label3", "label r21 = new org eclipse jetty http bad message exception", "specialinvoke r21 < init > 400 \\ `` invalid sni\\ ``", "r28 = java lang throwable r21", "throw r28", "if $ z6 ! = 0 goto label3", "label r22 = new org eclipse jetty util ssl x509", "$ r14 = r17 [ 0 ]", "$ r15 = java security cert x509 certificate $ r14", "specialinvoke r22 < init > null $ r15", "r16 = r22", "r3 put value \\ `` org eclipse jetty server x509_cert\\", "label r19 = r2 get server name", "$ r7 = org eclipse jetty server secure request customizer log", "$ z1 = $ r7 be debug enabled", "if $ z1 == 0 goto label5", "$ r11 = org eclipse jetty server secure request customizer log", "$ r10 = newarray java lang object [ 3 ]", "$ r10 [ 0 ] = r19", "$ r10 [ 1 ] = r4", "$ r10 [ 2 ] = r16", "$ r11 debug \\ `` host= { } sni= { } sni certificate= { } \\", "label r29 = org eclipse jetty server secure request customizer r0", "$ z2 = r29 be sni required", "if $ z2 == 0 goto label7", "if r4 == null goto label6", "$ z5 = r16 match r4", "if $ z5 ! = 0 goto label7", "label r23 = new org eclipse jetty http bad message exception", "specialinvoke r23 < init > 400 \\ `` invalid sni\\ ``", "r30 = java lang throwable r23", "throw r30", "if $ z5 ! = 0 goto label7", "label r31 = org eclipse jetty server secure request customizer r0", "$ z3 = r31 be sni host check", "if $ z3 == 0 goto label8", "$ z4 = r16 match r19", "if $ z4 ! = 0 goto label8", "r24 = new org eclipse jetty http bad message exception", "specialinvoke r24 < init > 400 \\ `` invalid sni\\ ``", "r32 = java lang throwable r24", "throw r32", "if $ z4 ! = 0 goto label8", "label r25 = new org eclipse jetty server secure request customizer $ ssl attribute", "r33 = org eclipse jetty server secure request customizer r0", "specialinvoke r25 < init > r33 r2 r3", "r34 = org eclipse jetty util attribute r25", "r2 set attribute r34", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [], [54], [55], [56], [57], [58], [59], [60], [61], [62], [], [64], [65], [66], [67], [68], [69], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r1 set secure 1", "r7 = org eclipse jetty server secure request customizer r0", "$ r2 = r7 _sts field", "if $ r2 == null goto label1", "$ r3 = r1 get response", "$ r4 = $ r3 get http field", "r8 = org eclipse jetty server secure request customizer r0", "$ r5 = r8 _sts field", "$ r4 add $ r5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label3", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label3", "r2 = r1 [ i1 ]", "$ r7 = r2 get server", "if $ r7 == r0 goto label2", "r13 = new java lang illegal argument exception", "$ r9 = r2 get server", "r14 = org eclipse jetty server server r0", "$ r10 = dynamicinvoke \\ `` make concat with constants\\ `` < java lang string org eclipse jetty server connector org eclipse jetty server server org eclipse jetty server server > r2 $ r9 r14 java lang invoke string concat factory make concat with constant \\ `` connector \\u0001 can not be share among server \\u0001 and server \\u0001\\ ``", "specialinvoke r13 < init > $ r10", "throw r13", "if $ r7 == r0 goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label r15 = org eclipse jetty server server r0", "r12 = r15 get connector", "r16 = org eclipse jetty server server r0", "r16 update bean r12 r1", "r17 = org eclipse jetty server server r0", "$ r3 = r17 _connectors", "$ r4 = java util array a list r12", "$ r3 remove all $ r4", "if r1 == null goto label4", "r18 = org eclipse jetty server server r0", "$ r5 = r18 _connectors", "$ r6 = java util array a list r1", "$ r5 add all $ r6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r12 = org eclipse jetty server session default session id manager r0", "$ r2 = r12 _random", "if $ r2 ! = null goto label4", "label r10 = new java security secure random", "specialinvoke r10 < init >", "r13 = org eclipse jetty server session default session id manager r0", "r13 _random = r10", "label goto label5", "label return", "if $ r2 ! = null goto label4", "label r16 = org eclipse jetty server session default session id manager r0", "$ r4 = r16 _random", "r17 = org eclipse jetty server session default session id manager r0", "$ r3 = r17 _random", "$ l0 = $ r3 next long", "$ l1 = java lang system current time millis", "$ l2 = $ l0 ^ $ l1", "$ i3 = r0 hash code", "$ l4 = long $ i3", "$ l5 = $ l2 ^ $ l4", "$ r5 = java lang runtime get runtime", "$ l6 = $ r5 free memory", "$ l7 = $ l5 ^ $ l6", "$ r4 set seed $ l7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label r6 = new java io file", "r7 = org eclipse jetty server session file session data store r0", "$ r4 = r7 _store dir", "specialinvoke r6 < init > $ r4 r1", "$ r5 = r6 to path", "$ z0 = java nio file file delete if exist $ r5", "return $ z0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jetty server abstract n c s a request log r0", "r1 _log latency = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jetty server abstract n c s a request log r0", "r1 _extended = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jetty server abstract n c s a request log r0", "$ r1 = r2 _log locale", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r1 [ i1 ]", "r6 = org eclipse jetty server handler gzip gzip handler r0", "$ r4 = r6 _paths", "$ r5 = org eclipse jetty util string util csv split r3", "$ r4 exclude $ r5", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r6 = org eclipse jetty server handler gzip gzip handler r0", "$ r2 = r6 _mime type", "r1 = $ r2 get exclude", "$ i0 = r1 size", "$ r3 = newarray java lang string [ $ i0 ]", "$ r4 = r1 to array $ r3", "$ r5 = java lang string [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r6 = org eclipse jetty server handler gzip gzip handler r0", "$ r2 = r6 _agent pattern", "r1 = $ r2 get include", "$ i0 = r1 size", "$ r3 = newarray java lang string [ $ i0 ]", "$ r4 = r1 to array $ r3", "$ r5 = java lang string [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse jetty server handler gzip gzip handler r0", "$ r2 = r5 _methods", "$ r3 = $ r2 get exclude", "$ r3 clear", "r6 = org eclipse jetty server handler gzip gzip handler r0", "$ r4 = r6 _methods", "$ r4 exclude r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > = 23 goto label1", "$ r2 = org eclipse jetty server handler gzip gzip handler log", "$ r1 = newarray java lang object [ 2 ]", "$ r3 = java lang integer value of i0", "$ r1 [ 0 ] = $ r3", "$ r4 = java lang integer value of 23", "$ r1 [ 1 ] = $ r4", "$ r2 warn \\ `` min gzip size of { } be inefficient for short content break even be size { } \\", "label $ i1 = java lang math max 0 i0", "r5 = org eclipse jetty server handler gzip gzip handler r0", "r5 _min gzip size = $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org eclipse jetty server handler gzip gzip handler r0", "$ z0 = r4 be start", "if $ z0 == 0 goto label1", "r3 = new java lang illegal state exception", "r5 = org eclipse jetty server handler gzip gzip handler r0", "$ r2 = r5 get state", "specialinvoke r3 < init > $ r2", "throw r3", "if $ z0 == 0 goto label1", "label r6 = org eclipse jetty server handler gzip gzip handler r0", "r6 _pool capacity = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "i1 = @ parameter3", "i2 = r1 get r2 i0 i1", "r3 = org eclipse jetty server http input r0", "$ l4 = r3 _content consume", "$ l3 = long i2", "$ l5 = $ l4 + $ l3", "r4 = org eclipse jetty server http input r0", "r4 _content consume = $ l5", "return i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jetty server handler context handler get current context", "if r2 ! = null goto label2", "$ z0 = r1 instanceof org eclipse jetty server handler context handler $ context", "if $ z0 == 0 goto label1", "$ r11 = org eclipse jetty server handler context handler $ context r1", "$ r12 = $ r11 get context handler", "return $ r12", "if $ z0 == 0 goto label1", "label $ r5 = new java lang illegal argument exception", "$ r6 = r1 get class", "$ r7 = $ r6 get name", "$ r8 = class \\ `` lorg eclipse jetty server handler context handler $ context \\ ``", "$ r9 = $ r8 get name", "$ r10 = dynamicinvoke \\ `` make concat with constants\\ `` < java lang string javax servlet servlet context java lang string java lang string > r1 $ r7 $ r9 java lang invoke string concat factory make concat with constant \\ `` the servlet context \\u0001 \\u0001 be not \\u0001\\ ``", "specialinvoke $ r5 < init > $ r10", "throw $ r5", "if r2 ! = null goto label2", "label $ r3 = org eclipse jetty server handler context handler get current context", "$ r4 = $ r3 get context handler", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = org eclipse jetty util string util be blank r2", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label $ i0 = r1 length", "if $ i0 < = 0 goto label2", "r1 append \\ `` \\ ``", "label r1 append r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = javax servlet unavailable exception r0", "$ z0 = r1 permanent", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jetty util atomic bi integer r0", "$ l0 = r1 get", "$ i1 = org eclipse jetty util atomic bi integer get hi $ l0", "return $ i1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "$ l4 = long i0", "l2 = $ l4 & 4294967295l", "$ l5 = long i1", "l3 = $ l5 & 4294967295l", "$ l6 = l2 < < 32", "$ l7 = $ l6 + l3", "return $ l7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["l0 = @ parameter0", "i1 = @ parameter1", "$ l4 = long i1", "l2 = $ l4 & 4294967295l", "l3 = l0 & 4294967295l", "$ l5 = l2 < < 32", "$ l6 = $ l5 + l3", "return $ l6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["i0 = @ parameter0", "r0 = java nio byte buffer allocate i0", "r0 limit 0", "return r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i1 = r0 position", "r0 limit $ i1", "r0 position i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 have array", "if $ z0 == 0 goto label1", "r4 = r0 array", "$ i2 = r0 array offset", "$ i3 = r0 position", "i0 = $ i2 + $ i3", "$ i4 = r0 remain", "$ i5 = i0 + $ i4", "$ r3 = java util array copy of range r4 i0 $ i5", "return $ r3", "if $ z0 == 0 goto label1", "label $ i1 = r0 remain", "r5 = newarray byte [ $ i1 ]", "$ r1 = r0 slice", "$ r1 get r5", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return 0", "if r0 ! = null goto label1", "label $ i0 = r0 capacity", "$ i1 = r0 limit", "$ i2 = $ i0 - $ i1", "return $ i2"], "adj": [[1], [2], [], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 position", "if $ i0 ! = 0 goto label1", "return 0", "if $ i0 ! = 0 goto label1", "label $ i1 = r0 limit", "$ i2 = r0 capacity", "if $ i1 ! = $ i2 goto label2", "$ z1 = 1", "goto label3", "label $ r1 = r0 compact", "$ r1 flip", "if $ z1 == 0 goto label4", "$ i3 = r0 limit", "$ i4 = r0 capacity", "if $ i3 > = $ i4 goto label4", "$ z2 = 1", "goto label5", "label return $ z2", "if $ i3 > = $ i4 goto label4", "label $ z2 = 0", "if $ i1 ! = $ i2 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "l5 = 0l", "z0 = 0", "z1 = 0", "i6 = r0 position", "label $ i1 = r0 limit", "if i6 > = $ i1 goto label5", "b0 = r0 get i6", "if b0 > 32 goto label2", "if z0 == 0 goto label4", "goto label5", "label if z0 == 0 goto label8", "if z1 == 0 goto label6", "$ l7 = neg l5", "goto label7", "label return $ l7", "if z1 == 0 goto label6", "label $ l7 = l5", "label if z0 == 0 goto label8", "label $ r1 = new java lang number format exception", "$ r2 = org eclipse jetty util buffer util to string r0", "specialinvoke $ r1 < init > $ r2", "throw $ r1", "if z0 == 0 goto label4", "label i6 = i6 + 1", "goto label1", "if b0 > 32 goto label2", "label if b0 < 48 goto label3", "if b0 > 57 goto label3", "$ l4 = l5 * 10l", "$ i2 = b0 - 48", "$ l3 = long $ i2", "l5 = $ l4 + $ l3", "z0 = 1", "goto label4", "if b0 > 57 goto label3", "label if b0 ! = 45 goto label5", "if z0 ! = 0 goto label5", "z1 = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], []]}
{"nodes": ["r0 = @ this", "r14 = org eclipse jetty util future promise r0", "$ r1 = r14 _latch", "$ r1 await", "r15 = org eclipse jetty util future promise r0", "$ r3 = r15 _cause", "$ r2 = org eclipse jetty util future promise complete", "if $ r3 ! = $ r2 goto label1", "r16 = org eclipse jetty util future promise r0", "$ r12 = r16 _result", "return $ r12", "if $ r3 ! = $ r2 goto label1", "label r17 = org eclipse jetty util future promise r0", "$ r4 = r17 _cause", "$ z0 = $ r4 instanceof java lang exception", "if $ z0 == 0 goto label2", "r18 = org eclipse jetty util future promise r0", "$ r10 = r18 _cause", "$ r11 = java lang exception $ r10", "throw $ r11", "if $ z0 == 0 goto label2", "label r19 = org eclipse jetty util future promise r0", "$ r5 = r19 _cause", "$ z1 = $ r5 instanceof java lang error", "if $ z1 == 0 goto label3", "r20 = org eclipse jetty util future promise r0", "$ r8 = r20 _cause", "$ r9 = java lang error $ r8", "throw $ r9", "if $ z1 == 0 goto label3", "label r13 = new java util concurrent execution exception", "r21 = org eclipse jetty util future promise r0", "$ r7 = r21 _cause", "specialinvoke r13 < init > $ r7", "throw r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], []]}
{"nodes": ["r2 = @ parameter0", "r0 = @ parameter1", "i1 = 0", "label if r0 == null goto label2", "$ i0 = lengthof r0", "if i1 > = $ i0 goto label2", "$ r1 = r0 [ i1 ]", "r2 = org eclipse jetty util lazy list add r2 $ r1", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "if r0 ! = null goto label1", "$ r4 = new java util array list", "specialinvoke $ r4 < init > i0", "return $ r4", "if r0 ! = null goto label1", "label $ z0 = r0 instanceof java util array list", "if $ z0 == 0 goto label3", "r5 = java util array list r0", "$ i1 = r5 size", "if $ i1 < = i0 goto label2", "return r5", "if $ i1 < = i0 goto label2", "label $ r3 = new java util array list", "specialinvoke $ r3 < init > i0", "$ r3 add all r5", "return $ r3", "if $ z0 == 0 goto label3", "label $ r2 = new java util array list", "specialinvoke $ r2 < init > i0", "$ r2 add r0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org eclipse jetty util lazy list get list r0 0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r3 = new org eclipse jetty util resource path resource", "$ r2 = r0 to path", "specialinvoke r3 < init > $ r2", "r4 = org eclipse jetty util resource resource r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org eclipse jetty util scanner r0", "$ z0 = r3 be run", "if $ z0 == 0 goto label1", "r2 = new java lang illegal state exception", "specialinvoke r2 < init > \\ `` scanner started\\ ``", "throw r2", "if $ z0 == 0 goto label1", "label r4 = org eclipse jetty util scanner r0", "r4 _scan interval = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jetty util scanner r0", "$ z0 = r4 be run", "if $ z0 ! = 0 goto label1", "r3 = new java lang illegal state exception", "specialinvoke r3 < init > \\ `` scanner not running\\ ``", "throw r3", "if $ z0 ! = 0 goto label1", "label $ r1 = org eclipse jetty util callback noop", "r5 = org eclipse jetty util scanner r0", "r5 scan $ r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r7 = org eclipse jetty util search pattern r0", "r7 validate args r1 i0 i1", "i15 = i0", "label $ i3 = i0 + i1", "r8 = org eclipse jetty util search pattern r0", "$ r2 = r8 pattern", "$ i2 = lengthof $ r2", "$ i4 = $ i3 - $ i2", "if i15 > $ i4 goto label5", "r9 = org eclipse jetty util search pattern r0", "$ r3 = r9 pattern", "$ i5 = lengthof $ r3", "i16 = $ i5 - 1", "label $ i6 = i15 + i16", "$ b8 = r1 [ $ i6 ]", "r10 = org eclipse jetty util search pattern r0", "$ r4 = r10 pattern", "$ b7 = $ r4 [ i16 ]", "if $ b8 ! = $ b7 goto label4", "if i16 ! = 0 goto label3", "return i15", "if i16 ! = 0 goto label3", "label i16 = i16 + -1", "goto label2", "if $ b8 ! = $ b7 goto label4", "label r11 = org eclipse jetty util search pattern r0", "$ r6 = r11 table", "r12 = org eclipse jetty util search pattern r0", "$ r5 = r12 pattern", "$ i9 = lengthof $ r5", "$ i10 = i15 + $ i9", "$ i11 = $ i10 - 1", "$ b12 = r1 [ $ i11 ]", "$ s13 = 255 & $ b12", "$ i14 = $ r6 [ $ s13 ]", "i15 = i15 + $ i14", "goto label1", "if i15 > $ i4 goto label5", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse jetty util ssl ssl context factory r0", "$ r2 = r5 _exclude protocol", "$ r2 clear", "r6 = org eclipse jetty util ssl ssl context factory r0", "$ r3 = r6 _exclude protocol", "$ r4 = java util array a list r1", "$ r3 add all $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jetty util ssl ssl context factory r0", "r1 _session cache enable = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = java lang system get property r1", "if r2 ! = null goto label1", "$ r3 = null", "goto label2", "label return $ r3", "if r2 ! = null goto label1", "label r4 = org eclipse jetty util ssl ssl context factory r0", "$ r3 = r4 new password r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new org eclipse jetty util security password", "specialinvoke $ r2 < init > r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r2 = java util collection empty list", "return $ r2", "if r0 ! = null goto label1", "label $ r1 = java util array a list r0", "return $ r1"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org eclipse jetty util resource jar file resource", "if $ z0 ! = 0 goto label1", "return r0", "if $ z0 ! = 0 goto label1", "label r1 = org eclipse jetty util resource jar file resource r0", "r5 = new org eclipse jetty util resource jar file resource", "$ r4 = r1 get u r l", "specialinvoke r5 < init > $ r4 0", "r6 = org eclipse jetty util resource resource r5", "return r6"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org eclipse jetty util thread queue thread pool r0", "$ z0 = r4 be run", "if $ z0 == 0 goto label1", "r3 = new java lang illegal state exception", "r5 = org eclipse jetty util thread queue thread pool r0", "$ r2 = r5 get state", "specialinvoke r3 < init > $ r2", "throw r3", "if $ z0 == 0 goto label1", "label r6 = org eclipse jetty util thread queue thread pool r0", "r6 _reserved thread = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse jetty webapp abstract configuration r0", "$ r2 = r3 _system", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r4 = org eclipse jetty webapp web app class loader __load server class", "$ r5 = $ r4 get", "r1 = java lang boolean $ r5", "label $ r6 = org eclipse jetty webapp web app class loader __load server class", "$ r7 = java lang boolean value of 1", "$ r6 set $ r7", "r2 = r0 run", "label if r1 ! = null goto label3", "$ r9 = org eclipse jetty webapp web app class loader __load server class", "$ r9 remove", "goto label4", "label return r2", "label if r1 ! = null goto label3", "label $ r8 = org eclipse jetty webapp web app class loader __load server class", "$ r8 set r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r14 = org eclipse jetty xml xml parser r0", "$ r6 = r14 _lock", "r3 = $ r6 lock", "label r15 = org eclipse jetty xml xml parser r0", "$ r7 = r15 _observer map", "if $ r7 ! = null goto label2", "r13 = new java util hash map", "specialinvoke r13 < init >", "r16 = org eclipse jetty xml xml parser r0", "r16 _observer map = r13", "label r17 = org eclipse jetty xml xml parser r0", "$ r8 = r17 _observer map", "$ r8 put r1 r2", "label if r3 == null goto label9", "r3 close", "goto label9", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], []]}
{"nodes": ["r0 = @ parameter0", "c0 = @ parameter1", "$ z0 = io jsonwebtoken lang string have length r0", "if $ z0 ! = 0 goto label1", "return r0", "if $ z0 ! = 0 goto label1", "label $ r2 = new java lang string builder", "specialinvoke $ r2 < init > r0", "label $ i1 = $ r2 length", "if $ i1 < = 0 goto label3", "$ c2 = $ r2 char at 0", "if $ c2 ! = c0 goto label3", "$ r2 delete char at 0", "goto label2", "if $ c2 ! = c0 goto label3", "label $ r3 = $ r2 to string", "return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "c0 = @ parameter1", "$ z0 = io jsonwebtoken lang string have length r0", "if $ z0 ! = 0 goto label1", "return r0", "if $ z0 ! = 0 goto label1", "label $ r2 = new java lang string builder", "specialinvoke $ r2 < init > r0", "label $ i1 = $ r2 length", "if $ i1 < = 0 goto label3", "$ i2 = $ r2 length", "$ i3 = $ i2 - 1", "$ c4 = $ r2 char at $ i3", "if $ c4 ! = c0 goto label3", "$ i5 = $ r2 length", "$ i6 = $ i5 - 1", "$ r2 delete char at $ i6", "goto label2", "if $ c4 ! = c0 goto label3", "label $ r3 = $ r2 to string", "return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = io jsonwebtoken lang string replace r0 r1 \\ `` \\ ``", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = r0 last index of \\ `` \\ ``", "if i0 == -1 goto label2", "r9 = r0 substring 0 i0", "$ z0 = r1 start with \\ `` \\ ``", "if $ z0 ! = 0 goto label1", "$ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "$ r7 = $ r6 append r9", "$ r8 = $ r7 append \\ `` \\ ``", "r9 = $ r8 to string", "label $ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append r9", "$ r4 = $ r3 append r1", "$ r5 = $ r4 to string", "return $ r5", "if i0 == -1 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ z0 = io jsonwebtoken lang collection be empty r0", "if $ z0 == 0 goto label1", "return \\ `` \\ ``", "if $ z0 == 0 goto label1", "label $ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "r5 = r0 iterator", "label $ z2 = r5 have next", "if $ z2 == 0 goto label3", "$ r8 = $ r6 append r2", "$ r9 = r5 next", "$ r10 = $ r8 append $ r9", "$ r10 append r3", "$ z1 = r5 have next", "if $ z1 == 0 goto label2", "$ r6 append r1", "goto label2", "if $ z2 == 0 goto label3", "label $ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = io jsonwebtoken lang string collection to delimit string r0 \\", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = io jsonwebtoken signature algorithm r0", "$ r1 = r2 family name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = com sun jna callback reference r0", "$ r1 = r5 trampoline", "if $ r1 ! = null goto label1", "r6 = com sun jna callback reference r0", "$ r3 = r6 cbstruct", "$ r4 = $ r3 get pointer 0l", "r7 = com sun jna callback reference r0", "r7 trampoline = $ r4", "label r8 = com sun jna callback reference r0", "$ r2 = r8 trampoline", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com sun jna callback thread initializer r0", "$ r2 = r3 name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "$ r2 = new com sun jna function", "specialinvoke $ r2 < init > r0 i0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = com sun jna memory r0", "$ l0 = r1 size", "r2 = com sun jna memory r0", "r2 clear $ l0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "d0 = @ parameter1", "r1 = com sun jna memory r0", "r1 bound check l0 8l", "specialinvoke r0 set double l0 d0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jna memory r0", "$ l0 = r2 size", "$ i1 = int $ l0", "r3 = com sun jna memory r0", "$ r1 = r3 dump 0l $ i1", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = com sun jna pointer r0", "r1 set memory 0l l0 0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = com sun jna pointer r0", "$ l1 = r1 peer", "r2 = com sun jna pointer r0", "$ c2 = com sun jna native get char r2 $ l1 l0", "return $ c2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r3 = com sun jna pointer r0", "$ r2 = com sun jna native get string r3 l0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "i1 = @ parameter1", "r1 = newarray double [ i1 ]", "r2 = com sun jna pointer r0", "r2 read l0 r1 0 i1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ r1 = com sun jna native get default string encode", "r3 = com sun jna pointer r0", "$ r2 = r3 get string array l0 -1 $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i2 = 0", "label $ i0 = r2 size", "if i2 > = $ i0 goto label5", "$ r5 = r2 get i2", "r3 = java lang string $ r5", "i3 = 0", "label $ i1 = r1 size", "if i3 > = $ i1 goto label4", "$ r6 = r1 get i3", "r4 = java lang reflect field $ r6", "$ r7 = r4 get name", "$ z0 = r3 equal $ r7", "if $ z0 == 0 goto label3", "java util collection swap r1 i2 i3", "goto label4", "label i2 = i2 + 1", "goto label1", "if $ z0 == 0 goto label3", "label i3 = i3 + 1", "goto label2", "if i2 > = $ i0 goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [], [21], [22], [], [24], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com sun jna structure r0", "$ i0 = r1 calculate size z0 0", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r17 = com sun jna union r0", "r17 ensure allocate", "r18 = com sun jna union r0", "$ r4 = r18 field", "$ r5 = $ r4 value", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r13 = r2 next", "r3 = com sun jna structure $ struct field $ r13", "$ r14 = r3 type", "if $ r14 ! = r1 goto label2", "r19 = com sun jna union r0", "r19 active field = r3", "return", "if $ r14 ! = r1 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label r16 = new java lang illegal argument exception", "r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r8 = r15 append \\ `` no field of type \\ ``", "$ r9 = $ r8 append r1", "$ r10 = $ r9 append \\ `` in \\ ``", "$ r11 = $ r10 append r0", "$ r12 = $ r11 to string", "specialinvoke r16 < init > $ r12", "throw r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com sun jna native get default string encode", "$ r3 = com sun jna platform linux x attr util l get x attr r0 r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = com sun jna platform mac i o kit util get master port", "$ r2 = com sun jna platform mac i o kit util io", "r1 = $ r2 i o service get matching service i0 r0", "$ r4 = com sun jna platform mac i o kit util sys", "$ r3 = com sun jna platform mac i o kit util sys", "$ i1 = $ r3 mach_task_self", "$ r4 mach_port_deallocate $ i1 i0", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "i0 = com sun jna platform mac i o kit util get master port", "$ r2 = new com sun jna ptr pointer by reference", "specialinvoke $ r2 < init >", "$ r3 = com sun jna platform mac i o kit util io", "i1 = $ r3 i o service get matching service i0 r0 $ r2", "$ r5 = com sun jna platform mac i o kit util sys", "$ r4 = com sun jna platform mac i o kit util sys", "$ i2 = $ r4 mach_task_self", "$ r5 mach_port_deallocate $ i2 i0", "if i1 ! = 0 goto label1", "$ r6 = $ r2 get value", "if $ r6 == null goto label1", "$ r7 = new com sun jna platform mac i o kit $ i o iterator", "$ r8 = $ r2 get value", "specialinvoke $ r7 < init > $ r8", "return $ r7", "if $ r6 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jna platform win32 com c o m bind base object r0", "$ r1 = r2 i unknown", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i2 = 0", "label $ r2 = com sun jna platform win32 com tlb imp tlb base iunknown_methods", "$ i0 = lengthof $ r2", "if i2 > = $ i0 goto label3", "$ r6 = com sun jna platform win32 com tlb imp tlb base iunknown_methods", "$ r7 = $ r6 [ i2 ]", "$ z1 = $ r7 equal ignore case r1", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label i2 = i2 + 1", "goto label1", "if i2 > = $ i0 goto label3", "label i3 = 0", "label $ r3 = com sun jna platform win32 com tlb imp tlb base idispatch_methods", "$ i1 = lengthof $ r3", "if i3 > = $ i1 goto label6", "$ r4 = com sun jna platform win32 com tlb imp tlb base idispatch_methods", "$ r5 = $ r4 [ i3 ]", "$ z0 = $ r5 equal ignore case r1", "if $ z0 == 0 goto label5", "label i3 = i3 + 1", "goto label4", "if i3 > = $ i1 goto label6", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r8 = new com sun jna ptr pointer by reference", "specialinvoke r8 < init >", "r11 = com sun jna platform win32 com type info util r0", "$ r5 = r11 type info", "r9 = new com sun jna platform win32 win def $ uint", "$ l1 = long i0", "specialinvoke r9 < init > $ l1", "r2 = $ r5 get var desc r9 r8", "com sun jna platform win32 com c o m utils check r c r2", "r10 = new com sun jna platform win32 oa idl $ vardesc", "$ r7 = r8 get value", "specialinvoke r10 < init > $ r7", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = com sun jna platform win32 com type lib util r0", "$ i0 = r1 help context", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = com sun jna platform win32 com util object factory r0", "$ r1 = r4 lcid", "if $ r1 == null goto label1", "r5 = com sun jna platform win32 com util object factory r0", "$ r3 = r5 lcid", "return $ r3", "if $ r1 == null goto label1", "label $ r2 = com sun jna platform win32 com util object factory locale_user_default", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r39 = new com sun jna ptr pointer by reference", "specialinvoke r39 < init >", "r40 = new com sun jna ptr int by reference", "specialinvoke r40 < init >", "r41 = new com sun jna ptr int by reference", "specialinvoke r41 < init >", "label $ r13 = com sun jna platform win32 netapi32 instance", "i0 = $ r13 net user get group r1 r0 0 r39 -1 r40 r41", "if i0 == 0 goto label02", "r42 = new com sun jna platform win32 win32 exception", "specialinvoke r42 < init > i0", "r48 = java lang throwable r42", "throw r48", "if i0 == 0 goto label02", "label r43 = new java util array list", "specialinvoke r43 < init >", "$ i3 = r40 get value", "if $ i3 < = 0 goto label05", "r44 = new com sun jna platform win32 l m access $ group_users_info_0", "$ r23 = r39 get value", "specialinvoke r44 < init > $ r23", "$ i4 = r40 get value", "$ r24 = r44 to array $ i4", "$ r25 = com sun jna platform win32 l m access $ group_users_info_0 [ ] $ r24", "r37 = com sun jna platform win32 l m access $ group_users_info_0 [ ] $ r25", "i1 = lengthof r37", "i5 = 0", "label if i5 > = i1 goto label05", "r7 = r37 [ i5 ]", "r45 = new com sun jna platform win32 netapi32 util $ group", "specialinvoke r45 < init >", "$ r27 = r7 grui0_name", "if $ r27 == null goto label04", "$ r28 = r7 grui0_name", "r45 name = $ r28", "label r43 add r45", "i5 = i5 + 1", "goto label03", "label if i5 > = i1 goto label05", "label $ r15 = newarray com sun jna platform win32 netapi32 util $ group [ 0 ]", "$ r16 = r43 to array $ r15", "r38 = com sun jna platform win32 netapi32 util $ group [ ] $ r16", "label $ r17 = r39 get value", "$ r18 = com sun jna pointer null", "if $ r17 == $ r18 goto label07", "$ r19 = com sun jna platform win32 netapi32 instance", "$ r20 = r39 get value", "i6 = $ r19 net api buffer free $ r20", "if 0 == i6 goto label07", "r46 = new com sun jna platform win32 win32 exception", "specialinvoke r46 < init > i6", "r49 = java lang throwable r46", "throw r49", "if 0 == i6 goto label07", "label return r38"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [], [56], []]}
{"nodes": ["r0 = @ parameter0", "r10 = new com sun jna ptr int by reference", "specialinvoke r10 < init >", "$ r4 = com sun jna platform win32 nt dll instance", "r14 = com sun jna platform win32 win n t $ handle r0", "i3 = $ r4 zw query key r14 0 null 0 r10", "if i3 ! = -1073741789 goto label1", "$ i0 = r10 get value", "if $ i0 > 0 goto label2", "label r11 = new com sun jna platform win32 win32 exception", "specialinvoke r11 < init > i3", "r15 = java lang throwable r11", "throw r15", "if $ i0 > 0 goto label2", "label r12 = new com sun jna platform win32 wdm $ key_basic_information", "$ i1 = r10 get value", "specialinvoke r12 < init > $ i1", "$ r7 = com sun jna platform win32 nt dll instance", "$ i2 = r10 get value", "r16 = com sun jna platform win32 win n t $ handle r0", "r17 = com sun jna structure r12", "i4 = $ r7 zw query key r16 0 r17 $ i2 r10", "if i4 == 0 goto label3", "r13 = new com sun jna platform win32 win32 exception", "specialinvoke r13 < init > i4", "r18 = java lang throwable r13", "throw r18", "if i4 == 0 goto label3", "label $ r8 = r12 get name", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = com sun jna platform win32 open g l32 instance", "r1 = $ r2 wgl get proc address \\ `` wgl enum gpus n v\\ ``", "if r1 ! = null goto label1", "$ r3 = null", "goto label2", "label return $ r3", "if r1 ! = null goto label1", "label $ r3 = com sun jna function get function r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r20 = new com sun jna platform win32 winsvc $ service_failure_actions $ by reference", "specialinvoke r20 < init >", "r20 dw reset period = i0", "r20 lp reboot msg = r2", "r20 lp command = r3", "$ i1 = r1 size", "r20 c action = $ i1", "r21 = new com sun jna platform win32 winsvc $ sc_action $ by reference", "specialinvoke r21 < init >", "r20 lpsa action = r21", "$ r10 = r20 lpsa action", "$ i2 = r1 size", "$ r11 = $ r10 to array $ i2", "$ r12 = com sun jna platform win32 winsvc $ sc_action [ ] $ r11", "r5 = com sun jna platform win32 winsvc $ sc_action [ ] $ r12", "z2 = 0", "i5 = 0", "r6 = r1 iterator", "label $ z0 = r6 have next", "if $ z0 == 0 goto label3", "$ r17 = r6 next", "r7 = com sun jna platform win32 winsvc $ sc_action $ r17", "if z2 ! = 0 goto label2", "$ i4 = r7 type", "if $ i4 ! = 2 goto label2", "r23 = com sun jna platform win32 w32 service r0", "specialinvoke r23 add shutdown privilege to process", "z2 = 1", "label $ r18 = r5 [ i5 ]", "$ i6 = r7 type", "$ r18 type = $ i6", "$ r19 = r5 [ i5 ]", "$ i7 = r7 delay", "$ r19 delay = $ i7", "i5 = i5 + 1", "goto label1", "if $ z0 == 0 goto label3", "label $ r14 = com sun jna platform win32 advapi32 instance", "r24 = com sun jna platform win32 w32 service r0", "$ r13 = r24 _handle", "r25 = com sun jna platform win32 winsvc $ change service config2 info r20", "$ z1 = $ r14 change service config2 $ r13 2 r25", "if $ z1 ! = 0 goto label4", "r22 = new com sun jna platform win32 win32 exception", "$ r16 = com sun jna platform win32 kernel32 instance", "$ i3 = $ r16 get last error", "specialinvoke r22 < init > $ i3", "r26 = java lang throwable r22", "throw r26", "if $ z1 ! = 0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [], [55], []]}
{"nodes": ["r0 = @ parameter0", "r11 = new com sun jna ptr int by reference", "specialinvoke r11 < init >", "$ r4 = com sun jna platform win32 wevtapi instance", "z0 = $ r4 evt next publisher id r0 0 null r11", "$ r5 = com sun jna platform win32 kernel32 instance", "i0 = $ r5 get last error", "if z0 ! = 0 goto label1", "if i0 == 122 goto label1", "r12 = new com sun jna platform win32 win32 exception", "specialinvoke r12 < init > i0", "r14 = java lang throwable r12", "throw r14", "if i0 == 122 goto label1", "label $ i1 = r11 get value", "r2 = newarray char [ $ i1 ]", "$ r6 = com sun jna platform win32 wevtapi instance", "$ i2 = lengthof r2", "z1 = $ r6 evt next publisher id r0 $ i2 r2 r11", "if z1 ! = 0 goto label2", "r13 = new com sun jna platform win32 win32 exception", "$ r9 = com sun jna platform win32 kernel32 instance", "$ i3 = $ r9 get last error", "specialinvoke r13 < init > $ i3", "r15 = java lang throwable r13", "throw r15", "if z1 ! = 0 goto label2", "label $ r7 = com sun jna native to string r2", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com sun jna platform window utils get instance", "$ r2 set window mask r0 r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org joda time base abstract duration r0", "l0 = r1 get millis", "$ l1 = l0 > > > 32", "$ l2 = l0 ^ $ l1", "$ i3 = int $ l2", "return $ i3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = new org joda time date time", "r5 = org joda time base abstract instant r0", "$ l0 = r5 get millis", "r6 = org joda time base abstract instant r0", "$ r2 = r6 get zone", "$ r3 = org joda time chrono i s o chronology get instance $ r2", "r7 = org joda time chronology $ r3", "specialinvoke r4 < init > $ l0 r7", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r3 = new org joda time mutable date time", "r4 = org joda time base abstract instant r0", "$ l0 = r4 get millis", "r5 = org joda time base abstract instant r0", "$ r2 = r5 get zone", "specialinvoke r3 < init > $ l0 $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "l1 = @ parameter1", "$ b2 = l1 cmp l0", "if $ b2 > = 0 goto label1", "$ r1 = new java lang illegal argument exception", "specialinvoke $ r1 < init > \\ `` the end instant must be great or equal to the start\\ ``", "throw $ r1", "if $ b2 > = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org joda time base abstract interval r0", "$ l1 = r1 get end millis", "$ b2 = $ l1 cmp l0", "if $ b2 > 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b2 > 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org joda time base abstract interval r0", "$ l1 = r1 get start millis", "$ b2 = $ l1 cmp l0", "if $ b2 < = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b2 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org joda time base abstract interval r0", "$ l0 = r1 get end millis", "r2 = org joda time base abstract interval r0", "$ l1 = r2 get start millis", "$ l2 = neg $ l1", "$ l3 = org joda time field field utils safe add $ l0 $ l2", "return $ l3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = org joda time base abstract interval r0", "l0 = r4 to duration millis", "$ b1 = l0 cmp 0l", "if $ b1 ! = 0 goto label1", "$ r2 = org joda time duration zero", "return $ r2", "if $ b1 ! = 0 goto label1", "label r3 = new org joda time duration", "specialinvoke r3 < init > l0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org joda time base abstract partial r0", "$ r1 = r3 get chronology", "r4 = org joda time base abstract partial r0", "$ r2 = r4 get field i0 $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org joda time base abstract partial r0", "i0 = r10 index of r1", "if i0 ! = -1 goto label1", "r9 = new java lang illegal argument exception", "r8 = new java lang string builder", "specialinvoke r8 < init >", "$ r4 = r8 append \\ `` field \\'\\ ``", "$ r5 = $ r4 append r1", "$ r6 = $ r5 append \\ `` \\ ' be not supported\\ ``", "$ r7 = $ r6 to string", "specialinvoke r9 < init > $ r7", "throw r9", "if i0 ! = -1 goto label1", "label return i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org joda time base abstract period r0", "$ i0 = r2 size", "r1 = newarray int [ $ i0 ]", "i3 = 0", "label $ i1 = lengthof r1", "if i3 > = $ i1 goto label2", "r3 = org joda time base abstract period r0", "$ i2 = r3 get value i3", "r1 [ i3 ] = $ i2", "i3 = i3 + 1", "goto label1", "if i3 > = $ i1 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new org joda time period", "specialinvoke $ r2 < init > r0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org joda time base base interval r0", "$ l0 = r1 i end millis", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = org joda time date time utils get instant millis r1", "r2 = org joda time date time utils get instant chronology r1", "l1 = r2 add r0 l0 1", "$ r3 = new org joda time duration", "specialinvoke $ r3 < init > l0 l1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r3 = org joda time base base period r0", "$ r2 = r3 i value", "r4 = org joda time base base period r0", "r4 add field into $ r2 r1 i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org joda time base base single field period r0", "$ r2 = r3 get field type", "if r1 ! = $ r2 goto label1", "r4 = org joda time base base single field period r0", "$ i0 = r4 get value", "return $ i0", "if r1 ! = $ r2 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r0 ! = r1 goto label1", "return 1", "if r0 ! = r1 goto label1", "label $ z0 = r1 instanceof org joda time readable period", "if $ z0 ! = 0 goto label2", "return 0", "if $ z0 ! = 0 goto label2", "label r2 = org joda time readable period r1", "$ r3 = r2 get period type", "r5 = org joda time base base single field period r0", "$ r4 = r5 get period type", "if $ r3 ! = $ r4 goto label3", "$ i0 = r2 get value 0", "r6 = org joda time base base single field period r0", "$ i1 = r6 get value", "if $ i0 ! = $ i1 goto label3", "$ z1 = 1", "goto label4", "label return $ z1", "if $ i0 ! = $ i1 goto label3", "label $ z1 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l4 = @ parameter1", "l0 = @ parameter2", "i1 = r1 size", "r2 = newarray int [ i1 ]", "$ b3 = l4 cmp l0", "if $ b3 == 0 goto label3", "i5 = 0", "label if i5 > = i1 goto label3", "$ r4 = r1 get field type i5", "r3 = $ r4 get field r0", "i2 = r3 get difference l0 l4", "if i2 == 0 goto label2", "l4 = r3 add l4 i2", "label r2 [ i5 ] = i2", "i5 = i5 + 1", "goto label1", "label if i5 > = i1 goto label3", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "$ r1 = org joda time date time field type clockhour of halfday", "r4 = org joda time chrono base chronology r0", "$ r2 = r4 hour", "$ r3 = org joda time field unsupported date time field get instance $ r1 $ r2", "r5 = org joda time date time field $ r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = org joda time date time field type halfday of day", "r4 = org joda time chrono base chronology r0", "$ r2 = r4 halfdays", "$ r3 = org joda time field unsupported date time field get instance $ r1 $ r2", "r5 = org joda time date time field $ r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = org joda time date time field type month of year", "r4 = org joda time chrono base chronology r0", "$ r2 = r4 month", "$ r3 = org joda time field unsupported date time field get instance $ r1 $ r2", "r5 = org joda time date time field $ r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org joda time chrono g j locale symbol for locale r1", "$ i0 = $ r2 get day of week max text length", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org joda time date time utils get chronology r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 0l"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r1 set chronology r3", "l0 = org joda time date time utils current time millis", "r1 set interval l0 l0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "i1 = @ parameter1", "$ b3 = l0 cmp 0l", "if $ b3 == 0 goto label1", "if i1 ! = 0 goto label2", "label r3 = org joda time date midnight r0", "return r3", "if i1 ! = 0 goto label2", "label r4 = org joda time date midnight r0", "$ r1 = r4 get chronology", "r5 = org joda time date midnight r0", "$ l4 = r5 get millis", "l2 = $ r1 add $ l4 l0 i1", "r6 = org joda time date midnight r0", "$ r2 = r6 with millis l2", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r3 = new org joda time local date", "r4 = org joda time date midnight r0", "$ l0 = r4 get millis", "r5 = org joda time date midnight r0", "$ r2 = r5 get chronology", "specialinvoke r3 < init > $ l0 $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = new org joda time date midnight $ property", "r5 = org joda time date midnight r0", "$ r2 = r5 get chronology", "$ r3 = $ r2 year", "r6 = org joda time date midnight r0", "specialinvoke r4 < init > r6 $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r4 = org joda time date time r0", "$ l1 = r4 get millis", "$ b2 = l0 cmp $ l1", "if $ b2 ! = 0 goto label1", "$ r2 = r0", "goto label2", "label r6 = org joda time date time $ r2", "return r6", "if $ b2 ! = 0 goto label1", "label r3 = new org joda time date time", "$ r2 = r3", "r5 = org joda time date time r0", "$ r1 = r5 get chronology", "specialinvoke r3 < init > l0 $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "if r1 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` field must not be null\\ ``", "throw r6", "if r1 ! = null goto label1", "label r7 = org joda time date midnight r0", "$ r2 = r7 get chronology", "$ r3 = r1 get field $ r2", "r8 = org joda time date midnight r0", "$ l2 = r8 get millis", "l1 = $ r3 set $ l2 i0", "r9 = org joda time date midnight r0", "$ r4 = r9 with millis l1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r2 = org joda time date time r0", "$ r1 = r2 with duration add l0 -1", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = new org joda time date midnight", "r4 = org joda time date time r0", "$ l0 = r4 get millis", "r5 = org joda time date time r0", "$ r2 = r5 get chronology", "specialinvoke r3 < init > $ l0 $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["$ r0 = org joda time date time comparator date_instance", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org joda time date time field type millis_of_second_type", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org joda time date time field type century_of_era_type", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r1 = org joda time chrono i s o chronology get instance", "r2 = org joda time chronology $ r1", "return r2", "if r0 ! = null goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["i0 = @ parameter0", "i2 = @ parameter1", "if i0 ! = 0 goto label01", "if i2 ! = 0 goto label01", "$ r16 = org joda time date time zone utc", "return $ r16", "if i2 ! = 0 goto label01", "label if i0 < -23 goto label02", "if i0 < = 23 goto label03", "label $ r0 = new java lang illegal argument exception", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` hour out of range \\ ``", "$ r3 = $ r2 append i0", "$ r4 = $ r3 to string", "specialinvoke $ r0 < init > $ r4", "throw $ r0", "if i0 < = 23 goto label03", "label if i2 < -59 goto label04", "if i2 < = 59 goto label05", "label $ r5 = new java lang illegal argument exception", "$ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "$ r7 = $ r6 append \\ `` minute out of range \\ ``", "$ r8 = $ r7 append i2", "$ r9 = $ r8 to string", "specialinvoke $ r5 < init > $ r9", "throw $ r5", "if i2 < = 59 goto label05", "label if i0 < = 0 goto label06", "if i2 > = 0 goto label06", "$ r11 = new java lang illegal argument exception", "$ r12 = new java lang string builder", "specialinvoke $ r12 < init >", "$ r13 = $ r12 append \\ `` positive hour must not have negative minute \\ ``", "$ r14 = $ r13 append i2", "$ r15 = $ r14 to string", "specialinvoke $ r11 < init > $ r15", "throw $ r11", "if i2 > = 0 goto label06", "label i3 = i0 * 60", "if i3 > = 0 goto label07", "$ i1 = java lang math ab i2", "i4 = i3 - $ i1", "goto label08", "label i5 = org joda time field field utils safe multiply i4 60000", "label goto label11", "label $ r10 = org joda time date time zone for offset millis i5", "return $ r10", "if i3 > = 0 goto label07", "label i4 = i3 + i2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [], [46], [47], [48], [], [50], []]}
{"nodes": ["r0 = @ this", "r2 = org joda time date time zone r0", "$ r1 = r2 get i d", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org joda time duration r0", "$ l0 = r1 get millis", "$ l1 = $ l0 3600000l", "return $ l1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org joda time duration field type hours_type", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org joda time duration field type months_type", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r5 = org joda time field abstract readable instant field property r0", "r1 = r5 get field", "r6 = org joda time field abstract readable instant field property r0", "$ l2 = r6 get millis", "l0 = r1 round floor $ l2", "l1 = r1 add l0 1", "r4 = new org joda time interval", "specialinvoke r4 < init > l0 l1", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org joda time field base date time field r0", "$ i1 = r1 get maximum value", "return $ i1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "i1 = @ parameter1", "r2 = org joda time field divide date time field r0", "$ r1 = r2 get wrap field", "r3 = org joda time field divide date time field r0", "$ i2 = r3 i divisor", "$ i3 = i1 * $ i2", "$ l4 = $ r1 add l0 $ i3", "return $ l4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org joda time field precise date time field r0", "$ i0 = r1 i range", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "i1 = @ parameter1", "r1 = org joda time field strict date time field r0", "$ i2 = r1 get minimum value l0", "r2 = org joda time field strict date time field r0", "$ i3 = r2 get maximum value l0", "r3 = org joda time date time field r0", "org joda time field field utils verify value bound r3 i1 $ i2 $ i3", "$ l4 = specialinvoke r0 set l0 i1", "return $ l4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["$ r0 = org joda time format date time format create formatter for style index 4 3", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org joda time format date time format create formatter for style index 0 0", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org joda time format date time formatter r0", "$ r1 = r2 i chrono", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org joda time format date time formatter r0", "$ r2 = r4 parse local date time r1", "$ r3 = $ r2 to local time", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = org joda time format i s o date time format $ constant access $ 400", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org joda time format i s o date time format $ constant access $ 2400", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org joda time format i s o date time format $ constant access $ 2500", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org joda time format i s o date time format $ constant access $ 4300", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = java util locale get default", "$ r1 = org joda time format period format word base $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = org joda time format period formatter builder r0", "r1 i print zero set = 4", "r2 = org joda time format period formatter builder r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org joda time format period formatter builder r0", "specialinvoke r1 append field 3", "r2 = org joda time format period formatter builder r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org joda time format period formatter builder r0", "specialinvoke r1 append field 4", "r2 = org joda time format period formatter builder r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org joda time format period formatter builder r0", "specialinvoke r1 append field 8", "r2 = org joda time format period formatter builder r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org joda time illegal field value exception r0", "$ r1 = r2 i date time field type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org joda time illegal field value exception r0", "$ r1 = r2 i string value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org joda time illegal field value exception r0", "r2 = r3 i string value", "if r2 ! = null goto label1", "r4 = org joda time illegal field value exception r0", "$ r1 = r4 i number value", "r2 = java lang string value of $ r1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r4 = org joda time interval r0", "$ l1 = r4 get start millis", "$ b2 = l0 cmp $ l1", "if $ b2 ! = 0 goto label1", "r5 = org joda time interval r0", "return r5", "if $ b2 ! = 0 goto label1", "label r3 = new org joda time interval", "r6 = org joda time interval r0", "$ l3 = r6 get end millis", "r7 = org joda time interval r0", "$ r2 = r7 get chronology", "specialinvoke r3 < init > l0 $ l3 $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "l1 = @ parameter1", "r2 = org joda time mutable interval r0", "$ r1 = r2 get chronology", "specialinvoke r0 set interval l0 l1 $ r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org joda time mutable interval r0", "$ l1 = r1 get start millis", "$ l2 = org joda time field field utils safe add $ l1 l0", "r2 = org joda time mutable interval r0", "r2 set end millis $ l2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r3 = org joda time mutable interval r0", "$ l2 = r3 get start millis", "r4 = org joda time mutable interval r0", "r4 set end millis $ l2", "goto label2", "label return", "if r1 ! = null goto label1", "label r5 = org joda time mutable interval r0", "$ r2 = r5 get chronology", "r6 = org joda time mutable interval r0", "$ l0 = r6 get start millis", "$ l1 = $ r2 add r1 $ l0 1", "r7 = org joda time mutable interval r0", "r7 set end millis $ l1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = org joda time duration field type hour", "specialinvoke r0 add field $ r1 i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = org joda time duration field type minute", "specialinvoke r0 set field $ r1 i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r7 = org joda time partial r0", "i1 = r7 index of support r1", "r8 = org joda time partial r0", "$ i2 = r8 get value i1", "if i0 ! = $ i2 goto label1", "r9 = org joda time partial r0", "return r9", "if i0 ! = $ i2 goto label1", "label r10 = org joda time partial r0", "r4 = r10 get value", "r11 = org joda time partial r0", "$ r2 = r11 get field i1", "r5 = $ r2 set r0 i1 r4 i0", "r6 = new org joda time partial", "r12 = org joda time partial r0", "specialinvoke r6 < init > r12 r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = org joda time date time utils get instant millis r1", "r2 = org joda time date time utils get instant chronology r1", "i4 = 0", "label r8 = org joda time partial r0", "$ r3 = r8 i type", "$ i2 = lengthof $ r3", "if i4 > = $ i2 goto label3", "r9 = org joda time partial r0", "$ r4 = r9 i type", "$ r5 = $ r4 [ i4 ]", "$ r6 = $ r5 get field r2", "i1 = $ r6 get l0", "r10 = org joda time partial r0", "$ r7 = r10 i value", "$ i3 = $ r7 [ i4 ]", "if i1 == $ i3 goto label2", "return 0", "if i1 == $ i3 goto label2", "label i4 = i4 + 1", "goto label1", "if i4 > = $ i2 goto label3", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [], [23], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ i1 = neg i0", "r2 = org joda time period r0", "$ r1 = r2 plus minute $ i1", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org joda time period r0", "specialinvoke r2 check year and month \\ `` seconds\\ ``", "r3 = org joda time period r0", "$ i0 = r3 get millis", "$ i1 = $ i0 1000", "l17 = long $ i1", "r4 = org joda time period r0", "$ i2 = r4 get second", "$ l3 = long $ i2", "l18 = org joda time field field utils safe add l17 $ l3", "r5 = org joda time period r0", "$ i4 = r5 get minute", "$ l5 = long $ i4", "$ l6 = $ l5 * 60l", "l19 = org joda time field field utils safe add l18 $ l6", "r6 = org joda time period r0", "$ i7 = r6 get hour", "$ l8 = long $ i7", "$ l9 = $ l8 * 3600l", "l20 = org joda time field field utils safe add l19 $ l9", "r7 = org joda time period r0", "$ i10 = r7 get day", "$ l11 = long $ i10", "$ l12 = $ l11 * 86400l", "l21 = org joda time field field utils safe add l20 $ l12", "r8 = org joda time period r0", "$ i13 = r8 get week", "$ l14 = long $ i13", "$ l15 = $ l14 * 604800l", "l22 = org joda time field field utils safe add l21 $ l15", "$ i16 = org joda time field field utils safe to int l22", "$ r1 = org joda time second second $ i16", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r10 = org joda time period type c y w d time", "if r10 ! = null goto label1", "$ r0 = new org joda time period type", "$ r1 = newarray org joda time duration field type [ 7 ]", "$ r2 = org joda time duration field type year", "$ r1 [ 0 ] = $ r2", "$ r3 = org joda time duration field type week", "$ r1 [ 1 ] = $ r3", "$ r4 = org joda time duration field type day", "$ r1 [ 2 ] = $ r4", "$ r5 = org joda time duration field type hour", "$ r1 [ 3 ] = $ r5", "$ r6 = org joda time duration field type minute", "$ r1 [ 4 ] = $ r6", "$ r7 = org joda time duration field type second", "$ r1 [ 5 ] = $ r7", "$ r8 = org joda time duration field type millis", "$ r1 [ 6 ] = $ r8", "$ r9 = newarray int [ 8 ]", "$ r9 [ 0 ] = 0", "$ r9 [ 1 ] = -1", "$ r9 [ 2 ] = 1", "$ r9 [ 3 ] = 2", "$ r9 [ 4 ] = 3", "$ r9 [ 5 ] = 4", "$ r9 [ 6 ] = 5", "$ r9 [ 7 ] = 6", "specialinvoke $ r0 < init > \\ `` year week day time\\", "r10 = $ r0", "org joda time period type c y w d time = $ r0", "label return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r4 = org joda time period type c millis", "if r4 ! = null goto label1", "$ r0 = new org joda time period type", "$ r1 = newarray org joda time duration field type [ 1 ]", "$ r2 = org joda time duration field type millis", "$ r1 [ 0 ] = $ r2", "$ r3 = newarray int [ 8 ]", "$ r3 [ 0 ] = -1", "$ r3 [ 1 ] = -1", "$ r3 [ 2 ] = -1", "$ r3 [ 3 ] = -1", "$ r3 [ 4 ] = -1", "$ r3 [ 5 ] = -1", "$ r3 [ 6 ] = -1", "$ r3 [ 7 ] = 0", "specialinvoke $ r0 < init > \\ `` millis\\", "r4 = $ r0", "org joda time period type c millis = $ r0", "label return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org joda time period type r0", "$ r1 = specialinvoke r2 with field remove 3 \\ `` no days\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = java util collection singleton \\ `` utc\\ ``", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org joda time tz zone info logger c verbose", "$ r1 = $ r0 get", "$ r2 = java lang boolean $ r1", "$ z0 = $ r2 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r14 = org jolokia backend executor abstract m bean server executor r0", "r1 = r14 get m bean server", "r11 = null", "r12 = new java lang string builder", "specialinvoke r12 < init >", "r3 = r1 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label6", "$ r9 = r3 next", "r4 = javax management m bean server connection $ r9", "label org jolokia util jmx util remove m bean registration listener r4 r0", "label goto label5", "label goto label1", "if $ z0 == 0 goto label6", "label if r11 == null goto label7", "r13 = new java lang illegal state exception", "$ i0 = r12 length", "$ i1 = $ i0 - 1", "$ r8 = r12 substring 0 $ i1", "specialinvoke r13 < init > $ r8 r11", "throw r13", "label if r11 == null goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], []]}
{"nodes": ["r0 = @ this", "r2 = org jolokia backend m bean server executor local r0", "r2 unregister from m bean notification", "r3 = org jolokia backend m bean server executor local r0", "$ r1 = r3 mbean server", "$ r1 destroy", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org jolokia backend m bean server executor local r0", "$ r1 = r3 mbean server", "$ r2 = $ r1 dump", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org jolokia backend m bean server handler r0", "$ r1 = r3 m bean server manager", "$ r2 = $ r1 get server info", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org jolokia backend m bean server r0", "$ r1 = r3 all m bean server", "$ r2 = org jolokia util server info dump $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "z0 = @ parameter3", "r4 = java util collection r2", "$ z1 = r3 be empty", "if $ z1 == 0 goto label1", "$ r8 = null", "goto label2", "label $ i1 = r4 size", "i0 = r1 get collection length $ i1", "if $ r8 == null goto label3", "r10 = org jolokia converter json collection extractor r0", "$ r7 = specialinvoke r10 extract with path r1 r4 r3 z0 $ r8 i0", "return $ r7", "if $ r8 == null goto label3", "label if z0 == 0 goto label4", "r11 = org jolokia converter json collection extractor r0", "$ r9 = specialinvoke r11 extract list a json r1 r4 r3 i0", "goto label5", "label return $ r9", "label if z0 == 0 goto label4", "label $ r9 = r4", "if $ z1 == 0 goto label1", "label $ r6 = r3 pop", "$ r8 = java lang string $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r15 = org jolokia detector abstract server detector r0", "r4 = r15 search m bean r1 r2", "$ i0 = r4 size", "if $ i0 ! = 0 goto label1", "return null", "if $ i0 ! = 0 goto label1", "label r14 = new java util hash set", "specialinvoke r14 < init >", "r6 = r4 iterator", "label $ z0 = r6 have next", "if $ z0 == 0 goto label4", "$ r13 = r6 next", "r7 = javax management object name $ r13", "r16 = org jolokia detector abstract server detector r0", "r8 = r16 get attribute value r1 r7 r3", "if r8 == null goto label3", "r14 add r8", "label goto label2", "if $ z0 == 0 goto label4", "label $ i1 = r14 size", "if $ i1 == 0 goto label5", "$ i2 = r14 size", "if $ i2 < = 1 goto label6", "label return null", "if $ i2 < = 1 goto label6", "label $ r10 = r14 iterator", "$ r11 = $ r10 next", "$ r12 = java lang string $ r11", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r2 = org jolokia detector server handle r0", "$ r1 = r2 vendor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jolokia history history key r0", "$ r1 = r2 m bean", "$ z0 = $ r1 be pattern", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org jolokia history history store r0", "$ i0 = r1 global max entry", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org jolokia request jmx object name request r0", "$ r1 = r3 object name", "$ r2 = $ r1 get canonical name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org jolokia util debug store r0", "r1 max debug entry = i0", "r2 = org jolokia util debug store r0", "specialinvoke r2 trim", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["c0 = @ parameter0", "i1 = @ parameter1", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "i2 = 0", "label if i2 > = i1 goto label2", "$ r1 append c0", "i2 = i2 + 1", "goto label1", "label if i2 > = i1 goto label2", "label $ r2 = $ r1 to string", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r6 = new joptsimple require argument option spec", "r7 = joptsimple option spec builder r0", "$ r3 = r7 option", "r8 = joptsimple option spec builder r0", "$ r4 = r8 description", "specialinvoke r6 < init > $ r3 $ r4", "r9 = joptsimple option spec builder r0", "$ r5 = r9 parser", "r10 = joptsimple abstract option spec r6", "$ r5 recognize r10", "r11 = joptsimple argument accept option spec r6", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = joptsimple option spec builder r0", "r3 = specialinvoke r9 validated dependent r1 r2", "r4 = r3 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label2", "$ r6 = r4 next", "r5 = java lang string $ r6", "r10 = joptsimple option spec builder r0", "$ r7 = r10 parser", "r11 = joptsimple option spec builder r0", "$ r8 = r11 option", "$ r7 require unless $ r8 r5", "goto label1", "if $ z0 == 0 goto label2", "label r12 = joptsimple option spec builder r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "i0 = r0 length", "$ r2 = new java lang string buffer", "specialinvoke $ r2 < init >", "i10 = 0", "label if i10 > = i0 goto label4", "c11 = r0 char at i10", "if c11 ! = 43 goto label2", "c11 = 32", "goto label3", "label $ r2 append c11", "i10 = i10 + 1", "goto label1", "if c11 ! = 43 goto label2", "label if c11 ! = 37 goto label3", "$ i3 = i10 + 2", "if $ i3 > = i0 goto label3", "$ i4 = i10 + 1", "$ c5 = r0 char at $ i4", "i1 = org json j s o n tokener dehexchar $ c5", "$ i6 = i10 + 2", "$ c7 = r0 char at $ i6", "i2 = org json j s o n tokener dehexchar $ c7", "if i1 < 0 goto label3", "if i2 < 0 goto label3", "$ i8 = i1 * 16", "$ i9 = $ i8 + i2", "c11 = char $ i9", "i10 = i10 + 2", "label if i10 > = i0 goto label4", "label $ r3 = $ r2 to string", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r2 = org json j s o n writer r0", "$ r1 = specialinvoke r2 end 97 93", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org json x m l parser configuration r0", "$ z0 = r1 convert nil attribute to null", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "com jayway jsonpath configuration default = r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com jayway jsonpath internal filter relational operator ne", "r4 = com jayway jsonpath criterion r0", "r4 criterion type = $ r2", "$ r3 = com jayway jsonpath internal filter value node to value node r1", "r5 = com jayway jsonpath criterion r0", "r5 right = $ r3", "r6 = com jayway jsonpath criterion r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com jayway jsonpath internal filter relational operator lte", "r4 = com jayway jsonpath criterion r0", "r4 criterion type = $ r2", "$ r3 = com jayway jsonpath internal filter value node to value node r1", "r5 = com jayway jsonpath criterion r0", "r5 right = $ r3", "r6 = com jayway jsonpath criterion r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util array a list r1", "r4 = com jayway jsonpath criterion r0", "$ r3 = r4 subsetof $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = new io restassured path json config json path config", "r12 = io restassured path json config json path config r0", "$ r10 = r12 default parser type", "r13 = io restassured path json config json path config r0", "$ r9 = r13 gson object mapper factory", "r14 = io restassured path json config json path config r0", "$ r8 = r14 jackson1 object mapper factory", "r15 = io restassured path json config json path config r0", "$ r7 = r15 jackson2 object mapper factory", "r16 = io restassured path json config json path config r0", "$ r6 = r16 johnzon object mapper factory", "r17 = io restassured path json config json path config r0", "$ r5 = r17 jsonb object mapper factory", "r18 = io restassured path json config json path config r0", "$ r4 = r18 default deserializer", "r19 = io restassured path json config json path config r0", "$ r3 = r19 charset", "specialinvoke r11 < init > r1 $ r10 $ r9 $ r8 $ r7 $ r6 $ r5 $ r4 $ r3", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "io restassured internal common assertion assert parameter not null \\ `` object type\\", "$ r4 = r2 get type a class", "r6 = io restassured path json json path r0", "$ r5 = r6 get object r1 $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r10 = new io restassured path json json path", "$ r5 = io restassured path json json path config", "r12 = io restassured path json json path r0", "specialinvoke r10 < init > r12 $ r5", "$ r6 = r10 params", "if $ r6 ! = null goto label1", "r11 = new java util hash map", "specialinvoke r11 < init >", "r10 params = r11", "label $ r7 = r10 params", "$ r7 put r1 r2", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com github fge jsonschema core util u r i utils scheme_checker", "$ r1 check r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com github fge jsonschema core util value holder r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new com github fge jsonschema core report list process report", "specialinvoke r6 < init >", "r7 = com github fge jsonschema processor syntax syntax validator r0", "r8 = com github fge jsonschema core report process report r6", "$ r4 = specialinvoke r7 get result r1 r8", "$ r5 = $ r4 get report", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r10 = net minidev json j s o n navi r0", "$ r1 = r10 current", "if $ r1 ! = null goto label1", "return null", "if $ r1 ! = null goto label1", "label r11 = net minidev json j s o n navi r0", "$ r2 = r11 current", "$ z0 = $ r2 instanceof java lang number", "if $ z0 == 0 goto label3", "r12 = net minidev json j s o n navi r0", "$ r4 = r12 current", "$ z1 = $ r4 instanceof java lang float", "if $ z1 == 0 goto label2", "r13 = net minidev json j s o n navi r0", "$ r8 = r13 current", "$ r9 = java lang float $ r8", "return $ r9", "if $ z1 == 0 goto label2", "label r14 = net minidev json j s o n navi r0", "$ r5 = r14 current", "$ r6 = java lang number $ r5", "$ f0 = $ r6 float value", "$ r7 = java lang float value of $ f0", "return $ r7", "if $ z0 == 0 goto label3", "label $ r3 = java lang float value of #na n f", "return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ this", "r10 = net minidev json j s o n navi r0", "$ z0 = r10 failure", "if $ z0 == 0 goto label1", "r11 = net minidev json j s o n navi r0", "return r11", "if $ z0 == 0 goto label1", "label r12 = net minidev json j s o n navi r0", "$ r1 = r12 current", "if $ r1 ! = null goto label2", "r13 = net minidev json j s o n navi r0", "$ z3 = r13 readonly", "if $ z3 == 0 goto label2", "r14 = net minidev json j s o n navi r0", "specialinvoke r14 failure \\ `` can not create object child in readonly\\", "label r15 = net minidev json j s o n navi r0", "$ r9 = r15 current", "if $ r9 == null goto label5", "r16 = net minidev json j s o n navi r0", "$ z1 = r16 be object", "if $ z1 == 0 goto label3", "r17 = net minidev json j s o n navi r0", "return r17", "if $ z1 == 0 goto label3", "label r18 = net minidev json j s o n navi r0", "$ z2 = r18 be array", "if $ z2 == 0 goto label4", "r19 = net minidev json j s o n navi r0", "specialinvoke r19 failure \\ `` can not use object feature on array \\", "label r20 = net minidev json j s o n navi r0", "specialinvoke r20 failure \\ `` can not use current possition a object\\", "goto label6", "label r23 = net minidev json j s o n navi r0", "$ r4 = r23 root", "if $ r4 ! = null goto label7", "r24 = net minidev json j s o n navi r0", "$ r5 = r24 current", "r25 = net minidev json j s o n navi r0", "r25 root = $ r5", "goto label8", "label r27 = net minidev json j s o n navi r0", "return r27", "if $ r4 ! = null goto label7", "label r26 = net minidev json j s o n navi r0", "specialinvoke r26 store", "if $ r9 == null goto label5", "label r21 = net minidev json j s o n navi r0", "$ r2 = r21 mapper", "$ r3 = $ r2 create object", "r22 = net minidev json j s o n navi r0", "r22 current = $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [], [41], [], [43], [44], [45], [46], [47], [48], [49], [50], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r1 append 44", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = net minidev json parser j s o n parser r0", "$ r2 = specialinvoke r4 get p bytes", "$ r3 = $ r2 parse r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = net minidev json reader json writer r0", "r3 register writer interface last r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = net minidev json j s o n value compression", "$ r2 = net minidev json j s o n array to j s o n string r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org skyscreamer jsonassert j s o n compare result r0", "$ z0 = r1 _success", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org skyscreamer jsonassert j s o n compare result r0", "$ r1 = r2 _field unexpected", "$ z0 = $ r1 be empty", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["i0 = @ parameter0", "if i0 == 32 goto label1", "if i0 == 9 goto label1", "if i0 == 10 goto label1", "if i0 == 12 goto label1", "if i0 ! = 13 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if i0 ! = 13 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java lang string builder", "$ i0 = r0 length", "specialinvoke $ r2 < init > $ i0", "org jsoup helper string util append normalise whitespace $ r2 r0 0", "$ r3 = $ r2 to string", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["z0 = @ parameter0", "if z0 ! = 0 goto label1", "$ r0 = new java lang illegal argument exception", "specialinvoke $ r0 < init > \\ `` must be true\\ ``", "throw $ r0", "if z0 ! = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org jsoup node element r0", "$ r1 = r2 tag", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org jsoup node element r0", "$ r1 = r4 child", "$ r2 = $ r1 get i0", "$ r3 = org jsoup node element $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = specialinvoke r0 before r1", "$ r3 = org jsoup node element $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jsoup node element r0", "$ r1 = r2 child node", "$ r1 clear", "r3 = org jsoup node element r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r12 = org jsoup node element r0", "$ r5 = r12 parent node", "if $ r5 ! = null goto label1", "r10 = new org jsoup select element", "specialinvoke r10 < init > 0", "return r10", "if $ r5 ! = null goto label1", "label r13 = org jsoup node element r0", "$ r6 = r13 parent", "r1 = $ r6 child", "r11 = new org jsoup select element", "r14 = java util list r1", "$ i0 = r14 size", "$ i1 = $ i0 - 1", "specialinvoke r11 < init > $ i1", "r15 = java util list r1", "r3 = r15 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label4", "$ r8 = r3 next", "r4 = org jsoup node element $ r8", "if r4 == r0 goto label3", "r11 add r4", "label goto label2", "if $ z0 == 0 goto label4", "label return r11"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = new org jsoup select evaluator $ attribute with value start", "specialinvoke r5 < init > r1 r2", "r6 = org jsoup select evaluator r5", "r7 = org jsoup node element r0", "$ r4 = org jsoup select collector collect r6 r7", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = new org jsoup select evaluator $ index less than", "specialinvoke r3 < init > i0", "r4 = org jsoup select evaluator r3", "r5 = org jsoup node element r0", "$ r2 = org jsoup select collector collect r4 r5", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = new org jsoup select evaluator $ index equal", "specialinvoke r3 < init > i0", "r4 = org jsoup select evaluator r3", "r5 = org jsoup node element r0", "$ r2 = org jsoup select collector collect r4 r5", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r2 = java util regex pattern compile r1", "label goto label4", "label r13 = org jsoup node element r0", "$ r4 = r13 get element match own text r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org jsoup node document r0", "$ r2 = r4 body", "$ r2 text r1", "return r0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org jsoup nod node r0", "r1 = r3 root", "$ z0 = r1 instanceof org jsoup node document", "if $ z0 == 0 goto label1", "$ r2 = org jsoup node document r1", "goto label2", "label return $ r2", "if $ z0 == 0 goto label1", "label $ r2 = null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 0 goto label1", "$ z0 = 1", "goto label2", "label org jsoup helper validate be true $ z0 \\ `` split offset must be not be negative\\ ``", "r14 = org jsoup node text node r0", "$ r4 = r14 text", "$ i1 = $ r4 length", "if i0 > = $ i1 goto label3", "$ z1 = 1", "goto label4", "label org jsoup helper validate be true $ z1 \\ `` split offset must not be great than current text length\\ ``", "r15 = org jsoup node text node r0", "$ r5 = r15 get whole text", "r1 = $ r5 substring 0 i0", "r16 = org jsoup node text node r0", "$ r6 = r16 get whole text", "r2 = $ r6 substring i0", "r17 = org jsoup node text node r0", "r17 text r1", "r13 = new org jsoup node text node", "r18 = org jsoup node text node r0", "$ r9 = r18 base uri", "specialinvoke r13 < init > r2 $ r9", "r19 = org jsoup node text node r0", "$ r10 = r19 parent", "if $ r10 == null goto label5", "r20 = org jsoup node text node r0", "$ r11 = r20 parent", "r21 = org jsoup node text node r0", "$ i2 = r21 sibling index", "$ i3 = $ i2 + 1", "$ r12 = newarray org jsoup nod node [ 1 ]", "$ r12 [ 0 ] = r13", "r22 = org jsoup nod node [ ] $ r12", "$ r11 add child $ i3 r22", "label return r13", "if i0 > = $ i1 goto label3", "label $ z1 = 0", "if i0 < 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], []]}
{"nodes": ["r0 = @ this", "r1 = org jsoup parser character reader r0", "$ i0 = r1 po", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r3 = org jsoup parser character reader r0", "i1 = r3 next index of c0", "if i1 == -1 goto label1", "r4 = org jsoup parser character reader r0", "$ i2 = r4 po", "r5 = org jsoup parser character reader r0", "r1 = specialinvoke r5 cache string $ i2 i1", "r6 = org jsoup parser character reader r0", "$ i3 = r6 po", "$ i4 = $ i3 + i1", "r7 = org jsoup parser character reader r0", "r7 po = $ i4", "return r1", "if i1 == -1 goto label1", "label r8 = org jsoup parser character reader r0", "$ r2 = r8 consume to end", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org jsoup parser parse error r0", "$ r1 = r2 error msg", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jsoup parser tag r0", "$ r1 = r2 tag name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org jsoup parser tag r0", "$ z0 = r1 form list", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org jsoup parser token queue r0", "$ r2 = r3 queue", "r4 = org jsoup parser token queue r0", "$ i0 = r4 po", "$ i1 = r1 length", "$ z0 = $ r2 region match 1 $ i0 r1 0 $ i1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r5 = org jsoup parser token queue r0", "i0 = r5 po", "label r6 = org jsoup parser token queue r0", "$ z0 = r6 be empty", "if $ z0 ! = 0 goto label3", "r7 = org jsoup parser token queue r0", "$ z1 = r7 match word", "if $ z1 ! = 0 goto label2", "$ r3 = newarray java lang string [ 4 ]", "$ r3 [ 0 ] = \\ `` * |\\ ``", "$ r3 [ 1 ] = \\ `` |\\ ``", "$ r3 [ 2 ] = \\ `` _\\ ``", "$ r3 [ 3 ] = \\ `` -\\ ``", "r8 = org jsoup parser token queue r0", "$ z2 = r8 match any $ r3", "if $ z2 == 0 goto label3", "label r9 = org jsoup parser token queue r0", "$ i2 = r9 po", "$ i3 = $ i2 + 1", "r10 = org jsoup parser token queue r0", "r10 po = $ i3", "goto label1", "if $ z2 == 0 goto label3", "label r11 = org jsoup parser token queue r0", "$ r1 = r11 queue", "r12 = org jsoup parser token queue r0", "$ i1 = r12 po", "$ r2 = $ r1 substring i0 $ i1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org jsoup select element r0", "r3 = r7 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r5 = r3 next", "r4 = org jsoup node element $ r5", "r4 attr r1 r2", "goto label1", "if $ z0 == 0 goto label2", "label r8 = org jsoup select element r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r10 = new java lang string builder", "specialinvoke r10 < init >", "r11 = org jsoup select element r0", "r2 = r11 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r6 = r2 next", "r3 = org jsoup node element $ r6", "$ i0 = r10 length", "if $ i0 == 0 goto label2", "r10 append \\ `` \\ ``", "label $ r7 = r3 text", "r10 append $ r7", "goto label1", "if $ z0 == 0 goto label3", "label $ r5 = r10 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org jsoup select element r0", "r2 = r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r4 = r2 next", "r3 = org jsoup node element $ r4", "r3 append r1", "goto label1", "if $ z0 == 0 goto label2", "label r7 = org jsoup select element r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org jsoup select element r0", "r2 = r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r4 = r2 next", "r3 = org jsoup node element $ r4", "r3 before r1", "goto label1", "if $ z0 == 0 goto label2", "label r7 = org jsoup select element r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jsoup select query parser parse r1", "r6 = org jsoup select element r0", "r3 = r6 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r5 = r3 next", "r4 = org jsoup node element $ r5", "$ z1 = r4 be r2", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org jsoup select element r0", "$ r1 = specialinvoke r2 sibling null 0 1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r2 = org jsoup internal string util builder", "entermonitor $ r2", "label $ r3 = org jsoup internal string util builder", "$ z0 = $ r3 empty", "if $ z0 == 0 goto label2", "$ r7 = new java lang string builder", "specialinvoke $ r7 < init > 8192", "goto label3", "label exitmonitor $ r2", "label return $ r7", "if $ z0 == 0 goto label2", "label $ r4 = org jsoup internal string util builder", "$ r5 = $ r4 pop", "$ r7 = java lang string builder $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "i1 = 0", "label r5 = org jsoup node attribute r0", "$ i0 = r5 size", "if i1 > = $ i0 goto label2", "r6 = org jsoup node attribute r0", "$ r3 = r6 key", "r7 = org jsoup node attribute r0", "$ r1 = r7 key", "$ r2 = $ r1 [ i1 ]", "$ r4 = org jsoup internal normalizer low case $ r2", "$ r3 [ i1 ] = $ r4", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jsoup node document r0", "r2 parser = r1", "r3 = org jsoup node document r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 trim", "r3 = org jsoup parser parse setting r0", "$ z0 = r3 preserve tag case", "if $ z0 ! = 0 goto label1", "r2 = org jsoup internal normalizer lower case r2", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org jsoup select element r0", "$ r1 = specialinvoke r2 sibling null 1 1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = java util log log manager get log manager", "$ r1 = $ r0 get logger \\ `` \\ ``", "r3 = new org slf4j bridge s l f4 j bridge handler", "specialinvoke r3 < init >", "r4 = java util log handler r3", "$ r1 add handler r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "label specialinvoke r0 run test", "goto label4", "label r9 = new java lang string buffer", "specialinvoke r9 < init > \\ `` expect exception \\ ``", "r11 = junit extension exception test case r0", "$ r3 = r11 f expect", "$ r4 = r9 append $ r3", "$ r5 = $ r4 to string", "junit framework assert fail $ r5", "return"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = junit extension test decorator r0", "$ r2 = r3 f test", "$ r2 run r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "junit framework assert assert equal null d0 d1 d2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = junit framework test result r0", "$ r1 = r2 f error", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = junit runner base test runner r0", "$ r2 = r4 get loader", "$ r3 = $ r2 load r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = junit runner base test runner show stack raw", "if $ z0 == 0 goto label1", "return r0", "if $ z0 == 0 goto label1", "label $ r7 = new java io string writer", "specialinvoke $ r7 < init >", "$ r8 = new java io print writer", "specialinvoke $ r8 < init > $ r7", "$ r9 = new java io string reader", "specialinvoke $ r9 < init > r0", "$ r10 = new java io buffer reader", "specialinvoke $ r10 < init > $ r9", "label goto label4", "label $ r13 = $ r10 read line", "if $ r13 ! = null goto label3", "label $ z1 = junit runner base test runner filter line $ r13", "if $ z1 ! = 0 goto label4", "$ r8 println $ r13", "if $ r13 ! = null goto label3", "goto label6", "label $ r11 = $ r7 to string", "return $ r11"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ this", "r2 = junit swingui default failure detail view r0", "$ r1 = specialinvoke r2 get model", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = junit swingui test suite panel r0", "$ r2 = r3 f model", "$ r2 add run test r1", "r4 = junit swingui test suite panel r0", "specialinvoke r4 fire test change r1 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = junit swingui test suite panel r0", "$ r1 = r2 f tree", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ z0 = r1 equal r2", "if $ z0 == 0 goto label1", "return 0", "if $ z0 == 0 goto label1", "label r6 = junit swingui test tree model r0", "r4 = r6 be test suite r2", "i3 = 0", "goto label5", "label r8 = junit swingui test tree model r0", "$ i1 = r8 get child count r2", "if i3 < $ i1 goto label2", "label r5 = r4 test at i3", "r7 = junit swingui test tree model r0", "i0 = r7 find test r1 r5 r3", "if i0 < 0 goto label4", "r3 insert element at r2 0", "$ i2 = r3 size", "if $ i2 ! = 1 goto label3", "return i3", "if $ i2 ! = 1 goto label3", "label return i0", "if i0 < 0 goto label4", "label i3 = i3 + 1", "if i3 < $ i1 goto label2", "return -1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r19 = \\ `` \\ ``", "z4 = 0", "i0 = 0", "goto label6", "label $ i1 = lengthof r1", "if i0 < $ i1 goto label1", "label $ r2 = r1 [ i0 ]", "$ z0 = $ r2 equal \\ `` -wait\\ ``", "if $ z0 == 0 goto label2", "z4 = 1", "goto label5", "label i0 = i0 + 1", "if $ z0 == 0 goto label2", "label $ r3 = r1 [ i0 ]", "$ z1 = $ r3 equal \\ `` -c\\ ``", "if $ z1 == 0 goto label3", "i0 = i0 + 1", "$ r11 = r1 [ i0 ]", "r19 = r0 extract class name $ r11", "if $ z1 == 0 goto label3", "label $ r4 = r1 [ i0 ]", "$ z2 = $ r4 equal \\ `` -v\\ ``", "if $ z2 == 0 goto label4", "$ r6 = java lang system err", "r22 = new java lang string buffer", "specialinvoke r22 < init > \\ `` j unit \\ ``", "$ r7 = junit runner version id", "$ r8 = r22 append $ r7", "$ r9 = $ r8 append \\ `` by kent beck and erich gamma\\ ``", "$ r10 = $ r9 to string", "$ r6 println $ r10", "if $ z2 == 0 goto label4", "label r19 = r1 [ i0 ]", "if i0 < $ i1 goto label1", "$ z3 = r19 equal \\ `` \\ ``", "if $ z3 == 0 goto label7", "r23 = new java lang exception", "specialinvoke r23 < init > \\ `` usage test runner [ -wait ] test case name where name be the name of the test case class\\ ``", "throw r23", "if $ z3 == 0 goto label7", "label r20 = r0 get test r19", "r26 = junit textui test runner r0", "$ r12 = r26 do run r20 z4", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "d0 = @ parameter1", "d1 = @ parameter2", "d2 = @ parameter3", "$ i0 = java lang double compare d0 d1", "if $ i0 ! = 0 goto label1", "return", "if $ i0 ! = 0 goto label1", "label $ d3 = d0 - d1", "$ d4 = java lang math ab $ d3", "$ b1 = $ d4 cmpg d2", "if $ b1 < = 0 goto label2", "$ r1 = new java lang double", "specialinvoke $ r1 < init > d0", "$ r2 = new java lang double", "specialinvoke $ r2 < init > d1", "junit framework assert fail not equal r0 $ r1 $ r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = junit framework comparison failure r0", "$ r1 = r2 f expect", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = junit framework test suite r0", "$ r1 = r2 f test", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "org junit assert assert equal null d0 d1 d2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 == null goto label1", "$ z0 = 1", "goto label2", "label org junit assert assert true r0 $ z0", "return", "if r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org junit runner description r0", "$ r2 = r3 get child", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org junit runner request class \\ `` all\\", "r4 = org junit runner j unit core r0", "$ r3 = r4 run $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org junit runner notification run notifier $ 6", "r4 = org junit runner notification run notifier r0", "specialinvoke r3 < init > r4 r1", "r3 run", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "org junit assert assert not equal null d0 d1 d2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org hamcrest core matcher instance of r1", "r3 = org junit rule expect exception r0", "r3 expect $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org junit rule temporary folder r0", "$ r1 = r3 get root", "r4 = org junit rule temporary folder r0", "$ r2 = specialinvoke r4 create temporary folder in $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org junit runner model framework method r0", "$ r1 = r3 f method", "$ r2 = $ r1 get name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org junit runner model framework method r0", "$ r2 = specialinvoke r6 get parameter type", "$ i0 = lengthof $ r2", "if $ i0 ! = 0 goto label1", "$ z0 = r1 instanceof java lang class", "if $ z0 == 0 goto label1", "$ r4 = java lang class r1", "r7 = org junit runner model framework method r0", "$ r3 = r7 f method", "$ r5 = $ r3 get return type", "$ z1 = $ r4 be assignable from $ r5", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r7 = org junit runner model runner builder r0", "$ r3 = r7 runner for class r1", "label return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org junit runner model test class r0", "$ r2 = r4 f field for annotation", "r5 = org junit runner model test class r0", "$ r3 = specialinvoke r5 get annotate member $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = junit framework test failure r0", "$ r1 = r3 thrown exception", "$ r2 = $ r1 get message", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "d0 = @ parameter1", "d1 = @ parameter2", "d2 = @ parameter3", "$ z0 = org junit assert double be different d0 d1 d2", "if $ z0 ! = 0 goto label1", "$ r1 = java lang double value of d1", "org junit assert fail equal r0 $ r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org junit internal matcher throwable cause matcher have cause r1", "r3 = org junit rule expect exception r0", "r3 expect $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = org junit runner model framework member r0", "$ i0 = r1 get modifier", "$ z0 = java lang reflect modifier be public $ i0", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org junit runner model framework method r0", "$ r1 = r3 method", "$ r2 = $ r1 get declare class", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org junit runner model test time out exception r0", "$ l0 = r1 timeout", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org junit runner manipulation orderable", "if $ z0 == 0 goto label1", "r2 = org junit runner manipulation orderable r1", "r3 = org junit runner manipulation orderer r0", "r2 order r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org junit runner manipulation sortable", "if $ z0 == 0 goto label1", "r2 = org junit runner manipulation sortable r1", "r3 = org junit runner manipulation sorter r0", "r2 sort r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org junit runner notification run notifier $ 3", "r4 = org junit runner notification run notifier r0", "specialinvoke r3 < init > r4 r1", "r3 run", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r8 = org junit runner model runner builder r0", "r5 = r8 runner for class r1", "if r5 == null goto label2", "r9 = org junit runner model runner builder r0", "specialinvoke r9 configure runner r5", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org hamcrest core be equal", "specialinvoke r2 < init > r0", "r3 = org hamcrest matcher r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java util optional empty", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ r1 = r0 get class", "$ z0 = $ r1 be array", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "org junit platform common util precondition not null r0 \\ `` class must not be null\\ ``", "$ r3 = new java util link hash set", "specialinvoke $ r3 < init >", "org junit platform common util reflection utils get all assignment compatible class r0 $ r3", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org junit platform engine discovery nest method selector r0", "$ r1 = r3 nest class selector", "$ r2 = $ r1 get nest class name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache log4j async appender r0", "$ r4 = r7 appenders", "entermonitor $ r4", "label r8 = org apache log4j async appender r0", "$ r5 = r8 appenders", "$ r5 remove appender r1", "exitmonitor $ r4", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache log4j async appender r0", "r1 location info = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache log4j async appender r0", "$ i0 = r1 buffer size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache log4j helper option converter convert special char r1", "r10 = org apache log4j enhance pattern layout r0", "r10 conversion pattern = $ r2", "r11 = org apache log4j enhance pattern layout r0", "$ r3 = r11 conversion pattern", "r12 = org apache log4j enhance pattern layout r0", "$ r4 = r12 create pattern parser $ r3", "$ r5 = $ r4 parse", "r13 = org apache log4j enhance pattern layout r0", "r13 head = $ r5", "r14 = org apache log4j enhance pattern layout r0", "$ r6 = r14 head", "$ z0 = $ r6 instanceof org apache log4j pattern bridge pattern converter", "if $ z0 == 0 goto label3", "r15 = org apache log4j enhance pattern layout r0", "$ r7 = r15 head", "$ r8 = org apache log4j pattern bridge pattern converter $ r7", "$ z1 = $ r8 ignore throwable", "if $ z1 ! = 0 goto label1", "$ z2 = 1", "goto label2", "label r16 = org apache log4j enhance pattern layout r0", "r16 handle exception = $ z2", "goto label4", "label return", "if $ z1 ! = 0 goto label1", "label $ z2 = 0", "if $ z0 == 0 goto label3", "label r17 = org apache log4j enhance pattern layout r0", "r17 handle exception = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new java lang string buffer", "specialinvoke r6 < init >", "r7 = org apache log4j enhance pattern layout r0", "r5 = r7 head", "label if r5 == null goto label2", "r5 format r6 r1", "r5 = r5 next", "goto label1", "label if r5 == null goto label2", "label $ r4 = r6 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache log4j jdbc j d b c appender r0", "$ r2 = r4 get layout", "$ r3 = $ r2 format r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache log4j jdbc j d b c appender r0", "r1 close", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log4j lf5 log record r0", "$ r1 = r2 _message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log4j lf5 log record r0", "$ r1 = r2 _thread", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache log4j lf5 log record r0", "r2 _ndc = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r5 = org apache log4j lf5 util log monitor adapter r0", "r5 log r1 r2 r3 null r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log4j lf5 viewer categoryexplorer category path r0", "$ r1 = r2 _category element", "i0 = $ r1 size", "return i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log4j lf5 viewer categoryexplorer category path r0", "$ r1 = r2 _category element", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org apache log4j logger r0", "$ r1 = r4 repository", "$ z0 = $ r1 be disabled 5000", "if $ z0 == 0 goto label1", "return 0", "if $ z0 == 0 goto label1", "label $ r2 = org apache log4j level trace", "r5 = org apache log4j logger r0", "$ r3 = r5 get effective level", "r6 = org apache log4j priority $ r3", "$ z1 = $ r2 be great or equal r6", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "$ r2 = org apache log4j level warn", "r6 = org apache log4j priority $ r2", "$ z1 = r0 be enable for r6", "if $ z1 == 0 goto label1", "$ r3 = org apache log4j level warn", "$ r4 = org apache log4j log m f value of z0", "$ r5 = org apache log4j log m f format r1 $ r4", "org apache log4j log m f force log r0 $ r3 $ r5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["z0 = @ parameter0", "if z0 == 0 goto label1", "$ r1 = java lang boolean true", "return $ r1", "if z0 == 0 goto label1", "label $ r0 = java lang boolean false", "return $ r0"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache log4j net j m s appender r0", "r2 initial context factory name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache log4j net s m t p appender r0", "r2 bcc = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache log4j net socket appender r0", "r1 reconnection delay = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = new java net server socket", "specialinvoke $ r1 < init > i0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r16 = org apache log4j net telnet appender r0", "$ r4 = r16 sh", "if $ r4 == null goto label3", "r17 = org apache log4j net telnet appender r0", "$ r6 = r17 sh", "r18 = org apache log4j net telnet appender r0", "$ r5 = r18 layout", "$ r7 = $ r5 format r1", "$ r6 send $ r7", "r19 = org apache log4j net telnet appender r0", "$ r8 = r19 layout", "$ z0 = $ r8 ignore throwable", "if $ z0 == 0 goto label3", "r2 = r1 get throwable str rep", "if r2 == null goto label3", "r15 = new java lang string buffer", "specialinvoke r15 < init >", "i1 = 0", "label $ i0 = lengthof r2", "if i1 > = $ i0 goto label2", "$ r12 = r2 [ i1 ]", "r15 append $ r12", "r15 append \\ `` \\r\\n\\ ``", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label r20 = org apache log4j net telnet appender r0", "$ r10 = r20 sh", "$ r11 = r15 to string", "$ r10 send $ r11", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache log4j pattern cache date format r0", "$ r3 = r5 formatter", "$ r4 = $ r3 parse r1 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache log4j pattern format info r0", "$ i0 = r1 max length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r3 = org apache log4j pattern name pattern converter r0", "$ r2 = r3 abbreviator", "$ r2 abbreviate i0 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache log4j xml x m l layout r0", "r1 location info = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org apache log log4j closeable thread context $ instance", "specialinvoke $ r1 < init > null", "$ r2 = $ r1 push r0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r4 = org apache log log4j event logger logger", "$ r3 = org apache log log4j event logger fqcn", "$ r2 = org apache log log4j event logger event_marker", "r5 = org apache log log4j message message r0", "$ r4 log if enable $ r3 r1 $ r2 r5 null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org apache log log4j level r0", "$ i1 = r3 int level", "$ i0 = r1 int level", "if $ i1 < $ i0 goto label1", "r4 = org apache log log4j level r0", "$ i3 = r4 int level", "$ i2 = r2 int level", "if $ i3 > $ i2 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i3 > $ i2 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["$ r1 = org apache log log4j level level", "r0 = $ r1 value", "$ i0 = r0 size", "$ r2 = newarray org apache log log4j level [ $ i0 ]", "$ r3 = r0 to array $ r2", "$ r4 = org apache log log4j level [ ] $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` no level name give \\ ``", "r1 = org apache log log4j level to upper case r0", "$ r4 = org apache log log4j level level", "$ r5 = $ r4 get r1", "r2 = org apache log log4j level $ r5", "if r2 == null goto label1", "return r2", "if r2 == null goto label1", "label $ r6 = new java lang illegal argument exception", "$ r7 = new java lang string builder", "specialinvoke $ r7 < init >", "$ r8 = $ r7 append \\ `` unknown level constant [ \\ ``", "$ r9 = $ r8 append r1", "$ r10 = $ r9 append \\ `` ] \\ ``", "$ r11 = $ r10 to string", "specialinvoke $ r6 < init > $ r11", "throw $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "label $ r3 = org apache log log4j log manager factory", "$ r2 = org apache log log4j log manager fqcn", "$ r4 = $ r3 get context $ r2 r0 null z0", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = org apache log log4j util stack locator util get caller class 2", "$ r1 = org apache log log4j log manager get formatter logger $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org apache log log4j util stack locator util get caller class 2", "$ r1 = org apache log log4j log manager get formatter logger $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = org apache log log4j marker manager marker", "$ r4 = $ r3 get r1", "r2 = org apache log log4j marker $ r4", "if r2 ! = null goto label1", "$ r6 = new java lang illegal argument exception", "$ r7 = new java lang string builder", "specialinvoke $ r7 < init >", "$ r8 = $ r7 append \\ `` parent marker \\ ``", "$ r9 = $ r8 append r1", "$ r10 = $ r9 append \\ `` have not be defined\\ ``", "$ r11 = $ r10 to string", "specialinvoke $ r6 < init > $ r11", "throw $ r6", "if r2 ! = null goto label1", "label $ r5 = org apache log log4j marker manager get marker r0 r2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j message format message r0", "$ r1 = r2 message pattern", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j message message format message r0", "$ r1 = r2 message pattern", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r4 = org apache log log4j message structure data id r0", "return r4", "if r1 ! = null goto label1", "label $ r2 = r1 get name", "$ i0 = r1 get enterprise number", "r5 = org apache log log4j message structure data id r0", "$ r3 = r5 make id $ r2 $ i0", "return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j message structure data id r0", "$ r1 = r2 require", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache log log4j message structure data message $ format full", "r3 = org apache log log4j message structure data message r0", "$ r2 = r3 a string $ r1 null", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache log log4j level warn", "r3 = org apache log log4j spi abstract logger r0", "$ r2 = r3 at level $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache log log4j spi abstract logger r0", "$ z0 = r5 be enable r1", "if $ z0 == 0 goto label1", "r6 = org apache log log4j spi abstract logger r0", "$ r3 = specialinvoke r6 get log builder r1", "$ r4 = $ r3 reset r1", "return $ r4", "if $ z0 == 0 goto label1", "label $ r2 = org apache log log4j log builder noop", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r4 = new java util hash set", "r5 = org apache log log4j spi abstract logger adapter r0", "$ r2 = r5 registry", "$ r3 = $ r2 key set", "specialinvoke r4 < init > $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r6 = org apache log log4j spi extend logger wrapper r0", "$ r5 = r6 logger", "$ z0 = $ r5 be enable r1 r2 r3 r4", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org apache log log4j spi logger registry factory class key r2", "r5 = org apache log log4j spi logger registry r0", "$ r4 = specialinvoke r5 get or create inner map $ r3", "$ z0 = $ r4 contain key r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j spi provider r0", "$ r1 = r2 url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache log log4j status status data r0", "$ l0 = r1 timestamp", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j status status data r0", "$ r1 = r2 level", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache log log4j thread context context map", "$ r1 remove r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r1 = org apache log log4j thread context context stack", "r0 = $ r1 get immutable stack or null", "if r0 ! = null goto label1", "$ r2 = org apache log log4j thread context empty_stack", "goto label2", "label r3 = org apache log log4j thread context $ context stack $ r2", "return r3", "if r0 ! = null goto label1", "label $ r2 = r0"], "adj": [[1], [2], [3], [4], [], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core appender abstract file appender r0", "$ r1 = r2 file name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core appender abstract manager r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache log log4j core appender db abstract database manager r0", "r2 write r1 null", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache log log4j core appender file manager r0", "$ i0 = r1 buffer size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = new org apache log log4j core appender mom kafka kafka appender $ builder", "specialinvoke $ r0 < init >", "$ r1 = $ r0 a builder", "$ r2 = org apache log log4j core appender mom kafka kafka appender $ builder $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache log log4j core appender roll action abstract action r0", "$ z0 = r1 complete", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache log log4j core appender roll action path sort by modification time r0", "$ z0 = r1 recent first", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core appender roll roll file manager r0", "$ r1 = r2 pattern processor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core appender roll file appender r0", "$ r1 = r2 file name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core appender rout route r0", "$ r1 = r2 pattern script", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache log log4j core appender smtp appender r0", "$ r2 = r4 manager", "r5 = org apache log log4j core appender smtp appender r0", "$ r3 = r5 get layout", "$ r2 send event $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r2 = @ parameter2", "r5 = org apache log log4j core config configuration scheduler r0", "$ r3 = specialinvoke r5 get executor service", "$ r4 = $ r3 schedule r1 l0 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "l1 = @ parameter2", "r2 = @ parameter3", "r5 = org apache log log4j core config configuration scheduler r0", "$ r3 = specialinvoke r5 get executor service", "$ r4 = $ r3 schedule at fixed rate r1 l0 l1 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache log log4j core config configuration source r0", "$ l0 = r1 last modified", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core config configuration source r0", "$ r1 = r2 stream", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core config logger config r0", "$ r1 = r2 appender ref", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache log log4j core config logger config $ logger config predicate all", "r3 = org apache log log4j core config logger config r0", "r3 log r1 $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core config plugins processor plugin cache r0", "$ r1 = r2 category", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r5 = org apache log log4j core config plugins util plugin registry instance", "if r5 ! = null goto label6", "$ r2 = org apache log log4j core config plugins util plugin registry instance_lock", "entermonitor $ r2", "label r5 = org apache log log4j core config plugins util plugin registry instance", "if r5 ! = null goto label2", "$ r3 = new org apache log log4j core config plugins util plugin registry", "specialinvoke $ r3 < init >", "r5 = $ r3", "org apache log log4j core config plugins util plugin registry instance = $ r3", "label exitmonitor $ r2", "label goto label6", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "label r18 = org apache log log4j core config plugins util resolver util r0", "r14 = r18 get class loader", "$ z0 = r1 do match class", "if $ z0 == 0 goto label3", "$ i0 = r2 index of 46", "$ r8 = r2 substring 0 $ i0", "r15 = $ r8 replace 47 46", "$ r9 = org apache log log4j core config plugins util resolver util logger", "$ z3 = $ r9 be debug enabled", "if $ z3 == 0 goto label2", "$ r11 = org apache log log4j core config plugins util resolver util logger", "$ r11 debug \\ `` check to see if class { } match criterion { } \\", "label r3 = r14 load class r15", "$ z4 = r1 match r3", "if $ z4 == 0 goto label3", "r19 = org apache log log4j core config plugins util resolver util r0", "$ r10 = r19 class match", "$ r10 add r3", "label $ z6 = r1 do match resource", "if $ z6 == 0 goto label5", "r16 = r14 get resource r2", "if r16 ! = null goto label4", "$ r7 = r2 substring 1", "r16 = r14 get resource $ r7", "label if r16 == null goto label5", "$ r4 = r16 to u r i", "$ z1 = r1 match $ r4", "if $ z1 == 0 goto label5", "r20 = org apache log log4j core config plugins util resolver util r0", "$ r5 = r20 resource match", "$ r6 = r16 to u r i", "$ r5 add $ r6", "label goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache log log4j level to level r1 null", "r11 = org apache log log4j core config status status configuration r0", "r11 status = $ r2", "r12 = org apache log log4j core config status status configuration r0", "$ r3 = r12 status", "if $ r3 ! = null goto label1", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r5 = r10 append \\ `` invalid status level specify \\ ``", "$ r6 = $ r5 append r1", "$ r7 = $ r6 append \\ `` default to error \\ ``", "$ r8 = $ r7 to string", "r13 = org apache log log4j core config status status configuration r0", "r13 error $ r8", "$ r9 = org apache log log4j level error", "r14 = org apache log log4j core config status status configuration r0", "r14 status = $ r9", "label r15 = org apache log log4j core config status status configuration r0", "return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r3 = org apache log log4j core config status status configuration r0", "$ z1 = r3 initialize", "if $ z1 ! = 0 goto label3", "r4 = org apache log log4j core config status status configuration r0", "$ r2 = r4 status", "$ r1 = org apache log log4j level off", "if $ r2 ! = $ r1 goto label1", "r5 = org apache log log4j core config status status configuration r0", "r5 initialize = 1", "goto label3", "label return", "if $ r2 ! = $ r1 goto label1", "label r6 = org apache log log4j core config status status configuration r0", "z0 = specialinvoke r6 configure exist status console listener", "if z0 ! = 0 goto label2", "r7 = org apache log log4j core config status status configuration r0", "specialinvoke r7 register new status console listener", "label r8 = org apache log log4j core config status status configuration r0", "specialinvoke r8 migrate save log message"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r3 = org apache log log4j core filter composite filter r0", "$ r1 = r3 filter", "$ r2 = java util array a list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache log log4j core pattern plain text renderer get instance", "$ r2 = org apache log log4j core impl throwable proxy eol_str", "r4 = org apache log log4j core impl throwable proxy r0", "r5 = org apache log log4j core pattern text renderer $ r1", "$ r3 = r4 get extend stack trace a string null r5 \\ `` \\", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r51 = new java lang string builder", "specialinvoke r51 < init >", "r54 = org apache log log4j core layout html layout r0", "specialinvoke r54 append r51 \\ `` < ! doctype html public \\\\\\ `` - w3c dtd html 4 01 transitional en\\\\\\ `` \\ ``", "r55 = org apache log log4j core layout html layout r0", "specialinvoke r55 append l r51 \\ `` \\\\\\ `` http www w3 org tr html4 loose dtd\\\\\\ `` > \\ ``", "r56 = org apache log log4j core layout html layout r0", "specialinvoke r56 append l r51 \\ `` < html > \\ ``", "r57 = org apache log log4j core layout html layout r0", "specialinvoke r57 append l r51 \\ `` < head > \\ ``", "r58 = org apache log log4j core layout html layout r0", "specialinvoke r58 append r51 \\ `` < meta charset=\\\\\\ `` \\ ``", "r59 = org apache log log4j core layout html layout r0", "$ r8 = r59 get charset", "$ r9 = $ r8 to string", "r60 = org apache log log4j core layout html layout r0", "specialinvoke r60 append r51 $ r9", "r61 = org apache log log4j core layout html layout r0", "specialinvoke r61 append l r51 \\ `` \\\\\\ `` > \\ ``", "r62 = org apache log log4j core layout html layout r0", "$ r12 = specialinvoke r62 append r51 \\ `` < title > \\ ``", "r63 = org apache log log4j core layout html layout r0", "$ r13 = r63 title", "$ r12 append $ r13", "r64 = org apache log log4j core layout html layout r0", "specialinvoke r64 append l r51 \\ `` < title > \\ ``", "r65 = org apache log log4j core layout html layout r0", "specialinvoke r65 append l r51 \\ `` < style type=\\\\\\ `` text css\\\\\\ `` > \\ ``", "r66 = org apache log log4j core layout html layout r0", "specialinvoke r66 append l r51 \\ `` < ! -- \\ ``", "r67 = org apache log log4j core layout html layout r0", "$ r18 = specialinvoke r67 append r51 \\ `` body table { font-family\\ ``", "r68 = org apache log log4j core layout html layout r0", "$ r19 = r68 font", "$ r20 = $ r18 append $ r19", "$ r20 append \\ `` font-size \\ ``", "r69 = org apache log log4j core layout html layout r0", "$ r22 = r69 header size", "r70 = org apache log log4j core layout html layout r0", "$ r23 = specialinvoke r70 append l r51 $ r22", "$ r23 append \\ `` } \\ ``", "r71 = org apache log log4j core layout html layout r0", "specialinvoke r71 append l r51 \\ `` th { background #336699 color #ffffff text-align leave } \\ ``", "r72 = org apache log log4j core layout html layout r0", "specialinvoke r72 append l r51 \\ `` -- > \\ ``", "r73 = org apache log log4j core layout html layout r0", "specialinvoke r73 append l r51 \\ `` < style > \\ ``", "r74 = org apache log log4j core layout html layout r0", "specialinvoke r74 append l r51 \\ `` < head > \\ ``", "r75 = org apache log log4j core layout html layout r0", "specialinvoke r75 append l r51 \\ `` < body bgcolor=\\\\\\ `` #ffffff\\\\\\ `` topmargin=\\\\\\ `` 6\\\\\\ `` leftmargin=\\\\\\ `` 6\\\\\\ `` > \\ ``", "r76 = org apache log log4j core layout html layout r0", "specialinvoke r76 append l r51 \\ `` < hr size=\\\\\\ `` 1\\\\\\ `` noshade=\\\\\\ `` noshade\\\\\\ `` > \\ ``", "r52 = new java lang string builder", "specialinvoke r52 < init >", "$ r32 = r52 append \\ `` log session start time \\ ``", "r53 = new java util date", "specialinvoke r53 < init >", "$ r34 = $ r32 append r53", "$ r35 = $ r34 append \\ `` < br > \\ ``", "$ r36 = $ r35 to string", "r77 = org apache log log4j core layout html layout r0", "specialinvoke r77 append l r51 $ r36", "r78 = org apache log log4j core layout html layout r0", "specialinvoke r78 append l r51 \\ `` < br > \\ ``", "r79 = org apache log log4j core layout html layout r0", "specialinvoke r79 append l r51 \\ `` < table cellspacing=\\\\\\ `` 0\\\\\\ `` cellpadding=\\\\\\ `` 4\\\\\\ `` border=\\\\\\ `` 1\\\\\\ `` bordercolor=\\\\\\ `` #224466\\\\\\ `` width=\\\\\\ `` 100 % \\\\\\ `` > \\ ``", "r80 = org apache log log4j core layout html layout r0", "specialinvoke r80 append l r51 \\ `` < tr > \\ ``", "r81 = org apache log log4j core layout html layout r0", "specialinvoke r81 append l r51 \\ `` < th > time < th > \\ ``", "r82 = org apache log log4j core layout html layout r0", "specialinvoke r82 append l r51 \\ `` < th > thread < th > \\ ``", "r83 = org apache log log4j core layout html layout r0", "specialinvoke r83 append l r51 \\ `` < th > level < th > \\ ``", "r84 = org apache log log4j core layout html layout r0", "specialinvoke r84 append l r51 \\ `` < th > logger < th > \\ ``", "r85 = org apache log log4j core layout html layout r0", "$ z0 = r85 location info", "if $ z0 == 0 goto label1", "r86 = org apache log log4j core layout html layout r0", "specialinvoke r86 append l r51 \\ `` < th > file line < th > \\ ``", "label r87 = org apache log log4j core layout html layout r0", "specialinvoke r87 append l r51 \\ `` < th > message < th > \\ ``", "r88 = org apache log log4j core layout html layout r0", "specialinvoke r88 append l r51 \\ `` < tr > \\ ``", "$ r47 = r51 to string", "r89 = org apache log log4j core layout html layout r0", "$ r48 = r89 get charset", "$ r49 = $ r47 get bytes $ r48", "return $ r49"], "adj}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache log log4j core layout serialize layout r0", "$ r2 = r3 to serializable r1", "r4 = java io serializable $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r4 = new org apache log log4j core layout yaml layout", "r3 = new org apache log log4j core config default configuration", "specialinvoke r3 < init >", "$ r2 = java nio charset standard charsets utf_8", "r5 = org apache log log4j core config configuration r3", "specialinvoke r4 < init > r5 0 0 0 0 0 null \\ `` \\", "r6 = org apache log log4j core layout abstract jackson layout r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org apache log log4j core logger $ private config", "r4 = org apache log log4j core logger r0", "r5 = org apache log log4j core logger r0", "specialinvoke r3 < init > r4 r1 r5", "r6 = org apache log log4j core logger r0", "r6 private config = r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core logger context r0", "$ r1 = r2 get logger \\ `` \\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core logger context r0", "$ r1 = r2 configuration", "r3 = org apache log log4j core logger context r0", "r3 update logger $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache log log4j core net priority r0", "$ r2 = r3 facility", "r4 = org apache log log4j core net priority r0", "$ r1 = r4 severity", "$ i0 = org apache log log4j core net priority to priority $ r2 $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache log log4j core net protocol r0", "$ r2 = r3 name", "$ z0 = $ r2 equal ignore case r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "org apache log log4j core net tcp socket manager $ tcp socket manager factory resolver = r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org apache log log4j core pattern date pattern converter r0", "$ r1 = r3 formatter", "$ r2 = $ r1 to pattern", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org apache log log4j core pattern pattern formatter r0", "$ r1 = r4 converter", "$ z0 = $ r1 instanceof org apache log log4j core impl location aware", "if $ z0 == 0 goto label1", "r5 = org apache log log4j core pattern pattern formatter r0", "$ r2 = r5 converter", "$ r3 = org apache log log4j core impl location aware $ r2", "$ z1 = $ r3 require location", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r3 = org apache log log4j core util datetime fix date format r0", "$ r1 = r3 fix format", "$ r2 = $ r1 get pattern", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ z0 = org apache log log4j util string be empty r0", "if $ z0 == 0 goto label1", "$ i1 = i0", "goto label2", "label return $ i1", "if $ z0 == 0 goto label1", "label $ i1 = java lang integer parse int r0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["$ r0 = org apache log log4j core util loader get class loader class \\ `` lorg apache log log4j core util loader \\", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r5 = new java util hash set", "specialinvoke $ r5 < init >", "r3 = r0 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r9 = r3 next", "r4 = java lang string $ r9", "$ z1 = r4 start with r1", "if $ z1 == 0 goto label2", "$ r5 add r4", "label goto label1", "if $ z0 == 0 goto label3", "label $ i0 = $ r5 size", "$ r6 = newarray java lang string [ $ i0 ]", "$ r7 = $ r5 to array $ r6", "$ r8 = java lang string [ ] $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org apache log log4j core util source", "specialinvoke r4 < init > r1", "r5 = org apache log log4j core util watch manager r0", "r5 unwatch r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org apache log log4j core pattern repeat pattern converter r0", "specialinvoke r3 format r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = ch qos logback classic logger context r0", "$ r2 = r5 logger cache", "$ r3 = $ r2 get r1", "$ r4 = ch qos logback classic logger $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = ch qos logback classic net j m s queue appender r0", "$ r1 = r2 qcf bind name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = ch qos logback classic net j m s topic appender r0", "$ r1 = r2 topic publisher", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get logger context v o", "$ r3 = $ r2 get name", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = ch qos logback core context r1", "specialinvoke r0 set context r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r6 = ch qos logback classic logger context r0", "$ r3 = r6 turbo filter list", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r5 = r1 next", "r2 = ch qos logback classic turbo turbo filter $ r5", "r2 stop", "goto label1", "if $ z0 == 0 goto label2", "label r7 = ch qos logback classic logger context r0", "$ r4 = r7 turbo filter list", "$ r4 clear", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = ch qos logback classic logger context r0", "$ r1 = r2 framework package", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = javax net server socket factory get default", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = newarray java lang object [ 1 ]", "$ r3 = r1 get remote socket address", "$ r2 [ 0 ] = $ r3", "$ r4 = java lang string format \\ `` logback socket node client % s \\", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = ch qos logback classic logger context r0", "$ r1 = r2 framework package", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = ch qos logback core context r1", "specialinvoke r0 set context r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "label r27 = ch qos logback core db connection source base r0", "r21 = r27 get connection", "if r21 ! = null goto label3", "r28 = ch qos logback core db connection source base r0", "r28 add warn \\ `` could not get a connection\\ ``", "label return", "if r21 ! = null goto label3", "label r1 = r21 get meta data", "r23 = new ch qos logback core db dialect d b util", "specialinvoke r23 < init >", "r29 = ch qos logback core db connection source base r0", "$ r4 = r29 get context", "r23 set context $ r4", "$ z0 = r23 support get generate key r1", "r30 = ch qos logback core db connection source base r0", "r30 support get generate key = $ z0", "$ z1 = r23 support batch update r1", "r31 = ch qos logback core db connection source base r0", "r31 support batch update = $ z1", "$ r5 = ch qos logback core db dialect d b util discover s q l dialect r1", "r32 = ch qos logback core db connection source base r0", "r32 dialect code = $ r5", "r24 = new java lang string builder", "specialinvoke r24 < init >", "$ r7 = r24 append \\ `` driver name=\\ ``", "$ r8 = r1 get driver name", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 to string", "r33 = ch qos logback core db connection source base r0", "r33 add info $ r10", "r25 = new java lang string builder", "specialinvoke r25 < init >", "$ r12 = r25 append \\ `` driver version=\\ ``", "$ r13 = r1 get driver version", "$ r14 = $ r12 append $ r13", "$ r15 = $ r14 to string", "r34 = ch qos logback core db connection source base r0", "r34 add info $ r15", "r26 = new java lang string builder", "specialinvoke r26 < init >", "$ r17 = r26 append \\ `` support get generate keys=\\ ``", "r35 = ch qos logback core db connection source base r0", "$ z2 = r35 support get generate key", "$ r18 = $ r17 append $ z2", "$ r19 = $ r18 to string", "r36 = ch qos logback core db connection source base r0", "r36 add info $ r19", "label goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], []]}
{"nodes": ["r0 = @ this", "i0 = 0", "label r11 = new ch qos logback core pattern parser parser", "r12 = ch qos logback core html h t m l layout base r0", "$ r3 = r12 pattern", "specialinvoke r11 < init > $ r3", "r13 = ch qos logback core html h t m l layout base r0", "$ r4 = r13 get context", "r11 set context $ r4", "r1 = r11 parse", "r14 = ch qos logback core html h t m l layout base r0", "$ r5 = r14 get effective converter map", "$ r6 = r11 compile r1 $ r5", "r15 = ch qos logback core html h t m l layout base r0", "r15 head = $ r6", "r16 = ch qos logback core html h t m l layout base r0", "$ r7 = r16 head", "ch qos logback core pattern converter util start converter $ r7", "label goto label4", "label if i0 ! = 0 goto label5", "r0 start = 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = ch qos logback core html h t m l layout base r0", "$ r1 = r2 title", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r1 ! = null goto label01", "return null", "if r1 ! = null goto label01", "label r3 = r1 trim", "$ r4 = class \\ `` ljava lang string \\ ``", "$ z0 = $ r4 be assignable from r2", "if $ z0 == 0 goto label02", "return r3", "if $ z0 == 0 goto label02", "label $ r5 = java lang integer type", "$ z1 = $ r5 be assignable from r2", "if $ z1 == 0 goto label03", "$ r20 = new java lang integer", "specialinvoke $ r20 < init > r3", "return $ r20", "if $ z1 == 0 goto label03", "label $ r6 = java lang long type", "$ z2 = $ r6 be assignable from r2", "if $ z2 == 0 goto label04", "$ r19 = new java lang long", "specialinvoke $ r19 < init > r3", "return $ r19", "if $ z2 == 0 goto label04", "label $ r7 = java lang float type", "$ z3 = $ r7 be assignable from r2", "if $ z3 == 0 goto label05", "$ r18 = new java lang float", "specialinvoke $ r18 < init > r3", "return $ r18", "if $ z3 == 0 goto label05", "label $ r8 = java lang double type", "$ z4 = $ r8 be assignable from r2", "if $ z4 == 0 goto label06", "$ r17 = new java lang double", "specialinvoke $ r17 < init > r3", "return $ r17", "if $ z4 == 0 goto label06", "label $ r9 = java lang boolean type", "$ z5 = $ r9 be assignable from r2", "if $ z5 == 0 goto label08", "$ r13 = \\ `` true\\ ``", "$ z9 = $ r13 equal ignore case r3", "if $ z9 == 0 goto label07", "$ r16 = java lang boolean true", "return $ r16", "if $ z9 == 0 goto label07", "label $ r14 = \\ `` false\\ ``", "$ z10 = $ r14 equal ignore case r3", "if $ z10 == 0 goto label11", "$ r15 = java lang boolean false", "return $ r15", "if $ z10 == 0 goto label11", "label return null", "if $ z5 == 0 goto label08", "label $ z6 = r2 be enum", "if $ z6 == 0 goto label09", "$ r12 = ch qos logback core joran util string to object converter convert to enum r0 r3 r2", "return $ r12", "if $ z6 == 0 goto label09", "label $ z7 = ch qos logback core joran util string to object converter follow the value of convention r2", "if $ z7 == 0 goto label10", "$ r11 = ch qos logback core joran util string to object converter convert by value of method r0 r2 r3", "return $ r11", "if $ z7 == 0 goto label10", "label $ z8 = ch qos logback core joran util string to object converter be of type charset r2", "if $ z8 == 0 goto label11", "$ r10 = ch qos logback core joran util string to object converter convert to charset r0 r1", "return $ r10"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], [46], [47], [], [49], [50], [51], [52], [53], [], [55], [56], [57], [58], [59], [60], [], [62], [63], [64], [65], [], [67], [68], [69], [70], []]}
{"nodes": ["r0 = @ this", "i2 = 0", "r17 = ch qos logback core net socket appender base r0", "$ i0 = r17 port", "if $ i0 ! = 0 goto label1", "i2 = 0 + 1", "r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r10 = r15 append \\ `` no port be configure for appender\\ ``", "r18 = ch qos logback core net socket appender base r0", "$ r11 = r18 name", "$ r12 = $ r10 append $ r11", "$ r13 = $ r12 append \\ `` for more information please visit http logback qos ch code html #socket_no_port\\ ``", "$ r14 = $ r13 to string", "r19 = ch qos logback core net socket appender base r0", "r19 add error $ r14", "label r20 = ch qos logback core net socket appender base r0", "$ r1 = r20 address", "if $ r1 ! = null goto label2", "i2 = i2 + 1", "r16 = new java lang string builder", "specialinvoke r16 < init >", "$ r4 = r16 append \\ `` no remote address be configure for appender\\ ``", "r21 = ch qos logback core net socket appender base r0", "$ r5 = r21 name", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 append \\ `` for more information please visit http logback qos ch code html #socket_no_host\\ ``", "$ r8 = $ r7 to string", "r22 = ch qos logback core net socket appender base r0", "r22 add error $ r8", "label r23 = ch qos logback core net socket appender base r0", "$ r2 = r23 address", "r24 = ch qos logback core net socket appender base r0", "$ i1 = r24 port", "r25 = ch qos logback core net socket appender base r0", "r25 connect $ r2 $ i1", "if i2 ! = 0 goto label3", "r26 = ch qos logback core net socket appender base r0", "r26 start = 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], []]}
{"nodes": ["r0 = @ this", "r1 = ch qos logback core net socket appender base r0", "$ i0 = r1 port", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = \\ `` kern\\ ``", "$ z0 = $ r1 equal ignore case r0", "if $ z0 == 0 goto label01", "return 0", "if $ z0 == 0 goto label01", "label $ r2 = \\ `` user\\ ``", "$ z1 = $ r2 equal ignore case r0", "if $ z1 == 0 goto label02", "return 8", "if $ z1 == 0 goto label02", "label $ r3 = \\ `` mail\\ ``", "$ z2 = $ r3 equal ignore case r0", "if $ z2 == 0 goto label03", "return 16", "if $ z2 == 0 goto label03", "label $ r4 = \\ `` daemon\\ ``", "$ z3 = $ r4 equal ignore case r0", "if $ z3 == 0 goto label04", "return 24", "if $ z3 == 0 goto label04", "label $ r5 = \\ `` auth\\ ``", "$ z4 = $ r5 equal ignore case r0", "if $ z4 == 0 goto label05", "return 32", "if $ z4 == 0 goto label05", "label $ r6 = \\ `` syslog\\ ``", "$ z5 = $ r6 equal ignore case r0", "if $ z5 == 0 goto label06", "return 40", "if $ z5 == 0 goto label06", "label $ r7 = \\ `` lpr\\ ``", "$ z6 = $ r7 equal ignore case r0", "if $ z6 == 0 goto label07", "return 48", "if $ z6 == 0 goto label07", "label $ r8 = \\ `` news\\ ``", "$ z7 = $ r8 equal ignore case r0", "if $ z7 == 0 goto label08", "return 56", "if $ z7 == 0 goto label08", "label $ r9 = \\ `` uucp\\ ``", "$ z8 = $ r9 equal ignore case r0", "if $ z8 == 0 goto label09", "return 64", "if $ z8 == 0 goto label09", "label $ r10 = \\ `` cron\\ ``", "$ z9 = $ r10 equal ignore case r0", "if $ z9 == 0 goto label10", "return 72", "if $ z9 == 0 goto label10", "label $ r11 = \\ `` authpriv\\ ``", "$ z10 = $ r11 equal ignore case r0", "if $ z10 == 0 goto label11", "return 80", "if $ z10 == 0 goto label11", "label $ r12 = \\ `` ftp\\ ``", "$ z11 = $ r12 equal ignore case r0", "if $ z11 == 0 goto label12", "return 88", "if $ z11 == 0 goto label12", "label $ r13 = \\ `` local0\\ ``", "$ z12 = $ r13 equal ignore case r0", "if $ z12 == 0 goto label13", "return 128", "if $ z12 == 0 goto label13", "label $ r14 = \\ `` local1\\ ``", "$ z13 = $ r14 equal ignore case r0", "if $ z13 == 0 goto label14", "return 136", "if $ z13 == 0 goto label14", "label $ r15 = \\ `` local2\\ ``", "$ z14 = $ r15 equal ignore case r0", "if $ z14 == 0 goto label15", "return 144", "if $ z14 == 0 goto label15", "label $ r16 = \\ `` local3\\ ``", "$ z15 = $ r16 equal ignore case r0", "if $ z15 == 0 goto label16", "return 152", "if $ z15 == 0 goto label16", "label $ r17 = \\ `` local4\\ ``", "$ z16 = $ r17 equal ignore case r0", "if $ z16 == 0 goto label17", "return 160", "if $ z16 == 0 goto label17", "label $ r18 = \\ `` local5\\ ``", "$ z17 = $ r18 equal ignore case r0", "if $ z17 == 0 goto label18", "return 168", "if $ z17 == 0 goto label18", "label $ r19 = \\ `` local6\\ ``", "$ z18 = $ r19 equal ignore case r0", "if $ z18 == 0 goto label19", "return 176", "if $ z18 == 0 goto label19", "label $ r20 = \\ `` local7\\ ``", "$ z19 = $ r20 equal ignore case r0", "if $ z19 == 0 goto label20", "return 184", "if $ z19 == 0 goto label20", "label $ r21 = new java lang illegal argument exception", "$ r22 = new java lang string builder", "specialinvoke $ r22 < init >", "$ r23 = $ r22 append r0", "$ r24 = $ r23 append \\ `` be not a valid syslog facility string\\ ``", "$ r25 = $ r24 to string", "specialinvoke $ r21 < init > $ r25", "throw $ r21"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], [17], [18], [19], [], [21], [22], [23], [24], [], [26], [27], [28], [29], [], [31], [32], [33], [34], [], [36], [37], [38], [39], [], [41], [42], [43], [44], [], [46], [47], [48], [49], [], [51], [52], [53], [54], [], [56], [57], [58], [59], [], [61], [62], [63], [64], [], [66], [67], [68], [69], [], [71], [72], [73], [74], [], [76], [77], [78], [79], [], [81], [82], [83], [84], [], [86], [87], [88], [89], [], [91], [92], [93], [94], [], [96], [97], [98], [99], [], [101], [102], [103], [104], [105], [106], [107], [108], []]}
{"nodes": ["r0 = @ this", "r2 = ch qos logback core roll helper date token converter r0", "$ r1 = r2 date pattern", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = ch qos logback core roll time base rolling policy r0", "r1 max history = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "if r0 ! = null goto label1", "return z0", "if r0 ! = null goto label1", "label r1 = r0 trim", "$ r2 = \\ `` true\\ ``", "$ z1 = $ r2 equal ignore case r1", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label $ r3 = \\ `` false\\ ``", "$ z2 = $ r3 equal ignore case r1", "if $ z2 == 0 goto label3", "return 0", "if $ z2 == 0 goto label3", "label return z0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = ch qos logback core joran util bean bean description cache r0", "$ r3 = r10 class to bean description", "$ z0 = $ r3 contain key r1", "if $ z0 ! = 0 goto label1", "r11 = ch qos logback core joran util bean bean description cache r0", "$ r7 = specialinvoke r11 get bean description factory", "r2 = $ r7 create r1", "r12 = ch qos logback core joran util bean bean description cache r0", "$ r8 = r12 class to bean description", "$ r8 put r1 r2", "label r13 = ch qos logback core joran util bean bean description cache r0", "$ r4 = r13 class to bean description", "$ r5 = $ r4 get r1", "$ r6 = ch qos logback core joran util bean bean description $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = ch qos logback core net server abstract server socket appender r0", "$ i0 = r1 client queue size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = ch qos logback core net ssl key manager factory factory bean r0", "$ r1 = r2 provider", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = ch qos logback core net ssl key store factory bean r0", "r2 password = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = ch qos logback core net ssl s s l configuration r0", "$ r1 = r5 parameter", "if $ r1 ! = null goto label1", "r4 = new ch qos logback core net ssl s s l parameter configuration", "specialinvoke r4 < init >", "r6 = ch qos logback core net ssl s s l configuration r0", "r6 parameter = r4", "label r7 = ch qos logback core net ssl s s l configuration r0", "$ r2 = r7 parameter", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = ch qos logback core net ssl s s l context factory bean r0", "r2 key manager factory = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = ch qos logback core net ssl s s l parameter configuration r0", "$ r1 = r2 exclude protocol", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = ch qos logback core spi appender attachable impl r0", "$ r3 = r6 appender list", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r5 = r1 next", "r2 = ch qos logback core appender $ r5", "r2 stop", "goto label1", "if $ z0 == 0 goto label2", "label r7 = ch qos logback core spi appender attachable impl r0", "$ r4 = r7 appender list", "$ r4 clear", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = java util array a list r1", "ch qos logback core util string collection util retain match r0 $ r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = java util array a list r1", "ch qos logback core util string collection util remove match r0 $ r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = java lang system out", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r3 = $ r1 append \\ `` fast instance be \\ ``", "$ r4 = net jpountz lz4 l z4 factory fast instance", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 to string", "$ r2 println $ r6", "$ r8 = java lang system out", "$ r7 = new java lang string builder", "specialinvoke $ r7 < init >", "$ r9 = $ r7 append \\ `` fast java instance be \\ ``", "$ r10 = net jpountz lz4 l z4 factory fast java instance", "$ r11 = $ r9 append $ r10", "$ r12 = $ r11 to string", "$ r8 println $ r12", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven artifact repository authentication r0", "r2 password = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven build string source r0", "$ r1 = r2 content", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache maven lifecycle internal project build list r0", "$ r4 = r7 item", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = org apache maven lifecycle internal project segment $ r5", "$ r6 = r3 get project", "$ z1 = r1 equal $ r6", "if $ z1 == 0 goto label2", "return r3", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven project maven project r0", "r2 class realm = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven project maven project r0", "r2 extension dependency filter = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r3 = r1", "goto label2", "label r4 = org apache maven project maven project r0", "r4 resolve artifact = $ r3", "r5 = org apache maven project maven project r0", "r5 artifact = null", "r6 = org apache maven project maven project r0", "r6 artifact map = null", "return", "if r1 == null goto label1", "label $ r3 = java util collection empty set"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven project maven project r0", "r2 artifact filter = r1", "r3 = org apache maven project maven project r0", "r3 artifact = null", "r4 = org apache maven project maven project r0", "r4 artifact map = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache maven toolchain model io xpp3 maven toolchains xpp3 reader r0", "$ z0 = r1 add default entity", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven cli internal extension model core extension r0", "$ r1 = r2 group id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven cli internal extension model core extension r0", "r2 artifact id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven share invoker default invocation result r0", "$ r1 = r2 execution exception", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven share invoker default invoker r0", "$ r1 = r2 maven home", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model activation r0", "$ r1 = r2 o", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model activation o s r0", "r2 version = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model build r0", "r2 output directory = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model contributor r0", "r2 name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model dependency r0", "$ r1 = r2 classifier", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model developer r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model distribution management r0", "$ r1 = r2 status", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model distribution management r0", "r2 site = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model model r0", "$ r1 = r2 artifact id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model model r0", "$ r1 = r2 build", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model model r0", "$ r1 = r2 description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model model r0", "$ r1 = r2 organization", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model model r0", "r2 artifact id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model model r0", "r2 build = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model model r0", "r2 license = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model model r0", "r2 packaging = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model model r0", "r2 url = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model model base r0", "r2 property = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model model base r0", "r2 report = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model organization r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model plugin r0", "r2 dependency = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model relocation r0", "$ r1 = r2 group id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model report plugin r0", "$ r1 = r2 group id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model report plugin r0", "r2 report set = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model report set r0", "r2 id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model repository r0", "$ r1 = r2 release", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model scm r0", "r2 connection = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model scm r0", "r2 url = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model build model building exception r0", "$ r1 = r2 result", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven plugin lifecycle lifecycle configuration r0", "r2 lifecycles = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven artifact repository metadata metadata r0", "r2 versioning = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven artifact repository metadata snapshot version r0", "$ r1 = r2 extension", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven artifact repository metadata versioning r0", "$ r1 = r2 late", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven artifact repository metadata versioning r0", "r2 snapshot = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether collection collect result r0", "$ r1 = r2 request", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether collection collect result r0", "$ r1 = r2 exception", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether collection collect result r0", "$ r1 = r2 cycle", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse aether collection dependency management r0", "r2 scope = r1", "r3 = org eclipse aether collection dependency management r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label2", "r6 = org eclipse aether deployment deploy request r0", "$ r2 = r6 artifact", "$ z0 = $ r2 be empty", "if $ z0 == 0 goto label1", "r5 = new java util array list", "specialinvoke r5 < init >", "r7 = org eclipse aether deployment deploy request r0", "r7 artifact = r5", "label r8 = org eclipse aether deployment deploy request r0", "$ r3 = r8 artifact", "$ r3 add r1", "label r9 = org eclipse aether deployment deploy request r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r2 = java util collection empty list", "r3 = org eclipse aether deployment deploy request r0", "r3 metadata = $ r2", "goto label2", "label r5 = org eclipse aether deployment deploy request r0", "return r5", "if r1 ! = null goto label1", "label r4 = org eclipse aether deployment deploy request r0", "r4 metadata = r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether graph default dependency node r0", "$ r1 = r2 artifact", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether graph exclusion r0", "$ r1 = r2 artifact id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether installation install result r0", "$ r1 = r2 metadata", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether repository local artifact registration r0", "$ r1 = r2 artifact", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether repository local artifact registration r0", "$ r1 = r2 repository", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether repository local artifact result r0", "$ r1 = r2 request", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse aether repository local metadata result r0", "r2 file = r1", "r3 = org eclipse aether repository local metadata result r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether repository proxy r0", "$ r1 = r2 auth", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether repository remote repository r0", "$ r1 = r2 url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether repository repository policy r0", "$ r1 = r2 checksum policy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether resolution artifact descriptor request r0", "$ r1 = r2 repository", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse aether resolution artifact descriptor result r0", "r2 repository = r1", "r3 = org eclipse aether resolution artifact descriptor result r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r2 = java util collection empty list", "r3 = org eclipse aether resolution artifact descriptor result r0", "r3 dependency = $ r2", "goto label2", "label r5 = org eclipse aether resolution artifact descriptor result r0", "return r5", "if r1 ! = null goto label1", "label r4 = org eclipse aether resolution artifact descriptor result r0", "r4 dependency = r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether resolution artifact descriptor result r0", "$ r1 = r2 manage dependency", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether resolution artifact descriptor result r0", "$ r1 = r2 repository", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse aether resolution artifact result r0", "r2 repository = r1", "r3 = org eclipse aether resolution artifact result r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse aether resolution dependency request r0", "r2 root = r1", "r3 = org eclipse aether resolution dependency request r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse aether resolution metadata request r0", "$ z0 = r1 delete local copy if miss", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse aether resolution metadata request r0", "r1 delete local copy if miss = z0", "r2 = org eclipse aether resolution metadata request r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether resolution metadata result r0", "$ r1 = r2 get exception", "$ z0 = $ r1 instanceof org eclipse aether transfer metadata not find exception", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label2", "r6 = org eclipse aether resolution version range result r0", "$ r2 = r6 exception", "$ z0 = $ r2 be empty", "if $ z0 == 0 goto label1", "r5 = new java util array list", "specialinvoke r5 < init >", "r7 = org eclipse aether resolution version range result r0", "r7 exception = r5", "label r8 = org eclipse aether resolution version range result r0", "$ r3 = r8 exception", "$ r3 add r1", "label r9 = org eclipse aether resolution version range result r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether resolution version request r0", "$ r1 = r2 artifact", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether resolution version resolution exception r0", "$ r1 = r2 result", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether transfer no repository layout exception r0", "$ r1 = r2 repository", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse aether transfer transfer resource r0", "$ l0 = r1 resume offset", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether version invalid version specification exception r0", "$ r1 = r2 version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether spi connector artifact transfer r0", "$ r1 = r2 get exception", "r3 = java lang exception $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether spi connector transfer r0", "$ r1 = r2 listener", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r8 = org eclipse aether spi connector transport get task r0", "$ r1 = r8 data file", "if $ r1 ! = null goto label1", "r9 = org eclipse aether spi connector transport get task r0", "$ r2 = r9 data byte", "if $ r2 ! = null goto label2", "label return \\ `` \\ ``", "if $ r2 ! = null goto label2", "label r7 = new java lang string", "r10 = org eclipse aether spi connector transport get task r0", "$ r4 = r10 data byte", "$ r5 = $ r4 to byte array", "$ r6 = java nio charset standard charsets utf_8", "specialinvoke r7 < init > $ r5 $ r6", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label3", "r4 = r2 [ i1 ]", "r5 = r0 get r4", "if r5 == null goto label2", "return r5", "if r5 == null goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 size", "if $ i0 > 1 goto label2", "$ z0 = r0 be empty", "if $ z0 == 0 goto label1", "return null", "if $ z0 == 0 goto label1", "label $ r5 = r0 iterator", "$ r6 = $ r5 next", "$ r7 = org eclipse aether collection version filter $ r6", "return $ r7", "if $ i0 > 1 goto label2", "label r8 = new org eclipse aether util graph version chain version filter", "$ i1 = r0 size", "$ r2 = newarray org eclipse aether collection version filter [ $ i1 ]", "$ r3 = r0 to array $ r2", "$ r4 = org eclipse aether collection version filter [ ] $ r3", "specialinvoke r8 < init > $ r4", "r9 = org eclipse aether collection version filter r8", "return r9"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r12 = new java util array list", "r13 = org eclipse aether util graph visitor abstract depth first node list generator r0", "$ r6 = r13 get node", "$ i0 = $ r6 size", "specialinvoke r12 < init > $ i0", "r14 = org eclipse aether util graph visitor abstract depth first node list generator r0", "$ r7 = r14 get node", "r2 = $ r7 iterator", "label $ z1 = r2 have next", "if $ z1 == 0 goto label4", "$ r8 = r2 next", "r3 = org eclipse aether graph dependency node $ r8", "$ r9 = r3 get dependency", "if $ r9 == null goto label3", "$ r10 = r3 get dependency", "r4 = $ r10 get artifact", "if z0 ! = 0 goto label2", "$ r11 = r4 get file", "if $ r11 == null goto label3", "label r12 add r4", "label goto label1", "if $ z1 == 0 goto label4", "label return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 == null goto label1", "r6 = org eclipse aether util repository authentication builder r0", "$ r4 = r6 authentication", "r5 = new org eclipse aether util repository secret authentication", "specialinvoke r5 < init > r1 r2", "$ r4 add r5", "label r7 = org eclipse aether util repository authentication builder r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r3 = org eclipse aether util repository authentication builder r0", "$ r2 = r3 authentication", "$ r2 add r1", "label r4 = org eclipse aether util repository authentication builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "java util object require non null r1 \\ `` proxy can not be null\\ ``", "r7 = org eclipse aether util repository default proxy selector r0", "$ r5 = r7 proxy", "r6 = new org eclipse aether util repository default proxy selector $ proxy def", "specialinvoke r6 < init > r1 r2", "$ r5 add r6", "r8 = org eclipse aether util repository default proxy selector r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven setting activation r0", "$ r1 = r2 o", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven setting activation o s r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven setting activation o s r0", "r2 version = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven setting server r0", "$ r1 = r2 password", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven setting server r0", "$ r1 = r2 private key", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache maven setting setting r0", "$ z0 = r1 interactive mode", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven setting setting r0", "r2 local repository = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven share utils cli commandline r0", "$ r1 = r2 create arg 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven share utils cli javatool java tool result r0", "$ r1 = r2 commandline", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache maven share utils cli javatool java tool result r0", "r1 exit code = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ z0 = org apache maven share utils logging message utils jansi", "if $ z0 == 0 goto label1", "r3 = new org apache maven share utils log ansi message builder", "specialinvoke r3 < init >", "r5 = org apache maven share utils logging message builder r3", "return r5", "if $ z0 == 0 goto label1", "label r4 = new org apache maven share utils log plain message builder", "specialinvoke r4 < init >", "$ r0 = org apache maven share utils logging message builder r4", "return $ r0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "org apache maven share utils xml xml writer util write line break r0 1", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com draw lang rational r0", "$ l0 = r2 get denominator", "$ l1 = r1 get denominator", "$ b2 = $ l0 cmp $ l1", "if $ b2 ! = 0 goto label1", "r3 = com draw lang rational r0", "$ l3 = r3 get numerator", "$ l4 = r1 get numerator", "$ b5 = $ l3 cmp $ l4", "if $ b5 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b5 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ this", "r3 = com draw metadata directory r0", "$ r1 = r3 _error list", "$ z0 = $ r1 be empty", "if $ z0 == 0 goto label1", "r4 = com draw metadata directory r0", "$ r2 = r4 _defined tag list", "$ z1 = $ r2 be empty", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "f0 = @ parameter1", "$ r1 = java lang float value of f0", "r2 = com draw metadata directory r0", "r2 set object i0 $ r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = com draw metadata directory r0", "r2 set object array i0 r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = com draw metadata metadata r0", "$ r4 = r7 _directories", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = com draw metadata directory $ r5", "$ r6 = r3 get class", "$ z1 = r1 be assignable from $ r6", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "org eclipse microprofile rest client spi rest client builder resolver instance = r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "r6 = new java lang null pointer exception", "specialinvoke r6 < init > \\ `` reader be null\\ ``", "throw r6", "if r0 ! = null goto label1", "label r7 = new com eclipsesource json json $ default handler", "specialinvoke r7 < init >", "r8 = new com eclipsesource json json parser", "r9 = com eclipsesource json json handler r7", "specialinvoke r8 < init > r9", "r8 parse r0", "$ r4 = r7 get value", "return $ r4"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "r6 = new java lang null pointer exception", "specialinvoke r6 < init > \\ `` reader be null\\ ``", "throw r6", "if r0 ! = null goto label1", "label r7 = new com eclipsesource json json $ default handler", "specialinvoke r7 < init >", "r8 = new com eclipsesource json json parser", "r9 = com eclipsesource json json handler r7", "specialinvoke r8 < init > r9", "r8 parse r0", "$ r4 = r7 get value", "return $ r4"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "z0 = @ parameter1", "r4 = com eclipsesource json json array r0", "$ r1 = r4 value", "$ r2 = com eclipsesource json json value z0", "$ r1 set i0 $ r2", "r5 = com eclipsesource json json array r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = com eclipsesource json json array r0", "$ r1 = r2 value", "$ z0 = $ r1 be empty", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = com eclipsesource json json handler r0", "$ r1 = r3 parser", "$ r2 = $ r1 get location", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = com eclipsesource json json object r0", "$ r1 = r2 name", "$ z0 = $ r1 be empty", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r8 = new java lang unsupported operation exception", "r7 = new java lang string builder", "specialinvoke r7 < init >", "$ r3 = r7 append \\ `` not a number \\ ``", "r9 = com eclipsesource json json value r0", "$ r4 = r9 to string", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 to string", "specialinvoke r8 < init > $ r6", "throw r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["$ r0 = new com eclipsesource json pretty print", "$ r1 = newarray char [ 1 ]", "$ r1 [ 0 ] = 9", "specialinvoke $ r0 < init > $ r1", "return $ r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["b0 = @ parameter0", "r3 = new org mockito internal matcher great or equal", "$ r1 = java lang byte value of b0", "specialinvoke r3 < init > $ r1", "r4 = org mockito argument matcher r3", "$ r2 = org mockito additional matcher report matcher r4", "$ b1 = $ r2 return zero", "return $ b1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["b0 = @ parameter0", "r3 = new org mockito internal matcher great or equal", "$ r1 = java lang byte value of b0", "specialinvoke r3 < init > $ r1", "r4 = org mockito argument matcher r3", "$ r2 = org mockito additional matcher report matcher r4", "$ b1 = $ r2 return zero", "return $ b1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["b0 = @ parameter0", "r3 = new org mockito internal matcher great or equal", "$ r1 = java lang byte value of b0", "specialinvoke r3 < init > $ r1", "r4 = org mockito argument matcher r3", "$ r2 = org mockito additional matcher report matcher r4", "$ b1 = $ r2 return zero", "return $ b1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r5 = new org mockito internal matcher array equal", "specialinvoke r5 < init > r0", "r6 = org mockito argument matcher r5", "$ r2 = org mockito additional matcher report matcher r6", "$ r3 = $ r2 return null", "$ r4 = boolean [ ] $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["z0 = @ parameter0", "z1 = @ parameter1", "$ r0 = org mockito additional matcher mock progress", "$ r1 = $ r0 get argument matcher storage", "$ r2 = $ r1 report or", "$ z2 = $ r2 return false", "return $ z2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "r4 = new org mockito internal matcher equal with delta", "$ r1 = java lang double value of d0", "$ r2 = java lang double value of d1", "specialinvoke r4 < init > $ r1 $ r2", "r5 = org mockito argument matcher r4", "$ r3 = org mockito additional matcher report matcher r5", "$ b0 = $ r3 return zero", "$ d2 = double $ b0", "return $ d2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org mockito asm tree field insn node r0", "$ i0 = r5 opcode", "r6 = org mockito asm tree field insn node r0", "$ r4 = r6 owner", "r7 = org mockito asm tree field insn node r0", "$ r3 = r7 name", "r8 = org mockito asm tree field insn node r0", "$ r2 = r8 desc", "r1 visit field insn $ i0 $ r4 $ r3 $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org mockito cglib bean bean map r0", "$ r1 = r2 bean", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org mockito cglib core abstract class generator current", "$ r1 = $ r0 get", "$ r2 = org mockito cglib core abstract class generator $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r1 push 0", "r1 newarray", "r1 putfield \\ `` cglib $ empty args\\ ``", "r4 = r1 make_local", "r5 = r1 make_local", "org mockito cglib core emit utils load_class_this r1", "r1 store_local r4", "$ r11 = org mockito cglib proxy method interceptor generator method_to_class", "r6 = org mockito cglib core collection utils bucket r3 $ r11", "$ r12 = r6 key set", "r7 = $ r12 iterator", "label $ z0 = r7 have next", "if $ z0 == 0 goto label6", "$ r13 = r7 next", "r8 = org mockito cglib core class info $ r13", "$ r14 = r6 get r8", "r9 = java util list $ r14", "$ i0 = r9 size", "$ i1 = 2 * $ i0", "r1 push $ i1", "$ r15 = org mockito cglib core constant type_string", "r1 newarray $ r15", "i7 = 0", "label $ i2 = r9 size", "if i7 > = $ i2 goto label3", "$ r30 = r9 get i7", "r33 = org mockito cglib core method info $ r30", "r34 = r33 get signature", "r1 dup", "$ i4 = 2 * i7", "r1 push $ i4", "$ r31 = r34 get name", "r1 push $ r31", "r1 aastore", "if i7 > = $ i2 goto label3", "label $ r16 = r8 get type", "org mockito cglib core emit utils load_class r1 $ r16", "if $ z0 == 0 goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org mockito mockito with setting", "$ r2 = org mockito mockito returns_defaults", "$ r3 = $ r1 default answer $ r2", "$ r4 = org mockito mockito mock r0 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org mockito mockito mockito_core", "$ r1 verify no more interaction r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org mockito internal verification verification mode factory only", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org mockito mockito mockito_core", "$ r0 validate mockito usage", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r3 = r0", "label $ r1 = org objenesis instantiator serialization instantiator helper class $ java $ io $ serializable", "if $ r1 ! = null goto label2", "$ r4 = org objenesis instantiator serialization instantiator helper class $ \\ `` java io serializable\\ ``", "org objenesis instantiator serialization instantiator helper class $ java $ io $ serializable = $ r4", "goto label3", "label $ z0 = $ r4 be assignable from r3", "if $ z0 == 0 goto label4", "r3 = r3 get superclass", "if r3 ! = null goto label1", "$ r2 = new java lang error", "specialinvoke $ r2 < init > \\ `` bad class hierarchy no non-serializable parents\\ ``", "throw $ r2", "if $ z0 == 0 goto label4", "label return r3", "if $ r1 ! = null goto label2", "label $ r4 = org objenesis instantiator serialization instantiator helper class $ java $ io $ serializable"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["$ r0 = org mockito additional answer returns_first_argument", "r1 = org mockito stub answer $ r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org mockito argument captor", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org mockito b d d mockito $ then impl", "specialinvoke r2 < init > r0", "r3 = org mockito b d d mockito $ then r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org mockito internal util primitive primitive_or_wrapper_default_values", "$ z0 = $ r1 contain key r0", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org mockito internal matcher any any", "r3 = org hamcrest matcher $ r0", "$ r1 = org mockito matcher report matcher r3", "$ r2 = $ r1 return string", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org mockito internal matcher any any", "r3 = org hamcrest matcher $ r0", "$ r1 = org mockito matcher report matcher r3", "$ r2 = $ r1 return set", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org mockito internal matcher any any", "r3 = org hamcrest matcher $ r0", "$ r1 = org mockito matcher report matcher r3", "$ r2 = $ r1 return list", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["z0 = @ parameter0", "r3 = new org mockito internal matcher equal", "$ r1 = java lang boolean value of z0", "specialinvoke r3 < init > $ r1", "r4 = org hamcrest matcher r3", "$ r2 = org mockito matcher report matcher r4", "$ z1 = $ r2 return false", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r4 = new org mockito internal matcher end with", "specialinvoke r4 < init > r0", "r5 = org hamcrest matcher r4", "$ r2 = org mockito matcher report matcher r5", "$ r3 = $ r2 return string", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["i0 = @ parameter0", "r2 = new org mockito verification after", "$ l1 = long i0", "$ r1 = org mockito internal verification verification mode factory time 1", "r3 = org mockito verification verification mode $ r1", "specialinvoke r2 < init > $ l1 r3", "r4 = org mockito verification verification after delay r2", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org mockito internal stub answer answer functional interface to answer r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org mockito argument matcher any object", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r1 = new org mockito internal matcher instance of", "specialinvoke r1 < init > class \\ `` ljava lang integer \\", "r2 = org mockito argument matcher r1", "org mockito argument matcher report matcher r2", "return 0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r1 = new org mockito internal matcher instance of", "specialinvoke r1 < init > class \\ `` ljava lang short \\", "r2 = org mockito argument matcher r1", "org mockito argument matcher report matcher r2", "return 0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "org mockito argument matcher report matcher r0", "return 0 0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "org mockito hamcrest mockito hamcrest report matcher r0", "$ r1 = r0 get class", "$ r2 = org mockito internal hamcrest matcher generic type extractor generic type of matcher $ r1", "$ r3 = org mockito internal util primitive default value $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "org mockito hamcrest mockito hamcrest report matcher r0", "return 0l"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "org mockito hamcrest mockito hamcrest report matcher r0", "return 0 0f"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org mockito internal configuration plugins plugins registry", "$ r1 = $ r0 get annotation engine", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org mockito internal configuration plugins plugins registry", "$ r1 = $ r0 get mockito logger", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org mockito internal runner runner factory $ 3", "r5 = org mockito internal runner runner factory r0", "specialinvoke r4 < init > r5", "r6 = org mockito internal runner runner factory r0", "r7 = org mockito internal util supplier r4", "$ r3 = r6 create r1 r7", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org mockito internal stub invocation container impl r0", "$ r3 = r4 do answer style stub", "$ r3 set answer r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org mockito internal util concurrent weak concurrent map r0", "$ r1 = r2 target", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org mockito internal util reflection instance field r0", "$ r1 = r2 field", "$ z0 = $ r1 be synthetic", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r1 = new org mockito internal junit verification collector impl", "specialinvoke r1 < init >", "r2 = org mockito junit verification collector r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org mockito internal verification verification mode factory at most once", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org mockito mockito mockito_core", "$ r0 validate mockito usage", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = org mockserver model format json", "r7 = org mockserver client mock server client r0", "r2 = r7 retrieve record request r1 $ r3", "$ z0 = org apache common lang3 string utils be not empty r2", "if $ z0 == 0 goto label1", "$ z1 = r2 equal \\ `` [ ] \\ ``", "if $ z1 ! = 0 goto label1", "r8 = org mockserver client mock server client r0", "$ r5 = r8 http request serializer", "$ r6 = $ r5 deserialize array r2", "return $ r6", "if $ z1 ! = 0 goto label1", "label $ r4 = newarray org mockserver model http request [ 0 ]", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org mockserver matcher time unlimited", "r4 = org mockserver client mock server client r0", "$ r3 = r4 when r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org mockserver model nottable string string r1", "r4 = org mockserver model http request r0", "$ r3 = r4 with method $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org mockserver model http request r0", "$ r2 = r3 with body r1", "r4 = org mockserver model http object $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org mockserver model http request r0", "$ r3 = r4 with cookie r1 r2", "r5 = org mockserver model http object $ r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org mockserver model http response r0", "$ r2 = r3 with cooky r1", "r4 = org mockserver model http object $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = new com github fge msgsimple provider static message source provider $ builder", "specialinvoke $ r0 < init > null", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = new com github fge msgsimple source map message source $ builder", "specialinvoke $ r0 < init > null", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = io smallrye mutiny group multi overflow r0", "$ r1 = r2 buffer 128", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = io smallrye mutiny operator multi builder never multi never", "$ r1 = io smallrye mutiny multi $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = io smallrye mutiny tuples tuple2 r0", "$ r1 = r2 item2", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = io smallrye mutiny unchecked unchecked bi consumer from r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 to bi consumer", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "specialinvoke r0 visit jump insn i0 r1", "r11 = org mvel2 asm common j s r inliner adapter r0", "$ r3 = r11 instruction", "$ r4 = $ r3 get last", "$ r5 = org mvel2 asm tree jump insn node $ r4", "r2 = $ r5 label", "if i0 ! = 168 goto label1", "r12 = org mvel2 asm common j s r inliner adapter r0", "$ r6 = r12 subroutine head", "$ z0 = $ r6 contain key r2", "if $ z0 ! = 0 goto label1", "r13 = org mvel2 asm common j s r inliner adapter r0", "$ r8 = r13 subroutine head", "r10 = new java util bit set", "specialinvoke r10 < init >", "$ r8 put r2 r10", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ i2 = i0 < < 8", "i1 = 1107296256 | $ i2", "r11 = org mvel2 asm tree try catch block node r0", "$ r1 = r11 visible type annotation", "if $ r1 == null goto label2", "r12 = org mvel2 asm tree try catch block node r0", "$ r5 = r12 visible type annotation", "r7 = $ r5 iterator", "label $ z1 = r7 have next", "if $ z1 == 0 goto label2", "$ r6 = r7 next", "r8 = org mvel2 asm tree type annotation node $ r6", "r8 type ref = i1", "goto label1", "if $ z1 == 0 goto label2", "label r13 = org mvel2 asm tree try catch block node r0", "$ r2 = r13 invisible type annotation", "if $ r2 == null goto label4", "r14 = org mvel2 asm tree try catch block node r0", "$ r3 = r14 invisible type annotation", "r9 = $ r3 iterator", "label $ z0 = r9 have next", "if $ z0 == 0 goto label4", "$ r4 = r9 next", "r10 = org mvel2 asm tree type annotation node $ r4", "r10 type ref = i1", "goto label3", "if $ z0 == 0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], []]}
{"nodes": ["r0 = @ this", "r1 = org mvel2 asm type reference r0", "$ i0 = r1 value", "$ i1 = $ i0 > > > 24", "return $ i1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org mvel2 m v e l interpret runtime", "specialinvoke $ r2 < init > r0", "$ r3 = $ r2 parse", "$ r4 = org mvel2 data conversion convert $ r3 r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = new org mvel2 m v e l interpret runtime", "specialinvoke $ r3 < init > r0 r1", "$ r4 = $ r3 parse", "$ r5 = org mvel2 data conversion convert $ r4 r2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r5 = new org mvel2 integration impl immutable default factory", "specialinvoke r5 < init >", "r6 = org mvel2 integration variable resolver factory r5", "$ r3 = org mvel2 mvel eval r0 r1 r6 class \\ `` ljava lang boolean \\ ``", "$ r4 = java lang boolean $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org mvel2 mvel execute expression r0 r1", "$ r4 = org mvel2 data conversion convert $ r3 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = com arjuna at arjuna common coordinator environment bean r0", "$ i0 = r1 max two phase commit thread", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com arjuna at arjuna common coordinator environment bean r0", "$ z0 = r1 classic prepare", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r13 = com arjuna at arjuna common core environment bean r0", "$ r3 = r13 process implementation", "if $ r3 ! = null goto label6", "r14 = com arjuna at arjuna common core environment bean r0", "$ r4 = r14 process implementation class name", "if $ r4 == null goto label6", "entermonitor r0", "label r15 = com arjuna at arjuna common core environment bean r0", "$ r6 = r15 process implementation", "if $ r6 ! = null goto label2", "r16 = com arjuna at arjuna common core environment bean r0", "$ r7 = r16 process implementation class name", "if $ r7 == null goto label2", "r17 = com arjuna at arjuna common core environment bean r0", "$ r8 = r17 process implementation class name", "$ r9 = com arjuna common internal util classloading utility load and instantiate class class \\ `` lcom arjuna at arjuna utils process \\", "$ r10 = com arjuna at arjuna utils process $ r9", "r18 = com arjuna at arjuna common core environment bean r0", "r18 process implementation = $ r10", "label exitmonitor r0", "label goto label6", "label r19 = com arjuna at arjuna common core environment bean r0", "$ r12 = r19 process implementation", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com arjuna at arjuna common object store environment bean r0", "r2 jdbc access = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com arjuna at arjuna common recovery environment bean r0", "r1 periodic recovery initilization offset = i0", "return null"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com arjuna at arjuna common recovery environment bean r0", "r1 recovery listener = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "entermonitor r0", "label if r1 ! = null goto label2", "r11 = new java util array list", "specialinvoke r11 < init >", "r14 = com arjuna at arjuna common recovery environment bean r0", "r14 recovery module = r11", "r12 = new java util array list", "specialinvoke r12 < init >", "r15 = com arjuna at arjuna common recovery environment bean r0", "r15 recovery module class name = r12", "goto label3", "label exitmonitor r0", "label goto label7", "label return", "label if r1 ! = null goto label2", "label r13 = new java util array list", "specialinvoke r13 < init > r1", "r16 = com arjuna at arjuna common recovery environment bean r0", "r16 recovery module = r13", "r17 = com arjuna at arjuna common recovery environment bean r0", "$ r7 = r17 recovery module", "r3 = com arjuna common internal util classloading utility get name for class $ r7", "r18 = com arjuna at arjuna common recovery environment bean r0", "r18 recovery module class name = r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["$ r0 = com arjuna at arjuna objectstore store manager get action store", "r1 = com arjuna at arjuna objectstore participant store $ r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "label $ r2 = com arjuna at arjuna tool osb util j m x server get agent", "r27 = $ r2 get server", "z1 = r27 be register r0", "$ r4 = java lang system out", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "if z0 == 0 goto label02", "$ r28 = \\ `` \\ ``", "goto label03", "label $ r5 = $ r3 append $ r28", "$ r6 = $ r5 append \\ `` register bean \\ ``", "$ r7 = $ r6 append r0", "$ r8 = $ r7 to string", "$ r4 println $ r8", "if z0 == 0 goto label05", "if z1 == 0 goto label05", "$ r16 = java lang system out", "$ r15 = new java lang string builder", "specialinvoke $ r15 < init >", "$ r17 = $ r15 append r0", "$ r18 = $ r17 append \\ `` be already registered\\ ``", "$ r19 = $ r18 to string", "$ r16 println $ r19", "label return 1", "if z1 == 0 goto label05", "label if z0 ! = 0 goto label07", "if z1 ! = 0 goto label07", "$ r11 = java lang system out", "$ r10 = new java lang string builder", "specialinvoke $ r10 < init >", "$ r12 = $ r10 append r0", "$ r13 = $ r12 append \\ `` be not registered\\ ``", "$ r14 = $ r13 to string", "$ r11 println $ r14", "label return 1", "if z1 ! = 0 goto label07", "label if z0 == 0 goto label08", "r27 register m bean r1 r0", "goto label09", "label return 1", "label if z0 == 0 goto label08", "label r27 unregister m bean r0", "if z0 == 0 goto label02", "label $ r28 = \\ `` un\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], [44], [45], [46], []]}
{"nodes": ["$ r0 = java lang thread current thread", "$ r1 = com arjuna at arjuna utils thread util get thread id $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com arjuna ats internal arjuna objectstore hornetq hornetq journal environment bean r0", "r1 buffer flush per second = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = com arjuna ats internal jta recovery arjunacore subordinate atomic action recovery module r0", "$ z0 = r1 recovery scan complete without error", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = new java util array list", "r4 = com arjuna at jta common j t a environment bean r0", "$ r2 = r4 xa recovery node", "specialinvoke r3 < init > $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "entermonitor r0", "label if r1 ! = null goto label2", "r10 = new java util array list", "specialinvoke r10 < init >", "r13 = com arjuna at jta common j t a environment bean r0", "r13 xa resource orphan filter = r10", "r11 = new java util array list", "specialinvoke r11 < init >", "r14 = com arjuna at jta common j t a environment bean r0", "r14 xa resource orphan filter class name = r11", "goto label3", "label exitmonitor r0", "label goto label7", "label return", "label if r1 ! = null goto label2", "label r15 = com arjuna at jta common j t a environment bean r0", "$ r5 = r15 xa resource orphan filter class name", "$ z0 = r1 equal $ r5", "if $ z0 ! = 0 goto label3", "r16 = com arjuna at jta common j t a environment bean r0", "r16 xa resource orphan filter = null", "r12 = new java util array list", "specialinvoke r12 < init > r1", "r17 = com arjuna at jta common j t a environment bean r0", "r17 xa resource orphan filter class name = r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = com arjuna at jta common j t a environment bean r0", "$ z0 = r1 xa assume recovery complete", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com arjuna at jta common j t a environment bean r0", "r2 transaction synchronization registry j n d i context = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "entermonitor r0", "label r7 = new java util array list", "r8 = com arjuna at jta common j t a environment bean r0", "$ r5 = r8 xa resource map class name", "specialinvoke r7 < init > $ r5", "exitmonitor r0", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com arjuna at jta common j t a environment bean r0", "r2 commit markable resource table name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = new javax name initial context", "specialinvoke $ r0 < init >", "com arjuna at jta utils j n d i manager bind j t a transaction manager implementation $ r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = com arjuna common log common logger logger", "$ z0 = $ r3 be trace enabled", "if $ z0 == 0 goto label1", "$ r6 = com arjuna common log common logger logger", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ r7 = $ r5 append \\ `` load class \\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 to string", "$ r6 trace $ r9", "label if r1 ! = null goto label2", "$ r4 = com arjuna common log common logger i18 n logger", "$ r4 warn_common_ classloading utility_1", "return null", "label if r1 ! = null goto label2", "label r2 = com arjuna common internal util classloading utility load class r1", "if r2 ! = null goto label3", "label r13 = r2 a subclass r0", "label return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r9 = org jboss narayana jta jms connection manager r0", "$ z0 = r9 be connect", "if $ z0 ! = 0 goto label1", "return", "if $ z0 ! = 0 goto label1", "label r10 = org jboss narayana jta jms connection manager r0", "$ r3 = r10 connection", "$ r3 close", "label r11 = org jboss narayana jta jms connection manager r0", "r11 connection = null", "r12 = org jboss narayana jta jms connection manager r0", "r12 session = null", "goto label6", "label return"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "i0 = @ parameter1", "r5 = org jboss narayana jta jms connection proxy r0", "$ r1 = r5 transaction helper", "$ z1 = $ r1 be transaction available", "if $ z1 == 0 goto label1", "r6 = org jboss narayana jta jms connection proxy r0", "$ r4 = specialinvoke r6 create and register session", "return $ r4", "if $ z1 == 0 goto label1", "label r7 = org jboss narayana jta jms connection proxy r0", "$ r2 = r7 xa connection", "$ r3 = $ r2 create session z0 i0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r5 = org jboss narayana jta jms jms x a resource recovery helper r0", "$ r1 = r5 connection manager", "$ r2 = jms x a resource recovery helper $ get transaction timeout__1 bootstrap $", "$ r3 = $ r1 connect and apply $ r2", "$ r4 = java lang integer $ r3", "$ i0 = $ r4 int value", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org cyberneko html h t m l configuration r0", "$ r2 = r3 f document scanner", "$ r2 push input source r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = io netty buffer byte buf r0", "$ l1 = r1 get long l e i0", "$ d0 = java lang double long bit to double $ l1", "return $ d0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r22 = io netty buffer pooled byte buf allocator r0", "$ r3 = r22 heap arena", "if $ r3 ! = null goto label1", "$ i1 = 0", "goto label2", "label r21 = new java lang string builder", "specialinvoke r21 < init > 512", "$ r6 = r21 append $ i1", "$ r7 = $ r6 append \\ `` heap arena s \\ ``", "$ r8 = io netty util internal string util newline", "r1 = $ r7 append $ r8", "if $ i1 < = 0 goto label4", "r24 = io netty buffer pooled byte buf allocator r0", "r18 = r24 heap arena", "i2 = lengthof r18", "i3 = 0", "label if i3 > = i2 goto label4", "r19 = r18 [ i3 ]", "r1 append r19", "i3 = i3 + 1", "goto label3", "label if i3 > = i2 goto label4", "label r25 = io netty buffer pooled byte buf allocator r0", "$ r9 = r25 direct arena", "if $ r9 ! = null goto label5", "$ i4 = 0", "goto label6", "label $ r11 = r1 append $ i4", "$ r12 = $ r11 append \\ `` direct arena s \\ ``", "$ r13 = io netty util internal string util newline", "$ r12 append $ r13", "if $ i4 < = 0 goto label8", "r27 = io netty buffer pooled byte buf allocator r0", "r20 = r27 direct arena", "i6 = lengthof r20", "i7 = 0", "label if i7 > = i6 goto label8", "r2 = r20 [ i7 ]", "r1 append r2", "i7 = i7 + 1", "goto label7", "label if i7 > = i6 goto label8", "label $ r15 = r1 to string", "return $ r15", "if $ r9 ! = null goto label5", "label r26 = io netty buffer pooled byte buf allocator r0", "$ r10 = r26 direct arena", "$ i4 = lengthof $ r10", "if $ r3 ! = null goto label1", "label r23 = io netty buffer pooled byte buf allocator r0", "$ r4 = r23 heap arena", "$ i1 = lengthof $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], [44], [], [46], [47], [48], [49], [50], [51], [52], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "i1 = @ parameter3", "$ r3 = r2 retain slice i0 i1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = io netty handler codec replay decoder r0", "$ r1 = r2 internal buffer", "$ i0 = $ r1 reader index", "r3 = io netty handler codec replay decoder r0", "r3 checkpoint = $ i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = io netty handler codec replay decoder r0", "$ r1 = r2 state", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io netty handler codec http default http header r0", "$ r3 = r5 header", "$ r3 set object r1 r2", "return r0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = \\ `` * \\ ``", "$ r2 = r0 get path", "$ z0 = $ r1 equal $ r2", "if $ z0 == 0 goto label1", "$ r3 = r0 get scheme", "if $ r3 ! = null goto label1", "$ r4 = r0 get scheme specific part", "if $ r4 ! = null goto label1", "$ r5 = r0 get host", "if $ r5 ! = null goto label1", "$ r6 = r0 get authority", "if $ r6 ! = null goto label1", "$ r7 = r0 get query", "if $ r7 ! = null goto label1", "$ r8 = r0 get fragment", "if $ r8 ! = null goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ r8 ! = null goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = r0 header", "$ r3 = io netty handler codec http http header name content_type", "r5 = java lang char sequence $ r3", "r1 = $ r2 get r5", "if r1 == null goto label1", "$ r4 = io netty handler codec http http util get charset a sequence r1", "return $ r4", "if r1 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r4 = io netty handler codec http multipart http post multipart request decoder r0", "specialinvoke r4 check destroy", "r5 = io netty handler codec http multipart http post multipart request decoder r0", "$ z0 = r5 be last chunk", "if $ z0 ! = 0 goto label1", "r3 = new io netty handler codec http multipart http post request decoder $ not enough data decoder exception", "specialinvoke r3 < init >", "r6 = java lang throwable r3", "throw r6", "if $ z0 ! = 0 goto label1", "label r7 = io netty handler codec http multipart http post multipart request decoder r0", "$ r1 = r7 body list http data", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io netty handler codec http multipart http post multipart request decoder r0", "specialinvoke r4 check destroy", "r5 = io netty handler codec http multipart http post multipart request decoder r0", "$ r3 = r5 factory", "r6 = io netty handler codec http multipart http post multipart request decoder r0", "$ r2 = r6 request", "$ r3 remove http data from clean $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r4 = io netty handler codec http websocketx continuation web socket frame r0", "$ r1 = r4 content", "$ r2 = io netty util charset util utf_8", "$ r3 = $ r1 to string $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = io netty handler codec http websocketx web socket chunk input r0", "$ r3 = r8 input", "$ r4 = $ r3 read chunk r1", "r2 = io netty buffer byte buf $ r4", "if r2 ! = null goto label1", "return null", "if r2 ! = null goto label1", "label r7 = new io netty handler codec http websocketx continuation web socket frame", "r9 = io netty handler codec http websocketx web socket chunk input r0", "$ r6 = r9 input", "$ z0 = $ r6 be end of input", "r10 = io netty handler codec http websocketx web socket chunk input r0", "$ i0 = r10 rsv", "specialinvoke r7 < init > $ z0 $ i0 r2", "r11 = io netty handler codec http websocketx web socket frame r7", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = io netty handler codec http websocketx web socket server handshaker r0", "$ r1 = r2 uri", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = io netty handler codec http2 abstract http2 connection handler builder r0", "$ r1 = r3 max reserve stream", "if $ r1 == null goto label1", "r4 = io netty handler codec http2 abstract http2 connection handler builder r0", "$ r2 = r4 max reserve stream", "$ i0 = $ r2 int value", "goto label2", "label return $ i0", "if $ r1 == null goto label1", "label $ i0 = 100"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = io netty handler codec http2 abstract http2 connection handler builder r0", "$ r1 = r3 max reserve stream", "if $ r1 == null goto label1", "r4 = io netty handler codec http2 abstract http2 connection handler builder r0", "$ r2 = r4 max reserve stream", "$ i0 = $ r2 int value", "goto label2", "label return $ i0", "if $ r1 == null goto label1", "label $ i0 = 100"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = io netty handler codec http2 abstract http2 connection handler builder r0", "$ r1 = r2 self", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = io netty handler codec http2 abstract http2 connection handler builder r0", "$ i0 = r1 max consecutive empty frame", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io netty handler codec http2 hpack decoder r0", "$ r1 = r2 hpack dynamic table", "$ l0 = $ r1 capacity", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = r1 size", "$ l2 = long i0", "r5 = io netty handler codec http2 hpack dynamic table r0", "$ l1 = r5 capacity", "$ b3 = $ l2 cmp $ l1", "if $ b3 < = 0 goto label1", "r6 = io netty handler codec http2 hpack dynamic table r0", "r6 clear", "return", "if $ b3 < = 0 goto label1", "label r7 = io netty handler codec http2 hpack dynamic table r0", "$ l5 = r7 capacity", "r8 = io netty handler codec http2 hpack dynamic table r0", "$ l4 = r8 size", "$ l7 = $ l5 - $ l4", "$ l6 = long i0", "$ b8 = $ l7 cmp $ l6", "if $ b8 > = 0 goto label2", "r9 = io netty handler codec http2 hpack dynamic table r0", "r9 remove", "goto label1", "if $ b8 > = 0 goto label2", "label r10 = io netty handler codec http2 hpack dynamic table r0", "$ r2 = r10 hpack header field", "r11 = io netty handler codec http2 hpack dynamic table r0", "$ i9 = r11 head", "$ i10 = $ i9 + 1", "r12 = io netty handler codec http2 hpack dynamic table r0", "r12 head = $ i10", "$ r2 [ $ i9 ] = r1", "r13 = io netty handler codec http2 hpack dynamic table r0", "$ l11 = r13 size", "$ i12 = r1 size", "$ l13 = long $ i12", "$ l14 = $ l11 + $ l13", "r14 = io netty handler codec http2 hpack dynamic table r0", "r14 size = $ l14", "r15 = io netty handler codec http2 hpack dynamic table r0", "$ i16 = r15 head", "r16 = io netty handler codec http2 hpack dynamic table r0", "$ r3 = r16 hpack header field", "$ i15 = lengthof $ r3", "if $ i16 ! = $ i15 goto label3", "r17 = io netty handler codec http2 hpack dynamic table r0", "r17 head = 0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], []]}
{"nodes": ["r0 = @ this", "label r3 = io netty handler codec http2 hpack dynamic table r0", "$ i4 = r3 tail", "r4 = io netty handler codec http2 hpack dynamic table r0", "$ i5 = r4 head", "if $ i4 == $ i5 goto label2", "r5 = io netty handler codec http2 hpack dynamic table r0", "$ r1 = r5 hpack header field", "r6 = io netty handler codec http2 hpack dynamic table r0", "$ i0 = r6 tail", "$ i1 = $ i0 + 1", "r7 = io netty handler codec http2 hpack dynamic table r0", "r7 tail = $ i1", "$ r1 [ $ i0 ] = null", "r8 = io netty handler codec http2 hpack dynamic table r0", "$ i3 = r8 tail", "r9 = io netty handler codec http2 hpack dynamic table r0", "$ r2 = r9 hpack header field", "$ i2 = lengthof $ r2", "if $ i3 ! = $ i2 goto label1", "r10 = io netty handler codec http2 hpack dynamic table r0", "r10 tail = 0", "goto label1", "if $ i4 == $ i5 goto label2", "label r11 = io netty handler codec http2 hpack dynamic table r0", "r11 head = 0", "r12 = io netty handler codec http2 hpack dynamic table r0", "r12 tail = 0", "r13 = io netty handler codec http2 hpack dynamic table r0", "r13 size = 0l", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "io netty util internal object util check not null r1 \\ `` out\\ ``", "$ z0 = r2 instanceof io netty util ascii string", "if $ z0 == 0 goto label8", "r3 = io netty util ascii string r2", "label r14 = io netty handler codec http2 hpack huffman encoder r0", "$ r7 = r14 encode processor", "$ r7 out = r1", "r15 = io netty handler codec http2 hpack huffman encoder r0", "$ r8 = r15 encode processor", "r16 = io netty util byte processor $ r8", "r3 for each byte r16", "label r17 = io netty handler codec http2 hpack huffman encoder r0", "$ r9 = r17 encode processor", "$ r9 end", "goto label7", "label goto label9", "label return", "if $ z0 == 0 goto label8", "label r20 = io netty handler codec http2 hpack huffman encoder r0", "specialinvoke r20 encode slow path r1 r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = io netty handler codec http2 http2 error r0", "$ l0 = r1 code", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io netty handler codec http2 http2 flag r0", "$ s0 = r1 value", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io netty handler codec http2 http2 flag r0", "$ z0 = r1 be flag set 1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io netty handler codec http2 stream buffer encoder r0", "$ r1 = r2 pending stream", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io netty handler codec sock sock response r0", "$ r1 = r2 response type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r0 ! = r1 goto label1", "return 0", "if r0 ! = r1 goto label1", "label r3 = io netty util ascii string r0", "i1 = r3 length", "i2 = r1 length", "i3 = java lang math min i1 i2", "i8 = 0", "r4 = io netty util ascii string r0", "i9 = r4 array offset", "label if i8 > = i3 goto label4", "r5 = io netty util ascii string r0", "$ r2 = r5 value", "$ b5 = $ r2 [ i9 ]", "$ c6 = io netty util ascii string b2c $ b5", "$ c7 = r1 char at i8", "i0 = $ c6 - $ c7", "if i0 == 0 goto label3", "return i0", "if i0 == 0 goto label3", "label i8 = i8 + 1", "i9 = i9 + 1", "goto label2", "label if i8 > = i3 goto label4", "label $ i4 = i1 - i2", "return $ i4"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "$ i1 = r1 length", "r2 = io netty util ascii string r0", "$ z0 = r2 region match i0 r1 0 $ i1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io agroal api configuration supplier agroal connection factory configuration supplier r0", "specialinvoke r2 check lock", "r3 = io agroal api configuration supplier agroal connection factory configuration supplier r0", "r3 principal = r1", "r4 = io agroal api configuration supplier agroal connection factory configuration supplier r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ z0 = r3 be in strict type check mode", "if $ z0 == 0 goto label1", "$ z1 = org assertj core api recursive comparison recursive comparison difference calculator expect type be not subtype of actual type r1 r2", "if $ z1 == 0 goto label1", "$ r9 = newarray org assertj core api recursive comparison comparison difference [ 1 ]", "$ r10 = org assertj core api recursive comparison recursive comparison difference calculator expect and actual type difference r1 r2", "$ r9 [ 0 ] = $ r10", "$ r11 = org assertj core util list list $ r9", "return $ r11", "if $ z1 == 0 goto label1", "label $ r6 = newarray java lang string [ 0 ]", "r4 = org assertj core util list list $ r6", "$ r7 = newarray org assertj core api recursive comparison dual value [ 0 ]", "r5 = org assertj core util list list $ r7", "$ r8 = org assertj core api recursive comparison recursive comparison difference calculator determine difference r1 r2 r4 1 r5 r3", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = net bytebuddy description type type description $ for load type of r1", "r6 = net bytebuddy byte buddy r0", "$ r5 = r6 rebase $ r4 r2 r3", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r3 = new net bytebuddy implementation bytecode collection array factory", "r4 = net bytebuddy description type type definition r0", "$ r2 = net bytebuddy implementation bytecode collection array factory make array creator for r4", "specialinvoke r3 < init > r0 $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = new org apache common compress change change set performer $ archive input stream iterator", "specialinvoke r5 < init > r1", "r6 = org apache common compress change change set performer r0", "r7 = org apache common compress change change set performer $ archive entry iterator r5", "$ r4 = specialinvoke r6 perform r7 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache common compress compressor compressor stream factory r0", "$ z0 = r4 decompress concatenate", "r5 = org apache common compress compressor compressor stream factory r0", "$ r3 = r5 create compressor input stream r1 r2 $ z0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org apache common io filefilter or file filter", "specialinvoke r3 < init > r0 r1", "r4 = org apache common io filefilter i o file filter r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache common math3 geometry euclidean threed rotation convention vector_operator", "r4 = org apache common math3 geometry euclidean threed field rotation r0", "$ r3 = r4 compose inverse r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org apache common math3 geometry euclidean threed field rotation", "$ r3 = r1 q0", "$ d0 = r0 get q0", "$ r4 = $ r3 multiply $ d0", "$ r5 = org apache common math3 real field element $ r4", "$ r6 = r1 q1", "$ d1 = r0 get q1", "$ r7 = $ r6 multiply $ d1", "$ r8 = org apache common math3 real field element $ r7", "$ r9 = r1 q2", "$ d2 = r0 get q2", "$ r10 = $ r9 multiply $ d2", "$ r11 = $ r8 add $ r10", "$ r12 = org apache common math3 real field element $ r11", "$ r13 = r1 q3", "$ d3 = r0 get q3", "$ r14 = $ r13 multiply $ d3", "$ r15 = $ r12 add $ r14", "$ r16 = $ r5 add $ r15", "$ r17 = org apache common math3 real field element $ r16", "$ r18 = $ r17 negate", "$ r19 = org apache common math3 real field element $ r18", "$ r20 = r1 q0", "$ d4 = r0 get q1", "$ r21 = $ r20 multiply $ d4", "$ r22 = org apache common math3 real field element $ r21", "$ r23 = r1 q2", "$ d5 = r0 get q3", "$ r24 = $ r23 multiply $ d5", "$ r25 = org apache common math3 real field element $ r24", "$ r26 = r1 q3", "$ d6 = r0 get q2", "$ r27 = $ r26 multiply $ d6", "$ r28 = $ r25 subtract $ r27", "$ r29 = $ r22 add $ r28", "$ r30 = org apache common math3 real field element $ r29", "$ r31 = r1 q1", "$ d7 = r0 get q0", "$ r32 = $ r31 multiply $ d7", "$ r33 = $ r30 subtract $ r32", "$ r34 = org apache common math3 real field element $ r33", "$ r35 = r1 q0", "$ d8 = r0 get q2", "$ r36 = $ r35 multiply $ d8", "$ r37 = org apache common math3 real field element $ r36", "$ r38 = r1 q3", "$ d9 = r0 get q1", "$ r39 = $ r38 multiply $ d9", "$ r40 = org apache common math3 real field element $ r39", "$ r41 = r1 q1", "$ d10 = r0 get q3", "$ r42 = $ r41 multiply $ d10", "$ r43 = $ r40 subtract $ r42", "$ r44 = $ r37 add $ r43", "$ r45 = org apache common math3 real field element $ r44", "$ r46 = r1 q2", "$ d11 = r0 get q0", "$ r47 = $ r46 multiply $ d11", "$ r48 = $ r45 subtract $ r47", "$ r49 = org apache common math3 real field element $ r48", "$ r50 = r1 q0", "$ d12 = r0 get q3", "$ r51 = $ r50 multiply $ d12", "$ r52 = org apache common math3 real field element $ r51", "$ r53 = r1 q1", "$ d13 = r0 get q2", "$ r54 = $ r53 multiply $ d13", "$ r55 = org apache common math3 real field element $ r54", "$ r56 = r1 q2", "$ d14 = r0 get q1", "$ r57 = $ r56 multiply $ d14", "$ r58 = $ r55 subtract $ r57", "$ r59 = $ r52 add $ r58", "$ r60 = org apache common math3 real field element $ r59", "$ r61 = r1 q3", "$ d15 = r0 get q0", "$ r62 = $ r61 multiply $ d15", "$ r63 = $ r60 subtract $ r62", "$ r64 = org apache common math3 real field element $ r63", "specialinvoke $ r2 < init > $ r19 $ r34 $ r49 $ r64 0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 distance1 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ d4 = r2 get x", "$ d5 = r1 get x", "d0 = $ d4 - $ d5", "r3 = org apache common math3 geometry euclidean twod vector2 d r0", "$ d6 = r3 get y", "$ d7 = r1 get y", "d1 = $ d6 - $ d7", "r4 = org apache common math3 geometry euclidean twod vector2 d r0", "$ d8 = r4 get x", "$ d9 = r1 get x", "d2 = $ d8 - $ d9", "$ d10 = r2 get y", "$ d11 = r1 get y", "d3 = $ d10 - $ d11", "$ d12 = neg d2", "$ d13 = org apache common math3 util math array linear combination d0 d1 $ d12 d3", "return $ d13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data autodiscover configuration outlook outlook protocol r0", "r2 protocol type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new microsoft exchange webservices data autodiscover exception error autodiscover error", "specialinvoke $ r2 < init >", "$ r3 = r0 read attribute value \\ `` time\\ ``", "$ r2 time = $ r3", "$ r4 = r0 read attribute value \\ `` id\\ ``", "$ r2 id = $ r4", "label r0 read", "$ r5 = r0 get node type", "$ i0 = $ r5 get node type", "if $ i0 ! = 1 goto label5", "$ r6 = r0 get local name", "$ z0 = $ r6 equal ignore case \\ `` error code\\ ``", "if $ z0 == 0 goto label2", "$ r11 = r0 read element value class \\ `` ljava lang integer \\ ``", "$ r12 = java lang integer $ r11", "$ i1 = $ r12 int value", "$ r2 error code = $ i1", "goto label5", "label $ r13 = microsoft exchange webservices data core enumeration misc xml namespace not specify", "$ z3 = r0 be end element $ r13 \\ `` error\\ ``", "if $ z3 == 0 goto label1", "return $ r2", "if $ z0 == 0 goto label2", "label $ r7 = r0 get local name", "$ z1 = $ r7 equal ignore case \\ `` message\\ ``", "if $ z1 == 0 goto label3", "$ r10 = r0 read element value", "$ r2 message = $ r10", "if $ z1 == 0 goto label3", "label $ r8 = r0 get local name", "$ z2 = $ r8 equal ignore case \\ `` debug data\\ ``", "if $ z2 == 0 goto label4", "$ r9 = r0 read element value", "$ r2 debug data = $ r9", "if $ z2 == 0 goto label4", "label r0 skip current element"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new microsoft exchange webservices data autodiscover protocol connection", "specialinvoke $ r2 < init >", "label r0 read", "$ r3 = r0 get node type", "$ i0 = $ r3 get node type", "if $ i0 ! = 1 goto label4", "$ r4 = r0 get local name", "$ z0 = $ r4 equal \\ `` encryption method\\ ``", "if $ z0 == 0 goto label2", "$ r12 = r0 read element value class \\ `` ljava lang string \\ ``", "$ r13 = java lang string $ r12", "$ r2 set encryption method $ r13", "goto label4", "label $ r14 = microsoft exchange webservices data core enumeration misc xml namespace autodiscover", "$ z3 = r0 be end element $ r14 \\ `` protocol connection\\ ``", "if $ z3 == 0 goto label1", "return $ r2", "if $ z0 == 0 goto label2", "label $ r5 = r0 get local name", "$ z1 = $ r5 equal \\ `` hostname\\ ``", "if $ z1 == 0 goto label3", "$ r10 = r0 read element value class \\ `` ljava lang string \\ ``", "$ r11 = java lang string $ r10", "$ r2 set hostname $ r11", "if $ z1 == 0 goto label3", "label $ r6 = r0 get local name", "$ z2 = $ r6 equal \\ `` port\\ ``", "if $ z2 == 0 goto label4", "$ r7 = java lang integer type", "$ r8 = r0 read element value $ r7", "$ r9 = java lang integer $ r8", "$ i1 = $ r9 int value", "$ r2 set port $ i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new microsoft exchange webservices data autodiscover web client url collection", "specialinvoke $ r2 < init >", "label r0 read", "$ r3 = r0 get node type", "$ i0 = $ r3 get node type", "if $ i0 ! = 1 goto label2", "$ r4 = r0 get local name", "$ z0 = $ r4 equal \\ `` web client url\\ ``", "if $ z0 == 0 goto label2", "$ r5 = $ r2 get urls", "$ r6 = microsoft exchange webservices data autodiscover web client url load from xml r0", "$ r5 add $ r6", "label $ r7 = microsoft exchange webservices data core enumeration misc xml namespace autodiscover", "$ z2 = r0 be end element $ r7 \\ `` web client urls\\ ``", "if $ z2 == 0 goto label1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core exception service remote update inbox rule exception r0", "$ r1 = r2 error", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r11 = new microsoft exchange webservices data core request copy folder request", "$ r6 = microsoft exchange webservices data core enumeration service error service error handle throw on error", "r12 = microsoft exchange webservices data core exchange service r0", "specialinvoke r11 < init > r12 $ r6", "r11 set destination folder id r2", "$ r7 = r11 get folder id", "$ r7 add r1", "r4 = r11 execute", "$ r8 = r4 get response at index 0", "$ r9 = microsoft exchange webservices data core response move copy folder response $ r8", "$ r10 = $ r9 get folder", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = microsoft exchange webservices data core exchange service r0", "r10 = java util concurrent future r1", "$ r3 = microsoft exchange webservices data misc async request result extract service request r9 r10", "r2 = microsoft exchange webservices data core request subscribe to push notification request $ r3", "$ r4 = r2 end execute r1", "$ r5 = $ r4 get response at index 0", "$ r6 = microsoft exchange webservices data core response subscribe response $ r5", "$ r7 = $ r6 get subscription", "$ r8 = microsoft exchange webservices data notification push subscription $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request add delegate request r0", "$ r1 = r2 meeting request delivery scope", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data core request update item request r0", "r2 send invitation or cancellation mode = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "microsoft exchange webservices data core ew utility validate param r1 \\ `` view\\ ``", "$ r3 = microsoft exchange webservices data search filter search filter null", "r7 = microsoft exchange webservices data core service folder calendar folder r0", "r8 = microsoft exchange webservices data search view base r1", "r2 = r7 internal find item $ r3 r8 null", "$ r4 = r2 get response at index 0", "$ r5 = microsoft exchange webservices data core response find item response $ r4", "$ r6 = $ r5 get result", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new microsoft exchange webservices data property complex folder id", "specialinvoke r4 < init > r1", "r5 = microsoft exchange webservices data core service folder folder r0", "$ r3 = r5 move r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new microsoft exchange webservices data property complex folder id", "specialinvoke r4 < init > r1", "r5 = microsoft exchange webservices data core service item appointment r0", "r5 internal create r4 null r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = microsoft exchange webservices data core service item appointment r0", "r3 internal delete r1 r2 null", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r11 = microsoft exchange webservices data core service response response object r0", "$ r3 = r11 get property bag", "$ r4 = microsoft exchange webservices data core service schema response object schema reference item id", "$ r5 = $ r3 get object from property definition $ r4", "$ r7 = microsoft exchange webservices data property complex item id $ r5", "r12 = microsoft exchange webservices data core service response response object r0", "$ r6 = r12 reference item", "$ r8 = $ r6 get id", "r13 = microsoft exchange webservices data property complex service id $ r8", "$ r7 assign r13", "r14 = microsoft exchange webservices data core service response response object r0", "$ r9 = r14 get service", "$ r10 = $ r9 internal create response object r0 r1 r2", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = microsoft exchange webservices data notification stream subscription connection r0", "$ r2 = r3 on notification event", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data property complex delegate permission r0", "$ r1 = r5 delegate folder permission", "$ r2 = $ r1 get \\ `` note folder permission level\\ ``", "$ r3 = microsoft exchange webservices data property complex delegate permission $ delegate folder permission $ r2", "$ r4 = $ r3 get permission level", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 ! = null goto label1", "r10 = microsoft exchange webservices data property complex im address dictionary r0", "r10 internal remove r1", "goto label3", "label return", "if r2 ! = null goto label1", "label r11 = microsoft exchange webservices data property complex im address dictionary r0", "$ r3 = r11 get entry", "$ z0 = $ r3 contain key r1", "if $ z0 == 0 goto label2", "r12 = microsoft exchange webservices data property complex im address dictionary r0", "$ r5 = r12 get entry", "$ r6 = $ r5 get r1", "r7 = microsoft exchange webservices data property complex im address entry $ r6", "r7 set im address r2", "r13 = microsoft exchange webservices data property complex im address dictionary r0", "r13 change", "if $ z0 == 0 goto label2", "label r9 = new microsoft exchange webservices data property complex im address entry", "specialinvoke r9 < init > r1 r2", "r14 = microsoft exchange webservices data property complex im address dictionary r0", "r15 = microsoft exchange webservices data property complex dictionary entry property r9", "r14 internal add r15"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = graphql execution value resolver $ value mode literal", "$ r4 = graphql execution value resolver value to literal r0 r1 r2 $ r3", "$ r5 = graphql language value $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r2 = @ parameter2", "i0 = @ parameter3", "r3 = @ parameter4", "r4 = @ parameter5", "r5 = @ parameter6", "r6 = @ parameter7", "r8 = org codehaus groovy classgen verifier r0", "r8 add method r1 z0 r2 i0 r3 r4 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r5 = org hibernate cache spi support entity non strict read write access r0", "$ r4 = r5 get storage access", "$ r4 remove from cache r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r8 = new org hibernate lock option", "specialinvoke r8 < init >", "$ r6 = r8 set lock mode r3", "r9 = org hibernate persister entity abstract entity persister r0", "$ r7 = r9 load r1 r2 $ r6 r4", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r51 = @ parameter4", "if r0 == null goto label01", "if r1 ! = null goto label02", "label r62 = new java lang illegal argument exception", "r61 = new java lang string builder", "specialinvoke r61 < init >", "$ r7 = r61 append \\ `` inject me=\\ ``", "$ r8 = $ r7 append r0", "$ r9 = $ r8 append \\ `` method=\\ ``", "$ r10 = $ r9 append r1", "$ r11 = $ r10 to string", "specialinvoke r62 < init > $ r11", "throw r62", "if r1 ! = null goto label02", "label if r51 ! = null goto label03", "r51 = newarray org glassfish hk2 api method parameter [ 0 ]", "label $ r12 = r1 get parameter type", "i0 = lengthof $ r12", "r63 = new java util hash map", "specialinvoke r63 < init >", "r52 = r51", "i2 = lengthof r51", "i3 = 0", "label if i3 > = i2 goto label08", "r53 = r52 [ i3 ]", "i4 = r53 get parameter position", "$ r33 = java lang integer value of i4", "$ z1 = r63 contain key $ r33", "if $ z1 == 0 goto label05", "r65 = new java lang illegal argument exception", "r64 = new java lang string builder", "specialinvoke r64 < init >", "$ r45 = r64 append \\ `` the give value contain more than one value for index \\ ``", "$ r46 = $ r45 append i4", "$ r47 = $ r46 to string", "specialinvoke r65 < init > $ r47", "throw r65", "if $ z1 == 0 goto label05", "label $ r34 = java lang integer value of i4", "r63 put $ r34 r53", "if i4 < 0 goto label06", "if i4 < i0 goto label07", "label r67 = new java lang illegal argument exception", "r66 = new java lang string builder", "specialinvoke r66 < init >", "$ r38 = r66 append \\ `` index of \\ ``", "$ r39 = $ r38 append r53", "$ r40 = $ r39 append \\ `` be out of range of the method parameter \\ ``", "$ r41 = $ r40 append r1", "$ r42 = $ r41 to string", "specialinvoke r67 < init > $ r42", "throw r67", "if i4 < i0 goto label07", "label i3 = i3 + 1", "goto label04", "label if i3 > = i2 goto label08", "label $ r14 = r0 get class", "r54 = org jvnet hk2 internal utility get method injectees $ r14 r1 null r63", "r55 = newarray java lang object [ i0 ]", "i5 = 0", "label $ i1 = r54 size", "if i5 > = $ i1 goto label13", "$ r16 = r54 get i5", "r56 = org jvnet hk2 internal system injectee impl $ r16", "if r56 ! = null goto label11", "$ r19 = java lang integer value of i5", "$ r20 = r63 get $ r19", "r57 = org glassfish hk2 api method parameter $ r20", "if r57 ! = null goto label10", "r69 = new java lang assertion error", "r68 = new java lang string builder", "specialinvoke r68 < init >", "$ r24 = r68 append \\ `` error get value \\ ``", "$ r25 = $ r24 append i5", "$ r26 = $ r25 append \\ `` method=\\ ``", "$ r27 = $ r26 append r1", "$ r28 = $ r27 append \\ `` inject me=\\ ``", "$ r29 = $ r28 append r0", "$ r30 = $ r29 append \\ `` know values=\\ ``", "$ r31 = $ r30 append r63", "$ r32 = $ r31 to string", "specialinvoke r69 < init > $ r32", "throw r69", "if r57 ! = null goto label10", "label $ r21 = r57 get parameter value", "r55 [ i5 ] = $ r21", "goto label12", "label i5 = i5 + 1", "goto label09", "if r56 ! = null goto label11", "label $ r17 = r2 get per locator utility", "r71 = org glassfish hk2 api injectee r56", "r58 = $ r17 get injection resolver r2 r71", "r72 = org glassfish hk2 api injectee r56", "$ r18 = r58 resolve r72 r3", "r55 [ i5 ] = $ r18", "if i5 > = $ i1 goto label13", "label $ z0 = r2 get neutral context class loader", "$ r15 = org glassfish hk2 utility reflection reflection helper invoke r0 r1 r55 $ z0", "label return $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [], [57], [58], [], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [], [88], [89], [90], [], [92], [], [94], [95], [96], [97], [98], [99], [100], [101], [102], [103], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "return null"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "return null"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com fasterxml jackson databind cfg mapper config base r0", "$ r2 = r5 _base", "$ r3 = $ r2 with appended annotation introspector r1", "r6 = com fasterxml jackson databind cfg mapper config base r0", "$ r4 = r6 _with base $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new com fasterxml jackson databind introspect basic bean description", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new com fasterxml jackson databind ser impl unwrapping bean property writer", "r4 = com fasterxml jackson databind ser bean property writer r0", "specialinvoke r3 < init > r4 r1", "r5 = com fasterxml jackson databind ser bean property writer r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = $ r4 append \\ `` unexpected token \\ ``", "$ r6 = r1 get current token", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append \\ `` expect \\ ``", "$ r9 = $ r8 append r2", "$ r10 = $ r9 append \\ `` \\ ``", "$ r11 = $ r10 append r3", "$ r12 = $ r11 to string", "$ r13 = com fasterxml jackson databind json map exception from r1 $ r12", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = r1 get upper bound", "$ r4 = $ r3 [ 0 ]", "r6 = com fasterxml jackson databind type type factory r0", "$ r5 = r6 _construct type $ r4 r2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = com github javaparser symbolsolver javassistmodel javassist class declaration r0", "$ r3 = r10 internal type", "$ r4 = $ r3 stream", "$ r5 = javassist class declaration $ lambda_get internal type_0__2 bootstrap $ r1", "$ r6 = $ r4 filter $ r5", "r2 = $ r6 find first", "$ r7 = javassist class declaration $ lambda_get internal type_1__3 bootstrap $ r1", "$ r8 = r2 or else throw $ r7", "$ r9 = com github javaparser resolution declaration resolve reference type declaration $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = new javassist scopedpool scoped class pool", "specialinvoke $ r4 < init > r1 r2 r3 0", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "entermonitor r0", "label $ r4 = org jboss tm transaction local delegate impl synchronization by transaction", "$ r5 = $ r4 get r0", "r18 = org jboss tm transaction local delegate impl $ transaction local synchronization $ r5", "if r18 ! = null goto label07", "if z0 ! = 1 goto label07", "r22 = new org jboss tm transaction local delegate impl $ transaction local synchronization", "specialinvoke r22 < init > r0", "r18 = r22", "label r26 = javax transaction synchronization r22", "r0 register synchronization r26", "label goto label06", "label $ r7 = org jboss tm transaction local delegate impl synchronization by transaction", "$ r7 put r0 r22", "label exitmonitor r0", "label return r18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "r2 = @ parameter3", "r3 = @ parameter4", "r4 = @ parameter5", "r5 = @ parameter6", "if i0 ! = 80 goto label1", "$ r7 = org eclipse jetty http http scheme http", "$ z1 = $ r7 be r0", "if $ z1 == 0 goto label1", "i0 = 0", "label if i0 ! = 443 goto label2", "$ r6 = org eclipse jetty http http scheme http", "$ z0 = $ r6 be r0", "if $ z0 == 0 goto label2", "label $ r8 = new org eclipse jetty http http u r i", "specialinvoke $ r8 < init > r0 r1 i0 r2 r3 r4 r5", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com github fge jsonschema core tree key schema key for json ref r1", "r5 = com github fge jsonschema core load dereferencing r0", "$ r4 = r5 new tree $ r3 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = com github fge jsonschema library keyword builder bundle", "$ r2 = newarray java lang object [ 1 ]", "r6 = com github fge jsonschema library keyword builder r0", "$ r3 = r6 name", "$ r2 [ 0 ] = $ r3", "$ r4 check not null printf r1 \\ `` null syntax checker\\", "r7 = com github fge jsonschema library keyword builder r0", "r7 syntax checker = r1", "r8 = com github fge jsonschema library keyword builder r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r1 get class", "$ z0 = r0 be assignable from $ r2", "if $ z0 == 0 goto label1", "return r1", "if $ z0 == 0 goto label1", "label r11 = new org apache log log4j core config configuration exception", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r5 = r10 append \\ `` configuration have multiple incompatible appenders point to the same resource \\'\\ ``", "$ r6 = r1 get name", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append \\ `` \\'\\ ``", "$ r9 = $ r8 to string", "specialinvoke r11 < init > $ r9", "r12 = java lang throwable r11", "throw r12"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache log log4j core config plugins util plugin builder r0", "r2 configuration = r1", "r3 = org apache log log4j core config plugins util plugin builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "$ r5 = new io smallrye mutiny operator multi item combine4", "$ r6 = newarray org reactivestreams publisher [ 4 ]", "$ r7 = io smallrye mutiny helper parameter validation non null r1 \\ `` a\\ ``", "$ r8 = org reactivestreams publisher $ r7", "$ r6 [ 0 ] = $ r8", "$ r9 = io smallrye mutiny helper parameter validation non null r2 \\ `` b\\ ``", "$ r10 = org reactivestreams publisher $ r9", "$ r6 [ 1 ] = $ r10", "$ r11 = io smallrye mutiny helper parameter validation non null r3 \\ `` c\\ ``", "$ r12 = org reactivestreams publisher $ r11", "$ r6 [ 2 ] = $ r12", "$ r13 = io smallrye mutiny helper parameter validation non null r4 \\ `` d\\ ``", "$ r14 = org reactivestreams publisher $ r13", "$ r6 [ 3 ] = $ r14", "$ r15 = java util array a list $ r6", "specialinvoke $ r5 < init > $ r15", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r10 = r1 header", "$ r11 = io netty handler codec http http header name sec_websocket_key", "r47 = java lang char sequence $ r11", "r3 = $ r10 get r47", "if r3 ! = null goto label1", "r44 = new io netty handler codec http websocketx web socket server handshake exception", "r48 = io netty handler codec http http request r1", "specialinvoke r44 < init > \\ `` not a web socket request miss key\\", "r49 = java lang throwable r44", "throw r49", "if r3 ! = null goto label1", "label r45 = new io netty handler codec http default full http response", "$ r13 = io netty handler codec http http version http_1_1", "$ r14 = io netty handler codec http http response status switching_protocols", "$ r15 = r1 content", "$ r16 = $ r15 alloc", "$ r17 = $ r16 buffer 0", "specialinvoke r45 < init > $ r13 $ r14 $ r17", "if r2 == null goto label2", "r50 = io netty handler codec http full http response r45", "$ r41 = r50 header", "$ r41 add r2", "label r46 = new java lang string builder", "specialinvoke r46 < init >", "$ r19 = r46 append r3", "$ r20 = $ r19 append \\ `` 258eafa5-e914-47da-95ca-c5ab0dc85b11\\ ``", "r5 = $ r20 to string", "$ r21 = io netty util charset util us_ascii", "$ r22 = r5 get bytes $ r21", "r6 = io netty handler codec http websocketx web socket util sha1 $ r22", "r7 = io netty handler codec http websocketx web socket util base64 r6", "$ r23 = io netty handler codec http websocketx web socket server handshaker13 logger", "$ z0 = $ r23 be debug enabled", "if $ z0 == 0 goto label3", "$ r40 = io netty handler codec http websocketx web socket server handshaker13 logger", "$ r40 debug \\ `` web socket version 13 server handshake key { } response { } \\", "label r51 = io netty handler codec http full http response r45", "$ r24 = r51 header", "$ r26 = io netty handler codec http http header name upgrade", "$ r25 = io netty handler codec http http header value websocket", "r52 = java lang char sequence $ r26", "$ r27 = $ r24 set r52 $ r25", "$ r29 = io netty handler codec http http header name connection", "$ r28 = io netty handler codec http http header value upgrade", "r53 = java lang char sequence $ r29", "$ r30 = $ r27 set r53 $ r28", "$ r31 = io netty handler codec http http header name sec_websocket_accept", "r54 = java lang char sequence $ r31", "$ r30 set r54 r7", "$ r33 = r1 header", "$ r34 = io netty handler codec http http header name sec_websocket_protocol", "r55 = java lang char sequence $ r34", "r8 = $ r33 get r55", "if r8 == null goto label5", "r56 = io netty handler codec http websocketx web socket server handshaker13 r0", "r9 = r56 select subprotocol r8", "if r9 ! = null goto label4", "$ r38 = io netty handler codec http websocketx web socket server handshaker13 logger", "$ z1 = $ r38 be debug enabled", "if $ z1 == 0 goto label5", "$ r39 = io netty handler codec http websocketx web socket server handshaker13 logger", "$ r39 debug \\ `` request subprotocol s not support { } \\", "goto label5", "label r59 = io netty handler codec http full http response r45", "return r59", "if r9 ! = null goto label4", "label r57 = io netty handler codec http full http response r45", "$ r35 = r57 header", "$ r36 = io netty handler codec http http header name sec_websocket_protocol", "r58 = java lang char sequence $ r36", "$ r35 set r58 r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [], [67], [], [69], [70], [71], [72], [73], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io netty handler codec http2 abstract http2 connection handler builder r0", "specialinvoke r5 enforce non codec constraint \\ `` frame logger\\ ``", "$ r2 = io netty util internal object util check not null r1 \\ `` frame logger\\ ``", "$ r3 = io netty handler codec http2 http2 frame logger $ r2", "r6 = io netty handler codec http2 abstract http2 connection handler builder r0", "r6 frame logger = $ r3", "r7 = io netty handler codec http2 abstract http2 connection handler builder r0", "$ r4 = r7 self", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = io netty util internal object util check not null r0 \\ `` event executor\\ ``", "$ r4 = io netty util concurrent event executor $ r3", "$ r5 = io netty util internal object util check not null r1 \\ `` future\\ ``", "$ r6 = io netty util concurrent future $ r5", "$ r7 = io netty util internal object util check not null r2 \\ `` listener\\ ``", "$ r8 = io netty util concurrent generic future listener $ r7", "io netty util concurrent default promise notify listener with stack over flow protection $ r4 $ r6 $ r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r1 [ i1 ]", "r4 = io netty util concurrent promise combiner r0", "r4 add r3", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r10 = io netty util internal logging jdk logger r0", "$ r5 = r10 logger", "$ r4 = java util log level fine", "$ z0 = $ r5 be loggable $ r4", "if $ z0 == 0 goto label1", "r3 = io netty util internal logging message formatter format r1 r2", "$ r6 = io netty util internal logging jdk logger self", "$ r7 = java util log level fine", "$ r8 = r3 get message", "$ r9 = r3 get throwable", "r11 = io netty util internal logging jdk logger r0", "specialinvoke r11 log $ r6 $ r7 $ r8 $ r9", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r11 = io netty util internal logging jdk logger r0", "$ r6 = r11 logger", "$ r5 = java util log level info", "$ z0 = $ r6 be loggable $ r5", "if $ z0 == 0 goto label1", "r4 = io netty util internal logging message formatter format r1 r2 r3", "$ r7 = io netty util internal logging jdk logger self", "$ r8 = java util log level info", "$ r9 = r4 get message", "$ r10 = r4 get throwable", "r12 = io netty util internal logging jdk logger r0", "specialinvoke r12 log $ r7 $ r8 $ r9 $ r10", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io netty util internal logging log4 j logger r0", "$ r4 = r5 logger", "$ r3 = io netty util internal logging log4 j logger fqcn", "$ r2 = org apache log4j level debug", "r6 = org apache log4j priority $ r2", "$ r4 log $ r3 r6 r1 null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r11 = io netty util internal logging log4 j logger r0", "$ r5 = r11 logger", "$ r4 = org apache log4j level error", "r12 = org apache log4j priority $ r4", "$ z0 = $ r5 be enable for r12", "if $ z0 == 0 goto label1", "r3 = io netty util internal logging message formatter format r1 r2", "r13 = io netty util internal logging log4 j logger r0", "$ r6 = r13 logger", "$ r7 = io netty util internal logging log4 j logger fqcn", "$ r8 = org apache log4j level error", "$ r9 = r3 get message", "$ r10 = r3 get throwable", "r14 = org apache log4j priority $ r8", "$ r6 log $ r7 r14 $ r9 $ r10", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = io netty util internal object util check not null r0 \\ `` level\\ ``", "$ r2 = io netty util resource leak detector $ level $ r1", "io netty util resource leak detector level = $ r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = io netty util resource leak detector level", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = io netty handler ssl application protocol config r0", "$ r1 = r2 support protocol", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = io netty handler ssl open ssl available_openssl_cipher_suites", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r7 = io netty handler ssl open ssl session stats r0", "$ r3 = r7 context", "$ r4 = $ r3 ctx lock", "r1 = $ r4 read lock", "r1 lock", "label r8 = io netty handler ssl open ssl session stats r0", "$ r5 = r8 context", "$ l1 = $ r5 ctx", "l0 = io netty internal tcnative s s l context session accept renegotiate $ l1", "label r1 unlock", "return l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r7 = io netty handler ssl open ssl session stats r0", "$ r3 = r7 context", "$ r4 = $ r3 ctx lock", "r1 = $ r4 read lock", "r1 lock", "label r8 = io netty handler ssl open ssl session stats r0", "$ r5 = r8 context", "$ l1 = $ r5 ctx", "l0 = io netty internal tcnative s s l context session ticket key fail $ l1", "label r1 unlock", "return l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = io netty handler ssl util self sign certificate r0", "$ r1 = r2 certificate", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = io netty handler traffic abstract traffic shape handler r0", "r1 max write size = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = io netty handler traffic global channel traffic counter r0", "$ z0 = r4 monitor active", "if $ z0 ! = 0 goto label1", "return", "if $ z0 ! = 0 goto label1", "label r5 = io netty handler traffic global channel traffic counter r0", "r5 monitor active = 0", "$ l0 = io netty handler traffic global channel traffic counter milli second from nano", "r6 = io netty handler traffic global channel traffic counter r0", "r6 reset account $ l0", "r7 = io netty handler traffic global channel traffic counter r0", "$ r1 = r7 traffic shape handler", "$ r1 do account r0", "r8 = io netty handler traffic global channel traffic counter r0", "$ r2 = r8 schedule future", "if $ r2 == null goto label2", "r9 = io netty handler traffic global channel traffic counter r0", "$ r3 = r9 schedule future", "$ r3 cancel 1", "label return"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "l1 = @ parameter0", "$ b0 = l1 cmp 0l", "if $ b0 > 0 goto label1", "l1 = 0l", "label r1 = io netty handler proxy proxy handler r0", "r1 connect timeout millis = l1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "io netty util internal object util check not null r0 \\ `` file\\ ``", "io netty util internal object util check not null r1 \\ `` charsets\\ ``", "$ z0 = r0 exist", "if $ z0 == 0 goto label3", "$ z1 = r0 be file", "if $ z1 == 0 goto label3", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label3", "r3 = r1 [ i1 ]", "$ r7 = new java io buffer reader", "$ r8 = new java io input stream reader", "$ r9 = new java io file input stream", "specialinvoke $ r9 < init > r0", "specialinvoke $ r8 < init > $ r9 r3", "specialinvoke $ r7 < init > $ r8", "r4 = io netty resolver host file parser parse $ r7", "$ r10 = io netty resolver host file entry empty", "if r4 == $ r10 goto label2", "return r4", "if r4 == $ r10 goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r11 = io netty resolver host file entry empty", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = io netty resolver dns default dns cache r0", "$ i0 = r1 min ttl", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 == null goto label1", "r5 = io netty channel abstract coalesce buffer queue r0", "$ r4 = r5 buf and listener pair", "$ r4 add first r2", "label r6 = io netty channel abstract coalesce buffer queue r0", "$ r3 = r6 buf and listener pair", "$ r3 add first r1", "$ i0 = r1 readable byte", "r7 = io netty channel abstract coalesce buffer queue r0", "specialinvoke r7 increment readable bytes $ i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = io netty channel abstract coalesce buffer queue r0", "$ i0 = r1 readable byte", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io netty channel local local address r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io netty channel unix file descriptor r0", "$ i0 = r1 fd", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io netty channel unix iov array r0", "$ i0 = r1 count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r1 = new com nimbusds jose algorithm", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 to base64 u r l", "$ r2 = com nimbusds jose crypto impl aad compute $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds jose crypto impl authenticate cipher text r0", "$ r1 = r2 authentication tag", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ r5 = r0", "goto label2", "label $ i0 = lengthof $ r5", "r2 = com nimbusds jose util integer utils to bytes $ i0", "$ r3 = newarray byte [ ] [ 2 ]", "$ r3 [ 0 ] = r2", "$ r3 [ 1 ] = $ r5", "$ r4 = com nimbusds jose util byte utils concat $ r3", "return $ r4", "if r0 == null goto label1", "label $ r5 = newarray byte [ 0 ]"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds jose crypto impl e c d h crypto provider r0", "$ r1 = r2 concat k d f", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = new java lang string", "r5 = com nimbusds jose crypto impl m a c provider r0", "$ r3 = r5 secret", "$ r2 = com nimbusds jose util standard charset utf_8", "specialinvoke r4 < init > $ r3 $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = com nimbusds jose crypto password base encrypter r0", "$ i0 = r1 iteration count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = com nimbusds jose jca j w e j c a context r0", "$ r1 = r3 ke provider", "if $ r1 == null goto label1", "r4 = com nimbusds jose jca j w e j c a context r0", "$ r2 = r4 ke provider", "goto label2", "label return $ r2", "if $ r1 == null goto label1", "label r5 = com nimbusds jose jca j w e j c a context r0", "$ r2 = r5 get provider"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds jose j w e object r0", "$ r1 = r2 iv", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = com nimbusds jose jwk r s a key r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds jose jwk j w k matcher r0", "$ r1 = r2 use", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = com nimbusds jose jwk source immutable secret r0", "$ r1 = r6 get j w k set", "$ r2 = $ r1 get key", "$ r3 = $ r2 get 0", "$ r4 = com nimbusds jose jwk octet sequence key $ r3", "$ r5 = $ r4 to secret key", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds jose j w s object r0", "$ r1 = r2 signature", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com nimbusds jose key length exception r0", "$ i0 = r1 expect length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = com nimbusds jose plain header registered_parameter_names", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds jose proc j o s e matcher r0", "$ r1 = r2 class", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com nimbusds jose proc j w s verification key selector r0", "$ r2 = r3 jws algs", "$ z0 = $ r2 contain r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = com nimbusds jose util base64 r0", "$ r1 = r3 value", "$ r2 = com nimbusds jose util base64 codec decode $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = com nimbusds jose util j s o n object utils get string array r0 r1", "if r2 ! = null goto label1", "return null", "if r2 ! = null goto label1", "label $ r3 = java util array a list r2", "return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds oauth2 sdk a authorization server endpoint metadata r0", "r2 introspection endpoint = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds oauth2 sdk a authorization server endpoint metadata r0", "r2 revocation endpoint = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds oauth2 sdk a authorization server endpoint metadata r0", "r2 device authz endpoint = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds oauth2 sdk a authorization server metadata r0", "r2 rms = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds oauth2 sdk a authorization server metadata r0", "r2 request object j w s algs = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "com nimbusds oauth2 sdk util u r i utils ensure scheme be h t t p sor h t t p r1", "r2 = com nimbusds oauth2 sdk a authorization server metadata r0", "r2 policy u r i = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com nimbusds oauth2 sdk a authorization server metadata r0", "r1 tl client certificate bound access token = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds oauth2 sdk a authorization server metadata r0", "r2 incremental authz type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk assertion assertion detail r0", "$ r1 = r2 exp", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r6 = new java util hash set", "specialinvoke r6 < init >", "$ r2 = com nimbusds jose j w s algorithm $ family hmac_sha", "r7 = java util collection $ r2", "r6 add all r7", "$ r3 = com nimbusds jose j w s algorithm $ family rsa", "r8 = java util collection $ r3", "r6 add all r8", "$ r4 = com nimbusds jose j w s algorithm $ family ec", "r9 = java util collection $ r4", "r6 add all r9", "$ r5 = java util collection unmodifiable set r6", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk assertion saml2 s a m l2 assertion detail r0", "$ r1 = r2 subject a c r", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk assertion saml2 s a m l2 assertion detail r0", "$ r1 = r2 nbf", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r0 ! = r1 goto label1", "return 1", "if r0 ! = r1 goto label1", "label r4 = com nimbusds oauth2 sdk auth secret r0", "$ r3 = r4 value", "if $ r3 ! = null goto label2", "return 0", "if $ r3 ! = null goto label2", "label $ z0 = r1 instanceof com nimbusds oauth2 sdk auth secret", "if $ z0 ! = 0 goto label3", "label r2 = com nimbusds oauth2 sdk auth secret r1", "r5 = com nimbusds oauth2 sdk auth secret r0", "$ z1 = r5 equal s h a256 base r2", "return $ z1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk auth t l s client authentication r0", "$ r1 = r2 certificate", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = com nimbusds oauth2 sdk auth verifier client authentication verifier r0", "$ r1 = r3 claim set verifier", "$ r2 = $ r1 get expect audience", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r9 = new java util hash map", "specialinvoke r9 < init >", "r10 = com nimbusds oauth2 sdk authorization request r0", "$ r3 = r10 get endpoint u r i", "if $ r3 == null goto label1", "r11 = com nimbusds oauth2 sdk authorization request r0", "$ r6 = r11 get endpoint u r i", "$ r7 = $ r6 get query", "$ r8 = com nimbusds oauth2 sdk util u r l utils parse parameter $ r7", "r9 put all $ r8", "label r12 = com nimbusds oauth2 sdk authorization request r0", "$ r4 = r12 to parameter", "r9 put all $ r4", "$ r5 = com nimbusds oauth2 sdk util u r l utils serialize parameter r9", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk authorization response r0", "$ r1 = r2 redirect u r i", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk authorization response r0", "$ r1 = r2 jwt response", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk authorization response r0", "$ r1 = r2 rm", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = com nimbusds oauth2 sdk authorization success response r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ r1 = com nimbusds oauth2 sdk authorization error response r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = com nimbusds oauth2 sdk ciba c i b a error response standard_errors", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk ciba c i b a ping callback r0", "$ r1 = r2 auth request i d", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk ciba c i b a request r0", "$ r1 = r2 client notification token", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk ciba c i b a request r0", "$ r1 = r2 login hint token string", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk client client information r0", "$ r1 = r2 issue date", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com nimbusds oauth2 sdk client client metadata r0", "$ r2 = r4 scope", "if $ r2 == null goto label1", "r5 = com nimbusds oauth2 sdk client client metadata r0", "$ r3 = r5 scope", "$ z0 = $ r3 contain r1", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds oauth2 sdk client client metadata r0", "r2 scope = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk client client metadata r0", "$ r1 = r2 request object j w e enc", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds oauth2 sdk client client metadata r0", "r2 request object j w e enc = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk client client metadata r0", "$ r1 = r2 software i d", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com nimbusds oauth2 sdk client client metadata r0", "r1 tl client certificate bound access token = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk client client metadata r0", "$ r1 = r2 tl client auth san email", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk client client metadata r0", "$ r1 = r2 to j s o n object 1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = com nimbusds oauth2 sdk client client information response r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = com nimbusds oauth2 sdk device device authorization error response standard_errors", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = com nimbusds oauth2 sdk error object r0", "$ i0 = r1 http status code", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com nimbusds oauth2 sdk grant type r0", "$ z0 = r1 require client i d", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk grant type r0", "$ r1 = r2 request param name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk http h t t p request r0", "$ r1 = r2 method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com nimbusds oauth2 sdk http h t t p request r0", "$ i0 = r1 connect timeout", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com nimbusds oauth2 sdk http h t t p request r0", "$ i0 = r1 read timeout", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk http h t t p request r0", "$ r1 = r2 client x509 certificate root d n", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk request object p o s t request r0", "$ r1 = r2 request object", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk request object p o s t success response r0", "$ r1 = r2 aud", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com nimbusds oauth2 sdk token access token r0", "$ l0 = r1 lifetime", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk token d po p token error r0", "$ r1 = r2 jws algs", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com nimbusds oauth2 sdk token request r0", "$ r2 = r5 custom params", "$ r3 = $ r2 get r1", "$ r4 = java util list $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label r1 = r0 to string", "$ i0 = r1 length", "$ i1 = $ i0 - 1", "$ c2 = r1 char at $ i1", "if $ c2 ! = 47 goto label2", "$ i3 = r1 length", "$ i4 = $ i3 - 1", "$ r2 = r1 substring 0 $ i4", "$ r3 = java net uri create $ r2", "return $ r3", "if $ c2 ! = 47 goto label2", "label return r0"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return", "if r0 ! = null goto label1", "label $ r1 = r0 get scheme", "if $ r1 == null goto label2", "$ r3 = newarray java lang string [ 2 ]", "$ r3 [ 0 ] = \\ `` http\\ ``", "$ r3 [ 1 ] = \\ `` https\\ ``", "$ r4 = java util array a list $ r3", "$ r5 = r0 get scheme", "$ r6 = $ r5 to lower case", "$ z0 = $ r4 contain $ r6", "if $ z0 ! = 0 goto label3", "label $ r2 = new java lang illegal argument exception", "specialinvoke $ r2 < init > \\ `` the uri scheme must be https or http\\ ``", "throw $ r2", "if $ z0 ! = 0 goto label3", "label return"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk assurance claim birthplace r0", "$ r1 = r2 get string claim \\ `` region\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk assurance claim i s o3166_1 alpha2 country code r0", "$ r1 = com nimbusds openid connect sdk assurance claim i s o3166_1 alpha country code mapper to alpha3 country code r2", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = com nimbusds openid connect sdk assurance claim i s o3166_3 country code r0", "$ r1 = r3 get value", "$ r2 = $ r1 substring 2 4", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = new com nimbusds openid connect sdk claim person claim", "r5 = com nimbusds openid connect sdk assurance claim verify claim set r0", "$ r2 = r5 claim set", "$ r3 = $ r2 to j s o n object", "specialinvoke r4 < init > $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk assurance evidence common method attribute r0", "$ r1 = r2 policy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk assurance evidence i d document description r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = com nimbusds openid connect sdk assurance evidence q e s evidence r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r15 = new net minidev json j s o n object", "specialinvoke r15 < init >", "r17 = com nimbusds openid connect sdk assurance evidence identity evidence r0", "$ r6 = r17 get evidence type", "$ r7 = $ r6 get value", "r15 put \\ `` type\\", "r18 = com nimbusds openid connect sdk assurance evidence identity evidence r0", "$ r9 = r18 get attachment", "$ z0 = com nimbusds oauth2 sdk util collection utils be not empty $ r9", "if $ z0 == 0 goto label3", "r16 = new java util link list", "specialinvoke r16 < init >", "r19 = com nimbusds openid connect sdk assurance evidence identity evidence r0", "$ r11 = r19 get attachment", "r3 = $ r11 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label2", "$ r13 = r3 next", "r4 = com nimbusds openid connect sdk assurance evidence attachment attachment $ r13", "$ r14 = r4 to j s o n object", "r16 add $ r14", "goto label1", "if $ z1 == 0 goto label2", "label r15 put \\ `` attachments\\", "label return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], []]}
{"nodes": ["r0 = @ this", "r11 = new net minidev json j s o n object", "specialinvoke r11 < init >", "r12 = com nimbusds openid connect sdk assurance evidence identity verifier r0", "$ r3 = r12 get organization", "if $ r3 == null goto label1", "r13 = com nimbusds openid connect sdk assurance evidence identity verifier r0", "$ r8 = r13 get organization entity", "$ r9 = $ r8 get value", "r11 put \\ `` organization\\", "label r14 = com nimbusds openid connect sdk assurance evidence identity verifier r0", "$ r4 = r14 get t x n", "if $ r4 == null goto label2", "r15 = com nimbusds openid connect sdk assurance evidence identity verifier r0", "$ r5 = r15 get t x n", "$ r6 = $ r5 get value", "r11 put \\ `` txn\\", "label return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk assurance evidence q e s evidence r0", "$ r1 = r2 create at", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk assurance evidence utility bill evidence r0", "$ r1 = r2 method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = com nimbusds openid connect sdk authentication error response std error", "$ r1 = java util collection unmodifiable set $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = com nimbusds openid connect sdk claim i d token claim set std_claim_names", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r6 = com nimbusds openid connect sdk claim i d token claim set r0", "$ r3 = r6 get claim \\ `` sub_jwk\\", "r1 = net minidev json j s o n object $ r3", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label r7 = java util map r1", "$ r4 = com nimbusds jose jwk jwk parse r7", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds openid connect sdk claim person claim r0", "r2 set date claim \\ `` updated_at\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = com nimbusds openid connect sdk claim request r0", "$ r1 = r3 id token claim", "$ r2 = com nimbusds openid connect sdk claim request get claim names $ r1 z0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = com nimbusds openid connect sdk claim request r0", "$ r1 = r3 verify i d token claim", "$ r2 = com nimbusds openid connect sdk claim request get claim names $ r1 z0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com nimbusds openid connect sdk claim request r0", "$ r2 = r5 user info claim", "$ r3 = com nimbusds openid connect sdk claim request to key r1", "$ r2 put $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = com nimbusds openid connect sdk claim request r0", "$ r1 = r3 user info claim", "$ r2 = com nimbusds openid connect sdk claim request get claim names $ r1 z0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r0 ensure status code not o k", "$ r1 = new com nimbusds openid connect sdk federation api entity list error response", "$ r2 = com nimbusds openid connect sdk federation api federation a p i error parse r0", "specialinvoke $ r1 < init > $ r2", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk federation api fetch entity statement request r0", "$ r1 = r2 audience", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk federation api trust negotiation request r0", "$ r1 = r2 anchor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = new com nimbusds oauth2 sdk id client i d", "r4 = com nimbusds openid connect sdk federation entity entity i d r0", "$ r2 = r4 get value", "specialinvoke r3 < init > $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r4 = r1 to j s o n object", "goto label2", "label $ r3 = com nimbusds openid connect sdk federation entity federation metadata type federation_entity", "r5 = com nimbusds openid connect sdk federation entity entity statement claim set r0", "r5 set metadata $ r3 $ r4", "return", "if r1 == null goto label1", "label $ r4 = null"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r2 = r1 to j s o n object", "r3 = com nimbusds openid connect sdk federation entity entity statement claim set r0", "r3 set claim \\ `` constraints\\", "goto label2", "label return", "if r1 == null goto label1", "label r4 = com nimbusds openid connect sdk federation entity entity statement claim set r0", "r4 set claim \\ `` constraints\\"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk federation entity federation entity metadata r0", "$ r1 = r2 homepage u r i", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = com nimbusds openid connect sdk federation trust constraint trust chain constraint r0", "$ r2 = r14 get exclude entity", "$ z0 = $ r2 be empty", "if $ z0 == 0 goto label1", "r15 = com nimbusds openid connect sdk federation trust constraint trust chain constraint r0", "$ r9 = r15 get permitted entity", "$ z7 = $ r9 be empty", "if $ z7 == 0 goto label1", "return 1", "if $ z7 == 0 goto label1", "label r16 = com nimbusds openid connect sdk federation trust constraint trust chain constraint r0", "$ r3 = r16 get exclude entity", "$ z1 = $ r3 be empty", "if $ z1 ! = 0 goto label4", "r17 = com nimbusds openid connect sdk federation trust constraint trust chain constraint r0", "$ r7 = r17 get exclude entity", "r10 = $ r7 iterator", "label $ z5 = r10 have next", "if $ z5 == 0 goto label4", "$ r8 = r10 next", "r11 = com nimbusds openid connect sdk federation trust constraint entity i d constraint $ r8", "$ z6 = r11 match r1", "if $ z6 == 0 goto label3", "return 0", "if $ z6 == 0 goto label3", "label goto label2", "if $ z5 == 0 goto label4", "label r18 = com nimbusds openid connect sdk federation trust constraint trust chain constraint r0", "$ r4 = r18 get permitted entity", "$ z2 = $ r4 be empty", "if $ z2 ! = 0 goto label8", "r19 = com nimbusds openid connect sdk federation trust constraint trust chain constraint r0", "$ r5 = r19 get permitted entity", "r12 = $ r5 iterator", "label $ z3 = r12 have next", "if $ z3 == 0 goto label7", "$ r6 = r12 next", "r13 = com nimbusds openid connect sdk federation trust constraint entity i d constraint $ r6", "$ z4 = r13 match r1", "if $ z4 == 0 goto label6", "label goto label5", "if $ z3 == 0 goto label7", "label goto label9", "label return 0", "if $ z2 ! = 0 goto label8", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk federation trust constraint trust chain constraint r0", "$ r1 = r2 exclude entity", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk logout request r0", "$ r1 = r2 post logout redirect u r i", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new com nimbusds openid connect sdk o i d c claim request", "r7 = com nimbusds openid connect sdk o i d c claim request r0", "$ r3 = r7 get i d token claim request", "r8 = com nimbusds openid connect sdk o i d c claim request r0", "$ r4 = r8 get i d token verified claim request", "r9 = com nimbusds openid connect sdk o i d c claim request r0", "$ r5 = r9 get user info verify claim request", "specialinvoke r6 < init > $ r3 r1 $ r4 $ r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk o i d c claim request r0", "$ r1 = r2 id token verify", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk op a c r request r0", "$ r1 = r2 essential a c r", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds openid connect sdk op o i d c provider metadata r0", "r2 id token j w e encs = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = com nimbusds openid connect sdk rp application type web", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = com nimbusds openid connect sdk rp o i d c client metadata registered_parameter_names", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk rp o i d c client metadata r0", "$ r1 = r2 user info j w e alg", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds openid connect sdk rp o i d c client metadata r0", "r2 user info j w e alg = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk rp o i d c client metadata r0", "$ r1 = r2 front channel logout u r i", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com nimbusds openid connect sdk rp o i d c client metadata r0", "$ z0 = r1 front channel logout session require", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r4 = new java io buffer output stream", "$ r5 = new java io file output stream", "specialinvoke $ r5 < init > r0", "specialinvoke $ r4 < init > $ r5", "label $ r4 write r1", "label $ r4 close", "goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], []]}
{"nodes": ["r0 = @ this", "r2 = com squareup okhttp cache r0", "$ r1 = r2 cache", "$ r1 evict all", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "entermonitor r0", "label r19 = com squareup okhttp call r0", "$ z0 = r19 execute", "if $ z0 == 0 goto label2", "r17 = new java lang illegal state exception", "specialinvoke r17 < init > \\ `` already executed\\ ``", "throw r17", "if $ z0 == 0 goto label2", "label r20 = com squareup okhttp call r0", "r20 execute = 1", "exitmonitor r0", "label goto label6", "label r21 = com squareup okhttp call r0", "$ r3 = r21 client", "$ r4 = $ r3 get dispatcher", "r22 = com squareup okhttp call r0", "$ r4 execute r22", "r23 = com squareup okhttp call r0", "r15 = specialinvoke r23 get response with interceptor chain 0", "if r15 ! = null goto label7", "r18 = new java io i o exception", "specialinvoke r18 < init > \\ `` canceled\\ ``", "throw r18", "if r15 ! = null goto label7", "label r24 = com squareup okhttp call r0", "$ r5 = r24 client", "$ r6 = $ r5 get dispatcher", "r25 = com squareup okhttp call r0", "$ r6 finish r25", "return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r2 = com squareup okhttp connection pool r0", "$ r1 = r2 connection", "$ i0 = $ r1 size", "r3 = com squareup okhttp connection pool r0", "$ i1 = r3 get multiplexed connection count", "$ i2 = $ i0 - $ i1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = com squareup okhttp handshake r0", "$ r1 = r2 peer certificate", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = com squareup okhttp handshake r0", "$ r1 = r6 peer certificate", "$ z0 = $ r1 be empty", "if $ z0 ! = 0 goto label1", "r7 = com squareup okhttp handshake r0", "$ r2 = r7 peer certificate", "$ r3 = $ r2 get 0", "$ r4 = java security cert x509 certificate $ r3", "$ r5 = $ r4 get subject x500 principal", "goto label2", "label return $ r5", "if $ z0 ! = 0 goto label1", "label $ r5 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r6 = new java util tree set", "$ r3 = java lang string case_insensitive_order", "specialinvoke r6 < init > $ r3", "i1 = 0", "r7 = com squareup okhttp header r0", "i0 = r7 size", "label if i1 > = i0 goto label2", "r8 = com squareup okhttp header r0", "$ r5 = r8 name i1", "r6 add $ r5", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label $ r4 = java util collection unmodifiable set r6", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = com squareup okhttp internal disk lru cache r0", "$ z0 = r2 initialize", "if $ z0 ! = 0 goto label1", "return", "if $ z0 ! = 0 goto label1", "label r3 = com squareup okhttp internal disk lru cache r0", "specialinvoke r3 check not close", "r4 = com squareup okhttp internal disk lru cache r0", "specialinvoke r4 trim to size", "r5 = com squareup okhttp internal disk lru cache r0", "$ r1 = r5 journal writer", "$ r1 flush"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r6 = com squareup okhttp internal framed frame connection r0", "$ r1 = r6 frame writer", "$ r1 connection preface", "r7 = com squareup okhttp internal framed frame connection r0", "$ r3 = r7 frame writer", "r8 = com squareup okhttp internal framed frame connection r0", "$ r2 = r8 ok http setting", "$ r3 setting $ r2", "r9 = com squareup okhttp internal framed frame connection r0", "$ r4 = r9 ok http setting", "i0 = $ r4 get initial window size 65536", "if i0 == 65536 goto label1", "r10 = com squareup okhttp internal framed frame connection r0", "$ r5 = r10 frame writer", "$ i1 = i0 - 65536", "$ l2 = long $ i1", "$ r5 window update 0 $ l2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = com squareup okhttp internal framed frame stream r0", "$ r1 = r2 source", "r3 = okio source $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r3 = new com squareup okhttp internal frame http2 $ reader", "specialinvoke r3 < init > r1 4096 z0", "r4 = com squareup okhttp internal frame frame reader r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = com squareup okhttp internal frame ping r0", "$ r1 = r2 latch", "$ r1 await", "r3 = com squareup okhttp internal frame ping r0", "$ l1 = r3 receive", "r4 = com squareup okhttp internal frame ping r0", "$ l0 = r4 send", "$ l2 = $ l1 - $ l0", "return $ l2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = com squareup okhttp internal http route selector r0", "$ z0 = specialinvoke r1 have next inet socket address", "if $ z0 ! = 0 goto label1", "r2 = com squareup okhttp internal http route selector r0", "$ z1 = specialinvoke r2 have next proxy", "if $ z1 ! = 0 goto label1", "r3 = com squareup okhttp internal http route selector r0", "$ z2 = specialinvoke r3 have next postpone", "if $ z2 == 0 goto label2", "label $ z3 = 1", "goto label3", "label return $ z3", "if $ z2 == 0 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = com squareup okhttp medium type r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = com squareup okhttp medium type r0", "$ r1 = r4 charset", "if $ r1 == null goto label1", "r5 = com squareup okhttp medium type r0", "$ r2 = r5 charset", "$ r3 = java nio charset charset for name $ r2", "goto label2", "label return $ r3", "if $ r1 == null goto label1", "label $ r3 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = okhttp3 cookie r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = okhttp3 cookie r0", "$ z0 = r1 http only", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = okhttp3 internal disk lru cache r0", "r1 initialize", "r2 = okhttp3 internal disk lru cache r0", "$ l0 = r2 size", "return $ l0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r6 = okhttp3 internal framed frame connection r0", "$ r1 = r6 frame writer", "$ r1 connection preface", "r7 = okhttp3 internal framed frame connection r0", "$ r3 = r7 frame writer", "r8 = okhttp3 internal framed frame connection r0", "$ r2 = r8 ok http setting", "$ r3 setting $ r2", "r9 = okhttp3 internal framed frame connection r0", "$ r4 = r9 ok http setting", "i0 = $ r4 get initial window size 65536", "if i0 == 65536 goto label1", "r10 = okhttp3 internal framed frame connection r0", "$ r5 = r10 frame writer", "$ i1 = i0 - 65536", "$ l2 = long $ i1", "$ r5 window update 0 $ l2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = okhttp3 internal frame ping r0", "$ r1 = r2 latch", "$ r1 await", "r3 = okhttp3 internal frame ping r0", "$ l1 = r3 receive", "r4 = okhttp3 internal frame ping r0", "$ l0 = r4 send", "$ l2 = $ l1 - $ l0", "return $ l2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = okhttp3 internal http route selector r0", "$ z0 = specialinvoke r1 have next inet socket address", "if $ z0 ! = 0 goto label1", "r2 = okhttp3 internal http route selector r0", "$ z1 = specialinvoke r2 have next proxy", "if $ z1 ! = 0 goto label1", "r3 = okhttp3 internal http route selector r0", "$ z2 = specialinvoke r3 have next postpone", "if $ z2 == 0 goto label2", "label $ z3 = 1", "goto label3", "label return $ z3", "if $ z2 == 0 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = okhttp3 internal frame error code refused_stream", "r1 close $ r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = okhttp3 request r0", "r1 = r4 cache control", "if r1 == null goto label1", "$ r3 = r1", "goto label2", "label return $ r3", "if r1 == null goto label1", "label r5 = okhttp3 request r0", "$ r2 = r5 header", "$ r3 = okhttp3 cache control parse $ r2", "r6 = okhttp3 request r0", "r6 cache control = $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = @ parameter2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = okhttp3 connection pool r0", "$ r1 = r2 delegate", "$ i0 = $ r1 connection count", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = okhttp3 internal connection exchange r0", "$ r1 = r4 codec", "$ r1 cancel", "r5 = okhttp3 internal connection exchange r0", "$ r2 = r5 transmitter", "r6 = okhttp3 internal connection exchange r0", "$ r2 exchange message do r6 1 1 null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = okhttp3 ok http client r0", "$ i0 = r1 read timeout", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = okhttp3 response body r0", "r1 = r10 source", "r7 = null", "label r11 = okhttp3 response body r0", "$ r4 = specialinvoke r11 charset", "r8 = okhttp3 internal util bom aware charset r1 $ r4", "r2 = r1 read string r8", "label if r1 == null goto label3", "r12 = java lang auto closeable r1", "okhttp3 response body $ close resource null r12", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = okio buffer r0", "$ l0 = r1 size", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = okio buffer r0", "$ r2 = specialinvoke r3 hmac \\ `` hmac s h a256\\", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = okio hash sink r0", "$ r2 = r7 message digest", "if $ r2 == null goto label1", "r8 = okio hash sink r0", "$ r5 = r8 message digest", "$ r6 = $ r5 digest", "goto label2", "label $ r4 = okio byte string of $ r6", "return $ r4", "if $ r2 == null goto label1", "label r9 = okio hash sink r0", "$ r3 = r9 mac", "$ r6 = $ r3 do final"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org openid4java association association session type r0", "$ r1 = r2 _assoc type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org openid4java consumer consumer manager r0", "$ i0 = r1 _pre expiry assoc lock interval", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org openid4java consumer consumer manager r0", "$ r1 = r2 _nonce verifier", "$ r1 set max age i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r9 = r1 get query", "if $ r9 ! = null goto label01", "return null", "if $ r9 ! = null goto label01", "label $ r10 = new java util hash map", "specialinvoke $ r10 < init >", "$ r11 = r1 get query", "$ r12 = $ r11 split \\ `` & \\ ``", "r3 = java util array a list $ r12", "r4 = r3 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label10", "$ r13 = r4 next", "r5 = java lang string $ r13", "i0 = r5 index of \\ `` =\\ ``", "if i0 < = -1 goto label03", "$ r17 = r5 substring 0 i0", "$ r18 = java net u r l decoder decode $ r17 \\ `` utf-8\\ ``", "goto label04", "label r6 = $ r18", "if i0 > -1 goto label05", "r19 = null", "goto label07", "label $ r20 = $ r10 get r6", "r7 = java util list $ r20", "if r7 ! = null goto label08", "$ r15 = new java util array list", "specialinvoke $ r15 < init >", "$ r15 add r19", "$ r10 put r6 $ r15", "goto label09", "label goto label02", "if r7 ! = null goto label08", "label r7 add r19", "if i0 > -1 goto label05", "label $ i1 = i0 + 1", "$ i2 = r5 length", "if $ i1 < = $ i2 goto label06", "r19 = \\ `` \\ ``", "if $ i1 < = $ i2 goto label06", "label $ i3 = i0 + 1", "$ r14 = r5 substring $ i3", "r19 = java net u r l decoder decode $ r14 \\ `` utf-8\\ ``", "if i0 < = -1 goto label03", "label $ r18 = java net u r l decoder decode r5 \\ `` utf-8\\ ``", "if $ z0 == 0 goto label10", "label return $ r10"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org openid4java consumer verification result r0", "r2 _auth response = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org openid4java discovery discovery r0", "$ r1 = r2 _yadis resolver", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org openid4java discovery html html resolver r0", "$ i0 = r1 _max redirect", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org openid4java discovery yadis yadis result r0", "r2 _content type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org openid4java message association response r0", "r2 set \\ `` mac_key\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org openid4java message ax ax message r0", "$ r1 = r2 _parameters", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r24 = org openid4java message message r0", "r1 = r24 get require field", "r25 = org openid4java message message r0", "$ r4 = r25 _params", "$ r5 = $ r4 get parameter", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r12 = r2 next", "r18 = org openid4java message parameter $ r12", "$ z3 = r18 be valid", "if $ z3 ! = 0 goto label2", "r21 = new org openid4java message message exception", "r20 = new java lang string builder", "specialinvoke r20 < init >", "$ r15 = r20 append \\ `` invalid parameter \\ ``", "$ r16 = $ r15 append r18", "$ r17 = $ r16 to string", "specialinvoke r21 < init > $ r17", "r26 = java lang throwable r21", "throw r26", "if $ z3 ! = 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label if r1 ! = null goto label4", "return", "label if r1 ! = null goto label4", "label r19 = r1 iterator", "label $ z1 = r19 have next", "if $ z1 == 0 goto label7", "$ r6 = r19 next", "r3 = java lang string $ r6", "r27 = org openid4java message message r0", "$ z2 = r27 have parameter r3", "if $ z2 ! = 0 goto label6", "r23 = new org openid4java message message exception", "r22 = new java lang string builder", "specialinvoke r22 < init >", "$ r9 = r22 append \\ `` required parameter miss \\ ``", "$ r10 = $ r9 append r3", "$ r11 = $ r10 to string", "specialinvoke r23 < init > $ r11", "r28 = java lang throwable r23", "throw r28", "if $ z2 ! = 0 goto label6", "label goto label5", "if $ z1 == 0 goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [], [46], [47], [48], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org openid4java message message _extension factory", "$ z0 = $ r1 contain key r0", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org openid4java message message r0", "$ r2 = r7 _ext aliases", "$ r3 = $ r2 get r1", "if $ r3 == null goto label1", "r8 = org openid4java message message r0", "$ r4 = r8 _ext aliases", "$ r5 = $ r4 get r1", "$ r6 = java lang string $ r5", "goto label2", "label return $ r6", "if $ r3 == null goto label1", "label $ r6 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org openid4java message pape pape request r0", "r1 = r2 get parameter value \\ `` max_auth_age\\ ``", "if r1 == null goto label1", "$ i0 = java lang integer parse int r1", "return $ i0", "if r1 == null goto label1", "label return -1"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org openid4java message pape pape response _date format", "$ r3 = $ r2 format r1", "r4 = org openid4java message pape pape response r0", "r4 set \\ `` auth_time\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org openid4java message sreg s reg message r0", "r2 _type uri = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org openid4java message sreg s reg message r0", "$ r1 = r2 _parameters", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "if z0 == 0 goto label1", "$ r24 = \\ `` required\\ ``", "goto label2", "label r30 = org openid4java message sreg s reg request r0", "$ r4 = r30 _parameters", "r3 = $ r4 get parameter $ r24", "if r3 ! = null goto label3", "r26 = new org openid4java message parameter", "r31 = org openid4java message sreg s reg request r0", "$ r23 = r31 multival encode r1", "specialinvoke r26 < init > $ r24 $ r23", "r25 = r26", "goto label4", "label r34 = org openid4java message sreg s reg request r0", "$ r14 = r34 _parameters", "$ r14 set r25", "$ z1 = org openid4java message sreg s reg request debug", "if $ z1 == 0 goto label5", "$ r16 = org openid4java message sreg s reg request _log", "r29 = new java lang string builder", "specialinvoke r29 < init >", "$ r17 = r29 append \\ `` add new attribute to s reg request \\ ``", "$ r18 = $ r17 append r1", "$ r19 = $ r18 append \\ `` require \\ ``", "$ r20 = $ r19 append z0", "$ r21 = $ r20 to string", "$ r16 debug $ r21", "label return", "if r3 ! = null goto label3", "label r28 = new org openid4java message parameter", "r27 = new java lang string builder", "specialinvoke r27 < init >", "$ r7 = r3 get value", "$ r8 = r27 append $ r7", "$ r9 = $ r8 append \\", "r32 = org openid4java message sreg s reg request r0", "$ r10 = r32 multival encode r1", "$ r11 = $ r9 append $ r10", "$ r12 = $ r11 to string", "specialinvoke r28 < init > $ r24 $ r12", "r25 = r28", "r33 = org openid4java message sreg s reg request r0", "$ r13 = r33 _parameters", "$ r13 remove parameter $ r24", "if z0 == 0 goto label1", "label $ r24 = \\ `` optional\\ ``"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org openid4java message sreg s reg response r0", "$ r2 = r3 get parameter value r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org openid4java server server manager r0", "$ r1 = r2 _realm verifier", "$ r1 set enforce rp id z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org openid4java util http request option r0", "r1 _socket timeout = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org opentest4j value wrapper r0", "$ r1 = r2 string representation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = org eclipse core command command r0", "r4 define r1 r2 r3 null", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse core command command r0", "$ r1 = r3 handler", "if $ r1 ! = null goto label1", "return 0", "if $ r1 ! = null goto label1", "label r4 = org eclipse core command command r0", "$ r2 = r4 handler", "$ z0 = $ r2 be handle", "return $ z0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = org eclipse core command command manager r0", "r11 check id r1", "r12 = org eclipse core command command manager r0", "$ r2 = r12 handle object by id", "$ r3 = $ r2 get r1", "r9 = org eclipse core command command $ r3", "if r9 ! = null goto label1", "r10 = new org eclipse core command command", "specialinvoke r10 < init > r1", "r9 = r10", "r13 = org eclipse core command command manager r0", "$ z0 = r13 should command fire event", "r10 should fire event = $ z0", "r14 = org eclipse core command command manager r0", "$ r5 = r14 handle object by id", "$ r5 put r1 r10", "r10 add command listener r0", "r15 = org eclipse core command command manager r0", "$ r7 = r15 execution listener", "if $ r7 == null goto label1", "r16 = org eclipse core command command manager r0", "$ r8 = r16 execution listener", "r17 = org eclipse core command i execution listener $ r8", "r10 add execution listener r17", "label return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse core command command manager r0", "$ r1 = r3 define parameter type id", "$ r2 = java util collection unmodifiable set $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org eclipse core command command manager r0", "$ r3 = r5 execution listener", "if $ r3 == null goto label1", "r6 = org eclipse core command command manager r0", "$ r4 = r6 execution listener", "$ r4 post execute success r1 r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core command common command exception r0", "$ r1 = r2 cause", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core command common event manager r0", "$ r1 = r2 listener list", "if $ r1 == null goto label1", "return 1", "if $ r1 == null goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse core command common handle object r0", "$ z0 = r1 define", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse core command operation abstract operation r0", "r2 label = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse core command operation object undo context r0", "$ r2 = r3 child", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core command operation operation history event r0", "$ r1 = r2 operation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org eclipse core command operation trigger operation r0", "$ r2 = r4 trigger operation", "if $ r2 == null goto label1", "r5 = org eclipse core command operation trigger operation r0", "$ r3 = r5 trigger operation", "$ r3 add context r1", "r6 = org eclipse core command operation trigger operation r0", "r6 recompute context", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org eclipse core command operation object undo context r0", "$ r2 = r7 child", "$ z0 = $ r2 contain r1", "if $ z0 == 0 goto label1", "return 1", "if $ z0 == 0 goto label1", "label $ z1 = r1 instanceof org eclipse core command operation object undo context", "if $ z1 == 0 goto label2", "r8 = org eclipse core command operation object undo context r0", "$ r3 = r8 get object", "if $ r3 == null goto label2", "r9 = org eclipse core command operation object undo context r0", "$ r4 = r9 get object", "$ r5 = org eclipse core command operation object undo context r1", "$ r6 = $ r5 get object", "$ z3 = $ r4 equal $ r6", "return $ z3", "if $ r3 == null goto label2", "label $ z2 = specialinvoke r0 match r1", "return $ z2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org eclipse core command state r0", "$ r5 = r6 get listener", "i0 = lengthof $ r5", "i1 = 0", "goto label2", "label if i1 < i0 goto label1", "label r2 = $ r5 [ i1 ]", "r4 = org eclipse core command i state listener r2", "r7 = org eclipse core command state r0", "r4 handle state change r7 r1", "i1 = i1 + 1", "label if i1 < i0 goto label1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core command state r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["z0 = @ parameter0", "z1 = @ parameter1", "if z0 ! = 0 goto label2", "if z1 == 0 goto label1", "$ b0 = -1", "goto label4", "label return $ b0", "if z1 == 0 goto label1", "label $ b0 = 0", "if z0 ! = 0 goto label2", "label if z1 == 0 goto label3", "$ b0 = 0", "label if z1 == 0 goto label3", "label $ b0 = 1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org eclipse core runtime content binary signature describer r0", "$ r4 = r7 signature", "$ i1 = lengthof $ r4", "r3 = newarray byte [ $ i1 ]", "r8 = org eclipse core runtime content binary signature describer r0", "$ z0 = r8 require", "if $ z0 == 0 goto label1", "$ b13 = 0", "goto label2", "label b0 = $ b13", "r9 = org eclipse core runtime content binary signature describer r0", "$ i2 = r9 offset", "$ l3 = long $ i2", "$ l4 = r1 skip $ l3", "r10 = org eclipse core runtime content binary signature describer r0", "$ i5 = r10 offset", "$ l6 = long $ i5", "$ b7 = $ l4 cmp $ l6", "if $ b7 > = 0 goto label3", "return $ b13", "if $ b7 > = 0 goto label3", "label $ i8 = r1 read r3", "$ i9 = lengthof r3", "if $ i8 == $ i9 goto label4", "label i14 = 0", "goto label7", "label r12 = org eclipse core runtime content binary signature describer r0", "$ r5 = r12 signature", "$ i10 = lengthof $ r5", "if i14 < $ i10 goto label5", "label r11 = org eclipse core runtime content binary signature describer r0", "$ r6 = r11 signature", "$ b12 = $ r6 [ i14 ]", "$ b11 = r3 [ i14 ]", "if $ b12 == $ b11 goto label6", "return b0", "if $ b12 == $ b11 goto label6", "label i14 = i14 + 1", "if i14 < $ i10 goto label5", "return 2", "if $ z0 == 0 goto label1", "label $ b13 = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [], [44], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse core expression expression r0", "$ i0 = r1 f hash code", "if $ i0 == -1 goto label1", "r2 = org eclipse core expression expression r0", "$ i6 = r2 f hash code", "return $ i6", "if $ i0 == -1 goto label1", "label r3 = org eclipse core expression expression r0", "$ i1 = r3 compute hash code", "r4 = org eclipse core expression expression r0", "r4 f hash code = $ i1", "r5 = org eclipse core expression expression r0", "$ i2 = r5 f hash code", "if $ i2 ! = -1 goto label2", "r6 = org eclipse core expression expression r0", "$ i4 = r6 f hash code", "$ i5 = $ i4 + 1", "r7 = org eclipse core expression expression r0", "r7 f hash code = $ i5", "label r8 = org eclipse core expression expression r0", "$ i3 = r8 f hash code", "return $ i3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r3 = new org eclipse core expression expression info", "specialinvoke r3 < init >", "r4 = org eclipse core expression expression r0", "r4 collect expression info r3", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = org eclipse core expression expression converter instance", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse core expression expression info r0", "r1 f have default variable access = 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org eclipse core internal filebuffers extension registry r0", "$ r4 = r9 f factory descriptor", "$ r5 = $ r4 get r1", "r2 = java util set $ r5", "if r2 == null goto label1", "r10 = org eclipse core internal filebuffers extension registry r0", "r3 = r10 select configuration element r2", "r11 = org eclipse core internal filebuffers extension registry r0", "$ r6 = r11 f factory", "r12 = org eclipse core internal filebuffers extension registry r0", "$ r7 = r12 get extension r3 $ r6 class \\ `` lorg eclipse core filebuffers i document factory \\ ``", "$ r8 = org eclipse core filebuffers i document factory $ r7", "return $ r8", "if r2 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org eclipse core internal filebuffers extension registry r0", "$ r4 = r9 f annotation model factory descriptor", "$ r5 = $ r4 get r1", "r2 = java util set $ r5", "if r2 == null goto label1", "r10 = org eclipse core internal filebuffers extension registry r0", "r3 = r10 select configuration element r2", "r11 = org eclipse core internal filebuffers extension registry r0", "$ r6 = r11 f annotation model factory", "r12 = org eclipse core internal filebuffers extension registry r0", "$ r7 = r12 get extension r3 $ r6 class \\ `` lorg eclipse core filebuffers i annotation model factory \\ ``", "$ r8 = org eclipse core filebuffers i annotation model factory $ r7", "return $ r8", "if r2 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org eclipse core filebuffers location kind ifile", "if r2 == $ r3 goto label1", "$ z1 = 1", "goto label2", "label org eclipse core runtime assert be legal $ z1", "r5 = new org eclipse core internal filebuffers file store text file buffer", "r6 = org eclipse core internal filebuffers text file buffer manager r0", "specialinvoke r5 < init > r6", "r7 = org eclipse core internal filebuffers abstract file buffer r5", "return r7", "if r2 == $ r3 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org eclipse core internal filebuffers file store text file buffer", "r4 = org eclipse core internal filebuffers text file buffer manager r0", "specialinvoke r3 < init > r4", "r5 = org eclipse core internal filebuffers file store file buffer r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "r1 = org eclipse core filesystem provider file info r0", "specialinvoke r1 set 65536", "goto label2", "label return", "if z0 == 0 goto label1", "label r2 = org eclipse core filesystem provider file info r0", "specialinvoke r2 clear 65536"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r3 = new java lang illegal argument exception", "specialinvoke r3 < init >", "throw r3", "if r1 ! = null goto label1", "label r4 = org eclipse core filesystem provider file info r0", "r4 name = r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r5 = org eclipse core internal job object map r0", "$ r2 = r5 element", "$ i0 = lengthof $ r2", "$ i1 = $ i0 + 10", "r1 = newarray java lang object [ $ i1 ]", "r6 = org eclipse core internal job object map r0", "$ r4 = r6 element", "r7 = org eclipse core internal job object map r0", "$ r3 = r7 element", "$ i2 = lengthof $ r3", "java lang system arraycopy $ r4 0 r1 0 $ i2", "r8 = org eclipse core internal job object map r0", "r8 element = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 remove job change listener r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "specialinvoke r0 set system z0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "specialinvoke r0 cancel", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core runtime job lock listener r0", "$ r1 = r2 manager", "$ z0 = $ r1 be lock owner", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org eclipse core internal dtree data tree r0", "$ z0 = r6 be immutable", "if $ z0 == 0 goto label1", "org eclipse core internal dtree data tree handle immutable tree", "label r7 = org eclipse core internal dtree data tree r0", "r3 = r7 find node at r1", "if r3 == null goto label2", "$ z1 = r3 include child r2", "if $ z1 ! = 0 goto label5", "label if r3 ! = null goto label3", "$ r5 = r1", "goto label4", "label org eclipse core internal dtree data tree handle not find $ r5", "goto label6", "label return", "label if r3 ! = null goto label3", "label $ r5 = r1 append r2", "if $ z1 ! = 0 goto label5", "label $ r4 = r3 copy without child r2", "r8 = org eclipse core internal dtree data tree r0", "r8 replace node r1 $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse core internal dtree delta data tree r0", "r2 = org eclipse core internal dtree delta data tree r0", "r1 reroot r2", "r3 = org eclipse core internal dtree delta data tree r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org eclipse core internal dtree delta data tree r0", "$ r2 = r7 parent", "if $ r2 ! = null goto label1", "return", "if $ r2 ! = null goto label1", "label r8 = org eclipse core internal dtree delta data tree r0", "$ r3 = r8 root node", "r9 = org eclipse core internal dtree delta data tree r0", "$ r4 = r9 root key", "r10 = org eclipse core internal dtree delta data tree r0", "$ r5 = r10 parent", "$ r6 = $ r3 simplify with parent $ r4 $ r5 r1", "r11 = org eclipse core internal dtree delta data tree r0", "r11 set root node $ r6"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = r1 iterator", "goto label2", "label $ z0 = r3 have next", "if $ z0 ! = 0 goto label1", "label $ r4 = r3 next", "r2 = org eclipse core internal utils universal unique identifier $ r4", "r5 = org eclipse core internal localstore blob store r0", "r5 delete blob r2", "if $ z0 ! = 0 goto label1", "return"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = r1 get full path", "$ r4 = r2 get full path", "$ z0 = $ r3 equal $ r4", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r11 = org eclipse core internal localstore file store root r0", "$ i0 = r11 chop", "r2 = r1 remove first segment $ i0", "if z0 == 0 goto label1", "r12 = org eclipse core internal localstore file store root r0", "$ r8 = r12 get canonical root", "goto label2", "label r14 = org eclipse core internal localstore file store root r0", "$ r3 = r14 get manager r1", "r10 = $ r3 resolve u r i $ r8", "$ i1 = r2 segment count", "if $ i1 ! = 0 goto label3", "return r10", "if $ i1 ! = 0 goto label3", "label $ r4 = org eclipse core filesystem efs get store r10", "$ r5 = $ r4 get file store r2", "$ r6 = $ r5 to u r i", "label return $ r6", "if z0 == 0 goto label1", "label r13 = org eclipse core internal localstore file store root r0", "$ r8 = r13 root"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse core internal localstore unify tree node r0", "r1 child = null", "r2 = org eclipse core internal localstore unify tree node r0", "r2 resource = null", "r3 = org eclipse core internal localstore unify tree node r0", "r3 store = null", "r4 = org eclipse core internal localstore unify tree node r0", "r4 file info = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse core runtime sub monitor convert r1 1", "$ r4 = org eclipse core resource resource plugin get plugin", "r3 = $ r4 get plugin preference", "r3 add property change listener r0", "r9 = new org eclipse core internal refresh refresh job", "specialinvoke r9 < init >", "r11 = org eclipse core internal refresh refresh manager r0", "r11 refresh job = r9", "r10 = new org eclipse core internal refresh monitor manager", "r12 = org eclipse core internal refresh refresh manager r0", "$ r7 = r12 workspace", "r13 = org eclipse core internal refresh refresh manager r0", "specialinvoke r10 < init > $ r7 r13", "r14 = org eclipse core internal refresh refresh manager r0", "r14 monitor = r10", "z0 = r3 get boolean \\ `` refresh enabled\\ ``", "if z0 == 0 goto label1", "$ r8 = r2 split 1", "r15 = org eclipse core internal refresh refresh manager r0", "r16 = org eclipse core runtime i progress monitor $ r8", "r15 manage auto refresh z0 r16", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org eclipse core internal resource local meta area r0", "$ r2 = r4 get refresh location for r1", "$ r3 = $ r2 to file", "org eclipse core internal resource workspace clear $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core internal resource local meta area r0", "$ r1 = r2 meta area location", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org eclipse core internal resource marker attribute map r0", "$ r2 = r5 element", "$ i0 = lengthof $ r2", "$ i1 = $ i0 + 10", "r1 = newarray java lang object [ $ i1 ]", "r6 = org eclipse core internal resource marker attribute map r0", "$ r4 = r6 element", "r7 = org eclipse core internal resource marker attribute map r0", "$ r3 = r7 element", "$ i2 = lengthof $ r3", "java lang system arraycopy $ r4 0 r1 0 $ i2", "r8 = org eclipse core internal resource marker attribute map r0", "r8 element = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r5 = org eclipse core internal resource marker manager r0", "r2 = r5 find marker info r1 l0", "if r2 ! = null goto label1", "$ r3 = null", "goto label2", "label r6 = org eclipse core resource i marker $ r3", "return r6", "if r2 ! = null goto label1", "label r4 = new org eclipse core internal resource marker", "$ r3 = r4", "$ l1 = r2 get id", "specialinvoke r4 < init > r1 $ l1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org eclipse core internal resource marker manager r0", "$ r3 = r4 cache", "$ z0 = $ r3 be subtype r1 r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core internal resource project info r0", "$ r1 = r2 matcher", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core internal resource project nature descriptor r0", "$ r1 = r2 builder id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse core internal resource resource info r0", "$ i1 = r1 flag", "$ i2 = $ i1 | i0", "r2 = org eclipse core internal resource resource info r0", "r2 flag = $ i2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org eclipse core filesystem efs create file info", "$ z0 = r0 be read only", "r1 set attribute 2 $ z0", "$ z1 = r0 be executable", "r1 set attribute 4 $ z1", "$ z2 = r0 be archive", "r1 set attribute 8 $ z2", "$ z3 = r0 be hidden", "r1 set attribute 16 $ z3", "$ z4 = r0 be symbolic link", "r1 set attribute 32 $ z4", "$ z5 = r0 be set 33554432", "r1 set attribute 33554432 $ z5", "$ z6 = r0 be set 67108864", "r1 set attribute 67108864 $ z6", "$ z7 = r0 be set 134217728", "r1 set attribute 134217728 $ z7", "$ z8 = r0 be set 268435456", "r1 set attribute 268435456 $ z8", "$ z9 = r0 be set 536870912", "r1 set attribute 536870912 $ z9", "$ z10 = r0 be set 1073741824", "r1 set attribute 1073741824 $ z10", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = null goto label1", "if r2 ! = null goto label1", "return 0", "if r2 ! = null goto label1", "label if r1 == null goto label2", "if r2 ! = null goto label3", "label return 1", "if r2 ! = null goto label3", "label r3 = org eclipse core internal watson default element comparator r0", "$ z0 = r3 test equality r1 r2", "if $ z0 == 0 goto label4", "$ b0 = 0", "goto label5", "label return $ b0", "if $ z0 == 0 goto label4", "label $ b0 = 1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 be root", "if $ z0 == 0 goto label1", "r8 = org eclipse core internal watson element tree r0", "return r8", "if $ z0 == 0 goto label1", "label r9 = org eclipse core internal watson element tree r0", "$ r3 = r9 tree", "$ r4 = $ r3 copy complete subtree r1", "r2 = org eclipse core internal dtree data tree node $ r4", "r7 = new org eclipse core internal watson element tree", "specialinvoke r7 < init > r2", "label return r7"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new org eclipse core internal dtree delta data tree", "r5 = new org eclipse core internal dtree data tree node", "$ r4 = newarray org eclipse core internal dtree abstract data tree node [ 1 ]", "$ r4 [ 0 ] = r1", "r7 = org eclipse core internal dtree abstract data tree node [ ] $ r4", "specialinvoke r5 < init > null null r7", "r8 = org eclipse core internal dtree abstract data tree node r5", "specialinvoke r6 < init > r8", "r9 = org eclipse core internal watson element tree r0", "r9 initialize r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = specialinvoke r0 get delta r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org eclipse core internal resource map model provider manager get default", "$ r1 = $ r0 get descriptor", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = new org eclipse core resource map model status", "r9 = org eclipse core resource map model provider r0", "$ r4 = r9 descriptor", "$ r5 = $ r4 get id", "$ r6 = org eclipse core runtime status ok_status", "$ r7 = $ r6 get message", "specialinvoke r8 < init > 0 \\ `` org eclipse core resources\\", "r10 = org eclipse core runtime i status r8", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "specialinvoke r0 reset monitor r1 r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse core resource resource attribute r0", "$ i0 = r1 attribute", "$ i1 = $ i0 & 2", "if $ i1 == 0 goto label1", "return 1", "if $ i1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse core resource resource attribute r0", "$ i1 = r1 attribute", "$ i2 = $ i1 & i0", "if $ i2 == 0 goto label1", "return 1", "if $ i2 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse core resource resource attribute r0", "r1 set 2 z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return null"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org eclipse core internal preference legacy preference forwarder r0", "$ r3 = r6 listener", "$ r3 remove r1", "r7 = org eclipse core internal preference legacy preference forwarder r0", "$ r4 = r7 listener", "$ i0 = $ r4 size", "if $ i0 ! = 0 goto label2", "r8 = org eclipse core internal preference legacy preference forwarder r0", "r2 = r8 get plugin preference 0", "if r2 == null goto label1", "r2 remove preference change listener r0", "label r9 = org eclipse core internal preference legacy preference forwarder r0", "$ r5 = r9 plugin root", "$ r5 remove node change listener r0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse core internal preference legacy preference forwarder r0", "$ r2 = r3 get default preference", "$ z0 = $ r2 get boolean r1 0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r10 = org eclipse core internal preference legacy preference forwarder r0", "$ z1 = r10 get boolean r1", "if $ z1 == 0 goto label1", "$ r8 = java lang boolean true", "goto label2", "label r2 = $ r8", "if z0 == 0 goto label3", "$ r9 = java lang boolean true", "goto label4", "label r3 = $ r9", "if $ r9 ! = r2 goto label5", "return", "if $ r9 ! = r2 goto label5", "label r11 = org eclipse core internal preference legacy preference forwarder r0", "r11 notify = 0", "r12 = org eclipse core internal preference legacy preference forwarder r0", "$ z2 = r12 get default boolean r1", "if $ z2 ! = z0 goto label6", "r13 = org eclipse core internal preference legacy preference forwarder r0", "$ r6 = r13 get plugin preference 1", "$ r6 remove r1", "goto label7", "label r15 = org eclipse core internal preference legacy preference forwarder r0", "r15 fire property change event r1 r2 r3", "goto label9", "label r17 = org eclipse core internal preference legacy preference forwarder r0", "r17 notify = 1", "if $ z2 ! = z0 goto label6", "label r14 = org eclipse core internal preference legacy preference forwarder r0", "$ r5 = r14 get plugin preference 1", "$ r5 put boolean r1 z0", "if z0 == 0 goto label3", "label $ r9 = java lang boolean false", "if $ z1 == 0 goto label1", "label $ r8 = java lang boolean false"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse core internal preference legacy preference forwarder r0", "$ r2 = r3 get default preference", "$ f0 = $ r2 get float r1 0 0f", "return $ f0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse core internal preference legacy preference forwarder r0", "$ r2 = r3 get default preference", "$ i0 = $ r2 get int r1 0", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org eclipse core internal preference legacy preference forwarder r0", "$ r2 = r4 get default preference", "$ r3 = $ r2 get r1 \\ `` \\ ``", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r3 = org eclipse core internal preference legacy preference forwarder r0", "$ r2 = r3 get default preference", "$ r2 put boolean r1 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse core internal runtime internal platform r0", "r2 assert initialize", "org eclipse core internal runtime runtime log add log listener r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r5 = org eclipse core runtime performance stats stat map", "entermonitor $ r5", "label $ r6 = org eclipse core runtime performance stats stat map", "$ r7 = $ r6 key set", "r3 = $ r7 iterator", "goto label3", "label $ z2 = r3 have next", "if $ z2 ! = 0 goto label2", "label $ r8 = r3 next", "r4 = org eclipse core runtime performance stats $ r8", "$ r9 = r4 get event", "$ z0 = $ r9 equal r0", "if $ z0 == 0 goto label3", "$ r10 = r4 get blame", "$ z1 = $ r10 equal r1", "if $ z1 == 0 goto label3", "r3 remove", "if $ z2 ! = 0 goto label2", "exitmonitor $ r5", "label goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core runtime performance stats r0", "$ r1 = r2 event", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ z0 = org eclipse core runtime performance stats enable", "if $ z0 == 0 goto label1", "r1 = org eclipse core runtime performance stats r0", "r1 start run null", "label return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org eclipse core internal runtime internal platform get default", "$ r2 = $ r1 get state location r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org osgi framework framework util get bundle r0", "$ r2 = org eclipse core internal runtime internal platform get default", "$ r3 = $ r2 get log r1", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org eclipse core internal runtime internal platform get default", "$ r1 = $ r0 get o s arch", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org eclipse core internal runtime internal platform get default", "$ r1 = $ r0 get application args", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org eclipse core internal runtime internal platform get default", "$ r1 = $ r0 get bundle group provider", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org eclipse core internal runtime internal platform get default", "$ r2 = $ r1 get host r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org eclipse core internal runtime internal platform get default", "r4 = org eclipse core runtime plugin r0", "$ r2 = r4 get bundle", "$ r3 = $ r1 get log $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org eclipse core runtime plugin r0", "$ r2 = r4 get bundle", "$ r3 = org eclipse core runtime file locator open stream $ r2 r1 0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core internal variable string variable r0", "$ r1 = r2 f configuration element", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org eclipse debug core debug plugin get adapter r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org eclipse debug core debug plugin r0", "$ r1 = r5 f expression manager", "if $ r1 ! = null goto label1", "r4 = new org eclipse debug internal core expression manager", "specialinvoke r4 < init >", "r6 = org eclipse debug core debug plugin r0", "r6 f expression manager = r4", "label r7 = org eclipse debug core debug plugin r0", "$ r2 = r7 f expression manager", "r8 = org eclipse debug core i expression manager $ r2", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r6 = org eclipse debug core launch r0", "$ z0 = r6 f suppress change", "if $ z0 ! = 0 goto label1", "r7 = org eclipse debug core launch r0", "$ r1 = r7 get launch manager", "$ r2 = org eclipse debug internal core launch manager $ r1", "$ r2 fire update r0 2", "r8 = org eclipse debug core launch r0", "$ r3 = r8 get launch manager", "$ r5 = org eclipse debug internal core launch manager $ r3", "$ r4 = newarray org eclipse debug core i launch [ 1 ]", "$ r4 [ 0 ] = r0", "r9 = org eclipse debug core i launch [ ] $ r4", "$ r5 fire update r9 2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r2 = org eclipse core resource resource plugin get workspace", "r5 = org eclipse debug core model breakpoint r0", "r3 = breakpoint $ lambda_0__2 bootstrap $ r5 r1 z0", "r6 = org eclipse debug core model breakpoint r0", "$ r4 = r6 get marker rule", "r2 run r3 $ r4 1 null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = new org eclipse debug core debug event", "specialinvoke r2 < init > r0 2 i0", "r3 = org eclipse debug core model debug element r0", "r3 fire event r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "r1 = org eclipse debug core model memory byte r0", "r1 flag = b0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse debug core model memory byte r0", "$ b0 = r1 flag", "$ b1 = $ b0 & 4", "if $ b1 ! = 4 goto label1", "return 1", "if $ b1 ! = 4 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse debug core model memory byte r0", "$ b0 = r1 flag", "$ b1 = $ b0 | 16", "$ b2 = byte $ b1", "r2 = org eclipse debug core model memory byte r0", "r2 flag = $ b2", "if z0 ! = 0 goto label1", "r3 = org eclipse debug core model memory byte r0", "$ b3 = r3 flag", "$ b4 = $ b3 ^ 16", "$ b5 = byte $ b4", "r4 = org eclipse debug core model memory byte r0", "r4 flag = $ b5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org eclipse debug core sourcelookup abstract source lookup director r0", "$ r3 = r7 f config", "if $ r3 == null goto label1", "$ z0 = r1 be work copy", "if $ z0 == 0 goto label2", "label return", "if $ z0 == 0 goto label2", "label r8 = org eclipse debug core sourcelookup abstract source lookup director r0", "$ r4 = r8 f config", "$ z1 = $ r4 equal r1", "if $ z1 == 0 goto label7", "label $ r5 = org eclipse debug core i launch configuration attr_source_locator_memento", "r2 = r1 get attribute $ r5 null", "if r2 ! = null goto label4", "r9 = org eclipse debug core sourcelookup abstract source lookup director r0", "r9 initialize default r1", "goto label7", "label return", "if r2 ! = null goto label4", "label r10 = org eclipse debug core sourcelookup abstract source lookup director r0", "r10 initialize from memento r2 r1", "label goto label7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse debug core sourcelookup container local file storage r0", "$ r1 = r2 f file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r14 = org eclipse debug internal core launch configuration info r0", "$ r4 = r14 get attribute table", "r3 = $ r4 get r1", "if r3 == null goto label2", "$ z0 = r3 instanceof java util list", "if $ z0 == 0 goto label1", "$ r11 = java util list r3", "return $ r11", "if $ z0 == 0 goto label1", "label r13 = new org eclipse debug core debug exception", "r12 = new org eclipse core runtime status", "$ r7 = org eclipse debug core debug plugin get unique identifier", "$ r9 = org eclipse debug internal core debug core message launch configuration info_ attribute__0__is_not_of_type_java_util_ list__1", "$ r8 = newarray java lang object [ 1 ]", "$ r8 [ 0 ] = r1", "$ r10 = java text message format format $ r9 $ r8", "specialinvoke r12 < init > 4 $ r7 5012 $ r10 null", "r15 = org eclipse core runtime i status r12", "specialinvoke r13 < init > r15", "r16 = java lang throwable r13", "throw r16", "if r3 == null goto label2", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get attribute \\ `` key\\ ``", "if r2 ! = null goto label1", "r4 = org eclipse debug internal core launch configuration info r0", "$ r3 = r4 get invalid format debug exception", "r5 = java lang throwable $ r3", "throw r5", "if r2 ! = null goto label1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r3 = new java util hash set", "specialinvoke r3 < init > r1", "r4 = org eclipse debug internal core launch configuration info r0", "r4 f visible attribute = r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org eclipse debug internal core logical structure provider r0", "$ r2 = r7 f model identifier", "$ r3 = r1 get model identifier", "$ z0 = $ r2 equal $ r3", "if $ z0 == 0 goto label1", "r8 = org eclipse debug internal core logical structure provider r0", "$ r5 = r8 get delegate", "$ r6 = $ r5 get logical structure type r1", "return $ r6", "if $ z0 == 0 goto label1", "label $ r4 = newarray org eclipse debug core i logical structure type [ 0 ]", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["$ r5 = org eclipse debug internal core sourcelookup source lookup utils fg zip file cache", "entermonitor $ r5", "label $ r6 = org eclipse debug internal core sourcelookup source lookup utils fg zip file cache", "$ r7 = $ r6 value", "r2 = $ r7 iterator", "goto label10", "label $ z0 = r2 have next", "if $ z0 ! = 0 goto label02", "label $ r8 = r2 next", "r1 = java util zip zip file $ r8", "entermonitor r1", "label r1 close", "label goto label06", "label exitmonitor r1", "label goto label10", "if $ z0 ! = 0 goto label02", "$ r10 = org eclipse debug internal core sourcelookup source lookup utils fg zip file cache", "$ r10 clear", "exitmonitor $ r5", "label goto label14", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "$ r1 = org eclipse core resource resource plugin get workspace", "$ r2 = $ r1 get root", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org eclipse debug core debug plugin get default", "$ r3 = newarray org eclipse debug core debug event [ 1 ]", "$ r3 [ 0 ] = r1", "$ r2 fire debug event set $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r1 = org eclipse core internal runtime runtime log log listener", "entermonitor $ r1", "label $ r2 = org eclipse core internal runtime runtime log log listener", "$ z0 = $ r2 be empty", "if $ z0 == 0 goto label2", "$ r3 = org eclipse core internal runtime runtime log log writer", "if $ r3 ! = null goto label2", "$ z1 = 1", "goto label3", "label exitmonitor $ r1", "label return $ z1", "if $ r3 ! = null goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org eclipse core runtime path be valid path r0 1", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core runtime progress monitor wrapper r0", "$ r1 = r2 progress monitor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get path", "if r1 ! = null goto label1", "$ r4 = new org eclipse core runtime path", "$ r5 = r0 get scheme specific part", "specialinvoke $ r4 < init > $ r5", "$ r6 = $ r4 last segment", "return $ r6", "if r1 ! = null goto label1", "label $ r2 = new org eclipse core runtime path", "specialinvoke $ r2 < init > r1", "$ r3 = $ r2 last segment", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java net url", "$ r2 = r0 to string", "specialinvoke $ r1 < init > $ r2", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i1 = r0 index of 47", "if $ i1 ! = 0 goto label1", "$ b4 = 1", "goto label2", "label i5 = $ b4", "i6 = r0 index of 47 $ b4", "$ i2 = r0 length", "$ i3 = $ i2 - 1", "if i6 ! = $ i3 goto label3", "i6 = -1", "label i7 = 0", "goto label6", "label if i7 < i0 goto label4", "label if i6 ! = -1 goto label5", "return null", "label if i6 ! = -1 goto label5", "label i5 = i6 + 1", "i6 = r0 index of 47 i5", "i7 = i7 + 1", "label if i7 < i0 goto label4", "if i6 ! = -1 goto label7", "i6 = r0 length", "label $ r1 = r0 substring i5 i6", "return $ r1", "if $ i1 ! = 0 goto label1", "label $ b4 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], []]}
{"nodes": ["$ r0 = org eclipse core internal preference preference service instance", "if $ r0 ! = null goto label1", "$ r2 = new org eclipse core internal preference preference service", "specialinvoke $ r2 < init >", "org eclipse core internal preference preference service instance = $ r2", "label $ r1 = org eclipse core internal preference preference service instance", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core runtime preference preference metadata r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse core internal registry read write monitor r0", "$ r1 = r3 write lockowner", "$ r2 = java lang thread current thread", "if $ r1 ! = $ r2 goto label1", "return", "if $ r1 ! = $ r2 goto label1", "label r4 = org eclipse core internal registry read write monitor r0", "$ i0 = r4 status", "$ i1 = $ i0 - 1", "r5 = org eclipse core internal registry read write monitor r0", "r5 status = $ i1", "if $ i1 ! = 0 goto label2", "r0 notify all", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core internal registry spi configuration element attribute r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core internal registry spi configuration element description r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 to string", "r3 = new org eclipse core runtime spi registry contributor", "specialinvoke r3 < init > r1 r1 null null", "r4 = org eclipse core runtime i contributor r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r4 = new org eclipse core internal registry extension registry", "specialinvoke r4 < init > r0 r1 r2", "r5 = org eclipse core runtime i extension registry r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r1 = @ parameter3", "i2 = @ parameter4", "i3 = @ parameter5", "$ z0 = org eclipse jdt core compiler char operation camel case match r0 i0 i1 r1 i2 i3 0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ i0 = r0 size", "r1 = newarray char [ ] [ $ i0 ]", "i2 = 0", "goto label3", "label $ i1 = lengthof r1", "if i2 < $ i1 goto label2", "label $ r2 = r0 get i2", "$ r3 = java lang string $ r2", "$ r4 = $ r3 to char array", "r1 [ i2 ] = $ r4", "i2 = i2 + 1", "if i2 < $ i1 goto label2", "return r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "i0 = java util array hash code r0", "$ i1 = i0 & 2147483647", "return $ i1"], "adj": [[1], [2], [3], []]}
{"nodes": ["c0 = @ parameter0", "r0 = @ parameter1", "i2 = 0", "i3 = 0", "goto label3", "label $ i4 = lengthof r0", "if i3 < $ i4 goto label1", "label $ c1 = r0 [ i3 ]", "if c0 ! = $ c1 goto label2", "i2 = i2 + 1", "label i3 = i3 + 1", "if i3 < $ i4 goto label1", "return i2"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core compiler reconcile context r0", "$ r1 = r2 work copy", "r3 = org eclipse jdt core i compilation unit $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core compiler reconcile context r0", "$ r1 = r2 operation", "$ r1 ast = null", "r3 = org eclipse jdt core compiler reconcile context r0", "r3 put problem \\ `` org eclipse jdt core problem\\", "r4 = org eclipse jdt core compiler reconcile context r0", "r4 put problem \\ `` org eclipse jdt core task\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom abstract type declaration r0", "$ r1 = r2 body declaration", "r3 = java util list $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ z0 = r0 instanceof org eclipse jdt core dom marker annotation", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = org eclipse jdt core dom annotation type declaration property_descriptors", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom anonymous class declaration r0", "$ r1 = r2 body declaration", "r3 = java util list $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom assignment r0", "$ r1 = r2 assignment operator", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = r1 goto label1", "return 1", "if r0 ! = r1 goto label1", "label if r0 == null goto label2", "if r1 ! = null goto label3", "label return 0", "if r1 ! = null goto label3", "label $ z0 = r0 equal r1", "return $ z0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = lengthof r1", "r2 = newarray org eclipse jdt core dom i bind [ i0 ]", "i1 = 0", "goto label3", "label if i1 < i0 goto label1", "label r2 [ i1 ] = null", "r7 = org eclipse jdt core dom a s t requestor r0", "$ r3 = r7 compilation unit resolver", "if $ r3 == null goto label2", "r8 = org eclipse jdt core dom a s t requestor r0", "$ r5 = r8 compilation unit resolver", "$ r4 = r1 [ i1 ]", "$ r6 = $ r5 create bind $ r4", "r2 [ i1 ] = $ r6", "label i1 = i1 + 1", "label if i1 < i0 goto label1", "return r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse jdt core dom break statement r0", "r5 support only in12", "r6 = org eclipse jdt core dom break statement r0", "r2 = r6 optional expression", "$ r3 = org eclipse jdt core dom break statement expression_property", "r7 = org eclipse jdt core dom break statement r0", "r8 = org eclipse jdt core dom a s t node r2", "r9 = org eclipse jdt core dom a s t node r1", "r7 pre replace child r8 r9 $ r3", "r10 = org eclipse jdt core dom break statement r0", "r10 optional expression = r1", "$ r4 = org eclipse jdt core dom break statement expression_property", "r11 = org eclipse jdt core dom break statement r0", "r12 = org eclipse jdt core dom a s t node r2", "r13 = org eclipse jdt core dom a s t node r1", "r11 post replace child r12 r13 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom child list property descriptor r0", "$ r1 = r2 element type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org eclipse jdt core dom class instance creation r0", "r7 unsupported in2", "if r1 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init >", "throw r6", "if r1 ! = null goto label1", "label r8 = org eclipse jdt core dom class instance creation r0", "r2 = r8 type", "$ r3 = org eclipse jdt core dom class instance creation type_property", "r9 = org eclipse jdt core dom class instance creation r0", "r10 = org eclipse jdt core dom a s t node r2", "r11 = org eclipse jdt core dom a s t node r1", "r9 pre replace child r10 r11 $ r3", "r12 = org eclipse jdt core dom class instance creation r0", "r12 type = r1", "$ r4 = org eclipse jdt core dom class instance creation type_property", "r13 = org eclipse jdt core dom class instance creation r0", "r14 = org eclipse jdt core dom a s t node r2", "r15 = org eclipse jdt core dom a s t node r1", "r13 post replace child r14 r15 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "$ z0 = r0 instanceof org eclipse jdt core dom javadoc", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r12 = org eclipse jdt core dom compilation unit r0", "$ r2 = r12 message", "if $ r2 ! = null goto label4", "r13 = org eclipse jdt core dom compilation unit r0", "$ r3 = r13 problem", "i0 = lengthof $ r3", "if i0 ! = 0 goto label1", "$ r9 = org eclipse jdt core dom compilation unit empty_messages", "r14 = org eclipse jdt core dom compilation unit r0", "r14 message = $ r9", "goto label4", "label r18 = org eclipse jdt core dom compilation unit r0", "$ r10 = r18 message", "return $ r10", "if i0 ! = 0 goto label1", "label $ r4 = newarray org eclipse jdt core dom message [ i0 ]", "r15 = org eclipse jdt core dom compilation unit r0", "r15 message = $ r4", "i5 = 0", "goto label3", "label if i5 < i0 goto label2", "label r16 = org eclipse jdt core dom compilation unit r0", "$ r5 = r16 problem", "r1 = $ r5 [ i5 ]", "i1 = r1 get source start", "i2 = r1 get source end", "r17 = org eclipse jdt core dom compilation unit r0", "$ r7 = r17 message", "r11 = new org eclipse jdt core dom message", "$ r8 = r1 get message", "$ i3 = i2 - i1", "$ i4 = $ i3 + 1", "specialinvoke r11 < init > $ r8 i1 $ i4", "$ r7 [ i5 ] = r11", "i5 = i5 + 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom compilation unit r0", "$ r1 = r2 statement recovery data", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom dimension r0", "$ r1 = r2 annotation", "r3 = java util list $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom enum constant declaration r0", "$ r1 = r2 optional anonymous class declaration", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jdt core dom enum constant declaration r0", "$ r1 = r4 ast", "$ r2 = $ r1 get bind resolver", "r5 = org eclipse jdt core dom enum constant declaration r0", "$ r3 = $ r2 resolve constructor r5", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom guard pattern r0", "r2 support only in17", "r3 = org eclipse jdt core dom guard pattern r0", "r3 unsupported without preview error", "r4 = org eclipse jdt core dom guard pattern r0", "$ r1 = r4 conditonal expression", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse jdt core dom guard pattern r0", "r5 support only in17", "r6 = org eclipse jdt core dom guard pattern r0", "r6 unsupported without preview error", "r7 = org eclipse jdt core dom guard pattern r0", "r2 = r7 pattern", "$ r3 = org eclipse jdt core dom guard pattern pattern_property", "r8 = org eclipse jdt core dom guard pattern r0", "r9 = org eclipse jdt core dom a s t node r2", "r10 = org eclipse jdt core dom a s t node r1", "r8 pre replace child r9 r10 $ r3", "r11 = org eclipse jdt core dom guard pattern r0", "r11 pattern = r1", "$ r4 = org eclipse jdt core dom guard pattern pattern_property", "r12 = org eclipse jdt core dom guard pattern r0", "r13 = org eclipse jdt core dom a s t node r2", "r14 = org eclipse jdt core dom a s t node r1", "r12 post replace child r13 r14 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init >", "throw r6", "if r1 ! = null goto label1", "label r7 = org eclipse jdt core dom initializer r0", "r2 = r7 body", "$ r3 = org eclipse jdt core dom initializer body_property", "r8 = org eclipse jdt core dom initializer r0", "r9 = org eclipse jdt core dom a s t node r2", "r10 = org eclipse jdt core dom a s t node r1", "r8 pre replace child r9 r10 $ r3", "r11 = org eclipse jdt core dom initializer r0", "r11 body = r1", "$ r4 = org eclipse jdt core dom initializer body_property", "r12 = org eclipse jdt core dom initializer r0", "r13 = org eclipse jdt core dom a s t node r2", "r14 = org eclipse jdt core dom a s t node r1", "r12 post replace child r13 r14 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt core dom lambda expression r0", "$ z0 = r1 have parenthesis", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jdt core dom member ref r0", "$ r1 = r4 ast", "$ r2 = $ r1 get bind resolver", "r5 = org eclipse jdt core dom member ref r0", "$ r3 = $ r2 resolve reference r5", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse jdt core dom method declaration r0", "r5 unsupported in2_3_4", "r6 = org eclipse jdt core dom method declaration r0", "r2 = r6 optional receiver type", "$ r3 = org eclipse jdt core dom method declaration receiver_type_property", "r7 = org eclipse jdt core dom method declaration r0", "r8 = org eclipse jdt core dom a s t node r2", "r9 = org eclipse jdt core dom a s t node r1", "r7 pre replace child r8 r9 $ r3", "r10 = org eclipse jdt core dom method declaration r0", "r10 optional receiver type = r1", "$ r4 = org eclipse jdt core dom method declaration receiver_type_property", "r11 = org eclipse jdt core dom method declaration r0", "r12 = org eclipse jdt core dom a s t node r2", "r13 = org eclipse jdt core dom a s t node r1", "r11 post replace child r12 r13 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom method declaration r0", "$ r1 = r2 internal get return type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse jdt core dom method declaration r0", "r5 unsupported in2", "r6 = org eclipse jdt core dom method declaration r0", "r6 return type2 initialize = 1", "r7 = org eclipse jdt core dom method declaration r0", "r2 = r7 return type", "$ r3 = org eclipse jdt core dom method declaration return_type2_property", "r8 = org eclipse jdt core dom method declaration r0", "r9 = org eclipse jdt core dom a s t node r2", "r10 = org eclipse jdt core dom a s t node r1", "r8 pre replace child r9 r10 $ r3", "r11 = org eclipse jdt core dom method declaration r0", "r11 return type = r1", "$ r4 = org eclipse jdt core dom method declaration return_type2_property", "r12 = org eclipse jdt core dom method declaration r0", "r13 = org eclipse jdt core dom a s t node r2", "r14 = org eclipse jdt core dom a s t node r1", "r12 post replace child r13 r14 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse jdt core dom method invocation r0", "r2 = r5 optional expression", "$ r3 = org eclipse jdt core dom method invocation expression_property", "r6 = org eclipse jdt core dom method invocation r0", "r7 = org eclipse jdt core dom a s t node r2", "r8 = org eclipse jdt core dom a s t node r1", "r6 pre replace child r7 r8 $ r3", "r9 = org eclipse jdt core dom method invocation r0", "r9 optional expression = r1", "$ r4 = org eclipse jdt core dom method invocation expression_property", "r10 = org eclipse jdt core dom method invocation r0", "r11 = org eclipse jdt core dom a s t node r2", "r12 = org eclipse jdt core dom a s t node r1", "r10 post replace child r11 r12 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jdt core dom modifier r0", "$ r2 = r3 modifier keyword", "$ r1 = org eclipse jdt core dom modifier $ modifier keyword public_keyword", "if $ r2 ! = $ r1 goto label1", "return 1", "if $ r2 ! = $ r1 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jdt core dom modifier r0", "$ r2 = r3 modifier keyword", "$ r1 = org eclipse jdt core dom modifier $ modifier keyword final_keyword", "if $ r2 ! = $ r1 goto label1", "return 1", "if $ r2 ! = $ r1 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jdt core dom modifier r0", "$ r2 = r3 modifier keyword", "$ r1 = org eclipse jdt core dom modifier $ modifier keyword private_keyword", "if $ r2 ! = $ r1 goto label1", "return 1", "if $ r2 ! = $ r1 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org eclipse jdt core dom module declaration open_property", "r3 = org eclipse jdt core dom module declaration r0", "r3 pre value change $ r1", "r4 = org eclipse jdt core dom module declaration r0", "r4 be open = z0", "$ r2 = org eclipse jdt core dom module declaration open_property", "r5 = org eclipse jdt core dom module declaration r0", "r5 post value change $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom module qualify name r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = r1 get offset", "$ i1 = r1 get length", "$ r2 = org eclipse jdt core dom node finder perform r0 $ i0 $ i1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r5 = new java lang illegal argument exception", "specialinvoke r5 < init >", "throw r5", "if r1 ! = null goto label1", "label $ r2 = org eclipse jdt core dom postfix expression operator_property", "r6 = org eclipse jdt core dom postfix expression r0", "r6 pre value change $ r2", "r7 = org eclipse jdt core dom postfix expression r0", "r7 operator = r1", "$ r3 = org eclipse jdt core dom postfix expression operator_property", "r8 = org eclipse jdt core dom postfix expression r0", "r8 post value change $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = @ parameter2", "if r1 ! = null goto label1", "r4 = new java lang illegal argument exception", "specialinvoke r4 < init >", "throw r4", "if r1 ! = null goto label1", "label r5 = org eclipse jdt core dom rewrite list rewrite r0", "$ z0 = r5 be insert bound to previous by default r1", "r6 = org eclipse jdt core dom rewrite list rewrite r0", "r6 internal insert at r1 i0 $ z0 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init >", "throw r6", "if r1 ! = null goto label1", "label r7 = org eclipse jdt core dom single variable declaration r0", "r2 = r7 type", "$ r3 = org eclipse jdt core dom single variable declaration type_property", "r8 = org eclipse jdt core dom single variable declaration r0", "r9 = org eclipse jdt core dom a s t node r2", "r10 = org eclipse jdt core dom a s t node r1", "r8 pre replace child r9 r10 $ r3", "r11 = org eclipse jdt core dom single variable declaration r0", "r11 type = r1", "$ r4 = org eclipse jdt core dom single variable declaration type_property", "r12 = org eclipse jdt core dom single variable declaration r0", "r13 = org eclipse jdt core dom a s t node r2", "r14 = org eclipse jdt core dom a s t node r1", "r12 post replace child r13 r14 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom super field access r0", "$ r1 = r2 optional qualifier", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org eclipse jdt core dom switch case r0", "r3 unsupported below14", "$ r1 = org eclipse jdt core dom switch case switch_labeled_rule_property", "r4 = org eclipse jdt core dom switch case r0", "r4 pre value change $ r1", "r5 = org eclipse jdt core dom switch case r0", "r5 switch label rule = z0", "$ r2 = org eclipse jdt core dom switch case switch_labeled_rule_property", "r6 = org eclipse jdt core dom switch case r0", "r6 post value change $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom tag element r0", "$ r1 = r2 fragment", "r3 = java util list $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom abstract type declaration r0", "$ r1 = r2 internal resolve bind", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt core dom type declaration r0", "$ z0 = r1 be interface", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom type declaration r0", "r2 unsupported in2", "r3 = org eclipse jdt core dom type declaration r0", "$ r1 = r3 optional superclass type", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jdt core dom type declaration r0", "r2 internal set superclass r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jdt core dom type declaration statement r0", "r2 internal set type declaration r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init >", "throw r6", "if r1 ! = null goto label1", "label r7 = org eclipse jdt core dom type literal r0", "r2 = r7 type", "$ r3 = org eclipse jdt core dom type literal type_property", "r8 = org eclipse jdt core dom type literal r0", "r9 = org eclipse jdt core dom a s t node r2", "r10 = org eclipse jdt core dom a s t node r1", "r8 pre replace child r9 r10 $ r3", "r11 = org eclipse jdt core dom type literal r0", "r11 type = r1", "$ r4 = org eclipse jdt core dom type literal type_property", "r12 = org eclipse jdt core dom type literal r0", "r13 = org eclipse jdt core dom a s t node r2", "r14 = org eclipse jdt core dom a s t node r1", "r12 post replace child r13 r14 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom type method reference r0", "$ r1 = r2 type argument", "r3 = java util list $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom variable declaration r0", "$ r1 = r2 internal name property", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom variable declaration expression r0", "$ r1 = r2 variable declaration fragment", "r3 = java util list $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 256", "if $ i1 == 0 goto label1", "return 1", "if $ i1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [], [5], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 1", "if $ i1 == 0 goto label1", "return 1", "if $ i1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [], [5], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 8192", "if $ i1 == 0 goto label1", "return 1", "if $ i1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [], [5], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 131072", "if $ i1 == 0 goto label1", "return 1", "if $ i1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [], [5], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r1 = new java lang illegal argument exception", "specialinvoke $ r1 < init >", "throw $ r1", "if r0 ! = null goto label1", "label $ i0 = org eclipse jdt core formatter indent manipulation get int value r0 \\ `` org eclipse jdt core formatter tabulation size\\", "return $ i0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org eclipse jdt core java convention validate identifier r0 r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt core search method reference match r0", "$ z0 = r1 synthetic", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jdt core search search document r0", "$ r1 = r4 index", "if $ r1 == null goto label1", "r5 = org eclipse jdt core search search document r0", "$ r2 = r5 index", "r6 = org eclipse jdt core search search document r0", "$ r3 = r6 get container relative path", "$ r2 remove $ r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "z0 = @ parameter3", "$ i4 = r0 index of 42", "if $ i4 ! = -1 goto label1", "$ i5 = r0 index of 63", "if $ i5 == -1 goto label2", "label $ b6 = 2", "goto label3", "label if z0 == 0 goto label4", "$ b7 = $ b6 | 8", "goto label5", "label r3 = new org eclipse jdt core search search engine $ search pattern adapter", "$ r2 = org eclipse jdt core search search pattern create pattern r0 i0 i1 $ b7", "specialinvoke r3 < init > $ r2", "r4 = org eclipse jdt core search i search pattern r3", "return r4", "label if z0 == 0 goto label4", "label $ b7 = $ b6", "if $ i5 == -1 goto label2", "label $ b6 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jdt core search search match r0", "r1 rule = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "label r4 = new org eclipse jdt internal core util class file reader", "$ r2 = org eclipse jdt internal compiler util util get input stream a byte array r0", "specialinvoke r4 < init > $ r2 i0", "label r5 = org eclipse jdt core util i class file reader r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "i0 = r2 position", "if z0 == 0 goto label1", "r4 = org eclipse jdt internal compiler ast false literal r0", "$ r3 = r4 constant", "r5 = org eclipse jdt internal compiler ast false literal r0", "$ i2 = r5 implicit conversion", "r2 generate constant $ r3 $ i2", "label r6 = org eclipse jdt internal compiler ast false literal r0", "$ i1 = r6 source start", "r2 record position from i0 $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org eclipse jdt internal compiler ast type pattern r0", "$ r3 = r8 resolve type", "if $ r3 ! = null goto label1", "r9 = org eclipse jdt internal compiler ast type pattern r0", "$ r5 = r9 local", "$ r6 = $ r5 bind", "$ r7 = $ r6 type", "r10 = org eclipse jdt internal compiler ast type pattern r0", "r10 resolve type = $ r7", "label r11 = org eclipse jdt internal compiler ast type pattern r0", "$ r4 = r11 resolve type", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ z0 = r0 be empty", "if $ z0 ! = 0 goto label1", "$ c0 = r0 char at 0", "if $ c0 == 32 goto label2", "label return null", "if $ c0 == 32 goto label2", "label $ r1 = r0 substring 1", "$ r2 = org eclipse jdt internal compiler classfmt external annotation provider trim tail $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r6 = org eclipse jdt internal compiler compilation result r0", "r1 = r6 get problem", "i2 = 0", "i3 = 0", "goto label3", "label r7 = org eclipse jdt internal compiler compilation result r0", "$ i4 = r7 problem count", "if i3 < $ i4 goto label1", "label $ r2 = r1 [ i3 ]", "$ z0 = $ r2 be error", "if $ z0 == 0 goto label2", "i2 = i2 + 1", "label i3 = i3 + 1", "if i3 < $ i4 goto label1", "r8 = org eclipse jdt internal compiler compilation result r0", "$ i0 = r8 problem count", "if i2 ! = $ i0 goto label4", "return r1", "if i2 ! = $ i0 goto label4", "label r5 = newarray org eclipse jdt core compiler categorize problem [ i2 ]", "i5 = 0", "i6 = 0", "goto label7", "label r9 = org eclipse jdt internal compiler compilation result r0", "$ i7 = r9 problem count", "if i6 < $ i7 goto label5", "label $ r3 = r1 [ i6 ]", "$ z1 = $ r3 be error", "if $ z1 == 0 goto label6", "$ i1 = i5", "i5 = i5 + 1", "$ r4 = r1 [ i6 ]", "r5 [ $ i1 ] = $ r4", "label i6 = i6 + 1", "if i6 < $ i7 goto label5", "return r5"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jdt internal compiler compiler r0", "$ i1 = r1 annotation processor start index", "if i0 > = $ i1 goto label1", "return 1", "if i0 > = $ i1 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r1 = new org eclipse jdt internal compiler default error handle policy $ 2", "specialinvoke r1 < init >", "r2 = org eclipse jdt internal compiler i error handle policy r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0l"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal compiler lookup field bind r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 parameter", "r13 = org eclipse jdt internal compiler lookup method bind r0", "$ r3 = r13 parameter", "if $ r3 ! = r2 goto label1", "return 1", "if $ r3 ! = r2 goto label1", "label r14 = org eclipse jdt internal compiler lookup method bind r0", "$ r4 = r14 parameter", "i0 = lengthof $ r4", "$ i1 = lengthof r2", "if i0 == $ i1 goto label2", "return 0", "if i0 == $ i1 goto label2", "label i2 = 0", "goto label5", "label if i2 < i0 goto label3", "label r15 = org eclipse jdt internal compiler lookup method bind r0", "$ r5 = r15 parameter", "$ r7 = $ r5 [ i2 ]", "$ r6 = r2 [ i2 ]", "$ z0 = org eclipse jdt internal compiler lookup type bind not equal $ r7 $ r6", "if $ z0 == 0 goto label4", "r16 = org eclipse jdt internal compiler lookup method bind r0", "$ r8 = r16 parameter", "$ r9 = $ r8 [ i2 ]", "$ r10 = $ r9 erasure", "$ r11 = r2 [ i2 ]", "$ r12 = $ r11 erasure", "$ z1 = org eclipse jdt internal compiler lookup type bind not equal $ r10 $ r12", "if $ z1 == 0 goto label4", "label i2 = i2 + 1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal compiler lookup method bind r0", "$ i0 = r1 modifier", "$ i1 = $ i0 & 1024", "if $ i1 == 0 goto label1", "return 1", "if $ i1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal compiler lookup method bind r0", "$ i0 = r1 modifier", "$ i1 = $ i0 & 524288", "if $ i1 == 0 goto label1", "return 1", "if $ i1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal compiler lookup method bind r0", "$ i0 = r1 modifier", "$ i1 = $ i0 & 65536", "if $ i1 == 0 goto label1", "return 1", "if $ i1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = r0 get file name", "r1 = $ r2 to string", "$ i0 = r1 length", "if $ i0 < = 1 goto label1", "$ i1 = r1 length", "$ i2 = $ i1 - 1", "$ c3 = r1 char at $ i2", "if $ c3 ! = 47 goto label1", "$ i4 = r1 length", "$ i5 = $ i4 - 1", "$ r3 = r1 substring 0 $ i5", "return $ r3", "if $ c3 ! = 47 goto label1", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = org eclipse jdt internal core util message build_compiling", "$ r3 = r1 resource", "$ r5 = $ r3 get full path", "$ r6 = $ r5 remove last segment 1", "$ r7 = $ r6 make relative", "$ r8 = $ r7 to string", "r2 = org eclipse jdt internal core util message bind $ r4 $ r8", "r9 = org eclipse jdt internal core builder build notifier r0", "r9 sub task r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["org eclipse jdt internal core builder build notifier reset problem counter", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r33 = org eclipse jdt internal core create package fragment operation r0", "r1 = r33 get parent element", "if r1 ! = null goto label01", "r29 = new org eclipse jdt internal core java model status", "specialinvoke r29 < init > 968", "r34 = org eclipse jdt core i java model status r29", "return r34", "if r1 ! = null goto label01", "label r35 = org eclipse jdt internal core create package fragment operation r0", "$ r6 = r35 pkg name", "if $ r6 ! = null goto label02", "$ r26 = null", "goto label03", "label r2 = $ r26", "r3 = r1 get java project", "r37 = org eclipse jdt internal core create package fragment operation r0", "$ r8 = r37 pkg name", "if $ r8 == null goto label04", "r38 = org eclipse jdt internal core create package fragment operation r0", "$ r10 = r38 pkg name", "$ i0 = lengthof $ r10", "if $ i0 < = 0 goto label05", "$ r22 = r3 get option \\ `` org eclipse jdt core compiler source\\", "$ r23 = r3 get option \\ `` org eclipse jdt core compiler compliance\\", "$ r24 = org eclipse jdt core java convention validate package name $ r26 $ r22 $ r23", "$ i2 = $ r24 get severity", "if $ i2 ! = 4 goto label05", "label r30 = new org eclipse jdt internal core java model status", "specialinvoke r30 < init > 983 r2", "r39 = org eclipse jdt core i java model status r30", "return r39", "if $ i2 ! = 4 goto label05", "label r40 = org eclipse jdt internal core create package fragment operation r0", "r4 = r40 get parent element", "$ z0 = r4 be read only", "if $ z0 == 0 goto label06", "r31 = new org eclipse jdt internal core java model status", "specialinvoke r31 < init > 976 r4", "r41 = org eclipse jdt core i java model status r31", "return r41", "if $ z0 == 0 goto label06", "label $ r11 = org eclipse jdt internal core java element r4", "$ r12 = $ r11 resource", "r27 = org eclipse core resource i container $ r12", "i3 = 0", "goto label10", "label r44 = org eclipse jdt internal core create package fragment operation r0", "$ r28 = r44 pkg name", "$ i4 = lengthof $ r28", "if i3 < $ i4 goto label07", "label r42 = org eclipse jdt internal core create package fragment operation r0", "$ r13 = r42 pkg name", "$ r14 = $ r13 [ i3 ]", "r5 = r27 find member $ r14", "if r5 == null goto label09", "$ i1 = r5 get type", "if $ i1 == 2 goto label08", "r32 = new org eclipse jdt internal core java model status", "$ r16 = org eclipse jdt internal core util message status_name collision", "$ r17 = r5 get full path", "$ r18 = $ r17 to string", "$ r19 = org eclipse jdt internal core util message bind $ r16 $ r18", "specialinvoke r32 < init > 977 $ r19", "r43 = org eclipse jdt core i java model status r32", "return r43", "if $ i1 == 2 goto label08", "label r27 = org eclipse core resource i container r5", "label i3 = i3 + 1", "if i3 < $ i4 goto label07", "$ r20 = org eclipse jdt internal core java model status verified_ok", "return $ r20", "if $ r6 ! = null goto label02", "label r36 = org eclipse jdt internal core create package fragment operation r0", "$ r7 = r36 pkg name", "$ r26 = org eclipse jdt internal core util util concat with $ r7 46"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], [46], [], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [], [67], [68], [69], [70], [71], [], [73], [74], [75], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r13 = org eclipse jdt internal core dom rewrite rewrite event store r0", "$ r6 = r13 event lookup", "$ r7 = $ r6 value", "r2 = $ r7 iterator", "goto label9", "label $ z0 = r2 have next", "if $ z0 ! = 0 goto label1", "label $ r8 = r2 next", "r3 = java util list $ r8", "i2 = 0", "goto label8", "label $ i4 = r3 size", "if i2 < $ i4 goto label2", "label $ r9 = r3 get i2", "$ r10 = org eclipse jdt internal core dom rewrite rewrite event store $ event holder $ r9", "r4 = $ r10 event", "r14 = org eclipse jdt internal core dom rewrite rewrite event store r0", "$ z1 = r14 be node in event r4 r1 i0", "if $ z1 == 0 goto label3", "return r4", "if $ z1 == 0 goto label3", "label $ z2 = r4 be list rewrite", "if $ z2 == 0 goto label7", "r5 = r4 get child", "i3 = 0", "goto label6", "label $ i1 = lengthof r5", "if i3 < $ i1 goto label4", "label $ r11 = r5 [ i3 ]", "r15 = org eclipse jdt internal core dom rewrite rewrite event store r0", "$ z3 = r15 be node in event $ r11 r1 i0", "if $ z3 == 0 goto label5", "$ r12 = r5 [ i3 ]", "return $ r12", "if $ z3 == 0 goto label5", "label i3 = i3 + 1", "if i3 < $ i1 goto label4", "label i2 = i2 + 1", "if $ z0 ! = 0 goto label1", "return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get delta", "if r2 == null goto label4", "$ r6 = r2 get full path", "$ z0 = $ r6 be root", "if $ z0 == 0 goto label4", "r14 = org eclipse jdt internal core external annotation tracker r0", "$ r7 = r14 tree", "$ r8 = $ r7 child", "if $ r8 == null goto label4", "$ r9 = r2 get affect child", "i0 = lengthof $ r9", "i1 = 0", "goto label3", "label if i1 < i0 goto label1", "label r3 = $ r9 [ i1 ]", "r15 = org eclipse jdt internal core external annotation tracker r0", "$ r10 = r15 tree", "$ r11 = $ r10 child", "$ r12 = r3 get full path", "$ r13 = $ r11 get $ r12", "r5 = org eclipse jdt internal core external annotation tracker $ directory node $ r13", "if r5 == null goto label2", "r16 = org eclipse jdt internal core external annotation tracker r0", "r16 traverse for directory r5 r3", "label i1 = i1 + 1", "label if i1 < i0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r0 ! = r1 goto label1", "return 1", "if r0 ! = r1 goto label1", "label $ z0 = r1 instanceof org eclipse jdt internal core external package fragment root", "if $ z0 == 0 goto label2", "r2 = org eclipse jdt internal core external package fragment root r1", "r5 = org eclipse jdt internal core external package fragment root r0", "$ r4 = r5 external path", "$ r3 = r2 external path", "$ z1 = $ r4 equal $ r3", "return $ z1", "if $ z0 == 0 goto label2", "label return 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal core import declaration r0", "$ z0 = r1 be on demand", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jdt internal core import declaration element info r0", "r1 name start = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = new org eclipse jdt internal core jar package fragment root info", "specialinvoke $ r1 < init >", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org eclipse jdt internal core java model manager get java model manager", "r4 = org eclipse jdt internal core jar package fragment root r0", "$ r2 = r4 get path", "$ r3 = $ r1 get zip file $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r4 = org eclipse jdt internal core jdom abstract d o m builder r0", "$ r2 = r4 f stack", "$ r3 = $ r2 pop", "r1 = org eclipse jdt internal core jdom d o m type $ r3", "r1 set source range end i1", "r1 set close body range start i0", "r1 set close body range end i0", "r5 = org eclipse jdt internal core jdom abstract d o m builder r0", "r6 = org eclipse jdt internal core jdom d o m node r1", "r5 f node = r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r7 = org eclipse jdt internal core jdom d o m field r0", "$ z0 = r7 be type altered", "if $ z0 == 0 goto label1", "r8 = org eclipse jdt internal core jdom d o m field r0", "$ r5 = r8 f type", "$ r6 = $ r5 to char array", "return $ r6", "if $ z0 == 0 goto label1", "label r9 = org eclipse jdt internal core jdom d o m field r0", "$ r3 = r9 f document", "r10 = org eclipse jdt internal core jdom d o m field r0", "$ r1 = r10 f type range", "$ i2 = $ r1 [ 0 ]", "r11 = org eclipse jdt internal core jdom d o m field r0", "$ r2 = r11 f type range", "$ i0 = $ r2 [ 1 ]", "$ i1 = $ i0 + 1", "$ r4 = org eclipse jdt core compiler char operation subarray $ r3 $ i2 $ i1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jdt internal core jdom d o m member r0", "r1 set mask 16 z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt internal core jdom d o m node r0", "$ r1 = r2 f source range", "$ i0 = $ r1 [ 0 ]", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jdt internal core search java search type name match r0", "r1 modifier = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r6 = org eclipse jdt internal core search path collector r0", "$ r2 = r6 path", "r7 = org eclipse jdt internal core search path collector r0", "$ r1 = r7 path", "$ i0 = $ r1 size", "$ r3 = newarray java lang string [ $ i0 ]", "$ r4 = $ r2 to array $ r3", "$ r5 = java lang string [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jdt internal core source field element info r0", "r2 type name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt internal core source type element info r0", "$ r1 = r2 handle", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jdt internal core util constant pool entry r0", "r1 class info name index = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jdt internal core util constant pool entry r0", "r1 integer value = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org eclipse jdt internal core util constant pool entry r0", "r1 float value = f0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org eclipse jdt internal core util constant pool entry r0", "r1 long value = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal core util constant pool entry r0", "$ i0 = r1 name and type descriptor index", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org eclipse jdt internal core util l r u cache r0", "$ r3 = r6 entry table", "$ r4 = $ r3 get r1", "r2 = org eclipse jdt internal core util l r u cache $ l r u cache entry $ r4", "if r2 ! = null goto label1", "return r1", "if r2 ! = null goto label1", "label $ r5 = r2 key", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org eclipse jdt internal eval code snippet to cu mapper r0", "$ i2 = r4 line number offset", "$ i4 = $ i2 - 1", "r5 = org eclipse jdt internal eval code snippet to cu mapper r0", "$ r1 = r5 snippet import", "$ i3 = lengthof $ r1", "i1 = $ i4 - $ i3", "r6 = org eclipse jdt internal eval code snippet to cu mapper r0", "$ r2 = r6 snippet import", "$ i5 = i0 - i1", "$ r3 = $ r2 [ $ i5 ]", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org eclipse jdt internal eval code snippet to cu mapper $ 2", "r4 = org eclipse jdt internal eval code snippet to cu mapper r0", "specialinvoke r3 < init > r4 r1", "r5 = org eclipse jdt internal codeassist i selection requestor r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org eclipse jdt core refactoring descriptor extract class descriptor r0", "$ r1 = r2 f argument", "org eclipse jdt internal core refactoring descriptor java refactoring descriptor util set boolean $ r1 \\ `` create getter setter\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org eclipse jdt core refactoring descriptor java refactoring descriptor handle to element r0 r1 1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set description r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set project r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org eclipse core runtime assert be not null r1", "r2 = org eclipse jdt core refactoring descriptor rename local variable descriptor r0", "r2 f selection = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jdt core refactoring descriptor use supertype descriptor r0", "r1 f instanceof = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org eclipse jdt core dom infix expression right_operand_property", "r4 = org eclipse jdt core dom a s t node r1", "r5 = org eclipse jdt core dom structural property descriptor $ r3", "$ z0 = org eclipse jdt internal core manipulation dom necessary parenthesis checker need parenthesis r0 r4 r5 r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jdt internal core manipulation java manipulation plugin r0", "r2 f member order preference cache common = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "if z0 == 0 goto label1", "r3 = r0 to o s string", "goto label2", "label $ r2 = org eclipse jdt internal core manipulation util string mark l t r r3", "return $ r2", "if z0 == 0 goto label1", "label $ r1 = r0 make relative", "r3 = $ r1 to string"], "adj": [[1], [2], [3], [4], [], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "r2 = @ parameter3", "r3 = @ parameter4", "$ i1 = org eclipse jdt internal corext util code formatter util get tab width r1", "$ i2 = org eclipse jdt internal corext util code formatter util get indent width r1", "$ r4 = org eclipse jdt core formatter indent manipulation change indent r0 i0 $ i1 $ i2 r2 r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = new java lang string builder", "$ r2 = java lang string value of r0", "specialinvoke $ r1 < init > $ r2", "$ r3 = $ r1 append i0", "$ r4 = $ r3 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal corext callhierarchy caller method wrapper r0", "$ z0 = r1 f be expand with constructor set", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 == null goto label5", "$ i0 = lengthof r1", "if $ i0 < = 0 goto label5", "r3 = r1 [ 0 ]", "label $ z0 = r3 instanceof org eclipse jdt core i member", "if $ z0 == 0 goto label5", "r9 = org eclipse jdt core i member r3", "r4 = r9 get declare type", "$ z1 = r4 be interface", "if $ z1 == 0 goto label5", "r11 = org eclipse jdt internal corext callhierarchy implementors r0", "r5 = r11 find implementing type r4 r2", "$ i1 = r9 get element type", "if $ i1 ! = 9 goto label3", "$ r6 = org eclipse jdt core i method r9", "r12 = org eclipse jdt internal corext callhierarchy implementors r0", "$ r7 = r12 find method $ r6 r5 r2", "label return $ r7", "if $ i1 ! = 9 goto label3", "label r13 = org eclipse jdt core i java element [ ] r5", "return r13", "if $ z1 == 0 goto label5", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt internal corext codemanipulation add unimplemented constructor operation r0", "$ r1 = r2 f create import", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal corext codemanipulation add unimplemented constructor operation r0", "$ z0 = r1 f omit super", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r22 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "r22 need max len variable = 0", "r23 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "r23 need collection to string method = 0", "r21 = new java util array list", "specialinvoke r21 < init >", "r24 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "r24 type that need array to string method = r21", "r25 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "r25 check need for helper method", "r26 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "$ r3 = r26 f ast", "$ r4 = $ r3 new method declaration", "r27 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "r27 to string method = $ r4", "r28 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "$ r5 = r28 to string method", "$ r6 = $ r5 modifier", "r29 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "$ r7 = r29 f ast", "$ r8 = org eclipse jdt internal corext dom a s t node factory new modifier $ r7 1", "$ r6 add all $ r8", "r30 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "$ r10 = r30 to string method", "r31 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "$ r9 = r31 f ast", "$ r11 = $ r9 new simple name \\ `` to string\\ ``", "$ r10 set name $ r11", "r32 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "$ r12 = r32 to string method", "$ r12 set constructor 0", "r33 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "$ r14 = r33 to string method", "r34 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "$ r15 = r34 f ast", "r35 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "$ r13 = r35 f ast", "$ r16 = $ r13 new name \\ `` string\\ ``", "$ r17 = $ r15 new simple type $ r16", "r36 = org eclipse jdt core dom type $ r17", "$ r14 set return type2 r36", "r37 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "$ r18 = r37 f ast", "r1 = $ r18 new block", "r38 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "$ r19 = r38 to string method", "$ r19 set body r1", "r39 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "$ r20 = r39 create name suggestion \\ `` max len\\", "r40 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "r40 f max len variable name = $ r20", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ i1 = lengthof r2", "r3 = newarray boolean [ $ i1 ]", "i2 = 0", "goto label3", "label $ i3 = lengthof r2", "if i2 < $ i3 goto label1", "label $ r6 = r1 get qualify name", "$ r7 = r2 [ i2 ]", "$ z0 = $ r6 equal $ r7", "if $ z0 == 0 goto label2", "r3 [ i2 ] = 1", "label i2 = i2 + 1", "if i2 < $ i3 goto label1", "$ r8 = r1 get interface", "i0 = lengthof $ r8", "i4 = 0", "goto label9", "label if i4 < i0 goto label4", "label r10 = $ r8 [ i4 ]", "$ r9 = r10 get erasure", "r12 = org eclipse jdt internal corext codemanipulation tostringgeneration abstract to string generator r0", "r5 = r12 implement interfaces $ r9 r2", "i5 = 0", "goto label8", "label $ i7 = lengthof r2", "if i5 < $ i7 goto label5", "label $ i6 = i5", "$ z1 = r3 [ i5 ]", "if $ z1 ! = 0 goto label6", "$ z2 = r5 [ i5 ]", "if $ z2 ! = 0 goto label6", "$ z3 = 0", "goto label7", "label r3 [ $ i6 ] = $ z3", "i5 = i5 + 1", "if $ z2 ! = 0 goto label6", "label $ z3 = 1", "if i5 < $ i7 goto label5", "i4 = i4 + 1", "label if i4 < i0 goto label4", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], [39], [40], [41], [42], [43], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r1 resolve bind", "if r2 == null goto label2", "r9 = org eclipse jdt internal corext dom link node finder get associate record component node r1", "if r9 == null goto label1", "r10 = r9 resolve bind", "$ r8 = org eclipse jdt internal corext dom link node finder find by bind r0 r10", "return $ r8", "if r9 == null goto label1", "label $ r7 = org eclipse jdt internal corext dom link node finder find by bind r0 r2", "return $ r7", "if r2 == null goto label2", "label r11 = org eclipse jdt internal corext dom link node finder find by problem r0 r1", "if r11 == null goto label3", "return r11", "if r11 == null goto label3", "label $ r5 = r1 get parent", "i0 = $ r5 get node type", "if i0 == 30 goto label4", "if i0 == 10 goto label4", "if i0 ! = 18 goto label5", "label r17 = new java util array list", "specialinvoke r17 < init >", "r18 = new org eclipse jdt internal corext dom link node finder $ label finder", "specialinvoke r18 < init > r1 r17", "r19 = org eclipse jdt core dom a s t visitor r18", "r0 accept r19", "$ i1 = r17 size", "$ r14 = newarray org eclipse jdt core dom simple name [ $ i1 ]", "$ r15 = r17 to array $ r14", "$ r16 = org eclipse jdt core dom simple name [ ] $ r15", "return $ r16", "if i0 ! = 18 goto label5", "label $ r6 = newarray org eclipse jdt core dom simple name [ 1 ]", "$ r6 [ 0 ] = r1", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], [35], [36], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r5 = new org eclipse jdt internal corext refactoring typeconstraints type type environment", "specialinvoke $ r5 < init > 0 1", "r3 = $ r5 create r1", "r4 = $ r5 create r0", "$ z0 = r4 can assign to r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org eclipse jdt internal corext refactoring code flow flow info r0", "$ r3 = r5 f access mode", "if $ r3 ! = null goto label1", "return 1", "if $ r3 ! = null goto label1", "label i0 = r1 get index from local r2", "if i0 ! = -1 goto label2", "label r6 = org eclipse jdt internal corext refactoring code flow flow info r0", "$ r4 = r6 f access mode", "$ i1 = $ r4 [ i0 ]", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jdt internal corext refactoring delegate delegate creator r0", "r2 f declaration = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jdt internal corext refactoring delegate delegate creator r0", "r2 f new element name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt internal corext refactoring nls n l s element r0", "$ r1 = r2 f tag position", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r10 = new java util hash set", "specialinvoke r10 < init >", "i0 = lengthof r0", "i2 = 0", "goto label2", "label if i2 < i0 goto label1", "label r8 = r0 [ i2 ]", "$ r4 = r8 get java project", "r10 add $ r4", "i2 = i2 + 1", "label if i2 < i0 goto label1", "$ i1 = r10 size", "$ r5 = newarray org eclipse jdt core i java project [ $ i1 ]", "$ r6 = r10 to array $ r5", "r9 = org eclipse jdt core i java project [ ] $ r6", "r11 = org eclipse jdt core i java element [ ] r9", "$ r7 = org eclipse jdt core search search engine create java search scope r11 1", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jdt internal corext refactoring structure compilation unit rewrite r0", "r1 f binding recovery = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "z0 = @ parameter4", "org eclipse jdt internal corext refactoring structure import rewrite util collect import r0 r1 r2 r3 null z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jdt internal corext refactoring structure move instance method processor r0", "$ r1 = r3 f possible target", "org eclipse core runtime assert be not null $ r1", "r4 = org eclipse jdt internal corext refactoring structure move instance method processor r0", "$ r2 = r4 f possible target", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt internal corext refactoring structure move instance method processor r0", "$ r1 = r2 f target name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal corext refactoring structure move instance method processor r0", "$ z0 = r1 f target node", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal corext refactoring structure move instance method processor r0", "$ z0 = r1 f use setter", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt internal corext refactoring typeconstraints type t type r0", "$ r1 = r2 f environment", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal corext refactoring typeconstraints type t type r0", "$ i0 = r1 get kind", "if $ i0 ! = 1 goto label1", "return 1", "if $ i0 ! = 1 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal corext refactoring typeconstraints type t type r0", "$ i0 = r1 get kind", "if $ i0 ! = 6 goto label1", "return 1", "if $ i0 ! = 6 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get javadoc", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label $ r5 = r0 parameter", "$ i0 = $ r5 size", "if $ i0 ! = 0 goto label2", "return 1", "if $ i0 ! = 0 goto label2", "label r2 = r1 tag", "r4 = r2 iterator", "goto label4", "label $ z0 = r4 have next", "if $ z0 ! = 0 goto label3", "label $ r6 = r4 next", "r3 = org eclipse jdt core dom tag element $ r6", "$ r7 = \\ `` @ param\\ ``", "$ r8 = r3 get tag name", "$ z1 = $ r7 equal $ r8", "if $ z1 == 0 goto label4"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "org eclipse core runtime assert be not null r0", "r1 = r0 get resource", "if r1 == null goto label1", "$ i0 = r1 get type", "if $ i0 ! = 1 goto label1", "$ r2 = org eclipse core filebuffers file buffer get text file buffer manager", "$ r3 = r1 get full path", "$ r5 = org eclipse core filebuffers location kind ifile", "r6 = new org eclipse core runtime null progress monitor", "specialinvoke r6 < init >", "r7 = org eclipse core runtime i progress monitor r6", "$ r2 disconnect $ r3 $ r5 r7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 instanceof org eclipse text edit multi text edit", "if $ z0 == 0 goto label1", "$ z3 = r0 have child", "if $ z3 ! = 0 goto label1", "return r1", "if $ z3 ! = 0 goto label1", "label $ z1 = r1 instanceof org eclipse text edit multi text edit", "if $ z1 == 0 goto label2", "$ z2 = r1 have child", "if $ z2 ! = 0 goto label2", "return r0", "if $ z2 ! = 0 goto label2", "label r4 = new org eclipse text edit multi text edit", "specialinvoke r4 < init >", "org eclipse jdt internal corext refactoring util text edit util merge r0 r1 r4", "r5 = org eclipse text edit text edit r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal corext template java compilation unit context r0", "$ z0 = r1 f be manage", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jdt internal corext template java java context core r0", "i0 = r3 get start", "label if i0 ! = 0 goto label2", "$ c2 = 32", "goto label3", "label return $ c2", "label if i0 ! = 0 goto label2", "label r4 = org eclipse jdt internal corext template java java context core r0", "$ r1 = r4 get document", "$ i1 = i0 - 1", "$ c2 = $ r1 get char $ i1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r12 = org eclipse jdt internal corext util method override tester r0", "r3 = r12 find overridden method in type r1 r2", "if r3 == null goto label1", "return r3", "if r3 == null goto label1", "label r13 = org eclipse jdt internal corext util method override tester r0", "$ r7 = r13 f hierarchy", "r4 = $ r7 get superclass r1", "if r4 == null goto label2", "r14 = org eclipse jdt internal corext util method override tester r0", "r10 = r14 find overridden method in hierarchy r4 r2", "if r10 == null goto label2", "return r10", "if r10 == null goto label2", "label r15 = org eclipse jdt internal corext util method override tester r0", "$ r8 = r15 f hierarchy", "$ r9 = $ r8 get super interface r1", "i0 = lengthof $ r9", "i1 = 0", "goto label5", "label if i1 < i0 goto label3", "label r11 = $ r9 [ i1 ]", "r16 = org eclipse jdt internal corext util method override tester r0", "r6 = r16 find overridden method in hierarchy r11 r2", "if r6 == null goto label4", "return r6", "if r6 == null goto label4", "label i1 = i1 + 1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [], [30], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = newarray org eclipse core resource i resource [ 1 ]", "$ r2 [ 0 ] = r0", "$ r3 = org eclipse jdt internal corext util resource make committable $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = org eclipse jdt core search search pattern validate match rule r0 128", "if $ i0 ! = 128 goto label1", "return 1", "if $ i0 ! = 128 goto label1", "label return 0"], "adj": [[1], [2], [3], [], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal ui dialog status info r0", "$ i0 = r1 f severity", "if $ i0 ! = 2 goto label1", "return 1", "if $ i0 ! = 2 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r5 = new java util array list", "specialinvoke $ r5 < init >", "i0 = lengthof r0", "i3 = 0", "goto label3", "label if i3 < i0 goto label1", "label r3 = r0 [ i3 ]", "$ i1 = r3 get problem id", "$ z0 = org eclipse jdt internal ui fix abstract multi fix core contain r1 $ i1", "if $ z0 == 0 goto label2", "$ z1 = org eclipse jdt internal ui fix abstract multi fix core contain $ r5 r3", "if $ z1 ! = 0 goto label2", "$ r5 add r3", "label i3 = i3 + 1", "label if i3 < i0 goto label1", "$ i2 = $ r5 size", "$ r6 = newarray org eclipse jdt internal ui text correction i problem location core [ $ i2 ]", "$ r7 = $ r5 to array $ r6", "$ r8 = org eclipse jdt internal ui text correction i problem location core [ ] $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i4 = -1", "i5 = r1 size", "goto label3", "label $ i6 = i5 - i4", "if $ i6 > 1 goto label1", "label $ i2 = i4 + i5", "i1 = $ i2 > > 1", "$ r3 = r1 get i1", "r2 = org eclipse jface text position $ r3", "$ i3 = r2 get offset", "if $ i3 < i0 goto label2", "i5 = i1", "if $ i3 < i0 goto label2", "label i4 = i1", "if $ i6 > 1 goto label1", "return i5"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r0 get class", "$ r3 = org eclipse core runtime platform get log $ r2", "$ r3 error r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r6 = org eclipse jdt internal launching environment environment manager r0", "r6 initialize extension", "r7 = org eclipse jdt internal launching environment environment manager r0", "$ r2 = r7 f analyzer", "r1 = $ r2 value", "$ i0 = r1 size", "$ r3 = newarray org eclipse jdt internal launching environment analyzer [ $ i0 ]", "$ r4 = r1 to array $ r3", "$ r5 = org eclipse jdt internal launching environment analyzer [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "r6 = new org eclipse core runtime core exception", "r5 = new org eclipse core runtime status", "$ r4 = org eclipse jdt internal launching launch plugin get unique identifier", "specialinvoke r5 < init > 4 $ r4 i0 r0 r1", "r7 = org eclipse core runtime i status r5", "specialinvoke r6 < init > r7", "r8 = java lang throwable r6", "throw r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get work directory", "if r2 ! = null goto label1", "return null", "if r2 ! = null goto label1", "label r8 = new java io file", "specialinvoke r8 < init > r2", "$ z0 = r8 be directory", "if $ z0 ! = 0 goto label2", "$ r6 = org eclipse jdt internal launching launch message standard v m runner_ specified_working_directory_does_not_exist_or_is_not_a_directory___0__3", "$ r5 = newarray java lang string [ 1 ]", "$ r5 [ 0 ] = r2", "$ r7 = org eclipse osgi util nls bind $ r6 $ r5", "r9 = org eclipse jdt internal launch standard v m runner r0", "r9 abort $ r7 null 108", "label return r8"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 exist", "if $ z0 == 0 goto label1", "$ z1 = r1 be file", "if $ z1 == 0 goto label1", "return 1", "if $ z1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get streams proxy", "r12 = null", "if r2 == null goto label1", "$ r11 = r2 get output stream monitor", "r12 = $ r11 get content", "label if r12 == null goto label2", "$ i0 = r12 length", "if $ i0 < = 0 goto label2", "i4 = r12 index of \\ `` |\\ ``", "if i4 < = 0 goto label2", "r3 = r12 substring 0 i4", "$ i1 = i4 + 1", "r13 = r12 substring $ i1", "i5 = r13 index of \\ `` |\\ ``", "if i5 < = 0 goto label2", "r4 = r13 substring 0 i5", "r16 = org eclipse jdt internal launch standard v m type r0", "r5 = r16 parse path r4", "$ i2 = i5 + 1", "r14 = r13 substring $ i2", "i6 = r14 index of \\ `` |\\ ``", "if i6 < = 0 goto label2", "r6 = r14 substring 0 i6", "$ i3 = i6 + 1", "r7 = r14 substring $ i3", "r17 = org eclipse jdt internal launch standard v m type r0", "r8 = r17 parse path r6", "r18 = org eclipse jdt internal launch standard v m type r0", "r9 = r18 parse path r7", "r15 = new org eclipse jdt internal launching library info", "specialinvoke r15 < init > r3 r5 r8 r9", "return r15", "if i6 < = 0 goto label2", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "r4 = org eclipse jdt launch i runtime classpath entry resolver r0", "$ r3 = r4 resolve runtime classpath entry r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt launch library location r0", "$ r1 = r2 f system library", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jdt launch v m runner configuration r0", "r2 f boot class path = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt launch v m runner configuration r0", "$ r1 = r2 f preview enable", "$ z0 = $ r1 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = lengthof r1", "i1 = 0", "goto label2", "label if i1 < i0 goto label1", "label r2 = r1 [ i1 ]", "r4 = org eclipse ltk core refactoring composite change r0", "r4 add r2", "i1 = i1 + 1", "label if i1 < i0 goto label1", "return"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get child", "i0 = lengthof r2", "i1 = 0", "goto label2", "label if i1 < i0 goto label1", "label r3 = r2 [ i1 ]", "r1 remove r3", "r5 = org eclipse ltk core refactoring composite change r0", "r5 add r3", "i1 = i1 + 1", "label if i1 < i0 goto label1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse ltk core refactoring composite change r0", "$ r1 = r2 f undo until exception", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse ltk core refactoring participant processor base refactoring r0", "r1 set refactoring r2", "r3 = org eclipse ltk core refactoring participant processor base refactoring r0", "r3 f processor = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse ltk core refactoring participant reorg execution log r0", "$ r1 = r4 f new name", "$ r2 = $ r1 key set", "$ r3 = $ r2 to array", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse ltk core refactoring perform change operation r0", "$ r1 = r2 f change", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse ltk core refactoring perform change operation r0", "r2 f schedule rule = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse ltk core refactoring perform refactoring operation r0", "$ r1 = r2 f undo", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org eclipse ltk internal core refactoring history refactoring history service get instance", "r1 = org eclipse ltk core refactoring history i refactoring history service $ r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse ltk core refactoring refactoring tick provider r0", "$ r1 = r2 f value", "$ i0 = $ r1 [ 1 ]", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse ltk core refactoring resource move rename resource descriptor r0", "$ r1 = r2 f destination path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "i0 = @ parameter3", "r3 = @ parameter4", "r20 = org eclipse ltk core refactoring text change r0", "r4 = r20 get region r1", "$ i3 = r2 get offset", "$ i4 = r4 get offset", "if $ i3 > $ i4 goto label01", "$ i11 = r4 get offset", "$ i12 = r4 get length", "$ i13 = $ i11 + $ i12", "$ i14 = r2 get offset", "$ i15 = r2 get length", "$ i16 = $ i14 + $ i15", "if $ i13 > $ i16 goto label01", "$ z3 = 1", "goto label02", "label org eclipse core runtime assert be true $ z3", "r21 = org eclipse ltk core refactoring text change r0", "r5 = r21 get edit", "org eclipse core runtime assert be not null r5 \\ `` no root edit\\ ``", "i1 = lengthof r1", "i17 = 0", "goto label08", "label if i17 < i1 goto label03", "label r17 = r1 [ i17 ]", "r7 = r17 get text edits", "i2 = lengthof r7", "i18 = 0", "goto label07", "label if i18 < i2 goto label04", "label r8 = r7 [ i18 ]", "$ r10 = r8 get root", "if r5 ! = $ r10 goto label05", "$ z4 = 1", "goto label06", "label org eclipse core runtime assert be true $ z4 \\ `` wrong root edit\\ ``", "i18 = i18 + 1", "if r5 ! = $ r10 goto label05", "label $ z4 = 0", "label if i18 < i2 goto label04", "i17 = i17 + 1", "label if i17 < i1 goto label03", "r22 = org eclipse ltk core refactoring text change r0", "r18 = r22 get preview document r1 r3", "$ r11 = r18 region", "if $ r11 ! = null goto label09", "$ i10 = r4 get length", "i19 = neg $ i10", "goto label10", "label $ r14 = r18 document", "r19 = new org eclipse jface text region", "$ i7 = r2 get offset", "$ i8 = r2 get length", "$ i9 = $ i8 + i19", "specialinvoke r19 < init > $ i7 $ i9", "r23 = org eclipse ltk core refactoring text change r0", "r24 = org eclipse jface text i region r19", "$ r15 = r23 get content $ r14 r24 z0 i0", "return $ r15", "if $ r11 ! = null goto label09", "label $ r12 = r18 region", "$ i5 = $ r12 get length", "$ i6 = r4 get length", "i19 = $ i5 - $ i6", "if $ i13 > $ i16 goto label01", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [], [54], [55], [56], [57], [58], [59], [60], [61], [62], [], [64], [65], [66], [67], [68], [69], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = org eclipse ltk core refactoring text edit base change r0", "$ r4 = r12 f combied group category", "if $ r4 ! = null goto label3", "$ r6 = org eclipse ltk core refactoring group category set none", "r13 = org eclipse ltk core refactoring text edit base change r0", "r13 f combied group category = $ r6", "r14 = org eclipse ltk core refactoring text edit base change r0", "$ r7 = r14 f change group", "r3 = $ r7 iterator", "goto label2", "label $ z1 = r3 have next", "if $ z1 ! = 0 goto label1", "label $ r8 = r3 next", "r2 = org eclipse ltk core refactoring text edit base change group $ r8", "r15 = org eclipse ltk core refactoring text edit base change r0", "$ r9 = r15 f combied group category", "$ r10 = r2 get group category set", "$ r11 = org eclipse ltk core refactoring group category set union $ r9 $ r10", "r16 = org eclipse ltk core refactoring text edit base change r0", "r16 f combied group category = $ r11", "if $ z1 ! = 0 goto label1", "label r17 = org eclipse ltk core refactoring text edit base change r0", "$ r5 = r17 f combied group category", "$ z0 = $ r5 contain one category r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse ltk core refactoring text edit base change r0", "$ r1 = r2 f text type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse ltk core refactoring text edit base change group r0", "$ r1 = r3 f text edit group", "$ r2 = $ r1 get text edits", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org eclipse ltk internal core refactoring history refactoring contribution manager f instance", "if $ r0 ! = null goto label1", "$ r2 = new org eclipse ltk internal core refactoring history refactoring contribution manager", "specialinvoke $ r2 < init >", "org eclipse ltk internal core refactoring history refactoring contribution manager f instance = $ r2", "label $ r1 = org eclipse ltk internal core refactoring history refactoring contribution manager f instance", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org eclipse core runtime assert be not null r1", "r5 = org eclipse ltk internal core refactoring history refactoring contribution manager r0", "r5 populate cache", "r6 = org eclipse ltk internal core refactoring history refactoring contribution manager r0", "$ r2 = r6 f id cache", "$ r3 = $ r2 get r1", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ i2 = r0 index of 9", "if $ i2 > = 0 goto label4", "i0 = r0 length", "$ r2 = new java lang string builder", "$ i3 = i0 + 16", "specialinvoke $ r2 < init > $ i3", "i4 = 0", "goto label3", "label if i4 < i0 goto label1", "label c1 = r0 char at i4", "if 9 ! = c1 goto label2", "$ r2 append 9", "label $ r2 append c1", "i4 = i4 + 1", "label if i4 < i0 goto label1", "$ r5 = $ r2 to string", "return $ r5", "if $ i2 > = 0 goto label4", "label return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = @ parameter1", "org eclipse core runtime assert be not null r1", "if r8 ! = null goto label1", "r9 = new org eclipse core runtime null progress monitor", "specialinvoke r9 < init >", "r8 = r9", "label $ r5 = r1 get project", "r10 = org eclipse ltk internal core refactoring history refactoring history service r0", "r2 = r10 get manager $ r5", "if r2 == null goto label4", "r11 = org eclipse core runtime i progress monitor r8", "r4 = r2 request descriptor r1 r11", "label r12 = org eclipse core runtime i progress monitor r8", "r12 do", "return r4", "if r2 == null goto label4", "label r14 = org eclipse core runtime i progress monitor r8", "r14 do", "return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ b1 = l0 cmp -1l", "if $ b1 == 0 goto label1", "$ b2 = l0 cmp 0l", "if $ b2 > = 0 goto label1", "$ z1 = 0", "goto label2", "label org eclipse core runtime assert be true $ z1", "r1 = org eclipse ltk internal core refactoring history refactoring history service r0", "r1 f override time stamp = l0", "return", "if $ b2 > = 0 goto label1", "label $ z1 = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r5 = org eclipse ltk internal core refactoring refactoring session transformer r0", "$ r1 = r5 f refactoring", "if $ r1 == null goto label1", "r6 = org eclipse ltk internal core refactoring refactoring session transformer r0", "$ r2 = r6 f refactoring argument", "if $ r2 == null goto label1", "r7 = org eclipse ltk internal core refactoring refactoring session transformer r0", "$ r4 = r7 f refactoring", "r8 = org eclipse ltk internal core refactoring refactoring session transformer r0", "$ r3 = r8 f refactoring argument", "r9 = org eclipse ltk internal core refactoring refactoring session transformer r0", "r9 add argument $ r4 $ r3", "label r10 = org eclipse ltk internal core refactoring refactoring session transformer r0", "r10 f refactoring argument = null", "r11 = org eclipse ltk internal core refactoring refactoring session transformer r0", "r11 f refactoring = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse ltk internal core refactoring resource delete resource processor r0", "$ z0 = r1 f delete content", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse ltk internal core refactoring resource move rename resource processor r0", "r1 f update reference = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse ltk internal core refactoring resource move resource processor r0", "r1 f update reference = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r3 = org eclipse osgi container module container r0", "$ r2 = specialinvoke r3 resolve r1 z0 0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = @ parameter0", "if r4 ! = null goto label1", "$ r5 = null", "goto label2", "label r9 = org eclipse osgi container module container r0", "r1 = specialinvoke r9 unresolve $ r5", "r10 = org eclipse osgi container module container r0", "$ z0 = r10 be refresh system module", "if $ z0 ! = 0 goto label3", "r11 = org eclipse osgi container module container r0", "$ r3 = specialinvoke r11 resolve r1 0 1", "return $ r3", "if $ z0 ! = 0 goto label3", "label r8 = new org eclipse osgi container module resolution report", "specialinvoke r8 < init > null null null", "r12 = org eclipse osgi report resolution resolution report r8", "return r12", "if r4 ! = null goto label1", "label r7 = new java util array list", "$ r5 = r7", "specialinvoke r7 < init > r4"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse osgi container module revision r0", "$ r1 = r2 revision info", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse osgi container module revision builder r0", "r1 type = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse osgi container module revision builder r0", "$ r1 = r2 get capability null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse osgi container module revision builder r0", "$ r1 = r2 symbolic name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse osgi framework eventmgr copy on write identity map r0", "$ i0 = r1 size", "if $ i0 ! = 0 goto label1", "return 1", "if $ i0 ! = 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ this", "r4 = new org eclipse osgi framework eventmgr copy on write identity map $ snapshot", "r5 = org eclipse osgi framework eventmgr copy on write identity map r0", "$ r2 = specialinvoke r5 entry", "specialinvoke r4 < init > $ r2", "$ r3 = r4 key set", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse osgi framework eventmgr event listener r0", "$ r1 = r2 list", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r6 = org eclipse osgi framework internal reliablefile reliable file input stream r0", "$ r2 = r6 reliable", "if $ r2 == null goto label4", "label specialinvoke r0 close", "goto label3", "label r9 = org eclipse osgi framework internal reliablefile reliable file input stream r0", "$ r3 = r9 reliable", "$ r3 close input file", "r10 = org eclipse osgi framework internal reliablefile reliable file input stream r0", "r10 reliable = null", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse osgi framework util file path r0", "$ b0 = r1 flag", "$ b1 = $ b0 & 4", "if $ b1 == 0 goto label1", "return 1", "if $ b1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r15 = new java lang string builder", "specialinvoke r15 < init >", "r16 = org eclipse osgi framework util file path r0", "$ r5 = r16 device", "if $ r5 == null goto label1", "r17 = org eclipse osgi framework util file path r0", "$ r12 = r17 device", "r15 append $ r12", "label r18 = org eclipse osgi framework util file path r0", "$ z0 = r18 be absolute", "if $ z0 == 0 goto label2", "r15 append 47", "label r19 = org eclipse osgi framework util file path r0", "$ r6 = r19 segment", "i0 = lengthof $ r6", "i4 = 0", "goto label4", "label if i4 < i0 goto label3", "label r2 = $ r6 [ i4 ]", "r15 append r2", "label if i4 < i0 goto label3", "r20 = org eclipse osgi framework util file path r0", "$ r9 = r20 segment", "$ i1 = lengthof $ r9", "if $ i1 < = 0 goto label5", "r21 = org eclipse osgi framework util file path r0", "$ z1 = r21 have trail slash", "if $ z1 ! = 0 goto label5", "$ i2 = r15 length", "$ i3 = $ i2 - 1", "r15 delete char at $ i3", "label $ r14 = r15 to string", "return $ r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org eclipse osgi framework util header r0", "$ z0 = r6 read only", "if $ z0 == 0 goto label1", "r5 = new java lang unsupported operation exception", "specialinvoke r5 < init >", "throw r5", "if $ z0 == 0 goto label1", "label r7 = org eclipse osgi framework util header r0", "$ r3 = r7 set r1 r2 1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r1 = new org eclipse osgi framework util secure action $ 1", "specialinvoke r1 < init >", "r2 = java security privilege action r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java lang system get security manager", "if $ r2 ! = null goto label1", "$ r7 = java lang system get property r1", "return $ r7", "if $ r2 ! = null goto label1", "label r8 = new org eclipse osgi framework util secure action $ 2", "r9 = org eclipse osgi framework util secure action r0", "specialinvoke r8 < init > r9 r1", "r10 = org eclipse osgi framework util secure action r0", "$ r4 = r10 control context", "r11 = java security privilege action r8", "$ r5 = java security access controller do privilege r11 $ r4", "$ r6 = java lang string $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java lang system get security manager", "if $ r2 ! = null goto label1", "$ l1 = r1 length", "return $ l1", "if $ r2 ! = null goto label1", "label r7 = new org eclipse osgi framework util secure action $ 6", "r8 = org eclipse osgi framework util secure action r0", "specialinvoke r7 < init > r8 r1", "r9 = org eclipse osgi framework util secure action r0", "$ r4 = r9 control context", "r10 = java security privilege action r7", "$ r5 = java security access controller do privilege r10 $ r4", "$ r6 = java lang long $ r5", "$ l0 = $ r6 long value", "return $ l0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java lang system get security manager", "if $ r3 ! = null goto label1", "$ r7 = r2 get service r1", "return $ r7", "if $ r3 ! = null goto label1", "label r8 = new org eclipse osgi framework util secure action $ 18", "r9 = org eclipse osgi framework util secure action r0", "specialinvoke r8 < init > r9 r2 r1", "r10 = org eclipse osgi framework util secure action r0", "$ r5 = r10 control context", "r11 = java security privilege action r8", "$ r6 = java security access controller do privilege r11 $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java io i o exception", "specialinvoke $ r1 < init >", "throw $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r7 = org eclipse osgi internal container namespace list r0", "$ r6 = r7 element", "return $ r6", "if r1 ! = null goto label1", "label r8 = org eclipse osgi internal container namespace list r0", "$ r2 = r8 namespaces", "$ r3 = java util collection empty list", "$ r4 = $ r2 get or default r1 $ r3", "$ r5 = java util list $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse osgi internal debug framework debug trace entry r0", "$ r1 = r2 throwable", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse osgi internal debug framework debug trace entry r0", "$ r1 = r2 method name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r2 == null goto label1", "r5 = new org osgi framework bundle event", "specialinvoke r5 < init > i0 r1 r2", "r7 = org eclipse osgi internal framework equinox event publisher r0", "specialinvoke r7 publish bundle event r5", "goto label2", "label return", "if r2 == null goto label1", "label r6 = new org osgi framework bundle event", "specialinvoke r6 < init > i0 r1", "r8 = org eclipse osgi internal framework equinox event publisher r0", "specialinvoke r8 publish bundle event r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "return r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r4 = new org eclipse osgi framework util case insensitive dictionary map", "$ r3 = r4", "specialinvoke r4 < init > r1", "goto label2", "label r5 = org eclipse osgi internal framework filter impl r0", "r6 = java util map $ r3", "$ z0 = r5 matches0 r6", "return $ z0", "if r1 == null goto label1", "label $ r3 = java util collection empty map"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r5 = @ parameter4", "return null"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org eclipse osgi internal loader bundle loader r0", "$ r2 = r4 get module class loader", "$ r3 = $ r2 find local resource r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org eclipse osgi internal loader classpath classpath entry r0", "$ r2 = r10 user object", "if $ r2 ! = null goto label1", "r9 = new java util hash map", "specialinvoke r9 < init > 5", "r11 = org eclipse osgi internal loader classpath classpath entry r0", "r11 user object = r9", "label r12 = org eclipse osgi internal loader classpath classpath entry r0", "$ r3 = r12 user object", "$ r4 = r1 get key", "$ z0 = $ r3 contain key $ r4", "if $ z0 ! = 0 goto label2", "r13 = org eclipse osgi internal loader classpath classpath entry r0", "$ r5 = r13 user object", "$ r6 = r1 get key", "$ r5 put $ r6 r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse osgi internal loader classpath classpath manager r0", "$ r2 = r3 find local entry r1 -1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org eclipse osgi internal serviceregistry shrinkable value collection map r0", "$ r2 = r4 value", "if $ r2 ! = null goto label1", "return 0", "if $ r2 ! = null goto label1", "label r5 = org eclipse osgi internal serviceregistry shrinkable value collection map r0", "$ r3 = r5 value", "$ z0 = $ r3 contain value r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse osgi service resolver disable info r0", "$ r1 = r2 policy name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse osgi service resolver state wire r0", "$ r1 = r2 requirement host", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse osgi service resolver version range r0", "$ r1 = r2 get leave", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java lang illegal state exception", "specialinvoke $ r2 < init >", "throw $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse osgi storage bundlefile file bundle entry r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r10 = org eclipse osgi storage permission data r0", "$ r8 = r10 default info", "return $ r8", "if r1 ! = null goto label1", "label r11 = org eclipse osgi storage permission data r0", "$ r3 = r11 location", "entermonitor $ r3", "label r12 = org eclipse osgi storage permission data r0", "$ r4 = r12 location", "$ i0 = $ r4 size", "if $ i0 ! = 0 goto label4", "exitmonitor $ r3", "label return null", "if $ i0 ! = 0 goto label4", "label r13 = org eclipse osgi storage permission data r0", "$ r5 = r13 location", "$ r6 = $ r5 get r1", "$ r7 = java lang string [ ] $ r6"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse osgi storagemanager storage manager r0", "specialinvoke r2 add r1 0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse osgi util manifest element r0", "$ r1 = r2 main value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org eclipse osgi util manifest element r0", "$ r2 = r4 attribute", "r5 = org eclipse osgi util manifest element r0", "$ r3 = specialinvoke r5 get table value $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org osgi framework bundle event r0", "$ r1 = r2 bundle", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org osgi service resolver resolve context empty collection", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r8 = null", "goto label2", "label return $ r8", "if r0 ! = null goto label1", "label $ r1 = new java lang string builder", "$ r2 = r0 get class", "$ r3 = $ r2 get name", "$ r4 = java lang string value of $ r3", "specialinvoke $ r1 < init > $ r4", "$ r5 = $ r1 append 64", "$ i0 = java lang system identity hash code r0", "$ r6 = java lang integer to hex string $ i0", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 to string"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = org eclipse sisu inject source prioritize null i0", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com google inject key get r0 class \\ `` lorg eclipse sisu inject type argument $ implicit \\ ``", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jface text abstract document r0", "$ r1 = r3 f document partition listener", "$ r2 = org eclipse jface text abstract document a list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r22 = org eclipse jface text abstract document r0", "$ r7 = r22 f document partitioners", "if $ r7 == null goto label5", "r21 = new org eclipse jface text document partition change event", "specialinvoke r21 < init > r0", "r23 = org eclipse jface text abstract document r0", "r23 f document partition change event = r21", "r24 = org eclipse jface text abstract document r0", "$ r10 = r24 f document partitioners", "$ r11 = $ r10 entry set", "r3 = $ r11 iterator", "goto label4", "label $ z4 = r3 have next", "if $ z4 ! = 0 goto label1", "label $ r12 = r3 next", "r2 = java util map $ entry $ r12", "$ r13 = r2 get key", "r4 = java lang string $ r13", "$ r14 = r2 get value", "r5 = org eclipse jface text i document partitioner $ r14", "$ z1 = r5 instanceof org eclipse jface text i document partitioner extension3", "if $ z1 == 0 goto label2", "r19 = org eclipse jface text i document partitioner extension3 r5", "$ r18 = r19 get active rewrite session", "if $ r18 == null goto label2", "label $ z2 = r5 instanceof org eclipse jface text i document partitioner extension", "if $ z2 == 0 goto label3", "r20 = org eclipse jface text i document partitioner extension r5", "r6 = r20 document changed2 r1", "if r6 == null goto label4", "r25 = org eclipse jface text abstract document r0", "$ r17 = r25 f document partition change event", "$ i1 = r6 get offset", "$ i2 = r6 get length", "$ r17 set partition change r4 $ i1 $ i2", "if $ z2 == 0 goto label3", "label $ z3 = r5 document change r1", "if $ z3 == 0 goto label4", "r26 = org eclipse jface text abstract document r0", "$ r15 = r26 f document partition change event", "$ r16 = r1 get document", "$ i0 = $ r16 get length", "$ r15 set partition change r4 0 $ i0", "if $ z4 ! = 0 goto label1", "label r27 = org eclipse jface text abstract document r0", "$ r8 = r27 f position", "$ z0 = $ r8 be empty", "if $ z0 ! = 0 goto label6", "r28 = org eclipse jface text abstract document r0", "r28 update position r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org eclipse jface text abstract document r0", "$ r4 = r6 f position updaters", "r3 = $ r4 iterator", "goto label2", "label $ z0 = r3 have next", "if $ z0 ! = 0 goto label1", "label $ r5 = r3 next", "r2 = org eclipse jface text i position updater $ r5", "r2 update r1", "if $ z0 ! = 0 goto label1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r11 = org eclipse jface text document partition change event r0", "$ r3 = r11 f map", "$ z0 = $ r3 be empty", "if $ z0 == 0 goto label1", "r9 = new org eclipse jface text region", "specialinvoke r9 < init > 0 0", "r12 = org eclipse jface text i region r9", "return r12", "if $ z0 == 0 goto label1", "label i3 = -1", "i4 = -1", "r13 = org eclipse jface text document partition change event r0", "$ r4 = r13 f map", "$ r5 = $ r4 value", "r1 = $ r5 iterator", "goto label5", "label $ z1 = r1 have next", "if $ z1 ! = 0 goto label2", "label $ r6 = r1 next", "r2 = org eclipse jface text i region $ r6", "if i3 < 0 goto label3", "$ i1 = r2 get offset", "if $ i1 > = i3 goto label4", "label i3 = r2 get offset", "label $ i5 = r2 get offset", "$ i6 = r2 get length", "i0 = $ i5 + $ i6", "if i0 < = i4 goto label5", "i4 = i0", "if $ z1 ! = 0 goto label2", "r10 = new org eclipse jface text region", "$ i2 = i4 - i3", "specialinvoke r10 < init > i3 $ i2", "r14 = org eclipse jface text i region r10", "return r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org eclipse jface text link link mode manager fg manager", "$ r2 = $ r1 get r0", "if $ r2 == null goto label1", "return 1", "if $ r2 == null goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jface text position r0", "$ i0 = r1 offset", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get document", "label r10 = org eclipse jface text projection fragment updater r0", "$ r4 = r10 get category", "$ i1 = r1 get offset", "i0 = r2 compute index in category $ r4 $ i1", "r11 = org eclipse jface text projection fragment updater r0", "$ r5 = r11 get category", "r3 = r2 get position $ r5", "if i0 < = 0 goto label5", "$ i4 = i0 - 1", "r8 = r3 [ $ i4 ]", "$ i5 = r1 get offset", "$ i6 = r1 get length", "$ z1 = r8 overlap with $ i5 $ i6", "if $ z1 == 0 goto label3", "label return 1", "if $ z1 == 0 goto label3", "label $ i7 = lengthof r3", "if i0 ! = $ i7 goto label5", "$ i9 = r8 offset", "$ i8 = r8 length", "$ i10 = $ i9 + $ i8", "$ i11 = r1 get offset", "if $ i10 ! = $ i11 goto label5", "label return 1", "if $ i10 ! = $ i11 goto label5", "label $ i12 = lengthof r3", "if i0 > = $ i12 goto label9", "r9 = r3 [ i0 ]", "$ i2 = r1 get offset", "$ i3 = r1 get length", "$ z0 = r9 overlap with $ i2 $ i3", "label return $ z0", "if i0 > = $ i12 goto label9", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r7 = org eclipse jface text projection projection document r0", "$ r3 = r7 f map", "r6 = new org eclipse jface text region", "specialinvoke r6 < init > i0 i1", "r8 = org eclipse jface text i region r6", "r1 = $ r3 to image region r8", "if r1 == null goto label1", "r9 = org eclipse jface text projection projection document r0", "$ r4 = r9 f map", "$ r5 = $ r4 to exact origin region r1", "goto label2", "label return $ r5", "if r1 == null goto label1", "label $ r5 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = org eclipse jface text projection projection document r0", "$ z0 = r12 be update", "if $ z0 ! = 0 goto label5", "r13 = org eclipse jface text projection projection document r0", "$ r2 = r13 f master event", "if r1 ! = $ r2 goto label5", "r14 = org eclipse jface text projection projection document r0", "$ r3 = r14 f slave event", "if $ r3 == null goto label4", "label r15 = org eclipse jface text projection projection document r0", "$ r5 = r15 get tracker", "r16 = org eclipse jface text projection projection document r0", "$ r6 = r16 f slave event", "$ i1 = $ r6 get offset", "r17 = org eclipse jface text projection projection document r0", "$ r7 = r17 f slave event", "$ i2 = $ r7 get length", "r18 = org eclipse jface text projection projection document r0", "$ r8 = r18 f slave event", "$ r9 = $ r8 get text", "$ r5 replace $ i1 $ i2 $ r9", "r19 = org eclipse jface text projection projection document r0", "$ r10 = r19 f slave event", "r20 = org eclipse jface text projection projection document r0", "r21 = org eclipse jface text document event $ r10", "r20 fire document change r21", "label goto label5", "label return", "if $ r3 == null goto label4", "label $ i0 = r1 get offset", "r23 = org eclipse jface text projection projection document r0", "$ z1 = r23 ensure well form segmentation $ i0", "if $ z1 == 0 goto label5", "r24 = org eclipse jface text projection projection document r0", "$ r4 = r24 f map", "$ r4 projection change"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jface text source annotation r0", "r2 f type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jface text source annotation r0", "$ z0 = r1 f mark a delete", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jface text source annotation model r0", "r1 cleanup z0 1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org eclipse jface text source annotation model event r0", "$ r2 = r5 f add annotation", "i0 = $ r2 size", "r1 = newarray org eclipse jface text source annotation [ i0 ]", "r6 = org eclipse jface text source annotation model event r0", "$ r3 = r6 f add annotation", "$ r3 to array r1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jface text source annotation model event r0", "$ z0 = r4 f be world change", "if $ z0 ! = 0 goto label1", "r5 = org eclipse jface text source annotation model event r0", "$ r1 = r5 f add annotation", "$ z1 = $ r1 be empty", "if $ z1 == 0 goto label1", "r6 = org eclipse jface text source annotation model event r0", "$ r2 = r6 f remove annotation", "$ z2 = $ r2 be empty", "if $ z2 == 0 goto label1", "r7 = org eclipse jface text source annotation model event r0", "$ r3 = r7 f change annotation", "$ z3 = $ r3 be empty", "if $ z3 == 0 goto label1", "return 1", "if $ z3 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jface text templates document template context r0", "$ i0 = r1 f original offset", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org eclipse core runtime assert be not null r1", "r2 = org eclipse jface text templates template r0", "r2 f context type id = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jface text templates template r0", "r2 f pattern = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org eclipse core runtime assert be not null r1", "r5 = org eclipse jface text templates template context type r0", "$ r2 = r5 f resolvers", "$ r3 = r1 get type", "$ r2 remove $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jface text templates template variable r0", "$ r1 = r2 f value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = newarray java lang string [ 1 ]", "$ r2 [ 0 ] = r1", "r3 = org eclipse jface text templates template variable r0", "r3 set value $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = lengthof r1", "if $ i0 < = 0 goto label1", "$ z1 = 1", "goto label2", "label org eclipse core runtime assert be true $ z1", "$ r2 = org eclipse jface text text utility copy r1", "r3 = org eclipse jface text templates template variable r0", "r3 f value = $ r2", "r4 = org eclipse jface text templates template variable r0", "r4 set resolve 1", "return", "if $ i0 < = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jface text templates template variable r0", "r1 f be unambiguous = z0", "if z0 == 0 goto label1", "r2 = org eclipse jface text templates template variable r0", "r2 set resolve 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i2 = -1", "i3 = 0", "goto label4", "label $ i4 = lengthof r0", "if i3 < $ i4 goto label1", "label $ r2 = r0 [ i3 ]", "$ z0 = r1 end with $ r2", "if $ z0 == 0 goto label3", "if i2 == -1 goto label2", "$ r3 = r0 [ i3 ]", "$ i0 = $ r3 length", "$ r4 = r0 [ i2 ]", "$ i1 = $ r4 length", "if $ i0 < = $ i1 goto label3", "label i2 = i3", "label i3 = i3 + 1", "if i3 < $ i4 goto label1", "return i2"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse text edit copy source edit r0", "r2 f modifier = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse text edit insert edit r0", "$ r1 = r2 f text", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse text edit replace edit r0", "$ r1 = r2 f text", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse text edits malformed tree exception r0", "$ r1 = r2 f parent", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org eclipse core runtime assert be not null r1", "r5 = org eclipse text edit text edit r0", "$ r2 = r5 f child", "if $ r2 ! = null goto label1", "return 0", "if $ r2 ! = null goto label1", "label r6 = org eclipse text edit text edit r0", "$ r3 = r6 f child", "z0 = $ r3 remove r1", "if z0 == 0 goto label2", "r1 internal set parent null", "r7 = org eclipse text edit text edit r0", "$ r4 = r7 f child", "$ z1 = $ r4 be empty", "if $ z1 == 0 goto label2", "r8 = org eclipse text edit text edit r0", "r8 f child = null", "label return z0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r8 = org eclipse text edit text edit copier r0", "$ r4 = r8 f edit", "r9 = org eclipse text edit text edit copier r0", "r1 = r9 do copy $ r4", "if r1 == null goto label3", "r10 = org eclipse text edit text edit copier r0", "$ r5 = r10 f copy", "$ r6 = $ r5 key set", "r3 = $ r6 iterator", "goto label2", "label $ z0 = r3 have next", "if $ z0 ! = 0 goto label1", "label $ r7 = r3 next", "r2 = org eclipse text edit text edit $ r7", "r11 = org eclipse text edit text edit copier r0", "r2 post process copy r11", "if $ z0 ! = 0 goto label1", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse text edit text edit group r0", "$ r1 = r2 f description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse text edit text edit visitor r0", "r3 = org eclipse text edit text edit r1", "$ z0 = r2 visit node r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse text templates template persistence data r0", "$ r1 = r2 f custom template", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse text templates template store core r0", "$ r1 = r2 get templates null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = org osgi framework framework util $ d n chain matching match r0 r1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "i0 = @ parameter3", "i1 = @ parameter4", "r4 = org osgi service url abstract u r l stream handler service r0", "r4 real handler = r1", "r5 = org osgi service url abstract u r l stream handler service r0", "r5 parse u r l r2 r3 i0 i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = specialinvoke r0 equal r1 r2", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox contentstream operator operator r0", "r2 image data = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox contentstream p d f stream engine r0", "$ r1 = r2 initial matrix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox co c o s array r0", "$ r1 = r2 object", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = new java util array list", "r5 = org apache pdfbox co c o s array r0", "$ i0 = r5 size", "specialinvoke r4 < init > $ i0", "i2 = 0", "label r6 = org apache pdfbox co c o s array r0", "$ i1 = r6 size", "if i2 > = $ i1 goto label2", "r7 = org apache pdfbox co c o s array r0", "$ r3 = r7 get i2", "r4 add $ r3", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox co c o s dictionary r0", "$ r1 = r2 item", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "f0 = @ parameter1", "$ r2 = org apache pdfbox co c o s name get p d f name r1", "r3 = org apache pdfbox co c o s dictionary r0", "r3 set float $ r2 f0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org apache pdfbox co c o s name get p d f name r1", "r5 = org apache pdfbox co c o s dictionary r0", "$ r4 = r5 get name a string $ r3 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "$ r2 = org apache pdfbox co c o s name get p d f name r1", "r3 = org apache pdfbox co c o s dictionary r0", "$ z1 = r3 get boolean $ r2 z0", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "$ r2 = org apache pdfbox co c o s name get p d f name r1", "r3 = org apache pdfbox co c o s dictionary r0", "$ z1 = r3 get boolean $ r2 z0", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "$ r2 = org apache pdfbox co c o s name get p d f name r1", "r3 = org apache pdfbox co c o s dictionary r0", "$ i1 = r3 get int $ r2 i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "f0 = @ parameter1", "$ r2 = org apache pdfbox co c o s name get p d f name r1", "r3 = org apache pdfbox co c o s dictionary r0", "$ f1 = r3 get float $ r2 f0", "return $ f1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache pdfbox co c o s name get p d f name r1", "r4 = org apache pdfbox co c o s dictionary r0", "$ r3 = r4 get item $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache pdfbox co c o s dictionary r0", "r3 = r4 get item r1", "if r3 ! = null goto label1", "if r2 == null goto label1", "r5 = org apache pdfbox co c o s dictionary r0", "r3 = r5 get item r2", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox co c o s dictionary r0", "$ r1 = r3 item", "$ r2 = $ r1 key set", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = r1 entry set", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label4", "$ r5 = r2 next", "r3 = java util map $ entry $ r5", "$ r6 = r3 get key", "$ r7 = org apache pdfbox co c o s name $ r6", "$ r8 = $ r7 get name", "$ z1 = $ r8 equal \\ `` size\\ ``", "if $ z1 == 0 goto label2", "r15 = org apache pdfbox co c o s dictionary r0", "$ r13 = r15 item", "$ r14 = org apache pdfbox co c o s name get p d f name \\ `` size\\ ``", "$ z2 = $ r13 contain key $ r14", "if $ z2 ! = 0 goto label3", "label $ r9 = r3 get key", "$ r10 = org apache pdfbox co c o s name $ r9", "$ r11 = r3 get value", "$ r12 = org apache pdfbox co c o s base $ r11", "r16 = org apache pdfbox co c o s dictionary r0", "r16 set item $ r10 $ r12", "label goto label1", "if $ z0 == 0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org apache pdfbox co c o s document r0", "r1 version = f0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox co c o s document r0", "$ z0 = r1 be decrypt", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox co c o s float r0", "$ r2 = r4 value a string", "$ r3 = $ r2 get bytes \\ `` iso-8859-1\\ ``", "r1 write $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox co c o s object r0", "$ r1 = r2 base object", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox co c o s object r0", "r2 base object = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox co c o s object key r0", "$ i0 = r1 generation", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox co c o s stream r0", "$ r1 = r2 create output stream null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r13 = new java io byte array output stream", "specialinvoke r13 < init >", "r10 = null", "label r15 = org apache pdfbox co c o s stream r0", "r10 = r15 create input stream", "r16 = java io input stream r10", "org apache pdfbox io i o utils copy r16 r13", "label r17 = java io closeable r10", "org apache pdfbox io i o utils close quietly r17", "goto label7", "label r14 = new org apache pdfbox co c o s string", "$ r6 = r13 to byte array", "specialinvoke r14 < init > $ r6", "$ r7 = r14 get string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox filter a s c i i85 output stream r0", "$ c0 = r1 terminator", "return $ c0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache pdfbox filter a s c i i85 output stream r0", "$ i1 = r1 line break", "if $ i1 < = i0 goto label1", "r2 = org apache pdfbox filter a s c i i85 output stream r0", "r2 line break = i0", "label r3 = org apache pdfbox filter a s c i i85 output stream r0", "r3 maxline = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r5 = new java awt geom affine transform", "specialinvoke $ r5 < init >", "r4 = r1 get medium box", "$ f2 = r4 get width", "$ f3 = r2 get width", "$ f4 = $ f2 - $ f3", "f0 = $ f4 2 0f", "$ f5 = r4 get height", "$ f6 = r2 get height", "$ f7 = $ f5 - $ f6", "f1 = $ f7 2 0f", "$ d1 = double f0", "$ d0 = double f1", "$ r5 translate $ d1 $ d0", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox multipdf overlay r0", "$ r1 = r2 input file name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox multipdf overlay r0", "$ r1 = r2 default overlay filename", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox multipdf overlay r0", "r2 last page overlay filename = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox pdfparser c o s parser r0", "$ z0 = specialinvoke r1 parse header \\ `` % pdf-\\", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdfwriter c o s writer r0", "$ r1 = r2 x ref entry", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org apache pdfbox pdfwriter c o s writer x ref entry nullentry", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel common filespecification p d complex file specification r0", "r1 = r2 get file unicode", "if r1 ! = null goto label1", "r3 = org apache pdfbox pdmodel common filespecification p d complex file specification r0", "r1 = r3 get file do", "label if r1 ! = null goto label2", "r4 = org apache pdfbox pdmodel common filespecification p d complex file specification r0", "r1 = r4 get file mac", "label if r1 ! = null goto label3", "r5 = org apache pdfbox pdmodel common filespecification p d complex file specification r0", "r1 = r5 get file unix", "label if r1 ! = null goto label4", "r6 = org apache pdfbox pdmodel common filespecification p d complex file specification r0", "r1 = r6 get file", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache pdfbox pdmodel common filespecification p d embed file r0", "$ r2 = r3 get c o s object", "$ r2 set embedded date \\ `` params\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache pdfbox pdmodel common filespecification p d embed file r0", "$ r2 = r3 get c o s object", "$ r2 set embedded date \\ `` params\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache pdfbox pdmodel common filespecification p d embed file r0", "$ r2 = r3 get c o s object", "$ r2 set embed string \\ `` params\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache pdfbox pdmodel common function type4 instruction sequence r0", "$ r2 = r3 instruction", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache pdfbox pdmodel common function type4 instruction sequence r0", "$ r1 = r3 instruction", "$ r2 = java lang boolean value of z0", "$ r1 add $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache pdfbox pdmodel common function type4 instruction sequence r0", "$ r2 = r3 instruction", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = new org apache pdfbox pdmodel common function type4 parser $ tokenizer", "specialinvoke $ r3 < init > r0 r1 null", "org apache pdfbox pdmodel common function type4 parser $ tokenizer access $ 100 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = new java util tree set", "r5 = org apache pdfbox pdmodel common p d page label r0", "$ r2 = r5 label", "$ r3 = $ r2 key set", "specialinvoke r4 < init > $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r7 = new java io byte array output stream", "specialinvoke r7 < init >", "r6 = null", "label r8 = org apache pdfbox pdmodel common p d stream r0", "r6 = r8 create input stream", "r9 = java io input stream r6", "org apache pdfbox io i o utils copy r9 r7", "label if r6 == null goto label5", "r10 = java io input stream r6", "r10 close", "goto label5", "label $ r4 = r7 to byte array", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache pdfbox pdmodel common p d stream r0", "$ r2 = r3 stream", "$ r1 = org apache pdfbox co c o s name dl", "$ r2 set int $ r1 i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel documentinterchange logicalstructure p d object reference r0", "$ r2 = r4 get c o s object", "$ r3 = org apache pdfbox co c o s name obj", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r2 set item $ r3 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel documentinterchange logicalstructure p d structure element r0", "$ r1 = r4 get c o s object", "$ r2 = org apache pdfbox co c o s name id", "$ r3 = $ r1 get string $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return", "if r1 ! = null goto label1", "label r2 = org apache pdfbox co c o s name c", "$ i1 = r1 size", "if $ i1 ! = 1 goto label2", "$ i3 = r1 get revision number 0", "if $ i3 ! = 0 goto label2", "$ r10 = r1 get object 0", "r12 = java lang string $ r10", "r16 = org apache pdfbox pdmodel documentinterchange logicalstructure p d structure element r0", "$ r11 = r16 get c o s object", "$ r11 set name r2 r12", "if $ i3 ! = 0 goto label2", "label r14 = new org apache pdfbox co c o s array", "specialinvoke r14 < init >", "i4 = 0", "label $ i5 = r1 size", "if i4 > = $ i5 goto label5", "$ r6 = r1 get object i4", "r3 = java lang string $ r6", "i0 = r1 get revision number i4", "if i0 > = 0 goto label4", "r15 = new java lang illegal argument exception", "specialinvoke r15 < init > \\ `` the revision number shall be > -1\\ ``", "throw r15", "if i0 > = 0 goto label4", "label $ r7 = org apache pdfbox co c o s name get p d f name r3", "r17 = org apache pdfbox co c o s base $ r7", "r14 add r17", "$ l2 = long i0", "$ r8 = org apache pdfbox co c o s integer get $ l2", "r18 = org apache pdfbox co c o s base $ r8", "r14 add r18", "i4 = i4 + 1", "goto label3", "if i4 > = $ i5 goto label5", "label r19 = org apache pdfbox pdmodel documentinterchange logicalstructure p d structure element r0", "$ r5 = r19 get c o s object", "r20 = org apache pdfbox co c o s base r14", "$ r5 set item r2 r20"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel documentinterchange logicalstructure p d structure tree root r0", "$ r1 = r4 get c o s object", "$ r2 = org apache pdfbox co c o s name k", "$ r3 = $ r1 get dictionary object $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel documentinterchange logicalstructure p d structure tree root r0", "$ r2 = r4 get c o s object", "$ r3 = org apache pdfbox co c o s name parent_tree", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r2 set item $ r3 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache pdfbox pdmodel documentinterchange logicalstructure p d user property r0", "$ r2 = r5 get name", "r6 = org apache pdfbox pdmodel documentinterchange logicalstructure p d user property r0", "specialinvoke r6 potentially notify change $ r2 r1", "r7 = org apache pdfbox pdmodel documentinterchange logicalstructure p d user property r0", "$ r3 = r7 get c o s object", "$ r4 = org apache pdfbox co c o s name n", "$ r3 set name $ r4 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache pdfbox pdmodel documentinterchange markedcontent p d mark content r0", "$ r2 = r3 get content", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d export format attribute object r0", "$ r1 = r2 get name \\ `` scope\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0", "r2 set name \\ `` text decoration type\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0", "$ r1 = r2 get name \\ `` glyph orientation vertical\\", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0", "r1 set number \\ `` column widths\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d print field attribute object r0", "r2 set name \\ `` checked\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "f0 = @ parameter1", "r3 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0", "$ r2 = r3 get c o s object", "$ f1 = $ r2 get float r1 f0", "return $ f1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox pdmodel encryption access permission r0", "$ z0 = specialinvoke r1 be permission bit on 4", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox pdmodel encryption access permission r0", "$ z0 = specialinvoke r1 be permission bit on 6", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache pdfbox pdmodel encryption access permission r0", "$ z1 = r1 read only", "if $ z1 ! = 0 goto label1", "r2 = org apache pdfbox pdmodel encryption access permission r0", "specialinvoke r2 set permission bit 9 z0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel encryption p d crypt filter dictionary r0", "$ r3 = r4 crypt filter dictionary", "$ r2 = org apache pdfbox co c o s name cfm", "r5 = org apache pdfbox co c o s base r1", "$ r3 set item $ r2 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r5 = org apache pdfbox pdmodel encryption p d crypt filter dictionary r0", "$ r2 = r5 crypt filter dictionary", "$ r1 = org apache pdfbox co c o s name cfm", "$ r3 = $ r2 get dictionary object $ r1", "$ r4 = org apache pdfbox co c o s name $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache pdfbox pdmodel encryption p d encryption r0", "$ r3 = r6 dictionary", "$ r4 = org apache pdfbox co c o s name u", "r5 = new org apache pdfbox co c o s string", "specialinvoke r5 < init > r1", "r7 = org apache pdfbox co c o s base r5", "$ r3 set item $ r4 r7", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache pdfbox pdmodel encryption p d encryption r0", "$ r2 = r3 dictionary", "$ r1 = org apache pdfbox co c o s name p", "$ r2 set int $ r1 i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache pdfbox pdmodel encryption public key protection policy r0", "$ r2 = r3 recipient", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache pdfbox pdmodel encryption public key protection policy r0", "$ r2 = r3 recipient", "$ z0 = $ r2 remove r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel encryption public key recipient r0", "r2 x509 = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache pdfbox pdmodel encryption security handler r0", "r1 decrypt metadata = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "l1 = @ parameter2", "r8 = org apache pdfbox pdmodel encryption security handler r0", "$ r2 = r8 object", "$ z0 = $ r2 contain r1", "if $ z0 ! = 0 goto label4", "r9 = org apache pdfbox pdmodel encryption security handler r0", "$ r3 = r9 object", "$ r3 add r1", "$ z2 = r1 instanceof org apache pdfbox co c o s string", "if $ z2 == 0 goto label1", "$ r7 = org apache pdfbox co c o s string r1", "r10 = org apache pdfbox pdmodel encryption security handler r0", "specialinvoke r10 decrypt string $ r7 l0 l1", "goto label4", "label return", "if $ z2 == 0 goto label1", "label $ z3 = r1 instanceof org apache pdfbox co c o s stream", "if $ z3 == 0 goto label2", "$ r6 = org apache pdfbox co c o s stream r1", "r11 = org apache pdfbox pdmodel encryption security handler r0", "r11 decrypt stream $ r6 l0 l1", "if $ z3 == 0 goto label2", "label $ z4 = r1 instanceof org apache pdfbox co c o s dictionary", "if $ z4 == 0 goto label3", "$ r5 = org apache pdfbox co c o s dictionary r1", "r12 = org apache pdfbox pdmodel encryption security handler r0", "specialinvoke r12 decrypt dictionary $ r5 l0 l1", "if $ z4 == 0 goto label3", "label $ z5 = r1 instanceof org apache pdfbox co c o s array", "if $ z5 == 0 goto label4", "$ r4 = org apache pdfbox co c o s array r1", "r13 = org apache pdfbox pdmodel encryption security handler r0", "specialinvoke r13 decrypt array $ r4 l0 l1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache pdfbox pdmodel encryption security handler r0", "r1 use a e s = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel encryption standard protection policy r0", "r2 user password = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = null", "r6 = org apache pdfbox pdmodel fdf f d f annotation r0", "$ r3 = r6 annot", "$ r2 = org apache pdfbox co c o s name page", "$ r4 = $ r3 get dictionary object $ r2", "r1 = org apache pdfbox co c o s number $ r4", "if r1 == null goto label1", "$ i0 = r1 int value", "r5 = java lang integer value of $ i0", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel fdf f d f annotation r0", "$ r2 = r3 annot", "$ r1 = org apache pdfbox co c o s name f", "$ z0 = $ r2 get flag $ r1 8", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache pdfbox pdmodel fdf f d f annotation r0", "$ r2 = r3 annot", "$ r1 = org apache pdfbox co c o s name f", "$ r2 set flag $ r1 16 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel fdf f d f annotation r0", "$ r2 = r3 annot", "$ r1 = org apache pdfbox co c o s name f", "$ z0 = $ r2 get flag $ r1 128", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return \\ `` \\ ``", "if r1 ! = null goto label1", "label $ z0 = r1 instanceof org apache pdfbox co c o s string", "if $ z0 == 0 goto label2", "$ r4 = org apache pdfbox co c o s string r1", "$ r5 = $ r4 get string", "return $ r5", "if $ z0 == 0 goto label2", "label $ z1 = r1 instanceof org apache pdfbox co c o s stream", "if $ z1 == 0 goto label3", "$ r2 = org apache pdfbox co c o s stream r1", "$ r3 = $ r2 to text string", "return $ r3", "if $ z1 == 0 goto label3", "label return \\ `` \\ ``"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel fdf f d f annotation caret r0", "$ r2 = r4 annot", "$ r1 = org apache pdfbox co c o s name sy", "$ r3 = $ r2 get string $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = null", "if r1 == null goto label1", "r2 = r1 get r g b color component null", "r7 = new org apache pdfbox co c o s array", "specialinvoke r7 < init >", "r6 = r7", "r7 set float array r2", "label r8 = org apache pdfbox pdmodel fdf f d f annotation circle r0", "$ r4 = r8 annot", "$ r3 = org apache pdfbox co c o s name ic", "r9 = org apache pdfbox co c o s base r6", "$ r4 set item $ r3 r9", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r7 = null", "r9 = org apache pdfbox pdmodel fdf f d f annotation circle r0", "$ r4 = r9 annot", "$ r3 = org apache pdfbox co c o s name ic", "$ r5 = $ r4 get dictionary object $ r3", "r1 = org apache pdfbox co c o s array $ r5", "if r1 == null goto label1", "r2 = r1 to float array", "$ i0 = lengthof r2", "if $ i0 < 3 goto label1", "r8 = new java awt color", "$ f2 = r2 [ 0 ]", "$ f1 = r2 [ 1 ]", "$ f0 = r2 [ 2 ]", "specialinvoke r8 < init > $ f2 $ f1 $ f0", "r7 = r8", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new org apache pdfbox co c o s array", "specialinvoke r6 < init >", "r6 set float array r1", "r7 = org apache pdfbox pdmodel fdf f d f annotation free text r0", "$ r5 = r7 annot", "$ r4 = org apache pdfbox co c o s name cl", "r8 = org apache pdfbox co c o s base r6", "$ r5 set item $ r4 r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel fdf f d f annotation free text r0", "$ r2 = r4 annot", "$ r1 = org apache pdfbox co c o s name da", "$ r3 = $ r2 get string $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel fdf f d f annotation free text r0", "$ r2 = r4 annot", "$ r1 = org apache pdfbox co c o s name d", "$ r3 = $ r2 get string $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r7 = null", "r9 = org apache pdfbox pdmodel fdf f d f annotation line r0", "$ r4 = r9 annot", "$ r3 = org apache pdfbox co c o s name ic", "$ r5 = $ r4 get dictionary object $ r3", "r1 = org apache pdfbox co c o s array $ r5", "if r1 == null goto label1", "r2 = r1 to float array", "$ i0 = lengthof r2", "if $ i0 < 3 goto label1", "r8 = new java awt color", "$ f2 = r2 [ 0 ]", "$ f1 = r2 [ 1 ]", "$ f0 = r2 [ 2 ]", "specialinvoke r8 < init > $ f2 $ f1 $ f0", "r7 = r8", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel fdf f d f catalog r0", "$ r2 = r4 catalog", "$ r1 = org apache pdfbox co c o s name version", "$ r3 = $ r2 get name a string $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel fdf f d f catalog r0", "$ r3 = r4 catalog", "$ r2 = org apache pdfbox co c o s name version", "$ r3 set name $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = org apache pdfbox pdmodel fdf f d f dictionary r0", "$ r2 = r5 fdf", "$ r1 = org apache pdfbox co c o s name f", "$ r3 = $ r2 get dictionary object $ r1", "$ r4 = org apache pdfbox pdmodel common filespecification p d file specification create f s $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new java io file output stream", "specialinvoke r3 < init > r1", "r4 = org apache pdfbox pdmodel fdf f d f document r0", "r4 save r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel fdf f d f document r0", "$ r1 = r2 document", "$ r1 close", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r11 = org apache pdfbox pdmodel fdf f d f field r0", "$ r3 = r11 field", "$ r2 = org apache pdfbox co c o s name v", "r1 = $ r3 get dictionary object $ r2", "$ z0 = r1 instanceof org apache pdfbox co c o s name", "if $ z0 == 0 goto label1", "return r1", "if $ z0 == 0 goto label1", "label $ z1 = r1 instanceof org apache pdfbox co c o s array", "if $ z1 == 0 goto label2", "label $ z2 = r1 instanceof org apache pdfbox co c o s string", "if $ z2 ! = 0 goto label3", "$ z3 = r1 instanceof org apache pdfbox co c o s stream", "if $ z3 == 0 goto label4", "label return r1", "if $ z3 == 0 goto label4", "label if r1 == null goto label5", "r10 = new java io i o exception", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r6 = r9 append \\ `` error unknown type for field import\\ ``", "$ r7 = $ r6 append r1", "$ r8 = $ r7 to string", "specialinvoke r10 < init > $ r8", "throw r10", "label if r1 == null goto label5", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache pdfbox pdmodel fdf f d f field r0", "$ r2 = r3 field", "$ r1 = org apache pdfbox co c o s name ff", "$ r2 set int $ r1 i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = null", "r6 = org apache pdfbox pdmodel fdf f d f field r0", "$ r3 = r6 field", "$ r2 = org apache pdfbox co c o s name clr_f", "$ r4 = $ r3 get dictionary object $ r2", "r1 = org apache pdfbox co c o s number $ r4", "if r1 == null goto label1", "$ i0 = r1 int value", "r5 = java lang integer value of $ i0", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel fdf f d f icon fit r0", "$ r3 = r4 fit", "$ r2 = org apache pdfbox co c o s name sw", "$ r3 set name $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel fdf f d f name page reference r0", "$ r2 = r4 ref", "$ r1 = org apache pdfbox co c o s name name", "$ r3 = $ r2 get string $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache pdfbox pdmodel fdf f d f option element r0", "$ r3 = r5 option", "r4 = new org apache pdfbox co c o s string", "specialinvoke r4 < init > r1", "r6 = org apache pdfbox co c o s base r4", "$ r3 set 0 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r5 = org apache pdfbox pdmodel font encode encode r0", "$ r2 = r5 code to name", "$ r3 = java lang integer value of i0", "$ r4 = $ r2 get $ r3", "r1 = java lang string $ r4", "if r1 == null goto label1", "return r1", "if r1 == null goto label1", "label return \\ `` notdef\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel font p d c i d font type0 r0", "$ r1 = r4 cid font", "if $ r1 == null goto label1", "r5 = org apache pdfbox pdmodel font p d c i d font type0 r0", "$ r3 = r5 cid font", "r6 = org apache fontbox font box font $ r3", "return r6", "if $ r1 == null goto label1", "label r7 = org apache pdfbox pdmodel font p d c i d font type0 r0", "$ r2 = r7 t1 font", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel font p d c i d font type2 r0", "$ r1 = r2 ttf", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache pdfbox pdmodel font p d font r0", "r2 = r6 encode r1", "r5 = new java io byte array input stream", "specialinvoke r5 < init > r2", "f1 = 0 0f", "label $ i1 = r5 available", "if $ i1 < = 0 goto label2", "r7 = org apache pdfbox pdmodel font p d font r0", "i0 = r7 read code r5", "r8 = org apache pdfbox pdmodel font p d font r0", "$ f0 = r8 get width i0", "f1 = f1 + $ f0", "goto label1", "if $ i1 < = 0 goto label2", "label return f1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel font p d font descriptor r0", "$ r2 = r3 dic", "$ r1 = org apache pdfbox co c o s name ascent", "$ f0 = $ r2 get float $ r1 0 0f", "return $ f0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel font p d font descriptor r0", "$ r2 = r3 dic", "$ r1 = org apache pdfbox co c o s name max_width", "$ f0 = $ r2 get float $ r1 0 0f", "return $ f0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel font p d font descriptor r0", "$ r3 = r4 dic", "$ r2 = org apache pdfbox co c o s name font_file2", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r3 set item $ r2 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r6 = null", "r8 = org apache pdfbox pdmodel font p d font descriptor r0", "$ r3 = r8 dic", "$ r2 = org apache pdfbox co c o s name font_file3", "r1 = $ r3 get dictionary object $ r2", "$ z0 = r1 instanceof org apache pdfbox co c o s stream", "if $ z0 == 0 goto label1", "r7 = new org apache pdfbox pdmodel common p d stream", "$ r5 = org apache pdfbox co c o s stream r1", "specialinvoke r7 < init > $ r5", "r6 = r7", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = null", "if r1 == null goto label1", "r4 = r1 to c o s array", "label r5 = org apache pdfbox pdmodel graphic color p d cal r g b r0", "$ r3 = r5 dictionary", "$ r2 = org apache pdfbox co c o s name matrix", "r6 = org apache pdfbox co c o s base r4", "$ r3 set item $ r2 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel graphic color p d color r0", "$ r1 = r2 pattern name", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel graphic color p d color r0", "$ r3 = r4 color space", "r5 = org apache pdfbox pdmodel graphic color p d color r0", "$ r2 = r5 component", "r1 = $ r3 to r g b $ r2", "$ f0 = r1 [ 0 ]", "$ f1 = $ f0 * 255 0f", "i0 = java lang math round $ f1", "$ f2 = r1 [ 1 ]", "$ f3 = $ f2 * 255 0f", "i1 = java lang math round $ f3", "$ f4 = r1 [ 2 ]", "$ f5 = $ f4 * 255 0f", "i2 = java lang math round $ f5", "$ i3 = i0 < < 8", "i6 = $ i3 + i1", "$ i4 = i6 < < 8", "i7 = $ i4 + i2", "return i7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r6 = org apache pdfbox pdmodel graphic color p d device n r0", "$ r1 = r6 tint transform", "if $ r1 ! = null goto label1", "r7 = org apache pdfbox pdmodel graphic color p d device n r0", "$ r3 = r7 array", "$ r4 = $ r3 get object 3", "$ r5 = org apache pdfbox pdmodel common function p d function create $ r4", "r8 = org apache pdfbox pdmodel graphic color p d device n r0", "r8 tint transform = $ r5", "label r9 = org apache pdfbox pdmodel graphic color p d device n r0", "$ r2 = r9 tint transform", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r12 = new java util array list", "specialinvoke r12 < init >", "r13 = org apache pdfbox pdmodel graphic color p d device n process r0", "$ r7 = r13 dictionary", "$ r6 = org apache pdfbox co c o s name component", "$ r8 = $ r7 get dictionary object $ r6", "r2 = org apache pdfbox co c o s array $ r8", "if r2 ! = null goto label1", "return r12", "if r2 ! = null goto label1", "label r3 = r2 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r9 = r3 next", "r4 = org apache pdfbox co c o s base $ r9", "$ r10 = org apache pdfbox co c o s name r4", "$ r11 = $ r10 get name", "r12 add $ r11", "goto label2", "if $ z0 == 0 goto label3", "label return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel graphic color p d lab r0", "specialinvoke r2 set component range array r1 2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r0 get name", "$ r5 = r0 get name", "i0 = $ r5 last index of 46", "if i0 ! = -1 goto label1", "$ r21 = new java lang illegal argument exception", "$ r22 = new java lang string builder", "specialinvoke $ r22 < init >", "$ r23 = $ r22 append \\ `` image type not support \\ ``", "$ r24 = $ r23 append r2", "$ r25 = $ r24 to string", "specialinvoke $ r21 < init > $ r25", "throw $ r21", "if i0 ! = -1 goto label1", "label $ i1 = i0 + 1", "$ r6 = r2 substring $ i1", "r3 = $ r6 to lower case", "$ r7 = \\ `` jpg\\ ``", "$ z0 = $ r7 equal r3", "if $ z0 ! = 0 goto label2", "$ r9 = \\ `` jpeg\\ ``", "$ z1 = $ r9 equal r3", "if $ z1 == 0 goto label3", "label $ r8 = new java io file input stream", "specialinvoke $ r8 < init > r0", "r4 = org apache pdfbox pdmodel graphic image j p e g factory create from stream r1 $ r8", "$ r8 close", "return r4", "if $ z1 == 0 goto label3", "label $ r10 = \\ `` tif\\ ``", "$ z2 = $ r10 equal r3", "if $ z2 ! = 0 goto label4", "$ r12 = \\ `` tiff\\ ``", "$ z3 = $ r12 equal r3", "if $ z3 == 0 goto label5", "label $ r11 = org apache pdfbox pdmodel graphic image c c i t t factory create from file r1 r0", "return $ r11", "if $ z3 == 0 goto label5", "label $ r13 = \\ `` gif\\ ``", "$ z4 = $ r13 equal r3", "if $ z4 ! = 0 goto label6", "$ r14 = \\ `` bmp\\ ``", "$ z5 = $ r14 equal r3", "if $ z5 ! = 0 goto label6", "$ r15 = \\ `` png\\ ``", "$ z6 = $ r15 equal r3", "if $ z6 == 0 goto label7", "label r27 = javax imageio image i o read r0", "$ r28 = org apache pdfbox pdmodel graphic image lossless factory create from image r1 r27", "return $ r28", "if $ z6 == 0 goto label7", "label $ r16 = new java lang illegal argument exception", "$ r17 = new java lang string builder", "specialinvoke $ r17 < init >", "$ r18 = $ r17 append \\ `` image type not support \\ ``", "$ r19 = $ r18 append r2", "$ r20 = $ r19 to string", "specialinvoke $ r16 < init > $ r20", "throw $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [], [52], [53], [54], [55], [56], [57], [58], [59], []]}
{"nodes": ["r0 = @ this", "r5 = org apache pdfbox pdmodel graphic image p d image x object r0", "$ r2 = r5 get c o s object", "$ r3 = org apache pdfbox co c o s name mask", "r1 = $ r2 get dictionary object $ r3", "$ z0 = r1 instanceof org apache pdfbox co c o s array", "if $ z0 == 0 goto label1", "$ r4 = org apache pdfbox co c o s array r1", "return $ r4", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = org apache pdfbox pdmodel graphic optionalcontent p d optional content property r0", "r2 = specialinvoke r11 get o c g", "r3 = r2 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r7 = r3 next", "r4 = org apache pdfbox co c o s base $ r7", "r12 = org apache pdfbox pdmodel graphic optionalcontent p d optional content property r0", "r5 = specialinvoke r12 to dictionary r4", "$ r8 = org apache pdfbox co c o s name name", "r6 = r5 get string $ r8", "$ z1 = r6 equal r1", "if $ z1 == 0 goto label2", "r10 = new org apache pdfbox pdmodel graphic optionalcontent p d optional content group", "specialinvoke r10 < init > r5", "return r10", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r10 = org apache pdfbox pdmodel graphic shade patch r0", "$ r2 = r10 corner color", "$ r3 = $ r2 [ 0 ]", "i0 = lengthof $ r3", "r1 = newmultiarray float [ 2 ] [ i0 ]", "i1 = 0", "label if i1 > = i0 goto label2", "$ r6 = r1 [ 0 ]", "r11 = org apache pdfbox pdmodel graphic shade patch r0", "$ r4 = r11 corner color", "$ r5 = $ r4 [ 2 ]", "$ f0 = $ r5 [ i1 ]", "$ r6 [ i1 ] = $ f0", "$ r9 = r1 [ 1 ]", "r12 = org apache pdfbox pdmodel graphic shade patch r0", "$ r7 = r12 corner color", "$ r8 = $ r7 [ 3 ]", "$ f1 = $ r8 [ i1 ]", "$ r9 [ i1 ] = $ f1", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel graphic shade p d shade type2 r0", "r4 extend = r1", "r5 = org apache pdfbox pdmodel graphic shade p d shade type2 r0", "$ r2 = r5 get c o s object", "$ r3 = org apache pdfbox co c o s name extend", "r6 = org apache pdfbox co c o s base r1", "$ r2 set item $ r3 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache pdfbox pdmodel graphic shade triangle base shade context r0", "$ r2 = r3 calc pixel table r1", "r4 = org apache pdfbox pdmodel graphic shade triangle base shade context r0", "r4 pixel table = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache pdfbox pdmodel graphic state p d extend graphic state r0", "$ r2 = r3 dict", "$ r1 = org apache pdfbox co c o s name lc", "$ r2 set int $ r1 i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache pdfbox pdmodel graphic state p d extend graphic state r0", "$ r2 = r3 dict", "$ r1 = org apache pdfbox co c o s name op", "$ r2 set boolean $ r1 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel graphic state p d extend graphic state r0", "$ r2 = r3 dict", "$ r1 = org apache pdfbox co c o s name ais", "$ z0 = $ r2 get boolean $ r1 0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel graphic state p d graphic state r0", "r2 current transformation matrix = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox pdmodel graphic state p d graphic state r0", "$ f0 = r1 miter limit", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache pdfbox pdmodel graphic state p d graphic state r0", "r1 stroke adjustment = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox pdmodel graphic state p d graphic state r0", "$ z0 = r1 non stroke overprint", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel graphic state p d graphic state r0", "$ r1 = r2 transfer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel graphic state p d graphic state r0", "r2 transfer = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox pdmodel graphic state p d text state r0", "$ f0 = r1 word space", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org apache pdfbox pdmodel graphic state p d text state r0", "r1 word space = f0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox pdmodel graphic state p d text state r0", "$ f0 = r1 horizontal scale", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive action p d action r0", "$ r3 = r4 action", "$ r2 = org apache pdfbox co c o s name type", "$ r3 set name $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive action p d action import data r0", "$ r3 = r4 action", "$ r2 = org apache pdfbox co c o s name f", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r3 set item $ r2 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive action p d action sound r0", "$ r2 = r3 action", "$ r1 = org apache pdfbox co c o s name mix", "$ r2 set boolean $ r1 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = org apache pdfbox pdmodel interactive action p d annotation additional action r0", "$ r2 = r5 action", "$ r3 = $ r2 get dictionary object \\ `` e\\ ``", "r1 = org apache pdfbox co c o s dictionary $ r3", "r4 = null", "if r1 == null goto label1", "r4 = org apache pdfbox pdmodel interactive action p d action factory create action r1", "label return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r5 = org apache pdfbox pdmodel interactive action p d annotation additional action r0", "$ r2 = r5 action", "$ r3 = $ r2 get dictionary object \\ `` x\\ ``", "r1 = org apache pdfbox co c o s dictionary $ r3", "r4 = null", "if r1 == null goto label1", "r4 = org apache pdfbox pdmodel interactive action p d action factory create action r1", "label return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive action p d annotation additional action r0", "$ r2 = r3 action", "r4 = org apache pdfbox pdmodel common c o s objectable r1", "$ r2 set item \\ `` bl\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel interactive annotation p d annotation file attachment r0", "$ r1 = r4 get c o s object", "$ r2 = $ r1 get dictionary object \\ `` fs\\ ``", "$ r3 = org apache pdfbox pdmodel common filespecification p d file specification create f s $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r7 = org apache pdfbox pdmodel interactive annotation p d annotation link r0", "$ r2 = r7 get c o s object", "$ r3 = org apache pdfbox co c o s name b", "r1 = $ r2 get dictionary object $ r3", "$ z0 = r1 instanceof org apache pdfbox co c o s dictionary", "if $ z0 == 0 goto label1", "r6 = new org apache pdfbox pdmodel interactive annotation p d border style dictionary", "$ r5 = org apache pdfbox co c o s dictionary r1", "specialinvoke r6 < init > $ r5", "return r6", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r6 = org apache pdfbox pdmodel interactive annotation p d annotation link r0", "$ r2 = r6 get c o s object", "r1 = $ r2 get dictionary object \\ `` pa\\ ``", "$ z0 = r1 instanceof org apache pdfbox co c o s dictionary", "if $ z0 == 0 goto label1", "r5 = new org apache pdfbox pdmodel interactive action p d action u r i", "$ r4 = org apache pdfbox co c o s dictionary r1", "specialinvoke r5 < init > $ r4", "return r5", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel interactive annotation p d annotation markup r0", "$ r1 = r4 get c o s object", "$ r2 = org apache pdfbox co c o s name t", "$ r3 = $ r1 get string $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r6 = org apache pdfbox pdmodel interactive annotation p d annotation markup r0", "$ r2 = r6 get c o s object", "r1 = $ r2 get dictionary object \\ `` ex data\\ ``", "$ z0 = r1 instanceof org apache pdfbox co c o s dictionary", "if $ z0 == 0 goto label1", "r5 = new org apache pdfbox pdmodel interactive annotation p d external data dictionary", "$ r4 = org apache pdfbox co c o s dictionary r1", "specialinvoke r5 < init > $ r4", "return r5", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new org apache pdfbox co c o s array", "specialinvoke r6 < init >", "r6 set float array r1", "r7 = org apache pdfbox pdmodel interactive annotation p d annotation text markup r0", "$ r4 = r7 get c o s object", "$ r5 = org apache pdfbox co c o s name quadpoints", "r8 = org apache pdfbox co c o s base r6", "$ r4 set item $ r5 r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel interactive annotation p d appearance characteristic dictionary r0", "$ r1 = r3 get c o s object", "$ r2 = org apache pdfbox co c o s name r", "$ i0 = $ r1 get int $ r2 0", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r7 = org apache pdfbox pdmodel interactive annotation p d appearance characteristic dictionary r0", "$ r2 = r7 get c o s object", "$ r3 = org apache pdfbox co c o s name ix", "r1 = $ r2 get dictionary object $ r3", "$ z0 = r1 instanceof org apache pdfbox co c o s stream", "if $ z0 == 0 goto label1", "r6 = new org apache pdfbox pdmodel graphic form p d form x object", "$ r5 = org apache pdfbox co c o s stream r1", "specialinvoke r6 < init > $ r5", "return r6", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel interactive annotation p d border style dictionary r0", "$ r1 = r2 get c o s object", "$ f0 = $ r1 get float \\ `` w\\", "return $ f0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r6 = null", "r8 = org apache pdfbox pdmodel interactive digitalsignature p d prop build r0", "$ r3 = r8 dictionary", "$ r2 = org apache pdfbox co c o s name filter", "$ r4 = $ r3 get dictionary object $ r2", "r1 = org apache pdfbox co c o s dictionary $ r4", "if r1 == null goto label1", "r7 = new org apache pdfbox pdmodel interactive digitalsignature p d prop build data dict", "specialinvoke r7 < init > r1", "r6 = r7", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive digitalsignature p d seed value r0", "$ r1 = r3 get c o s object", "$ r2 = org apache pdfbox co c o s name ff", "$ r1 set flag $ r2 64 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new org apache pdfbox co c o s array", "specialinvoke r10 < init >", "r3 = r1 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r8 = r3 next", "r4 = byte [ ] $ r8", "r11 = new org apache pdfbox co c o s string", "specialinvoke r11 < init > r4", "r12 = org apache pdfbox co c o s base r11", "r10 add r12", "goto label1", "if $ z0 == 0 goto label2", "label r13 = org apache pdfbox pdmodel interactive digitalsignature p d seed value certificate r0", "$ r7 = r13 dictionary", "$ r6 = org apache pdfbox co c o s name issuer", "r14 = org apache pdfbox co c o s base r10", "$ r7 set item $ r6 r14", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel interactive digitalsignature p d seed value certificate r0", "$ r2 = r4 dictionary", "$ r1 = org apache pdfbox co c o s name url", "$ r3 = $ r2 get string $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive digitalsignature p d signature r0", "$ r3 = r4 dictionary", "$ r2 = org apache pdfbox co c o s name name", "$ r3 set string $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel interactive digitalsignature p d signature r0", "$ r2 = r4 dictionary", "$ r1 = org apache pdfbox co c o s name location", "$ r3 = $ r2 get string $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new org apache pdfbox co c o s string", "specialinvoke r6 < init > r1", "r6 set force hex form 1", "r7 = org apache pdfbox pdmodel interactive digitalsignature p d signature r0", "$ r5 = r7 dictionary", "$ r4 = org apache pdfbox co c o s name content", "r8 = org apache pdfbox co c o s base r6", "$ r5 set item $ r4 r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = null", "label r8 = new org apache pdfbox pdmodel interactive digitalsignature c o s filter input stream", "r9 = org apache pdfbox pdmodel interactive digitalsignature p d signature r0", "$ r5 = r9 get byte range", "specialinvoke r8 < init > r1 $ r5", "r7 = r8", "r2 = r8 to byte array", "label if r8 == null goto label3", "r8 close", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel interactive digitalsignature signature option r0", "$ r1 = r2 visual signature", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox pdmodel interactive digitalsignature signature option r0", "$ i0 = r1 preferred signature size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel interactive digitalsignature visible p d f template structure r0", "r2 inner form resource = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel interactive digitalsignature visible p d f template structure r0", "r2 image form name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache pdfbox pdmodel interactive digitalsignature visible p d visible sig property r0", "r1 visual sign enable = z0", "r2 = org apache pdfbox pdmodel interactive digitalsignature visible p d visible sig property r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel interactive digitalsignature visible p d visible sig property r0", "$ r1 = r2 pd visible signature", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r7 = null", "r8 = org apache pdfbox pdmodel interactive documentnavigation destination p d name destination r0", "$ r1 = r8 name destination", "$ z0 = $ r1 instanceof org apache pdfbox co c o s string", "if $ z0 == 0 goto label1", "r9 = org apache pdfbox pdmodel interactive documentnavigation destination p d name destination r0", "$ r5 = r9 name destination", "$ r6 = org apache pdfbox co c o s string $ r5", "r7 = $ r6 get string", "goto label2", "label return r7", "if $ z0 == 0 goto label1", "label r10 = org apache pdfbox pdmodel interactive documentnavigation destination p d name destination r0", "$ r2 = r10 name destination", "$ z1 = $ r2 instanceof org apache pdfbox co c o s name", "if $ z1 == 0 goto label2", "r11 = org apache pdfbox pdmodel interactive documentnavigation destination p d name destination r0", "$ r3 = r11 name destination", "$ r4 = org apache pdfbox co c o s name $ r3", "r7 = $ r4 get name"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive documentnavigation destination p d page fit destination r0", "$ r1 = r4 array", "$ r1 grow to size 2", "if z0 == 0 goto label1", "r5 = org apache pdfbox pdmodel interactive documentnavigation destination p d page fit destination r0", "$ r3 = r5 array", "$ r3 set name 1 \\ `` fit b\\ ``", "goto label2", "label return", "if z0 == 0 goto label1", "label r6 = org apache pdfbox pdmodel interactive documentnavigation destination p d page fit destination r0", "$ r2 = r6 array", "$ r2 set name 1 \\ `` fit\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive documentnavigation destination p d page fit rectangle destination r0", "$ r1 = r4 array", "$ r1 grow to size 6", "if i0 ! = -1 goto label1", "r5 = org apache pdfbox pdmodel interactive documentnavigation destination p d page fit rectangle destination r0", "$ r3 = r5 array", "$ r3 set 3 null", "goto label2", "label return", "if i0 ! = -1 goto label1", "label r6 = org apache pdfbox pdmodel interactive documentnavigation destination p d page fit rectangle destination r0", "$ r2 = r6 array", "$ r2 set int 3 i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive documentnavigation destination p d page x y z destination r0", "$ r1 = r4 array", "$ r1 grow to size 3", "if i0 ! = -1 goto label1", "r5 = org apache pdfbox pdmodel interactive documentnavigation destination p d page x y z destination r0", "$ r3 = r5 array", "$ r3 set 2 null", "goto label2", "label return", "if i0 ! = -1 goto label1", "label r6 = org apache pdfbox pdmodel interactive documentnavigation destination p d page x y z destination r0", "$ r2 = r6 array", "$ r2 set int 2 i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive documentnavigation destination p d page x y z destination r0", "$ r1 = r4 array", "$ r1 grow to size 4", "if i0 ! = -1 goto label1", "r5 = org apache pdfbox pdmodel interactive documentnavigation destination p d page x y z destination r0", "$ r3 = r5 array", "$ r3 set 3 null", "goto label2", "label return", "if i0 ! = -1 goto label1", "label r6 = org apache pdfbox pdmodel interactive documentnavigation destination p d page x y z destination r0", "$ r2 = r6 array", "$ r2 set int 3 i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive documentnavigation outline p d outline item r0", "$ r1 = r3 get c o s object", "$ r2 = org apache pdfbox co c o s name f", "$ r1 set flag $ r2 2 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel interactive documentnavigation outline p d outline node r0", "r2 require single node r1", "r3 = org apache pdfbox pdmodel interactive documentnavigation outline p d outline node r0", "specialinvoke r3 prepend r1", "r4 = org apache pdfbox pdmodel interactive documentnavigation outline p d outline node r0", "r4 update parent open count for added child r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r7 = r1 get catalog", "$ r8 = $ r7 get f d f", "r2 = $ r8 get field", "if r2 == null goto label3", "r3 = r2 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r9 = r3 next", "r4 = org apache pdfbox pdmodel fdf f d f field $ r9", "$ r10 = r4 get partial field name", "r11 = org apache pdfbox pdmodel interactive form p d acro form r0", "r6 = r11 get field $ r10", "if r6 == null goto label2", "r6 import f d f r4", "label goto label1", "if $ z0 == 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel interactive form p d acro form r0", "$ r2 = r3 dictionary", "$ r1 = org apache pdfbox co c o s name sig_flags", "$ z0 = $ r2 get flag $ r1 2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache pdfbox co c o s name off", "$ r2 = $ r1 get name", "r3 = org apache pdfbox pdmodel interactive form p d check box r0", "r3 set value $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = org apache pdfbox pdmodel interactive form p d choice r0", "$ r2 = r5 get c o s object", "$ r3 = org apache pdfbox co c o s name opt", "r1 = $ r2 get dictionary object $ r3", "$ r4 = org apache pdfbox pdmodel interactive form field utils get pairable item r1 1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive form p d choice r0", "$ r1 = r3 get c o s object", "$ r2 = org apache pdfbox co c o s name ff", "$ r1 set flag $ r2 524288 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive form p d field r0", "$ r2 = r3 dictionary", "$ r1 = org apache pdfbox co c o s name ff", "$ r2 set flag $ r1 2 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive form p d text field r0", "$ r1 = r3 get c o s object", "$ r2 = org apache pdfbox co c o s name max_len", "$ r1 set int $ r2 i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel interactive measurement p d number format dictionary r0", "$ r1 = r2 get c o s object", "$ f0 = $ r1 get float \\ `` c\\ ``", "return $ f0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r2 = \\ `` d\\ ``", "$ z0 = $ r2 equal r1", "if $ z0 ! = 0 goto label1", "$ r3 = \\ `` f\\ ``", "$ z1 = $ r3 equal r1", "if $ z1 ! = 0 goto label1", "$ r4 = \\ `` r\\ ``", "$ z2 = $ r4 equal r1", "if $ z2 ! = 0 goto label1", "$ r5 = \\ `` t\\ ``", "$ z3 = $ r5 equal r1", "if $ z3 == 0 goto label2", "label r9 = org apache pdfbox pdmodel interactive measurement p d number format dictionary r0", "$ r7 = r9 get c o s object", "$ r7 set string \\ `` f\\", "goto label3", "label return", "if $ z3 == 0 goto label2", "label r8 = new java lang illegal argument exception", "specialinvoke r8 < init > \\ `` value must be \\\\\\ `` d\\\\\\", "throw r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache pdfbox pdmodel interactive measurement p d number format dictionary r0", "$ r1 = r2 get c o s object", "$ r1 set int \\ `` d\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive measurement p d number format dictionary r0", "$ r2 = r3 get c o s object", "$ r2 set string \\ `` rt\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel interactive measurement p d number format dictionary r0", "$ r1 = r3 get c o s object", "$ r2 = $ r1 get string \\ `` o\\", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = org apache pdfbox pdmodel interactive measurement p d viewport dictionary r0", "$ r2 = r7 get c o s object", "$ r3 = org apache pdfbox co c o s name bbox", "r1 = $ r2 get dictionary object $ r3", "$ z0 = r1 instanceof org apache pdfbox co c o s array", "if $ z0 == 0 goto label1", "r6 = new org apache pdfbox pdmodel common p d rectangle", "$ r5 = org apache pdfbox co c o s array r1", "specialinvoke r6 < init > $ r5", "return r6", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r5 = new org apache pdfbox pdmodel interactive pagenavigation p d thread bead", "r6 = org apache pdfbox pdmodel interactive pagenavigation p d thread bead r0", "$ r2 = r6 bead", "$ r3 = $ r2 get dictionary object \\ `` n\\ ``", "$ r4 = org apache pdfbox co c o s dictionary $ r3", "specialinvoke r5 < init > $ r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive viewerpreferences p d viewer preference r0", "$ r2 = r3 prefs", "$ r1 = org apache pdfbox co c o s name center_window", "$ r2 set boolean $ r1 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r6 = org apache pdfbox pdmodel interactive viewerpreferences p d viewer preference r0", "$ r2 = r6 prefs", "$ r3 = org apache pdfbox co c o s name non_full_screen_page_mode", "$ r1 = org apache pdfbox pdmodel interactive viewerpreferences p d viewer preference $ non_full_screen_page_mode use none", "$ r4 = $ r1 to string", "$ r5 = $ r2 get name a string $ r3 $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache pdfbox pdmodel p d document r0", "$ r2 = r3 font to close", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new java io buffer output stream", "r4 = new java io file output stream", "specialinvoke r4 < init > r1", "specialinvoke r5 < init > r4", "r6 = org apache pdfbox pdmodel p d document r0", "r6 save r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox pdmodel p d document r0", "$ z0 = r1 all security to be remove", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache pdfbox pdmodel p d document r0", "r1 all security to be remove = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = org apache pdfbox pdmodel p d document catalog r0", "$ r3 = r7 root", "$ r2 = org apache pdfbox co c o s name open_action", "r1 = $ r3 get dictionary object $ r2", "$ z0 = r1 instanceof org apache pdfbox co c o s dictionary", "if $ z0 == 0 goto label1", "$ r5 = org apache pdfbox co c o s dictionary r1", "$ r6 = org apache pdfbox pdmodel interactive action p d action factory create action $ r5", "r8 = org apache pdfbox pdmodel common p d destination or action $ r6", "return r8", "if $ z0 == 0 goto label1", "label $ z1 = r1 instanceof org apache pdfbox co c o s array", "if $ z1 == 0 goto label2", "$ r4 = org apache pdfbox pdmodel interactive documentnavigation destination p d destination create r1", "r9 = org apache pdfbox pdmodel common p d destination or action $ r4", "return r9", "if $ z1 == 0 goto label2", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel p d document catalog r0", "$ r3 = r4 root", "$ r2 = org apache pdfbox co c o s name aa", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r3 set item $ r2 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel p d document information r0", "$ r2 = r4 info", "$ r1 = org apache pdfbox co c o s name keywords", "$ r3 = $ r2 get string $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel p d document information r0", "$ r2 = r4 info", "$ r1 = org apache pdfbox co c o s name creator", "$ r3 = $ r2 get string $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "f1 = @ parameter1", "r3 = org apache pdfbox pdmodel p d page content stream r0", "$ z0 = r3 in text mode", "if $ z0 == 0 goto label1", "r2 = new java lang illegal state exception", "specialinvoke r2 < init > \\ `` error line to be not allow within a text block \\ ``", "throw r2", "if $ z0 == 0 goto label1", "label r4 = org apache pdfbox pdmodel p d page content stream r0", "r4 write operand f0", "r5 = org apache pdfbox pdmodel p d page content stream r0", "r5 write operand f1", "r6 = org apache pdfbox pdmodel p d page content stream r0", "specialinvoke r6 write operator \\ `` l\\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel p d page content stream r0", "$ z0 = r3 in text mode", "if $ z0 == 0 goto label1", "r2 = new java lang illegal state exception", "specialinvoke r2 < init > \\ `` error fill and stroke be not allow within a text block \\ ``", "throw r2", "if $ z0 == 0 goto label1", "label r4 = org apache pdfbox pdmodel p d page content stream r0", "specialinvoke r4 write operator \\ `` b\\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r5 = org apache pdfbox pdmodel p d page content stream r0", "$ z0 = r5 in text mode", "if $ z0 == 0 goto label1", "r3 = new java lang illegal state exception", "specialinvoke r3 < init > \\ `` error set miter limit be not allow within a text block \\ ``", "throw r3", "if $ z0 == 0 goto label1", "label $ d0 = double f0", "$ b0 = $ d0 cmpg 0 0", "if $ b0 > 0 goto label2", "r4 = new java lang illegal argument exception", "specialinvoke r4 < init > \\ `` a miter limit < = 0 be invalid and will not render in acrobat reader\\ ``", "throw r4", "if $ b0 > 0 goto label2", "label r6 = org apache pdfbox pdmodel p d page content stream r0", "r6 write operand f0", "r7 = org apache pdfbox pdmodel p d page content stream r0", "specialinvoke r7 write operator \\ `` m\\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache pdfbox co c o s name ext_g_state", "r3 = org apache pdfbox pdmodel p d resource r0", "$ r2 = specialinvoke r3 get names $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org apache pdfbox pdmodel graphic optionalcontent p d optional content group", "if $ z0 == 0 goto label1", "$ r4 = org apache pdfbox co c o s name property", "r6 = org apache pdfbox pdmodel p d resource r0", "r7 = org apache pdfbox pdmodel common c o s objectable r1", "$ r5 = specialinvoke r6 add $ r4 \\ `` oc\\", "return $ r5", "if $ z0 == 0 goto label1", "label $ r2 = org apache pdfbox co c o s name property", "r8 = org apache pdfbox pdmodel p d resource r0", "r9 = org apache pdfbox pdmodel common c o s objectable r1", "$ r3 = specialinvoke r8 add $ r2 \\ `` prop\\", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox render page drawer r0", "$ r1 = r2 annotation filter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox render page drawer r0", "r2 annotation filter = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox text p d f text stripper r0", "$ r2 = r4 output", "$ r3 = r1 get unicode", "$ r2 write $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache pdfbox text p d f text stripper r0", "r1 end page = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox text p d f text stripper r0", "r2 line separator = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox text p d f text stripper r0", "$ r1 = r2 start bookmark", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox text p d f text stripper r0", "$ z0 = r1 sort by position", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox text text position r0", "$ r1 = r2 text matrix", "$ f0 = $ r1 get scale factor x", "return $ f0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "f1 = @ parameter1", "r1 = org apache pdfbox util matrix get scale instance f0 f1", "r2 = org apache pdfbox util matrix r0", "r2 concatenate r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox util matrix r0", "$ r1 = r2 single", "$ f0 = $ r1 [ 7 ]", "return $ f0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = r0 size", "if i0 > = 2 goto label1", "return", "if i0 > = 2 goto label1", "label org apache pdfbox util quick sort quicksort r0 r1"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r2 = new org apache pdfbox util vector", "r3 = org apache pdfbox util vector r0", "$ f1 = r3 x", "$ f4 = $ f1 * f0", "r4 = org apache pdfbox util vector r0", "$ f2 = r4 y", "$ f3 = $ f2 * f0", "specialinvoke r2 < init > $ f4 $ f3", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r1 close", "label return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r8 = new java lang string builder", "specialinvoke r8 < init >", "$ r3 = r8 append \\ `` glob\\ ``", "$ r4 = $ r3 append r0", "r1 = $ r4 to string", "r9 = new eu solven pepper io cache path matcher", "$ r6 = java nio file file system get default", "$ r7 = $ r6 get path matcher r1", "specialinvoke r9 < init > $ r7 r1", "r10 = java nio file path matcher r9", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = eu solven pepper jvm g c inspector r0", "r1 remove notification listener", "r2 = eu solven pepper jvm g c inspector r0", "r2 execute during shutdown", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = eu solven pepper metric pepper active task monitor r0", "$ r1 = r3 pepper thread dumper", "if z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label $ r2 = $ r1 get thread dump a string $ z1", "return $ r2", "if z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org codehaus plexus log base logger manager r0", "$ i0 = r1 current threshold", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org codehaus plexus interpolation o o be os null r0 null null", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get declare class", "$ i0 = r1 get modifier", "$ i1 = $ i0 & 1", "if $ i1 == 0 goto label1", "return r0", "if $ i1 == 0 goto label1", "label $ r2 = r0 get name", "$ r3 = r0 get parameter type", "$ r4 = org codehaus plexus interpolation reflection class map get public method r1 $ r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org sonatype plexus component sec dispatcher model setting security r0", "$ r1 = r2 master", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org codehaus plexus util abstract scanner r0", "$ r2 = r3 excludes pattern", "r4 = org codehaus plexus util abstract scanner r0", "$ z0 = r4 be case sensitive", "$ z1 = $ r2 match r1 $ z0", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org codehaus plexus util cache map r0", "$ r2 = r3 _backing map", "$ r2 put all r1", "r4 = org codehaus plexus util cache map r0", "r4 flush", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r9 = new java util array list", "r10 = org codehaus plexus util dag vertex r0", "$ r5 = r10 child", "$ i0 = $ r5 size", "specialinvoke r9 < init > $ i0", "r11 = org codehaus plexus util dag vertex r0", "$ r6 = r11 child", "r2 = $ r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r7 = r2 next", "r3 = org codehaus plexus util dag vertex $ r7", "$ r8 = r3 get label", "r9 add $ r8", "goto label1", "if $ z0 == 0 goto label2", "label return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus plexus util dag vertex r0", "$ r1 = r2 parent", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus plexus util dag vertex r0", "$ r1 = r2 parent", "$ i0 = $ r1 size", "if $ i0 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return 1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org codehaus plexus util directory scanner r0", "r4 slow scan", "r5 = org codehaus plexus util directory scanner r0", "$ r2 = r5 file deselected", "$ i0 = $ r2 size", "r1 = newarray java lang string [ $ i0 ]", "r6 = org codehaus plexus util directory scanner r0", "$ r3 = r6 file deselected", "$ r3 copy into r1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org codehaus plexus util exception utils get root cause stack trace r0", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label2", "r4 = r2 [ i1 ]", "r1 println r4", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label r1 flush", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org codehaus plexus util fast map r0", "$ r2 = r5 _entries", "$ i0 = org codehaus plexus util fast map key hash r1", "r6 = org codehaus plexus util fast map r0", "$ i1 = r6 _mask", "$ i2 = $ i0 & $ i1", "r4 = $ r2 [ $ i2 ]", "label if r4 == null goto label3", "$ r3 = org codehaus plexus util fast map $ entry impl access $ 000 r4", "$ z0 = r1 equal $ r3", "if $ z0 == 0 goto label2", "r7 = java util map $ entry r4", "return r7", "if $ z0 == 0 goto label2", "label r4 = org codehaus plexus util fast map $ entry impl access $ 100 r4", "goto label1", "label if r4 == null goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "z26 = 0", "if r0 ! = null goto label01", "if r1 ! = null goto label01", "if r2 ! = null goto label01", "if r3 == null goto label30", "label z27 = 1", "z28 = 1", "z29 = 1", "z30 = 1", "if r0 == null goto label24", "$ z0 = r0 equal ignore case \\ `` windows\\ ``", "if $ z0 == 0 goto label02", "$ r31 = org codehaus plexus util os os_name", "z27 = $ r31 contain \\ `` windows\\ ``", "goto label24", "label if r1 == null goto label25", "$ r10 = java util locale u", "$ r11 = r1 to low case $ r10", "$ r12 = org codehaus plexus util os os_name", "z28 = $ r11 equal $ r12", "label if r2 == null goto label26", "$ r7 = java util locale u", "$ r8 = r2 to low case $ r7", "$ r9 = org codehaus plexus util os os_arch", "z29 = $ r8 equal $ r9", "label if r3 == null goto label27", "$ r4 = java util locale u", "$ r5 = r3 to low case $ r4", "$ r6 = org codehaus plexus util os os_version", "z30 = $ r5 equal $ r6", "label if z27 == 0 goto label28", "if z28 == 0 goto label28", "if z29 == 0 goto label28", "if z30 == 0 goto label28", "$ z35 = 1", "goto label29", "label z26 = $ z35", "label return z26", "if z30 == 0 goto label28", "label $ z35 = 0", "if $ z0 == 0 goto label02", "label $ z1 = r0 equal ignore case \\ `` os 2\\ ``", "if $ z1 == 0 goto label03", "$ r30 = org codehaus plexus util os os_name", "z27 = $ r30 contain \\ `` os 2\\ ``", "if $ z1 == 0 goto label03", "label $ z2 = r0 equal ignore case \\ `` netware\\ ``", "if $ z2 == 0 goto label04", "$ r29 = org codehaus plexus util os os_name", "z27 = $ r29 contain \\ `` netware\\ ``", "if $ z2 == 0 goto label04", "label $ z3 = r0 equal ignore case \\ `` dos\\ ``", "if $ z3 == 0 goto label07", "$ r28 = org codehaus plexus util os path_sep", "$ z22 = $ r28 equal \\ `` \\ ``", "if $ z22 == 0 goto label05", "$ z23 = org codehaus plexus util o be family \\ `` netware\\ ``", "if $ z23 ! = 0 goto label05", "$ z24 = org codehaus plexus util o be family \\ `` windows\\ ``", "if $ z24 ! = 0 goto label05", "$ z25 = org codehaus plexus util o be family \\ `` win9x\\ ``", "if $ z25 ! = 0 goto label05", "$ z31 = 1", "goto label06", "label z27 = $ z31", "if $ z25 ! = 0 goto label05", "label $ z31 = 0", "if $ z3 == 0 goto label07", "label $ z4 = r0 equal ignore case \\ `` mac\\ ``", "if $ z4 == 0 goto label08", "$ r27 = org codehaus plexus util os os_name", "z27 = $ r27 contain \\ `` mac\\ ``", "if $ z4 == 0 goto label08", "label $ z5 = r0 equal ignore case \\ `` tandem\\ ``", "if $ z5 == 0 goto label09", "$ r26 = org codehaus plexus util os os_name", "z27 = $ r26 contain \\ `` nonstop_kernel\\ ``", "if $ z5 == 0 goto label09", "label $ z6 = r0 equal ignore case \\ `` unix\\ ``", "if $ z6 == 0 goto label13", "$ r24 = org codehaus plexus util os path_sep", "$ z18 = $ r24 equal \\ `` \\ ``", "if $ z18 == 0 goto label11", "$ z19 = org codehaus plexus util o be family \\ `` openvms\\ ``", "if $ z19 ! = 0 goto label11", "$ z20 = org codehaus plexus util o be family \\ `` mac\\ ``", "if $ z20 == 0 goto label10", "$ r25 = org codehaus plexus util os os_name", "$ z21 = $ r25 end with \\ `` x\\ ``", "if $ z21 == 0 goto label11", "label $ z32 = 1", "goto label12", "label z27 = $ z32", "if $ z21 == 0 goto label11", "label $ z32 = 0", "if $ z6 == 0 goto label13", "label $ z7 = r0 equal ignore case \\ `` win9x\\ ``", "if $ z7 == 0 goto label17", "$ z13 = org codehaus plexus util o be family \\ `` windows\\ ``", "if $ z13 == 0 goto label15", "$ r20 = org codehaus plexus util os os_name", "$ z14 = $ r20 contain \\ `` 95\\ ``", "if $ z14 ! = 0 goto label14", "$ r21 = org codehaus plexus util os os_name", "$ z15 = $ r21 contain \\ `` 98\\ ``", "if $ z15 ! = 0 goto label14", "$ r22 = org codehaus plexus util os os_name", "$ z16 = $ r22 contain \\ `` me\\ ``", "if $ z16 ! = 0 goto label14", "$ r23 = org codehaus plexus util os os_name", "$ z17 = $ r23 contain \\ `` ce\\ ``", "if $ z17 == 0 goto label15", "label $ z33 = 1", "goto label16", "label z27 = $ z33", "if $ z17 == 0 goto label15", "label $ z33 = 0", "if $ z7 == 0 goto label17", "label $ z8 = r0 equal ignore case \\ `` z os\\ ``", "if $ z8 == 0 goto label21", "$ r18 = org codehaus plexus util os os_name", "$ z11 = $ r18 contain \\ `` z os\\ ``", "if $ z11 ! = 0 goto label18", "$ r19 = org codehaus plexus util os os_name", "$ z12 = $ r19 contain \\ `` os 390\\ ``", "if $ z12 == 0 goto label19", "label $ z34 = 1", "goto label20", "label z27 = $ z34", "if $ z12 == 0 goto label19", "label $ z34 = 0", "if $ z8 == 0 goto label21", "label $ z9 = r0 equal ignore case \\ `` os 400\\ ``", "if $ z9 == 0 goto label22", "$ r17 = org codehaus plexus util os os_name", "z27 = $ r17 contain \\ `` os 400\\ ``", "if $ z9 == 0 goto label22", "label $ z10 = r0 equal ignore case \\ `` openvms\\ ``", "if $ z10 == 0 goto label23", "$ r16 = org codehaus plexus util os os_name", "z27 = $ r16 contain \\ `` openvms\\ ``", "if $ z10 == 0 goto label23", "label $ r14 = org codehaus plexus util os os_name", "$ r13 = java util locale u", "$ r15 = r0 to low case $ r13", "z27 = $ r14 contain $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [110], [111], [112], [113], [114], [115], [116], [117], [], [119], [120], [121], [122], [123], [124], [125], [126], [127], [128], [129], [130], [131], [], [133], [134], [135], [136], [137], [138], [139], [140], [141], [142], [143], [144], [145], [146], [147], [148], [149], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = r0 length", "if $ i0 ! = 0 goto label2", "label return \\ `` \\ ``", "if $ i0 ! = 0 goto label2", "label r1 = org codehaus plexus util path tool determine separator r0", "r2 = org codehaus plexus util string utils chomp r0 r1", "$ z0 = r0 equal r2", "if $ z0 == 0 goto label3", "return \\ `` \\ ``", "if $ z0 == 0 goto label3", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "$ z0 = r0 exist", "if $ z0 ! = 0 goto label1", "return 0", "if $ z0 ! = 0 goto label1", "label $ z1 = r1 exist", "if $ z1 ! = 0 goto label2", "return 1", "if $ z1 ! = 0 goto label2", "label $ l1 = r0 last modified", "$ l2 = long i0", "$ l3 = $ l1 - $ l2", "$ l4 = r1 last modified", "$ b5 = $ l3 cmp $ l4", "if $ b5 < = 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus plexus util cli commandline r0", "$ r1 = r2 create argument 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r29 = org codehaus plexus util directory scanner r0", "$ z0 = r29 have slow result", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label r30 = org codehaus plexus util directory scanner r0", "$ r3 = r30 dirs exclude", "$ i0 = $ r3 size", "r1 = newarray java lang string [ $ i0 ]", "r31 = org codehaus plexus util directory scanner r0", "$ r4 = r31 dirs exclude", "$ r4 copy into r1", "r32 = org codehaus plexus util directory scanner r0", "$ r5 = r32 dirs not include", "$ i1 = $ r5 size", "r2 = newarray java lang string [ $ i1 ]", "r33 = org codehaus plexus util directory scanner r0", "$ r6 = r33 dirs not include", "$ r6 copy into r2", "i2 = lengthof r1", "i3 = 0", "label if i3 > = i2 goto label4", "r22 = r1 [ i3 ]", "r34 = org codehaus plexus util directory scanner r0", "$ z2 = r34 could hold included r22", "if $ z2 ! = 0 goto label3", "r25 = new java io file", "r35 = org codehaus plexus util directory scanner r0", "$ r15 = r35 basedir", "specialinvoke r25 < init > $ r15 r22", "r26 = new java lang string builder", "specialinvoke r26 < init >", "$ r17 = r26 append r22", "$ r18 = java io file separator", "$ r19 = $ r17 append $ r18", "$ r20 = $ r19 to string", "r36 = org codehaus plexus util directory scanner r0", "r36 scandir r25 $ r20 0", "label i3 = i3 + 1", "goto label2", "label if i3 > = i2 goto label4", "label i4 = lengthof r2", "i5 = 0", "label if i5 > = i4 goto label7", "r24 = r2 [ i5 ]", "r37 = org codehaus plexus util directory scanner r0", "$ z1 = r37 could hold included r24", "if $ z1 ! = 0 goto label6", "r27 = new java io file", "r38 = org codehaus plexus util directory scanner r0", "$ r8 = r38 basedir", "specialinvoke r27 < init > $ r8 r24", "r28 = new java lang string builder", "specialinvoke r28 < init >", "$ r10 = r28 append r24", "$ r11 = java io file separator", "$ r12 = $ r10 append $ r11", "$ r13 = $ r12 to string", "r39 = org codehaus plexus util directory scanner r0", "r39 scandir r27 $ r13 0", "label i5 = i5 + 1", "goto label5", "label if i5 > = i4 goto label7", "label r40 = org codehaus plexus util directory scanner r0", "r40 have slow result = 1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [], [64], [65], []]}
{"nodes": ["b0 = @ parameter0", "$ b1 = b0 > > > 4", "$ r0 = org apache poi common usermodel font font family value of $ b1", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi ddf escher client anchor record r0", "$ s0 = r1 field_2_col1", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r2 = org apache poi ddf escher dgg record r0", "$ r1 = r2 add cluster i0 i1 1", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "return 6"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org apache poi ddf escher record r0", "$ i0 = r3 fill field r1 0 r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ l2 = long i1", "$ r2 = org apache poi util i o utils safely allocate $ l2 100000", "r4 = org apache poi ddf escher textbox record r0", "r4 thedata = $ r2", "r5 = org apache poi ddf escher textbox record r0", "$ r3 = r5 thedata", "java lang system arraycopy r1 i0 $ r3 0 i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["$ r0 = org apache poi extractor o l e2 extractor factory thread prefer event extractor", "$ r1 = $ r0 get", "$ r2 = java lang boolean $ r1", "$ z0 = $ r2 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["z0 = @ parameter0", "$ r0 = org apache poi extractor o l e2 extractor factory thread prefer event extractor", "$ r1 = java lang boolean value of z0", "$ r0 set $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r12 = org apache poi hpsf class i d r0", "$ r2 = r12 bytes", "$ i1 = 3 + i0", "$ b2 = r1 [ $ i1 ]", "$ r2 [ 0 ] = $ b2", "r13 = org apache poi hpsf class i d r0", "$ r3 = r13 bytes", "$ i3 = 2 + i0", "$ b4 = r1 [ $ i3 ]", "$ r3 [ 1 ] = $ b4", "r14 = org apache poi hpsf class i d r0", "$ r4 = r14 bytes", "$ i5 = 1 + i0", "$ b6 = r1 [ $ i5 ]", "$ r4 [ 2 ] = $ b6", "r15 = org apache poi hpsf class i d r0", "$ r5 = r15 bytes", "$ i7 = 0 + i0", "$ b8 = r1 [ $ i7 ]", "$ r5 [ 3 ] = $ b8", "r16 = org apache poi hpsf class i d r0", "$ r6 = r16 bytes", "$ i9 = 5 + i0", "$ b10 = r1 [ $ i9 ]", "$ r6 [ 4 ] = $ b10", "r17 = org apache poi hpsf class i d r0", "$ r7 = r17 bytes", "$ i11 = 4 + i0", "$ b12 = r1 [ $ i11 ]", "$ r7 [ 5 ] = $ b12", "r18 = org apache poi hpsf class i d r0", "$ r8 = r18 bytes", "$ i13 = 7 + i0", "$ b14 = r1 [ $ i13 ]", "$ r8 [ 6 ] = $ b14", "r19 = org apache poi hpsf class i d r0", "$ r9 = r19 bytes", "$ i15 = 6 + i0", "$ b16 = r1 [ $ i15 ]", "$ r9 [ 7 ] = $ b16", "$ i17 = 8 + i0", "r20 = org apache poi hpsf class i d r0", "$ r10 = r20 bytes", "java lang system arraycopy r1 $ i17 $ r10 8 8", "r21 = org apache poi hpsf class i d r0", "$ r11 = r21 bytes", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hpsf document summary information r0", "r1 set1st property 10l i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi hpsf document summary information r0", "specialinvoke r2 not yet implement \\ `` write byte arrays\\ ``", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hpsf document summary information r0", "r1 remove1st property 13l", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hpsf document summary information r0", "r1 remove1st property 16l", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi hpsf document summary information r0", "r2 set1st property 27l r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi hpsf h p s f property only document r0", "$ r2 = r3 get directory", "r1 = $ r2 get file system", "r4 = org apache poi hpsf h p s f property only document r0", "r4 validate in place write possible", "r5 = org apache poi hpsf h p s f property only document r0", "r5 write property r1 null", "r1 write filesystem", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r9 = org apache poi hpsf section r0", "$ r1 = r9 property", "$ r2 = java lang long value of l0", "$ z0 = $ r1 contain key $ r2", "if $ z0 ! = 0 goto label1", "$ z2 = 1", "goto label2", "label r10 = org apache poi hpsf section r0", "r10 be null = $ z2", "r11 = org apache poi hpsf section r0", "$ z1 = r11 be null", "if $ z1 == 0 goto label3", "$ r8 = null", "goto label4", "label return $ r8", "if $ z1 == 0 goto label3", "label r12 = org apache poi hpsf section r0", "$ r3 = r12 property", "$ r4 = java lang long value of l0", "$ r5 = $ r3 get $ r4", "$ r6 = org apache poi hpsf property $ r5", "$ r8 = $ r6 get value", "if $ z0 ! = 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hpsf summary information r0", "r1 remove1st property 3l", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache poi hpsf summary information r0", "$ r2 = r3 get first section", "$ r2 set property 11 64l r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hpsf summary information r0", "r1 remove1st property 17l", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hpsf property r0", "$ l0 = r2 get i d", "$ b1 = $ l0 cmp 0l", "if $ b1 ! = 0 goto label1", "return \\ `` dictionary\\ ``", "if $ b1 ! = 0 goto label1", "label r3 = org apache poi hpsf property r0", "$ l2 = r3 get type", "$ r1 = org apache poi hpsf variant get variant name $ l2", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org apache poi hpsf wellknown property i d map get summary information property", "r2 = org apache poi hpsf wellknown property i d map get document summary information property", "$ r4 = java lang system out", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r5 = $ r3 append \\ `` s \\ ``", "$ r6 = $ r5 append r1", "$ r7 = $ r6 to string", "$ r4 println $ r7", "$ r9 = java lang system out", "$ r8 = new java lang string builder", "specialinvoke $ r8 < init >", "$ r10 = $ r8 append \\ `` s \\ ``", "$ r11 = $ r10 append r2", "$ r12 = $ r11 to string", "$ r9 println $ r12", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = new java lang illegal state exception", "specialinvoke $ r1 < init > \\ `` comment extraction not support in stream mode please use excel extractor\\ ``", "throw $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache poi hssf extractor event base excel extractor r0", "r1 _include sheet name = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi hssf model draw manager2 r0", "$ r2 = r3 dgg", "r4 = org apache poi hssf model draw manager2 r0", "$ r1 = r4 dgg", "$ i0 = $ r1 get drawing save", "$ i1 = $ i0 + 1", "$ r2 set drawing save $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi hssf model internal sheet r0", "$ r1 = r3 _selection", "if $ r1 ! = null goto label1", "return 0", "if $ r1 ! = null goto label1", "label r4 = org apache poi hssf model internal sheet r0", "$ r2 = r4 _selection", "$ i0 = $ r2 get active cell row", "return $ i0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r4 = org apache poi hssf model internal sheet r0", "i1 = r4 find first record loc by sid s0", "if i1 > = 0 goto label1", "return null", "if i1 > = 0 goto label1", "label r5 = org apache poi hssf model internal sheet r0", "$ r1 = r5 _records", "$ r2 = $ r1 get i1", "$ r3 = org apache poi hssf record record $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi hssf model internal sheet r0", "r2 print header = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache poi hssf model internal sheet r0", "$ r1 = r2 window two", "$ r1 set display row col heading z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r3 = org apache poi hssf record abstract escher holder record r0", "$ r1 = r3 get escher record", "r4 = org apache poi hssf record abstract escher holder record r0", "$ r2 = specialinvoke r4 find first with id s0 $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record blank record r0", "$ i0 = r1 field_1_row", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hssf record b o f record r0", "r1 field_6_rversion = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record cf border format bord top line style", "r2 = org apache poi hssf record cf border format r0", "$ i0 = r2 field_13_border_styles1", "$ i1 = $ r1 get value $ i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record cf border format bord diag line color", "r2 = org apache poi hssf record cf border format r0", "$ i0 = r2 field_14_border_styles2", "$ i1 = $ r1 get value $ i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record cf font format r0", "$ s0 = specialinvoke r1 get short 76", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org apache poi hssf record c f rule12 record parse formula r1 r0", "$ r3 = new org apache poi hssf record c f rule12 record", "specialinvoke $ r3 < init > 2 0 r2 null null", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = newarray org apache poi hssf record common extend color [ 3 ]", "r2 = newarray org apache poi hssf record cf color gradient threshold [ 3 ]", "i2 = 0", "label $ i1 = lengthof r2", "if i2 > = $ i1 goto label2", "$ r5 = new org apache poi hssf record cf color gradient threshold", "specialinvoke $ r5 < init >", "r2 [ i2 ] = $ r5", "$ r6 = new org apache poi hssf record common extend color", "specialinvoke $ r6 < init >", "r1 [ i2 ] = $ r6", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label $ r4 = new org apache poi hssf record c f rule12 record", "specialinvoke $ r4 < init > 3 0", "r3 = $ r4 create color gradient format", "r3 set num control point 3", "r3 set threshold r2", "r3 set color r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart area format record r0", "$ s0 = r1 field_4_format flag", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart area record r0", "r1 field_1_format flag = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record chart area record stack", "r2 = org apache poi hssf record chart area record r0", "$ s0 = r2 field_1_format flag", "$ z0 = $ r1 be set $ s0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record chart axis option record be date", "r2 = org apache poi hssf record chart axis option record r0", "$ s0 = r2 field_9_options", "$ z0 = $ r1 be set $ s0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart axis use record r0", "r1 field_1_num axis = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart category series axis record r0", "r1 field_2_label frequency = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart category series axis record r0", "r1 field_3_tick mark frequency = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart chart record r0", "$ i0 = r1 field_4_height", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart dat record r0", "$ s0 = r1 field_1_options", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record chart dat record horizontal border", "r2 = org apache poi hssf record chart dat record r0", "$ s0 = r2 field_1_options", "$ z0 = $ r1 be set $ s0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart font index record r0", "r1 field_1_font index = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org apache poi hssf record chart frame record auto size", "r2 = org apache poi hssf record chart frame record r0", "$ s0 = r2 field_2_options", "$ s1 = $ r1 set short boolean $ s0 z0", "r3 = org apache poi hssf record chart frame record r0", "r3 field_2_options = $ s1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hssf record chart legend record r0", "r1 field_2_y axis upper leave = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hssf record chart legend record r0", "r1 field_4_y size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart legend record r0", "$ b0 = r1 field_6_spacing", "return $ b0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record chart line format record unknown", "r2 = org apache poi hssf record chart line format record r0", "$ s0 = r2 field_4_format", "$ z0 = $ r1 be set $ s0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record chart link data record custom number format", "r2 = org apache poi hssf record chart link data record r0", "$ s0 = r2 field_3_options", "$ z0 = $ r1 be set $ s0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart object link record r0", "$ s0 = r1 field_2_link1", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart object link record r0", "r1 field_3_link2 = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart plot growth record r0", "$ i0 = r1 field_1_horizontal scale", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart series label record r0", "r1 field_1_format flag = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org apache poi hssf record chart series label record show label", "r2 = org apache poi hssf record chart series label record r0", "$ s0 = r2 field_1_format flag", "$ s1 = $ r1 set short boolean $ s0 z0", "r3 = org apache poi hssf record chart series label record r0", "r3 field_1_format flag = $ s1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart series record r0", "r1 field_6_num bubble value = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hssf record chart series text record r0", "r1 field_1_id = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 length", "if $ i0 < = 255 goto label1", "r11 = new java lang illegal argument exception", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r4 = r10 append \\ `` text be too long \\ ``", "$ i1 = r1 length", "$ r5 = $ r4 append $ i1", "$ r6 = $ r5 append \\ `` > \\ ``", "$ r7 = $ r6 append 255", "$ r8 = $ r7 append \\ `` \\ ``", "$ r9 = $ r8 to string", "specialinvoke r11 < init > $ r9", "throw r11", "if $ i0 < = 255 goto label1", "label r12 = org apache poi hssf record chart series text record r0", "r12 field_4_text = r1", "$ z0 = org apache poi util string util have multibyte r1", "r13 = org apache poi hssf record chart series text record r0", "r13 is16bit = $ z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart series to chart group record r0", "$ s0 = r1 field_1_chart group index", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "r1 = org apache poi hssf record chart text record r0", "r1 field_2_vertical alignment = b0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart text record r0", "$ i0 = r1 field_4_rgb color", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hssf record chart text record r0", "r1 field_8_height = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record chart text record show value", "r2 = org apache poi hssf record chart text record r0", "$ s0 = r2 field_9_options1", "$ z0 = $ r1 be set $ s0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "r1 = org apache poi hssf record chart tick record r0", "r1 field_2_minor tick type = b0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart tick record r0", "$ b0 = r1 field_4_background", "return $ b0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record chart tick record rotation", "r2 = org apache poi hssf record chart tick record r0", "$ s0 = r2 field_10_options", "$ s1 = $ r1 get short value $ s0", "return $ s1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = org apache poi hssf record chart value range record r0", "r1 field_4_minor increment = d0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record chart value range record logarithmic scale", "r2 = org apache poi hssf record chart value range record r0", "$ s0 = r2 field_6_options", "$ z0 = $ r1 be set $ s0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org apache poi hssf record chart value range record value in reverse", "r2 = org apache poi hssf record chart value range record r0", "$ s0 = r2 field_6_options", "$ s1 = $ r1 set short boolean $ s0 z0", "r3 = org apache poi hssf record chart value range record r0", "r3 field_6_options = $ s1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record common object data sub record r0", "r1 field_1_object type = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org apache poi hssf record common object data sub record printable", "r2 = org apache poi hssf record common object data sub record r0", "$ s0 = r2 field_3_option", "$ s1 = $ r1 set short boolean $ s0 z0", "r3 = org apache poi hssf record common object data sub record r0", "r3 field_3_option = $ s1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record common object data sub record printable", "r2 = org apache poi hssf record common object data sub record r0", "$ s0 = r2 field_3_option", "$ z0 = $ r1 be set $ s0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record draw group record r0", "r1 convert raw byte to escher record", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hssf record d v a l record r0", "r1 field_5_dv_no = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hssf record d v record r0", "$ r1 = r2 clone", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r25 = new java lang string builder", "specialinvoke r25 < init >", "$ r6 = r25 append r1", "$ r7 = $ r6 append \\ `` < \\ ``", "r27 = org apache poi hssf record escher aggregate r0", "$ r8 = r27 get record name", "$ r9 = $ r7 append $ r8", "$ r9 append \\ `` > \\n\\ ``", "r28 = org apache poi hssf record escher aggregate r0", "$ r11 = r28 get escher record", "r3 = $ r11 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r18 = r3 next", "r4 = org apache poi ddf escher record $ r18", "r26 = new java lang string builder", "specialinvoke r26 < init >", "$ r20 = r26 append r1", "$ r21 = $ r20 append \\ `` \\t\\ ``", "$ r22 = $ r21 to string", "$ r23 = r4 to xml $ r22", "r25 append $ r23", "goto label1", "if $ z0 == 0 goto label2", "label $ r12 = r25 append r1", "$ r13 = $ r12 append \\ `` < \\ ``", "r29 = org apache poi hssf record escher aggregate r0", "$ r14 = r29 get record name", "$ r15 = $ r13 append $ r14", "$ r15 append \\ `` > \\n\\ ``", "$ r17 = r25 to string", "return $ r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache poi hssf record escher aggregate r0", "$ r2 = r5 tail rec", "$ i0 = r1 get shape id", "$ r3 = java lang integer value of $ i0", "$ r2 remove $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record external name record r0", "$ s0 = r1 field_1_option_flag", "$ s1 = $ s0 & 4", "if $ s1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ s1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache poi hssf record extern sheet record r0", "$ r1 = specialinvoke r2 get ref i0", "$ i1 = $ r1 get first sheet index", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org apache poi hssf record font record italic", "r2 = org apache poi hssf record font record r0", "$ s0 = r2 field_2_attributes", "$ s1 = $ r1 set short boolean $ s0 z0", "r3 = org apache poi hssf record font record r0", "r3 field_2_attributes = $ s1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache poi hssf record hyperlink record r0", "$ r1 = r2 _range", "$ r1 set first row i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = new org apache poi s util cell range address", "specialinvoke r4 < init > 0 0 0 0", "r5 = org apache poi hssf record hyperlink record r0", "r5 _range = r4", "$ r2 = org apache poi hssf record hyperlink record std_moniker", "r6 = org apache poi hssf record hyperlink record r0", "r6 _guid = $ r2", "r7 = org apache poi hssf record hyperlink record r0", "r7 _link opts = 28", "r8 = org apache poi hssf record hyperlink record r0", "r8 set label \\ `` \\ ``", "$ r3 = org apache poi hssf record hyperlink record file_moniker", "r9 = org apache poi hssf record hyperlink record r0", "r9 _moniker = $ r3", "r10 = org apache poi hssf record hyperlink record r0", "r10 set address \\ `` \\ ``", "r11 = org apache poi hssf record hyperlink record r0", "r11 set text mark \\ `` \\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi hssf record name comment record r0", "r2 field_6_name_text = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi hssf record name record r0", "r2 field_15_description_text = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record name record r0", "$ s0 = r1 field_1_option_flag", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "r1 = org apache poi hssf record name record r0", "$ s3 = r1 field_1_option_flag", "$ s4 = $ s3 | 2", "$ s5 = short $ s4", "r2 = org apache poi hssf record name record r0", "r2 field_1_option_flag = $ s5", "goto label2", "label return", "if z0 == 0 goto label1", "label r3 = org apache poi hssf record name record r0", "$ s0 = r3 field_1_option_flag", "$ s1 = $ s0 & -3", "$ s2 = short $ s1", "r4 = org apache poi hssf record name record r0", "r4 field_1_option_flag = $ s2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hssf record note record r0", "r1 field_2_col = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record pane record r0", "$ s0 = r1 field_2_y", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record protection rev4 record protect flag", "r2 = org apache poi hssf record protection rev4 record r0", "$ i0 = r2 _options", "$ z0 = $ r1 be set $ i0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i0 = @ parameter0", "$ r1 = org apache poi hssf record record factory _record creator by id", "$ r2 = java lang integer value of i0", "$ r3 = $ r1 get $ r2", "r0 = org apache poi hssf record record factory $ i_ record creator $ r3", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r4 = r0 get record class", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record right margin record r0", "$ d0 = r1 field_1_margin", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hssf record row record r0", "r1 field_2_first_col = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record row record r0", "r1 field_4_height = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org apache poi hssf record row record phoenetic guide", "r2 = org apache poi hssf record row record r0", "$ i0 = r2 field_8_option_flags", "$ i1 = $ r1 set boolean $ i0 z0", "r3 = org apache poi hssf record row record r0", "r3 field_8_option_flags = $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record row record colapsed", "r2 = org apache poi hssf record row record r0", "$ i0 = r2 field_7_option_flags", "$ z0 = $ r1 be set $ i0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hssf record window one record r0", "r1 field_7_first_visible_tab = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf usermodel h s s f cell style r0", "$ s0 = r1 _index", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache poi hssf usermodel h s s f cell style r0", "$ r1 = r2 _format", "$ r1 set123 prefix z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache poi hssf usermodel h s s f cell style r0", "$ r1 = r2 _format", "$ r1 set shrink to fit z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get workbook", "r6 = org apache poi hssf usermodel h s s f cell style r0", "$ r3 = r6 _workbook", "if $ r2 == $ r3 goto label1", "r5 = new java lang illegal argument exception", "specialinvoke r5 < init > \\ `` this style do not belong to the supply workbook be you try to assign a style from one workbook to the cell of a differnt workbook ? \\ ``", "throw r5", "if $ r2 == $ r3 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache poi hssf usermodel h s s f client anchor r0", "$ r2 = r3 _escher client anchor", "$ s0 = r1 value", "$ r2 set flag $ s0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf usermodel h s s f font r0", "$ i0 = r1 index", "$ s1 = short $ i0", "return $ s1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hssf usermodel h s s f font r0", "$ r1 = r2 font", "b0 = $ r1 get charset", "if b0 < 0 goto label1", "return b0", "if b0 < 0 goto label1", "label $ i1 = b0 + 256", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "r2 = org apache poi hssf usermodel h s s f font r0", "$ r1 = r2 font", "$ r1 set charset b0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r7 = org apache poi hssf usermodel h s s f picture r0", "$ r2 = r7 get opt record", "$ r3 = $ r2 lookup 261", "r1 = org apache poi ddf escher complex property $ r3", "if null ! = r1 goto label1", "$ r6 = \\ `` \\ ``", "goto label2", "label return $ r6", "if null ! = r1 goto label1", "label $ r4 = r1 get complex data", "$ r5 = org apache poi util string util get from unicode l e $ r4", "$ r6 = $ r5 trim"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r7 = new org apache poi hssf record obj record", "specialinvoke r7 < init >", "r8 = new org apache poi hssf record common object data sub record", "specialinvoke r8 < init >", "r8 set object type 30", "r8 set lock 1", "r8 set printable 1", "r8 set autofill 1", "r8 set autoline 1", "r9 = new org apache poi hssf record end sub record", "specialinvoke r9 < init >", "r10 = org apache poi hssf record sub record r8", "r7 add sub record r10", "r11 = org apache poi hssf record sub record r9", "r7 add sub record r11", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hssf usermodel h s s f print setup r0", "$ r1 = r2 print setup record", "$ s0 = $ r1 get fit height", "return $ s0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache poi hssf usermodel h s s f rich text string r0", "$ r2 = r3 _string", "r1 = $ r2 get format run i0", "$ s1 = r1 get font index", "return $ s1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = r1 get c f record aggregate", "r2 = $ r3 clone c f aggregate", "r5 = org apache poi hssf usermodel h s s f sheet conditional formatting r0", "$ r4 = r5 _conditional formatting table", "$ i0 = $ r4 add r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = org apache poi hssf usermodel h s s f textbox r0", "$ r2 = r4 get opt record", "$ r3 = $ r2 lookup 132", "r1 = org apache poi ddf escher simple property $ r3", "if r1 ! = null goto label1", "$ i0 = 0", "goto label2", "label return $ i0", "if r1 ! = null goto label1", "label $ i0 = r1 get property value"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = new org apache poi ddf escher simple property", "specialinvoke r2 < init > 132 i0", "r3 = org apache poi hssf usermodel h s s f textbox r0", "r4 = org apache poi ddf escher property r2", "r3 set property value r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi p o i document r0", "$ z0 = r2 initialize", "if $ z0 ! = 0 goto label1", "r3 = org apache poi p o i document r0", "r3 read property", "label r4 = org apache poi p o i document r0", "$ r1 = r4 d inf", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi p o i document r0", "$ z0 = r2 initialize", "if $ z0 ! = 0 goto label1", "r3 = org apache poi p o i document r0", "r3 read property", "label r4 = org apache poi p o i document r0", "$ r1 = r4 s inf", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = new org apache poi poifs filesystem p o i f s file system", "specialinvoke r13 < init > r1 1", "r10 = null", "label r14 = org apache poi poifs eventfilesystem p o i f s reader r0", "r14 read r13", "label if r13 == null goto label12", "goto label03", "label r13 close", "goto label12", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r5 = new java lang null pointer exception", "specialinvoke r5 < init >", "throw r5", "if r1 ! = null goto label1", "label r7 = org apache poi poifs eventfilesystem p o i f s reader r0", "$ z0 = r7 registry close", "if $ z0 == 0 goto label2", "r6 = new java lang illegal state exception", "specialinvoke r6 < init >", "throw r6", "if $ z0 == 0 goto label2", "label r8 = org apache poi poifs eventfilesystem p o i f s reader r0", "$ r2 = r8 registry", "$ r2 register listener r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi poifs filesystem directory node r0", "$ r1 = r3 get property", "$ r2 = $ r1 get storage clsid", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = org apache poi poifs filesystem p o i f s file system r0", "$ r1 = r7 _root", "if $ r1 ! = null goto label1", "r6 = new org apache poi poifs filesystem directory node", "r8 = org apache poi poifs filesystem p o i f s file system r0", "$ r4 = r8 _property_table", "$ r5 = $ r4 get root", "r9 = org apache poi poifs property directory property $ r5", "r10 = org apache poi poifs filesystem p o i f s file system r0", "specialinvoke r6 < init > r9 r10 null", "r11 = org apache poi poifs filesystem p o i f s file system r0", "r11 _root = r6", "label r12 = org apache poi poifs filesystem p o i f s file system r0", "$ r2 = r12 _root", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "if $ i0 ! = 0 goto label1", "$ r8 = java lang system err", "$ r8 println \\ `` use\\ ``", "$ r9 = java lang system err", "$ r9 println \\ `` v b a macro extractor < office doc > [ output ] \\ ``", "$ r10 = java lang system err", "$ r10 println \\ `` \\ ``", "$ r11 = java lang system err", "$ r11 println \\ `` if an output directory be give macro be write there\\ ``", "$ r12 = java lang system err", "$ r12 println \\ `` otherwise they be output to the screen\\ ``", "java lang system exit 1", "label $ r3 = new java io file", "$ r4 = r0 [ 0 ]", "specialinvoke $ r3 < init > $ r4", "r13 = null", "$ i1 = lengthof r0", "if $ i1 < = 1 goto label2", "$ r6 = new java io file", "$ r7 = r0 [ 1 ]", "specialinvoke $ r6 < init > $ r7", "r13 = $ r6", "label $ r5 = new org apache poi poifs macro v b a macro extractor", "specialinvoke $ r5 < init >", "$ r5 extract $ r3 r13", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org apache poi poifs macro v b a macro extractor r0", "r3 extract r1 r2 \\ `` vba\\ ``", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r24 = org apache poi poifs property directory property r0", "$ r2 = r24 _children", "$ i1 = $ r2 size", "if $ i1 < = 0 goto label7", "r25 = org apache poi poifs property directory property r0", "$ r4 = r25 _children", "$ r3 = newarray org apache poi poifs property property [ 0 ]", "$ r5 = $ r4 to array $ r3", "r1 = org apache poi poifs property property [ ] $ r5", "r23 = new org apache poi poifs property directory property $ property comparator", "specialinvoke r23 < init >", "r26 = java util comparator r23", "java util array sort r1 r26", "$ i2 = lengthof r1", "i0 = $ i2 2", "$ r7 = r1 [ i0 ]", "$ i3 = $ r7 get index", "r27 = org apache poi poifs property directory property r0", "r27 set child property $ i3", "$ r8 = r1 [ 0 ]", "$ r8 set previous child null", "$ r9 = r1 [ 0 ]", "$ r9 set next child null", "i16 = 1", "label if i16 > = i0 goto label2", "$ r21 = r1 [ i16 ]", "$ i15 = i16 - 1", "$ r20 = r1 [ $ i15 ]", "r28 = org apache poi poifs property child $ r20", "$ r21 set previous child r28", "$ r22 = r1 [ i16 ]", "$ r22 set next child null", "i16 = i16 + 1", "goto label1", "label if i16 > = i0 goto label2", "label if i0 == 0 goto label3", "$ r19 = r1 [ i0 ]", "$ i14 = i0 - 1", "$ r18 = r1 [ $ i14 ]", "r29 = org apache poi poifs property child $ r18", "$ r19 set previous child r29", "label $ i4 = lengthof r1", "$ i5 = $ i4 - 1", "if i0 == $ i5 goto label6", "$ r12 = r1 [ i0 ]", "$ i6 = i0 + 1", "$ r11 = r1 [ $ i6 ]", "r30 = org apache poi poifs property child $ r11", "$ r12 set next child r30", "i17 = i0 + 1", "label $ i7 = lengthof r1", "$ i8 = $ i7 - 1", "if i17 > = $ i8 goto label5", "$ r15 = r1 [ i17 ]", "$ r15 set previous child null", "$ r17 = r1 [ i17 ]", "$ i13 = i17 + 1", "$ r16 = r1 [ $ i13 ]", "r31 = org apache poi poifs property child $ r16", "$ r17 set next child r31", "i17 = i17 + 1", "goto label4", "if i17 > = $ i8 goto label5", "label $ i9 = lengthof r1", "$ i10 = $ i9 - 1", "$ r13 = r1 [ $ i10 ]", "$ r13 set previous child null", "$ i11 = lengthof r1", "$ i12 = $ i11 - 1", "$ r14 = r1 [ $ i12 ]", "$ r14 set next child null", "goto label7", "label return", "if i0 == $ i5 goto label6", "label $ r10 = r1 [ i0 ]", "$ r10 set next child null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [], [64], [65], [66], [67], [68], [69], [70], [71], [72], [], [74], [75], [76], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi poifs property property r0", "$ r1 = r2 _name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi poifs storage header block r0", "r1 _xbat_start = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi sl draw bind c t adj point2 d r0", "r2 x = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi sl draw bind c t color r0", "r2 sys clr = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache poi sl draw bind c t connection r0", "r1 idx = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi sl draw bind c t embed w a v audio file r0", "r2 embed = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi sl draw bind c t geom rect r0", "r2 t = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi sl draw bind c t geom rect r0", "r2 r = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi sl draw bind c t group transform2 d r0", "$ r1 = r2 off", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi sl draw bind c t hyperlink r0", "r2 tooltip = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = java lang boolean value of z0", "r2 = org apache poi sl draw bind c t hyperlink r0", "r2 history = $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi sl draw bind c t office art extension r0", "$ r1 = r2 any", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi sl draw bind c t path2 d r0", "$ r1 = r3 w", "if $ r1 ! = null goto label1", "return 0l", "if $ r1 ! = null goto label1", "label r4 = org apache poi sl draw bind c t path2 d r0", "$ r2 = r4 w", "$ l0 = $ r2 long value", "return $ l0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = java lang boolean value of z0", "r2 = org apache poi sl draw bind c t path2 d r0", "r2 stroke = $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi sl draw bind c t path2 d arc to r0", "$ r1 = r2 sw ang", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi sl draw bind c t ratio r0", "$ l0 = r1 d", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi sl draw bind c t sc rgb color r0", "r1 g = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi sl draw bind c t sphere coords r0", "r1 lon = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi sl draw bind c t vector3 d r0", "$ l0 = r1 dx", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi sl draw bind c t x y adjust handle r0", "r2 min x = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = org apache poi sl draw drawable font_handler", "r7 = java awt render hint $ key $ r3", "$ r4 = r1 get render hint r7", "r2 = org apache poi sl draw draw font manager $ r4", "if r2 == null goto label1", "$ r5 = r2", "goto label2", "label r8 = org apache poi sl draw draw font manager $ r5", "return r8", "if r2 == null goto label1", "label r6 = new org apache poi sl draw draw font manager default", "$ r5 = r6", "specialinvoke r6 < init >"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = new java awt geom path2 d $ double", "r13 = org apache poi sl draw s l graphic r0", "$ r5 = r13 _transform", "$ r6 = $ r5 create transform shape r1", "specialinvoke r12 < init > $ r6", "r14 = org apache poi sl draw s l graphic r0", "$ r7 = r14 _group", "r3 = $ r7 create freeform", "r3 set path r12", "r3 set fill color null", "r15 = org apache poi sl draw s l graphic r0", "r16 = org apache poi sl usermodel simple shape r3", "r15 apply stroke r16", "r17 = org apache poi sl draw s l graphic r0", "$ r8 = r17 _paint", "$ z0 = $ r8 instanceof java awt color", "if $ z0 == 0 goto label1", "$ r9 = newarray java lang object [ 1 ]", "r18 = org apache poi sl draw s l graphic r0", "$ r10 = r18 _paint", "$ r11 = java awt color $ r10", "$ r9 [ 0 ] = $ r11", "r3 set stroke style $ r9", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "i2 = @ parameter2", "i3 = @ parameter3", "r3 = new java awt rectangle", "specialinvoke r3 < init > i0 i1 i2 i3", "r4 = org apache poi sl draw s l graphic r0", "r4 fill r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "f0 = @ parameter1", "f8 = @ parameter2", "r31 = org apache poi sl draw s l graphic r0", "$ r5 = r31 _group", "r2 = $ r5 create text box", "$ r6 = r2 get text paragraph", "$ r7 = $ r6 get 0", "$ r8 = org apache poi sl usermodel text paragraph $ r7", "$ r9 = $ r8 get text run", "$ r10 = $ r9 get 0", "r3 = org apache poi sl usermodel text run $ r10", "r32 = org apache poi sl draw s l graphic r0", "$ r11 = r32 _font", "$ i0 = $ r11 get size", "$ d0 = double $ i0", "$ r12 = java lang double value of $ d0", "r3 set font size $ r12", "r33 = org apache poi sl draw s l graphic r0", "$ r13 = r33 _font", "$ r14 = $ r13 get family", "r3 set font family $ r14", "r34 = org apache poi sl draw s l graphic r0", "$ r15 = r34 get color", "if $ r15 == null goto label1", "r35 = org apache poi sl draw s l graphic r0", "$ r26 = r35 get color", "$ r27 = org apache poi sl draw draw paint create solid paint $ r26", "r36 = org apache poi sl usermodel paint style $ r27", "r3 set font color r36", "label r37 = org apache poi sl draw s l graphic r0", "$ r16 = r37 _font", "$ z0 = $ r16 be bold", "if $ z0 == 0 goto label2", "r3 set bold 1", "label r38 = org apache poi sl draw s l graphic r0", "$ r17 = r38 _font", "$ z1 = $ r17 be italic", "if $ z1 == 0 goto label3", "r3 set italic 1", "label r2 set text r1", "r28 = new org apache poi sl usermodel insets2 d", "specialinvoke r28 < init > 0 0 0 0 0 0 0 0", "r2 set inset r28", "r2 set word wrap 0", "$ r20 = java lang boolean value of 0", "r2 set horizontal center $ r20", "$ r21 = org apache poi sl usermodel vertical alignment middle", "r2 set vertical alignment $ r21", "r29 = new java awt font text layout", "r39 = org apache poi sl draw s l graphic r0", "$ r23 = r39 _font", "r40 = org apache poi sl draw s l graphic r0", "$ r24 = r40 get font render context", "specialinvoke r29 < init > r1 $ r23 $ r24", "f1 = r29 get ascent", "$ f4 = r29 get advance", "$ d1 = double $ f4", "$ d2 = java lang math floor $ d1", "f2 = float $ d2", "f3 = f1 * 2 0f", "$ f6 = f3 2 0f", "$ f5 = f1 2 0f", "$ f7 = $ f6 + $ f5", "f9 = f8 - $ f7", "r30 = new java awt rectangle", "$ i4 = int f0", "$ i3 = int f9", "$ i2 = int f2", "$ i1 = int f3", "specialinvoke r30 < init > $ i4 $ i3 $ i2 $ i1", "r2 set anchor r30", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "r2 = org apache poi sl draw s l graphic r0", "$ r1 = r2 _transform", "$ r1 rotate d0 d1 d2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache poi sl draw s l graphic r0", "$ r2 = r3 _transform", "$ r2 concatenate r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return", "if r1 ! = null goto label1", "label r2 = org apache poi sl draw s l graphic r0", "r2 _background = r1"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache poi sl draw s l graphic r0", "$ r2 = r4 _hints", "$ r3 = $ r2 get r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache poi sl extractor slide show extractor r0", "r1 note by default = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r11 = new java lang string builder", "specialinvoke r11 < init >", "r12 = org apache poi sl extractor slide show extractor r0", "$ r5 = r12 slideshow", "$ r6 = $ r5 get slide", "r2 = $ r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r8 = r2 next", "r3 = org apache poi sl usermodel slide $ r8", "r13 = org apache poi sl extractor slide show extractor r0", "$ r9 = r13 get text r3", "r11 append $ r9", "goto label1", "if $ z0 == 0 goto label2", "label $ r7 = r11 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi sl usermodel insets2 d r0", "$ r1 = r2 clone", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = org apache poi s formula function function metadata registry get instance", "r1 = specialinvoke $ r2 get function by name internal r0", "if r1 ! = null goto label1", "return -1", "if r1 ! = null goto label1", "label $ i0 = r1 get index", "$ s1 = short $ i0", "return $ s1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "d3 = @ parameter3", "z0 = @ parameter4", "$ b0 = d0 cmpl 0 0", "if $ b0 ! = 0 goto label1", "$ d12 = d1 * d2", "$ d13 = d3 + $ d12", "d15 = -1 0 * $ d13", "goto label4", "label return d15", "if $ b0 ! = 0 goto label1", "label d4 = d0 + 1 0", "$ d5 = java lang math pow d4 d1", "$ d6 = 1 0 - $ d5", "if z0 == 0 goto label2", "$ d16 = d4", "goto label3", "label $ d7 = $ d6 * $ d16", "$ d8 = $ d7 * d2", "$ d9 = $ d8 d0", "$ d10 = java lang math pow d4 d1", "$ d11 = d3 * $ d10", "d15 = $ d9 - $ d11", "if z0 == 0 goto label2", "label $ d16 = 1 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org apache poi s formula ptg area ptg base row relative", "r2 = org apache poi s formula ptg area ptg base r0", "$ i0 = r2 field_3_first_column", "$ i1 = $ r1 set boolean $ i0 z0", "r3 = org apache poi s formula ptg area ptg base r0", "r3 field_3_first_column = $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi s usermodel cell copy policy r0", "$ z0 = r1 condense row", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 length", "if $ i0 == 6 goto label1", "$ i8 = r1 length", "if $ i8 ! = 8 goto label4", "label $ i1 = r1 length", "$ i2 = $ i1 2", "r2 = newarray byte [ $ i2 ]", "i9 = 0", "label $ i10 = lengthof r2", "if i9 > = $ i10 goto label3", "$ i5 = i9 * 2", "$ i3 = i9 + 1", "$ i4 = $ i3 * 2", "r3 = r1 substring $ i5 $ i4", "$ i6 = java lang integer parse int r3 16", "$ b7 = byte $ i6", "r2 [ i9 ] = $ b7", "i9 = i9 + 1", "goto label2", "if i9 > = $ i10 goto label3", "label r6 = org apache poi s usermodel extend color r0", "r6 set r g b r2", "goto label5", "label return", "if $ i8 ! = 8 goto label4", "label r5 = new java lang illegal argument exception", "specialinvoke r5 < init > \\ `` must be of the form 112233 or ffeeddcc\\ ``", "throw r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi s usermodel font family r0", "$ i0 = r1 family", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi s util cell address r0", "$ i0 = r1 _row", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "i2 = @ parameter2", "i3 = @ parameter3", "r3 = new org apache poi s util cell range address", "specialinvoke r3 < init > i0 i2 i1 i3", "r4 = org apache poi s util cell range address list r0", "r4 add cell range address r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["i0 = @ parameter0", "r0 = @ parameter1", "r1 = r0 get row i0", "if r1 ! = null goto label1", "r1 = r0 create row i0", "label return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["d0 = @ parameter0", "$ l0 = java lang double double to long bit d0", "$ r0 = org apache poi s util number to text converter raw double bit to text $ l0", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "i0 = r1 get first row", "i1 = r1 get last row", "i2 = r1 get first column", "$ r4 = new org apache poi s util region util $ cell property setter", "specialinvoke $ r4 < init > \\ `` border left\\", "i3 = i0", "label if i3 > i1 goto label2", "$ r5 = org apache poi s util cell util get row i3 r2", "$ r4 set property $ r5 i2", "i3 = i3 + 1", "goto label1", "label if i3 > i1 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "i1 = @ parameter3", "i2 = @ parameter4", "if i0 > = 0 goto label1", "$ r35 = new java lang illegal argument exception", "$ r36 = new java lang string builder", "specialinvoke $ r36 < init >", "$ r37 = $ r36 append \\ `` src_position be less than 0 actual value \\ ``", "$ r38 = $ r37 append i0", "$ r39 = $ r38 to string", "specialinvoke $ r35 < init > $ r39", "throw $ r35", "if i0 > = 0 goto label1", "label $ i3 = lengthof r0", "if i0 < $ i3 goto label2", "$ r28 = new java lang illegal argument exception", "$ r29 = new java lang string builder", "specialinvoke $ r29 < init >", "$ r30 = $ r29 append \\ `` src_position be great than src array size try to write start at position \\ ``", "$ r31 = $ r30 append i0", "$ r32 = $ r31 append \\ `` but the array length be \\ ``", "$ i14 = lengthof r0", "$ r33 = $ r32 append $ i14", "$ r34 = $ r33 to string", "specialinvoke $ r28 < init > $ r34", "throw $ r28", "if i0 < $ i3 goto label2", "label $ i5 = i0 + i2", "$ i4 = lengthof r0", "if $ i5 < = $ i4 goto label3", "$ r21 = new java lang illegal argument exception", "$ r22 = new java lang string builder", "specialinvoke $ r22 < init >", "$ r23 = $ r22 append \\ `` src_position + length would overrun the src array expect end at \\ ``", "$ i12 = i0 + i2", "$ r24 = $ r23 append $ i12", "$ r25 = $ r24 append \\ `` actual end at \\ ``", "$ i13 = lengthof r0", "$ r26 = $ r25 append $ i13", "$ r27 = $ r26 to string", "specialinvoke $ r21 < init > $ r27", "throw $ r21", "if $ i5 < = $ i4 goto label3", "label if i1 > = 0 goto label4", "$ r16 = new java lang illegal argument exception", "$ r17 = new java lang string builder", "specialinvoke $ r17 < init >", "$ r18 = $ r17 append \\ `` dst_position be less than 0 actual value \\ ``", "$ r19 = $ r18 append i1", "$ r20 = $ r19 to string", "specialinvoke $ r16 < init > $ r20", "throw $ r16", "label if i1 > = 0 goto label4", "label $ i6 = lengthof r1", "if i1 < $ i6 goto label5", "$ r9 = new java lang illegal argument exception", "$ r10 = new java lang string builder", "specialinvoke $ r10 < init >", "$ r11 = $ r10 append \\ `` dst_position be great than dst array size try to write start at position \\ ``", "$ r12 = $ r11 append i1", "$ r13 = $ r12 append \\ `` but the array length be \\ ``", "$ i11 = lengthof r1", "$ r14 = $ r13 append $ i11", "$ r15 = $ r14 to string", "specialinvoke $ r9 < init > $ r15", "throw $ r9", "if i1 < $ i6 goto label5", "label $ i8 = i1 + i2", "$ i7 = lengthof r1", "if $ i8 < = $ i7 goto label6", "$ r2 = new java lang illegal argument exception", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append \\ `` dst_position + length would overrun the dst array expect end at \\ ``", "$ i9 = i1 + i2", "$ r5 = $ r4 append $ i9", "$ r6 = $ r5 append \\ `` actual end at \\ ``", "$ i10 = lengthof r1", "$ r7 = $ r6 append $ i10", "$ r8 = $ r7 to string", "specialinvoke $ r2 < init > $ r8", "throw $ r2", "if $ i8 < = $ i7 goto label6", "label java lang system arraycopy r0 i0 r1 i1 i2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], [46], [47], [48], [49], [50], [51], [52], [53], [], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [], [85], [86], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r1 get parent file", "$ z0 = r2 exist", "if $ z0 ! = 0 goto label01", "$ z1 = r2 mkdirs", "if $ z1 ! = 0 goto label01", "$ r8 = new java lang runtime exception", "$ r9 = new java lang string builder", "specialinvoke $ r9 < init >", "$ r10 = $ r9 append \\ `` can\\'t create destination directory \\ ``", "$ r11 = $ r10 append r2", "$ r12 = $ r11 to string", "specialinvoke $ r8 < init > $ r12", "throw $ r8", "if $ z1 ! = 0 goto label01", "label $ r7 = new java io file output stream", "specialinvoke $ r7 < init > r1", "r17 = null", "label l0 = org apache poi util i o utils copy r0 $ r7", "label if $ r7 == null goto label05", "goto label04", "label $ r7 close", "label return l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [], [23], []]}
{"nodes": ["r0 = @ parameter0", "$ f0 = org apache poi util little endian get float r0 0", "return $ f0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = org apache poi util little endian get int r0 0", "return $ i0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ b3 = r0 [ i0 ]", "s1 = $ b3 & 255", "$ i4 = i0 + 1", "$ b5 = r0 [ $ i4 ]", "s2 = $ b5 & 255", "$ i7 = s2 < < 8", "$ i6 = s1 < < 0", "$ i8 = $ i7 + $ i6", "$ s9 = short $ i8", "return $ s9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "l1 = @ parameter2", "i19 = i0 + 1", "$ l2 = l1 > > > 0", "$ l3 = $ l2 & 255l", "$ i4 = int $ l3", "$ b5 = byte $ i4", "r0 [ i0 ] = $ b5", "i20 = i19 + 1", "$ l6 = l1 > > > 8", "$ l7 = $ l6 & 255l", "$ i8 = int $ l7", "$ b9 = byte $ i8", "r0 [ i19 ] = $ b9", "i21 = i20 + 1", "$ l10 = l1 > > > 16", "$ l11 = $ l10 & 255l", "$ i12 = int $ l11", "$ b13 = byte $ i12", "r0 [ i20 ] = $ b13", "$ l14 = l1 > > > 24", "$ l15 = $ l14 & 255l", "$ i16 = int $ l15", "$ b17 = byte $ i16", "r0 [ i21 ] = $ b17", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "label r9 = org apache poi util little endian output stream r0", "$ r2 = r9 out", "$ l1 = l0 & 255l", "$ i2 = int $ l1", "$ b3 = byte $ i2", "$ r2 write $ b3", "r10 = org apache poi util little endian output stream r0", "$ r3 = r10 out", "$ l4 = l0 > > > 8", "$ l5 = $ l4 & 255l", "$ i6 = int $ l5", "$ b7 = byte $ i6", "$ r3 write $ b7", "r11 = org apache poi util little endian output stream r0", "$ r4 = r11 out", "$ l8 = l0 > > > 16", "$ l9 = $ l8 & 255l", "$ i10 = int $ l9", "$ b11 = byte $ i10", "$ r4 write $ b11", "r12 = org apache poi util little endian output stream r0", "$ r5 = r12 out", "$ l12 = l0 > > > 24", "$ l13 = $ l12 & 255l", "$ i14 = int $ l13", "$ b15 = byte $ i14", "$ r5 write $ b15", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi util r l e decompress input stream r0", "$ i0 = specialinvoke r1 read int r0", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "b1 = r0 read byte", "$ b2 = b1 & 1", "if $ b2 ! = 0 goto label1", "$ r2 = org apache poi util string util read compress unicode r0 i0", "return $ r2", "if $ b2 ! = 0 goto label1", "label $ r1 = org apache poi util string util read unicode l e r0 i0", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "$ r3 = org apache poi util string util utf16le", "r2 = r0 get bytes $ r3", "$ i1 = lengthof r2", "java lang system arraycopy r2 0 r1 i0 $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ z0 = r0 be empty", "if $ z0 == 0 goto label2", "label return r0", "if $ z0 == 0 goto label2", "label org apache poi util string util init m codepoint map", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "i0 = r0 length", "i5 = 0", "label if i5 > = i0 goto label6", "$ i1 = r0 code point at i5", "r2 = java lang integer value of $ i1", "$ r6 = org apache poi util string util ms codepoint to unicode", "$ r7 = $ r6 get r2", "r3 = java lang integer $ r7", "if r3 ! = null goto label4", "$ r10 = r2", "goto label5", "label $ i2 = $ r10 int value", "$ r4 append code point $ i2", "$ i3 = r2 int value", "$ i4 = java lang character char count $ i3", "i5 = i5 + $ i4", "goto label3", "if r3 ! = null goto label4", "label $ r10 = r3", "label if i5 > = i0 goto label6", "label $ r5 = $ r4 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi ooxml extractor p o i x m l text extractor r0", "$ r1 = r3 _document", "$ r2 = $ r1 get package", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "label $ r2 = org apache poi openxml4j opc o p c package open r0", "label return $ r2"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r10 = org apache poi ooxml p o i x m l document r0", "$ r2 = r10 property", "if $ r2 ! = null goto label4", "label r8 = new org apache poi ooxml p o i x m l property", "r11 = org apache poi ooxml p o i x m l document r0", "$ r5 = r11 pkg", "specialinvoke r8 < init > $ r5", "r12 = org apache poi ooxml p o i x m l document r0", "r12 property = r8", "label goto label4", "label r14 = org apache poi ooxml p o i x m l document r0", "$ r3 = r14 property", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r77 = org apache poi ooxml p o i x m l property r0", "$ r5 = r77 ext part", "if $ r5 ! = null goto label04", "r78 = org apache poi ooxml p o i x m l property r0", "$ r35 = r78 ext", "if $ r35 == null goto label04", "r79 = org apache poi ooxml p o i x m l property r0", "$ r36 = r79 ext", "$ r37 = org apache poi ooxml p o i x m l property $ extended property access $ 300 $ r36", "if $ r37 == null goto label04", "$ r38 = org apache poi ooxml p o i x m l property new_ext_instance", "$ r39 = $ r38 to string", "r80 = org apache poi ooxml p o i x m l property r0", "$ r40 = r80 ext", "$ r41 = org apache poi ooxml p o i x m l property $ extended property access $ 300 $ r40", "$ r42 = $ r41 to string", "$ z1 = $ r39 equal $ r42", "if $ z1 ! = 0 goto label04", "label r60 = org apache poi openxml4j opc package u r i helper create part name \\ `` doc prop app xml\\ ``", "r81 = org apache poi ooxml p o i x m l property r0", "$ r44 = r81 pkg", "$ r43 = org apache poi openxml4j opc target mode internal", "$ r44 add relationship r60 $ r43 \\ `` http schema openxmlformats org office document 2006 relationships extended-properties\\ ``", "r82 = org apache poi ooxml p o i x m l property r0", "$ r46 = r82 pkg", "$ r47 = $ r46 create part r60 \\ `` application vnd openxmlformats-officedocument extended-properties+xml\\ ``", "r83 = org apache poi ooxml p o i x m l property r0", "r83 ext part = $ r47", "label goto label04", "label r85 = org apache poi ooxml p o i x m l property r0", "$ r62 = r85 cust part", "if $ r62 ! = null goto label08", "r86 = org apache poi ooxml p o i x m l property r0", "$ r22 = r86 cust", "if $ r22 == null goto label08", "r87 = org apache poi ooxml p o i x m l property r0", "$ r23 = r87 cust", "$ r24 = org apache poi ooxml p o i x m l property $ custom property access $ 400 $ r23", "if $ r24 == null goto label08", "$ r25 = org apache poi ooxml p o i x m l property new_cust_instance", "$ r26 = $ r25 to string", "r88 = org apache poi ooxml p o i x m l property r0", "$ r27 = r88 cust", "$ r28 = org apache poi ooxml p o i x m l property $ custom property access $ 400 $ r27", "$ r29 = $ r28 to string", "$ z0 = $ r26 equal $ r29", "if $ z0 ! = 0 goto label08", "label r63 = org apache poi openxml4j opc package u r i helper create part name \\ `` doc prop custom xml\\ ``", "r89 = org apache poi ooxml p o i x m l property r0", "$ r31 = r89 pkg", "$ r30 = org apache poi openxml4j opc target mode internal", "$ r31 add relationship r63 $ r30 \\ `` http schema openxmlformats org office document 2006 relationships custom-properties\\ ``", "r90 = org apache poi ooxml p o i x m l property r0", "$ r33 = r90 pkg", "$ r34 = $ r33 create part r63 \\ `` application vnd openxmlformats-officedocument custom-properties+xml\\ ``", "r91 = org apache poi ooxml p o i x m l property r0", "r91 cust part = $ r34", "label goto label08", "label r93 = org apache poi ooxml p o i x m l property r0", "$ r65 = r93 ext part", "if $ r65 == null goto label21", "r94 = org apache poi ooxml p o i x m l property r0", "$ r13 = r94 ext", "if $ r13 == null goto label21", "r95 = org apache poi ooxml p o i x m l property r0", "$ r14 = r95 ext", "$ r15 = org apache poi ooxml p o i x m l property $ extended property access $ 300 $ r14", "if $ r15 == null goto label21", "r96 = org apache poi ooxml p o i x m l property r0", "$ r16 = r96 ext part", "r66 = $ r16 get output stream", "r67 = null", "label r97 = org apache poi ooxml p o i x m l property r0", "$ r17 = r97 ext part", "$ l0 = $ r17 get size", "$ b1 = $ l0 cmp 0l", "if $ b1 < = 0 goto label10", "r98 = org apache poi ooxml p o i x m l property r0", "$ r21 = r98 ext part", "$ r21 clear", "label r99 = org apache poi ooxml p o i x m l property r0", "$ r18 = r99 ext", "$ r19 = org apache poi ooxml p o i x m l property $ extended property access $ 300 $ r18", "$ r20 = org apache poi ooxml p o i x m l type loader default_xml_options", "$ r19 save r66 $ r20", "label if r66 == null goto label21", "goto label12", "label r66 close", "goto label21", "label r100 = org apache poi ooxml p o i x m l property r0", "$ r70 = r100 cust part", "if $ r70 == null goto label33", "r101 = org apache poi ooxml p o i x m l property r0", "$ r6 = r101 cust", "if $ r6 == null goto label33", "r102 = org apache poi ooxml p o i x m l property r0", "$ r7 = r102 cust", "$ r8 = org apache poi ooxml p o i x m l property $ custom property access $ 400 $ r7", "if $ r8 == null goto label33", "r103 = org apache poi ooxml p o i x m l property r0", "$ r9 = r103 cust part", "r71 = $ r9 get output stream", "r72 = null", "label r104 = org apache poi ooxml p o i x m l property r0", "$ r10 = r104 cust", "$ r11 = org apache poi ooxml p o i x m l property $ custom property access $ 400 $ r10", "$ r12 = org apache poi ooxml p o i x m l type loader default_xml_options", "$ r11 save r71 $ r12", "label if r71 == null goto label33", "goto label24", "label r71 close", "goto label33", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [], [89], [], [91], [92], [93], [94], [95], [96], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [110], [], [112], [], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi ooxml p o i x m l relation r0", "$ r1 = r2 _default name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi openxml4j opc internal content type manager r0", "$ r1 = r3 override content type", "if $ r1 == null goto label1", "r4 = org apache poi openxml4j opc internal content type manager r0", "$ r2 = r4 override content type", "$ r2 clear", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi openxml4j opc internal package property part r0", "$ r1 = r2 category", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi openxml4j opc internal package property part r0", "$ r1 = r3 last printed", "r4 = org apache poi openxml4j opc internal package property part r0", "$ r2 = specialinvoke r4 get date value $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r13 = org apache poi openxml4j opc internal package property part r0", "$ r3 = specialinvoke r13 set date value r1", "r14 = org apache poi openxml4j opc internal package property part r0", "r14 modify = $ r3", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "r13 = new java lang illegal argument exception", "specialinvoke r13 < init > \\ `` \\'file\\ ' must be given\\ ``", "throw r13", "if r0 ! = null goto label1", "label $ z0 = r0 exist", "if $ z0 == 0 goto label2", "$ z1 = r0 be directory", "if $ z1 == 0 goto label2", "r14 = new java lang illegal argument exception", "specialinvoke r14 < init > \\ `` file must not be a directory\\ ``", "throw r14", "if $ z1 == 0 goto label2", "label r15 = new org apache poi openxml4j opc zip package", "specialinvoke r15 < init > r0 r1", "label r16 = org apache poi openxml4j opc o p c package r15", "$ r5 = r16 part list", "if $ r5 ! = null goto label4", "$ r6 = org apache poi openxml4j opc package access write", "if r1 == $ r6 goto label4", "r17 = org apache poi openxml4j opc o p c package r15", "r17 get part", "label $ r11 = r0 get absolute path", "r18 = org apache poi openxml4j opc o p c package r15", "r18 original package path = $ r11", "label r19 = org apache poi openxml4j opc o p c package r15", "return r19"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache poi openxml4j opc o p c package r0", "$ r3 = r4 create part r1 r2 1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z2 = 0", "r19 = org apache poi openxml4j opc o p c package r0", "r3 = r19 get part by content type r1", "r4 = r3 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label7", "$ r8 = r4 next", "r5 = org apache poi openxml4j opc package part $ r8", "$ r9 = r5 get content type", "$ z1 = $ r9 equal r1", "if $ z1 == 0 goto label6", "r6 = r5 get part name", "r20 = org apache poi openxml4j opc o p c package r0", "$ r10 = r20 content type manager", "$ r10 add content type r6 r2", "label r5 set content type r2", "label goto label5", "label z2 = 1", "r22 = org apache poi openxml4j opc o p c package r0", "r22 be dirty = 1", "label goto label1", "if $ z0 == 0 goto label7", "label return z2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache poi openxml4j opc o p c package r0", "r6 add package part r1", "r7 = org apache poi openxml4j opc o p c package r0", "$ r3 = r7 content type manager", "$ r4 = r1 get part name", "$ r5 = r1 get content type", "$ r3 add content type $ r4 $ r5", "r8 = org apache poi openxml4j opc o p c package r0", "r8 be dirty = 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r4 = org apache poi openxml4j opc package part name r0", "$ r2 = r4 part name u r i", "r1 = $ r2 get path", "$ i1 = r1 length", "if $ i1 < = 0 goto label1", "i0 = r1 last index of \\ `` \\ ``", "if i0 < = -1 goto label1", "$ i2 = i0 + 1", "$ r3 = r1 substring $ i2", "return $ r3", "if i0 < = -1 goto label1", "label return \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label3", "r1 = r0 get path", "i0 = r1 length", "i4 = i0", "label i4 = i4 + -1", "if i4 < 0 goto label3", "c1 = r1 char at i4", "$ c2 = org apache poi openxml4j opc package u r i helper forward_slash_char", "if c1 ! = $ c2 goto label2", "$ i3 = i4 + 1", "$ r2 = r1 substring $ i3 i0", "return $ r2", "if c1 ! = $ c2 goto label2", "label goto label1", "if i4 < 0 goto label3", "label return \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label6", "r1 = r0 get path", "i2 = r1 length", "label i2 = i2 + -1", "if i2 < 0 goto label6", "c0 = r1 char at i2", "$ c1 = org apache poi openxml4j opc package u r i helper forward_slash_char", "if c0 ! = $ c1 goto label5", "label $ r3 = new java net uri", "$ r4 = r1 substring 0 i2", "specialinvoke $ r3 < init > $ r4", "label return $ r3", "if c0 ! = $ c1 goto label5", "label goto label1", "if i2 < 0 goto label6", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r3 = new java lang illegal argument exception", "specialinvoke $ r3 < init > \\ `` part uri\\ ``", "throw $ r3", "if r0 ! = null goto label1", "label org apache poi openxml4j opc package u r i helper create part name r0", "label return 1"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "label r3 = newarray byte [ 1024 ]", "label $ i1 = r0 read r3", "if $ i1 < 0 goto label3", "r1 write r3 0 $ i1", "goto label2", "if $ i1 < 0 goto label3", "label goto label5", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi poifs crypt dsig service revocation data r0", "$ r1 = r2 crls", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r4 = org apache poi xddf usermodel text x d d f text paragraph r0", "$ r3 = r4 _p", "$ z0 = $ r3 be set p pr", "if $ z0 == 0 goto label2", "label r5 = org apache poi xddf usermodel text x d d f text paragraph r0", "$ r2 = specialinvoke r5 get or create property", "$ r2 set space before r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi xslf usermodel x m l slide show r0", "$ r1 = r2 _charts", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi xslf usermodel x m l slide show r0", "$ r1 = r2 _comment author", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi xslf usermodel x s l f color r0", "$ i0 = specialinvoke r1 get percentage value \\ `` shade\\ ``", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r7 = new java util array list", "r8 = org apache poi xslf usermodel x s l f group shape r0", "$ r5 = r8 get shape", "specialinvoke r7 < init > $ r5", "r2 = r7 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r6 = r2 next", "r3 = org apache poi xslf usermodel x s l f shape $ r6", "r9 = org apache poi xslf usermodel x s l f group shape r0", "r9 remove shape r3", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi xslf usermodel x s l f object shape r0", "$ r1 = r2 get picture data", "r3 = org apache poi sl usermodel picture data $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i6 = @ parameter1", "r1 = @ parameter2", "l0 = org apache poi util little endian get u int r0 i6", "$ b1 = l0 cmp 0l", "if $ b1 > = 0 goto label1", "r8 = new org apache poi xssf binary x s s f b parse exception", "specialinvoke r8 < init > \\ `` too few char to read\\ ``", "r12 = java lang throwable r8", "throw r12", "if $ b1 > = 0 goto label1", "label $ b2 = l0 cmp 4294967295l", "if $ b2 < = 0 goto label2", "r9 = new org apache poi xssf binary x s s f b parse exception", "specialinvoke r9 < init > \\ `` too many char to read\\ ``", "r13 = java lang throwable r9", "throw r13", "if $ b2 < = 0 goto label2", "label $ i3 = int l0", "i7 = 2 * $ i3", "i8 = i6 + 4", "$ i5 = i8 + i7", "$ i4 = lengthof r0", "if $ i5 < = $ i4 goto label3", "r10 = new org apache poi xssf binary x s s f b parse exception", "specialinvoke r10 < init > \\ `` try to read beyond data length\\ ``", "r14 = java lang throwable r10", "throw r14", "if $ i5 < = $ i4 goto label3", "label r11 = new java lang string", "$ r3 = java nio charset standard charsets utf_16le", "specialinvoke r11 < init > r0 i8 i7 $ r3", "r1 append r11", "i9 = i7 + 4", "return i9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r6 = org apache poi xssf eventusermodel read only share string table r0", "$ z0 = r6 t be open", "if $ z0 == 0 goto label2", "r7 = org apache poi xssf eventusermodel read only share string table r0", "$ z1 = r7 in r ph", "if $ z1 == 0 goto label1", "r8 = org apache poi xssf eventusermodel read only share string table r0", "$ z3 = r8 include phonetic run", "if $ z3 == 0 goto label1", "r9 = org apache poi xssf eventusermodel read only share string table r0", "$ r4 = r9 character", "$ r4 append r1 i0 i1", "goto label2", "label return", "if $ z3 == 0 goto label1", "label r10 = org apache poi xssf eventusermodel read only share string table r0", "$ z2 = r10 in r ph", "if $ z2 ! = 0 goto label2", "r11 = org apache poi xssf eventusermodel read only share string table r0", "$ r2 = r11 character", "$ r2 append r1 i0 i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 format a string", "r11 = org apache poi xssf model comment table r0", "$ r6 = r11 comment", "r3 = $ r6 get comment list", "if r3 == null goto label4", "r4 = r3 get comment array", "i1 = 0", "label $ i0 = lengthof r4", "if i1 > = $ i0 goto label4", "r5 = r4 [ i1 ]", "$ r7 = r5 get ref", "$ z0 = r2 equal $ r7", "if $ z0 == 0 goto label3", "r3 remove comment i1", "r12 = org apache poi xssf model comment table r0", "$ r8 = r12 comment ref", "if $ r8 == null goto label2", "r13 = org apache poi xssf model comment table r0", "$ r9 = r13 comment ref", "$ r9 remove r1", "label return 1", "if $ z0 == 0 goto label3", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label4", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi xssf stream auto size column tracker r0", "$ z0 = r1 track all columns", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache poi xssf stream s x s s f sheet r0", "$ r1 = specialinvoke r2 safe get protection field", "$ r1 set select unlocked cell z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache poi xssf stream s x s s f workbook r0", "$ r2 = r4 _wb", "$ r3 = $ r2 get name r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi xssf stream s x s s f workbook r0", "$ r1 = r2 _wb", "$ z0 = $ r1 get force formula recalculation", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i3 = 0", "label r9 = org apache poi xssf usermodel base x s s f evaluation workbook r0", "$ r4 = r9 _u book", "$ i2 = $ r4 get number of name", "if i3 > = $ i2 goto label4", "r10 = org apache poi xssf usermodel base x s s f evaluation workbook r0", "$ r5 = r10 _u book", "r2 = $ r5 get name at i3", "r3 = r2 get name name", "i1 = r2 get sheet index", "$ z0 = r1 equal ignore case r3", "if $ z0 == 0 goto label3", "if i1 == -1 goto label2", "if i1 ! = i0 goto label3", "label r8 = new org apache poi xssf usermodel base x s s f evaluation workbook $ name", "specialinvoke r8 < init > r2 i3 r0", "r11 = org apache poi s formula evaluation name r8", "return r11", "if i1 ! = i0 goto label3", "label i3 = i3 + 1", "goto label1", "if i3 > = $ i2 goto label4", "label if i0 ! = -1 goto label5", "$ r7 = null", "goto label6", "label return $ r7", "label if i0 ! = -1 goto label5", "label r12 = org apache poi xssf usermodel base x s s f evaluation workbook r0", "$ r7 = r12 get name r1 -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [], [25], [26], [27], [], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r5 = org apache poi xssf usermodel extension x s s f cell alignment r0", "$ r1 = r5 cell alignement", "r4 = $ r1 get vertical", "if r4 ! = null goto label1", "r4 = org openxmlformats schemas spreadsheetml x2006 main s t vertical alignment bottom", "label $ r2 = org apache poi s usermodel vertical alignment value", "$ i0 = r4 int value", "$ i1 = $ i0 - 1", "$ r3 = $ r2 [ $ i1 ]", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "l3 = @ parameter0", "$ b0 = l3 cmp 0l", "if $ b0 > = 0 goto label1", "$ b1 = l3 cmp -90l", "if $ b1 < 0 goto label1", "$ l2 = -1l * l3", "l3 = 90l + $ l2", "label r2 = org apache poi xssf usermodel extension x s s f cell alignment r0", "$ r1 = r2 cell alignement", "$ r1 set text rotation l3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r6 = org apache poi xssf usermodel extension x s s f cell fill r0", "$ r3 = r6 _fill", "r1 = $ r3 get pattern fill", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label r2 = r1 get fg color", "r7 = org apache poi xssf usermodel extension x s s f cell fill r0", "$ r4 = r7 _indexed color map", "$ r5 = org apache poi xssf usermodel x s s f color from r2 $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache poi hssf usermodel header footer strip field r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache poi xssf usermodel x s s f comment r0", "$ r3 = r4 _comment", "r5 = org apache poi xssf usermodel x s s f comment r0", "$ r2 = r5 _comments", "$ i0 = $ r2 find author r1", "$ l1 = long $ i0", "$ r3 set author id $ l1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org apache poi xssf usermodel x s s f rich text string", "specialinvoke r3 < init > r1", "r4 = org apache poi xssf usermodel x s s f comment r0", "r5 = org apache poi s usermodel rich text string r3", "r4 set string r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["$ r13 = org apache poi xssf usermodel x s s f connector prototype", "if $ r13 ! = null goto label1", "r0 = org openxmlformats schemas drawingml x2006 spreadsheet draw c t connector $ factory new instance", "r1 = r0 add new nv cxn sp pr", "r2 = r1 add new c nv pr", "r2 set id 1l", "r2 set name \\ `` shape 1\\ ``", "r1 add new c nv cxn sp pr", "r3 = r0 add new sp pr", "r4 = r3 add new xfrm", "r5 = r4 add new ext", "r5 set cx 0l", "r5 set cy 0l", "r6 = r4 add new off", "r6 set x 0l", "r6 set y 0l", "r7 = r3 add new prst geom", "$ r16 = org openxmlformats schemas drawingml x2006 main s t shape type line", "r7 set prst $ r16", "r7 add new av lst", "r8 = r0 add new style", "$ r18 = r8 add new ln ref", "r9 = $ r18 add new scheme clr", "$ r19 = org openxmlformats schemas drawingml x2006 main s t scheme color val accent_1", "r9 set val $ r19", "$ r20 = r8 get ln ref", "$ r20 set idx 1l", "r10 = r8 add new fill ref", "r10 set idx 0l", "$ r21 = r10 add new scheme clr", "$ r22 = org openxmlformats schemas drawingml x2006 main s t scheme color val accent_1", "$ r21 set val $ r22", "r11 = r8 add new effect ref", "r11 set idx 0l", "$ r23 = r11 add new scheme clr", "$ r24 = org openxmlformats schemas drawingml x2006 main s t scheme color val accent_1", "$ r23 set val $ r24", "r12 = r8 add new font ref", "$ r25 = org openxmlformats schemas drawingml x2006 main s t font collection index minor", "r12 set idx $ r25", "$ r26 = r12 add new scheme clr", "$ r27 = org openxmlformats schemas drawingml x2006 main s t scheme color val tx_1", "$ r26 set val $ r27", "org apache poi xssf usermodel x s s f connector prototype = r0", "label $ r14 = org apache poi xssf usermodel x s s f connector prototype", "return $ r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache poi xssf usermodel x s s f creation helper r0", "$ r2 = r3 create hyperlink r1", "r4 = org apache poi s usermodel hyperlink $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = org apache poi xssf usermodel x s s f draw r0", "l0 = specialinvoke r13 new shape id", "r14 = org apache poi xssf usermodel x s s f draw r0", "r2 = specialinvoke r14 create two cell anchor r1", "r3 = r2 add new sp", "$ r5 = org apache poi xssf usermodel x s s f simple shape prototype", "r15 = org apache xmlbeans xml object $ r5", "r3 set r15", "$ r7 = r3 get nv sp pr", "$ r8 = $ r7 get c nv pr", "$ r8 set id l0", "$ r9 = r3 get sp pr", "r16 = org apache poi xssf usermodel x s s f draw r0", "$ r10 = specialinvoke r16 create xfrm r1", "$ r9 set xfrm $ r10", "r12 = new org apache poi xssf usermodel x s s f simple shape", "r17 = org apache poi xssf usermodel x s s f draw r0", "specialinvoke r12 < init > r17 r3", "r18 = org apache poi xssf usermodel x s s f anchor r1", "r12 anchor = r18", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = org apache poi xssf usermodel x s s f even footer r0", "$ r3 = r6 get header footer", "$ r3 unset even footer", "r7 = org apache poi xssf usermodel x s s f even footer r0", "$ r4 = r7 get header footer", "$ z0 = $ r4 be set even header", "if $ z0 ! = 0 goto label2", "r8 = org apache poi xssf usermodel x s s f even footer r0", "$ r5 = r8 get header footer", "$ r5 unset different odd even", "goto label2", "label return", "if r1 ! = null goto label1", "label r9 = org apache poi xssf usermodel x s s f even footer r0", "$ r2 = r9 get header footer", "$ r2 set even footer r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache poi xssf usermodel x s s f graphic frame r0", "$ r2 = r3 graphic frame", "$ r2 set macro r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi xssf usermodel x s s f graphic frame r0", "$ r1 = specialinvoke r3 get non visual property", "$ r2 = $ r1 get name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi xssf usermodel x s s f header footer property r0", "$ r1 = r3 get header footer", "$ z0 = $ r1 be set different odd even", "if $ z0 == 0 goto label1", "r4 = org apache poi xssf usermodel x s s f header footer property r0", "$ r2 = r4 get header footer", "$ z1 = $ r2 get different odd even", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache poi xssf usermodel x s s f header footer property r0", "$ r1 = r2 get header footer", "$ r1 set different odd even z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi xssf usermodel x s s f header footer property r0", "$ r1 = r3 get header footer", "$ z0 = $ r1 be set align with margin", "if $ z0 == 0 goto label1", "r4 = org apache poi xssf usermodel x s s f header footer property r0", "$ r2 = r4 get header footer", "$ r2 unset align with margin", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi xssf usermodel x s s f hyperlink r0", "r1 set first column i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r6 = org apache poi xssf usermodel x s s f rich text string r0", "$ r2 = r6 st", "$ i1 = $ r2 size of r array", "if $ i1 == 0 goto label1", "r7 = org apache poi xssf usermodel x s s f rich text string r0", "$ r3 = r7 st", "$ i2 = $ r3 size of r array", "if i0 < $ i2 goto label2", "label return -1", "if i0 < $ i2 goto label2", "label r8 = org apache poi xssf usermodel x s s f rich text string r0", "$ r4 = r8 st", "r1 = $ r4 get r array i0", "$ r5 = r1 get t", "$ i3 = $ r5 length", "return $ i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache poi xssf usermodel x s s f table r0", "$ r2 = r3 ct table", "$ r2 set display name r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r10 = org apache poi xssf usermodel x s s f table r0", "$ r5 = r10 ct table", "r1 = $ r5 get ref", "if r1 == null goto label1", "r2 = r1 split \\ `` \\", "r3 = r2 [ 0 ]", "r4 = r2 [ 1 ]", "r8 = new org apache poi s util cell reference", "specialinvoke r8 < init > r3", "r11 = org apache poi xssf usermodel x s s f table r0", "r11 start cell reference = r8", "r9 = new org apache poi s util cell reference", "specialinvoke r9 < init > r4", "r12 = org apache poi xssf usermodel x s s f table r0", "r12 end cell reference = r9", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi xssf usermodel x s s f table column r0", "$ r1 = r2 ct table column", "$ l0 = $ r1 get id", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi xssf usermodel x s s f table column r0", "$ r1 = r3 table", "r4 = org apache poi xssf usermodel x s s f table column r0", "$ r2 = r4 get name", "$ i0 = $ r1 find column index $ r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r9 = org apache poi xssf usermodel x s s f text paragraph r0", "$ r3 = r9 _p", "$ z0 = $ r3 be set p pr", "if $ z0 == 0 goto label1", "r10 = org apache poi xssf usermodel x s s f text paragraph r0", "$ r6 = r10 _p", "$ r7 = $ r6 get p pr", "goto label2", "label $ z1 = $ r7 be set tab lst", "if $ z1 == 0 goto label3", "$ r8 = $ r7 get tab lst", "goto label4", "label $ r5 = $ r8 add new tab", "$ i0 = org apache poi util unit to e m u d0", "$ r5 set pos $ i0", "return", "if $ z1 == 0 goto label3", "label $ r8 = $ r7 add new tab lst", "if $ z0 == 0 goto label1", "label r11 = org apache poi xssf usermodel x s s f text paragraph r0", "$ r4 = r11 _p", "$ r7 = $ r4 add new p pr"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [], [15], [16], [17], [], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r6 = new org apache poi xssf usermodel x s s f text paragraph $ 15", "r7 = org apache poi xssf usermodel x s s f text paragraph r0", "$ i0 = r7 get level", "r8 = org apache poi xssf usermodel x s s f text paragraph r0", "specialinvoke r6 < init > r8 $ i0", "r9 = org apache poi xssf usermodel x s s f text paragraph r0", "r10 = org apache poi xssf model paragraph property fetcher r6", "specialinvoke r9 fetch paragraph property r10", "r11 = org apache poi xssf model paragraph property fetcher r6", "$ r3 = r11 get value", "if $ r3 ! = null goto label1", "$ z1 = 0", "goto label2", "label return $ z1", "if $ r3 ! = null goto label1", "label r12 = org apache poi xssf model paragraph property fetcher r6", "$ r4 = r12 get value", "$ r5 = java lang boolean $ r4", "$ z1 = $ r5 boolean value"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache poi xssf usermodel x s s f text run r0", "$ r1 = r3 get r pr", "if z0 == 0 goto label1", "$ r2 = org openxmlformats schemas drawingml x2006 main s t text strike type sng_strike", "goto label2", "label $ r1 set strike $ r2", "return", "if z0 == 0 goto label1", "label $ r2 = org openxmlformats schemas drawingml x2006 main s t text strike type no_strike"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi xwpf usermodel x w p f abstract footnote endnote r0", "$ r1 = r2 footnote", "r3 = org apache poi ooxml p o i x m l document part $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r3 = org apache poi xwpf usermodel x w p f chart r0", "$ r1 = r3 ct inline", "$ r2 = $ r1 get extent", "$ r2 set cy l0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r2 = org apache poi xwpf usermodel x w p f chart r0", "$ r1 = r2 ct inline", "$ r1 set dist l l0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi xwpf usermodel x w p f document r0", "$ r1 = r2 header footer policy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r8 = new org apache poi xwpf usermodel x w p f paragraph", "r9 = org apache poi xwpf usermodel x w p f document r0", "$ r3 = r9 ct document", "$ r4 = $ r3 get body", "$ r5 = $ r4 add new p", "specialinvoke r8 < init > $ r5 r0", "r10 = org apache poi xwpf usermodel x w p f document r0", "$ r6 = r10 body element", "$ r6 add r8", "r11 = org apache poi xwpf usermodel x w p f document r0", "$ r7 = r11 paragraph", "$ r7 add r8", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r9 = org apache poi xwpf usermodel x w p f document r0", "$ r4 = r9 style", "if $ r4 ! = null goto label1", "r1 = org openxmlformats schemas wordprocessingml x2006 main style document $ factory new instance", "r2 = org apache poi xwpf usermodel x w p f relation style", "r10 = org apache poi xwpf usermodel x w p f document r0", "i0 = specialinvoke r10 get relation index r2", "$ r6 = org apache poi xwpf usermodel x w p f factory get instance", "r11 = org apache poi xwpf usermodel x w p f document r0", "r12 = org apache poi ooxml p o i x m l relation r2", "r13 = org apache poi ooxml p o i x m l factory $ r6", "$ r7 = r11 create relationship r12 r13 i0", "r3 = org apache poi xwpf usermodel x w p f style $ r7", "$ r8 = r1 add new style", "r3 set style $ r8", "r14 = org apache poi xwpf usermodel x w p f document r0", "r14 style = r3", "label r15 = org apache poi xwpf usermodel x w p f document r0", "$ r5 = r15 style", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r7 = org apache poi xwpf usermodel x w p f document r0", "$ r2 = r7 table", "$ r2 set i0 r1", "r8 = org apache poi xwpf usermodel x w p f document r0", "$ r4 = r8 ct document", "$ r5 = $ r4 get body", "$ r6 = r1 get c t tbl", "$ r5 set tbl array i0 $ r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi xwpf usermodel x w p f document r0", "$ r2 = r3 setting", "$ r1 = org openxmlformats schemas wordprocessingml x2006 main s t doc protect form", "$ r2 set enforcement edit value $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache poi xwpf usermodel x w p f document r0", "$ r2 = r3 setting", "$ z0 = $ r2 validate protection password r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi xwpf usermodel x w p f document r0", "$ r1 = r2 setting", "$ z0 = $ r1 be track revision", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi xwpf usermodel x w p f document r0", "$ r1 = r2 setting", "$ l0 = $ r1 get zoom percent", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache poi xwpf usermodel x w p f document r0", "$ r1 = r2 setting", "$ r1 set even and odd heading z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi xwpf usermodel x w p f document r0", "$ r1 = r2 setting", "$ z0 = $ r1 get mirror margin", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r9 = org apache poi xwpf usermodel x w p f document r0", "$ r4 = r9 body element", "$ r4 add i0 r1", "i2 = 0", "r10 = org apache poi xwpf usermodel x w p f document r0", "$ r5 = r10 ct document", "$ r6 = $ r5 get body", "r2 = $ r6 get tbl array", "i1 = lengthof r2", "i3 = 0", "label if i3 > = i1 goto label3", "r3 = r2 [ i3 ]", "$ r8 = r1 get c t tbl", "if r3 ! = $ r8 goto label2", "goto label3", "label r11 = org apache poi xwpf usermodel x w p f document r0", "$ r7 = r11 table", "$ r7 add i2 r1", "return", "if r3 ! = $ r8 goto label2", "label i2 = i2 + 1", "i3 = i3 + 1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r11 = org apache poi xwpf usermodel x w p f document r0", "$ r1 = r11 get all package picture", "$ i1 = $ r1 size", "i2 = $ i1 + 1", "$ r2 = org apache poi xwpf usermodel x w p f picture data relation", "$ r3 = $ r2 [ i0 ]", "r8 = $ r3 get file name i2", "r9 = org apache poi openxml4j opc package u r i helper create part name r8", "label r12 = org apache poi xwpf usermodel x w p f document r0", "$ r4 = r12 get package", "$ r5 = $ r4 get part r9", "if $ r5 == null goto label2", "i2 = i2 + 1", "$ r6 = org apache poi xwpf usermodel x w p f picture data relation", "$ r7 = $ r6 [ i0 ]", "r10 = $ r7 get file name i2", "r9 = org apache poi openxml4j opc package u r i helper create part name r10", "goto label1", "if $ r5 == null goto label2", "label return i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache poi xwpf usermodel x w p f endnotes r0", "$ r4 = r9 ct endnotes", "r2 = $ r4 add new endnote", "r10 = org apache xmlbeans xml object r1", "r2 set r10", "r8 = new org apache poi xwpf usermodel x w p f endnote", "specialinvoke r8 < init > r2 r0", "r11 = org apache poi xwpf usermodel x w p f endnotes r0", "$ r7 = r11 list footnote", "$ r7 add r8", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r15 = null", "$ r5 = r1 get run", "$ i0 = $ r5 size", "if $ i0 < = 0 goto label1", "$ r13 = r1 get run", "$ r14 = $ r13 get 0", "r15 = org apache poi xwpf usermodel x w p f run $ r14", "label if r15 ! = null goto label2", "r15 = r1 create run", "label r2 = r15 get c t r", "z1 = 0", "$ r6 = r2 get footnote reference list", "r3 = $ r6 iterator", "label $ z2 = r3 have next", "if $ z2 == 0 goto label5", "$ r10 = r3 next", "r4 = org openxmlformats schemas wordprocessingml x2006 main c t ftn edn ref $ r10", "r16 = org apache poi xwpf usermodel x w p f footnote r0", "$ r11 = r16 get id", "$ r12 = r4 get id", "$ z0 = $ r11 equal $ r12", "if $ z0 == 0 goto label4", "z1 = 1", "goto label5", "label if z1 ! = 0 goto label6", "$ r7 = r2 add new r pr", "$ r8 = $ r7 add new r style", "$ r8 set val \\ `` footnote reference\\ ``", "r2 add new footnote ref", "label return", "if $ z0 == 0 goto label4", "label goto label3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r7 = new org apache poi xwpf usermodel x w p f paragraph", "r8 = org apache poi xwpf usermodel x w p f header footer r0", "$ r3 = r8 header footer", "$ r4 = $ r3 add new p", "specialinvoke r7 < init > $ r4 r0", "r9 = org apache poi xwpf usermodel x w p f header footer r0", "$ r5 = r9 paragraph", "$ r5 add r7", "r10 = org apache poi xwpf usermodel x w p f header footer r0", "$ r6 = r10 body element", "$ r6 add r7", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache poi xwpf usermodel x w p f number r0", "r2 = r9 get num r1", "if r2 ! = null goto label1", "return null", "if r2 ! = null goto label1", "label $ r3 = r2 get c t num", "if $ r3 ! = null goto label2", "label $ r4 = r2 get c t num", "$ r5 = $ r4 get abstract num id", "if $ r5 ! = null goto label3", "label $ r6 = r2 get c t num", "$ r7 = $ r6 get abstract num id", "$ r8 = $ r7 get val", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache poi xwpf usermodel x w p f style r0", "r2 = r3 get c t language", "r2 set val r1", "r2 set bidi r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache poi xwpf usermodel x w p f style r0", "r2 = r3 get c t language", "r2 set east asia r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = new org apache poi xwpf usermodel x w p f paragraph", "r6 = org apache poi xwpf usermodel x w p f table cell r0", "$ r3 = r6 ct tc", "$ r4 = $ r3 add new p", "specialinvoke r5 < init > $ r4 r0", "r7 = org apache poi xwpf usermodel x w p f table cell r0", "r7 add paragraph r5", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache poi xwpf usermodel x w p f table cell r0", "$ r2 = specialinvoke r3 get tc width", "org apache poi xwpf usermodel x w p f table set width value r1 $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i0 = @ parameter0", "if i0 < = 6 goto label1", "$ i3 = org apache poi hdgf chunk chunk header v11 get header size", "return $ i3", "if i0 < = 6 goto label1", "label if i0 ! = 6 goto label2", "$ i2 = org apache poi hdgf chunk chunk header v6 get header size", "return $ i2", "label if i0 ! = 6 goto label2", "label $ i1 = org apache poi hdgf chunk chunk header v4 v5 get header size", "return $ i1"], "adj": [[1], [2], [3], [], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hdgf stream compress stream store r0", "$ z0 = r2 block header in content", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label r3 = org apache poi hdgf stream compress stream store r0", "$ r1 = r3 block header", "r4 = org apache poi hdgf stream compress stream store r0", "r4 prepend content with $ r1", "r5 = org apache poi hdgf stream compress stream store r0", "r5 block header in content = 1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r20 = @ parameter0", "r28 = org apache poi hmef extractor h m e f content extractor r0", "r1 = r28 get body attribute", "if r1 ! = null goto label1", "$ r14 = java lang system err", "r24 = new java lang string builder", "specialinvoke r24 < init >", "$ r15 = r24 append \\ `` no message body find \\ ``", "$ r16 = $ r15 append r20", "$ r17 = $ r16 append \\ `` not created\\ ``", "$ r18 = $ r17 to string", "$ r14 println $ r18", "return", "if r1 ! = null goto label1", "label $ z0 = r1 instanceof org apache poi hmef attribute m a p i string attribute", "if $ z0 == 0 goto label3", "r21 = r20 to string", "$ z1 = r21 end with \\ `` rtf\\ ``", "if $ z1 == 0 goto label2", "$ i0 = r21 length", "$ i1 = $ i0 - 4", "r21 = r21 substring 0 $ i1", "label r26 = new java io file", "r25 = new java lang string builder", "specialinvoke r25 < init >", "$ r10 = r25 append r21", "$ r11 = $ r10 append \\ `` txt\\ ``", "$ r12 = $ r11 to string", "specialinvoke r26 < init > $ r12", "r20 = r26", "label r27 = new java io file output stream", "specialinvoke r27 < init > r20", "label $ z2 = r1 instanceof org apache poi hmef attribute m a p i string attribute", "if $ z2 == 0 goto label5", "$ r5 = org apache poi hmef attribute m a p i string attribute r1", "r2 = $ r5 get data string", "$ r6 = org apache poi util string util utf8", "$ r7 = r2 get bytes $ r6", "r27 write $ r7", "goto label6", "label r27 close", "goto label9", "label return", "if $ z2 == 0 goto label5", "label $ r4 = r1 get data", "r27 write $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [], [44], [45], [46], []]}
{"nodes": ["r0 = @ this", "r5 = org apache poi hpbf dev h p b f dumper r0", "$ r2 = r5 f", "$ r3 = $ r2 get root", "$ r4 = $ r3 get entry \\ `` escher\\ ``", "r1 = org apache poi poifs filesystem directory node $ r4", "r6 = org apache poi hpbf dev h p b f dumper r0", "r6 dump escher stm r1", "r7 = org apache poi hpbf dev h p b f dumper r0", "r7 dump escher delay stm r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "i5 = 0", "i6 = 0", "label r8 = org apache poi hpbf model escher part r0", "$ r1 = r8 record", "$ i1 = lengthof $ r1", "if i6 > = $ i1 goto label2", "r9 = org apache poi hpbf model escher part r0", "$ r5 = r9 record", "$ r6 = $ r5 [ i6 ]", "$ i4 = $ r6 get record size", "i5 = i5 + $ i4", "i6 = i6 + 1", "goto label1", "if i6 > = $ i1 goto label2", "label $ l2 = long i5", "r7 = org apache poi util i o utils safely allocate $ l2 1000000", "i7 = 0", "i8 = 0", "label r10 = org apache poi hpbf model escher part r0", "$ r2 = r10 record", "$ i3 = lengthof $ r2", "if i8 > = $ i3 goto label4", "r11 = org apache poi hpbf model escher part r0", "$ r3 = r11 record", "$ r4 = $ r3 [ i8 ]", "i0 = $ r4 serialize i7 r7", "i7 = i7 + i0", "i8 = i8 + 1", "goto label3", "if i8 > = $ i3 goto label4", "label r12 = org apache poi hpbf model escher part r0", "r12 set data r7", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "if $ i0 > = 1 goto label1", "$ r2 = java lang system err", "$ r2 println \\ `` useage\\ ``", "$ r3 = java lang system err", "$ r3 println \\ `` \\t power point extractor [ -notes ] < file > \\ ``", "java lang system exit 1", "label z1 = 0", "z2 = 0", "$ i1 = lengthof r0", "if $ i1 < = 1 goto label2", "z1 = 1", "r4 = r0 [ 1 ]", "$ i2 = lengthof r0", "if $ i2 < = 2 goto label3", "z2 = 1", "goto label3", "label $ r5 = new org apache poi hslf extractor power point extractor", "specialinvoke $ r5 < init > r4", "$ r6 = java lang system out", "$ r7 = $ r5 get text 1 z1 z2 1", "$ r6 println $ r7", "$ r5 close", "return", "if $ i1 < = 1 goto label2", "label r4 = r0 [ 0 ]"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache poi hslf model header footer r0", "r5 set header visible 1", "r6 = org apache poi hslf model header footer r0", "$ r2 = r6 _container", "r4 = $ r2 get header atom", "if r4 ! = null goto label1", "r7 = org apache poi hslf model header footer r0", "$ r3 = r7 _container", "r4 = $ r3 add header atom", "label r4 set text r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache poi hslf model header footer r0", "r5 set footer visible 1", "r6 = org apache poi hslf model header footer r0", "$ r2 = r6 _container", "r4 = $ r2 get footer atom", "if r4 ! = null goto label1", "r7 = org apache poi hslf model header footer r0", "$ r3 = r7 _container", "r4 = $ r3 add footer atom", "label r4 set text r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r30 = org apache poi hslf model textproperties bite mask text prop r0", "r30 set write mask i1", "r31 = org apache poi hslf model textproperties bite mask text prop r0", "$ i4 = specialinvoke r31 mask value i0", "specialinvoke r0 set value $ i4", "$ i5 = specialinvoke r0 get value", "if i0 == $ i5 goto label4", "$ r5 = org apache poi hslf model textproperties bite mask text prop logger", "$ r3 = newarray java lang object [ 1 ]", "r27 = new java lang string builder", "specialinvoke r27 < init >", "$ r6 = r27 append \\ `` style property of \\'\\ ``", "r32 = org apache poi hslf model textproperties bite mask text prop r0", "$ r7 = r32 get name", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 append \\ `` \\ ' don\\'t match mask - output will be sanitized\\ ``", "$ r10 = $ r9 to string", "$ r3 [ 0 ] = $ r10", "$ r5 log 5 $ r3", "$ r11 = org apache poi hslf model textproperties bite mask text prop logger", "$ z0 = $ r11 check 1", "if $ z0 == 0 goto label4", "r29 = new java lang string builder", "r28 = new java lang string builder", "specialinvoke r28 < init >", "$ r14 = r28 append \\ `` the following style attribute of the \\'\\ ``", "r33 = org apache poi hslf model textproperties bite mask text prop r0", "$ r15 = r33 get name", "$ r16 = $ r14 append $ r15", "$ r17 = $ r16 append \\ `` \\ ' property will be ignored\\n\\ ``", "$ r18 = $ r17 to string", "specialinvoke r29 < init > $ r18", "i7 = 0", "r34 = org apache poi hslf model textproperties bite mask text prop r0", "r2 = r34 sub prop mask", "i2 = lengthof r2", "i8 = 0", "label if i8 > = i2 goto label3", "i3 = r2 [ i8 ]", "r35 = org apache poi hslf model textproperties bite mask text prop r0", "$ r22 = r35 sub prop match", "$ z1 = $ r22 [ i7 ]", "if $ z1 ! = 0 goto label2", "$ i6 = i0 & i3", "if $ i6 == 0 goto label2", "r36 = org apache poi hslf model textproperties bite mask text prop r0", "$ r23 = r36 sub prop name", "$ r24 = $ r23 [ i7 ]", "$ r25 = r29 append $ r24", "$ r25 append \\", "label i7 = i7 + 1", "i8 = i8 + 1", "goto label1", "label if i8 > = i2 goto label3", "label $ r20 = org apache poi hslf model textproperties bite mask text prop logger", "$ r19 = newarray java lang object [ 1 ]", "$ r21 = r29 to string", "$ r19 [ 0 ] = $ r21", "$ r20 log 1 $ r19", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [], [57], [58], [59], [60], [61], [62], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache poi hslf model textproperties bite mask text prop r0", "$ r1 = r3 sub prop match", "$ z0 = $ r1 [ i0 ]", "if $ z0 == 0 goto label1", "$ i1 = specialinvoke r0 get value", "r4 = org apache poi hslf model textproperties bite mask text prop r0", "$ r2 = r4 sub prop mask", "$ i2 = $ r2 [ i0 ]", "$ i3 = $ i1 & $ i2", "if $ i3 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ i3 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r0 ! = r1 goto label1", "return 1", "if r0 ! = r1 goto label1", "label if r1 ! = null goto label2", "return 0", "label if r1 ! = null goto label2", "label $ r3 = r0 get class", "$ r4 = r1 get class", "if $ r3 == $ r4 goto label3", "label r2 = org apache poi hslf model textproperties text prop collection r1", "$ i1 = r2 mask special", "r7 = org apache poi hslf model textproperties text prop collection r0", "$ i0 = r7 mask special", "if $ i1 ! = $ i0 goto label4", "$ s3 = r2 indent level", "r8 = org apache poi hslf model textproperties text prop collection r0", "$ s2 = r8 indent level", "if $ s3 == $ s2 goto label5", "label return 0", "if $ s3 == $ s2 goto label5", "label r9 = org apache poi hslf model textproperties text prop collection r0", "$ r6 = r9 text prop", "$ r5 = r2 text prop", "$ z0 = $ r6 equal $ r5", "return $ z0"], "adj": [[1], [2], [3], [], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hslf record animation info atom r0", "$ r1 = r2 _recdata", "$ i0 = org apache poi util little endian get int $ r1 18", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hslf record c string r0", "$ r1 = r2 _header", "$ s0 = org apache poi util little endian get short $ r1", "return $ s0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i2 = 0", "label r6 = org apache poi hslf record document r0", "$ r1 = r6 slwts", "$ i0 = lengthof $ r1", "if i2 > = $ i0 goto label3", "r7 = org apache poi hslf record document r0", "$ r2 = r7 slwts", "$ r3 = $ r2 [ i2 ]", "$ i1 = $ r3 get instance", "if $ i1 ! = 1 goto label2", "r8 = org apache poi hslf record document r0", "$ r4 = r8 slwts", "$ r5 = $ r4 [ i2 ]", "return $ r5", "if $ i1 ! = 1 goto label2", "label i2 = i2 + 1", "goto label1", "if i2 > = $ i0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hslf record environment r0", "$ r1 = r2 font collection", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hslf record escher textbox wrapper r0", "$ l0 = r1 _type", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hslf record ex m c i movie r0", "$ r1 = r2 ex video", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r12 = new java util array list", "specialinvoke r12 < init >", "i2 = 0", "label r13 = org apache poi hslf record ex obj list r0", "$ r3 = r13 _children", "$ i0 = lengthof $ r3", "if i2 > = $ i0 goto label3", "r14 = org apache poi hslf record ex obj list r0", "$ r7 = r14 _children", "$ r8 = $ r7 [ i2 ]", "$ z0 = $ r8 instanceof org apache poi hslf record ex hyperlink", "if $ z0 == 0 goto label2", "r15 = org apache poi hslf record ex obj list r0", "$ r9 = r15 _children", "$ r10 = $ r9 [ i2 ]", "$ r11 = org apache poi hslf record ex hyperlink $ r10", "r12 add $ r11", "label i2 = i2 + 1", "goto label1", "if i2 > = $ i0 goto label3", "label $ i1 = r12 size", "$ r4 = newarray org apache poi hslf record ex hyperlink [ $ i1 ]", "$ r5 = r12 to array $ r4", "$ r6 = org apache poi hslf record ex hyperlink [ ] $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache poi hslf record ex obj list atom r0", "$ r1 = r2 _data", "org apache poi util little endian put int $ r1 0 i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hslf record ex ole obj atom r0", "$ r1 = r2 _data", "$ i0 = org apache poi util little endian get int $ r1 0", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hslf record ex ole obj atom r0", "$ r1 = r2 _data", "$ i0 = org apache poi util little endian get int $ r1 4", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache poi hslf record ex ole obj atom r0", "$ r2 = r4 _header", "r1 write $ r2", "r5 = org apache poi hslf record ex ole obj atom r0", "$ r3 = r5 _data", "r1 write $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i3 = 0", "r5 = org apache poi hslf record master text prop atom r0", "$ r3 = r5 indent", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label3", "$ r4 = r1 next", "r2 = org apache poi hslf model textproperties indent prop $ r4", "$ i1 = r2 get character cover", "i3 = i3 + $ i1", "if i0 > = i3 goto label2", "$ i2 = r2 get indent level", "return $ i2", "if i0 > = i3 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r9 = org apache poi hslf record p p draw r0", "$ r4 = r9 dg", "if $ r4 ! = null goto label3", "r10 = org apache poi hslf record p p draw r0", "r1 = r10 get dg container", "if r1 == null goto label3", "$ r5 = r1 get child record", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r6 = r2 next", "r3 = org apache poi ddf escher record $ r6", "$ z1 = r3 instanceof org apache poi ddf escher dg record", "if $ z1 == 0 goto label2", "$ r7 = org apache poi ddf escher dg record r3", "r11 = org apache poi hslf record p p draw r0", "r11 dg = $ r7", "goto label3", "label r12 = org apache poi hslf record p p draw r0", "$ r8 = r12 dg", "return $ r8", "if $ z1 == 0 goto label2", "label goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [], [23], []]}
{"nodes": ["i0 = @ parameter0", "r0 = @ parameter1", "r1 = newarray byte [ 4 ]", "org apache poi util little endian put int r1 0 i0", "r0 write r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r3 = org apache poi hslf record record container r0", "r1 = r3 _children", "i1 = lengthof r1", "i4 = 0", "label if i4 > = i1 goto label3", "r2 = r1 [ i4 ]", "$ l2 = r2 get record type", "$ b3 = $ l2 cmp l0", "if $ b3 ! = 0 goto label2", "return r2", "if $ b3 ! = 0 goto label2", "label i4 = i4 + 1", "goto label1", "label if i4 > = i1 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi hslf record sound r0", "$ r1 = r3 _name", "$ r2 = $ r1 get text", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache poi hslf record style text prop9 atom r0", "$ r1 = r2 data", "org apache poi util little endian put int $ r1 0 i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ l0 = org apache poi hslf record style text prop atom _type", "return $ l0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r5 = new org apache poi hslf model textproperties text prop collection", "$ r3 = org apache poi hslf model textproperties text prop collection $ text prop type character", "specialinvoke r5 < init > i0 $ r3", "r6 = org apache poi hslf record style text prop atom r0", "$ r4 = r6 char style", "$ r4 add r5", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "$ l0 = org apache poi hslf record text char atom _type", "return $ l0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ l0 = org apache poi hslf record tx master style atom _type", "return $ l0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hslf record tx master style atom r0", "$ r1 = r2 char style", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ l0 = org apache poi hslf record user edit atom _type", "return $ l0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "if i0 < 0 goto label1", "if i0 < = 9 goto label2", "label r2 = new java lang illegal argument exception", "specialinvoke r2 < init > \\ `` the index of an adjustment value must be in the [ 0 9 ] range\\ ``", "throw r2", "if i0 < = 9 goto label2", "label $ i2 = 327 + i0", "$ s3 = short $ i2", "r3 = org apache poi hslf usermodel h s l f auto shape r0", "r3 set escher property $ s3 i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hslf usermodel h s l f note r0", "$ r1 = r2 _paragraphs", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 after insert r1", "r6 = org apache poi hslf usermodel h s l f picture shape r0", "r2 = r6 get escher b s e record", "$ i0 = r2 get ref", "$ i1 = $ i0 + 1", "r2 set ref $ i1", "r7 = org apache poi hslf usermodel h s l f picture shape r0", "r3 = r7 get anchor", "$ z0 = r3 be empty", "if $ z0 == 0 goto label1", "r5 = new org apache poi sl draw draw picture shape", "specialinvoke r5 < init > r0", "r5 resize", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ s1 = short i0", "$ r1 = r0 get child by id $ s1", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi hslf usermodel h s l f shape r0", "r1 = r3 get client data 0", "if r1 ! = null goto label1", "$ r2 = null", "goto label2", "label return $ r2", "if r1 ! = null goto label1", "label $ r2 = r1 get h s l f child record"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi hslf usermodel h s l f sheet r0", "$ r1 = r3 _container", "$ r2 = $ r1 get color scheme", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hslf usermodel h s l f slide show impl r0", "$ r1 = r2 _records", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi hsmf datatypes byte chunk r0", "$ r1 = r3 value", "$ r2 = org apache poi hsmf datatypes byte chunk to debug friendly string $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi hsmf extractor outlook text extactor r0", "$ r1 = r3 document", "$ r2 = org apache poi hsmf m a p i message $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r9 = org apache poi hsmf m a p i message r0", "$ r1 = r9 main chunk", "$ r2 = $ r1 get html body chunk binary", "if $ r2 == null goto label1", "r10 = org apache poi hsmf m a p i message r0", "$ r6 = r10 main chunk", "$ r7 = $ r6 get html body chunk binary", "$ r8 = $ r7 get as7bit string", "return $ r8", "if $ r2 == null goto label1", "label r11 = org apache poi hsmf m a p i message r0", "$ r3 = r11 main chunk", "$ r4 = $ r3 get html body chunk string", "r12 = org apache poi hsmf m a p i message r0", "$ r5 = r12 get string from chunk $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r4 = org apache poi hsmf m a p i message r0", "$ r1 = r4 main chunk", "$ r2 = $ r1 get display to chunk", "r5 = org apache poi hsmf m a p i message r0", "$ r3 = r5 get string from chunk $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "label r34 = new org apache poi hwpf converter word to text converter", "specialinvoke r34 < init >", "r35 = new org apache poi hwpf usermodel header story", "r37 = org apache poi hwpf extractor word extractor r0", "$ r4 = r37 doc", "specialinvoke r35 < init > $ r4", "$ r5 = r35 get first header subrange", "if $ r5 == null goto label02", "r38 = org apache poi hwpf extractor word extractor r0", "$ r26 = r38 doc", "$ r27 = r35 get first header subrange", "r39 = org apache poi hwpf h w p f document core $ r26", "r34 process document part r39 $ r27", "label $ r6 = r35 get even header subrange", "if $ r6 == null goto label03", "r40 = org apache poi hwpf extractor word extractor r0", "$ r24 = r40 doc", "$ r25 = r35 get even header subrange", "r41 = org apache poi hwpf h w p f document core $ r24", "r34 process document part r41 $ r25", "label $ r7 = r35 get odd header subrange", "if $ r7 == null goto label04", "r42 = org apache poi hwpf extractor word extractor r0", "$ r22 = r42 doc", "$ r23 = r35 get odd header subrange", "r43 = org apache poi hwpf h w p f document core $ r22", "r34 process document part r43 $ r23", "label r44 = org apache poi hwpf extractor word extractor r0", "$ r8 = r44 doc", "r45 = org apache poi hwpf h w p f document core $ r8", "r34 process document r45", "r46 = org apache poi hwpf extractor word extractor r0", "$ r10 = r46 doc", "r47 = org apache poi hwpf extractor word extractor r0", "$ r9 = r47 doc", "$ r11 = $ r9 get main textbox range", "r48 = org apache poi hwpf h w p f document core $ r10", "r34 process document part r48 $ r11", "$ r12 = r35 get first footer subrange", "if $ r12 == null goto label05", "r49 = org apache poi hwpf extractor word extractor r0", "$ r20 = r49 doc", "$ r21 = r35 get first footer subrange", "r50 = org apache poi hwpf h w p f document core $ r20", "r34 process document part r50 $ r21", "label $ r13 = r35 get even footer subrange", "if $ r13 == null goto label06", "r51 = org apache poi hwpf extractor word extractor r0", "$ r18 = r51 doc", "$ r19 = r35 get even footer subrange", "r52 = org apache poi hwpf h w p f document core $ r18", "r34 process document part r52 $ r19", "label $ r14 = r35 get odd footer subrange", "if $ r14 == null goto label07", "r53 = org apache poi hwpf extractor word extractor r0", "$ r16 = r53 doc", "$ r17 = r35 get odd footer subrange", "r54 = org apache poi hwpf h w p f document core $ r16", "r34 process document part r54 $ r17", "label $ r15 = r34 get text", "label return $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org apache poi poifs filesystem file magic prepare to check magic r0", "r2 = org apache poi poifs filesystem file magic value of r1", "$ r3 = org apache poi poifs filesystem file magic ole2", "if r2 == $ r3 goto label1", "$ r5 = new java lang illegal argument exception", "$ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "$ r7 = $ r6 append \\ `` the document be really a \\ ``", "$ r8 = $ r7 append r2", "$ r9 = $ r8 append \\ `` file\\ ``", "$ r10 = $ r9 to string", "specialinvoke $ r5 < init > $ r10", "throw $ r5", "if r2 == $ r3 goto label1", "label $ r4 = new org apache poi poifs filesystem p o i f s file system", "specialinvoke $ r4 < init > r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r4 = org apache poi hwpf model revision mark author table r0", "$ r1 = r4 entry", "$ r2 = java util array a list $ r1", "$ r3 = java util collection unmodifiable list $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hwpf model style sheet r0", "$ r1 = r2 _style description", "$ i0 = lengthof $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org apache poi hwpf model type b k f abstract type f col", "r2 = org apache poi hwpf model type b k f abstract type r0", "$ s0 = r2 field_2_bkf_flags", "$ i1 = $ r1 set boolean $ s0 z0", "$ s2 = short $ i1", "r3 = org apache poi hwpf model type b k f abstract type r0", "r3 field_2_bkf_flags = $ s2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org apache poi hwpf model type f l d abstract type f zombie embed", "r2 = org apache poi hwpf model type f l d abstract type r0", "$ b0 = r2 field_2_flt", "$ i1 = $ r1 set boolean $ b0 z0", "$ b2 = byte $ i1", "r3 = org apache poi hwpf model type f l d abstract type r0", "r3 field_2_flt = $ b2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hwpf model type f l d abstract type f result edit", "r2 = org apache poi hwpf model type f l d abstract type r0", "$ b0 = r2 field_2_flt", "$ z0 = $ r1 be set $ b0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hwpf model type s e p abstract type r0", "$ b0 = r1 field_10_grpf ihdt", "return $ b0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi hwpf model type s e p abstract type r0", "r2 field_20_brc top = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hwpf model type s e p abstract type r0", "$ i0 = r1 field_34_lnn min", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hwpf model type s e p abstract type r0", "r1 field_34_lnn min = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hwpf model type s e p abstract type r0", "r1 field_36_unused3 = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hwpf model type s e p abstract type r0", "r1 field_41_xa page n up = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hwpf model type s e p abstract type r0", "$ i0 = r1 field_47_dza gutter", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hwpf model type s e p abstract type r0", "r1 field_47_dza gutter = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "r1 = org apache poi hwpf model type s e p abstract type r0", "r1 field_56_dm orient first = b0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org apache poi hwpf model type t l p abstract type f color", "r2 = org apache poi hwpf model type t l p abstract type r0", "$ b0 = r2 field_2_tlp_flags", "$ i1 = $ r1 set boolean $ b0 z0", "$ b2 = byte $ i1", "r3 = org apache poi hwpf model type t l p abstract type r0", "r3 field_2_tlp_flags = $ b2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "label r8 = org apache poi hwpf usermodel paragraph r0", "$ r2 = r8 _props", "$ r3 = $ r2 clone", "$ r4 = org apache poi hwpf usermodel paragraph property $ r3", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache poi hwpf usermodel picture run mapper r0", "$ r2 = r3 claim", "$ z0 = $ r2 contain r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r9 = org apache poi hwpf usermodel range r0", "$ i0 = r9 _start", "if $ i0 < 0 goto label01", "$ z2 = 1", "goto label02", "label org apache poi util document format exception check $ z2 \\ `` start can\\'t be < 0\\ ``", "r10 = org apache poi hwpf usermodel range r0", "$ i1 = r10 _start", "r11 = org apache poi hwpf usermodel range r0", "$ r1 = r11 _text", "$ i2 = $ r1 length", "if $ i1 > $ i2 goto label03", "$ z3 = 1", "goto label04", "label org apache poi util document format exception check $ z3 \\ `` start can\\'t be > text length\\ ``", "r12 = org apache poi hwpf usermodel range r0", "$ i3 = r12 _end", "if $ i3 < 0 goto label05", "$ z4 = 1", "goto label06", "label org apache poi util document format exception check $ z4 \\ `` end can\\'t be < 0\\ ``", "r13 = org apache poi hwpf usermodel range r0", "$ i4 = r13 _end", "r14 = org apache poi hwpf usermodel range r0", "$ r2 = r14 _text", "$ i5 = $ r2 length", "if $ i4 > $ i5 goto label07", "$ z5 = 1", "goto label08", "label org apache poi util document format exception check $ z5 \\ `` end can\\'t be > text length\\ ``", "r15 = org apache poi hwpf usermodel range r0", "$ i7 = r15 _start", "r16 = org apache poi hwpf usermodel range r0", "$ i6 = r16 _end", "if $ i7 > $ i6 goto label09", "$ z6 = 1", "goto label10", "label org apache poi util document format exception check $ z6 \\ `` start can\\'t be > end\\ ``", "r17 = org apache poi hwpf usermodel range r0", "$ z0 = r17 _char range find", "if $ z0 == 0 goto label14", "r18 = org apache poi hwpf usermodel range r0", "i18 = r18 _char start", "label r19 = org apache poi hwpf usermodel range r0", "$ i13 = r19 _char end", "if i18 > = $ i13 goto label14", "r20 = org apache poi hwpf usermodel range r0", "$ r5 = r20 _characters", "$ r6 = $ r5 get i18", "r7 = org apache poi hwpf model chpx $ r6", "r21 = org apache poi hwpf usermodel range r0", "$ i14 = r21 _start", "$ i15 = r7 get start", "i19 = java lang math max $ i14 $ i15", "r22 = org apache poi hwpf usermodel range r0", "$ i16 = r22 _end", "$ i17 = r7 get end", "i20 = java lang math min $ i16 $ i17", "if i19 > = i20 goto label12", "$ z7 = 1", "goto label13", "label org apache poi util document format exception check $ z7 \\ `` leave must be < right\\ ``", "i18 = i18 + 1", "goto label11", "if i19 > = i20 goto label12", "label $ z7 = 0", "if i18 > = $ i13 goto label14", "label r23 = org apache poi hwpf usermodel range r0", "$ z1 = r23 _par range find", "if $ z1 == 0 goto label18", "r24 = org apache poi hwpf usermodel range r0", "i21 = r24 _par start", "label r25 = org apache poi hwpf usermodel range r0", "$ i8 = r25 _par end", "if i21 > = $ i8 goto label18", "r26 = org apache poi hwpf usermodel range r0", "$ r3 = r26 _paragraphs", "$ r4 = $ r3 get i21", "r8 = org apache poi hwpf model papx $ r4", "r27 = org apache poi hwpf usermodel range r0", "$ i9 = r27 _start", "$ i10 = r8 get start", "i22 = java lang math max $ i9 $ i10", "r28 = org apache poi hwpf usermodel range r0", "$ i11 = r28 _end", "$ i12 = r8 get end", "i23 = java lang math min $ i11 $ i12", "if i22 > = i23 goto label16", "$ z8 = 1", "goto label17", "label org apache poi util document format exception check $ z8 \\ `` leave must be < right\\ ``", "i21 = i21 + 1", "goto label15", "if i22 > = i23 goto label16", "label $ z8 = 0", "if i21 > = $ i8 goto label18", "label return 1", "if $ i7 > $ i6 goto label09", "label $ z6 = 0", "if $ i4 > $ i5 goto label07", "label $ z5 = 0", "if $ i3 < 0 goto label05", "label $ z4 = 0", "if $ i1 > $ i2 goto label03", "label $ z3 = 0", "if $ i0 < 0 goto label01", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [], [63], [64], [], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [], [92], [93], [], [95], [96], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hwpf usermodel section r0", "$ r1 = r2 _props", "$ s0 = $ r1 get rnc edn", "return $ s0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hwpf usermodel section r0", "$ r1 = r2 _props", "$ i0 = $ r1 get nfc edn ref", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com google protobuf any r0", "$ r1 = r2 value_", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "i2 = @ parameter3", "$ i3 = i0 + i2", "r2 = com google protobuf byte string r0", "$ i4 = r2 size", "com google protobuf byte string check range i0 $ i3 $ i4", "$ i7 = i1 + i2", "$ i6 = lengthof r1", "com google protobuf byte string check range i1 $ i7 $ i6", "if i2 < = 0 goto label1", "r3 = com google protobuf byte string r0", "r3 copy to internal r1 i0 i1 i2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "$ r1 = com google protobuf cod input stream new instance r0 0 $ i0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "if r0 ! = null goto label1", "$ r2 = com google protobuf internal empty_byte_array", "$ r3 = com google protobuf cod input stream new instance $ r2", "return $ r3", "if r0 ! = null goto label1", "label r4 = new com google protobuf cod input stream $ stream decoder", "specialinvoke r4 < init > r0 i0 null", "r5 = com google protobuf cod input stream r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["l0 = @ parameter0", "$ l3 = l0 > > > 1", "$ l1 = l0 & 1l", "$ l2 = neg $ l1", "$ l4 = $ l3 ^ $ l2", "return $ l4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = lengthof r1", "r2 = com google protobuf cod output stream r0", "r2 write r1 0 $ i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com google protobuf cod output stream r0", "r1 write int32 no tag i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = new com google protobuf extension registry", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = new java util hash set", "specialinvoke r13 < init >", "r14 = com google protobuf extension registry r0", "$ r6 = r14 immutable extension by number", "$ r7 = $ r6 key set", "r3 = $ r7 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r8 = r3 next", "r4 = com google protobuf extension registry $ descriptor int pair $ r8", "$ r9 = com google protobuf extension registry $ descriptor int pair access $ 000 r4", "$ r10 = $ r9 get full name", "$ z1 = $ r10 equal r1", "if $ z1 == 0 goto label2", "r15 = com google protobuf extension registry r0", "$ r11 = r15 immutable extension by number", "$ r12 = $ r11 get r4", "r13 add $ r12", "label goto label1", "if $ z0 == 0 goto label3", "label return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = com google protobuf int32 value r0", "$ i0 = r1 value_", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com google protobuf int64 value r0", "$ l0 = r1 value_", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new com google protobuf lazy field lite", "specialinvoke $ r2 < init >", "$ r2 set value r0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com google protobuf lazy field lite r0", "r2 = r3 value", "r4 = com google protobuf lazy field lite r0", "r4 delay bytes = null", "r5 = com google protobuf lazy field lite r0", "r5 memoized byte = null", "r6 = com google protobuf lazy field lite r0", "r6 value = r1", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = com google protobuf option r0", "$ r1 = r2 value_", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = com google protobuf repeat field builder r0", "$ r1 = r2 message", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = com google protobuf repeat field builder r0", "$ r1 = r5 external message list", "if $ r1 ! = null goto label1", "r4 = new com google protobuf repeat field builder $ message external list", "r6 = com google protobuf repeat field builder r0", "specialinvoke r4 < init > r6", "r7 = com google protobuf repeat field builder r0", "r7 external message list = r4", "label r8 = com google protobuf repeat field builder r0", "$ r2 = r8 external message list", "r9 = java util list $ r2", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r5 = com google protobuf source context r0", "r1 = r5 file name_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google protobuf source context r0", "r6 file name_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = com google protobuf text format parse info tree r0", "$ r3 = r6 subtrees from field", "$ r4 = $ r3 get r1", "r2 = java util list $ r4", "if r2 ! = null goto label1", "$ r5 = java util collection empty list", "goto label2", "label return $ r5", "if r2 ! = null goto label1", "label $ r5 = r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = com google protobuf timestamp r0", "$ i0 = r1 nanos_", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = io quarkus arc deployment custom scope annotation build item r0", "$ r4 = r7 custom scope name", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = org jboss jandex dot name $ r5", "$ r6 = r1 class annotation r3", "if $ r6 == null goto label2", "return 1", "if $ r6 == null goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io quarkus bootstrap resolver maven bootstrap maven context config r0", "r2 user setting = r1", "r3 = io quarkus bootstrap resolver maven bootstrap maven context config r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = new io quarkus builder build step builder", "r3 = io quarkus builder build chain builder r0", "specialinvoke r2 < init > r3", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org wildfly common assert check not null param \\ `` type\\", "r19 = io quarkus builder build context r0", "$ z0 = r19 run", "if $ z0 ! = 0 goto label1", "$ r16 = io quarkus builder message msg", "$ r17 = $ r16 build step not run", "throw $ r17", "if $ z0 ! = 0 goto label1", "label r18 = new io quarkus builder item id", "specialinvoke r18 < init > r1", "$ z1 = r18 be multi", "if $ z1 == 0 goto label2", "$ r14 = io quarkus builder message msg", "$ r15 = $ r14 can not multi r18", "throw $ r15", "if $ z1 == 0 goto label2", "label r20 = io quarkus builder build context r0", "$ r5 = r20 step info", "$ r6 = $ r5 get consumes", "$ z2 = $ r6 contain r18", "if $ z2 ! = 0 goto label3", "$ r12 = io quarkus builder message msg", "$ r13 = $ r12 undeclared item r18", "throw $ r13", "if $ z2 ! = 0 goto label3", "label r21 = io quarkus builder build context r0", "$ r7 = r21 execution", "$ r8 = $ r7 get single", "$ r9 = $ r8 get r18", "$ r10 = r1 cast $ r9", "$ r11 = io quarkus builder item simple build item $ r10", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = io quarkus builder build context r0", "$ r5 = r9 execution", "r4 = $ r5 get diagnostics", "r8 = new io quarkus builder diag diagnostic", "$ r7 = io quarkus builder diag diagnostic $ level note", "specialinvoke r8 < init > $ r7 r1 r2 r3", "r4 add r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org wildfly common assert check not null param \\ `` type\\", "$ r3 = class \\ `` lio quarkus builder item empty build item \\ ``", "$ z0 = $ r3 be assignable from r1", "if $ z0 == 0 goto label1", "r8 = new java lang illegal argument exception", "specialinvoke r8 < init > \\ `` can not consume an empty build item\\ ``", "throw r8", "if $ z0 == 0 goto label1", "label r9 = new io quarkus builder item id", "specialinvoke r9 < init > r1", "$ r6 = io quarkus builder constraint real", "$ r5 = io quarkus builder consume flag none", "r10 = io quarkus builder build step builder r0", "specialinvoke r10 add consumes r9 $ r6 $ r5", "r11 = io quarkus builder build step builder r0", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ z0 = r0 be empty", "if $ z0 == 0 goto label2", "label $ r1 = new java lang illegal argument exception", "specialinvoke $ r1 < init > \\ `` at least one key element be require to build a cache key\\ ``", "throw $ r1", "if $ z0 == 0 goto label2", "label $ i0 = r0 size", "if $ i0 ! = 1 goto label4", "$ r3 = r0 get 0", "if $ r3 ! = null goto label3", "$ r5 = new java lang null pointer exception", "specialinvoke $ r5 < init > \\ `` null key be not support by the quarkus application data cache\\ ``", "throw $ r5", "if $ r3 ! = null goto label3", "label $ r4 = r0 get 0", "return $ r4", "if $ i0 ! = 1 goto label4", "label $ r2 = new io quarkus cache runtime cache key builder $ composite cache key", "specialinvoke $ r2 < init > r0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["io quarkus runtime application lifecycle manager exit -1", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r15 = @ parameter0", "r16 = r15 trim", "$ z0 = r16 be empty", "if $ z0 == 0 goto label1", "return null", "if $ z0 == 0 goto label1", "label $ r5 = io quarkus runtime configuration memory size converter memory_size_pattern", "r1 = $ r5 matcher r16", "$ z1 = r1 find", "if $ z1 == 0 goto label4", "$ r9 = new java math big integer", "$ r10 = r1 group 1", "specialinvoke $ r9 < init > $ r10", "$ r11 = r1 group 2", "r3 = $ r11 to upper case", "$ r12 = io quarkus runtime configuration memory size converter memory_size_multipliers", "$ r13 = $ r12 get r3", "r4 = java math big integer $ r13", "if r4 ! = null goto label2", "$ r17 = new io quarkus runtime configuration memory size", "specialinvoke $ r17 < init > $ r9", "goto label3", "label return $ r17", "if r4 ! = null goto label2", "label $ r17 = new io quarkus runtime configuration memory size", "$ r14 = $ r9 multiply r4", "specialinvoke $ r17 < init > $ r14", "if $ z1 == 0 goto label4", "label $ r6 = new java lang illegal argument exception", "$ r7 = newarray java lang object [ 1 ]", "$ r7 [ 0 ] = r16", "$ r8 = java lang string format \\ `` value % s not in correct format regular expression [ 0-9 ] + [ bb kk mm gg tt pp ee zz yy ] ? \\", "specialinvoke $ r6 < init > $ r8", "throw $ r6"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ parameter0", "io quarkus runtime quarkus run null r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r6 = io quarkus deployment builditem archive root build item r0", "$ r2 = r6 path", "r1 = $ r2 iterator", "$ r3 = r1 next", "r5 = java nio file path $ r3", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r4 = r1 next", "r5 = java nio file path $ r4", "goto label1", "if $ z0 == 0 goto label2", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r2 = io quarkus deployment builditem archive root build item r0", "$ r1 = r2 archive root", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io quarkus deployment builditem live reload build item r0", "$ r2 = r4 reload context", "$ r3 = $ r2 get r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z1 = r1 have next", "if $ z1 ! = 0 goto label2", "r12 = io quarkus deployment configuration match config pattern map r0", "$ r9 = r12 match", "if $ r9 == null goto label1", "r13 = io quarkus deployment configuration match config pattern map r0", "$ r10 = r13 match", "$ z2 = java util object equal r2 $ r10", "return $ z2", "if $ r9 == null goto label1", "label r14 = io quarkus deployment configuration match config pattern map r0", "r14 match = r2", "return 1", "if $ z1 ! = 0 goto label2", "label r1 next", "label r15 = io quarkus deployment configuration match config pattern map r0", "$ r4 = r15 child", "$ r5 = io quarkus deployment configuration match config pattern map get key r1", "$ r6 = config pattern map $ lambda_add pattern_0__2 bootstrap $", "$ r7 = $ r4 compute if absent $ r5 $ r6", "$ r8 = io quarkus deployment configuration match config pattern map $ r7", "z0 = $ r8 add pattern r1 r2", "label r1 previous", "return z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r4 = io quarkus hibernate orm runtime j p a config r0", "$ r1 = r4 multi tenancy strategy", "$ r2 = $ r1 get", "$ r3 = org hibernate multi tenancy strategy $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = io quarkus hibernate orm panache runtime jpa operation implementation injection miss", "throw $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = io quarkus hibernate orm panache runtime jpa operation be persistent r1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "entermonitor r0", "label r14 = org infinispan quarkus hibernate cache put from load validator r0", "$ i0 = r14 region invalidation", "$ i1 = $ i0 - 1", "r15 = org infinispan quarkus hibernate cache put from load validator r0", "r15 region invalidation = $ i1", "if $ i1 ! = 0 goto label2", "r16 = org infinispan quarkus hibernate cache put from load validator r0", "$ r7 = r16 next timestamp", "$ r8 = $ r7 get", "$ r9 = java lang long $ r8", "$ l3 = $ r9 long value", "r17 = org infinispan quarkus hibernate cache put from load validator r0", "r17 region invalidation timestamp = $ l3", "$ z1 = org infinispan quarkus hibernate cache put from load validator trace", "if $ z1 == 0 goto label3", "$ r10 = org infinispan quarkus hibernate cache put from load validator log", "r18 = org infinispan quarkus hibernate cache put from load validator r0", "$ r11 = r18 region name", "r19 = org infinispan quarkus hibernate cache put from load validator r0", "$ l4 = r19 region invalidation timestamp", "$ r12 = java lang long value of $ l4", "$ r10 tracef \\ `` finish invalidating region % s at % d\\", "goto label3", "label exitmonitor r0", "label goto label7", "label return", "if $ i1 ! = 0 goto label2", "label $ z0 = org infinispan quarkus hibernate cache put from load validator trace", "if $ z0 == 0 goto label3", "$ r4 = org infinispan quarkus hibernate cache put from load validator log", "r20 = org infinispan quarkus hibernate cache put from load validator r0", "$ r5 = r20 region name", "r21 = org infinispan quarkus hibernate cache put from load validator r0", "$ i2 = r21 region invalidation", "$ r6 = java lang integer value of $ i2", "$ r4 tracef \\ `` finish invalidating region % s but there be % d ongoing invalidations\\"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new io quarkus panache common sort", "specialinvoke $ r2 < init >", "$ r3 = $ r2 and r0 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = r0 get name", "$ c0 = java io file separator char", "$ r4 = $ r3 replace 46 $ c0", "$ r5 = $ r2 append $ r4", "$ r6 = $ r5 append \\ `` class\\ ``", "r1 = $ r6 to string", "$ r7 = r0 get class loader", "$ r8 = new java lang string builder", "specialinvoke $ r8 < init >", "$ r9 = r0 get name", "$ r10 = $ r9 replace 46 47", "$ r11 = $ r8 append $ r10", "$ r12 = $ r11 append \\ `` class\\ ``", "$ r13 = $ r12 to string", "r40 = $ r7 get resource $ r13", "$ r14 = r40 get protocol", "$ z0 = $ r14 equal \\ `` jar\\ ``", "if $ z0 == 0 goto label4", "label $ r29 = r40 get file", "$ r30 = r40 get file", "$ i4 = $ r30 index of 33", "$ r31 = $ r29 substring 0 $ i4", "$ r32 = java net uri create $ r31", "r41 = $ r32 to u r l", "$ r33 = io quarkus test common path test helper to path r41", "label return $ r33", "if $ z0 == 0 goto label4", "label $ z1 = io quarkus test common path test helper be in test dir r40", "if $ z1 ! = 0 goto label5", "$ r20 = new java lang runtime exception", "$ r21 = new java lang string builder", "specialinvoke $ r21 < init >", "$ r22 = $ r21 append \\ `` the test class \\ ``", "$ r23 = $ r22 append r0", "$ r24 = $ r23 append \\ `` be not locate in any of the directory \\ ``", "$ r25 = io quarkus test common path test helper test_to_main_dir_fragments", "$ r26 = $ r25 key set", "$ r27 = $ r24 append $ r26", "$ r28 = $ r27 to string", "specialinvoke $ r20 < init > $ r28", "throw $ r20", "if $ z1 ! = 0 goto label5", "label r43 = io quarkus test common path test helper to path r40", "$ r15 = r43 get root", "$ i1 = r43 get name count", "$ r16 = newarray java lang string [ 0 ]", "$ r17 = java nio file path get r1 $ r16", "$ i2 = $ r17 get name count", "$ i3 = $ i1 - $ i2", "$ r18 = r43 subpath 0 $ i3", "$ r19 = $ r15 resolve $ r18", "return $ r19"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 be empty", "if $ z0 == 0 goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` path not specified\\ ``", "throw r6", "if $ z0 == 0 goto label1", "label $ r3 = \\ `` \\ ``", "$ z1 = $ r3 equal r1", "if $ z1 == 0 goto label2", "r7 = io quarkus vertx http runtime security path matcher r0", "r7 default handler = r2", "r8 = io quarkus vertx http runtime security path matcher r0", "return r8", "if $ z1 == 0 goto label2", "label r9 = io quarkus vertx http runtime security path matcher r0", "$ r4 = r9 path", "$ r4 put r1 r2", "r10 = io quarkus vertx http runtime security path matcher r0", "specialinvoke r10 build length", "r11 = io quarkus vertx http runtime security path matcher r0", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "if z0 ! = 0 goto label1", "r9 = new reactor core publisher flux on assembly $ assembly light snapshot", "specialinvoke r9 < init > r1", "r8 = r9", "goto label2", "label r11 = new reactor core publisher mono on assembly", "r12 = reactor core publisher mono r0", "r13 = reactor core publisher flux on assembly $ assembly snapshot r8", "specialinvoke r11 < init > r12 r13", "r14 = reactor core publisher mono r11", "return r14", "if z0 ! = 0 goto label1", "label r10 = new reactor core publisher flux on assembly $ assembly snapshot", "$ r3 = reactor core publisher trace call site supplier factory", "$ r4 = $ r3 get", "$ r5 = java util function supplier $ r4", "specialinvoke r10 < init > r1 $ r5", "r8 = r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r0 instanceof reactor core publisher mono first with signal", "if $ z0 == 0 goto label1", "r2 = reactor core publisher mono first with signal r0", "r3 = r2 or additional source r1", "if r3 == null goto label1", "return r3", "if r3 == null goto label1", "label $ r4 = newarray reactor core publisher mono [ 2 ]", "$ r4 [ 0 ] = r0", "$ r4 [ 1 ] = r1", "r6 = reactor core publisher mono [ ] $ r4", "$ r5 = reactor core publisher mono first with signal r6", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "$ r1 = reactor core publisher flux always_boolean_supplier", "r3 = reactor core publisher mono r0", "$ r2 = r3 repeat $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "$ b1 = l0 cmp 0l", "if $ b1 > = 0 goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` num repeat > = 0 required\\ ``", "throw r6", "if $ b1 > = 0 goto label1", "label $ b2 = l0 cmp 0l", "if $ b2 ! = 0 goto label2", "r7 = reactor core publisher mono r0", "$ r4 = r7 flux", "return $ r4", "if $ b2 ! = 0 goto label2", "label r8 = reactor core publisher mono r0", "$ r2 = mono $ lambda_repeat_36__41 bootstrap $ r8 r1 l0", "$ r3 = reactor core publisher flux defer $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = reactor core publisher parallel flux r0", "i0 = r14 parallelism", "$ i2 = lengthof r1", "if $ i2 == i0 goto label3", "r13 = new java lang illegal argument exception", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r7 = r12 append \\ `` parallelism = \\ ``", "$ r8 = $ r7 append i0", "$ r9 = $ r8 append \\", "$ i3 = lengthof r1", "$ r10 = $ r9 append $ i3", "$ r11 = $ r10 to string", "specialinvoke r13 < init > $ r11", "i1 = lengthof r1", "i4 = 0", "label if i4 > = i1 goto label2", "r4 = r1 [ i4 ]", "reactor core publisher operator error r4 r13", "i4 = i4 + 1", "goto label1", "label if i4 > = i1 goto label2", "label return 0", "if $ i2 == i0 goto label3", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = reactor netty channel channel operation r0", "r1 discard when no receiver", "r2 = reactor netty channel channel operation r0", "r2 terminate", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r7 = reactor netty tcp tcp client r0", "$ r2 = r7 configuration", "$ r3 = reactor netty tcp tcp client config $ r2", "$ z0 = $ r3 be secure", "if $ z0 == 0 goto label1", "r8 = reactor netty tcp tcp client r0", "$ r4 = r8 duplicate", "r1 = reactor netty tcp tcp client $ r4", "$ r5 = r1 configuration", "$ r6 = reactor netty tcp tcp client config $ r5", "$ r6 ssl provider = null", "return r1", "if $ z0 == 0 goto label1", "label r9 = reactor netty tcp tcp client r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r7 = reactor netty tcp tcp server r0", "$ r2 = r7 configuration", "$ r3 = reactor netty tcp tcp server config $ r2", "$ z0 = $ r3 be secure", "if $ z0 == 0 goto label1", "r8 = reactor netty tcp tcp server r0", "$ r4 = r8 duplicate", "r1 = reactor netty tcp tcp server $ r4", "$ r5 = r1 configuration", "$ r6 = reactor netty tcp tcp server config $ r5", "$ r6 ssl provider = null", "return r1", "if $ z0 == 0 goto label1", "label r9 = reactor netty tcp tcp server r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = reactor netty transport address utils create inet socket address r0 i0 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "java util object require non null r1 \\ `` remote address supplier\\ ``", "r7 = reactor netty transport client transport r0", "$ r4 = r7 duplicate", "r2 = reactor netty transport client transport $ r4", "$ r5 = r2 configuration", "$ r6 = reactor netty transport client transport config $ r5", "$ r6 remote address = r1", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = reactor netty transport name resolver provider r0", "$ i0 = r1 max payload size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "java util object require non null r1 \\ `` timeout\\ ``", "r13 = reactor netty transport server transport r0", "$ r5 = r13 bind now", "$ r6 = java util object require non null $ r5 \\ `` facade\\ ``", "r3 = reactor netty disposable server $ r6", "if r2 == null goto label1", "r2 accept r3", "label $ r7 = java lang runtime get runtime", "r12 = new java lang thread", "$ r9 = server transport $ lambda_bind until java shutdown_2__5 bootstrap $ r3 r1", "specialinvoke r12 < init > $ r9", "$ r7 add shutdown hook r12", "$ r10 = r3 on dispose", "$ r10 block", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r15 = @ parameter1", "if null ! = r15 goto label1", "r18 = reactor netty udp udp operation r0", "$ r10 = r18 datagram channel", "$ r11 = $ r10 config", "$ r12 = $ r11 get network interface", "if null == $ r12 goto label1", "r19 = reactor netty udp udp operation r0", "$ r13 = r19 datagram channel", "$ r14 = $ r13 config", "r15 = $ r14 get network interface", "label if null == r15 goto label2", "r20 = reactor netty udp udp operation r0", "$ r8 = r20 datagram channel", "r17 = new java net inet socket address", "r21 = reactor netty udp udp operation r0", "$ r7 = r21 datagram channel", "$ r9 = $ r7 local address", "$ i0 = $ r9 get port", "specialinvoke r17 < init > r1 $ i0", "r16 = $ r8 leave group r17 r15", "goto label3", "label r23 = io netty util concurrent future r16", "$ r3 = reactor netty future mono from r23", "$ r4 = udp operation $ lambda_leave_1__2 bootstrap $ r16 r1", "$ r5 = $ r3 do on success $ r4", "return $ r5", "label if null == r15 goto label2", "label r22 = reactor netty udp udp operation r0", "$ r2 = r22 datagram channel", "r16 = $ r2 leave group r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [], [30], [31], [32], []]}
{"nodes": ["$ r1 = reactor netty http client http2 resource http2 resource", "$ r0 = reactor netty http client http2 resource on_http2_new", "$ r2 = reactor netty http client http2 resource get or create $ r1 null null $ r0 \\ `` http2\\ ``", "$ r3 = reactor netty http client http2 resource $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = reactor netty http client http client config r0", "$ r1 = r2 decoder", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = reactor netty http client http client config r0", "$ r1 = r2 websocket client spec", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = reactor netty http client http response decoder spec r0", "r1 parse http after connect request = z0", "r2 = reactor netty http client http response decoder spec r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = reactor netty http http decoder spec r0", "$ i0 = r1 max header size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = reactor netty http server http server config r0", "$ r1 = r2 decoder", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io restassured builder request spec builder r0", "$ r3 = r5 spec", "$ r3 param r1 r2", "r6 = io restassured builder request spec builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io restassured builder request spec builder r0", "$ r3 = r5 spec", "$ r3 path param r1 r2", "r6 = io restassured builder request spec builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io restassured builder request spec builder r0", "$ r3 = r5 spec", "$ r3 trust store r1 r2", "r6 = io restassured builder request spec builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io restassured builder request spec builder r0", "$ r2 = r4 spec", "$ r2 trust store r1", "r5 = io restassured builder request spec builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io restassured builder response spec builder r0", "$ r2 = r4 spec", "$ r2 cookie r1", "r5 = io restassured builder response spec builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io restassured builder response spec builder r0", "$ r2 = r4 spec", "$ r2 append root path r1", "r5 = io restassured builder response spec builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io restassured builder response spec builder r0", "$ r2 = r4 spec", "$ r2 detach root path r1", "r5 = io restassured builder response spec builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new io restassured config connection config", "$ r3 = new io restassured config connection config $ close idle connection config", "specialinvoke $ r3 < init > l0 r1", "specialinvoke $ r2 < init > $ r3", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "io restassured internal common assertion assert parameter not null r1 \\ `` charset\\ ``", "io restassured internal common assertion assert parameter not null r2 class \\ `` lio restassured http content type \\ ``", "r15 = new java util hash map", "r17 = io restassured config decoder config r0", "$ r9 = r17 content type to default charset", "specialinvoke r15 < init > $ r9", "r4 = r2 get content type string", "i0 = lengthof r4", "i1 = 0", "label if i1 > = i0 goto label2", "r5 = r4 [ i1 ]", "$ r12 = r5 to lower case", "$ r13 = org apache common lang3 string utils trim r1", "r15 put $ r12 $ r13", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label r16 = new io restassured config decoder config", "r18 = io restassured config decoder config r0", "$ z0 = r18 use no wrap for inflate decode", "r19 = io restassured config decoder config r0", "$ r11 = r19 content decoder", "specialinvoke r16 < init > r1 $ z0 1 $ r11 r15", "return r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new io restassured config multi part config", "r8 = io restassured config multi part config r0", "$ r6 = r8 default control name", "r9 = io restassured config multi part config r0", "$ r5 = r9 default file name", "r10 = io restassured config multi part config r0", "$ r4 = r10 default subtype", "r11 = io restassured config multi part config r0", "$ r3 = r11 default charset", "specialinvoke r7 < init > $ r6 $ r5 $ r4 r1 $ r3 1", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new io restassured config object mapper config", "r11 = io restassured config object mapper config r0", "$ r9 = r11 default object mapper", "r12 = io restassured config object mapper config r0", "$ r8 = r12 default object mapper type", "r13 = io restassured config object mapper config r0", "$ r7 = r13 gson object mapper factory", "r14 = io restassured config object mapper config r0", "$ r6 = r14 jackson1 object mapper factory", "r15 = io restassured config object mapper config r0", "$ r5 = r15 jackson2 object mapper factory", "r16 = io restassured config object mapper config r0", "$ r4 = r16 johnzon object mapper factory", "r17 = io restassured config object mapper config r0", "$ r3 = r17 jsonb object mapper factory", "specialinvoke r10 < init > $ r9 $ r8 $ r7 $ r6 $ r5 r1 $ r4 $ r3 1", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new io restassured config param config", "r6 = io restassured config param config r0", "$ r4 = r6 form params update strategy", "r7 = io restassured config param config r0", "$ r3 = r7 request parameter update strategy", "specialinvoke r5 < init > r1 $ r4 $ r3 1", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = io restassured config redirect config r0", "$ i0 = r1 max redirect", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "io restassured internal common assertion assert parameter not null r1 \\ `` decoder config\\ ``", "r36 = new io restassured config rest assure config", "r37 = io restassured config rest assure config r0", "$ r4 = specialinvoke r37 conf class \\ `` lio restassured config redirect config \\ ``", "$ r5 = io restassured config redirect config $ r4", "r38 = io restassured config rest assure config r0", "$ r6 = specialinvoke r38 conf class \\ `` lio restassured config http client config \\ ``", "$ r7 = io restassured config http client config $ r6", "r39 = io restassured config rest assure config r0", "$ r8 = specialinvoke r39 conf class \\ `` lio restassured config log config \\ ``", "$ r9 = io restassured config log config $ r8", "r40 = io restassured config rest assure config r0", "$ r10 = specialinvoke r40 conf class \\ `` lio restassured config encoder config \\ ``", "$ r11 = io restassured config encoder config $ r10", "r41 = io restassured config rest assure config r0", "$ r12 = specialinvoke r41 conf class \\ `` lio restassured config session config \\ ``", "$ r13 = io restassured config session config $ r12", "r42 = io restassured config rest assure config r0", "$ r14 = specialinvoke r42 conf class \\ `` lio restassured config object mapper config \\ ``", "$ r15 = io restassured config object mapper config $ r14", "r43 = io restassured config rest assure config r0", "$ r16 = specialinvoke r43 conf class \\ `` lio restassured config connection config \\ ``", "$ r17 = io restassured config connection config $ r16", "r44 = io restassured config rest assure config r0", "$ r18 = specialinvoke r44 conf class \\ `` lio restassured config json config \\ ``", "$ r19 = io restassured config json config $ r18", "r45 = io restassured config rest assure config r0", "$ r20 = specialinvoke r45 conf class \\ `` lio restassured config xml config \\ ``", "$ r21 = io restassured config xml config $ r20", "r46 = io restassured config rest assure config r0", "$ r22 = specialinvoke r46 conf class \\ `` lio restassured config s s l config \\ ``", "$ r23 = io restassured config s s l config $ r22", "r47 = io restassured config rest assure config r0", "$ r24 = specialinvoke r47 conf class \\ `` lio restassured config matcher config \\ ``", "$ r25 = io restassured config matcher config $ r24", "r48 = io restassured config rest assure config r0", "$ r26 = specialinvoke r48 conf class \\ `` lio restassured config header config \\ ``", "$ r27 = io restassured config header config $ r26", "r49 = io restassured config rest assure config r0", "$ r28 = specialinvoke r49 conf class \\ `` lio restassured config multi part config \\ ``", "$ r29 = io restassured config multi part config $ r28", "r50 = io restassured config rest assure config r0", "$ r30 = specialinvoke r50 conf class \\ `` lio restassured config param config \\ ``", "$ r31 = io restassured config param config $ r30", "r51 = io restassured config rest assure config r0", "$ r32 = specialinvoke r51 conf class \\ `` lio restassured config o auth config \\ ``", "$ r33 = io restassured config o auth config $ r32", "r52 = io restassured config rest assure config r0", "$ r34 = specialinvoke r52 conf class \\ `` lio restassured config failure config \\ ``", "$ r35 = io restassured config failure config $ r34", "specialinvoke r36 < init > $ r5 $ r7 $ r9 $ r11 r1 $ r13 $ r15 $ r17 $ r19 $ r21 $ r23 $ r25 $ r27 $ r29 $ r31 $ r33 $ r35", "return r36"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], []]}
{"nodes": ["r0 = @ this", "r2 = io restassured config s s l config r0", "$ r1 = r2 relax h t t p s validation \\ `` ssl\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = newarray java lang object [ 0 ]", "org apache common lang3 validate not empty r1 \\ `` name can not be empty\\", "r12 = new java util hash map", "r14 = io restassured config xml config r0", "$ r7 = r14 property", "specialinvoke r12 < init > $ r7", "r12 put r1 r2", "r13 = new io restassured config xml config", "r15 = io restassured config xml config r0", "$ r11 = r15 feature", "r16 = io restassured config xml config r0", "$ r10 = r16 declare namespaces", "r17 = io restassured config xml config r0", "$ z2 = r17 validate", "r18 = io restassured config xml config r0", "$ z1 = r18 namespace aware", "r19 = io restassured config xml config r0", "$ z0 = r19 allow doc type declaration", "specialinvoke r13 < init > $ r11 $ r10 r12 $ z2 $ z1 $ z0 1", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = io restassured config xml config r0", "$ z0 = r1 validate", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "io restassured internal common assertion assert parameter not null r1 \\ `` cookie name\\ ``", "r6 = io restassured http cooky r0", "$ r3 = r6 cooky", "$ r4 = $ r3 get r1", "$ r5 = io restassured http cookie $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "io restassured internal common assertion assert parameter not null r1 \\ `` header name\\ ``", "r6 = io restassured http header r0", "$ r3 = r6 header", "$ r4 = $ r3 get r1", "$ r5 = io restassured http header $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = io restassured internal http h t t p builder r0", "$ r1 = r2 default u r i", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = io restassured internal http http response decorator r0", "$ r1 = r3 response base", "$ r2 = $ r1 get status line", "$ i0 = $ r2 get status code", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = io restassured internal http http response decorator r0", "$ r1 = r2 response data", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r16 = new java lang string builder", "specialinvoke r16 < init >", "if r1 == null goto label1", "r16 append r1", "label r17 = io restassured internal http u r i builder r0", "$ r6 = r17 base", "r3 = $ r6 get query", "if r3 == null goto label2", "r16 append 63", "r16 append r3", "label r18 = io restassured internal http u r i builder r0", "$ r7 = r18 base", "r4 = $ r7 get raw fragment", "if r4 == null goto label3", "$ r11 = r16 append 35", "$ r11 append r4", "label r19 = io restassured internal http u r i builder r0", "$ r8 = r19 base", "$ r9 = r16 to string", "$ r10 = $ r8 resolve $ r9", "r20 = io restassured internal http u r i builder r0", "r20 base = $ r10", "r21 = io restassured internal http u r i builder r0", "return r21"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r6 = new io restassured internal http u r i builder", "r7 = io restassured internal http u r i builder r0", "$ r2 = r7 base", "r8 = io restassured internal http u r i builder r0", "$ z0 = r8 be url encode enabled", "$ r3 = io restassured config encoder config encoder config", "r9 = io restassured internal http u r i builder r0", "$ r4 = r9 enc", "$ r5 = $ r3 default query parameter charset $ r4", "specialinvoke r6 < init > $ r2 $ z0 $ r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org hamcrest matcher equal to r1", "r4 = io restassured matcher detailed cookie matcher r0", "$ r3 = r4 domain $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org hamcrest matcher equal to r1", "r4 = io restassured matcher detailed cookie matcher r0", "$ r3 = r4 path $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org hamcrest matcher equal to r1", "r4 = io restassured matcher detailed cookie matcher r0", "$ r3 = r4 path $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = io restassured internal matcher xml xml dtd matcher match dtd in classpath r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = io restassured rest assure give", "$ r1 = $ r0 option", "$ r2 = io restassured response response $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = io restassured rest assure give", "$ r1 = $ r0 put", "$ r2 = io restassured response response $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r0 ! = null goto label1", "r7 = new java lang illegal argument exception", "specialinvoke r7 < init > \\ `` username can not be null\\ ``", "throw r7", "if r0 ! = null goto label1", "label if r1 ! = null goto label2", "r8 = new java lang illegal argument exception", "specialinvoke r8 < init > \\ `` password can not be null\\ ``", "throw r8", "label if r1 ! = null goto label2", "label r9 = new io restassured authentication form auth scheme", "specialinvoke r9 < init >", "r9 set user name r0", "r9 set password r1", "r9 set config r2", "r10 = io restassured authentication authentication scheme r9", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = io restassured rest assure response_parser_registrar", "$ r2 register parser r0 r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org jboss resteasy client jaxrs internal resteasy client builder impl r0", "r1 disable trust manager = 1", "r2 = org jboss resteasy client jaxrs internal resteasy client builder impl r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r3 = org jboss resteasy client jaxrs internal resteasy client builder impl r0", "$ r2 = r3 default proxy r1 i0 null", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java net url", "$ r2 = org jboss resteasy test test port provider generate u r l r0", "specialinvoke $ r1 < init > $ r2", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org jboss resteasy util port provider get host", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r3 = org jboss resteasy core providerfactory resteasy provider factory impl r0", "$ r1 = r3 provider class", "r4 = java util set $ r1", "$ r2 = java util collection unmodifiable set r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org jboss resteasy plugins server resourcefactory p o j o resource factory", "r5 = org jboss resteasy core resource method registry r0", "$ r3 = r5 resource builder", "specialinvoke r4 < init > $ r3 r1", "r6 = org jboss resteasy core resource method registry r0", "r7 = org jboss resteasy spi resource factory r4", "r6 add resource factory r7", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java lang string null", "r3 = org jboss resteasy core resource method registry r0", "r3 add resource factory r1 $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return 1", "if r0 ! = null goto label1", "label i0 = r0 length", "i3 = 0", "label if i3 > = i0 goto label4", "c1 = r0 char at i3", "$ r1 = \\", "$ i2 = $ r1 index of c1", "if $ i2 == -1 goto label3", "return 0", "if $ i2 == -1 goto label3", "label i3 = i3 + 1", "goto label2", "label if i3 > = i0 goto label4", "label return 1"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = org jboss resteasy plugins interceptor cors filter r0", "$ z0 = r1 allow credential", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org jboss resteasy specimpl path segment impl r0", "$ z0 = r1 have matrix params", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org jboss resteasy util group parameter parser r0", "r1 low case name = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "c0 = @ parameter1", "c1 = @ parameter2", "if r1 ! = null goto label1", "r4 = new java util array list", "specialinvoke r4 < init >", "return r4", "if r1 ! = null goto label1", "label $ i2 = lengthof r1", "r5 = org jboss resteasy util group parameter parser r0", "$ r2 = r5 parse r1 0 $ i2 c0 c1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org jboss resteasy spi async output writer r0", "$ r3 = r6 async output stream", "r7 = org jboss resteasy spi async output writer r0", "$ r2 = r7 charset", "$ r4 = r1 get bytes $ r2", "$ r5 = $ r3 async write $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof java lang reflect parameterized type", "if $ z0 ! = 0 goto label1", "return null", "if $ z0 ! = 0 goto label1", "label r1 = java lang reflect parameterized type r0", "$ r3 = r1 get actual type argument", "$ r4 = $ r3 [ 0 ]", "r2 = java lang class $ r4", "return r2"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r1 be interface", "if $ z0 == 0 goto label1", "$ r3 = org jboss resteasy spi util type find interface parameterized type r0 null r1", "return $ r3", "if $ z0 == 0 goto label1", "label $ r2 = org jboss resteasy spi util type find class parameterized type r0 null r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = retrofit2 http exception r0", "$ r1 = r2 response", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org mozilla javascript ast array comprehension r0", "r6 assert not null r1", "r7 = org mozilla javascript ast array comprehension r0", "$ r4 = r7 loop", "$ r4 clear", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r5 = r2 next", "r3 = org mozilla javascript ast array comprehension loop $ r5", "r8 = org mozilla javascript ast array comprehension r0", "r8 add loop r3", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org mozilla javascript ast array comprehension r0", "r3 assert not null r1", "r4 = org mozilla javascript ast array comprehension r0", "$ r2 = r4 loop", "$ r2 add r1", "r5 = org mozilla javascript ast ast node r0", "r1 set parent r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java lang unsupported operation exception", "specialinvoke $ r2 < init > \\ `` this node type have no body\\ ``", "throw $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org mozilla javascript ast array literal r0", "r1 be destructuring = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mozilla javascript ast catch clause r0", "r2 catch condition = r1", "if r1 == null goto label1", "r1 set parent r0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org mozilla javascript ast conditional expression r0", "$ r1 = r2 false expression", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 visit r0", "if $ z0 == 0 goto label1", "r5 = org mozilla javascript ast conditional expression r0", "$ r2 = r5 test expression", "$ r2 visit r1", "r6 = org mozilla javascript ast conditional expression r0", "$ r3 = r6 true expression", "$ r3 visit r1", "r7 = org mozilla javascript ast conditional expression r0", "$ r4 = r7 false expression", "$ r4 visit r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mozilla javascript ast continue statement r0", "r2 label = r1", "if r1 == null goto label1", "r3 = org mozilla javascript ast ast node r0", "r1 set parent r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 visit r0", "if $ z0 == 0 goto label1", "r4 = org mozilla javascript ast element get r0", "$ r2 = r4 target", "$ r2 visit r1", "r5 = org mozilla javascript ast element get r0", "$ r3 = r5 element", "$ r3 visit r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mozilla javascript ast error node r0", "r2 message = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org mozilla javascript ast for in loop r0", "r1 each position = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org mozilla javascript ast function call r0", "$ i0 = r1 rp", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = org mozilla javascript ast ast node r0", "$ z0 = r1 visit r11", "if $ z0 == 0 goto label4", "r12 = org mozilla javascript ast function node r0", "$ r4 = r12 function name", "if $ r4 == null goto label1", "r13 = org mozilla javascript ast function node r0", "$ r10 = r13 function name", "$ r10 visit r1", "label r14 = org mozilla javascript ast function node r0", "$ r5 = r14 get params", "r2 = $ r5 iterator", "label $ z2 = r2 have next", "if $ z2 == 0 goto label3", "$ r9 = r2 next", "r3 = org mozilla javascript ast ast node $ r9", "r3 visit r1", "goto label2", "if $ z2 == 0 goto label3", "label r15 = org mozilla javascript ast function node r0", "$ r6 = r15 get body", "$ r6 visit r1", "r16 = org mozilla javascript ast function node r0", "$ z1 = r16 be expression closure", "if $ z1 ! = 0 goto label4", "r17 = org mozilla javascript ast function node r0", "$ r7 = r17 member expr node", "if $ r7 == null goto label4", "r18 = org mozilla javascript ast function node r0", "$ r8 = r18 member expr node", "$ r8 visit r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r2 = org mozilla javascript ast if statement r0", "$ r1 = r2 condition", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mozilla javascript ast let node r0", "r2 assert not null r1", "r3 = org mozilla javascript ast let node r0", "r3 variable = r1", "r4 = org mozilla javascript ast ast node r0", "r1 set parent r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org mozilla javascript ast name r0", "$ r1 = r2 identifier", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org mozilla javascript ast number literal r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org mozilla javascript ast object property r0", "r1 type = 151", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mozilla javascript ast parenthesized expression r0", "r2 assert not null r1", "r3 = org mozilla javascript ast parenthesized expression r0", "r3 expression = r1", "r1 set parent r0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mozilla javascript ast string literal r0", "r2 assert not null r1", "r3 = org mozilla javascript ast string literal r0", "r3 value = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 visit r0", "if $ z0 == 0 goto label3", "r9 = org mozilla javascript ast switch case r0", "$ r4 = r9 expression", "if $ r4 == null goto label1", "r10 = org mozilla javascript ast switch case r0", "$ r8 = r10 expression", "$ r8 visit r1", "label r11 = org mozilla javascript ast switch case r0", "$ r5 = r11 statement", "if $ r5 == null goto label3", "r12 = org mozilla javascript ast switch case r0", "$ r6 = r12 statement", "r2 = $ r6 iterator", "label $ z1 = r2 have next", "if $ z1 == 0 goto label3", "$ r7 = r2 next", "r3 = org mozilla javascript ast ast node $ r7", "r3 visit r1", "goto label2", "if $ z1 == 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r7 = org mozilla javascript ast switch statement r0", "r7 case = null", "goto label4", "label return", "if r1 ! = null goto label1", "label r8 = org mozilla javascript ast switch statement r0", "$ r4 = r8 case", "if $ r4 == null goto label2", "r9 = org mozilla javascript ast switch statement r0", "$ r6 = r9 case", "$ r6 clear", "label r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label4", "$ r5 = r2 next", "r3 = org mozilla javascript ast switch case $ r5", "r10 = org mozilla javascript ast switch statement r0", "r10 add case r3", "goto label3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 == 109 goto label1", "if i0 == 87 goto label1", "if i0 == 122 goto label1", "if i0 == 153 goto label1", "if i0 == 154 goto label1", "r7 = new java lang illegal argument exception", "r6 = new java lang string builder", "specialinvoke r6 < init >", "$ r3 = r6 append \\ `` invalid decl type \\ ``", "$ r4 = $ r3 append i0", "$ r5 = $ r4 to string", "specialinvoke r7 < init > $ r5", "throw r7", "if i0 == 154 goto label1", "label r8 = org mozilla javascript ast symbol r0", "r8 decl type = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org mozilla javascript ast symbol r0", "$ r1 = r2 node", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org mozilla javascript ast symbol r0", "r1 index = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org mozilla javascript ast unary expression r0", "$ z0 = r1 be postfix", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org mozilla javascript ast unary expression r0", "r1 be postfix = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org mozilla javascript ast variable initializer r0", "$ r1 = r2 target", "$ z0 = $ r1 instanceof org mozilla javascript ast name", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 visit r0", "if $ z0 == 0 goto label1", "r5 = org mozilla javascript ast variable initializer r0", "$ r2 = r5 target", "$ r2 visit r1", "r6 = org mozilla javascript ast variable initializer r0", "$ r3 = r6 initializer", "if $ r3 == null goto label1", "r7 = org mozilla javascript ast variable initializer r0", "$ r4 = r7 initializer", "$ r4 visit r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org mozilla javascript ast with statement r0", "$ r1 = r2 expression", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org mozilla javascript ast xml dot query r0", "r1 rp = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org mozilla javascript ast xml expression r0", "$ r1 = r2 expression", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mozilla javascript ast xml expression r0", "r2 assert not null r1", "r3 = org mozilla javascript ast xml expression r0", "r3 expression = r1", "r4 = org mozilla javascript ast ast node r0", "r1 set parent r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org mozilla javascript ast xml member get r0", "$ r1 = r2 get leave", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org mozilla javascript class cache r0", "r1 class table = null", "r2 = org mozilla javascript class cache r0", "r2 class adapter cache = null", "r3 = org mozilla javascript class cache r0", "r3 interface adapter cache = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get function name", "$ r2 = org mozilla javascript script runtime type error1 \\ `` msg incompat call\\", "r3 = java lang throwable $ r2", "throw r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org mozilla javascript obj to int map r0", "$ i0 = r2 key count", "r1 = newarray java lang object [ $ i0 ]", "r3 = org mozilla javascript obj to int map r0", "r3 get key r1 0", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org mozilla javascript scriptable object r0", "$ z0 = r2 avoid object detection", "if $ z0 == 0 goto label1", "$ r1 = \\ `` undefined\\ ``", "goto label2", "label return $ r1", "if $ z0 == 0 goto label1", "label $ r1 = \\ `` object\\ ``"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = specialinvoke r0 get r1 r2", "$ r3 = org mozilla javascript id scriptable object not_found", "if r9 == $ r3 goto label1", "return r9", "if r9 == $ r3 goto label1", "label r13 = org mozilla javascript id scriptable object r0", "i0 = r13 find instance id info r1", "if i0 == 0 goto label2", "i1 = i0 & 65535", "r14 = org mozilla javascript id scriptable object r0", "r10 = r14 get instance id value i1", "$ r8 = org mozilla javascript id scriptable object not_found", "if r10 == $ r8 goto label2", "return r10", "if r10 == $ r8 goto label2", "label r15 = org mozilla javascript id scriptable object r0", "$ r4 = r15 prototype value", "if $ r4 == null goto label3", "r16 = org mozilla javascript id scriptable object r0", "$ r5 = r16 prototype value", "i2 = $ r5 find id r1", "if i2 == 0 goto label3", "r17 = org mozilla javascript id scriptable object r0", "$ r6 = r17 prototype value", "r11 = $ r6 get i2", "$ r7 = org mozilla javascript id scriptable object not_found", "if r11 == $ r7 goto label3", "return r11", "if r11 == $ r7 goto label3", "label $ r12 = org mozilla javascript id scriptable object not_found", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], []]}
{"nodes": ["r0 = @ this", "r2 = org mozilla javascript scriptable object r0", "$ r1 = r2 prototype object", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org mozilla javascript scriptable object get top level scope r0", "$ r2 = org mozilla javascript top level $ builtins object", "$ r3 = org mozilla javascript top level get builtin prototype $ r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r18 = org mozilla javascript serialize scriptable output stream r0", "$ r3 = r18 scope", "r2 = org mozilla javascript serialize scriptable output stream lookup qualify name $ r3 r1", "if r2 == null goto label2", "$ r4 = org mozilla javascript unique tag not_found", "if r2 == $ r4 goto label2", "$ z0 = r2 instanceof org mozilla javascript scriptable", "if $ z0 ! = 0 goto label1", "r17 = new java lang illegal argument exception", "r16 = new java lang string builder", "specialinvoke r16 < init >", "$ r9 = r16 append \\ `` object for excluded name \\ ``", "$ r10 = $ r9 append r1", "$ r11 = $ r10 append \\ `` be not a scriptable it be \\ ``", "$ r12 = r2 get class", "$ r13 = $ r12 get name", "$ r14 = $ r11 append $ r13", "$ r15 = $ r14 to string", "specialinvoke r17 < init > $ r15", "throw r17", "if $ z0 ! = 0 goto label1", "label r19 = org mozilla javascript serialize scriptable output stream r0", "$ r5 = r19 table", "$ r5 put r2 r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org mozilla javascript serialize scriptable output stream r0", "$ r2 = r4 table", "$ r3 = $ r2 get r1", "if $ r3 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r3 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org mozilla javascript tool debugger dim r0", "r1 break flag = 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org mozilla javascript tool debugger dim r0", "r5 detach", "r6 = org mozilla javascript tool debugger dim r0", "r6 context factory = r1", "r4 = new org mozilla javascript tool debugger dim $ dim i proxy", "r7 = org mozilla javascript tool debugger dim r0", "specialinvoke r4 < init > r7 1 null", "r8 = org mozilla javascript tool debugger dim r0", "r8 listener = r4", "r9 = org mozilla javascript tool debugger dim r0", "$ r3 = r9 listener", "r10 = org mozilla javascript context factory $ listener $ r3", "r1 add listener r10", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r4 = org mozilla javascript tool debugger dim r0", "$ r1 = r4 listener", "if $ r1 == null goto label1", "r5 = org mozilla javascript tool debugger dim r0", "$ r3 = r5 context factory", "r6 = org mozilla javascript tool debugger dim r0", "$ r2 = r6 listener", "r7 = org mozilla javascript context factory $ listener $ r2", "$ r3 remove listener r7", "r8 = org mozilla javascript tool debugger dim r0", "r8 context factory = null", "r9 = org mozilla javascript tool debugger dim r0", "r9 listener = null", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = org mozilla javascript tool debugger dim r0", "r1 detach", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org mozilla javascript tool debugger dim r0", "$ r1 = r2 interrupt context data", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org mozilla javascript context factory get global", "r5 = new org mozilla javascript tool shell global", "specialinvoke r5 < init >", "r5 init r1", "r6 = org mozilla javascript scriptable r5", "$ r4 = org mozilla javascript tool debugger main main embed r1 r6 r0", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r5 = new java lang illegal argument exception", "specialinvoke r5 < init > \\ `` quit action be null\\ ``", "throw r5", "if r1 ! = null goto label1", "label r7 = org mozilla javascript tool shell global r0", "$ r2 = r7 quit action", "if $ r2 == null goto label2", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` the method be once-call \\ ``", "throw r6", "if $ r2 == null goto label2", "label r8 = org mozilla javascript tool shell global r0", "r8 quit action = r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org fife io unicode reader r0", "$ r1 = r2 internal in", "$ r1 close", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = r1 get caret position", "r14 = org fife ui rsyntaxtextarea code template manager r0", "$ i3 = r14 max template i d length", "i1 = java lang math min i0 $ i3", "label r10 = r1 get document", "$ i4 = i0 - i1", "r15 = org fife ui rsyntaxtextarea code template manager r0", "$ r2 = r15 s", "r10 get text $ i4 i1 $ r2", "r16 = org fife ui rsyntaxtextarea code template manager r0", "$ r5 = r16 templates", "r17 = org fife ui rsyntaxtextarea code template manager r0", "$ r4 = r17 s", "r18 = org fife ui rsyntaxtextarea code template manager r0", "$ r3 = r18 comparator", "r19 = java util comparator $ r3", "i2 = java util collection binary search $ r5 $ r4 r19", "if i2 < 0 goto label2", "r20 = org fife ui rsyntaxtextarea code template manager r0", "$ r6 = r20 templates", "$ r7 = $ r6 get i2", "$ r11 = org fife ui rsyntaxtextarea template code template $ r7", "goto label3", "label return $ r11", "if i2 < 0 goto label2", "label $ r11 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = org fife ui rsyntaxtextarea document range r0", "$ i1 = r1 start offs", "r2 = org fife ui rsyntaxtextarea document range r0", "$ i0 = r2 end offs", "if $ i1 ! = $ i0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 ! = $ i0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org fife ui rsyntaxtextarea fold fold r0", "$ z0 = r1 collapse", "if $ z0 == 0 goto label1", "r2 = org fife ui rsyntaxtextarea fold fold r0", "$ i0 = r2 get line count", "goto label2", "label return $ i0", "if $ z0 == 0 goto label1", "label r3 = org fife ui rsyntaxtextarea fold fold r0", "$ i0 = r3 child collapse line count"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org fife ui rsyntaxtextarea mark occurrences support r0", "$ r1 = r2 timer", "$ r1 stop", "r3 = org fife ui rsyntaxtextarea mark occurrences support r0", "r3 action perform null", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org fife ui rsyntaxtextarea parser parser notice", "if $ z0 ! = 0 goto label1", "return 0", "if $ z0 ! = 0 goto label1", "label $ r2 = org fife ui rsyntaxtextarea parser parser notice r1", "r3 = org fife ui rsyntaxtextarea parser default parser notice r0", "$ i0 = r3 compare to $ r2", "if $ i0 ! = 0 goto label2", "$ z1 = 1", "goto label3", "label return $ z1", "if $ i0 ! = 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org fife ui rsyntaxtextarea r syntax document r0", "r2 = r4 get token list for line i0", "r3 = r2 get last non comment non whitespace token", "r5 = org fife ui rsyntaxtextarea r syntax document r0", "$ r1 = r5 token maker", "$ z0 = $ r1 get should indent next line after r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = new org fife ui rsyntaxtextarea r syntax text area u i", "r3 = javax swing j component r0", "specialinvoke r2 < init > r3", "r4 = org fife ui rtextarea r text area u i r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org fife ui rsyntaxtextarea r syntax text area r0", "$ z0 = r1 close markup tag", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org fife ui rsyntaxtextarea r syntax text area default_selection_color", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org fife ui rsyntaxtextarea r syntax text area r0", "$ z0 = r5 get hyperlink enable", "if $ z0 == 0 goto label2", "r6 = org fife ui rsyntaxtextarea r syntax text area r0", "$ i0 = r6 hover over link offset", "$ i1 = r1 get offset", "if $ i0 ! = $ i1 goto label2", "$ z1 = r1 be hyperlink", "if $ z1 ! = 0 goto label1", "r7 = org fife ui rsyntaxtextarea r syntax text area r0", "$ r3 = r7 link generator result", "if $ r3 == null goto label2", "label r8 = org fife ui rsyntaxtextarea r syntax text area r0", "$ r2 = r8 hyperlink f g", "return $ r2", "if $ r3 == null goto label2", "label $ i2 = r1 get type", "r9 = org fife ui rsyntaxtextarea r syntax text area r0", "$ r4 = r9 get foreground for token type $ i2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = org fife ui rsyntaxtextarea r syntax text area r0", "$ i0 = r1 mark occurrence delay", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org fife ui rsyntaxtextarea r syntax text area r0", "$ z0 = r1 use select text color", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org fife ui rsyntaxtextarea r syntax text area r0", "$ z0 = r1 whitespace visible", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ z0 = org fife ui rsyntaxtextarea r syntax text area get template enable", "if $ z0 ! = 0 goto label1", "return 0", "if $ z0 ! = 0 goto label1", "label $ r0 = org fife ui rsyntaxtextarea r syntax text area get code template manager", "$ z1 = $ r0 save template", "return $ z1"], "adj": [[1], [2], [], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r6 = org fife ui rsyntaxtextarea r syntax text area r0", "$ z1 = r6 animate bracket match", "if z0 == $ z1 goto label4", "r7 = org fife ui rsyntaxtextarea r syntax text area r0", "r7 animate bracket match = z0", "if z0 == 0 goto label1", "r8 = org fife ui rsyntaxtextarea r syntax text area r0", "$ r3 = r8 bracket repaint timer", "if $ r3 ! = null goto label1", "r5 = new org fife ui rsyntaxtextarea r syntax text area $ bracket match timer", "r9 = org fife ui rsyntaxtextarea r syntax text area r0", "specialinvoke r5 < init > r9", "r10 = org fife ui rsyntaxtextarea r syntax text area r0", "r10 bracket repaint timer = r5", "label if z0 ! = 0 goto label2", "$ z2 = 1", "goto label3", "label r11 = org fife ui rsyntaxtextarea r syntax text area r0", "r11 fire property change \\ `` rsta animate bracket matching\\", "label return", "label if z0 ! = 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org fife ui rsyntaxtextarea r syntax text area r0", "$ z1 = r3 highlight secondary language", "if $ z1 == z0 goto label3", "r4 = org fife ui rsyntaxtextarea r syntax text area r0", "r4 highlight secondary language = z0", "r5 = org fife ui rsyntaxtextarea r syntax text area r0", "r5 repaint", "if z0 ! = 0 goto label1", "$ z2 = 1", "goto label2", "label r6 = org fife ui rsyntaxtextarea r syntax text area r0", "r6 fire property change \\ `` rsta highlight secondary languages\\", "label return", "if z0 ! = 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r3 = new java lang null pointer exception", "specialinvoke r3 < init > \\ `` fg can not be null\\ ``", "throw r3", "if r1 ! = null goto label1", "label r4 = org fife ui rsyntaxtextarea r syntax text area r0", "r4 hyperlink f g = r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "$ r1 = specialinvoke r0 get action", "$ r2 = org fife ui rsyntaxtextarea r syntax text area editor kit default action", "$ r3 = javax swing text text action augment list $ r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r6 = org fife ui rsyntaxtextarea r syntax text area u i r0", "r1 = r6 get visible editor rect", "if r1 == null goto label1", "r7 = org fife ui rsyntaxtextarea r syntax text area u i r0", "$ r3 = r7 text area", "r8 = org fife ui rsyntaxtextarea r syntax text area u i r0", "r9 = javax swing text j text component $ r3", "$ r4 = r8 get root view r9", "$ r5 = $ r4 get view 0", "r2 = org fife ui rsyntaxtextarea r s t a view $ r5", "$ i1 = r2 y for line contain r1 i0", "return $ i1", "if r1 == null goto label1", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r4 = \\ `` \\ ``", "goto label2", "label r5 = org fife ui rsyntaxtextarea templates static code template r0", "r5 after caret = $ r4", "r6 = org fife ui rsyntaxtextarea templates static code template r0", "$ r2 = r6 after caret", "$ i0 = $ r2 index of 10", "r7 = org fife ui rsyntaxtextarea templates static code template r0", "r7 first after newline = $ i0", "return", "if r1 ! = null goto label1", "label $ r4 = r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r3 = org fife ui rsyntaxtextarea text editor pane r0", "$ r1 = r3 get document", "$ r2 = $ r1 get property \\ `` __ end of line__\\ ``", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org fife ui rsyntaxtextarea text editor pane r0", "$ z0 = r2 dirty", "if $ z0 ! = 0 goto label1", "r3 = org fife ui rsyntaxtextarea text editor pane r0", "r3 set dirty 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org fife ui rsyntaxtextarea token maker base r0", "r2 previous token = null", "r3 = org fife ui rsyntaxtextarea token maker base r0", "r3 current token = null", "r4 = org fife ui rsyntaxtextarea token maker base r0", "r4 first token = null", "r5 = org fife ui rsyntaxtextarea token maker base r0", "$ r1 = r5 token factory", "$ r1 reset all token", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > 0 goto label1", "r2 = new java lang illegal argument exception", "specialinvoke r2 < init > \\ `` maximum size must be > = 0\\ ``", "throw r2", "if i0 > 0 goto label1", "label r3 = org fife ui rtextarea clipboard history r0", "r3 max size = i0", "r4 = org fife ui rtextarea clipboard history r0", "specialinvoke r4 trim", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org fife ui rtextarea fold indicator r0", "$ r1 = r2 fold icon background", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org fife ui rtextarea gutter r0", "$ r1 = r3 fold indicator", "$ r2 = $ r1 get fold icon background", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i1 = 0", "label r3 = org fife ui rtextarea gutter r0", "$ i0 = r3 get component count", "if i1 > = $ i0 goto label3", "r4 = org fife ui rtextarea gutter r0", "$ r1 = r4 get component i1", "r5 = org fife ui rtextarea gutter r0", "$ r2 = r5 line number list", "if $ r1 ! = $ r2 goto label2", "return 1", "if $ r1 ! = $ r2 goto label2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "i1 = 0", "label r3 = org fife ui rtextarea gutter r0", "$ i0 = r3 get component count", "if i1 > = $ i0 goto label3", "r4 = org fife ui rtextarea gutter r0", "$ r1 = r4 get component i1", "r5 = org fife ui rtextarea gutter r0", "$ r2 = r5 fold indicator", "if $ r1 ! = $ r2 goto label2", "return 1", "if $ r1 ! = $ r2 goto label2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org fife ui rtextarea gutter r0", "$ r2 = r4 get border", "$ r3 = org fife ui rtextarea gutter $ gutter border $ r2", "$ r3 set color r1", "r5 = org fife ui rtextarea gutter r0", "r5 repaint", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = new java lang string builder", "specialinvoke r14 < init >", "r15 = org fife ui rtextarea icon group r0", "$ r3 = r15 path", "$ r4 = r14 append $ r3", "r16 = org fife ui rtextarea icon group r0", "$ r5 = r16 large icon sub dir", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 append \\ `` \\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 append \\ `` \\ ``", "r17 = org fife ui rtextarea icon group r0", "$ r10 = r17 extension", "$ r11 = $ r9 append $ r10", "$ r12 = $ r11 to string", "r18 = org fife ui rtextarea icon group r0", "$ r13 = specialinvoke r18 get icon impl $ r12", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r1 = org fife ui rtextarea icon row header r0", "$ i2 = r1 active line range start", "if i0 ! = $ i2 goto label1", "r2 = org fife ui rtextarea icon row header r0", "$ i3 = r2 active line range end", "if i1 == $ i3 goto label2", "label r3 = org fife ui rtextarea icon row header r0", "r3 active line range start = i0", "r4 = org fife ui rtextarea icon row header r0", "r4 active line range end = i1", "r5 = org fife ui rtextarea icon row header r0", "r5 repaint", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org fife ui rtextarea icon row header r0", "r2 remove all track icon", "specialinvoke r0 set text area r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org fife ui rtextarea reg ex replace info r0", "$ i0 = r1 end index", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["return 80"], "adj": [[]]}
{"nodes": ["r0 = @ this", "r1 = org fife ui rtextarea r text area base r0", "$ z0 = r1 highlight current line", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org fife ui rtextarea r text area u i r0", "$ r3 = r4 text area", "r2 = $ r3 get line highlight manager", "if r2 == null goto label1", "r2 paint line highlight r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org fife ui rtextarea r text area u i r0", "$ r2 = r3 text area", "r4 = org fife ui rtextarea r text area u i r0", "r5 = javax swing text j text component $ r2", "r1 = r4 model to view r5 i0", "if r1 == null goto label1", "$ i1 = r1 y", "goto label2", "label return $ i1", "if r1 == null goto label1", "label $ i1 = -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org fife ui rtextarea r undo manager r0", "$ r1 = r2 cant redo text", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org fife ui rtextarea search context r0", "$ z0 = r1 forward", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org fife ui rtextarea search result r1", "r3 = org fife ui rtextarea search result r0", "$ i0 = r3 compare to $ r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org fife ui rtextarea search result r0", "r2 match range = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org fife util dynamic int array r0", "r1 size = 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org fife util dynamic int array r0", "$ r1 = r2 data", "java util array fill $ r1 i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io reactivex disposables serial disposable r0", "$ r2 = r3 resource", "$ z0 = io reactivex internal disposable disposable helper replace $ r2 r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r1 = new io reactivex exception protocol violation exception", "specialinvoke r1 < init > \\ `` subscription already set ! \\ ``", "r2 = java lang throwable r1", "io reactivex plugins rx java plugins on error r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "io reactivex internal function object helper require non null r1 \\ `` s be null\\ ``", "$ z0 = r0 compare and set null r1", "if $ z0 ! = 0 goto label2", "r1 cancel", "$ r3 = r0 get", "$ r4 = io reactivex internal subscription subscription helper cancel", "if $ r3 == $ r4 goto label1", "io reactivex internal subscription subscription helper report subscription set", "label return 0", "if $ z0 ! = 0 goto label2", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ r6 = new java util array list", "specialinvoke $ r6 < init >", "$ r7 = new java util array deque", "specialinvoke $ r7 < init >", "$ r7 offer r0", "label $ z1 = $ r7 be empty", "if $ z1 ! = 0 goto label6", "$ r8 = $ r7 remove first", "r3 = java lang throwable $ r8", "$ z2 = r3 instanceof io reactivex exception composite exception", "if $ z2 == 0 goto label4", "r4 = io reactivex exception composite exception r3", "r5 = r4 get exception", "$ i0 = r5 size", "i1 = $ i0 - 1", "label if i1 < 0 goto label3", "$ r9 = r5 get i1", "$ r7 offer first $ r9", "i1 = i1 + -1", "goto label2", "label if i1 < 0 goto label3", "label goto label5", "label goto label1", "if $ z2 == 0 goto label4", "label $ r6 add r3", "if $ z1 ! = 0 goto label6", "label return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new io reactivex internal util notification lite $ disposable notification", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "if i0 > = 0 goto label1", "$ l1 = 9223372036854775807l", "goto label2", "label r0 request $ l1", "return", "if i0 > = 0 goto label1", "label $ l1 = long i0"], "adj": [[1], [2], [3], [4], [], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r3 = io reactivex notification r0", "r1 = r3 value", "$ z0 = io reactivex internal util notification lite be error r1", "if $ z0 == 0 goto label1", "$ r2 = io reactivex internal util notification lite get error r1", "return $ r2", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r1 = io reactivex observer base test consumer r0", "$ l0 = r1 completion", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = io reactivex observer base test consumer r0", "$ r1 = r3 do", "$ l0 = $ r1 get count", "$ b1 = $ l0 cmp 0l", "if $ b1 ! = 0 goto label1", "r4 = io reactivex observer base test consumer r0", "return r4", "if $ b1 ! = 0 goto label1", "label r5 = io reactivex observer base test consumer r0", "$ r2 = r5 do", "$ r2 await", "r6 = io reactivex observer base test consumer r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r5 = io reactivex observer base test consumer r0", "$ r2 = r5 do", "$ l1 = $ r2 get count", "$ b2 = $ l1 cmp 0l", "if $ b2 == 0 goto label1", "r6 = io reactivex observer base test consumer r0", "$ r4 = r6 do", "$ z1 = $ r4 await l0 r1", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label z0 = $ z2", "if $ z2 ! = 0 goto label4", "$ z3 = 1", "goto label5", "label r7 = io reactivex observer base test consumer r0", "r7 timeout = $ z3", "return z0", "if $ z2 ! = 0 goto label4", "label $ z3 = 0", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [], [19], [20], [], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 be empty", "if $ z0 == 0 goto label1", "r13 = io reactivex observer base test consumer r0", "r13 assert no value", "r14 = io reactivex observer base test consumer r0", "return r14", "if $ z0 == 0 goto label1", "label r15 = io reactivex observer base test consumer r0", "$ r4 = r15 value", "r2 = $ r4 iterator", "label $ z1 = r2 have next", "if $ z1 == 0 goto label4", "r3 = r2 next", "$ z2 = r1 contain r3", "if $ z2 ! = 0 goto label3", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r6 = r12 append \\ `` value not in the expected collection \\ ``", "$ r7 = io reactivex observer base test consumer value and class r3", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 to string", "r16 = io reactivex observer base test consumer r0", "$ r10 = r16 fail $ r9", "throw $ r10", "if $ z2 ! = 0 goto label3", "label goto label2", "if $ z1 == 0 goto label4", "label r17 = io reactivex observer base test consumer r0", "return r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r5 = io reactivex observer base test consumer r0", "$ r1 = r5 assert subscribe", "$ r2 = $ r1 assert no value", "$ r3 = $ r2 assert no error", "$ r4 = $ r3 assert not complete", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = io reactivex processor async processor r0", "r1 = r3 get value", "if r1 == null goto label1", "$ r2 = newarray java lang object [ 1 ]", "$ r2 [ 0 ] = r1", "goto label2", "label return $ r2", "if r1 == null goto label1", "label $ r2 = newarray java lang object [ 0 ]"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["l0 = @ parameter0", "r0 = @ parameter1", "r1 = @ parameter2", "i1 = @ parameter3", "r5 = new io reactivex processor replay processor", "r4 = new io reactivex processor replay processor $ size and time bound replay buffer", "specialinvoke r4 < init > i1 l0 r0 r1", "r6 = io reactivex processor replay processor $ replay buffer r4", "specialinvoke r5 < init > r6", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = io reactivex scheduler test scheduler r0", "$ l0 = r1 time", "r2 = io reactivex scheduler test scheduler r0", "specialinvoke r2 trigger action $ l0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = new io reactivex subject maybe subject", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r5 = io reactivex subject maybe subject r0", "$ r1 = r5 observer", "$ r2 = $ r1 get", "$ r3 = io reactivex subject maybe subject terminate", "if $ r2 ! = $ r3 goto label1", "r6 = io reactivex subject maybe subject r0", "$ r4 = r6 error", "if $ r4 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r4 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r3 = new io reactivex internal observer empty completable observer", "specialinvoke r3 < init >", "r4 = io reactivex completable r0", "r5 = io reactivex completable observer r3", "r4 subscribe r5", "r6 = io reactivex disposables disposable r3", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r5 = io reactivex processor async processor r0", "$ r1 = r5 subscriber", "$ r2 = $ r1 get", "$ r3 = io reactivex processor async processor terminate", "if $ r2 ! = $ r3 goto label1", "r6 = io reactivex processor async processor r0", "$ r4 = r6 value", "goto label2", "label return $ r4", "if $ r2 ! = $ r3 goto label1", "label $ r4 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = io reactivex processor async processor r0", "r1 = r3 get value", "if r1 == null goto label1", "$ r2 = newarray java lang object [ 1 ]", "$ r2 [ 0 ] = r1", "goto label2", "label return $ r2", "if r1 == null goto label1", "label $ r2 = newarray java lang object [ 0 ]"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util concurrent time unit nanoseconds", "r4 = io reactivex scheduler r0", "$ r3 = r4 schedule direct r1 0l $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = io reactivex rxjava3 internal util atomic throwable r0", "r1 = r3 terminate", "if r1 == null goto label1", "$ r2 = io reactivex rxjava3 internal util exception helper terminate", "if r1 == $ r2 goto label1", "io reactivex rxjava3 plugins rx java plugins on error r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["i3 = @ parameter0", "$ i0 = i3 > > > 16", "i4 = i3 ^ $ i0", "i5 = i4 * -2048144789", "$ i1 = i5 > > > 13", "i6 = i5 ^ $ i1", "i7 = i6 * -1028477387", "$ i2 = i7 > > > 16", "i8 = i7 ^ $ i2", "return i8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = new io sentry breadcrumb", "specialinvoke $ r3 < init >", "$ r3 set category \\ `` navigation\\ ``", "$ r3 set type \\ `` navigation\\ ``", "$ r3 set data \\ `` from\\", "$ r3 set data \\ `` to\\", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry breadcrumb r0", "$ r1 = r2 message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if null ! = r1 goto label1", "r6 = new java lang null pointer exception", "specialinvoke r6 < init > \\ `` attempt to add null object to queue\\ ``", "throw r6", "if null ! = r1 goto label1", "label r7 = io sentry circular fifo queue r0", "$ z0 = r7 be at full capacity", "if $ z0 == 0 goto label2", "r8 = io sentry circular fifo queue r0", "r8 remove", "label r9 = io sentry circular fifo queue r0", "$ r2 = r9 element", "r10 = io sentry circular fifo queue r0", "$ i0 = r10 end", "$ i1 = $ i0 + 1", "r11 = io sentry circular fifo queue r0", "r11 end = $ i1", "$ r2 [ $ i0 ] = r1", "r12 = io sentry circular fifo queue r0", "$ i3 = r12 end", "r13 = io sentry circular fifo queue r0", "$ i2 = r13 max element", "if $ i3 < $ i2 goto label3", "r14 = io sentry circular fifo queue r0", "r14 end = 0", "label r15 = io sentry circular fifo queue r0", "$ i5 = r15 end", "r16 = io sentry circular fifo queue r0", "$ i4 = r16 start", "if $ i5 ! = $ i4 goto label4", "r17 = io sentry circular fifo queue r0", "r17 full = 1", "label return 1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry exception exception mechanism exception r0", "$ r1 = r2 thread", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry protocol sentry exception r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io sentry protocol sentry exception r0", "r2 value = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry protocol sentry exception r0", "$ r1 = r2 module", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io sentry protocol sentry exception r0", "r2 stacktrace = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io sentry protocol sentry thread r0", "r2 id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io sentry protocol sentry thread r0", "r2 name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry scope r0", "$ r1 = r2 transaction", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry scope r0", "$ r1 = r2 attachment", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry sentry option r0", "$ r1 = r2 serializer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io sentry sentry option r0", "r2 before send = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry sentry option r0", "$ r1 = r2 cache dir path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io sentry sentry option r0", "$ i0 = r1 max cache item", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry sentry option r0", "$ r1 = r2 proxy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io sentry sentry option r0", "$ z0 = r1 attach thread", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io sentry sentry option r0", "$ z0 = r1 attach server name", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r2 = java lang boolean true", "r3 = io sentry sentry option r0", "$ r1 = r3 enable uncaught exception handler", "$ z0 = $ r2 equal $ r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry sentry option r0", "$ r1 = r2 enable uncaught exception handler", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io sentry sentry option r0", "$ i0 = r1 max queue size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = io sentry sentry option r0", "r1 enable external configuration = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io sentry sentry option r0", "$ r3 = r5 tag", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = io sentry sentry option r0", "$ z0 = r1 enable shutdown hook", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r15 = new io sentry session", "r16 = io sentry session r0", "$ r3 = r16 status", "r17 = io sentry session r0", "$ r4 = r17 start", "r18 = io sentry session r0", "$ r5 = r18 timestamp", "r19 = io sentry session r0", "$ r2 = r19 error count", "$ i0 = $ r2 get", "r20 = io sentry session r0", "$ r14 = r20 distinct id", "r21 = io sentry session r0", "$ r13 = r21 session id", "r22 = io sentry session r0", "$ r12 = r22 init", "r23 = io sentry session r0", "$ r11 = r23 sequence", "r24 = io sentry session r0", "$ r10 = r24 duration", "r25 = io sentry session r0", "$ r9 = r25 ip address", "r26 = io sentry session r0", "$ r8 = r26 user agent", "r27 = io sentry session r0", "$ r7 = r27 environment", "r28 = io sentry session r0", "$ r6 = r28 release", "specialinvoke r15 < init > $ r3 $ r4 $ r5 $ i0 $ r14 $ r13 $ r12 $ r11 $ r10 $ r9 $ r8 $ r7 $ r6", "return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry transport reusable count latch r0", "$ r1 = r2 sync", "$ i0 = io sentry transport reusable count latch $ sync access $ 000 $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry transport reusable count latch r0", "$ r1 = r2 sync", "io sentry transport reusable count latch $ sync access $ 200 $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ z0 = r0 be empty", "if $ z0 == 0 goto label2", "label return r0", "if $ z0 == 0 goto label2", "label $ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = r0 substring 0 1", "$ r3 = java util locale root", "$ r4 = $ r2 to upper case $ r3", "$ r5 = $ r1 append $ r4", "$ r6 = r0 substring 1", "$ r7 = java util locale root", "$ r8 = $ r6 to low case $ r7", "$ r9 = $ r5 append $ r8", "$ r10 = $ r9 to string", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["$ r0 = java lang system get property \\ `` java vm name\\", "$ r1 = $ r0 to lower case", "$ z0 = $ r1 contain \\ `` hotspot\\ ``", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org ehcache sizeof impl jvm information current_jvm_information", "$ i0 = $ r0 get java pointer size", "return $ i0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r8 = new java lang illegal argument exception", "specialinvoke r8 < init > \\ `` other can not be null\\ ``", "throw r8", "if r1 ! = null goto label1", "label r9 = org slf4j helper basic marker r0", "$ r3 = r9 name", "$ z0 = $ r3 equal r1", "if $ z0 == 0 goto label2", "return 1", "if $ z0 == 0 goto label2", "label r10 = org slf4j helper basic marker r0", "$ z1 = r10 have reference", "if $ z1 == 0 goto label5", "i1 = 0", "label r11 = org slf4j helper basic marker r0", "$ r4 = r11 referece list", "$ i0 = $ r4 size", "if i1 > = $ i0 goto label5", "r12 = org slf4j helper basic marker r0", "$ r5 = r12 referece list", "$ r6 = $ r5 get i1", "r2 = org slf4j marker $ r6", "$ z2 = r2 contain r1", "if $ z2 == 0 goto label4", "label i1 = i1 + 1", "goto label3", "if i1 > = $ i0 goto label5", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r5 = new java lang illegal argument exception", "specialinvoke $ r5 < init > \\ `` key parameter can not be null\\ ``", "throw $ r5", "if r0 ! = null goto label1", "label $ r1 = org slf4j mdc mdc adapter", "if $ r1 ! = null goto label2", "$ r4 = new java lang illegal state exception", "specialinvoke $ r4 < init > \\ `` m d c adapter can not be null see also http www slf4j org code html #null_ m d c a\\ ``", "throw $ r4", "if $ r1 ! = null goto label2", "label $ r2 = org slf4j mdc mdc adapter", "$ r3 = $ r2 get r0", "return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org slf4j helper message formatter array format r0 r1 null", "$ r3 = r2 get message", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["org slf4j logger factory reset", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = org slf4j impl simple logger r0", "specialinvoke r4 format and log 30 r1 r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = io vertx core buffer buffer buffer r0 r1", "r2 = io vertx axle core buffer buffer new instance $ r3", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core buffer buffer r0", "$ r2 = r3 delegate", "r1 = $ r2 to json object", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core buffer buffer r0", "$ r2 = r3 delegate", "r1 = $ r2 to json array", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = io vertx axle core buffer buffer r0", "$ r1 = r3 delegate", "$ r1 append unsigned short i0", "r4 = io vertx axle core buffer buffer r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r3 = io vertx axle core buffer buffer r0", "$ r1 = r3 delegate", "$ r1 set int i0 i1", "r4 = io vertx axle core buffer buffer r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r5 = io vertx axle core buffer buffer r0", "$ r3 = r5 delegate", "$ r3 set string i0 r1 r2", "r6 = io vertx axle core buffer buffer r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx axle core buffer buffer r0", "$ r2 = r4 delegate", "$ r2 append bytes r1", "r5 = io vertx axle core buffer buffer r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx axle core cli cli r0", "$ r2 = r4 delegate", "$ r2 set summary r1", "r5 = io vertx axle core cli cli r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = io vertx axle core cli cli r0", "$ r1 = r3 delegate", "$ r1 remove argument i0", "r4 = io vertx axle core cli cli r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = io vertx axle core composite future r0", "$ r2 = r3 delegate", "r1 = $ r2 result at i0", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core context r0", "$ r2 = r3 delegate", "r1 = $ r2 deployment i d", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io vertx axle core context r0", "$ r2 = r3 delegate", "z0 = $ r2 remove r1", "return z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx axle core dns mx record r0", "$ r1 = r2 delegate", "i0 = $ r1 priority", "return i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = io vertx axle core eventbus event bus r0", "$ r4 = event bus $ lambda_request_4__4 bootstrap $ r6 r1 r2 r3", "$ r5 = io vertx axle async result completion stage to completion stage $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = io vertx axle core eventbus message r0", "$ r2 = r4 delegate", "$ r3 = $ r2 header", "r1 = io vertx axle core multi map new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx axle core file file prop r0", "$ r1 = r2 delegate", "l0 = $ r1 creation time", "return l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx axle core file file system r0", "$ r3 = file system $ lambda_symlink_13__13 bootstrap $ r5 r1 r2", "$ r4 = io vertx axle async result completion stage to completion stage $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx axle core file file system r0", "$ r3 = file system $ lambda_write file_25__25 bootstrap $ r5 r1 r2", "$ r4 = io vertx axle async result completion stage to completion stage $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx axle core file file system r0", "$ r2 = file system $ lambda_create temp directory_31__31 bootstrap $ r4 r1", "$ r3 = io vertx axle async result completion stage to completion stage $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx axle core composite future r0", "$ r1 = r2 delegate", "z0 = $ r1 try complete", "return z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r3 = io vertx axle core http cookie r0", "$ r1 = r3 delegate", "$ r1 set max age l0", "r4 = io vertx axle core http cookie r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = io vertx axle core http cookie r0", "$ r1 = r3 delegate", "$ r1 set http only z0", "r4 = io vertx axle core http cookie r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx axle core http cookie r0", "$ r2 = r4 delegate", "$ r2 set same site r1", "r5 = io vertx axle core http cookie r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 == null goto label1", "r2 get class", "$ r7 = http client $ accept__9 bootstrap $ r2", "goto label2", "label r8 = io vertx axle core http http client r0", "$ r3 = specialinvoke r8 __get r1 $ r7", "return $ r3", "if r2 == null goto label1", "label $ r7 = null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx axle core http http client r0", "$ r3 = r5 delegate", "$ r4 = $ r3 post r1", "r2 = io vertx axle core http http client request new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx axle core http http client r0", "$ r3 = r5 delegate", "$ r4 = $ r3 option r1", "r2 = io vertx axle core http http client request new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r6 = io vertx axle core http http client r0", "$ r4 = r6 delegate", "$ r5 = $ r4 delete i0 r1 r2", "r3 = io vertx axle core http http client request new instance $ r5", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 == null goto label1", "r2 get class", "$ r7 = http client $ accept__46 bootstrap $ r2", "goto label2", "label r8 = io vertx axle core http http client r0", "$ r3 = specialinvoke r8 __delete r1 $ r7", "return $ r3", "if r2 == null goto label1", "label $ r7 = null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r7 = io vertx axle core http http client r0", "$ r5 = http client $ lambda_web socket abs_5__88 bootstrap $ r7 r1 r2 r3 r4", "$ r6 = io vertx axle async result completion stage to completion stage $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = io vertx axle core http http connection r0", "$ r1 = r3 delegate", "$ r1 set window size i0", "r4 = io vertx axle core http http connection r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r1 = io vertx core json pointer json pointer create", "r0 = io vertx axle core json pointer json pointer new instance $ r1", "return r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core net net socket r0", "$ r1 = net socket $ lambda_close_10__16 bootstrap $ r3", "$ r2 = io vertx axle async result completion stage to completion stage $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r1 = io vertx core net self sign certificate create", "r0 = io vertx axle core net self sign certificate new instance $ r1", "return r0"], "adj": [[1], [2], []]}
{"nodes": ["$ r1 = io vertx core net self sign certificate create", "r0 = io vertx axle core net self sign certificate new instance $ r1", "return r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core parsetools json event r0", "$ r2 = r3 delegate", "r1 = $ r2 instant value", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "$ r1 = io vertx core parsetools record parser new fix i0", "r0 = io vertx axle core parsetools record parser new instance $ r1", "return r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core shareddata counter r0", "$ r1 = counter $ lambda_get_1__4 bootstrap $ r3", "$ r2 = io vertx axle async result completion stage to completion stage $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 get delegate", "$ r4 = r1 get delegate", "$ r5 = io vertx core stream pump pump $ r3 $ r4", "r2 = io vertx axle core stream pump new instance $ r5", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r1 = io vertx core vertx vertx", "r0 = io vertx axle core vertx new instance $ r1", "return r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r4 = io vertx axle core vertx r0", "$ r2 = r4 delegate", "$ r3 = $ r2 create net server", "r1 = io vertx axle core net net server new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = io vertx axle core vertx r0", "$ r2 = r4 delegate", "$ r3 = $ r2 create http client", "r1 = io vertx axle core http http client new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = io vertx axle core vertx r0", "$ r2 = r4 delegate", "$ r3 = $ r2 create datagram socket", "r1 = io vertx axle core datagram datagram socket new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = io smallrye common expression expression r0", "$ r1 = r2 reference string", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = io smallrye common function function $ discard consumer instance", "r1 = java util function consumer $ r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = io smallrye mutiny vertx core abstract verticle r0", "r2 = r8 async stop", "if r2 == null goto label1", "$ r3 = r2 subscribe", "$ r4 = abstract verticle $ lambda_stop_1__1 bootstrap $ r1", "r1 get class", "$ r6 = abstract verticle $ fail__3 bootstrap $ r1", "$ r3 with $ r4 $ r6", "goto label2", "label return", "if r2 == null goto label1", "label specialinvoke r0 stop r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx mutiny core shareddata counter r0", "$ r1 = counter $ lambda_get_1__2 bootstrap $ r3", "$ r2 = io smallrye mutiny vertx async result uni to uni $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r12 = new java lang null pointer exception", "specialinvoke r12 < init > \\ `` type description be require \\ ``", "throw r12", "if r1 ! = null goto label1", "label r2 = r1 get tag", "r13 = org yaml snakeyaml constructor base constructor r0", "$ r3 = r13 type tag", "$ r4 = r1 get type", "$ r3 put r2 $ r4", "r14 = org yaml snakeyaml constructor base constructor r0", "$ r6 = r14 get property utils", "r1 set property utils $ r6", "r15 = org yaml snakeyaml constructor base constructor r0", "$ r7 = r15 type definition", "$ r8 = r1 get type", "$ r9 = $ r7 put $ r8 r1", "$ r10 = org yaml snakeyaml type description $ r9", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org yaml snakeyaml dumper option r0", "r1 canonical = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r2 = specialinvoke r0 get argument", "$ r3 = r10 append $ r2", "$ r4 = $ r3 append \\", "r11 = org yaml snakeyaml event collection start event r0", "$ r5 = r11 tag", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 append \\", "r12 = org yaml snakeyaml event collection start event r0", "$ z0 = r12 implicit", "$ r8 = $ r7 append $ z0", "$ r9 = $ r8 to string", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org yaml snakeyaml event event", "if $ z0 == 0 goto label1", "r4 = org yaml snakeyaml event event r0", "$ r2 = r4 to string", "$ r3 = r1 to string", "$ z1 = $ r2 equal $ r3", "return $ z1", "if $ z0 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org yaml snakeyaml parser parser impl r0", "$ r1 = r6 current event", "if $ r1 ! = null goto label1", "r7 = org yaml snakeyaml parser parser impl r0", "$ r2 = r7 state", "if $ r2 == null goto label1", "r8 = org yaml snakeyaml parser parser impl r0", "$ r3 = r8 state", "$ r4 = $ r3 produce", "r9 = org yaml snakeyaml parser parser impl r0", "r9 current event = $ r4", "label r10 = org yaml snakeyaml parser parser impl r0", "$ r5 = r10 current event", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org yaml snakeyaml type description r0", "$ r3 = r8 property", "$ z0 = $ r3 contain key r1", "if $ z0 == 0 goto label1", "r9 = org yaml snakeyaml type description r0", "$ r4 = r9 property", "$ r5 = $ r4 get r1", "$ r6 = org yaml snakeyaml introspector property substitute $ r5", "r2 = $ r6 get actual type argument", "if r2 == null goto label1", "$ i0 = lengthof r2", "if $ i0 < = 0 goto label1", "$ r7 = r2 [ 0 ]", "return $ r7", "if $ i0 < = 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new org yaml snakeyaml reader stream reader", "r5 = new org yaml snakeyaml reader unicode reader", "specialinvoke r5 < init > r1", "r7 = java io reader r5", "specialinvoke r6 < init > r7", "r8 = org yaml snakeyaml yaml r0", "$ r4 = specialinvoke r8 load from reader r6 class \\ `` ljava lang object \\ ``", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = new org yaml snakeyaml composer composer", "r12 = new org yaml snakeyaml parser parser impl", "r11 = new org yaml snakeyaml reader stream reader", "specialinvoke r11 < init > r1", "specialinvoke r12 < init > r11", "r16 = org yaml snakeyaml yaml r0", "$ r8 = r16 resolver", "r17 = org yaml snakeyaml yaml r0", "$ r7 = r17 load config", "r18 = org yaml snakeyaml parser parser r12", "specialinvoke r13 < init > r18 $ r8 $ r7", "r14 = new org yaml snakeyaml yaml $ 2", "r19 = org yaml snakeyaml yaml r0", "specialinvoke r14 < init > r19 r13", "r15 = new org yaml snakeyaml yaml $ node iterable", "r20 = java util iterator r14", "specialinvoke r15 < init > r20", "r21 = java lang iterable r15", "return r21"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r5 = org yaml snakeyaml yaml r0", "$ r4 = r5 resolver", "$ r4 add implicit resolver r1 r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org yaml snakeyaml dumper option r0", "r1 indent with indicator = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org yaml snakeyaml comment comment event collector r0", "$ r1 = r2 comment line list", "$ z0 = $ r1 be empty", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["org xerial snappy snappy loader clean up extracted native lib", "org xerial snappy snappy loader set snappy api null", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = com sonar orchestrator container server r0", "$ r1 = r2 version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r10 = com sonar orchestrator container server r0", "$ r3 = r10 new http call \\ `` api project create\\ ``", "$ r4 = com sonar orchestrator http http method post", "$ r5 = $ r3 set method $ r4", "$ r6 = $ r5 set admin credential", "$ r7 = $ r6 set param \\ `` project\\", "$ r8 = $ r7 set param \\ `` name\\", "$ r8 execute", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "java util object require non null r1 \\ `` header key can not be null\\ ``", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r5 = r12 append \\ `` header [ \\ ``", "$ r6 = $ r5 append r1", "$ r7 = $ r6 append \\ `` ] can not have null value\\ ``", "$ r8 = $ r7 to string", "java util object require non null r2 $ r8", "r13 = com sonar orchestrator http http call r0", "$ r10 = r13 header", "$ r10 put r1 r2", "r14 = com sonar orchestrator http http call r0", "return r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = spoon contract verifier r0", "r1 check shadow", "r2 = spoon contract verifier r0", "r2 check parent contract", "r3 = spoon contract verifier r0", "r3 check parent consistency", "r4 = spoon contract verifier r0", "r4 check modifier", "r5 = spoon contract verifier r0", "r5 check assignment contract", "r6 = spoon contract verifier r0", "r6 check contract ct scanner", "r7 = spoon contract verifier r0", "r7 check bound and unbound type reference", "r8 = spoon contract verifier r0", "r8 check model be tree", "r9 = spoon contract verifier r0", "r9 check contract ct scanner", "r10 = spoon contract verifier r0", "r10 check element be contain in attribute of it parent", "r11 = spoon contract verifier r0", "r11 check element to path to element equivalence", "r12 = spoon contract verifier r0", "r12 check role in parent", "r13 = spoon contract verifier r0", "r13 check java identifier", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = spoon fluent launcher r0", "$ r2 = r3 launcher", "$ r2 set source output directory r1", "r4 = spoon fluent launcher r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = spoon fluent launcher r0", "$ r2 = r4 launcher", "$ r3 = $ r2 get environment", "$ r3 set source classpath r1", "r5 = spoon fluent launcher r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = spoon pattern pattern parameter configurator r0", "$ r2 = r4 current parameter", "$ r2 set container kind r1", "r5 = spoon pattern pattern parameter configurator r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = spoon reflect factory annotation factory r0", "$ r2 = r3 get r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = spoon reflect factory code factory r0", "$ r3 = r10 factory", "$ r4 = $ r3 core", "r2 = $ r4 create text block", "r2 set value r1", "r11 = spoon reflect factory code factory r0", "$ r6 = r11 factory", "$ r7 = $ r6 type", "$ r8 = $ r7 string", "r2 set type $ r8", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = spoon reflect factory code factory r0", "$ r2 = r10 factory", "$ r3 = $ r2 core", "$ r4 = $ r3 create catch variable reference", "$ r5 = r1 get type", "$ r6 = $ r4 set type $ r5", "$ r7 = r1 get simple name", "$ r8 = $ r6 set simple name $ r7", "$ r9 = spoon reflect reference ct catch variable reference $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = java util enum set none of class \\ `` lspoon reflect declaration modifier kind \\ ``", "java util collection add all r2 r1", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 contain \\ `` \\n\\ ``", "if $ z0 == 0 goto label1", "r5 = new spoon spoon exception", "specialinvoke r5 < init > \\ `` the content of your comment contain at least one line separator please consider use a block comment by call create comment \\\\\\ `` your content\\\\\\", "r6 = java lang throwable r5", "throw r6", "if $ z0 == 0 goto label1", "label $ r2 = spoon reflect code ct comment $ comment type inline", "r7 = spoon reflect factory code factory r0", "$ r3 = r7 create comment r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = spoon reflect factory compilation unit factory r0", "$ r3 = r6 cache compilation unit", "$ r4 = $ r3 get r1", "r2 = spoon reflect cu compilation unit $ r4", "if r2 == null goto label1", "return r2", "if r2 == null goto label1", "label r7 = spoon reflect factory compilation unit factory r0", "$ r5 = r7 _create r1", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = spoon reflect factory constructor factory r0", "$ r3 = r13 factory", "$ r4 = $ r3 type", "$ r5 = r1 get declare class", "r2 = $ r4 create reference $ r5", "$ r6 = r2 clone", "r14 = spoon reflect factory constructor factory r0", "$ r7 = r14 factory", "$ r8 = $ r7 type", "$ r9 = r1 get parameter type", "$ r10 = java util array a list $ r9", "$ r11 = $ r8 create reference $ r10", "r15 = spoon reflect factory constructor factory r0", "$ r12 = r15 create reference r2 $ r6 \\ `` < init > \\", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r4 = specialinvoke r0 get r1", "$ r2 = spoon reflect declaration ct enum r4", "label return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = spoon reflect factory factory impl r0", "$ r1 = r5 eval", "if $ r1 ! = null goto label1", "r4 = new spoon reflect factory eval factory", "specialinvoke r4 < init > r0", "r6 = spoon reflect factory factory impl r0", "r6 eval = r4", "label r7 = spoon reflect factory factory impl r0", "$ r2 = r7 eval", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = spoon reflect factory type factory r0", "$ r1 = r3 double", "$ r2 = $ r1 clone", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = spoon reflect factory type factory r0", "$ r1 = r3 short", "$ r2 = $ r1 clone", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = spoon reflect factory type factory r0", "$ r1 = r3 date", "$ r2 = $ r1 clone", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = new java util array list", "r6 = spoon reflect factory type factory r0", "$ r2 = r6 factory", "$ r3 = $ r2 get model", "$ r4 = $ r3 get all type", "specialinvoke r5 < init > $ r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = spoon reflect factory type factory r0", "$ i0 = r3 have inner type r1", "$ r2 = r1 substring 0 $ i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = new java util array list", "$ i0 = r1 size", "specialinvoke r8 < init > $ i0", "r3 = r1 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r6 = r3 next", "r4 = java lang class $ r6", "r9 = spoon reflect factory type factory r0", "$ r7 = r9 create reference r4", "r8 add $ r7", "goto label1", "if $ z0 == 0 goto label2", "label return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r13 = spoon reflect path ct role r0", "$ r5 = r13 name", "r1 = $ r5 to lower case", "r2 = r1 split \\ `` _\\ ``", "$ i0 = lengthof r2", "if $ i0 ! = 1 goto label1", "return r1", "if $ i0 ! = 1 goto label1", "label r12 = new java lang string builder", "$ r7 = r2 [ 0 ]", "specialinvoke r12 < init > $ r7", "i4 = 1", "label $ i1 = lengthof r2", "if i4 > = $ i1 goto label3", "r4 = r2 [ i4 ]", "$ c2 = r4 char at 0", "$ c3 = java lang character to upper case $ c2", "r12 append $ c3", "$ r10 = r4 substring 1", "r12 append $ r10", "i4 = i4 + 1", "goto label2", "if i4 > = $ i1 goto label3", "label $ r8 = r12 to string", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = spoon reflect visitor chain ct query impl r0", "$ r4 = r8 input", "if $ r4 ! = null goto label1", "r7 = new java util array list", "specialinvoke r7 < init >", "r9 = spoon reflect visitor chain ct query impl r0", "r9 input = r7", "label if r1 == null goto label3", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "r3 = r2 next", "r10 = spoon reflect visitor chain ct query impl r0", "$ r5 = r10 input", "$ r5 add r3", "goto label2", "if $ z0 == 0 goto label3", "label r11 = spoon reflect visitor chain ct query impl r0", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = spoon reflect visitor ct scanner r0", "r2 scan null r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return 0", "if r0 ! = null goto label1", "label $ r3 = new java util string tokenizer", "specialinvoke $ r3 < init > r0 \\ `` \\ ``", "label $ z0 = $ r3 have more element", "if $ z0 == 0 goto label4", "r2 = $ r3 next token", "$ z1 = spoon reflect visitor java identifier be legal java identifier r2", "if $ z1 ! = 0 goto label3", "label goto label2", "if $ z0 == 0 goto label4", "label return 1"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r10 = spoon reflect visitor list printer r0", "$ z0 = r10 be first", "if $ z0 == 0 goto label1", "r11 = spoon reflect visitor list printer r0", "r11 be first = 0", "goto label4", "label return", "if $ z0 == 0 goto label1", "label r12 = spoon reflect visitor list printer r0", "$ z1 = r12 next prefix space", "if $ z1 == 0 goto label2", "r13 = spoon reflect visitor list printer r0", "$ r8 = r13 printer token writer", "$ r8 write space", "label r14 = spoon reflect visitor list printer r0", "$ r1 = r14 separator", "if $ r1 == null goto label3", "r15 = spoon reflect visitor list printer r0", "$ r4 = r15 separator", "$ z2 = $ r4 be empty", "if $ z2 ! = 0 goto label3", "r16 = spoon reflect visitor list printer r0", "$ r6 = r16 printer token writer", "r17 = spoon reflect visitor list printer r0", "$ r5 = r17 separator", "$ r6 write separator $ r5", "label r18 = spoon reflect visitor list printer r0", "$ z3 = r18 next suffix space", "if $ z3 == 0 goto label4", "r19 = spoon reflect visitor list printer r0", "$ r2 = r19 printer token writer", "$ r2 write space"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r27 = spoon reflect visitor model consistency checker r0", "$ r3 = r27 stack", "$ z0 = $ r3 be empty", "if $ z0 ! = 0 goto label9", "$ z1 = r1 be parent initialized", "if $ z1 == 0 goto label1", "$ r21 = r1 get parent", "r28 = spoon reflect visitor model consistency checker r0", "$ r22 = r28 stack", "$ r23 = $ r22 peek", "if $ r21 == $ r23 goto label9", "label $ z2 = r1 be parent initialized", "if $ z2 ! = 0 goto label2", "r29 = spoon reflect visitor model consistency checker r0", "$ z6 = r29 fix null parent", "if $ z6 ! = 0 goto label3", "label $ r4 = r1 get parent", "r30 = spoon reflect visitor model consistency checker r0", "$ r5 = r30 stack", "$ r6 = $ r5 peek", "if $ r4 == $ r6 goto label4", "r31 = spoon reflect visitor model consistency checker r0", "$ z5 = r31 fix inconsistency", "if $ z5 == 0 goto label4", "label r32 = spoon reflect visitor model consistency checker r0", "$ r18 = r32 stack", "$ r19 = $ r18 peek", "$ r20 = spoon reflect declaration ct element $ r19", "r1 set parent $ r20", "goto label9", "label r36 = spoon reflect visitor model consistency checker r0", "$ r26 = r36 stack", "$ r26 push r1", "return", "if $ z5 == 0 goto label4", "label $ z3 = r1 instanceof spoon reflect declaration ct name element", "if $ z3 == 0 goto label5", "$ r16 = spoon reflect declaration ct name element r1", "$ r17 = $ r16 get simple name", "$ r24 = dynamicinvoke \\ `` make concat with constants\\ `` < java lang string java lang string > $ r17 java lang invoke string concat factory make concat with constant \\ `` - \\u0001\\ ``", "goto label6", "label r2 = $ r24", "r33 = spoon reflect visitor model consistency checker r0", "$ r7 = r33 environment", "$ r8 = spoon support level warn", "$ z4 = r1 be parent initialized", "if $ z4 == 0 goto label7", "$ r25 = \\ `` inconsistent\\ ``", "goto label8", "label $ r9 = r1 get class", "$ r10 = r1 get position", "r34 = spoon reflect visitor model consistency checker r0", "$ r11 = r34 stack", "$ r12 = $ r11 peek", "$ r13 = spoon reflect declaration ct element $ r12", "$ r14 = $ r13 get position", "$ r15 = dynamicinvoke \\ `` make concat with constants\\ `` < java lang string java lang string java lang class java lang string spoon reflect cu source position spoon reflect cu source position > $ r25 $ r9 r2 $ r10 $ r14 java lang invoke string concat factory make concat with constant \\ `` \\u0001 parent for \\u0001\\u0001 - \\u0001 - \\u0001\\ ``", "$ r7 report null $ r8 $ r15", "r35 = spoon reflect visitor model consistency checker r0", "r35 dump stack", "if $ z4 == 0 goto label7", "label $ r25 = \\ `` null\\ ``", "if $ z3 == 0 goto label5", "label $ r24 = \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [], [37], [38], [39], [40], [41], [42], [], [44], [45], [46], [47], [48], [49], [50], [], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 filter child r1", "$ r3 = $ r2 list", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get jdt compiler", "$ r6 = new java util array list", "specialinvoke $ r6 < init >", "$ r7 = r2 get factory", "$ r8 = $ r7 type", "$ r9 = $ r8 get all", "r4 = $ r9 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label3", "$ r13 = r4 next", "r5 = spoon reflect declaration ct type $ r13", "$ z1 = r5 be top level", "if $ z1 == 0 goto label2", "$ r14 = new spoon support compiler jdt compilation unit wrapper", "specialinvoke $ r14 < init > r5", "$ r6 add $ r14", "label goto label1", "if $ z0 == 0 goto label3", "label $ r10 = newarray org eclipse jdt internal compiler batch compilation unit [ 0 ]", "$ r11 = $ r6 to array $ r10", "$ r12 = org eclipse jdt internal compiler batch compilation unit [ ] $ r11", "r1 set compilation unit $ r12", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r22 = spoon support compiler jdt j d t tree builder helper r0", "$ r2 = r22 jdt tree builder", "$ r3 = $ r2 get context builder", "r23 = org eclipse jdt internal compiler ast expression r1", "$ z0 = spoon support compiler jdt j d t tree builder query be lhs assignment $ r3 r23", "if $ z0 == 0 goto label1", "r24 = spoon support compiler jdt j d t tree builder helper r0", "$ r18 = r24 jdt tree builder", "$ r19 = $ r18 get factory", "$ r20 = $ r19 core", "r21 = $ r20 create field write", "goto label2", "label r26 = spoon support compiler jdt j d t tree builder helper r0", "$ r7 = r26 jdt tree builder", "$ r8 = $ r7 get reference builder", "$ r10 = r1 bind", "$ r9 = r1 token", "$ r11 = $ r8 get variable reference $ r10 $ r9", "r27 = spoon reflect code ct field access r21", "r28 = spoon reflect reference ct variable reference $ r11", "r27 set variable r28", "r29 = spoon support compiler jdt j d t tree builder helper r0", "$ r13 = r29 jdt tree builder", "$ r14 = $ r13 get reference builder", "$ r15 = r1 resolve type", "$ r16 = $ r14 get type reference $ r15", "r30 = spoon reflect code ct field access r21", "r30 set type $ r16", "r31 = spoon reflect code ct field access r21", "return r31", "if $ z0 == 0 goto label1", "label r25 = spoon support compiler jdt j d t tree builder helper r0", "$ r4 = r25 jdt tree builder", "$ r5 = $ r4 get factory", "$ r6 = $ r5 core", "r21 = $ r6 create field read"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r2 = spoon support modelobs action update action r0", "$ r1 = r2 new value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = spoon support visitor class type context r0", "r4 = spoon reflect declaration ct executable r1", "r5 = spoon reflect declaration ct executable r2", "$ z0 = r3 be same signature r4 r5 1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "label $ r2 = spoon support visitor java method handle utils lookup record component name", "$ r3 = $ r2 invoke r0", "label return $ r3"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = r1 get simple name", "r14 = spoon support visitor signature printer r0", "r14 write $ r4", "r15 = spoon support visitor signature printer r0", "r15 write \\ `` \\ ``", "$ r7 = r1 get parameter", "r2 = $ r7 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r11 = r2 next", "r3 = spoon reflect declaration ct parameter $ r11", "$ r12 = r3 get type", "r16 = spoon support visitor signature printer r0", "r17 = spoon reflect declaration ct element $ r12", "r16 scan r17", "r18 = spoon support visitor signature printer r0", "r18 write \\", "goto label1", "if $ z0 == 0 goto label2", "label $ r8 = r1 get parameter", "$ z1 = $ r8 be empty", "if $ z1 ! = 0 goto label3", "r19 = spoon support visitor signature printer r0", "r19 clear last", "label r20 = spoon support visitor signature printer r0", "r20 write \\ `` \\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r6 = spoon reflect declaration ct element r2", "$ r4 = spoon template substitution substitute r0 r1 r6", "r3 = spoon reflect declaration ct field $ r4", "r0 add field r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r14 = new spoon reflect visitor filter reference type filter", "specialinvoke r14 < init > class \\ `` lspoon reflect reference ct type reference \\ ``", "r15 = spoon reflect visitor filter r14", "r3 = spoon reflect visitor query get reference r0 r15", "r4 = r1 get qualify name", "r5 = r2 get simple name", "r6 = r2 get package", "r7 = r3 iterator", "label $ z0 = r7 have next", "if $ z0 == 0 goto label3", "$ r10 = r7 next", "r8 = spoon reflect reference ct type reference $ r10", "$ r11 = r8 get qualify name", "$ z1 = $ r11 equal r4", "if $ z1 == 0 goto label2", "r8 set simple name r5", "r8 set package r6", "label goto label1", "if $ z0 == 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 ! = null goto label1", "$ r2 = new java lang assertion error", "specialinvoke $ r2 < init > r0", "throw $ r2", "if r1 ! = null goto label1", "label return r1"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r14 = new spoon test utils model utils $ 1", "specialinvoke r14 < init > r2", "r15 = spoon launcher r14", "r4 = r15 create compiler", "$ r6 = newarray java lang string [ 1 ]", "$ r7 = r0 replace 46 47", "$ r8 = dynamicinvoke \\ `` make concat with constants\\ `` < java lang string java lang string java lang string > $ r7 r1 java lang invoke string concat factory make concat with constant \\ `` src test java \\u0001 \\u0001 java\\ ``", "$ r6 [ 0 ] = $ r8", "$ r9 = spoon compiler spoon resource helper resource $ r6", "r4 add input source $ r9", "r4 build", "$ r10 = r4 get factory", "$ r11 = $ r10 package", "$ r12 = $ r11 get r0", "$ r13 = $ r12 get type r1", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org springframework aop aspectj annotation annotation aware aspect j auto proxy creator r0", "$ r4 = r8 include pattern", "if $ r4 ! = null goto label1", "return 1", "if $ r4 ! = null goto label1", "label r9 = org springframework aop aspectj annotation annotation aware aspect j auto proxy creator r0", "$ r5 = r9 include pattern", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label4", "$ r6 = r2 next", "r3 = java util regex pattern $ r6", "$ r7 = r3 matcher r1", "$ z1 = $ r7 match", "if $ z1 == 0 goto label3", "label goto label2", "if $ z0 == 0 goto label4", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework aop aspectj annotation aspect j proxy factory r0", "$ r1 = r3 create aop proxy", "$ r2 = $ r1 get proxy", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 2147483647"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1", "r5 = org springframework aop aspectj type pattern class filter r0", "r5 type pattern = r1", "$ r2 = org aspectj weaver tool pointcut parser get pointcut parser support all primitive and use context classloader for resolution", "r6 = org springframework aop aspectj type pattern class filter r0", "$ r3 = specialinvoke r6 replace boolean operator r1", "$ r4 = $ r2 parse type pattern $ r3", "r7 = org springframework aop aspectj type pattern class filter r0", "r7 aspect j type pattern matcher = $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework aop framework abstract advise bean post processor r0", "r1 before exist advisor = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r1 = org springframework aop framework aop context current proxy", "r0 = $ r1 get", "if r0 ! = null goto label1", "$ r2 = new java lang illegal state exception", "specialinvoke $ r2 < init > \\ `` can not find current proxy set \\'expose proxy\\ ' property on advise to \\'true\\ ' to make it available \\ ``", "throw $ r2", "if r0 ! = null goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 get advisor", "$ r3 = r1 get advisor", "$ z0 = java util array equal $ r2 $ r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework aop framework autoproxy abstract advisor auto proxy creator r0", "$ r1 = r3 advisor retrieval helper", "$ r2 = $ r1 find advisor bean", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework aop framework autoproxy abstract auto proxy creator r0", "r2 interceptor name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = class \\ `` lorg aopalliance aop advice \\ ``", "$ z1 = $ r2 be assignable from r1", "if $ z1 ! = 0 goto label1", "$ r11 = class \\ `` lorg springframework aop advisor \\ ``", "$ z3 = $ r11 be assignable from r1", "if $ z3 ! = 0 goto label1", "$ r12 = class \\ `` lorg springframework aop framework aop infrastructure bean \\ ``", "$ z4 = $ r12 be assignable from r1", "if $ z4 == 0 goto label2", "label $ z5 = 1", "goto label3", "label z0 = $ z5", "if $ z5 == 0 goto label4", "r14 = org springframework aop framework autoproxy abstract auto proxy creator r0", "$ r3 = r14 logger", "$ z2 = $ r3 be trace enabled", "if $ z2 == 0 goto label4", "r15 = org springframework aop framework autoproxy abstract auto proxy creator r0", "$ r5 = r15 logger", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r6 = r13 append \\ `` do not attempt to auto-proxy infrastructure class [ \\ ``", "$ r7 = r1 get name", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 append \\ `` ] \\ ``", "$ r10 = $ r9 to string", "$ r5 trace $ r10", "label return z0", "if $ z4 == 0 goto label2", "label $ z5 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 == null goto label1", "$ z0 = r0 contains bean definition r1", "if $ z0 == 0 goto label1", "r2 = r0 get bean definition r1", "$ r4 = java lang boolean true", "$ r3 = org springframework aop framework autoproxy auto proxy utils preserve_target_class_attribute", "$ r5 = r2 get attribute $ r3", "$ z1 = $ r4 equal $ r5", "return $ z1", "if $ z0 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework aop framework autoproxy default advisor auto proxy creator r0", "r1 use prefix = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework aop framework autoproxy default advisor auto proxy creator r0", "$ z0 = r3 be use prefix", "if $ z0 == 0 goto label1", "r4 = org springframework aop framework autoproxy default advisor auto proxy creator r0", "$ r2 = r4 get advisor bean name prefix", "$ z1 = r1 start with $ r2", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework aop framework proxy config r0", "r1 proxy target class = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` other proxy config object must not be null\\ ``", "$ z0 = r1 proxy target class", "r2 = org springframework aop framework proxy config r0", "r2 proxy target class = $ z0", "$ z1 = r1 optimize", "r3 = org springframework aop framework proxy config r0", "r3 optimize = $ z1", "$ z2 = r1 expose proxy", "r4 = org springframework aop framework proxy config r0", "r4 expose proxy = $ z2", "$ z3 = r1 frozen", "r5 = org springframework aop framework proxy config r0", "r5 freeze = $ z3", "$ z4 = r1 opaque", "r6 = org springframework aop framework proxy config r0", "r6 opaque = $ z4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "specialinvoke r0 advice change", "entermonitor r0", "label r9 = org springframework aop framework proxy creator support r0", "$ z0 = r9 active", "if $ z0 == 0 goto label3", "r10 = org springframework aop framework proxy creator support r0", "$ r6 = r10 listener", "r2 = $ r6 iterator", "label $ z1 = r2 have next", "if $ z1 == 0 goto label3", "$ r7 = r2 next", "r3 = org springframework aop framework advise support listener $ r7", "r3 advice change r0", "goto label2", "if $ z1 == 0 goto label3", "label exitmonitor r0", "label goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework aop framework proxy factory bean r0", "$ r2 = r4 proxy class loader", "$ r3 = r1 get proxy $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if class \\ `` lorg springframework bean factory initialize bean \\ `` == r1 goto label1", "if class \\ `` lorg springframework bean factory disposable bean \\ `` == r1 goto label1", "$ r2 = r1 get interface", "$ z0 = org springframework util object utils contain element $ r2 class \\ `` lorg springframework bean factory aware \\ ``", "if $ z0 == 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["$ r1 = org springframework aop interceptor expose invocation interceptor invocation", "$ r2 = $ r1 get", "r0 = org aopalliance intercept method invocation $ r2", "if r0 ! = null goto label1", "$ r3 = new java lang illegal state exception", "specialinvoke $ r3 < init > \\ `` no method invocation find check that an aop invocation be in progress and that the expose invocation interceptor be upfront in the interceptor chain specifically note that advices with order highest_precedence will execute before expose invocation interceptor ! \\ ``", "throw $ r3", "if r0 ! = null goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not empty r1 \\ `` \\'patterns\\ ' must not be empty\\ ``", "$ i0 = lengthof r1", "$ r2 = newarray java lang string [ $ i0 ]", "r7 = org springframework aop support abstract regexp method pointcut r0", "r7 pattern = $ r2", "i2 = 0", "label $ i1 = lengthof r1", "if i2 > = $ i1 goto label2", "r8 = org springframework aop support abstract regexp method pointcut r0", "$ r5 = r8 pattern", "$ r4 = r1 [ i2 ]", "$ r6 = org springframework util string utils trim whitespace $ r4", "$ r5 [ i2 ] = $ r6", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label r9 = org springframework aop support abstract regexp method pointcut r0", "$ r3 = r9 pattern", "r10 = org springframework aop support abstract regexp method pointcut r0", "r10 init pattern representation $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "org springframework util assert not null r0 \\ `` candidate object must not be null\\ ``", "r3 = null", "$ z0 = r0 instanceof org springframework aop target class aware", "if $ z0 == 0 goto label1", "$ r2 = org springframework aop target class aware r0", "r3 = $ r2 get target class", "label if r3 ! = null goto label4", "$ z1 = org springframework aop support aop utils be cglib proxy r0", "if $ z1 == 0 goto label2", "$ r1 = r0 get class", "$ r4 = $ r1 get superclass", "goto label3", "label r3 = $ r4", "label return r3", "if $ z1 == 0 goto label2", "label $ r4 = r0 get class"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org springframework util reflection utils be equal method r0", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org springframework util assert not null r0 \\ `` first class filter must not be null\\ ``", "org springframework util assert not null r1 \\ `` second class filter must not be null\\ ``", "r4 = new org springframework aop support class filter $ union class filter", "$ r3 = newarray org springframework aop class filter [ 2 ]", "$ r3 [ 0 ] = r0", "$ r3 [ 1 ] = r1", "specialinvoke r4 < init > $ r3", "r5 = org springframework aop class filter r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework aop support introduction info support r0", "$ r2 = r3 publish interface", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework aop target abstract bean factory base target source r0", "$ r1 = r2 target bean name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework aop target abstract bean factory base target source r0", "r2 target class = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org springframework aop target abstract bean factory base target source r0", "$ r2 = r5 target bean name", "if $ r2 ! = null goto label1", "r4 = new java lang illegal state exception", "specialinvoke r4 < init > \\ `` property \\'target bean name\\ ' be required\\ ``", "throw r4", "if $ r2 ! = null goto label1", "label r6 = org springframework aop target abstract bean factory base target source r0", "r6 bean factory = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r5 = org springframework aop target abstract lazy creation target source r0", "$ r1 = r5 lazy target", "if $ r1 ! = null goto label1", "r6 = org springframework aop target abstract lazy creation target source r0", "$ r3 = r6 logger", "$ r3 debug \\ `` initialize lazy target object\\ ``", "r7 = org springframework aop target abstract lazy creation target source r0", "$ r4 = r7 create object", "r8 = org springframework aop target abstract lazy creation target source r0", "r8 lazy target = $ r4", "label r9 = org springframework aop target abstract lazy creation target source r0", "$ r2 = r9 lazy target", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework aop target abstract pool target source r0", "$ i0 = r1 max size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework aop target common pool2 target source r0", "$ i0 = r1 min idle", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework aop target common pool2 target source r0", "$ l0 = r1 time between eviction run millis", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org springframework aop target common pool target source constant", "$ r3 = $ r2 a number r1", "$ b0 = $ r3 byte value", "r4 = org springframework aop target common pool target source r0", "r4 set when exhausted action $ b0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework aop target prototype target source r0", "$ r1 = r2 new prototype instance", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework aop framework adapter throw advice interceptor r0", "$ r1 = r2 exception handler map", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` scoped target \\ ``", "$ r3 = $ r2 append r0", "$ r4 = $ r3 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = specialinvoke r0 get attribute r1", "$ r3 = org springframework bean bean metadata attribute $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "label $ r4 = r0 get declare method r1 r2", "label return $ r4"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` \\'required annotation type\\ ' must not be null\\ ``", "r2 = org springframework bean factory annotation require annotation bean post processor r0", "r2 require annotation type = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ z0 = r0 start with \\ `` & \\ ``", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "org springframework util assert not null r0 \\ `` \\'name\\ ' must not be null\\ ``", "i0 = r0 index of \\ `` #\\ ``", "if i0 == -1 goto label1", "$ r1 = r0 substring 0 i0", "goto label2", "label return $ r1", "if i0 == -1 goto label1", "label $ r1 = r0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org springframework util assert not null r0 \\ `` listable bean factory must not be null\\ ``", "r2 = r0 get bean of type r1", "$ r3 = org springframework bean factory bean factory utils unique bean r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r3 = org springframework bean factory config constructor argument value r0", "$ r2 = r3 get indexed argument value i0 r1 null", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r15 = org springframework bean factory config constructor argument value r0", "$ r6 = r15 generic argument value", "r4 = $ r6 iterator", "label $ z4 = r4 have next", "if $ z4 == 0 goto label6", "$ r7 = r4 next", "r5 = org springframework bean factory config constructor argument value $ value holder $ r7", "if r3 == null goto label2", "$ z3 = r3 contain r5", "if $ z3 == 0 goto label2", "goto label1", "if $ z3 == 0 goto label2", "label $ r8 = r5 get name", "if $ r8 == null goto label3", "if r2 == null goto label1", "$ r14 = r5 get name", "$ z2 = $ r14 equal r2", "if $ z2 ! = 0 goto label3", "label $ r9 = r5 get type", "if $ r9 == null goto label4", "if r1 == null goto label1", "$ r13 = r5 get type", "$ z1 = org springframework util class utils match type name r1 $ r13", "if $ z1 ! = 0 goto label4", "label if r1 == null goto label5", "$ r10 = r5 get type", "if $ r10 ! = null goto label5", "$ r11 = r5 get name", "if $ r11 ! = null goto label5", "$ r12 = r5 get value", "$ z0 = org springframework util class utils be assignable value r1 $ r12", "if $ z0 ! = 0 goto label5", "label return r5", "if $ z4 == 0 goto label6", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], []]}
{"nodes": ["r0 = @ this", "r6 = org springframework bean factory config dependency descriptor r0", "$ r1 = r6 field", "if $ r1 == null goto label1", "r7 = org springframework bean factory config dependency descriptor r0", "$ r4 = r7 field", "r8 = org springframework bean factory config dependency descriptor r0", "$ i0 = r8 nest level", "r9 = org springframework bean factory config dependency descriptor r0", "$ r3 = r9 contain class", "$ r5 = org springframework core resolvable type for field $ r4 $ i0 $ r3", "goto label2", "label return $ r5", "if $ r1 == null goto label1", "label r10 = org springframework bean factory config dependency descriptor r0", "$ r2 = r10 method parameter", "$ r5 = org springframework core resolvable type for method parameter $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r5 = new java lang illegal argument exception", "specialinvoke r5 < init > \\ `` \\'target list class\\ ' must not be null\\ ``", "throw r5", "if r1 ! = null goto label1", "label $ r2 = class \\ `` ljava util list \\ ``", "$ z0 = $ r2 be assignable from r1", "if $ z0 ! = 0 goto label2", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` \\'target list class\\ ' must implement [ java util list ] \\ ``", "throw r6", "if $ z0 ! = 0 goto label2", "label r7 = org springframework bean factory config list factory bean r0", "r7 target list class = r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework bean factory config property override configurer r0", "$ r2 = r3 bean name", "$ z0 = $ r2 contain r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org springframework bean property accessor factory for bean property access r1", "r3 = org springframework bean factory config property path factory bean r0", "r3 target bean wrapper = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org springframework bean factory config property placeholder configurer constant", "$ r3 = $ r2 a number r1", "$ i0 = $ r3 int value", "r4 = org springframework bean factory config property placeholder configurer r0", "r4 system property mode = $ i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` \\'target type\\ ' must not be null\\ ``", "r2 = org springframework bean factory config type string value r0", "r2 target type = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util array a list r1", "r3 = org springframework bean factory config yaml processor r0", "r3 document matcher = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` resolution method must not be null\\ ``", "r2 = org springframework bean factory config yaml processor r0", "r2 resolution method = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = new java util property", "specialinvoke r4 < init >", "r5 = new org springframework bean factory config yaml property factory bean $ 1", "r6 = org springframework bean factory config yaml property factory bean r0", "specialinvoke r5 < init > r6 r4", "r7 = org springframework bean factory config yaml property factory bean r0", "r8 = org springframework bean factory config yaml processor $ match callback r5", "r7 process r8", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory parse bean component definition r0", "$ r1 = r2 get description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r0 == r1 goto label1", "$ z0 = r1 instanceof org springframework bean factory parse bean component definition", "if $ z0 == 0 goto label2", "$ z1 = specialinvoke r0 equal r1", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = r3", "if r3 == null goto label3", "$ z0 = r2 be synthetic", "if $ z0 ! = 0 goto label3", "r10 = org springframework bean factory support abstract autowire capable bean factory r0", "$ z1 = r10 have instantiation aware bean post processor", "if $ z1 == 0 goto label3", "r11 = org springframework bean factory support abstract autowire capable bean factory r0", "$ r7 = r11 get bean post processor", "r4 = $ r7 iterator", "label $ z2 = r4 have next", "if $ z2 == 0 goto label3", "$ r8 = r4 next", "r5 = org springframework bean factory config bean post processor $ r8", "$ z3 = r5 instanceof org springframework bean factory config smart instantiation aware bean post processor", "if $ z3 == 0 goto label2", "r6 = org springframework bean factory config smart instantiation aware bean post processor r5", "r9 = r6 get early bean reference r9 r1", "if r9 ! = null goto label2", "return r9", "if r9 ! = null goto label2", "label goto label1", "if $ z2 == 0 goto label3", "label return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 be lazy init", "r4 = org springframework bean factory support abstract bean definition r0", "r4 set lazy init $ z0", "$ i0 = r1 get autowire mode", "r5 = org springframework bean factory support abstract bean definition r0", "r5 set autowire mode $ i0", "$ i1 = r1 get dependency check", "r6 = org springframework bean factory support abstract bean definition r0", "r6 set dependency check $ i1", "$ r2 = r1 get init method name", "r7 = org springframework bean factory support abstract bean definition r0", "r7 set init method name $ r2", "r8 = org springframework bean factory support abstract bean definition r0", "r8 set enforce init method 0", "$ r3 = r1 get destroy method name", "r9 = org springframework bean factory support abstract bean definition r0", "r9 set destroy method name $ r3", "r10 = org springframework bean factory support abstract bean definition r0", "r10 set enforce destroy method 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework bean factory support abstract bean definition r0", "r2 = r4 get bean class name", "if r2 ! = null goto label1", "return null", "if r2 ! = null goto label1", "label r3 = org springframework util class utils for name r2 r1", "r5 = org springframework bean factory support abstract bean definition r0", "r5 bean class = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory support abstract bean definition r0", "$ r1 = r2 constructor argument value", "$ z0 = $ r1 be empty", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework bean factory support abstract bean definition r0", "r1 enforce init method = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework bean factory support abstract bean definition r0", "$ z0 = r1 synthetic", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework bean factory support abstract bean definition r0", "r2 resource = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org springframework bean factory support bean definition resource", "specialinvoke r3 < init > r1", "r4 = org springframework bean factory support abstract bean definition r0", "r5 = org springframework core io resource r3", "r4 resource = r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r6 = @ parameter0", "r0 = @ parameter1", "$ z0 = r6 instanceof org springframework bean factory object factory", "if $ z0 == 0 goto label2", "$ z1 = r0 be instance r6", "if $ z1 ! = 0 goto label2", "r1 = org springframework bean factory object factory r6", "$ z2 = r6 instanceof java io serializable", "if $ z2 == 0 goto label1", "$ z3 = r0 be interface", "if $ z3 == 0 goto label1", "$ r3 = r0 get class loader", "$ r4 = newarray java lang class [ 1 ]", "$ r4 [ 0 ] = r0", "r7 = new org springframework bean factory support autowire utils $ object factory delegate invocation handler", "specialinvoke r7 < init > r1", "r8 = java lang reflect invocation handler r7", "r6 = java lang reflect proxy new proxy instance $ r3 $ r4 r8", "goto label2", "label return r6", "if $ z3 == 0 goto label1", "label $ r2 = r1 get object", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org springframework bean factory support bean definition builder r0", "$ r3 = r6 bean definition", "$ r4 = $ r3 get property value", "$ r4 add r1 r2", "r7 = org springframework bean factory support bean definition builder r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org springframework bean factory support bean definition builder r0", "$ r1 = r2 bean definition", "$ r1 set dependency check i0", "r3 = org springframework bean factory support bean definition builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = org springframework bean factory support bean definition builder r0", "$ r3 = r11 bean definition", "$ r4 = $ r3 get depends on", "if $ r4 ! = null goto label1", "r12 = org springframework bean factory support bean definition builder r0", "$ r10 = r12 bean definition", "$ r9 = newarray java lang string [ 1 ]", "$ r9 [ 0 ] = r1", "$ r10 set depend on $ r9", "goto label2", "label r15 = org springframework bean factory support bean definition builder r0", "return r15", "if $ r4 ! = null goto label1", "label r13 = org springframework bean factory support bean definition builder r0", "$ r5 = r13 bean definition", "$ r6 = $ r5 get depends on", "$ r7 = org springframework util object utils add object to array $ r6 r1", "r2 = java lang string [ ] $ r7", "r14 = org springframework bean factory support bean definition builder r0", "$ r8 = r14 bean definition", "$ r8 set depend on r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory support bean definition resource r0", "$ r1 = r2 bean definition", "$ i0 = $ r1 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "org springframework util assert not null r2 \\ `` singleton factory must not be null\\ ``", "r13 = org springframework bean factory support default singleton bean registry r0", "$ r5 = r13 singleton object", "entermonitor $ r5", "label r14 = org springframework bean factory support default singleton bean registry r0", "$ r6 = r14 singleton object", "$ z0 = $ r6 contain key r1", "if $ z0 ! = 0 goto label2", "r15 = org springframework bean factory support default singleton bean registry r0", "$ r7 = r15 singleton factory", "$ r7 put r1 r2", "r16 = org springframework bean factory support default singleton bean registry r0", "$ r9 = r16 early singleton object", "$ r9 remove r1", "r17 = org springframework bean factory support default singleton bean registry r0", "$ r11 = r17 register singleton", "$ r11 add r1", "label exitmonitor $ r5", "label goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory support manage list r0", "$ r1 = r2 element type name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework bean factory support manage list r0", "r1 merge enable = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r4 = org springframework bean factory support method override r0", "$ r2 = r4 override", "$ r3 = r1 get override", "$ r2 add all $ r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new org springframework core io support encode resource", "specialinvoke r4 < init > r1", "r5 = org springframework bean factory support property bean definition reader r0", "$ i0 = r5 load bean definition r4 r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework bean factory support property bean definition reader r0", "$ i0 = r2 register bean definition r1 null", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework bean factory wire bean wire info r0", "$ z0 = r1 dependency check", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = new org springframework bean factory support bean definition default", "specialinvoke r10 < init >", "$ r4 = \\ `` true\\ ``", "r11 = org springframework bean factory xml bean definition parser delegate r0", "$ r3 = r11 default", "$ r5 = $ r3 get lazy init", "$ z0 = $ r4 equal ignore case $ r5", "r10 set lazy init $ z0", "r12 = org springframework bean factory xml bean definition parser delegate r0", "$ i0 = r12 get dependency check \\ `` default\\ ``", "r10 set dependency check $ i0", "r13 = org springframework bean factory xml bean definition parser delegate r0", "$ i1 = r13 get autowire mode \\ `` default\\ ``", "r10 set autowire mode $ i1", "r14 = org springframework bean factory xml bean definition parser delegate r0", "$ r6 = r14 default", "$ r7 = $ r6 get init method", "r10 set init method name $ r7", "r15 = org springframework bean factory xml bean definition parser delegate r0", "$ r8 = r15 default", "$ r9 = $ r8 get destroy method", "r10 set destroy method name $ r9", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory xml document default definition r0", "$ r1 = r2 autowire candidate", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework bean factory xml document default definition r0", "r2 init method = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r4 = org springframework bean mutable property value r0", "$ r2 = r4 property value list", "$ r2 set i0 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = org springframework bean property access exception r0", "$ r1 = r4 property change event", "if $ r1 == null goto label1", "r5 = org springframework bean property access exception r0", "$ r2 = r5 property change event", "$ r3 = $ r2 get property name", "goto label2", "label return $ r3", "if $ r1 == null goto label1", "label $ r3 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean property editor registry support r0", "$ r1 = r2 conversion service", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org springframework bean property editor registry support r0", "$ r3 = r8 overridden default editor", "if $ r3 ! = null goto label1", "r7 = new java util hash map", "specialinvoke r7 < init >", "r9 = org springframework bean property editor registry support r0", "r9 overridden default editor = r7", "label r10 = org springframework bean property editor registry support r0", "$ r4 = r10 overridden default editor", "$ r4 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework bean support paged list holder r0", "$ z0 = r1 be first page", "if $ z0 ! = 0 goto label1", "r2 = org springframework bean support paged list holder r0", "$ i0 = r2 page", "$ i1 = $ i0 - 1", "r3 = org springframework bean support paged list holder r0", "r3 page = $ i1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework bean support paged list holder r0", "$ i0 = r1 get page", "r2 = org springframework bean support paged list holder r0", "$ i1 = r2 get max link page", "$ i2 = $ i1 2", "$ i3 = $ i0 - $ i2", "$ i4 = java lang math max 0 $ i3", "return $ i4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r1 get property", "$ z0 = org springframework util string utils have text $ r2", "if $ z0 == 0 goto label1", "r4 = new org springframework bean support property comparator", "specialinvoke r4 < init > r1", "r5 = java util comparator r4", "java util array sort r0 r5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework bean factory annotation autowired annotation bean post processor r0", "r2 require parameter name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get annotation", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label3", "r3 = r2 [ i1 ]", "$ r4 = r3 annotation type", "r5 = org springframework bean factory annotation qualifier annotation autowire candidate resolver r0", "$ z0 = r5 be qualifier $ r4", "if $ z0 == 0 goto label2", "return 1", "if $ z0 == 0 goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework bean factory injection point r0", "$ r1 = r3 method parameter", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label org springframework util assert state $ z0 \\ `` neither field nor method parameter\\ ``", "r4 = org springframework bean factory injection point r0", "$ r2 = r4 method parameter", "return $ r2", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r4 = org springframework bean factory injection point r0", "$ r1 = r4 field", "if $ r1 == null goto label1", "r5 = org springframework bean factory injection point r0", "$ r3 = r5 field", "goto label2", "label return $ r3", "if $ r1 == null goto label1", "label r6 = org springframework bean factory injection point r0", "$ r2 = r6 obtain method parameter", "$ r3 = $ r2 get annotate element"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 be open", "if $ z0 == 0 goto label1", "r27 = new org springframework bean factory bean definition store exception", "r26 = new java lang string builder", "specialinvoke r26 < init >", "$ r6 = r26 append \\ `` passed-in resource [ \\ ``", "$ r7 = $ r6 append r1", "$ r8 = $ r7 append \\ `` ] contain an open stream can not determine validation mode automatically either pas in a resource that be able to create fresh stream or explicitly specify the validation mode on your xml bean definition reader instance \\ ``", "$ r9 = $ r8 to string", "specialinvoke r27 < init > $ r9", "r32 = java lang throwable r27", "throw r32", "if $ z0 == 0 goto label1", "label r2 = r1 get input stream", "label goto label4", "label r34 = org springframework bean factory xml xml bean definition reader r0", "$ r3 = r34 validation mode detector", "$ i0 = $ r3 detect validation mode r2", "label return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org springframework bean factory xml xml reader context r0", "$ r2 = r6 reader", "$ r3 = $ r2 get bean name generator", "r7 = org springframework bean factory xml xml reader context r0", "$ r4 = r7 get registry", "$ r5 = $ r3 generate bean name r1 $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework bean property value r0", "r2 convert = 1", "r3 = org springframework bean property value r0", "r3 convert value = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework bean factory support abstract autowire capable bean factory r0", "$ z0 = r1 allow raw injection despite wrap", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org springframework boot builder spring application builder r0", "$ r1 = r2 application", "$ r1 set lazy initialization z0", "r3 = org springframework boot builder spring application builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java util link hash set", "r8 = org springframework boot context annotation configuration r0", "$ r4 = r8 get class", "specialinvoke r7 < init > $ r4", "$ r5 = r1 get class", "r7 add all $ r5", "r9 = org springframework boot context annotation configuration r0", "$ r6 = r9 merge r7", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot context property bind validation validation error r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework boot context property configuration property bind exception r0", "$ r1 = r3 bean", "$ r2 = $ r1 get annotation", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework boot convert duration style r0", "$ r2 = r3 parse r1 null", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework boot convert period style r0", "$ r2 = r3 parse r1 null", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework boot jta atomikos atomikos property r0", "r1 force shutdown on vm exit = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework boot jta atomikos atomikos property r0", "r1 thread two phase commit = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot log log initialization context r0", "$ r1 = r2 environment", "r3 = org springframework core env environment $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot origin text resource origin r0", "$ r1 = r2 location", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot system application home r0", "$ r1 = r2 dir", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r16 = org springframework boot system application temp r0", "$ r4 = r16 dir", "if $ r4 ! = null goto label5", "entermonitor r0", "label r17 = org springframework boot system application temp r0", "$ r7 = r17 source class", "r18 = org springframework boot system application temp r0", "r2 = specialinvoke r18 generate hash $ r7", "r15 = new java io file", "r19 = org springframework boot system application temp r0", "$ r9 = specialinvoke r19 get temp directory", "r20 = org springframework boot system application temp r0", "$ r10 = specialinvoke r20 to hex string r2", "specialinvoke r15 < init > $ r9 $ r10", "r21 = org springframework boot system application temp r0", "r21 dir = r15", "r22 = org springframework boot system application temp r0", "$ r11 = r22 dir", "$ r11 mkdirs", "r23 = org springframework boot system application temp r0", "$ r12 = r23 dir", "$ z1 = $ r12 exist", "r24 = org springframework boot system application temp r0", "$ r13 = application temp $ lambda_get dir_0__1 bootstrap $ r24", "org springframework util assert state $ z1 $ r13", "exitmonitor r0", "label goto label5", "label r25 = org springframework boot system application temp r0", "$ r5 = r25 dir", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r5 = r2 get protocol", "r1 set protocol $ r5", "r17 = org springframework boot web embed jetty ssl server customizer r0", "specialinvoke r17 configure ssl client auth r1 r2", "r18 = org springframework boot web embed jetty ssl server customizer r0", "specialinvoke r18 configure ssl password r1 r2", "$ r6 = r2 get key alias", "r1 set cert alias $ r6", "$ r7 = r2 get cipher", "$ z0 = org springframework util object utils be empty $ r7", "if $ z0 ! = 0 goto label1", "$ r12 = r2 get cipher", "r1 set include cipher suite $ r12", "$ r13 = newarray java lang string [ 0 ]", "r1 set exclude cipher suite $ r13", "label $ r8 = r2 get enable protocol", "if $ r8 == null goto label2", "$ r11 = r2 get enable protocol", "r1 set include protocols $ r11", "label if r3 == null goto label6", "label $ r9 = r3 get key store", "r1 set key store $ r9", "$ r10 = r3 get trust store", "r1 set trust store $ r10", "label goto label7", "label return", "label if r3 == null goto label6", "label r19 = org springframework boot web embed jetty ssl server customizer r0", "specialinvoke r19 configure ssl key store r1 r2", "r20 = org springframework boot web embed jetty ssl server customizer r0", "specialinvoke r20 configure ssl trust store r1 r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework boot web embed undertow undertow servlet web server factory r0", "$ z0 = r1 eager init filter", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org springframework boot web server mime mapping r0", "$ r5 = r9 map", "r8 = new org springframework boot web server mime mapping $ map", "specialinvoke r8 < init > r1 r2", "$ r6 = $ r5 put r1 r8", "r3 = org springframework boot web server mime mapping $ map $ r6", "if r3 == null goto label1", "$ r7 = r3 get mime type", "goto label2", "label return $ r7", "if r3 == null goto label1", "label $ r7 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework boot web server ssl r0", "$ z0 = r1 enable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot web server ssl r0", "$ r1 = r2 key store type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot web server ssl r0", "$ r1 = r2 key store provider", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = r1 get path info", "if $ r3 == null goto label1", "$ r11 = r1 get path info", "goto label2", "label $ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = $ r4 append \\ `` [ \\ ``", "$ r6 = r1 get servlet path", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append $ r11", "$ r9 = $ r8 append \\ `` ] \\ ``", "$ r10 = $ r9 to string", "return $ r10", "if $ r3 == null goto label1", "label $ r11 = \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r14 = new org springframework boot webservices client web service template builder", "r15 = org springframework boot webservices client web service template builder r0", "$ z1 = r15 detect http message sender", "r16 = org springframework boot webservices client web service template builder r0", "$ r3 = r16 interceptor", "r17 = org springframework boot webservices client web service template builder r0", "$ r4 = r17 internal customizers", "r13 = new org springframework boot webservices client web service template builder $ check connection for error customizer", "specialinvoke r13 < init > z0 null", "r18 = org springframework boot webservices client web service template builder r0", "$ r5 = specialinvoke r18 append $ r4 r13", "r19 = org springframework boot webservices client web service template builder r0", "$ r12 = r19 customizers", "r20 = org springframework boot webservices client web service template builder r0", "$ r11 = r20 message sender", "r21 = org springframework boot webservices client web service template builder r0", "$ r10 = r21 marshaller", "r22 = org springframework boot webservices client web service template builder r0", "$ r9 = r22 unmarshaller", "r23 = org springframework boot webservices client web service template builder r0", "$ r8 = r23 destination provider", "r24 = org springframework boot webservices client web service template builder r0", "$ r7 = r24 transformer factory class", "r25 = org springframework boot webservices client web service template builder r0", "$ r6 = r25 message factory", "specialinvoke r14 < init > $ z1 $ r3 $ r5 $ r12 $ r11 $ r10 $ r9 $ r8 $ r7 $ r6", "return r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "return 0", "if r0 ! = null goto label1", "label r2 = org springframework boot jdbc embed database connection get embed database connection r0", "$ r3 = org springframework boot jdbc embed database connection none", "if r2 ! = $ r3 goto label2", "label if r1 == null goto label3", "$ z0 = r2 be embed url r1", "if $ z0 == 0 goto label4", "label $ z1 = 1", "goto label5", "label return $ z1", "if $ z0 == 0 goto label4", "label $ z1 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework boot web embed undertow undertow servlet web server factory r0", "r1 preserve path on forward = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org springframework boot jdbc data source builder $ data source property driver_class_name", "r3 = org springframework boot jdbc data source builder r0", "specialinvoke r3 set $ r2 r1", "r4 = org springframework boot jdbc data source builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r8 = org springframework boot autoconfigure amqp rabbit property r0", "$ r2 = r8 parse address", "$ z0 = org springframework util collection utils be empty $ r2", "if $ z0 == 0 goto label1", "r9 = org springframework boot autoconfigure amqp rabbit property r0", "$ r6 = r9 username", "return $ r6", "if $ z0 == 0 goto label1", "label r10 = org springframework boot autoconfigure amqp rabbit property r0", "$ r3 = r10 parse address", "$ r4 = $ r3 get 0", "r1 = org springframework boot autoconfigure amqp rabbit property $ address $ r4", "$ r5 = org springframework boot autoconfigure amqp rabbit property $ address access $ 300 r1", "if $ r5 == null goto label2", "$ r7 = org springframework boot autoconfigure amqp rabbit property $ address access $ 300 r1", "goto label3", "label return $ r7", "if $ r5 == null goto label2", "label r11 = org springframework boot autoconfigure amqp rabbit property r0", "$ r7 = r11 username"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot autoconfigure auto configuration import event r0", "$ r1 = r2 exclusion", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return class \\ `` lorg springframework boot autoconfigure enable auto configuration \\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "org springframework util assert not null r1 \\ `` source must not be null\\ ``", "org springframework util assert not null r2 \\ `` condition must not be null\\ ``", "org springframework util assert not null r3 \\ `` outcome must not be null\\ ``", "r13 = org springframework boot autoconfigure condition condition evaluation report r0", "$ r4 = r13 unconditional class", "$ r4 remove r1", "r14 = org springframework boot autoconfigure condition condition evaluation report r0", "$ r5 = r14 outcomes", "$ z1 = $ r5 contain key r1", "if $ z1 ! = 0 goto label1", "r15 = org springframework boot autoconfigure condition condition evaluation report r0", "$ r10 = r15 outcomes", "r12 = new org springframework boot autoconfigure condition condition evaluation report $ condition and outcome", "specialinvoke r12 < init >", "$ r10 put r1 r12", "label r16 = org springframework boot autoconfigure condition condition evaluation report r0", "$ r6 = r16 outcomes", "$ r7 = $ r6 get r1", "$ r8 = org springframework boot autoconfigure condition condition evaluation report $ condition and outcomes $ r7", "$ r8 add r2 r3", "r17 = org springframework boot autoconfigure condition condition evaluation report r0", "r17 add ancestor outcome = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot autoconfigure condition condition evaluation report r0", "$ r1 = r2 parent", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ z0 = r3 instanceof org springframework boot autoconfigure condition spring boot condition", "if $ z0 == 0 goto label1", "$ r4 = org springframework boot autoconfigure condition spring boot condition r3", "$ r5 = $ r4 get match outcome r1 r2", "$ z2 = $ r5 be match", "return $ z2", "if $ z0 == 0 goto label1", "label $ z1 = r3 match r1 r2", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r9 = org springframework boot autoconfigure jdbc data source property r0", "$ z0 = r9 generate unique name", "if $ z0 == 0 goto label2", "r10 = org springframework boot autoconfigure jdbc data source property r0", "$ r5 = r10 unique name", "if $ r5 ! = null goto label1", "$ r7 = java util uuid random u u i d", "$ r8 = $ r7 to string", "r11 = org springframework boot autoconfigure jdbc data source property r0", "r11 unique name = $ r8", "label r12 = org springframework boot autoconfigure jdbc data source property r0", "$ r6 = r12 unique name", "return $ r6", "if $ z0 == 0 goto label2", "label r13 = org springframework boot autoconfigure jdbc data source property r0", "$ r1 = r13 name", "$ z1 = org springframework util string utils have length $ r1", "if $ z1 == 0 goto label3", "r14 = org springframework boot autoconfigure jdbc data source property r0", "$ r4 = r14 name", "return $ r4", "if $ z1 == 0 goto label3", "label r15 = org springframework boot autoconfigure jdbc data source property r0", "$ r3 = r15 embed database connection", "$ r2 = org springframework boot jdbc embed database connection none", "if $ r3 == $ r2 goto label4", "return \\ `` testdb\\ ``", "if $ r3 == $ r2 goto label4", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [], [29], []]}
{"nodes": ["r0 = @ this", "r4 = org springframework boot autoconfigure jdbc data source property r0", "$ r1 = r4 password", "$ z0 = org springframework util string utils have text $ r1", "if $ z0 == 0 goto label1", "r5 = org springframework boot autoconfigure jdbc data source property r0", "$ r3 = r5 password", "return $ r3", "if $ z0 == 0 goto label1", "label r6 = org springframework boot autoconfigure jdbc data source property r0", "$ r2 = r6 determine driver class name", "$ z1 = org springframework boot jdbc embed database connection be embed $ r2", "if $ z1 == 0 goto label2", "return \\ `` \\ ``", "if $ z1 == 0 goto label2", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "org springframework util assert not null r2 \\ `` application context must not be null\\ ``", "$ r3 = r2 get environment", "$ r4 = r2 get class loader", "r6 = org springframework boot autoconfigure template template availability provider r0", "r7 = org springframework core io resource loader r2", "$ r5 = r6 get provider r1 $ r3 $ r4 r7", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework boot autoconfigure mongo mongo property client setting builder customizer r0", "r1 order = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework boot devtools autoconfigure optional live reload server r0", "$ r1 = r3 server", "if $ r1 == null goto label1", "r4 = org springframework boot devtools autoconfigure optional live reload server r0", "$ r2 = r4 server", "$ r2 trigger reload", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r17 = org springframework boot devtools livereload live reload server r0", "$ r3 = r17 monitor", "entermonitor $ r3", "label r18 = org springframework boot devtools livereload live reload server r0", "$ r4 = r18 listen thread", "if $ r4 == null goto label10", "r19 = org springframework boot devtools livereload live reload server r0", "specialinvoke r19 close all connection", "label r20 = org springframework boot devtools livereload live reload server r0", "$ r5 = r20 executor", "$ r5 shutdown", "r21 = org springframework boot devtools livereload live reload server r0", "$ r7 = r21 executor", "$ r6 = java util concurrent time unit minute", "$ r7 await termination 1l $ r6", "label goto label05", "label r22 = org springframework boot devtools livereload live reload server r0", "$ r8 = r22 server socket", "$ r8 close", "label r23 = org springframework boot devtools livereload live reload server r0", "$ r9 = r23 listen thread", "$ r9 join", "label goto label09", "label r24 = org springframework boot devtools livereload live reload server r0", "r24 listen thread = null", "r25 = org springframework boot devtools livereload live reload server r0", "r25 server socket = null", "label exitmonitor $ r3", "label goto label14", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r16 = org springframework boot devtools livereload live reload server r0", "$ r8 = r16 monitor", "entermonitor $ r8", "label r17 = org springframework boot devtools livereload live reload server r0", "$ r9 = r17 connection", "entermonitor $ r9", "label r18 = org springframework boot devtools livereload live reload server r0", "$ r10 = r18 connection", "r3 = $ r10 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label08", "$ r11 = r3 next", "r4 = org springframework boot devtools livereload connection $ r11", "label r4 trigger reload", "label goto label07", "label goto label03", "if $ z0 == 0 goto label08", "label exitmonitor $ r9", "label goto label12", "label exitmonitor $ r8", "label goto label16", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["$ r2 = org springframework boot devtools restart restarter instance_monitor", "entermonitor $ r2", "label org springframework boot devtools restart restarter instance = null", "exitmonitor $ r2", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org springframework boot loader tool abstract jar writer $ entry transformer none", "$ r3 = org springframework boot loader tool abstract jar writer $ unpack handler never", "$ r4 = abstract jar writer $ lambda_write entries_0__3 bootstrap $", "r5 = org springframework boot loader tool abstract jar writer r0", "r5 write entry r1 $ r2 $ r3 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot loader tool default library coordinate r0", "$ r1 = r2 group id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework boot loader tool library r0", "$ z0 = r1 unpack require", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework boot loader tool packager r0", "r2 main class = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org springframework boot test context assertj application context assert r0", "$ r2 = r10 startup failure", "if $ r2 == null goto label1", "$ r7 = newarray java lang object [ 1 ]", "$ r7 [ 0 ] = r1", "r11 = org springframework boot test context assertj application context assert r0", "$ r8 = specialinvoke r11 context fail to start when expect \\ `` to have bean name % n < % s > \\", "r12 = org springframework boot test context assertj application context assert r0", "r13 = org assertj core error error message factory $ r8", "r12 throw assertion error r13", "label r14 = org springframework boot test context assertj application context assert r0", "$ r3 = specialinvoke r14 find bean r1", "if $ r3 ! = null goto label2", "r9 = new org assertj core error basic error message factory", "$ r5 = newarray java lang object [ 2 ]", "r15 = org springframework boot test context assertj application context assert r0", "$ r6 = r15 get application context", "$ r5 [ 0 ] = $ r6", "$ r5 [ 1 ] = r1", "specialinvoke r9 < init > \\ `` % n expect % n < % s > % nto have bean name % n < % s > % nbut find no such bean\\", "r16 = org springframework boot test context assertj application context assert r0", "r17 = org assertj core error error message factory r9", "r16 throw assertion error r17", "label r18 = org springframework boot test context assertj application context assert r0", "return r18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework boot test json abstract json marshal tester r0", "specialinvoke r4 verify", "r5 = org springframework boot test json abstract json marshal tester r0", "$ r2 = r5 parse r1", "$ r3 = $ r2 get object", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework boot test json abstract json marshal tester r0", "specialinvoke r4 verify", "r5 = org springframework boot test json abstract json marshal tester r0", "$ r2 = r5 read r1", "$ r3 = $ r2 get object", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = new java io buffer reader", "r7 = new java io input stream reader", "specialinvoke r7 < init > r1", "specialinvoke r8 < init > r7", "r9 = org springframework boot test json abstract json marshal tester r0", "$ r6 = r9 read object r8 r2", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r8 = org springframework boot test json json content assert r0", "$ r5 = r8 loader", "r4 = $ r5 get json r1 r2", "r9 = org springframework boot test json json content assert r0", "$ r6 = specialinvoke r9 compare r4 r3", "r10 = org springframework boot test json json content assert r0", "$ r7 = specialinvoke r10 assert not fail $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org springframework boot test json json content assert r0", "$ r4 = r7 loader", "r3 = $ r4 get json r1", "r8 = org springframework boot test json json content assert r0", "$ r5 = specialinvoke r8 compare r3 r2", "r9 = org springframework boot test json json content assert r0", "$ r6 = specialinvoke r9 assert not pass $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org springframework boot test json json content assert r0", "$ r4 = r7 loader", "r3 = $ r4 get json r1", "r8 = org springframework boot test json json content assert r0", "$ r5 = specialinvoke r8 compare r3 r2", "r9 = org springframework boot test json json content assert r0", "$ r6 = specialinvoke r9 assert not pass $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new org springframework boot test json json content assert $ json path value", "r5 = org springframework boot test json json content assert r0", "specialinvoke r4 < init > r5 r1 r2", "r4 assert do not have empty value", "r6 = org springframework boot test json json content assert r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = org springframework boot test web client test rest template r0", "$ r4 = r6 rest template", "$ r5 = $ r4 get for entity r1 r2 r3", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r7 = org springframework boot test web client test rest template r0", "$ r5 = r7 rest template", "$ r6 = $ r5 post for object r1 r2 r3 r4", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org springframework boot test web client test rest template r0", "$ r3 = r4 rest template", "$ r3 delete r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r5 = @ parameter4", "r8 = org springframework boot test web client test rest template r0", "$ r6 = r8 rest template", "$ r7 = $ r6 exchange r1 r2 r3 r4 r5", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot test autoconfigure orm jpa test entity manager r0", "$ r1 = r2 get entity manager", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = new org springframework context expression annotate element key", "specialinvoke $ r3 < init > r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org springframework cache interceptor cache aspect support r0", "$ r3 = r5 application context", "r6 = org springframework bean factory bean factory $ r3", "$ r4 = org springframework bean factory annotation bean factory annotation utils qualify bean of type r6 r2 r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 instanceof org springframework context configurable application context", "if $ z0 == 0 goto label2", "$ r3 = org springframework context access context singleton bean factory locator logger", "$ z1 = $ r3 be trace enabled", "if $ z1 == 0 goto label1", "$ r6 = org springframework context access context singleton bean factory locator logger", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ r7 = $ r5 append \\ `` context group with selector \\'\\ ``", "$ r8 = $ r7 append r2", "$ r9 = $ r8 append \\ `` \\ ' be release a there be no more reference to it\\ ``", "$ r10 = $ r9 to string", "$ r6 trace $ r10", "label $ r4 = org springframework context configurable application context r1", "$ r4 close", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["$ r0 = org springframework context access context singleton bean factory locator get instance", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework context annotation annotate bean definition reader r0", "$ r1 = r2 registry", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org springframework context annotation condition evaluator", "r5 = org springframework context annotation annotate bean definition reader r0", "$ r3 = r5 registry", "specialinvoke r4 < init > $ r3 r1 null", "r6 = org springframework context annotation annotate bean definition reader r0", "r6 condition evaluator = r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org springframework context annotation annotation scope metadata resolver", "specialinvoke r3 < init > r1", "r4 = org springframework context annotation class path bean definition scanner r0", "r5 = org springframework context annotation scope metadata resolver r3", "r4 scope metadata resolver = r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r15 = new org springframework context annotation common annotation bean post processor $ 3", "r17 = org springframework context annotation common annotation bean post processor r0", "specialinvoke r15 < init > r17 r1 r2", "r16 = new org springframework aop framework proxy factory", "specialinvoke r16 < init >", "r18 = org springframework aop target source r15", "r16 set target source r18", "$ r8 = r1 lookup type", "$ z0 = $ r8 be interface", "if $ z0 == 0 goto label1", "$ r13 = r1 lookup type", "r16 add interface $ r13", "label r19 = org springframework context annotation common annotation bean post processor r0", "$ r9 = r19 bean factory", "$ z1 = $ r9 instanceof org springframework bean factory config configurable bean factory", "if $ z1 == 0 goto label2", "r20 = org springframework context annotation common annotation bean post processor r0", "$ r11 = r20 bean factory", "$ r12 = org springframework bean factory config configurable bean factory $ r11", "$ r14 = $ r12 get bean class loader", "goto label3", "label $ r10 = r16 get proxy $ r14", "return $ r10", "if $ z1 == 0 goto label2", "label $ r14 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = r1 map name", "$ z0 = org springframework util string utils have length $ r3", "if $ z0 == 0 goto label1", "r18 = org springframework context annotation common annotation bean post processor r0", "$ r15 = r18 jndi factory", "$ r14 = r1 map name", "$ r13 = r1 lookup type", "$ r16 = $ r15 get bean $ r14 $ r13", "return $ r16", "if $ z0 == 0 goto label1", "label r19 = org springframework context annotation common annotation bean post processor r0", "$ z1 = r19 always use jndi lookup", "if $ z1 == 0 goto label2", "r20 = org springframework context annotation common annotation bean post processor r0", "$ r11 = r20 jndi factory", "$ r10 = r1 name", "$ r9 = r1 lookup type", "$ r12 = $ r11 get bean $ r10 $ r9", "return $ r12", "if $ z1 == 0 goto label2", "label r21 = org springframework context annotation common annotation bean post processor r0", "$ r4 = r21 resource factory", "if $ r4 ! = null goto label3", "r17 = new org springframework bean factory no such bean definition exception", "$ r8 = r1 lookup type", "specialinvoke r17 < init > $ r8 \\ `` no resource factory configure - specify the \\'resource factory\\ ' property\\ ``", "r22 = java lang throwable r17", "throw r22", "if $ r4 ! = null goto label3", "label r23 = org springframework context annotation common annotation bean post processor r0", "$ r5 = r23 resource factory", "r24 = org springframework context annotation common annotation bean post processor r0", "$ r6 = r24 autowire resource $ r5 r1 r2", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework context annotation scope metadata r0", "$ r1 = r2 scoped proxy mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework context application event r0", "$ l0 = r1 timestamp", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ z0 = r1 instanceof org springframework context event generic application listener", "if $ z0 == 0 goto label1", "$ r5 = org springframework context event generic application listener r1", "goto label2", "label r7 = org springframework context event generic application listener $ r5", "$ z1 = r7 support event type r2", "if $ z1 == 0 goto label3", "r8 = org springframework context event generic application listener $ r5", "$ z2 = r8 support source type r3", "if $ z2 == 0 goto label3", "$ z3 = 1", "goto label4", "label return $ z3", "if $ z2 == 0 goto label3", "label $ z3 = 0", "if $ z0 == 0 goto label1", "label r6 = new org springframework context event generic application listener adapter", "$ r5 = r6", "specialinvoke r6 < init > r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework context event simple application event multicaster r0", "$ r1 = r2 error handler", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` expression parser must not be null\\ ``", "r2 = org springframework context expression standard bean expression resolver r0", "r2 expression parser = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r25 = org springframework context support abstract application context r0", "r1 = r25 get bean factory", "$ z0 = r1 contain local bean \\ `` application event multicaster\\ ``", "if $ z0 == 0 goto label1", "$ r12 = r1 get bean \\ `` application event multicaster\\", "$ r13 = org springframework context event application event multicaster $ r12", "r26 = org springframework context support abstract application context r0", "r26 application event multicaster = $ r13", "r27 = org springframework context support abstract application context r0", "$ r14 = r27 logger", "$ z2 = $ r14 be debug enabled", "if $ z2 == 0 goto label2", "r28 = org springframework context support abstract application context r0", "$ r16 = r28 logger", "r22 = new java lang string builder", "specialinvoke r22 < init >", "$ r17 = r22 append \\ `` use application event multicaster [ \\ ``", "r29 = org springframework context support abstract application context r0", "$ r18 = r29 application event multicaster", "$ r19 = $ r17 append $ r18", "$ r20 = $ r19 append \\ `` ] \\ ``", "$ r21 = $ r20 to string", "$ r16 debug $ r21", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r23 = new org springframework context event simple application event multicaster", "r30 = org springframework bean factory bean factory r1", "specialinvoke r23 < init > r30", "r31 = org springframework context support abstract application context r0", "r32 = org springframework context event application event multicaster r23", "r31 application event multicaster = r32", "r33 = org springframework context support abstract application context r0", "$ r3 = r33 application event multicaster", "r1 register singleton \\ `` application event multicaster\\", "r34 = org springframework context support abstract application context r0", "$ r4 = r34 logger", "$ z1 = $ r4 be debug enabled", "if $ z1 == 0 goto label2", "r35 = org springframework context support abstract application context r0", "$ r6 = r35 logger", "r24 = new java lang string builder", "specialinvoke r24 < init >", "$ r7 = r24 append \\ `` unable to locate application event multicaster with name \\'application event multicaster\\ ' use default [ \\ ``", "r36 = org springframework context support abstract application context r0", "$ r8 = r36 application event multicaster", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 append \\ `` ] \\ ``", "$ r11 = $ r10 to string", "$ r6 debug $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], []]}
{"nodes": ["r0 = @ this", "r19 = org springframework context support abstract application context r0", "$ r1 = r19 active", "$ z0 = $ r1 get", "if $ z0 ! = 0 goto label2", "r20 = org springframework context support abstract application context r0", "$ r2 = r20 close", "$ z1 = $ r2 get", "if $ z1 == 0 goto label1", "r16 = new java lang illegal state exception", "r15 = new java lang string builder", "specialinvoke r15 < init >", "r21 = org springframework context support abstract application context r0", "$ r11 = r21 get display name", "$ r12 = r15 append $ r11", "$ r13 = $ r12 append \\ `` have be close already\\ ``", "$ r14 = $ r13 to string", "specialinvoke r16 < init > $ r14", "throw r16", "if $ z1 == 0 goto label1", "label r18 = new java lang illegal state exception", "r17 = new java lang string builder", "specialinvoke r17 < init >", "r22 = org springframework context support abstract application context r0", "$ r5 = r22 get display name", "$ r6 = r17 append $ r5", "$ r7 = $ r6 append \\ `` have not be refresh yet\\ ``", "$ r8 = $ r7 to string", "specialinvoke r18 < init > $ r8", "throw r18", "if $ z0 ! = 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework context support conversion service factory bean r0", "r2 converter = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r2 = r0 get class", "$ r3 = $ r2 get name", "$ r4 = r9 append $ r3", "$ r5 = $ r4 append \\ `` \\ ``", "r10 = org springframework context support default message source resolvable r0", "$ r6 = r10 resolvable to string", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 to string", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ z0 = r1 start with \\ `` \\ ``", "if $ z0 == 0 goto label1", "r1 = r1 substring 1", "label r3 = new org springframework core io file system resource", "specialinvoke r3 < init > r1", "r4 = org springframework core io resource r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "$ r3 = org springframework context support live bean view application context", "entermonitor $ r3", "label $ r4 = new java util link hash set", "$ r5 = org springframework context support live bean view application context", "specialinvoke $ r4 < init > $ r5", "exitmonitor $ r3", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r5 = org springframework context support message source support r0", "$ r4 = r5 format message r1 r2 r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = new java text message format", "if r1 == null goto label1", "$ r4 = r1", "goto label2", "label specialinvoke $ r3 < init > $ r4 r2", "return $ r3", "if r1 == null goto label1", "label $ r4 = \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label3", "$ i0 = lengthof r1", "$ r4 = newarray java lang string [ $ i0 ]", "r7 = org springframework context support reloadable resource bundle message source r0", "r7 basenames = $ r4", "i2 = 0", "label $ i1 = lengthof r1", "if i2 > = $ i1 goto label2", "r2 = r1 [ i2 ]", "org springframework util assert have text r2 \\ `` basename must not be empty\\ ``", "r8 = org springframework context support reloadable resource bundle message source r0", "$ r5 = r8 basenames", "$ r6 = r2 trim", "$ r5 [ i2 ] = $ r6", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label goto label4", "label return", "if r1 == null goto label3", "label $ r3 = newarray java lang string [ 0 ]", "r9 = org springframework context support reloadable resource bundle message source r0", "r9 basenames = $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework context support reloadable resource bundle message source r0", "r2 file encoding = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r13 = org springframework context support reloadable resource bundle message source r0", "$ l0 = r13 cache millis", "$ b1 = $ l0 cmp 0l", "if $ b1 > = 0 goto label2", "r14 = org springframework context support reloadable resource bundle message source r0", "r10 = r14 get merge property r2", "r11 = r10 get message format r1 r2", "if r11 == null goto label1", "return r11", "if r11 == null goto label1", "label goto label7", "label return null", "if $ b1 > = 0 goto label2", "label r15 = org springframework context support reloadable resource bundle message source r0", "r12 = r15 basenames", "i2 = lengthof r12", "i3 = 0", "label if i3 > = i2 goto label7", "r3 = r12 [ i3 ]", "r16 = org springframework context support reloadable resource bundle message source r0", "r4 = r16 calculate all filename r3 r2", "r5 = r4 iterator", "label $ z0 = r5 have next", "if $ z0 == 0 goto label6", "$ r9 = r5 next", "r6 = java lang string $ r9", "r17 = org springframework context support reloadable resource bundle message source r0", "r7 = r17 get property r6", "r8 = r7 get message format r1 r2", "if r8 == null goto label5", "return r8", "if r8 == null goto label5", "label goto label4", "if $ z0 == 0 goto label6", "label i3 = i3 + 1", "goto label3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], []]}
{"nodes": ["r0 = @ this", "specialinvoke r0 refresh home", "r5 = org springframework ejb access simple remote slsb invoker interceptor r0", "$ z0 = r5 cache session bean", "if $ z0 == 0 goto label5", "r6 = org springframework ejb access simple remote slsb invoker interceptor r0", "$ r3 = r6 bean instance monitor", "entermonitor $ r3", "label r7 = org springframework ejb access simple remote slsb invoker interceptor r0", "r7 bean instance = null", "exitmonitor $ r3", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org springframework context access context singleton bean factory locator get instance", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework format datetime date formatter r0", "r2 style pattern = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework format datetime joda joda time context r0", "$ r1 = r2 time zone", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org springframework format datetime standard date time context holder date time context holder", "$ r0 remove", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org springframework instrument classloading resource override shadow class loader r0", "$ r3 = r5 override", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r2 get parameter type", "label if r1 ! = null goto label03", "label return null", "label if r1 ! = null goto label03", "label $ z0 = org springframework util class utils be assignable value r3 r1", "if $ z0 == 0 goto label05", "label return r1", "if $ z0 == 0 goto label05", "label $ z1 = r1 instanceof javax management openmbean composite data", "if $ z1 == 0 goto label07", "$ r15 = newarray java lang class [ 1 ]", "$ r15 [ 0 ] = class \\ `` ljavax management openmbean composite data \\ ``", "r28 = r3 get method \\ `` from\\", "$ r16 = newarray java lang object [ 1 ]", "$ r16 [ 0 ] = r1", "$ r17 = org springframework util reflection utils invoke method r28 null $ r16", "label return $ r17", "if $ z1 == 0 goto label07", "label $ z2 = r1 instanceof javax management openmbean composite data [ ]", "if $ z2 == 0 goto label12", "$ r11 = javax management openmbean composite data [ ] r1", "r29 = javax management openmbean composite data [ ] $ r11", "$ z7 = r3 be array", "if $ z7 == 0 goto label09", "r48 = org springframework jmx access m bean client interceptor r0", "$ r14 = specialinvoke r48 convert data array to target array r29 r3", "label return $ r14", "if $ z7 == 0 goto label09", "label $ r12 = class \\ `` ljava util collection \\ ``", "$ z8 = $ r12 be assignable from r3", "if $ z8 == 0 goto label11", "r30 = org springframework core generic collection type resolver get collection parameter type r2", "if r30 == null goto label11", "r49 = org springframework jmx access m bean client interceptor r0", "$ r13 = specialinvoke r49 convert data array to target collection r29 r3 r30", "label return $ r13", "if r30 == null goto label11", "label goto label18", "label r45 = new org springframework jmx access invocation failure exception", "r44 = new java lang string builder", "specialinvoke r44 < init >", "$ r36 = r44 append \\ `` incompatible result value [ \\ ``", "$ r37 = $ r36 append r1", "$ r38 = $ r37 append \\ `` ] for target type [ \\ ``", "$ r39 = r3 get name", "$ r40 = $ r38 append $ r39", "$ r41 = $ r40 append \\ `` ] \\ ``", "$ r42 = $ r41 to string", "specialinvoke r45 < init > $ r42", "r52 = java lang throwable r45", "throw r52", "if $ z2 == 0 goto label12", "label $ z3 = r1 instanceof javax management openmbean tabular data", "if $ z3 == 0 goto label14", "$ r8 = newarray java lang class [ 1 ]", "$ r8 [ 0 ] = class \\ `` ljavax management openmbean tabular data \\ ``", "r31 = r3 get method \\ `` from\\", "$ r9 = newarray java lang object [ 1 ]", "$ r9 [ 0 ] = r1", "$ r10 = org springframework util reflection utils invoke method r31 null $ r9", "label return $ r10", "if $ z3 == 0 goto label14", "label $ z4 = r1 instanceof javax management openmbean tabular data [ ]", "if $ z4 == 0 goto label18", "$ r4 = javax management openmbean tabular data [ ] r1", "r32 = javax management openmbean tabular data [ ] $ r4", "$ z5 = r3 be array", "if $ z5 == 0 goto label16", "r50 = org springframework jmx access m bean client interceptor r0", "$ r7 = specialinvoke r50 convert data array to target array r32 r3", "label return $ r7", "if $ z5 == 0 goto label16", "label $ r5 = class \\ `` ljava util collection \\ ``", "$ z6 = $ r5 be assignable from r3", "if $ z6 == 0 goto label18", "r33 = org springframework core generic collection type resolver get collection parameter type r2", "if r33 == null goto label18", "r51 = org springframework jmx access m bean client interceptor r0", "$ r6 = specialinvoke r51 convert data array to target collection r32 r3 r33", "label return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org springframework jmx export assembler abstract m bean info assembler r0", "$ r3 = r5 get target class r1", "$ r4 = $ r3 get name", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = newarray javax management modelmbean model m bean constructor info [ 0 ]", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = newarray javax management modelmbean model m bean notification info [ 0 ]", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org springframework aop support aop utils be jdk dynamic proxy r1", "if $ z0 == 0 goto label1", "$ r3 = org springframework aop framework aop proxy utils proxied user interface r1", "$ r4 = $ r3 [ 0 ]", "return $ r4", "if $ z0 == 0 goto label1", "label r5 = org springframework jmx export assembler abstract reflective m bean info assembler r0", "$ r2 = r5 get class to expose r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org springframework aop support aop utils be jdk dynamic proxy r1", "if $ z0 == 0 goto label1", "$ r2 = new java lang illegal argument exception", "specialinvoke $ r2 < init > \\ `` metadata m bean info assembler do not support jdk dynamic proxy - export the target bean directly or use cglib proxy instead\\ ``", "throw $ r2", "if $ z0 == 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new java util hash set", "$ r3 = java util array a list r1", "specialinvoke r4 < init > $ r3", "r5 = org springframework jmx export assembler method exclusion m bean info assembler r0", "r5 ignore method = r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 instanceof org springframework bean factory config configurable listable bean factory", "if $ z0 == 0 goto label1", "$ z1 = r1 contains bean definition r2", "if $ z1 == 0 goto label1", "$ r3 = org springframework bean factory config configurable listable bean factory r1", "$ r4 = $ r3 get bean definition r2", "$ z2 = $ r4 be lazy init", "if $ z2 == 0 goto label1", "$ z3 = 1", "goto label2", "label return $ z3", "if $ z2 == 0 goto label1", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework jmx export metadata abstract jmx attribute r0", "r2 description = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework jmx export metadata abstract jmx attribute r0", "r1 currency time limit = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework jmx export metadata manage operation parameter r0", "r1 index = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ r5 = r0 get superclass", "if $ r5 ! = null goto label2", "label return null", "if $ r5 ! = null goto label2", "label $ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "$ r7 = r0 get name", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 append \\ `` m bean\\ ``", "r1 = $ r9 to string", "r2 = r0 get interface", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label5", "r4 = r2 [ i1 ]", "$ r12 = r4 get name", "$ z0 = $ r12 equal r1", "if $ z0 == 0 goto label4", "return r4", "if $ z0 == 0 goto label4", "label i1 = i1 + 1", "goto label3", "label if i1 > = i0 goto label5", "label $ r10 = r0 get superclass", "$ r11 = org springframework jmx support jmx utils get m bean interface $ r10", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jndi jndi accessor r0", "$ r1 = r2 jndi template", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework jndi jndi object factory bean r0", "r2 proxy interface = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = org springframework jndi jndi template r0", "$ r2 = r13 logger", "$ z0 = $ r2 be debug enabled", "if $ z0 == 0 goto label1", "r14 = org springframework jndi jndi template r0", "$ r6 = r14 logger", "r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r7 = r11 append \\ `` unbinding jndi object with name [ \\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 append \\ `` ] \\ ``", "$ r10 = $ r9 to string", "$ r6 debug $ r10", "label r12 = new org springframework jndi jndi template $ 4", "r15 = org springframework jndi jndi template r0", "specialinvoke r12 < init > r15 r1", "r16 = org springframework jndi jndi template r0", "r17 = org springframework jndi jndi callback r12", "r16 execute r17", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework jndi support simple jndi bean factory r0", "$ r2 = r3 shareable resource", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework remoting rmi jndi rmi client interceptor r0", "r1 refresh stub on connect failure = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework remoting rmi jndi rmi client interceptor r0", "$ r2 = r4 get remote invocation factory", "$ r3 = $ r2 create remote invocation r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org springframework remoting rmi rmi client interceptor utils logger", "$ z0 = $ r3 be debug enabled", "if $ z0 == 0 goto label1", "$ r6 = org springframework remoting rmi rmi client interceptor utils logger", "$ r6 debug r2 r1", "label $ z1 = org springframework util reflection utils declare exception r0 class \\ `` ljava rmi remote exception \\ ``", "if $ z1 == 0 goto label2", "r7 = new java rmi remote exception", "specialinvoke r7 < init > r2 r1", "return r7", "if $ z1 == 0 goto label2", "label r8 = new org springframework remoting remote access exception", "specialinvoke r8 < init > r2 r1", "r9 = java lang exception r8", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r4 = org springframework remoting rmi rmi invocation wrapper r0", "$ r2 = r4 rmi exporter", "r1 = $ r2 get service interface", "if r1 == null goto label1", "$ r3 = r1 get name", "goto label2", "label return $ r3", "if r1 == null goto label1", "label $ r3 = null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework remoting rmi rmi service exporter r0", "r2 registry = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework remoting support remote exporter r0", "r2 interceptor = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r20 = org springframework remoting support remote exporter r0", "r20 check service", "r21 = org springframework remoting support remote exporter r0", "r21 check service interface", "r18 = new org springframework aop framework proxy factory", "specialinvoke r18 < init >", "r22 = org springframework remoting support remote exporter r0", "$ r4 = r22 get service interface", "r18 add interface $ r4", "r23 = org springframework remoting support remote exporter r0", "$ r5 = r23 register trace interceptor", "if $ r5 == null goto label1", "r24 = org springframework remoting support remote exporter r0", "$ r16 = r24 register trace interceptor", "$ z0 = $ r16 boolean value", "if $ z0 == 0 goto label3", "goto label2", "label r19 = new org springframework remoting support remote invocation trace interceptor", "r26 = org springframework remoting support remote exporter r0", "$ r15 = r26 get exporter name", "specialinvoke r19 < init > $ r15", "r27 = org aopalliance aop advice r19", "r18 add advice r27", "label r28 = org springframework remoting support remote exporter r0", "$ r17 = r28 interceptor", "if $ r17 == null goto label5", "r2 = org springframework aop framework adapter global advisor adapter registry get instance", "i1 = 0", "label r29 = org springframework remoting support remote exporter r0", "$ r10 = r29 interceptor", "$ i0 = lengthof $ r10", "if i1 > = $ i0 goto label5", "r30 = org springframework remoting support remote exporter r0", "$ r11 = r30 interceptor", "$ r12 = $ r11 [ i1 ]", "$ r13 = r2 wrap $ r12", "r18 add advisor $ r13", "i1 = i1 + 1", "goto label4", "if i1 > = $ i0 goto label5", "label r31 = org springframework remoting support remote exporter r0", "$ r7 = r31 get service", "r18 set target $ r7", "r18 set opaque 1", "r32 = org springframework remoting support remote exporter r0", "$ r8 = r32 get bean class loader", "$ r9 = r18 get proxy $ r8", "return $ r9", "if $ r5 == null goto label1", "label r25 = org springframework remoting support remote exporter r0", "$ r6 = r25 interceptor", "if $ r6 ! = null goto label3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], [44], [45], [46], [47], [48], [], [50], [51], [52], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework remoting support remote invocation r0", "$ r1 = r2 method name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework remoting support remote invocation r0", "r2 parameter type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework remoting support remote invocation r0", "r2 argument = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework remoting support remote invocation result r0", "r2 exception = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework remoting support simple http server factory bean r0", "r1 shutdown delay = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework schedule concurrent schedule executor task r0", "$ r1 = r2 runnable", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework schedule concurrent schedule executor task r0", "$ l0 = r1 period", "$ b1 = $ l0 cmp 0l", "if $ b1 > 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b1 > 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework schedule concurrent thread pool executor factory bean r0", "r1 keep alive second = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework schedule concurrent thread pool executor factory bean r0", "r1 queue capacity = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < = 0 goto label1", "$ r2 = new java util concurrent link block queue", "specialinvoke $ r2 < init > i0", "return $ r2", "if i0 < = 0 goto label1", "label $ r1 = new java util concurrent synchronous queue", "specialinvoke $ r1 < init >", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework schedule concurrent thread pool task scheduler r0", "$ r1 = r3 schedule executor", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label org springframework util assert state $ z0 \\ `` thread pool task scheduler not initialized\\ ``", "r4 = org springframework schedule concurrent thread pool task scheduler r0", "$ r2 = r4 schedule executor", "return $ r2", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework script support script factory post processor r0", "r1 default proxy target class = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r37 = org springframework script support standard script evaluator r0", "$ r5 = r37 script engine manager", "if $ r5 ! = null goto label1", "r30 = new javax script script engine manager", "specialinvoke r30 < init >", "r38 = org springframework script support standard script evaluator r0", "r38 script engine manager = r30", "label r39 = org springframework script support standard script evaluator r0", "$ r6 = r39 engine name", "$ z0 = org springframework util string utils have text $ r6", "if $ z0 == 0 goto label2", "r40 = org springframework script support standard script evaluator r0", "$ r27 = r40 script engine manager", "r41 = org springframework script support standard script evaluator r0", "$ r26 = r41 engine name", "$ r28 = org springframework script support standard script utils retrieve engine by name $ r27 $ r26", "return $ r28", "if $ z0 == 0 goto label2", "label $ z1 = r1 instanceof org springframework script support resource script source", "if $ z1 == 0 goto label5", "$ r12 = org springframework script support resource script source r1", "r2 = $ r12 get resource", "$ r13 = r2 get filename", "r3 = org springframework util string utils get filename extension $ r13", "if r3 ! = null goto label3", "r32 = new java lang illegal state exception", "r31 = new java lang string builder", "specialinvoke r31 < init >", "$ r23 = r31 append \\ `` no script language define and no file extension define for resource \\ ``", "$ r24 = $ r23 append r2", "$ r25 = $ r24 to string", "specialinvoke r32 < init > $ r25", "throw r32", "if r3 ! = null goto label3", "label r42 = org springframework script support standard script evaluator r0", "$ r14 = r42 script engine manager", "r4 = $ r14 get engine by extension r3", "if r4 ! = null goto label4", "r34 = new java lang illegal state exception", "r33 = new java lang string builder", "specialinvoke r33 < init >", "$ r17 = r33 append \\ `` no matching engine find for file extension \\'\\ ``", "$ r18 = $ r17 append r3", "$ r19 = $ r18 append \\ `` \\'\\ ``", "$ r20 = $ r19 to string", "specialinvoke r34 < init > $ r20", "throw r34", "if r4 ! = null goto label4", "label return r4", "if $ z1 == 0 goto label5", "label r36 = new java lang illegal state exception", "r35 = new java lang string builder", "specialinvoke r35 < init >", "$ r9 = r35 append \\ `` no script language define and no resource associate with script \\ ``", "$ r10 = $ r9 append r1", "$ r11 = $ r10 to string", "specialinvoke r36 < init > $ r11", "throw r36"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org springframework validation abstract bind result r0", "r3 = r7 get property editor registry", "if r3 == null goto label2", "r6 = r2", "if r2 ! = null goto label1", "r8 = org springframework validation abstract bind result r0", "r6 = r8 get field type r1", "label r9 = org springframework validation abstract bind result r0", "$ r4 = r9 fix field r1", "$ r5 = r3 find custom editor r6 $ r4", "return $ r5", "if r3 == null goto label2", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework validation abstract bind result r0", "$ r2 = r3 suppress field", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org springframework util string utils have length r1", "if $ z0 == 0 goto label1", "r11 = new java lang string builder", "specialinvoke r11 < init >", "r12 = org springframework validation abstract error r0", "$ r5 = r12 get nest path", "$ r6 = r11 append $ r5", "r13 = org springframework validation abstract error r0", "$ r7 = r13 canonical field name r1", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 to string", "return $ r9", "if $ z0 == 0 goto label1", "label r14 = org springframework validation abstract error r0", "r2 = r14 get nest path", "$ z1 = r2 end with \\ `` \\ ``", "if $ z1 == 0 goto label2", "$ i0 = r2 length", "$ r3 = \\ `` \\ ``", "$ i1 = $ r3 length", "$ i2 = $ i0 - $ i1", "$ r10 = r2 substring 0 $ i2", "goto label3", "label return $ r10", "if $ z1 == 0 goto label2", "label $ r10 = r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r12 = r2", "if r2 ! = null goto label1", "r16 = org springframework validation abstract property bind result r0", "r12 = r16 get field type r1", "label r13 = specialinvoke r0 find editor r1 r12", "if r13 ! = null goto label5", "r17 = org springframework validation abstract property bind result r0", "$ r4 = r17 conversion service", "if $ r4 == null goto label5", "r14 = null", "if r1 == null goto label3", "r18 = org springframework validation abstract property bind result r0", "$ r9 = r18 get property accessor", "r19 = org springframework validation abstract property bind result r0", "$ r10 = r19 fix field r1", "r3 = $ r9 get property type descriptor $ r10", "if r2 == null goto label2", "$ r11 = r3 get type", "$ z1 = r2 be assignable from $ r11", "if $ z1 == 0 goto label3", "label r14 = r3", "label if r14 ! = null goto label4", "r14 = org springframework core convert type descriptor value of r12", "label r20 = org springframework validation abstract property bind result r0", "$ r5 = r20 conversion service", "$ r6 = org springframework core convert type descriptor value of class \\ `` ljava lang string \\ ``", "$ z0 = $ r5 can convert $ r6 r14", "if $ z0 == 0 goto label5", "r15 = new org springframework core convert support convert property editor adapter", "r21 = org springframework validation abstract property bind result r0", "$ r8 = r21 conversion service", "specialinvoke r15 < init > $ r8 r14", "r13 = r15", "label r22 = java bean property editor r13", "return r22"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework validation beanvalidation local validator factory bean r0", "r2 mapping location = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org springframework validation data binder r0", "specialinvoke r5 assert validators r1", "r6 = org springframework validation data binder r0", "$ r2 = r6 validators", "$ r2 clear", "r7 = org springframework validation data binder r0", "$ r3 = r7 validators", "$ r4 = java util array a list r1", "$ r3 add all $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r12 = new java util link hash set", "specialinvoke r12 < init >", "r13 = new java util array list", "specialinvoke r13 < init >", "r14 = org springframework validation default message code resolver r0", "r14 build field list r3 r13", "r15 = org springframework validation default message code resolver r0", "specialinvoke r15 add code r12 r1 r2 r13", "i0 = r3 last index of 46", "if i0 == -1 goto label1", "$ i1 = i0 + 1", "$ r11 = r3 substring $ i1", "r16 = org springframework validation default message code resolver r0", "r16 build field list $ r11 r13", "label r17 = org springframework validation default message code resolver r0", "specialinvoke r17 add code r12 r1 null r13", "if r4 == null goto label2", "$ r10 = r4 get name", "r18 = org springframework validation default message code resolver r0", "specialinvoke r18 add code r12 r1 null $ r10", "label r19 = org springframework validation default message code resolver r0", "specialinvoke r19 add code r12 r1 null null", "$ r9 = org springframework util string utils to string array r12", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework context annotation annotate bean definition reader r0", "specialinvoke r2 do register bean r1 null null null null", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r15 = org springframework context index candidate component index r0", "$ r4 = r15 index", "$ r5 = $ r4 get r2", "r3 = java util list $ r5", "if r3 == null goto label1", "$ r7 = r3 parallel stream", "$ r8 = candidate component index $ lambda_get candidate types_1__1 bootstrap $ r1", "$ r9 = $ r7 filter $ r8", "$ r10 = candidate component index $ lambda_get candidate types_2__3 bootstrap $", "$ r11 = $ r9 map $ r10", "$ r12 = java util stream collector to set", "$ r13 = $ r11 collect $ r12", "$ r14 = java util set $ r13", "return $ r14", "if r3 == null goto label1", "label $ r6 = java util collection empty set", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework context support abstract application context r0", "r1 close", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework context support abstract resource base message source r0", "$ z0 = r1 fallback to system locale", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org springframework context support generic application context r0", "r3 register bean null r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework schedule config interval task r0", "$ l0 = r1 interval", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework schedule config task r0", "$ r1 = r2 runnable", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework schedule support schedule method runnable r0", "$ r1 = r2 method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r16 = org springframework context event application listener method adapter r0", "r1 = r16 get target method", "r14 = new java util string joiner", "specialinvoke r14 < init > \\", "r3 = r1 get parameter type", "i0 = lengthof r3", "i1 = 0", "label if i1 > = i0 goto label2", "r4 = r3 [ i1 ]", "$ r12 = r4 get name", "r14 add $ r12", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r7 = org springframework util class utils get qualify method name r1", "$ r8 = r15 append $ r7", "$ r9 = r14 to string", "$ r10 = $ r8 append $ r9", "$ r11 = $ r10 to string", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r4 = org springframework schedule concurrent thread pool task scheduler r0", "$ r1 = r4 schedule executor", "$ z1 = $ r1 instanceof java util concurrent schedule thread pool executor", "if $ z1 == 0 goto label1", "r5 = org springframework schedule concurrent thread pool task scheduler r0", "$ r2 = r5 schedule executor", "$ r3 = java util concurrent schedule thread pool executor $ r2", "$ r3 set execute exist delay task after shutdown policy z0", "label r6 = org springframework schedule concurrent thread pool task scheduler r0", "r6 execute exist delay task after shutdown policy = z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 contain \\ `` l\\ ``", "if $ z0 ! = 0 goto label1", "$ z1 = r0 contain \\ `` w\\ ``", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == null goto label1", "$ z0 = org springframework util string utils have text r1", "if $ z0 ! = 0 goto label2", "label return null", "if $ z0 ! = 0 goto label2", "label $ r2 = r0 annotation type", "$ r3 = newarray java lang class [ 0 ]", "r7 = $ r2 get declare method r1 $ r3", "org springframework util reflection utils make accessible r7", "$ r4 = newarray java lang object [ 0 ]", "$ r5 = r7 invoke r0 $ r4", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r2 = r0 annotation type", "$ r3 = org springframework core annotation annotation utils get default value $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [], [5], [6], [7], []]}
{"nodes": ["r4 = @ parameter0", "if r4 ! = null goto label1", "r4 = class \\ `` ljava lang object \\ ``", "label $ r1 = org springframework core convert type descriptor common type cache", "$ r2 = $ r1 get r4", "r0 = org springframework core convert type descriptor $ r2", "if r0 == null goto label2", "$ r5 = r0", "goto label3", "label return $ r5", "if r0 == null goto label2", "label $ r5 = new org springframework core convert type descriptor", "$ r3 = org springframework core resolvable type for class r4", "specialinvoke $ r5 < init > $ r3 null null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = new org springframework core convert type descriptor", "specialinvoke $ r1 < init > r0", "$ r2 = org springframework core convert type descriptor nest $ r1 i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = new org springframework core convert type descriptor", "specialinvoke $ r1 < init > r0", "$ r2 = org springframework core convert type descriptor nest $ r1 i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org springframework util string utils have text r1", "if $ z0 ! = 0 goto label1", "$ r8 = new java lang illegal argument exception", "$ r9 = new java lang string builder", "specialinvoke $ r9 < init >", "$ r10 = $ r9 append \\ `` invalid profile [ \\ ``", "$ r11 = $ r10 append r1", "$ r12 = $ r11 append \\ `` ] must contain text\\ ``", "$ r13 = $ r12 to string", "specialinvoke $ r8 < init > $ r13", "throw $ r8", "if $ z0 ! = 0 goto label1", "label $ c0 = r1 char at 0", "if $ c0 ! = 33 goto label2", "$ r2 = new java lang illegal argument exception", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append \\ `` invalid profile [ \\ ``", "$ r5 = $ r4 append r1", "$ r6 = $ r5 append \\ `` ] must not begin with ! operator\\ ``", "$ r7 = $ r6 to string", "specialinvoke $ r2 < init > $ r7", "throw $ r2", "if $ c0 ! = 33 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework core env abstract property resolver r0", "$ z0 = r3 ignore unresolvable nested placeholder", "if $ z0 == 0 goto label1", "r4 = org springframework core env abstract property resolver r0", "$ r2 = r4 resolve placeholder r1", "goto label2", "label return $ r2", "if $ z0 == 0 goto label1", "label r5 = org springframework core env abstract property resolver r0", "$ r2 = r5 resolve require placeholder r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "$ r1 = newarray java lang object [ 3 ]", "$ r2 = r0 get class", "$ r3 = $ r2 get simple name", "$ r1 [ 0 ] = $ r3", "r7 = org springframework core env composite property source r0", "$ r4 = r7 name", "$ r1 [ 1 ] = $ r4", "r8 = org springframework core env composite property source r0", "$ r5 = r8 property source", "$ r1 [ 2 ] = $ r5", "$ r6 = java lang string format \\ `` % s [ name=\\ ' % s\\ ' property sources= % s ] \\", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org springframework core resolvable type for field r0", "$ r2 = $ r1 a collection", "$ r3 = newarray int [ 0 ]", "$ r4 = $ r2 resolve generic $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org springframework util assert not null r0 \\ `` method parameter must not be null\\ ``", "org springframework util assert not null r1 \\ `` class must not be null\\ ``", "r0 set contain class r1", "org springframework core resolvable type resolve method parameter r0", "$ r2 = r0 get parameter type", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org springframework util assert not null r0 \\ `` method must not be null\\ ``", "$ r3 = org springframework core resolvable type for method return type r0", "r2 = $ r3 a r1", "$ z0 = r2 have generic", "if $ z0 == 0 goto label1", "$ r4 = r2 get type", "$ z1 = $ r4 instanceof java lang reflect wildcard type", "if $ z1 == 0 goto label2", "label return null", "if $ z1 == 0 goto label2", "label $ r5 = org springframework core generic type resolver get single generic r2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = org springframework core resolvable type for class r0", "r2 = $ r3 a r1", "$ z0 = r2 have generic", "if $ z0 ! = 0 goto label1", "return null", "if $ z0 ! = 0 goto label1", "label $ r4 = org springframework core generic type resolver get single generic r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework core io abstract resource r0", "$ r1 = r2 get file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework core io byte array resource r0", "$ r1 = r2 byte array", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org springframework core io file system resource r0", "$ r3 = r6 path", "r2 = org springframework util string utils apply relative path $ r3 r1", "r5 = new org springframework core io file system resource", "specialinvoke r5 < init > r2", "r7 = org springframework core io resource r5", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework core io input stream resource r0", "$ r1 = r2 input stream", "$ i0 = $ r1 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = newarray org springframework core io resource [ 1 ]", "$ r2 [ 0 ] = r1", "r3 = org springframework core io support property loader support r0", "r3 location = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework core io support property loader support r0", "r2 location = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework core io support property loader support r0", "r1 ignore resource not find = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework core io support property loader support r0", "r2 file encode = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java util property", "specialinvoke $ r2 < init >", "org springframework core io support property loader utils fill property $ r2 r0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework core method parameter r0", "$ r1 = r3 get member", "$ r2 = $ r1 get declare class", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r11 = org springframework core method parameter r0", "$ i0 = r11 nest level", "if $ i0 < = 1 goto label8", "r12 = org springframework core method parameter r0", "r9 = r12 get generic parameter type", "i3 = 2", "label r13 = org springframework core method parameter r0", "$ i1 = r13 nest level", "if i3 > $ i1 goto label5", "$ z3 = r9 instanceof java lang reflect parameterized type", "if $ z3 == 0 goto label4", "$ r7 = java lang reflect parameterized type r9", "r1 = $ r7 get actual type argument", "r14 = org springframework core method parameter r0", "r2 = r14 get type index for level i3", "if r2 == null goto label2", "$ i4 = r2 int value", "goto label3", "label r9 = r1 [ $ i4 ]", "label i3 = i3 + 1", "goto label1", "if r2 == null goto label2", "label $ i2 = lengthof r1", "$ i4 = $ i2 - 1", "if i3 > $ i1 goto label5", "label $ z0 = r9 instanceof java lang class", "if $ z0 == 0 goto label6", "$ r6 = java lang class r9", "return $ r6", "if $ z0 == 0 goto label6", "label $ z1 = r9 instanceof java lang reflect parameterized type", "if $ z1 == 0 goto label7", "$ r4 = java lang reflect parameterized type r9", "r10 = $ r4 get raw type", "$ z2 = r10 instanceof java lang class", "if $ z2 == 0 goto label7", "$ r5 = java lang class r10", "return $ r5", "if $ z2 == 0 goto label7", "label return class \\ `` ljava lang object \\ ``", "if $ i0 < = 1 goto label8", "label r15 = org springframework core method parameter r0", "$ r3 = r15 get parameter type", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org springframework core method parameter r0", "r2 = r5 get parameter annotation", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label3", "r4 = r2 [ i1 ]", "$ z0 = r1 be instance r4", "if $ z0 == 0 goto label2", "return r4", "if $ z0 == 0 goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ parameter0", "r3 = r0", "label $ z0 = r3 instanceof org springframework core serializable type wrapper $ serializable type proxy", "if $ z0 == 0 goto label2", "$ r1 = org springframework core serializable type wrapper $ serializable type proxy r0", "$ r2 = $ r1 get type provider", "r3 = $ r2 get type", "goto label1", "if $ z0 == 0 goto label2", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r12 = org springframework core simple alias registry r0", "$ r7 = r12 alias map", "$ r8 = $ r7 entry set", "r3 = $ r8 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label6", "$ r9 = r3 next", "r4 = java util map $ entry $ r9", "$ r10 = r4 get value", "r5 = java lang string $ r10", "$ z1 = r5 equal r1", "if $ z1 == 0 goto label5", "$ r11 = r4 get key", "r6 = java lang string $ r11", "$ z2 = r6 equal r2", "if $ z2 ! = 0 goto label2", "r13 = org springframework core simple alias registry r0", "$ z3 = r13 have alias r6 r2", "if $ z3 == 0 goto label3", "label $ z4 = 1", "goto label4", "label return $ z4", "if $ z3 == 0 goto label3", "label $ z4 = 0", "if $ z1 == 0 goto label5", "label goto label1", "if $ z0 == 0 goto label6", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["$ r1 = class \\ `` lorg springframework core spring version \\ ``", "r0 = $ r1 get package", "if r0 == null goto label1", "$ r2 = r0 get implementation version", "goto label2", "label return $ r2", "if r0 == null goto label1", "label $ r2 = null"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "$ r2 = java lang boolean value of z0", "r4 = org springframework core style to string creator r0", "$ r3 = r4 append r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework core task simple async task executor r0", "r2 thread factory = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org springframework core task simple async task executor r0", "$ r1 = r2 concurrency throttle", "$ r1 set concurrency limit i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = java lang boolean value of z0", "r2 = org springframework util ant path matcher r0", "r2 cache pattern = $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework util backoff exponential back off r0", "$ l0 = r1 max interval", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org springframework util backoff fix back off r0", "r1 interval = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework util backoff fix back off r0", "$ l0 = r1 interval", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label r1 = r0 get class", "$ z0 = java lang reflect proxy be proxy class r1", "if $ z0 == 0 goto label5", "$ r6 = new java lang string builder", "$ r7 = r1 get name", "specialinvoke $ r6 < init > $ r7", "$ r6 append \\ `` implement \\ ``", "r3 = r1 get interface", "i3 = 0", "label $ i0 = lengthof r3", "if i3 > = $ i0 goto label4", "$ r10 = r3 [ i3 ]", "$ r11 = $ r10 get name", "$ r6 append $ r11", "$ i1 = lengthof r3", "$ i2 = $ i1 - 1", "if i3 > = $ i2 goto label3", "$ r6 append 44", "label i3 = i3 + 1", "goto label2", "if i3 > = $ i0 goto label4", "label $ r9 = $ r6 to string", "return $ r9", "if $ z0 == 0 goto label5", "label $ z1 = r1 be array", "if $ z1 == 0 goto label6", "$ r5 = org springframework util class utils get qualify name for array r1", "return $ r5", "if $ z1 == 0 goto label6", "label $ r4 = r1 get name", "return $ r4"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [], [28], [29], [30], [31], [], [33], [34], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org springframework util assert not null r0 \\ `` class must not be null\\ ``", "org springframework util assert not null r1 \\ `` method name must not be null\\ ``", "i2 = 0", "r2 = r0 get declare method", "i3 = lengthof r2", "i4 = 0", "label if i4 > = i3 goto label3", "r8 = r2 [ i4 ]", "$ r6 = r8 get name", "$ z0 = r1 equal $ r6", "if $ z0 == 0 goto label2", "i2 = i2 + 1", "label i4 = i4 + 1", "goto label1", "label if i4 > = i3 goto label3", "label r9 = r0 get interface", "i5 = lengthof r9", "i6 = 0", "label if i6 > = i5 goto label5", "r3 = r9 [ i6 ]", "$ i1 = org springframework util class utils get method count for name r3 r1", "i2 = i2 + $ i1", "i6 = i6 + 1", "goto label4", "label if i6 > = i5 goto label5", "label $ r4 = r0 get superclass", "if $ r4 == null goto label6", "$ r5 = r0 get superclass", "$ i0 = org springframework util class utils get method count for name $ r5 r1", "i2 = i2 + $ i0", "label return i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ parameter0", "org springframework util assert not null r0 \\ `` class must not be null\\ ``", "$ z0 = r0 be primitive", "if $ z0 ! = 0 goto label1", "$ z1 = org springframework util class utils be primitive wrapper r0", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org springframework util assert not null r0 \\ `` left-hand side type must not be null\\ ``", "org springframework util assert not null r1 \\ `` right-hand side type must not be null\\ ``", "$ z0 = r0 be assignable from r1", "if $ z0 == 0 goto label1", "return 1", "if $ z0 == 0 goto label1", "label $ z1 = r0 be primitive", "if $ z1 == 0 goto label3", "$ r4 = org springframework util class utils primitive wrapper type map", "$ r5 = $ r4 get r1", "r6 = java lang class $ r5", "if r0 ! = r6 goto label2", "label goto label4", "label return 0", "if $ z1 == 0 goto label3", "label $ r2 = org springframework util class utils primitive type to wrapper map", "$ r3 = $ r2 get r1", "r7 = java lang class $ r3", "if r7 == null goto label4", "$ z2 = r0 be assignable from r7", "if $ z2 == 0 goto label4"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return \\ `` \\ ``", "if r0 ! = null goto label1", "label r1 = r0 get name", "i0 = r1 last index of 46", "if i0 ! = -1 goto label2", "label r2 = r1 substring 0 i0", "$ r3 = r2 replace 46 47", "return $ r3"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java util array a list r0", "$ r2 = org springframework util class utils class name to string $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r5 = org springframework util comparator compound comparator r0", "$ r3 = r5 comparators", "r4 = new org springframework util comparator invertible comparator", "specialinvoke r4 < init > r1 z0", "$ r3 add r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org springframework util digest utils append digest a hex \\ `` md5\\", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org springframework util fast byte array output stream r0", "i0 = r5 size", "if i0 ! = 0 goto label1", "$ r4 = newarray byte [ 0 ]", "return $ r4", "if i0 ! = 0 goto label1", "label r6 = org springframework util fast byte array output stream r0", "r6 resize i0", "r7 = org springframework util fast byte array output stream r0", "$ r1 = r7 buffer", "$ r2 = $ r1 get first", "$ r3 = byte [ ] $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "r1 = org springframework util system property utils resolve placeholder r0", "r2 = org springframework util resource utils get file r1", "$ z0 = r2 exist", "if $ z0 ! = 0 goto label1", "$ r6 = new java io file not find exception", "$ r7 = new java lang string builder", "specialinvoke $ r7 < init >", "$ r8 = $ r7 append \\ `` log4j config file [ \\ ``", "$ r9 = $ r8 append r1", "$ r10 = $ r9 append \\ `` ] not found\\ ``", "$ r11 = $ r10 to string", "specialinvoke $ r6 < init > $ r11", "throw $ r6", "if $ z0 ! = 0 goto label1", "label $ r3 = r1 to lower case", "$ z1 = $ r3 end with \\ `` xml\\ ``", "if $ z1 == 0 goto label2", "$ r5 = r2 get absolute path", "org apache log4j xml d o m configurator configure and watch $ r5 l0", "goto label3", "label return", "if $ z1 == 0 goto label2", "label $ r4 = r2 get absolute path", "org apache log4j property configurator configure and watch $ r4 l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == null goto label01", "if r1 ! = null goto label02", "label return 0", "if r1 ! = null goto label02", "label i0 = r0 index of 42", "if i0 ! = -1 goto label03", "$ z6 = r0 equal r1", "return $ z6", "if i0 ! = -1 goto label03", "label if i0 ! = 0 goto label10", "$ i3 = r0 length", "if $ i3 ! = 1 goto label04", "return 1", "if $ i3 ! = 1 goto label04", "label $ i4 = i0 + 1", "i1 = r0 index of 42 $ i4", "if i1 ! = -1 goto label05", "$ r11 = r0 substring 1", "$ z5 = r1 end with $ r11", "return $ z5", "if i1 ! = -1 goto label05", "label r2 = r0 substring 1 i1", "$ r7 = \\ `` \\ ``", "$ z2 = $ r7 equal r2", "if $ z2 == 0 goto label06", "$ r10 = r0 substring i1", "$ z4 = org springframework util pattern match utils simple match $ r10 r1", "return $ z4", "if $ z2 == 0 goto label06", "label i8 = r1 index of r2", "label if i8 == -1 goto label09", "$ r8 = r0 substring i1", "$ i5 = r2 length", "$ i6 = i8 + $ i5", "$ r9 = r1 substring $ i6", "$ z3 = org springframework util pattern match utils simple match $ r8 $ r9", "if $ z3 == 0 goto label08", "label $ i7 = i8 + 1", "i8 = r1 index of r2 $ i7", "goto label07", "label if i8 == -1 goto label09", "label return 0", "label if i0 ! = 0 goto label10", "label $ i2 = r1 length", "if $ i2 < i0 goto label11", "$ r3 = r0 substring 0 i0", "$ r4 = r1 substring 0 i0", "$ z0 = $ r3 equal $ r4", "if $ z0 == 0 goto label11", "$ r5 = r0 substring i0", "$ r6 = r1 substring i0", "$ z1 = org springframework util pattern match utils simple match $ r5 $ r6", "if $ z1 == 0 goto label11", "$ z7 = 1", "goto label12", "label return $ z7", "if $ z1 == 0 goto label11", "label $ z7 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [], [58], [59], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 get modifier", "$ z0 = java lang reflect modifier be public $ i0", "if $ z0 == 0 goto label1", "$ r1 = r0 get declare class", "$ i1 = $ r1 get modifier", "$ z2 = java lang reflect modifier be public $ i1", "if $ z2 ! = 0 goto label2", "label $ z1 = r0 be accessible", "if $ z1 ! = 0 goto label2", "r0 set accessible 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org springframework util reflection utils get declare method r0", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label6", "r4 = r2 [ i1 ]", "label r1 do with r4", "label goto label5", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return 0", "if r0 ! = null goto label1", "label $ z0 = r0 start with \\ `` classpath\\ ``", "if $ z0 == 0 goto label2", "return 1", "if $ z0 == 0 goto label2", "label $ r2 = new java net url", "specialinvoke $ r2 < init > r0", "label return 1"], "adj": [[1], [2], [], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r9 = org springframework util stop watch r0", "$ z0 = r9 run", "if $ z0 ! = 0 goto label1", "r7 = new java lang illegal state exception", "specialinvoke r7 < init > \\ `` can\\'t stop stop watch it\\ 's not running\\ ``", "throw r7", "if $ z0 ! = 0 goto label1", "label $ l1 = java lang system current time millis", "r10 = org springframework util stop watch r0", "$ l2 = r10 start time millis", "l0 = $ l1 - $ l2", "r11 = org springframework util stop watch r0", "$ l3 = r11 total time millis", "$ l4 = $ l3 + l0", "r12 = org springframework util stop watch r0", "r12 total time millis = $ l4", "r8 = new org springframework util stop watch $ task info", "r13 = org springframework util stop watch r0", "$ r2 = r13 current task name", "specialinvoke r8 < init > $ r2 l0", "r14 = org springframework util stop watch r0", "r14 last task info = r8", "r15 = org springframework util stop watch r0", "$ z1 = r15 keep task list", "if $ z1 == 0 goto label2", "r16 = org springframework util stop watch r0", "$ r4 = r16 task list", "r17 = org springframework util stop watch r0", "$ r3 = r17 last task info", "$ r4 add $ r3", "label r18 = org springframework util stop watch r0", "$ i5 = r18 task count", "$ i6 = $ i5 + 1", "r19 = org springframework util stop watch r0", "r19 task count = $ i6", "r20 = org springframework util stop watch r0", "r20 run = 0", "r21 = org springframework util stop watch r0", "r21 current task name = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework util stop watch r0", "$ r1 = r2 current task name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework util stop watch r0", "$ i0 = r1 task count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org springframework util xml abstract stax x m l reader r0", "$ r2 = r7 get content handler", "if $ r2 == null goto label1", "r8 = org springframework util xml abstract stax x m l reader r0", "$ r3 = r8 namespaces", "$ z0 = $ r3 contain key r1", "if $ z0 == 0 goto label1", "r9 = org springframework util xml abstract stax x m l reader r0", "$ r4 = r9 get content handler", "$ r4 end prefix map r1", "r10 = org springframework util xml abstract stax x m l reader r0", "$ r5 = r10 namespaces", "$ r5 remove r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "org springframework util assert not null r2 \\ `` target type to convert to can not be null\\ ``", "if r1 ! = null goto label1", "return 1", "if r1 ! = null goto label1", "label r5 = org springframework core convert support generic conversion service r0", "r3 = r5 get converter r1 r2", "$ r4 = org springframework core convert support generic conversion service no_op_converter", "if r3 ! = $ r4 goto label2", "$ z0 = 1", "goto label3", "label return $ z0", "if r3 ! = $ r4 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "org springframework util assert not null r2 \\ `` target type to convert to can not be null\\ ``", "$ r3 = org springframework core convert type descriptor for object r1", "$ r4 = org springframework core convert type descriptor value of r2", "r6 = org springframework core convert support generic conversion service r0", "$ r5 = r6 convert r1 $ r3 $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r10 = org springframework core io file system resource r0", "$ r2 = r10 file", "if $ r2 == null goto label1", "$ l1 = specialinvoke r0 last modified", "return $ l1", "if $ r2 == null goto label1", "label r11 = org springframework core io file system resource r0", "$ r4 = r11 file path", "$ r3 = newarray java nio file link option [ 0 ]", "$ r5 = java nio file file get last modified time $ r4 $ r3", "$ l0 = $ r5 to millis", "label return $ l0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework core io path resource r0", "$ r1 = r2 path", "$ l0 = java nio file file size $ r1", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ z0 = org springframework core kotlin detector kotlin reflect present", "return $ z0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` _\\ ``", "$ r3 = r0 get name", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 to string", "$ r6 = org apache common log log factory get log $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r4 = new org springframework core log log message $ format message2", "specialinvoke r4 < init > r0 r1 r2", "r5 = org springframework core log log message r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework core method parameter r0", "$ r1 = r2 executable", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework core reactive adapter registry r0", "$ r2 = r3 get adapter r1 null", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework core reactive type descriptor r0", "$ r1 = r2 reactive type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework util ant path matcher r0", "$ r2 = r4 path separator", "r5 = org springframework util ant path matcher r0", "$ z0 = r5 trim tokens", "$ r3 = org springframework util string utils tokenize to string array r1 $ r2 $ z0 1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get protocol", "$ r2 = \\ `` file\\ ``", "$ z0 = $ r2 equal r1", "if $ z0 ! = 0 goto label1", "$ r3 = \\ `` vfsfile\\ ``", "$ z1 = $ r3 equal r1", "if $ z1 ! = 0 goto label1", "$ r4 = \\ `` vfs\\ ``", "$ z2 = $ r4 equal r1", "if $ z2 == 0 goto label2", "label $ z3 = 1", "goto label3", "label return $ z3", "if $ z2 == 0 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework util stop watch r0", "$ i0 = r1 task count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r17 = new java lang string builder", "r18 = org springframework util stop watch r0", "$ r5 = r18 short summary", "specialinvoke r17 < init > $ r5", "r19 = org springframework util stop watch r0", "$ z0 = r19 keep task list", "if $ z0 == 0 goto label3", "r20 = org springframework util stop watch r0", "r2 = r20 get task info", "i0 = lengthof r2", "i5 = 0", "label if i5 > = i0 goto label2", "r3 = r2 [ i5 ]", "$ r8 = r17 append \\ `` [ \\ ``", "$ r9 = r3 get task name", "$ r10 = $ r8 append $ r9", "$ r11 = $ r10 append \\ `` ] take \\ ``", "$ l2 = r3 get time nanos", "$ r12 = $ r11 append $ l2", "$ r12 append \\ `` ns\\ ``", "$ l3 = r3 get time nanos", "$ d0 = double $ l3", "$ d1 = 100 0 * $ d0", "r21 = org springframework util stop watch r0", "$ l4 = r21 get total time nanos", "$ d2 = double $ l4", "$ d3 = $ d1 $ d2", "l1 = java lang math round $ d3", "$ r14 = r17 append \\ `` = \\ ``", "$ r15 = $ r14 append l1", "$ r15 append \\ `` % \\ ``", "i5 = i5 + 1", "goto label1", "label if i5 > = i0 goto label2", "label goto label4", "label $ r7 = r17 to string", "return $ r7", "if $ z0 == 0 goto label3", "label r17 append \\ `` no task info kept\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [], [39], []]}
{"nodes": ["r0 = @ parameter0", "r2 = org springframework util class utils get short name r0", "i0 = r2 last index of 46", "if i0 == -1 goto label1", "$ i1 = i0 + 1", "$ r3 = r2 substring $ i1", "goto label2", "label $ r1 = java bean introspector decapitalize $ r3", "return $ r1", "if i0 == -1 goto label1", "label $ r3 = r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [], [10], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label i0 = r0 last index of 46", "if i0 ! = -1 goto label2", "label i1 = r0 last index of \\ `` \\ ``", "if i1 < = i0 goto label3", "label $ i2 = i0 + 1", "$ r1 = r0 substring $ i2", "return $ r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r1 get value", "$ r3 = r1 get type descriptor", "$ r4 = org springframework core convert type descriptor value of class \\ `` ljava lang float \\ ``", "$ r5 = r0 convert value $ r2 $ r3 $ r4", "$ r6 = java lang float $ r5", "$ f0 = $ r6 float value", "return $ f0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework expression expression exception r0", "$ r1 = r2 expression string", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "label i3 = java lang integer parse int r0 i1", "r8 = new org springframework expression spel ast int literal", "specialinvoke r8 < init > r0 i0 i3", "label r11 = org springframework expression spel ast literal r8", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r10 = org springframework expression spel ast method reference r0", "r1 = r10 cache executor", "if r1 == null goto label1", "$ r3 = r1 get", "$ z0 = $ r3 instanceof org springframework expression spel support reflective method executor", "if $ z0 ! = 0 goto label2", "label return 0", "if $ z0 ! = 0 goto label2", "label r11 = org springframework expression spel ast method reference r0", "r6 = r11 child", "i1 = lengthof r6", "i2 = 0", "label if i2 > = i1 goto label5", "r2 = r6 [ i2 ]", "$ z3 = r2 be compilable", "if $ z3 ! = 0 goto label4", "return 0", "if $ z3 ! = 0 goto label4", "label i2 = i2 + 1", "goto label3", "label if i2 > = i1 goto label5", "label $ r4 = r1 get", "r7 = org springframework expression spel support reflective method executor $ r4", "$ z1 = r7 do argument conversion occur", "if $ z1 == 0 goto label6", "label r8 = r7 get method", "r9 = r8 get declare class", "$ i0 = r9 get modifier", "$ z2 = java lang reflect modifier be public $ i0", "if $ z2 ! = 0 goto label7", "$ r5 = r7 get public declare class", "if $ r5 ! = null goto label7", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r10 = org springframework expression spel expression state r0", "specialinvoke r10 ensure variable scope initialize", "r11 = org springframework expression spel expression state r0", "$ r4 = r11 variable scope", "r9 = new org springframework expression spel expression state $ variable scope", "specialinvoke r9 < init > r1 r2", "$ r4 push r9", "r12 = org springframework expression spel expression state r0", "$ r6 = r12 scope root object", "r13 = org springframework expression spel expression state r0", "$ r7 = r13 get active context object", "$ r6 push $ r7", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework expression spel spel parser configuration r0", "$ r1 = r2 compiler class loader", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = new org springframework expression spel support data bind method resolver", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework expression spel support reflective method executor r0", "$ r1 = r2 original method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io spring javaformat formatter file formatter exception r0", "$ r1 = r2 file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ r2 = io spring javaformat formatter formatter default_line_separator", "r4 = io spring javaformat formatter formatter r0", "$ r3 = r4 format r1 i0 i1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = io spring javaformat eclipse jdt internal core java model manager get java model manager", "r3 = r2 get classpath container r0 r1", "$ r4 = io spring javaformat eclipse jdt internal core java model manager container_initialization_in_progress", "if r3 ! = $ r4 goto label1", "$ r5 = r2 get previous session container r0 r1", "return $ r5", "if r3 ! = $ r4 goto label1", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = io spring javaformat eclipse jdt internal compiler lookup package bind r0", "$ r1 = r3 compound name", "$ r2 = io spring javaformat eclipse jdt core compiler char operation concat with $ r1 47", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = io spring javaformat eclipse jdt internal core nd database ref r0", "$ r1 = r3 nd", "$ r2 = $ r1 acquire read lock", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io spring javaformat eclipse jdt internal core nd db b tree r0", "$ r2 = r3 db", "r4 = io spring javaformat eclipse jdt internal core nd db b tree r0", "$ l0 = r4 root pointer", "$ l1 = $ r2 get rec ptr $ l0", "r5 = io spring javaformat eclipse jdt internal core nd db b tree r0", "$ z0 = specialinvoke r5 accept $ l1 r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "l1 = @ parameter1", "r2 = io spring javaformat eclipse jdt internal core nd db chunk r0", "r2 make dirty", "i2 = io spring javaformat eclipse jdt internal core nd db chunk rec ptr to index l0", "r3 = io spring javaformat eclipse jdt internal core nd db chunk r0", "$ r1 = r3 f buffer", "io spring javaformat eclipse jdt internal core nd db database put rec ptr l1 $ r1 i2", "r4 = io spring javaformat eclipse jdt internal core nd db chunk r0", "specialinvoke r4 record write l0 4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r9 = io spring javaformat eclipse jdt internal core nd db chunk cache r0", "i1 = specialinvoke r9 compute length l0", "r10 = io spring javaformat eclipse jdt internal core nd db chunk cache r0", "$ z0 = r10 f table be full", "if $ z0 == 0 goto label1", "r11 = io spring javaformat eclipse jdt internal core nd db chunk cache r0", "$ r6 = r11 f page table", "$ i3 = lengthof $ r6", "goto label2", "label i2 = $ i3", "if i1 < = $ i3 goto label3", "r7 = newarray io spring javaformat eclipse jdt internal core nd db chunk [ i1 ]", "r13 = io spring javaformat eclipse jdt internal core nd db chunk cache r0", "$ r5 = r13 f page table", "java lang system arraycopy $ r5 0 r7 0 $ i3", "r14 = io spring javaformat eclipse jdt internal core nd db chunk cache r0", "r14 f table be full = 0", "r15 = io spring javaformat eclipse jdt internal core nd db chunk cache r0", "r15 f pointer = $ i3", "r16 = io spring javaformat eclipse jdt internal core nd db chunk cache r0", "r16 f page table = r7", "goto label6", "label return", "if i1 < = $ i3 goto label3", "label i4 = i1", "goto label5", "label if i4 < i2 goto label4", "label r17 = io spring javaformat eclipse jdt internal core nd db chunk cache r0", "$ r2 = r17 f page table", "r1 = $ r2 [ i4 ]", "r1 f cache index = -1", "$ r3 = r1 f database", "$ r3 check if chunk release r1", "i4 = i4 + 1", "label if i4 < i2 goto label4", "r8 = newarray io spring javaformat eclipse jdt internal core nd db chunk [ i1 ]", "r18 = io spring javaformat eclipse jdt internal core nd db chunk cache r0", "$ r4 = r18 f page table", "java lang system arraycopy $ r4 0 r8 0 i1", "r19 = io spring javaformat eclipse jdt internal core nd db chunk cache r0", "r19 f table be full = 1", "r20 = io spring javaformat eclipse jdt internal core nd db chunk cache r0", "r20 f pointer = 0", "r21 = io spring javaformat eclipse jdt internal core nd db chunk cache r0", "r21 f page table = r8", "if $ z0 == 0 goto label1", "label r12 = io spring javaformat eclipse jdt internal core nd db chunk cache r0", "$ i3 = r12 f pointer"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], []]}
{"nodes": ["r0 = @ this", "$ r1 = io spring javaformat eclipse jdt internal core nd java nd resource file zip_entries", "r4 = io spring javaformat eclipse jdt internal core nd java nd resource file r0", "$ r2 = r4 get nd", "r5 = io spring javaformat eclipse jdt internal core nd java nd resource file r0", "$ l0 = r5 get address", "$ r3 = $ r1 a list $ r2 $ l0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = io spring javaformat eclipse jdt internal core nd java nd type missing_type_names", "r4 = io spring javaformat eclipse jdt internal core nd java nd type r0", "$ r3 = r4 get nd", "r5 = io spring javaformat eclipse jdt internal core nd java nd type r0", "$ l0 = r5 address", "$ r2 put $ r3 $ l0 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework security config annotation authentication configurers ldap ldap authentication provider configurer r0", "r2 user dn pattern = r1", "r3 = org springframework security config annotation authentication configurers ldap ldap authentication provider configurer r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework security config annotation authentication configurers ldap ldap authentication provider configurer r0", "r2 user detail context mapper = r1", "r3 = org springframework security config annotation authentication configurers ldap ldap authentication provider configurer r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework security config annotation authentication configurers ldap ldap authentication provider configurer r0", "r2 group search base = r1", "r3 = org springframework security config annotation authentication configurers ldap ldap authentication provider configurer r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework security config annotation authentication configurers ldap ldap authentication provider configurer r0", "r1 group search subtree = z0", "r2 = org springframework security config annotation authentication configurers ldap ldap authentication provider configurer r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org springframework security config annotation rsocket r socket security r0", "$ r2 = r6 basic auth spec", "if $ r2 ! = null goto label1", "r5 = new org springframework security config annotation rsocket r socket security $ basic authentication spec", "r7 = org springframework security config annotation rsocket r socket security r0", "specialinvoke r5 < init > r7 null", "r8 = org springframework security config annotation rsocket r socket security r0", "r8 basic auth spec = r5", "label r9 = org springframework security config annotation rsocket r socket security r0", "$ r3 = r9 basic auth spec", "r1 customize $ r3", "r10 = org springframework security config annotation rsocket r socket security r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org springframework security config annotation web configurers oauth2 client o auth2 client configurer", "specialinvoke r4 < init >", "r5 = org springframework security config annotation web builder http security r0", "r6 = org springframework security config annotation security configurer adapter r4", "$ r3 = specialinvoke r5 get or apply r6", "r1 customize $ r3", "r7 = org springframework security config annotation web builder http security r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework security config annotation web configurers form login configurer r0", "$ r2 = r4 get authentication filter", "$ r3 = org springframework security web authentication username password authentication filter $ r2", "$ r3 set username parameter r1", "r5 = org springframework security config annotation web configurers form login configurer r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org springframework security web authentication forward authentication failure handler", "specialinvoke r4 < init > r1", "r5 = org springframework security config annotation web configurers form login configurer r0", "r6 = org springframework security web authentication authentication failure handler r4", "r5 failure handler r6", "r7 = org springframework security config annotation web configurers form login configurer r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r11 = org springframework security config annotation web configurers header configurer r0", "$ r1 = r11 content type option", "$ r1 disable", "r12 = org springframework security config annotation web configurers header configurer r0", "$ r3 = r12 x protection", "$ r3 disable", "r13 = org springframework security config annotation web configurers header configurer r0", "$ r5 = r13 cache control", "$ r5 disable", "r14 = org springframework security config annotation web configurers header configurer r0", "$ r7 = r14 hsts", "$ r7 disable", "r15 = org springframework security config annotation web configurers header configurer r0", "$ r9 = r15 frame option", "$ r9 disable", "r16 = org springframework security config annotation web configurers header configurer r0", "return r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework security config annotation web configurers http basic configurer r0", "$ r2 = r4 basic auth entry point", "$ r2 set realm name r1", "r5 = org springframework security config annotation web configurers http basic configurer r0", "$ r3 = r5 basic auth entry point", "$ r3 after property set", "r6 = org springframework security config annotation web configurers http basic configurer r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework security config annotation web configurers logout configurer r0", "r2 logout request matcher = r1", "r3 = org springframework security config annotation web configurers logout configurer r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org springframework security web authentication logout cookie clear logout handler", "specialinvoke r4 < init > r1", "r5 = org springframework security config annotation web configurers logout configurer r0", "r6 = org springframework security web authentication logout logout handler r4", "$ r3 = r5 add logout handler r6", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` client registration repository can not be null\\ ``", "r4 = org springframework security config annotation web configurers oauth2 client implicit grant configurer r0", "$ r2 = r4 get builder", "$ r3 = org springframework security config annotation web http security builder $ r2", "$ r3 set share object class \\ `` lorg springframework security oauth2 client registration client registration repository \\", "r5 = org springframework security config annotation web configurers oauth2 client implicit grant configurer r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new org springframework security core userdetails user detail by name service wrapper", "specialinvoke r5 < init >", "r5 set user detail service r1", "r6 = org springframework security config annotation web configurers x509 configurer r0", "r7 = org springframework security core userdetails authentication user detail service r5", "$ r4 = r6 authentication user detail service r7", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new org springframework security config core userdetails user detail resource factory bean", "specialinvoke $ r2 < init >", "$ r2 set resource location r0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org springframework security config web server server http security r0", "$ r2 = r6 header", "if $ r2 ! = null goto label1", "r5 = new org springframework security config web server server http security $ header spec", "r7 = org springframework security config web server server http security r0", "specialinvoke r5 < init > r7 null", "r8 = org springframework security config web server server http security r0", "r8 header = r5", "label r9 = org springframework security config web server server http security r0", "$ r3 = r9 header", "r1 customize $ r3", "r10 = org springframework security config web server server http security r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org springframework security config web server server http security r0", "$ r2 = r6 exception handle", "if $ r2 ! = null goto label1", "r5 = new org springframework security config web server server http security $ exception handle spec", "r7 = org springframework security config web server server http security r0", "specialinvoke r5 < init > r7 null", "r8 = org springframework security config web server server http security r0", "r8 exception handle = r5", "label r9 = org springframework security config web server server http security r0", "$ r3 = r9 exception handle", "r1 customize $ r3", "r10 = org springframework security config web server server http security r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org springframework security access vote abstract access decision manager r0", "$ r4 = r6 decision voter", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = org springframework security access access decision voter $ r5", "$ z1 = r3 support r1", "if $ z1 ! = 0 goto label2", "return 0", "if $ z1 ! = 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = class \\ `` lorg aopalliance intercept method invocation \\ ``", "$ z0 = $ r2 be assignable from r1", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` password encoder can not be null\\ ``", "r2 = org springframework security authentication dao dao authentication provider r0", "r2 password encoder = r1", "r3 = org springframework security authentication dao dao authentication provider r0", "r3 user not find encode password = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` default authentication failure event class must not be null\\ ``", "label $ r3 = newarray java lang class [ 2 ]", "$ r3 [ 0 ] = class \\ `` lorg springframework security core authentication \\ ``", "$ r3 [ 1 ] = class \\ `` lorg springframework security core authentication exception \\ ``", "$ r4 = r1 get constructor $ r3", "r15 = org springframework security authentication default authentication event publisher r0", "r15 default authentication failure event constructor = $ r4", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework security core authority map map base attributes2 grant authority mapper r0", "$ r2 = r3 get grant authority r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework security core authority map simple attributes2 grant authority mapper r0", "$ r2 = r3 get grant authority r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ i0 = org springframework security core context security context holder initialize count", "return $ i0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework security core userdetails user detail by name service wrapper r0", "$ r1 = r2 user detail service", "org springframework util assert not null $ r1 \\ `` user detail service must be set\\ ``", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "r3 = newarray byte [ 16 ]", "$ z0 = r0 start with \\ `` $ 2\\ ``", "if $ z0 == 0 goto label1", "$ c1 = r0 char at 2", "if $ c1 == 97 goto label2", "$ c4 = r0 char at 2", "if $ c4 == 121 goto label2", "$ c5 = r0 char at 2", "if $ c5 == 98 goto label2", "label $ r5 = new java lang illegal argument exception", "specialinvoke $ r5 < init > \\ `` invalid prefix\\ ``", "throw $ r5", "if $ c5 == 98 goto label2", "label if i0 < 4 goto label3", "if i0 < = 31 goto label4", "label $ r6 = new java lang illegal argument exception", "specialinvoke $ r6 < init > \\ `` invalid log_rounds\\ ``", "throw $ r6", "if i0 < = 31 goto label4", "label r1 next bytes r3", "$ r4 append \\ `` $ 2\\ ``", "$ c2 = r0 char at 2", "$ r4 append $ c2", "$ r4 append \\ `` $ \\ ``", "if i0 > = 10 goto label5", "$ r4 append \\ `` 0\\ ``", "label $ r4 append i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r4 = new org springframework security crypto encrypt hex encode text encryptor", "$ r3 = org springframework security crypto encrypt encryptors strong r0 r1", "specialinvoke r4 < init > $ r3", "r5 = org springframework security crypto encrypt text encryptor r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r4 = new org springframework security crypto encrypt hex encode text encryptor", "$ r3 = org springframework security crypto encrypt encryptors standard r0 r1", "specialinvoke r4 < init > $ r3", "r5 = org springframework security crypto encrypt text encryptor r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org springframework security crypto password ldap sha password encoder r0", "$ r3 = r5 salt generator", "r2 = $ r3 generate key", "r6 = org springframework security crypto password ldap sha password encoder r0", "$ r4 = specialinvoke r6 encode r1 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org springframework security crypto password md4 password encoder r0", "$ z0 = r8 encode hash a base64", "if $ z0 == 0 goto label1", "$ r4 = java util base64 get encoder", "$ r5 = $ r4 encode r1", "$ r6 = org springframework security crypto codec utf8 decode $ r5", "return $ r6", "if $ z0 == 0 goto label1", "label r7 = new java lang string", "$ r3 = org springframework security crypto codec hex encode r1", "specialinvoke r7 < init > $ r3", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org springframework util assert not null r0 \\ `` bean can not be null\\ ``", "org springframework util assert have text r1 \\ `` field name required\\ ``", "r2 = org springframework util string utils tokenize to string array r1 \\ `` \\ ``", "r6 = r0 get class", "r7 = r0", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label3", "r4 = r2 [ i1 ]", "r5 = org springframework security util field utils get field r6 r4", "r5 set accessible 1", "r7 = r5 get r7", "if r7 == null goto label2", "r6 = r7 get class", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` context can not be null\\ ``", "r2 = r1 get authorize client", "if r2 == null goto label1", "$ r6 = r2 get refresh token", "if $ r6 == null goto label1", "$ r7 = r2 get access token", "r36 = org springframework security oauth2 client refresh token reactive o auth2 authorize client provider r0", "r37 = org springframework security oauth2 core abstract o auth2 token $ r7", "$ z0 = specialinvoke r36 have token expire r37", "if $ z0 ! = 0 goto label2", "label $ r31 = reactor core publisher mono empty", "return $ r31", "if $ z0 ! = 0 goto label2", "label $ r8 = org springframework security oauth2 client o auth2 authorization context request_scope_attribute_name", "r3 = r1 get attribute $ r8", "r32 = java util collection empty set", "if r3 == null goto label3", "r33 = new java lang string builder", "specialinvoke r33 < init >", "$ r22 = r33 append \\ `` the context attribute must be of type string [ ] \\'\\ ``", "$ r23 = org springframework security oauth2 client o auth2 authorization context request_scope_attribute_name", "$ r24 = $ r22 append $ r23", "$ r25 = $ r24 append \\ `` \\'\\ ``", "$ r26 = $ r25 to string", "org springframework util assert be instance of class \\ `` [ ljava lang string \\", "r34 = new java util hash set", "$ r28 = java lang string [ ] r3", "$ r29 = java lang string [ ] $ r28", "$ r30 = java util array a list $ r29", "specialinvoke r34 < init > $ r30", "r32 = r34", "label r4 = r1 get client registration", "r35 = new org springframework security oauth2 client endpoint o auth2 refresh token grant request", "$ r10 = r2 get access token", "$ r11 = r2 get refresh token", "specialinvoke r35 < init > r4 $ r10 $ r11 r32", "$ r12 = reactor core publisher mono just r35", "r38 = org springframework security oauth2 client refresh token reactive o auth2 authorize client provider r0", "$ r13 = r38 access token response client", "$ r13 get class", "$ r15 = refresh token reactive o auth2 authorize client provider $ get token response__1 bootstrap $ $ r13", "$ r16 = $ r12 flat map $ r15", "$ r17 = refresh token reactive o auth2 authorize client provider $ lambda_authorize_0__2 bootstrap $ r4", "$ r18 = $ r16 on error map class \\ `` lorg springframework security oauth2 core o auth2 authorization exception \\", "$ r19 = refresh token reactive o auth2 authorize client provider $ lambda_authorize_1__3 bootstrap $ r4 r1", "$ r20 = $ r18 map $ r19", "return $ r20"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework security oauth2 core endpoint o auth2 authorization request r0", "$ r2 = r4 get attribute", "$ r3 = $ r2 get r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework security oauth2 core endpoint o auth2 authorization response r0", "$ r1 = r2 code", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework security oauth2 core o auth2 token validator result r0", "$ r1 = r2 error", "$ z0 = $ r1 be empty", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework security web authentication abstract authentication processing filter r0", "r2 session strategy = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` success handler can not be null\\ ``", "r2 = org springframework security web authentication abstract authentication processing filter r0", "r2 success handler = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework security web authentication abstract authentication target url request handler r0", "$ r1 = r2 default target url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org springframework security web authentication preauth pre authenticate authentication token r1", "r4 = org springframework security web authentication preauth pre authenticate granted authority user detail service r0", "$ r3 = r4 load user detail $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org springframework security web authentication rememberme abstract remember me service r0", "$ z0 = r6 always remember", "if $ z0 == 0 goto label1", "return 1", "if $ z0 == 0 goto label1", "label r3 = r1 get parameter r2", "if r3 == null goto label3", "$ z1 = r3 equal ignore case \\ `` true\\ ``", "if $ z1 ! = 0 goto label2", "$ z2 = r3 equal ignore case \\ `` on\\ ``", "if $ z2 ! = 0 goto label2", "$ z3 = r3 equal ignore case \\ `` yes\\ ``", "if $ z3 ! = 0 goto label2", "$ z4 = r3 equal \\ `` 1\\ ``", "if $ z4 == 0 goto label3", "label return 1", "if $ z4 == 0 goto label3", "label r7 = org springframework security web authentication rememberme abstract remember me service r0", "$ r4 = r7 logger", "$ r5 = org springframework core log log message format \\ `` do not send remember-me cookie principal do not set parameter \\ ' % s\\ ' \\", "$ r4 debug $ r5", "return 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert have text r1 \\ `` parameter name can not be empty or null\\ ``", "r2 = org springframework security web authentication rememberme abstract remember me service r0", "r2 parameter = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework security web authentication session session fixation protection strategy r0", "r1 migrate session attribute = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework security web authentication switchuser switch user filter r0", "r2 user detail service = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework security web authentication username password authentication filter r0", "r1 post only = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "$ r1 = org springframework security core context security context holder get context", "r2 = org springframework security web context save context on update or error response wrapper r0", "r2 save context $ r1", "r3 = org springframework security web context save context on update or error response wrapper r0", "r3 context save = 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework security web filter chain proxy r0", "r2 firewall = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` allow http method can not be null\\ ``", "$ r2 = org springframework security web firewall strict http firewall allow_any_http_method", "if r1 == $ r2 goto label1", "r5 = new java util hash set", "$ r4 = r5", "specialinvoke r5 < init > r1", "goto label2", "label r6 = org springframework security web firewall strict http firewall r0", "r6 allow http method = $ r4", "return", "if r1 == $ r2 goto label1", "label $ r4 = org springframework security web firewall strict http firewall allow_any_http_method"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` allow header name can not be null\\ ``", "r2 = org springframework security web firewall strict http firewall r0", "r2 allow header name = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework security web header header r0", "$ r1 = r2 header value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ b1 = l0 cmp 0l", "if $ b1 < = 0 goto label1", "$ z0 = 1", "goto label2", "label $ r1 = hpkp header writer $ lambda_set max age in seconds_0__1 bootstrap $ l0", "org springframework util assert be true $ z0 $ r1", "r2 = org springframework security web header writer hpkp header writer r0", "r2 max age in second = l0", "r3 = org springframework security web header writer hpkp header writer r0", "specialinvoke r3 update hpkp header value", "return", "if $ b1 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r6 = new java net uri", "specialinvoke r6 < init > r1", "r8 = org springframework security web header writer hpkp header writer r0", "r8 report uri = r6", "r9 = org springframework security web header writer hpkp header writer r0", "specialinvoke r9 update hpkp header value", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "$ r2 = \\ `` include sub domains\\ ``", "goto label2", "label r3 = org springframework security web server header strict transport security server http header writer r0", "r3 subdomain = $ r2", "r4 = org springframework security web server header strict transport security server http header writer r0", "specialinvoke r4 update delegate", "return", "if z0 == 0 goto label1", "label $ r2 = \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org springframework security web server header x frame option server http header writer create delegate r1", "r3 = org springframework security web server header x frame option server http header writer r0", "r3 delegate = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` password parameter can not be null\\ ``", "r2 = org springframework security web server server form login authentication converter r0", "r2 password parameter = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org springframework security web server util matcher or server web exchange matcher", "specialinvoke r2 < init > r0", "r3 = org springframework security web server util matcher server web exchange matcher r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "org springframework util assert not null r2 \\ `` invalid extractor null\\ ``", "r5 = org springframework security web util throwable analyzer r0", "$ r3 = r5 extractor map", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework mock http mock http output message r0", "$ r1 = r3 body", "$ r2 = $ r1 to byte array", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework mock http server reactive mock server http response r0", "$ r1 = r2 body", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework mock jndi simple name context builder r0", "$ r1 = r2 bound object", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework mock web mock http servlet request r0", "r2 content = r1", "r3 = org springframework mock web mock http servlet request r0", "r3 input stream = null", "r4 = org springframework mock web mock http servlet request r0", "r4 reader = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = newarray java lang string [ 1 ]", "$ r3 [ 0 ] = r2", "r4 = org springframework mock web mock http servlet request r0", "r4 set parameter r1 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework mock web mock http servlet request r0", "$ r1 = r2 parameter", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` locale must not be null\\ ``", "r3 = org springframework mock web mock http servlet request r0", "$ r2 = r3 locales", "$ r2 add first r1", "r4 = org springframework mock web mock http servlet request r0", "specialinvoke r4 update accept language header", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not empty r1 \\ `` locale list must not be empty\\ ``", "r4 = org springframework mock web mock http servlet request r0", "$ r2 = r4 locales", "$ r2 clear", "r5 = org springframework mock web mock http servlet request r0", "$ r3 = r5 locales", "$ r3 add all r1", "r6 = org springframework mock web mock http servlet request r0", "specialinvoke r6 update accept language header", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r12 = org springframework mock web mock http session r0", "$ r5 = r12 attribute", "$ r6 = $ r5 entry set", "r1 = $ r6 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label3", "$ r7 = r1 next", "r2 = java util map $ entry $ r7", "$ r8 = r2 get key", "r3 = java lang string $ r8", "r4 = r2 get value", "r1 remove", "$ z1 = r4 instanceof javax servlet http http session bind listener", "if $ z1 == 0 goto label2", "$ r10 = javax servlet http http session bind listener r4", "r11 = new javax servlet http http session bind event", "specialinvoke r11 < init > r0 r3 r4", "$ r10 value unbound r11", "label goto label1", "if $ z0 == 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework test context junit4 abstract transactional j unit4 spring context test r0", "$ r2 = r3 jdbc template", "org springframework test jdbc jdbc test utils drop table $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org springframework test context util test context resource utils convert to classpath resource path r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r15 = new org springframework core style to string creator", "specialinvoke r15 < init > r0", "r16 = org springframework test context support default test context r0", "$ r2 = r16 test class", "$ r3 = r15 append \\ `` test class\\", "r17 = org springframework test context support default test context r0", "$ r4 = r17 test instance", "$ r5 = $ r3 append \\ `` test instance\\", "r18 = org springframework test context support default test context r0", "$ r6 = r18 test method", "$ r7 = $ r5 append \\ `` test method\\", "r19 = org springframework test context support default test context r0", "$ r8 = r19 test exception", "$ r9 = $ r7 append \\ `` test exception\\", "r20 = org springframework test context support default test context r0", "$ r10 = r20 merge context configuration", "$ r11 = $ r9 append \\ `` merge context configuration\\", "r21 = org springframework test context support default test context r0", "$ r12 = r21 attribute", "$ r13 = $ r11 append \\ `` attributes\\", "$ r14 = $ r13 to string", "return $ r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get test instance", "r3 = r1 get test class", "$ r5 = r1 get application context", "r4 = $ r5 get autowire capable bean factory", "r4 autowire bean property r2 0 0", "$ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "$ r7 = r3 get name", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 append \\ `` original\\ ``", "$ r10 = $ r9 to string", "r4 initialize bean r2 $ r10", "$ r12 = org springframework test context support dependency injection test execution listener reinject_dependencies_attribute", "r1 remove attribute $ r12", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["$ r0 = org springframework test context transaction test transaction require current transaction context", "$ r0 end transaction", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = new java lang assertion error", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = $ r4 append r0", "$ r6 = $ r5 append \\ `` expect < \\ ``", "$ r7 = $ r6 append r1", "$ r8 = $ r7 append \\ `` > but be < \\ ``", "$ r9 = $ r8 append r2", "$ r10 = $ r9 append \\ `` > \\ ``", "$ r11 = $ r10 to string", "specialinvoke $ r3 < init > $ r11", "throw $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r12 = org springframework test util xpath expectation helper r0", "$ r5 = r12 evaluate xpath r1 r2 class \\ `` ljava lang double \\ ``", "r4 = java lang double $ r5", "r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r7 = r11 append \\ `` x path \\ ``", "r13 = org springframework test util xpath expectation helper r0", "$ r8 = r13 expression", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 to string", "org springframework test util assertion error assert equal $ r10 r3 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = org springframework test util xpath expectation helper r0", "r4 = r7 parse xml byte array r1 r2", "r8 = org springframework test util xpath expectation helper r0", "$ r5 = specialinvoke r8 to q name r3", "r9 = org springframework test util xpath expectation helper r0", "$ r6 = r9 evaluate xpath r4 $ r5 r3", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r17 = new java lang string builder", "specialinvoke r17 < init >", "r18 = org springframework test web client abstract request expectation manager r0", "$ r5 = r18 request", "$ i0 = $ r5 size", "$ r6 = r17 append $ i0", "$ r6 append \\ `` request s executed\\ ``", "r19 = org springframework test web client abstract request expectation manager r0", "$ r8 = r19 request", "$ z0 = $ r8 be empty", "if $ z0 ! = 0 goto label3", "r17 append \\ `` \\n\\ ``", "r20 = org springframework test web client abstract request expectation manager r0", "$ r12 = r20 request", "r2 = $ r12 iterator", "label $ z1 = r2 have next", "if $ z1 == 0 goto label2", "$ r13 = r2 next", "r3 = org springframework http client client http request $ r13", "$ r14 = r3 to string", "$ r15 = r17 append $ r14", "$ r15 append \\ `` \\n\\ ``", "goto label1", "if $ z1 == 0 goto label2", "label goto label4", "label $ r10 = r17 to string", "return $ r10", "if $ z0 ! = 0 goto label3", "label r17 append \\ `` \\n\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [], [29], []]}
{"nodes": ["r0 = @ this", "r2 = new org springframework test web client match json path request matcher $ 13", "r3 = org springframework test web client match json path request matcher r0", "specialinvoke r2 < init > r3", "r4 = org springframework test web client request matcher r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework test web client match xpath request matcher r0", "$ r1 = xpath request matcher $ lambda_exists_1__7 bootstrap $ r2", "r3 = org springframework test web client request matcher $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework test web client match xpath request matcher r0", "$ r2 = xpath request matcher $ lambda_boolean value_9__3 bootstrap $ r3 r1", "r4 = org springframework test web client request matcher $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = org springframework test web reactive server exchange result r0", "$ r2 = r5 request body", "r6 = org springframework test web reactive server exchange result r0", "$ r1 = r6 timeout", "$ r3 = $ r2 block $ r1", "$ r4 = byte [ ] $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework test web reactive server exchange result r0", "$ r1 = r2 response", "$ i0 = $ r1 get raw status code", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org springframework test web reactive server exchange result r0", "$ r2 = r5 response body", "r6 = org springframework test web reactive server exchange result r0", "$ r1 = r6 timeout", "$ r3 = $ r2 block $ r1", "$ r4 = byte [ ] $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not empty r1 \\ `` \\'media types\\ ' must not be empty\\ ``", "r4 = org springframework test web servlet request mock http servlet request builder r0", "$ r2 = r4 header", "$ r3 = java lang string join \\", "$ r2 set \\ `` accept\\", "r5 = org springframework test web servlet request mock http servlet request builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org springframework test web servlet request mock http servlet request builder r0", "r6 param r1 r2", "r7 = org springframework test web servlet request mock http servlet request builder r0", "$ r4 = r7 query params", "$ r5 = java util array a list r2", "$ r4 add all r1 $ r5", "r8 = org springframework test web servlet request mock http servlet request builder r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework test web servlet request mock http servlet request builder r0", "$ r2 = r4 locales", "$ r2 clear", "if r1 == null goto label1", "r5 = org springframework test web servlet request mock http servlet request builder r0", "$ r3 = r5 locales", "$ r3 add r1", "label r6 = org springframework test web servlet request mock http servlet request builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "$ r2 = cookie result matcher $ lambda_version_13__14 bootstrap $ r1 i0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = handler result matcher $ lambda_method name_3__3 bootstrap $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework test web servlet result json path result matcher r0", "$ r1 = json path result matcher $ lambda_exists_3__1 bootstrap $ r2", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = mock mvc result matcher $ lambda_redirected url_2__2 bootstrap $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org springframework test web servlet result json path result matcher", "specialinvoke $ r2 < init > r0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = org springframework test web servlet result print result handler r0", "$ r5 = r6 printer", "$ r5 print value \\ `` type\\", "goto label2", "label return", "if r1 ! = null goto label1", "label r7 = org springframework test web servlet result print result handler r0", "$ r2 = r7 printer", "$ r3 = r1 get class", "$ r4 = $ r3 get name", "$ r2 print value \\ `` type\\"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org springframework util object utils be empty r1", "if $ z0 == 0 goto label1", "r4 = org springframework test web servlet result print result handler r0", "$ r3 = r4 printer", "$ r3 print value \\ `` attributes\\", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r5 = org springframework test web servlet result print result handler r0", "$ r2 = printing result handler $ lambda_print flash map_2__1 bootstrap $ r5", "r1 for each $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r5 = new org springframework mock http server reactive mock server http request $ default body builder", "$ r4 = org springframework mock http server reactive mock server http request to uri r1 r2", "specialinvoke r5 < init > r0 $ r4", "r6 = org springframework mock http server reactive mock server http request $ body builder r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org springframework test web reactive server cookie assertion r0", "$ r4 = specialinvoke r8 get cookie r1", "r3 = $ r4 get value", "r9 = org springframework test web reactive server cookie assertion r0", "$ r5 = r9 exchange result", "$ r6 = cookie assertion $ lambda_value_2__9 bootstrap $ r2 r3", "$ r5 assert with diagnostics $ r6", "r10 = org springframework test web reactive server cookie assertion r0", "$ r7 = r10 response spec", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework test web reactive server exchange result r0", "$ r1 = r2 mock server result", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = new org springframework http cache control", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["l0 = @ parameter0", "r0 = @ parameter1", "$ l1 = r0 to second l0", "$ r1 = java time duration of second $ l1", "$ r2 = org springframework http cache control max age $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "$ l1 = r1 to second l0", "$ r2 = java time duration of second $ l1", "r4 = org springframework http cache control r0", "$ r3 = r4 s max age $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework http client netty4 client http request factory r0", "r1 read timeout = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = r1 get header", "r2 = $ r3 get content type", "if r2 == null goto label1", "$ r4 = r2", "goto label2", "label return $ r4", "if r2 == null goto label1", "label $ r4 = org springframework http medium type application_octet_stream"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework http codec json jackson2 codec support r0", "$ r1 = r2 mime type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` charset must not be null\\ ``", "r2 = org springframework http codec multipart multipart http message writer r0", "r2 charset = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org springframework http codec server send event http message reader r0", "$ r1 = r2 line decoder", "$ r1 set max in memory size i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework http converter json jackson2 object mapper builder r0", "r1 find module via service loader = z0", "r2 = org springframework http converter json jackson2 object mapper builder r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework http http status r0", "$ r1 = r3 series", "$ r2 = org springframework http http status $ series informational", "if $ r1 ! = $ r2 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 ! = $ r2 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org springframework http medium type", "if $ z0 == 0 goto label1", "$ r5 = org springframework http medium type r0", "return $ r5", "if $ z0 == 0 goto label1", "label $ r1 = new org springframework http medium type", "$ r2 = r0 get type", "$ r3 = r0 get subtype", "$ r4 = r0 get parameter", "specialinvoke $ r1 < init > $ r2 $ r3 $ r4", "return $ r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org springframework http http method head", "$ r2 = org springframework http request entity method $ r1 r0", "r3 = org springframework http request entity $ header builder $ r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org springframework http http method option", "$ r2 = org springframework http request entity method $ r1 r0", "r3 = org springframework http request entity $ header builder $ r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "r2 = new org springframework http response entity $ default builder", "$ r1 = java lang integer value of i0", "specialinvoke r2 < init > $ r1", "r3 = org springframework http response entity $ body builder r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r2 = org springframework http server reactive abstract listener read publisher r read logger", "r10 = new java lang string builder", "specialinvoke r10 < init >", "r11 = org springframework http server reactive abstract listener read publisher r0", "$ r3 = r11 get log prefix", "$ r4 = r10 append $ r3", "$ r5 = $ r4 append \\ `` on all data read\\ ``", "$ r6 = $ r5 to string", "$ r2 trace $ r6", "r12 = org springframework http server reactive abstract listener read publisher r0", "$ r7 = r12 state", "$ r8 = $ r7 get", "$ r9 = org springframework http server reactive abstract listener read publisher $ state $ r8", "r13 = org springframework http server reactive abstract listener read publisher r0", "$ r9 on all data read r13", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework http server reactive abstract listener write processor r0", "$ r1 = r2 log prefix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org springframework http server reactive abstract server http response r0", "$ r2 = r5 state", "$ r3 = $ r2 get", "$ r4 = org springframework http server reactive abstract server http response $ state commit", "if $ r3 == $ r4 goto label1", "r6 = org springframework http server reactive abstract server http response r0", "r6 status code = r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < = 0 goto label1", "$ z0 = 1", "goto label2", "label org springframework util assert be true $ z0 \\ `` buffer size must be large than zero\\ ``", "r1 = org springframework http server reactive servlet http handler adapter r0", "r1 buffer size = i0", "return", "if i0 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework http server reactive servlet http handler adapter r0", "$ r1 = r2 servlet path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org springframework remoting caucho hessian client interceptor r0", "$ r1 = r2 proxy factory", "$ r1 set hessian2 reply z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "label r14 = org springframework remoting caucho hessian client interceptor r0", "$ r2 = r14 proxy factory", "r15 = org springframework remoting caucho hessian client interceptor r0", "$ r3 = r15 create hessian proxy $ r2", "r16 = org springframework remoting caucho hessian client interceptor r0", "r16 hessian proxy = $ r3", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` \\'content type\\ ' must not be null\\ ``", "r2 = org springframework remoting httpinvoker abstract http invoker request executor r0", "r2 content type = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r2 write object r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework remoting jaxws abstract jax w service exporter r0", "r2 endpoint feature = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework remoting jaxws jax w port client interceptor r0", "r2 endpoint address = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework remoting jaxws jax w port client interceptor r0", "r1 lookup service on startup = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework remoting jaxws simple http server jax w service exporter r0", "r2 base path = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web accept content negotiation manager factory bean r0", "r1 ignore accept header = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org springframework web accept map medium type file extension resolver r0", "$ r3 = r7 medium type", "$ r2 = java util locale english", "$ r4 = r1 to low case $ r2", "$ r5 = $ r3 get $ r4", "$ r6 = org springframework http medium type $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web bind miss request header exception r0", "$ r1 = r2 header name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web bind support configurable web bind initializer r0", "r1 direct field access = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework web bind support configurable web bind initializer r0", "$ z0 = r1 direct field access", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web bind support configurable web bind initializer r0", "$ r1 = r2 property editor registrars", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r3 = r1", "goto label2", "label r4 = org springframework web bind support default session attribute store r0", "r4 attribute name prefix = $ r3", "return", "if r1 == null goto label1", "label $ r3 = \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org springframework web bind support web exchange data binder r0", "$ r2 = r6 get value to bind r1", "r7 = org springframework web bind support web exchange data binder r0", "$ r3 = web exchange data binder $ lambda_bind_0__3 bootstrap $ r7", "$ r4 = $ r2 do on next $ r3", "$ r5 = $ r4 then", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r5 = org springframework web client message body client http response wrapper r0", "$ i0 = r5 get raw status code", "r1 = org springframework http http status resolve $ i0", "if r1 == null goto label2", "$ z0 = r1 is1xx informational", "if $ z0 ! = 0 goto label1", "$ r3 = org springframework http http status no_content", "if r1 == $ r3 goto label1", "$ r4 = org springframework http http status not_modified", "if r1 ! = $ r4 goto label2", "label return 0", "if r1 ! = $ r4 goto label2", "label r6 = org springframework web client message body client http response wrapper r0", "$ r2 = r6 get header", "$ l1 = $ r2 get content length", "$ b2 = $ l1 cmp 0l", "if $ b2 ! = 0 goto label3", "return 0", "if $ b2 ! = 0 goto label3", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web client rest client response exception r0", "$ r1 = r2 status text", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web client unknown content type exception r0", "$ r1 = r2 target type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r1 log \\ `` close spring root web application context\\ ``", "label r21 = org springframework web context context loader r0", "$ r5 = r21 context", "$ z0 = $ r5 instanceof org springframework web context configurable web application context", "if $ z0 == 0 goto label2", "r22 = org springframework web context context loader r0", "$ r11 = r22 context", "$ r12 = org springframework web context configurable web application context $ r11", "$ r12 close", "label $ r6 = java lang thread current thread", "r2 = $ r6 get context class loader", "$ r7 = class \\ `` lorg springframework web context context loader \\ ``", "$ r8 = $ r7 get class loader", "if r2 ! = $ r8 goto label3", "org springframework web context context loader current context = null", "goto label4", "label $ r19 = org springframework web context web application context root_web_application_context_attribute", "r1 remove attribute $ r19", "goto label8", "label return", "if r2 ! = $ r8 goto label3", "label if r2 == null goto label4", "$ r9 = org springframework web context context loader current context per thread", "$ r9 remove r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get servlet context", "r4 = org springframework web context context loader listener r0", "r4 close web application context $ r2", "$ r3 = r1 get servlet context", "org springframework web context context cleanup listener cleanup attribute $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "org springframework util assert not null r1 \\ `` name must not be null\\ ``", "org springframework util assert not null r2 \\ `` callback must not be null\\ ``", "r9 = org springframework web context request abstract request attribute r0", "$ r5 = r9 request destruction callback", "entermonitor $ r5", "label r10 = org springframework web context request abstract request attribute r0", "$ r6 = r10 request destruction callback", "$ r6 put r1 r2", "exitmonitor $ r5", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web context request async web async manager r0", "r2 task executor = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework web context request async web async manager r0", "$ r1 = r3 async web request", "if $ r1 == null goto label1", "r4 = org springframework web context request async web async manager r0", "$ r2 = r4 async web request", "$ z0 = $ r2 be async start", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "org springframework util assert not null r1 \\ `` callable must not be null\\ ``", "r4 = new org springframework web context request async web async task", "specialinvoke r4 < init > r1", "r5 = org springframework web context request async web async manager r0", "r5 start callable processing r4 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web context request async web async task r0", "r2 error callback = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "if r0 ! = null goto label1", "org springframework web context request request context holder reset request attribute", "goto label3", "label return", "if r0 ! = null goto label1", "label if z0 == 0 goto label2", "$ r3 = org springframework web context request request context holder inheritable request attribute holder", "$ r3 set r0", "$ r4 = org springframework web context request request context holder request attribute holder", "$ r4 remove", "label if z0 == 0 goto label2", "label $ r1 = org springframework web context request request context holder request attribute holder", "$ r1 set r0", "$ r2 = org springframework web context request request context holder inheritable request attribute holder", "$ r2 remove"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r11 = org springframework web context support groovy web application context r0", "$ r1 = r11 get namespace", "if $ r1 == null goto label1", "$ r3 = newarray java lang string [ 1 ]", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r5 = r10 append \\ `` web-inf \\ ``", "r12 = org springframework web context support groovy web application context r0", "$ r6 = r12 get namespace", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append \\ `` groovy\\ ``", "$ r9 = $ r8 to string", "$ r3 [ 0 ] = $ r9", "return $ r3", "if $ r1 == null goto label1", "label $ r2 = newarray java lang string [ 1 ]", "$ r2 [ 0 ] = \\ `` web-inf application context groovy\\ ``", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r3 = r12 append \\ `` session= [ \\ ``", "r13 = org springframework web context support request handle event r0", "$ r4 = r13 session id", "$ r5 = $ r3 append $ r4", "$ r5 append \\ `` ] \\ ``", "$ r7 = r12 append \\ `` user= [ \\ ``", "r14 = org springframework web context support request handle event r0", "$ r8 = r14 user name", "$ r9 = $ r7 append $ r8", "$ r9 append \\ `` ] \\ ``", "$ r11 = r12 to string", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web context support servlet request handle event r0", "$ r1 = r2 client address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "org springframework web context support web application context utils register web application scope r0 null", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org springframework web context support web application context utils register environment bean r0 r1 null", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r19 = org springframework web cors cors configuration r0", "return r19", "if r1 ! = null goto label1", "label r18 = new org springframework web cors cors configuration", "r20 = org springframework web cors cors configuration r0", "specialinvoke r18 < init > r20", "r21 = org springframework web cors cors configuration r0", "$ r6 = r21 get allow origin", "$ r7 = r1 get allow origin", "r22 = org springframework web cors cors configuration r0", "$ r8 = specialinvoke r22 combine $ r6 $ r7", "r18 set allow origin $ r8", "r23 = org springframework web cors cors configuration r0", "$ r9 = r23 get allow method", "$ r10 = r1 get allow method", "r24 = org springframework web cors cors configuration r0", "$ r11 = specialinvoke r24 combine $ r9 $ r10", "r18 set allow method $ r11", "r25 = org springframework web cors cors configuration r0", "$ r12 = r25 get allow header", "$ r13 = r1 get allow header", "r26 = org springframework web cors cors configuration r0", "$ r14 = specialinvoke r26 combine $ r12 $ r13", "r18 set allow header $ r14", "r27 = org springframework web cors cors configuration r0", "$ r15 = r27 get expose header", "$ r16 = r1 get expose header", "r28 = org springframework web cors cors configuration r0", "$ r17 = specialinvoke r28 combine $ r15 $ r16", "r18 set expose header $ r17", "r3 = r1 get allow credential", "if r3 == null goto label2", "r18 set allow credential r3", "label r4 = r1 get max age", "if r4 == null goto label3", "r18 set max age r4", "label return r18"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org springframework util string utils have text r1", "if $ z0 ! = 0 goto label1", "return null", "if $ z0 ! = 0 goto label1", "label r10 = org springframework web cors cors configuration r0", "$ r4 = r10 allow origin", "$ z1 = org springframework util object utils be empty $ r4", "if $ z1 == 0 goto label2", "label r11 = org springframework web cors cors configuration r0", "$ r5 = r11 allow origin", "$ z2 = $ r5 contain \\ `` * \\ ``", "if $ z2 == 0 goto label4", "r12 = org springframework web cors cors configuration r0", "$ r9 = r12 allow credential", "$ r8 = java lang boolean true", "if $ r9 == $ r8 goto label3", "return \\ `` * \\ ``", "if $ r9 == $ r8 goto label3", "label return r1", "if $ z2 == 0 goto label4", "label r13 = org springframework web cors cors configuration r0", "$ r6 = r13 allow origin", "r2 = $ r6 iterator", "label $ z3 = r2 have next", "if $ z3 == 0 goto label7", "$ r7 = r2 next", "r3 = java lang string $ r7", "$ z4 = r1 equal ignore case r3", "if $ z4 == 0 goto label6", "return r1", "if $ z4 == 0 goto label6", "label goto label5", "if $ z3 == 0 goto label7", "label return null"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web filter abstract request log filter r0", "r1 include client info = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework web filter abstract request log filter r0", "$ z0 = r1 include header", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework web filter abstract request log filter r0", "$ i0 = r1 max payload length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert have text r1 \\ `` \\'method param name\\ ' must not be empty\\ ``", "r2 = org springframework web filter reactive hidden http method filter r0", "r2 method param name = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org springframework web method annotation model attribute method processor r0", "$ z0 = r3 be bind exception require r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web method handler method r0", "$ r1 = r2 response status", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web method support model and view container r0", "$ r1 = r2 default model", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web method support model and view container r0", "r2 redirect model = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r13 = org springframework web multipart common common multipart file r0", "$ r1 = r13 file item", "$ z0 = $ r1 be in memory", "if $ z0 == 0 goto label1", "return \\ `` in memory\\ ``", "if $ z0 == 0 goto label1", "label r14 = org springframework web multipart common common multipart file r0", "$ r2 = r14 file item", "$ z1 = $ r2 instanceof org apache common fileupload disk disk file item", "if $ z1 == 0 goto label2", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r4 = r12 append \\ `` at [ \\ ``", "r15 = org springframework web multipart common common multipart file r0", "$ r5 = r15 file item", "$ r6 = org apache common fileupload disk disk file item $ r5", "$ r7 = $ r6 get store location", "$ r8 = $ r7 get absolute path", "$ r9 = $ r4 append $ r8", "$ r10 = $ r9 append \\ `` ] \\ ``", "$ r11 = $ r10 to string", "return $ r11", "if $ z1 == 0 goto label2", "label return \\ `` on disk\\ ``"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], []]}
{"nodes": ["r0 = @ this", "r15 = org springframework web multipart support multipart filter r0", "$ r3 = r15 get servlet context", "r1 = org springframework web context support web application context utils get web application context $ r3", "r16 = org springframework web multipart support multipart filter r0", "r2 = r16 get multipart resolver bean name", "if r1 == null goto label2", "$ z0 = r1 contains bean r2", "if $ z0 == 0 goto label2", "r17 = org springframework web multipart support multipart filter r0", "$ r5 = r17 logger", "$ z1 = $ r5 be debug enabled", "if $ z1 == 0 goto label1", "r18 = org springframework web multipart support multipart filter r0", "$ r9 = r18 logger", "r14 = new java lang string builder", "specialinvoke r14 < init >", "$ r10 = r14 append \\ `` use multipart resolver \\'\\ ``", "$ r11 = $ r10 append r2", "$ r12 = $ r11 append \\ `` \\ ' for multipart filter\\ ``", "$ r13 = $ r12 to string", "$ r9 debug $ r13", "label $ r6 = r1 get bean r2 class \\ `` lorg springframework web multipart multipart resolver \\ ``", "$ r7 = org springframework web multipart multipart resolver $ r6", "return $ r7", "if $ z0 == 0 goto label2", "label r19 = org springframework web multipart support multipart filter r0", "$ r4 = r19 default multipart resolver", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r15 = org springframework web multipart support multipart filter r0", "$ r3 = r15 get servlet context", "r1 = org springframework web context support web application context utils get web application context $ r3", "r16 = org springframework web multipart support multipart filter r0", "r2 = r16 get multipart resolver bean name", "if r1 == null goto label2", "$ z0 = r1 contains bean r2", "if $ z0 == 0 goto label2", "r17 = org springframework web multipart support multipart filter r0", "$ r5 = r17 logger", "$ z1 = $ r5 be debug enabled", "if $ z1 == 0 goto label1", "r18 = org springframework web multipart support multipart filter r0", "$ r9 = r18 logger", "r14 = new java lang string builder", "specialinvoke r14 < init >", "$ r10 = r14 append \\ `` use multipart resolver \\'\\ ``", "$ r11 = $ r10 append r2", "$ r12 = $ r11 append \\ `` \\ ' for multipart filter\\ ``", "$ r13 = $ r12 to string", "$ r9 debug $ r13", "label $ r6 = r1 get bean r2 class \\ `` lorg springframework web multipart multipart resolver \\ ``", "$ r7 = org springframework web multipart multipart resolver $ r6", "return $ r7", "if $ z0 == 0 goto label2", "label r19 = org springframework web multipart support multipart filter r0", "$ r4 = r19 default multipart resolver", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework web server adapter web http handler builder r0", "$ r2 = r3 filter", "r1 accept $ r2", "r4 = org springframework web server adapter web http handler builder r0", "specialinvoke r4 update filter", "r5 = org springframework web server adapter web http handler builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache common log log factory get log r1", "r3 = org springframework web server handler response status exception handler r0", "r3 warn logger = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web server medium type not support status exception r0", "$ r1 = r2 support medium type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web server server error exception r0", "$ r1 = r2 parameter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web server session cookie web session id resolver r0", "$ r1 = r2 cookie max age", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web server session header web session id resolver r0", "$ r1 = r2 header name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web server unsupported medium type status exception r0", "$ r1 = r2 content type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web util cookie generator r0", "$ r1 = r2 cookie max age", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework web util default uri template handler r0", "$ z0 = r1 strict encode", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org springframework web util html character entity decoder", "$ r2 = org springframework web util html utils character entity reference", "specialinvoke $ r1 < init > $ r2 r0", "$ r3 = $ r1 decode", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web util pattern path element r0", "$ r1 = r2 next", "if $ r1 ! = null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 ! = null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = java nio charset charset for name r1", "$ r3 = org springframework util string utils uri decode r0 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i6 = r0 index of 63", "i0 = r0 index of 35", "if i0 == -1 goto label2", "if i6 == -1 goto label1", "if i0 > = i6 goto label2", "label i6 = i0", "label if i6 ! = -1 goto label3", "i6 = r0 length", "label $ i4 = r0 last index of 47 i6", "i1 = $ i4 + 1", "i2 = r0 index of 59 i1", "if i2 == -1 goto label4", "if i2 > = i6 goto label4", "$ i7 = i2", "goto label5", "label i3 = r0 last index of 46 $ i7", "if i3 == -1 goto label6", "if i3 < = i1 goto label6", "$ i5 = i3 + 1", "$ r1 = r0 substring $ i5 $ i7", "return $ r1", "if i3 < = i1 goto label6", "label return null", "if i2 > = i6 goto label4", "label $ i7 = i6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web util url path helper r0", "r1 remove semicolon content = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework web util url path helper r0", "$ z0 = r3 remove semicolon content", "if $ z0 == 0 goto label1", "r4 = org springframework web util url path helper r0", "$ r2 = specialinvoke r4 remove semicolon content internal r1", "goto label2", "label return $ r2", "if $ z0 == 0 goto label1", "label r5 = org springframework web util url path helper r0", "$ r2 = specialinvoke r5 remove jsessionid r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org springframework util assert not null r0 \\ `` request must not be null\\ ``", "r2 = r0 get cooky", "if r2 == null goto label3", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label3", "r4 = r2 [ i1 ]", "$ r5 = r4 get name", "$ z0 = r1 equal $ r5", "if $ z0 == 0 goto label2", "return r4", "if $ z0 == 0 goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org springframework util assert not null r0 \\ `` request must not be null\\ ``", "org springframework util assert not null r1 \\ `` allowed origin must not be null\\ ``", "$ r3 = r0 get header", "r2 = $ r3 get origin", "if r2 == null goto label1", "$ z0 = r1 contain \\ `` * \\ ``", "if $ z0 == 0 goto label2", "label return 1", "if $ z0 == 0 goto label2", "label $ z1 = org springframework util collection utils be empty r1", "if $ z1 == 0 goto label3", "$ z3 = org springframework web util web utils be same origin r0", "return $ z3", "if $ z1 == 0 goto label3", "label $ z2 = r1 contain r2", "return $ z2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` file storage directory must not be null\\ ``", "$ r2 = org springframework http codec multipart file storage from path r1", "r3 = org springframework http codec multipart default part http message reader r0", "r3 file storage = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = org springframework http codec support base default codecs r0", "$ r1 = r5 type writer", "$ r1 clear", "r6 = org springframework http codec support base default codecs r0", "$ z0 = r6 register default", "if $ z0 ! = 0 goto label1", "return", "if $ z0 ! = 0 goto label1", "label r7 = org springframework http codec support base default codecs r0", "$ r2 = r7 type writer", "r8 = org springframework http codec support base default codecs r0", "$ r3 = r8 get base type writer", "$ r2 add all $ r3", "r9 = org springframework http codec support base default codecs r0", "$ r4 = r9 type writer", "r10 = org springframework http codec support base default codecs r0", "r10 extend type writer $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r3 = r1 get charset", "if $ r3 == null goto label1", "$ r4 = r1 get charset", "return $ r4", "if $ r3 == null goto label1", "label $ r2 = java nio charset standard charsets utf_8", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` the provided resource transformer should not be null\\ ``", "r3 = org springframework web reactive config resource chain registration r0", "$ r2 = r3 transformer", "$ r2 add r1", "$ z1 = r1 instanceof org springframework web reactive resource cs link resource transformer", "if $ z1 == 0 goto label1", "r4 = org springframework web reactive config resource chain registration r0", "r4 have css link transformer = 1", "label r5 = org springframework web reactive config resource chain registration r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r10 = org springframework web reactive config view resolver registry r0", "$ z0 = specialinvoke r10 check bean of type class \\ `` lorg springframework web reactive result view script script template configurer \\ ``", "if $ z0 ! = 0 goto label1", "r8 = new org springframework bean factory bean initialization exception", "specialinvoke r8 < init > \\ `` in addition to a script template view resolver there must also be a single script template config bean in this web application context or it parent script template configurer be the usual implementation this bean may be give any name \\ ``", "r11 = java lang throwable r8", "throw r11", "if $ z0 ! = 0 goto label1", "label r9 = new org springframework web reactive config view resolver registry $ script registration", "specialinvoke r9 < init >", "r2 = r9 get view resolver", "r12 = org springframework web reactive config view resolver registry r0", "$ r4 = r12 application context", "if $ r4 == null goto label2", "r13 = org springframework web reactive config view resolver registry r0", "$ r6 = r13 application context", "r2 set application context $ r6", "label r14 = org springframework web reactive config view resolver registry r0", "$ r5 = r14 view resolvers", "$ r5 add r2", "r15 = org springframework web reactive config url base view resolver registration r9", "return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org springframework http http header encode basic auth r0 r1 null", "$ r3 = exchange filter function $ lambda_basic authentication_5__7 bootstrap $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web reactive function client web client request exception r0", "$ r1 = r2 method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web reactive function client web client request exception r0", "$ r1 = r2 uri", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web reactive function client web client request exception r0", "$ r1 = r2 header", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org springframework web reactive handler abstract handler mapping r0", "$ r1 = r2 pattern parser", "$ r1 set case sensitive z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web reactive handler result r0", "$ r1 = r2 return type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web reactive handler result r0", "$ r1 = r2 exception handler", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not empty r1 \\ `` at least one content cod expected\\ ``", "r4 = org springframework web reactive resource encode resource resolver r0", "$ r2 = r4 content coding", "$ r2 clear", "r5 = org springframework web reactive resource encode resource resolver r0", "$ r3 = r5 content coding", "$ r3 add all r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org springframework web reactive resource content version strategy", "specialinvoke r4 < init >", "r5 = org springframework web reactive resource version resource resolver r0", "r6 = org springframework web reactive resource version strategy r4", "r5 add version strategy r6 r1", "r7 = org springframework web reactive resource version resource resolver r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org springframework web reactive result condition composite request condition r1", "r4 = org springframework web reactive result condition composite request condition r0", "$ r3 = r4 combine $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework web reactive result condition composite request condition r0", "$ r2 = r3 get matching condition r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org springframework web reactive result condition composite request condition r1", "r4 = org springframework web reactive result condition composite request condition r0", "$ i0 = r4 compare to $ r3 r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = new java util link hash set", "r4 = org springframework web reactive result condition consumes request condition r0", "$ r2 = r4 expression", "specialinvoke r3 < init > $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = org springframework web reactive result method abstract handler method map r0", "$ r4 = r13 map registry", "$ r4 acquire read lock", "label r14 = org springframework web reactive result method abstract handler method map r0", "r10 = r14 lookup handler method r1", "label goto label5", "label if r10 == null goto label6", "r10 = r10 create with resolved bean", "label r12 = reactor core publisher mono just or empty r10", "label r16 = org springframework web reactive result method abstract handler method map r0", "$ r5 = r16 map registry", "$ r5 release read lock", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org springframework web reactive result method request map info r1", "r4 = org springframework web reactive result method request map info r0", "$ i0 = r4 compare to $ r3 r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web reactive result view abstract view r0", "$ r1 = r2 default charset", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web reactive result view bind status r0", "$ r1 = r2 actual value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web reactive result view redirect view r0", "r1 propagate query = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web reactive socket handshake info r0", "$ r1 = r2 log prefix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web reactive socket server support handshake web socket service r0", "$ r1 = r2 session attribute predicate", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web reactive socket web socket message r0", "$ r1 = r2 payload", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util array a list r1", "r4 = org springframework web servlet config annotation interceptor registration r0", "$ r3 = r4 exclude path pattern $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework web servlet config annotation interceptor registration r0", "$ i0 = r1 order", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = org springframework web servlet config annotation interceptor registry r0", "$ r1 = r10 registration", "$ r2 = $ r1 stream", "$ r3 = org springframework web servlet config annotation interceptor registry interceptor_order_comparator", "$ r4 = $ r2 sort $ r3", "$ r5 = interceptor registry $ get interceptor__1 bootstrap $", "$ r6 = $ r4 map $ r5", "$ r7 = java util stream collector to list", "$ r8 = $ r6 collect $ r7", "$ r9 = java util list $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new org springframework web servlet config annotation view controller registration", "specialinvoke r6 < init > r1", "r7 = org springframework web servlet config annotation view controller registry r0", "$ r4 = r7 application context", "r6 set application context $ r4", "r8 = org springframework web servlet config annotation view controller registry r0", "$ r5 = r8 registration", "$ r5 add r6", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = r1 get autowire capable bean factory", "$ r4 = $ r3 create bean r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet framework servlet r0", "r2 context class = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web servlet framework servlet r0", "$ r1 = r2 context id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web servlet framework servlet r0", "r1 dispatch trace request = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet handler abstract handler exception resolver r0", "r2 map handler = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web servlet handler abstract handler method map r0", "r1 detect handler method in ancestor context = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework web servlet handler abstract handler method map r0", "r1 init handler method", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = new java util array list", "specialinvoke r9 < init >", "$ z0 = r1 start with \\ `` \\ ``", "if $ z0 == 0 goto label1", "r9 add r1", "label r10 = org springframework web servlet handler bean name url handler mapping r0", "$ r7 = r10 obtain application context", "r3 = $ r7 get alias r1", "i0 = lengthof r3", "i1 = 0", "label if i1 > = i0 goto label4", "r5 = r3 [ i1 ]", "$ z1 = r5 start with \\ `` \\ ``", "if $ z1 == 0 goto label3", "r9 add r5", "label i1 = i1 + 1", "goto label2", "label if i1 > = i0 goto label4", "label $ r8 = org springframework util string utils to string array r9", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet handler simple mapping exception resolver r0", "r2 exception mapping = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 property name", "label $ z0 = r2 have more element", "if $ z0 == 0 goto label2", "$ r5 = r2 next element", "r3 = java lang string $ r5", "$ r6 = r1 get property r3", "r4 = java lang integer value of $ r6", "r9 = org springframework web servlet handler simple mapping exception resolver r0", "$ r7 = r9 status code", "$ r7 put r3 r4", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org springframework web servlet dispatcher servlet r0", "$ r5 = r8 handler mapping", "if $ r5 == null goto label3", "r9 = org springframework web servlet dispatcher servlet r0", "$ r6 = r9 handler mapping", "r2 = $ r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r7 = r2 next", "r3 = org springframework web servlet handler map $ r7", "r4 = r3 get handler r1", "if r4 == null goto label2", "return r4", "if r4 == null goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web servlet i18n cookie locale resolver r0", "r1 language tag compliant = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework web servlet i18n locale change interceptor r0", "$ z0 = r1 ignore invalid locale", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org springframework web servlet mvc abstract url view controller r0", "$ r1 = r2 url path helper", "$ r1 set url decode z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = r2 get parameter type", "if $ r3 ! = class \\ `` ljava util optional \\ `` goto label4", "if r1 == null goto label2", "$ z0 = r1 instanceof java util collection", "if $ z0 == 0 goto label1", "$ r7 = java util collection r1", "$ z2 = $ r7 be empty", "if $ z2 ! = 0 goto label2", "label $ z1 = r1 instanceof java lang object [ ]", "if $ z1 == 0 goto label3", "$ r5 = java lang object [ ] r1", "$ r6 = java lang object [ ] $ r5", "$ i0 = lengthof $ r6", "if $ i0 ! = 0 goto label3", "label $ r8 = java util optional empty", "return $ r8", "if $ i0 ! = 0 goto label3", "label $ r4 = java util optional of r1", "return $ r4", "if $ r3 ! = class \\ `` ljava util optional \\ `` goto label4", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework web servlet mvc method annotation exception handler exception resolver r0", "$ r2 = r4 response body advice", "$ r2 clear", "if r1 == null goto label1", "r5 = org springframework web servlet mvc method annotation exception handler exception resolver r0", "$ r3 = r5 response body advice", "$ r3 add all r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web servlet mvc method annotation request map handler adapter r0", "$ r1 = r2 reactive adapter registry", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework web servlet mvc method annotation response body emitter r0", "$ r2 = r3 timeout callback", "$ r2 set delegate r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet mvc method annotation sse emitter r0", "r2 send r1 null", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = org springframework web servlet mvc method request map info r1", "r5 = org springframework web servlet mvc method request map info handler mapping r0", "r5 handle match $ r4 r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web servlet support request context r0", "$ r1 = r2 web application context", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ z0 = org springframework web servlet support jsp aware request context jstl present", "if $ z0 == 0 goto label1", "r3 = org springframework web servlet support jsp aware request context r0", "$ r2 = r3 get page context", "r1 = org springframework web servlet support jsp aware request context $ jstl page locale resolver get jstl time zone $ r2", "if r1 == null goto label1", "return r1", "if r1 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r14 = org springframework web servlet support request context r0", "$ r2 = r14 url path helper", "r15 = org springframework web servlet support request context r0", "$ r1 = r15 request", "r12 = $ r2 get originate context path $ r1", "r16 = org springframework web servlet support request context r0", "$ r4 = r16 url path helper", "r17 = org springframework web servlet support request context r0", "$ r3 = r17 request", "$ r5 = $ r4 get path within servlet map $ r3", "$ z0 = org springframework util string utils have text $ r5", "if $ z0 == 0 goto label1", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r7 = r13 append r12", "r18 = org springframework web servlet support request context r0", "$ r9 = r18 url path helper", "r19 = org springframework web servlet support request context r0", "$ r8 = r19 request", "$ r10 = $ r9 get originate servlet path $ r8", "$ r11 = $ r7 append $ r10", "r12 = $ r11 to string", "label return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get servlet context", "$ r2 = org springframework web servlet support request context utils find web application context r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org springframework web servlet support request context utils get locale resolver r0", "if r1 == null goto label1", "$ r2 = r1 resolve locale r0", "goto label2", "label return $ r2", "if r1 == null goto label1", "label $ r2 = r0 get locale"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework web servlet support web content generator r0", "$ z0 = r1 use cache control header", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web servlet tag bind tag r0", "$ r1 = r2 path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web servlet tag form abstract multi check element tag r0", "$ r1 = r2 delimiter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet tag form error tag r0", "r2 delimiter = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web servlet tag form form tag r0", "$ r1 = r2 model attribute", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet tags message tag r0", "r2 message = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet tags message tag r0", "r2 argument = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet tags message tag r0", "r2 scope = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org springframework web servlet tags message tag r0", "$ r2 = r5 page context", "$ r3 = $ r2 get out", "$ r4 = java lang string value of r1", "$ r3 write $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet tag transform tag r0", "r2 value = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 start with \\ `` \\ ``", "if $ z0 == 0 goto label1", "r7 = org springframework web servlet tag url tag r0", "r7 context = r1", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r6 = new java lang string builder", "specialinvoke r6 < init >", "$ r3 = r6 append \\ `` \\ ``", "$ r4 = $ r3 append r1", "$ r5 = $ r4 to string", "r8 = org springframework web servlet tag url tag r0", "r8 context = $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet theme abstract theme resolver r0", "r2 default theme name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java io byte array output stream", "specialinvoke $ r1 < init > 4096", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web servlet view default request to view name translator r0", "r1 strip extension = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet view fee abstract atom feed view r0", "r2 feed type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "label r9 = org springframework web servlet view groovy groovy markup view r0", "$ r2 = r9 obtain application context", "r10 = org springframework bean factory listable bean factory $ r2", "$ r3 = org springframework bean factory bean factory utils bean of type include ancestor r10 class \\ `` lorg springframework web servlet view groovy groovy markup config \\", "$ r4 = org springframework web servlet view groovy groovy markup config $ r3", "$ r5 = $ r4 get template engine", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet view tiles3 tile configurer r0", "r2 definition = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet view xml marshal view r0", "r2 model key = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org springframework web servlet view xml marshal view r0", "$ r3 = r7 marshaller", "if $ r3 == null goto label1", "$ z2 = 1", "goto label2", "label org springframework util assert state $ z2 \\ `` no marshaller set\\ ``", "r6 = r2 get class", "$ z0 = r2 instanceof javax xml bind j a x b element", "if $ z0 == 0 goto label3", "$ r5 = javax xml bind j a x b element r2", "r6 = $ r5 get declare type", "label r8 = org springframework web servlet view xml marshal view r0", "$ r4 = r8 marshaller", "$ z1 = $ r4 support r6", "return $ z1", "if $ r3 == null goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web servlet view xml view resolver r0", "$ z0 = r2 be cache", "if $ z0 == 0 goto label1", "r3 = org springframework web servlet view xml view resolver r0", "r3 init factory", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet view xslt xslt view r0", "r2 transformer factory class = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org sqlite function r0", "specialinvoke r1 check context", "r2 = org sqlite function r0", "$ i0 = r2 args", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus stax2 io stax2 result r0", "$ r1 = r2 m system id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return \\ `` cdata\\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus stax2 ri evt d t d event impl r0", "$ r1 = r2 m root name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r6 = org codehaus stax2 ri evt stax2 event reader adapter r0", "$ r3 = r6 m reader", "$ r3 get property r1", "label goto label4", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = org codehaus stax2 type base64 variant mime", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r7 = org ccil cowan tagsoup element r0", "$ r2 = r7 the atts", "$ i0 = $ r2 get length", "i2 = $ i0 - 1", "label if i2 < 0 goto label4", "r8 = org ccil cowan tagsoup element r0", "$ r3 = r8 the atts", "r1 = $ r3 get local name i2", "r9 = org ccil cowan tagsoup element r0", "$ r4 = r9 the atts", "$ r5 = $ r4 get value i2", "if $ r5 == null goto label2", "if r1 == null goto label2", "$ i1 = r1 length", "if $ i1 ! = 0 goto label3", "label r10 = org ccil cowan tagsoup element r0", "$ r6 = r10 the atts", "$ r6 remove attribute i2", "goto label3", "label i2 = i2 + -1", "goto label1", "label if i2 < 0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [], [23], []]}
{"nodes": ["r0 = @ this", "r2 = org ccil cowan tagsoup element type r0", "$ r1 = r2 the local name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r23 = org ccil cowan tagsoup schema r0", "r3 = r23 get element type r1", "r24 = org ccil cowan tagsoup schema r0", "r4 = r24 get element type r2", "if r3 ! = null goto label1", "r20 = new java lang error", "r19 = new java lang string buffer", "specialinvoke r19 < init >", "$ r14 = r19 append \\ `` no child \\ ``", "$ r15 = $ r14 append r1", "$ r16 = $ r15 append \\ `` for parent \\ ``", "$ r17 = $ r16 append r2", "$ r18 = $ r17 to string", "specialinvoke r20 < init > $ r18", "throw r20", "if r3 ! = null goto label1", "label if r4 ! = null goto label2", "r22 = new java lang error", "r21 = new java lang string buffer", "specialinvoke r21 < init >", "$ r7 = r21 append \\ `` no parent \\ ``", "$ r8 = $ r7 append r2", "$ r9 = $ r8 append \\ `` for child \\ ``", "$ r10 = $ r9 append r1", "$ r11 = $ r10 to string", "specialinvoke r22 < init > $ r11", "throw r22", "label if r4 ! = null goto label2", "label r3 set parent r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], []]}
{"nodes": ["r0 = @ this", "r20 = new java util hash set", "specialinvoke r20 < init >", "r21 = org objectweb fractal task codegen lib abstract require file collection provider task r0", "$ r5 = r21 file collection provider task", "r16 = $ r5 iterator", "label $ z0 = r16 have next", "if $ z0 == 0 goto label4", "$ r11 = r16 next", "r17 = org objectweb fractal task core task map $ task hole $ r11", "$ r12 = r17 get task", "$ r13 = org objectweb fractal task codegen api file collection provider task $ r12", "$ r14 = $ r13 get file", "r2 = $ r14 iterator", "label $ z3 = r2 have next", "if $ z3 == 0 goto label3", "$ r15 = r2 next", "r3 = java io file $ r15", "r20 add r3", "goto label2", "if $ z3 == 0 goto label3", "label goto label1", "if $ z0 == 0 goto label4", "label r22 = org objectweb fractal task codegen lib abstract require file collection provider task r0", "$ r6 = r22 file provider task", "r18 = $ r6 iterator", "label $ z1 = r18 have next", "if $ z1 == 0 goto label6", "$ r7 = r18 next", "r19 = org objectweb fractal task core task map $ task hole $ r7", "$ r8 = r19 get task", "$ r9 = org objectweb fractal task codegen api file provider task $ r8", "$ r10 = $ r9 get file", "r20 add $ r10", "goto label5", "if $ z1 == 0 goto label6", "label return r20"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org objectweb fractal task deployment lib abstract binding getter task r0", "r2 bind = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org objectweb fractal task deployment lib abstract factory provider task r0", "r2 factory = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org objectweb fractal task deployment lib abstract instantiation task r0", "$ r1 = r5 factory provider task_", "if $ r1 ! = null goto label1", "$ r4 = null", "goto label2", "label return $ r4", "if $ r1 ! = null goto label1", "label r6 = org objectweb fractal task deployment lib abstract instantiation task r0", "$ r2 = r6 factory provider task_", "$ r3 = $ r2 get task", "$ r4 = org objectweb fractal task deployment api factory provider task $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org testcontainers container docker compose container r0", "$ r3 = r5 ambassador container", "$ r4 = $ r3 get host", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r1 = @ parameter2", "specialinvoke r0 add fix expose port i0 i1 r1", "r4 = org testcontainers container fix host port generic container r0", "$ r2 = r4 self", "$ r3 = org testcontainers container fix host port generic container $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = org testcontainers container generic container r0", "$ r1 = r3 get docker image name", "$ r2 = org testcontainers utility docker logger factory get logger $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util optional of r1", "r3 = org testcontainers image builder image from dockerfile r0", "r3 docker file path = $ r2", "r4 = org testcontainers image builder image from dockerfile r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util optional of r1", "r3 = org testcontainers image builder image from dockerfile r0", "r3 dockerfile = $ r2", "r4 = org testcontainers image builder image from dockerfile r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = java lang string join \\ `` \\", "$ r2 = org testcontainers utility command line logger", "$ r2 debug \\ `` execute shell command ` { } ` \\", "label r17 = new org testcontainers shade org zeroturnaround exec process executor", "specialinvoke r17 < init >", "$ r4 = r17 command r0", "$ r5 = $ r4 read output 1", "$ r6 = $ r5 exit value normal", "r15 = $ r6 execute", "$ r7 = r15 output u t f8", "$ r8 = $ r7 trim", "label return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org testcontainers utility resource reaper r0", "specialinvoke r2 remove network r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "org apache tika config service loader context class loader = r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new java util array list", "specialinvoke r6 < init >", "r7 = org apache tika config service loader r0", "$ r4 = r7 load dynamic service provider r1", "r6 add all $ r4", "r8 = org apache tika config service loader r0", "$ r5 = r8 load static service provider r1", "r6 add all $ r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tika detect text statistic r0", "$ i0 = r1 total", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tika detect text statistic r0", "$ i0 = specialinvoke r1 count 128 256", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tika embedder external embedder r0", "$ r1 = r2 command", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tika embedder external embedder r0", "$ r1 = r2 command append operator", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r1 get class \\ `` lorg apache tika parser parser \\ ``", "r5 = org apache tika parser parser $ r2", "$ z0 = org apache tika extractor embed document util equal r5 r0", "if $ z0 == 0 goto label1", "return r5", "if $ z0 == 0 goto label1", "label r6 = null", "if r5 == null goto label4", "$ z2 = r5 instanceof org apache tika parser parser decorator", "if $ z2 == 0 goto label2", "$ r4 = org apache tika parser parser decorator r5", "r5 = org apache tika extractor embed document util find in decorated $ r4 r0", "label $ z3 = org apache tika extractor embed document util equal r5 r0", "if $ z3 == 0 goto label3", "label $ z4 = r5 instanceof org apache tika parser composite parser", "if $ z4 == 0 goto label4", "$ r3 = org apache tika parser composite parser r5", "r6 = org apache tika extractor embed document util find in composite $ r3 r0 r1", "label if r6 == null goto label5", "$ z1 = org apache tika extractor embed document util equal r6 r0", "if $ z1 == 0 goto label5", "return r6", "if $ z1 == 0 goto label5", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], []]}
{"nodes": ["r0 = @ this", "i0 = specialinvoke r0 read", "r2 = org apache tika io count input stream r0", "$ l1 = r2 count", "if i0 < 0 goto label1", "$ l3 = 1l", "goto label2", "label $ l2 = $ l1 + $ l3", "r3 = org apache tika io count input stream r0", "r3 count = $ l2", "return i0", "if i0 < 0 goto label1", "label $ l3 = 0l"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i1 = org apache tika io endian utils get u short l e r0 i0", "$ s2 = short $ i1", "return $ s2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ l0 = org apache tika io endian utils get u int b e r0 0", "return $ l0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tika io temporary resource r0", "$ r2 = r3 resource", "$ r2 add first r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache tika io temporary resource r0", "$ r4 = r7 resource", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = java io closeable $ r5", "$ r6 = r3 get class", "$ z1 = r1 be assignable from $ r6", "if $ z1 == 0 goto label2", "return r3", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tika language language profile r0", "r2 add r1 1l", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "return null"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 == null goto label1", "r8 = org apache tika metadata metadata r0", "$ r6 = r8 metadata", "$ r5 = newarray java lang string [ 1 ]", "$ r5 [ 0 ] = r2", "$ r6 put r1 $ r5", "goto label2", "label return", "if r2 == null goto label1", "label r9 = org apache tika metadata metadata r0", "$ r3 = r9 metadata", "$ r3 remove r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "$ r1 = org apache tika mime hex co dec decode r0 0 $ i0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label r20 = org apache tika mime medium type registry r0", "$ r2 = r20 inheritance", "$ z0 = $ r2 contain key r1", "if $ z0 == 0 goto label2", "r21 = org apache tika mime medium type registry r0", "$ r17 = r21 inheritance", "$ r18 = $ r17 get r1", "$ r19 = org apache tika mime medium type $ r18", "return $ r19", "if $ z0 == 0 goto label2", "label $ z1 = r1 have parameter", "if $ z1 == 0 goto label3", "$ r16 = r1 get base type", "return $ r16", "if $ z1 == 0 goto label3", "label $ r3 = r1 get subtype", "$ z2 = $ r3 end with \\ `` +xml\\ ``", "if $ z2 == 0 goto label4", "$ r15 = org apache tika mime medium type application_xml", "return $ r15", "if $ z2 == 0 goto label4", "label $ r4 = r1 get subtype", "$ z3 = $ r4 end with \\ `` +zip\\ ``", "if $ z3 == 0 goto label5", "$ r14 = org apache tika mime medium type application_zip", "return $ r14", "if $ z3 == 0 goto label5", "label $ r5 = \\ `` text\\ ``", "$ r6 = r1 get type", "$ z4 = $ r5 equal $ r6", "if $ z4 == 0 goto label6", "$ r12 = org apache tika mime medium type text_plain", "$ z8 = $ r12 equal r1", "if $ z8 ! = 0 goto label6", "$ r13 = org apache tika mime medium type text_plain", "return $ r13", "if $ z8 ! = 0 goto label6", "label $ r7 = r1 get type", "$ z5 = $ r7 contain \\ `` empty\\ ``", "if $ z5 == 0 goto label7", "$ r10 = org apache tika mime medium type empty", "$ z7 = $ r10 equal r1", "if $ z7 ! = 0 goto label7", "$ r11 = org apache tika mime medium type empty", "return $ r11", "if $ z7 ! = 0 goto label7", "label $ r8 = org apache tika mime medium type octet_stream", "$ z6 = $ r8 equal r1", "if $ z6 ! = 0 goto label8", "$ r9 = org apache tika mime medium type octet_stream", "return $ r9", "if $ z6 ! = 0 goto label8", "label return null"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], [46], [47], [48], [49], [], [51], [52], [53], [54], [55], [], [57], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r1 = new java lang illegal argument exception", "specialinvoke $ r1 < init > \\ `` name be missing\\ ``", "throw $ r1", "if r0 ! = null goto label1", "label z0 = 0", "i4 = 0", "label $ i1 = r0 length", "if i4 > = $ i1 goto label8", "c0 = r0 char at i4", "if c0 < = 32 goto label3", "if c0 > = 127 goto label3", "if c0 == 40 goto label3", "if c0 == 41 goto label3", "if c0 == 60 goto label3", "if c0 == 62 goto label3", "if c0 == 64 goto label3", "if c0 == 44 goto label3", "if c0 == 59 goto label3", "if c0 == 58 goto label3", "if c0 == 92 goto label3", "if c0 == 34 goto label3", "if c0 == 91 goto label3", "if c0 == 93 goto label3", "if c0 == 63 goto label3", "if c0 ! = 61 goto label4", "label return 0", "if c0 ! = 61 goto label4", "label if c0 ! = 47 goto label7", "if z0 ! = 0 goto label5", "if i4 == 0 goto label5", "$ i2 = i4 + 1", "$ i3 = r0 length", "if $ i2 ! = $ i3 goto label6", "label return 0", "if $ i2 ! = $ i3 goto label6", "label z0 = 1", "label i4 = i4 + 1", "goto label2", "if i4 > = $ i1 goto label8", "label return z0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], []]}
{"nodes": ["$ r0 = new org apache tika mime mime type", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tika parser composite parser r0", "r2 registry = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tika parser composite parser r0", "r2 fallback = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache tika sax secure content handler r0", "r1 max depth = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r3 append \\ `` \\ ``", "i0 = 0", "$ r5 = org apache tika sax standard organization organization", "$ r6 = $ r5 key set", "r1 = $ r6 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label3", "$ r9 = r1 next", "r2 = java lang string $ r9", "if i0 < = 0 goto label2", "$ r3 append \\ `` |\\ ``", "label $ r3 append r2", "i0 = i0 + 1", "goto label1", "if $ z0 == 0 goto label3", "label $ r3 append \\ `` \\ ``", "$ r8 = $ r3 to string", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org apache tika sax xpath matcher fail", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org apache tika io tika input stream get r1 r2", "r5 = org apache tika tika r0", "r6 = java io input stream r3", "$ r4 = r5 parse r6 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org apache tika metadata metadata", "specialinvoke r4 < init >", "r5 = org apache tika tika r0", "$ r3 = r5 parse r1 r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tika tika r0", "$ i0 = r1 max string length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r2 = r0", "$ z0 = r0 instanceof org apache tika exception tika exception", "if $ z0 == 0 goto label1", "$ r1 = r0 get cause", "if $ r1 == null goto label1", "r2 = r0 get cause", "label $ r3 = org apache tika utils exception utils get stack trace r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = r0 length", "if $ i0 ! = 0 goto label2", "label $ r3 = java util collection empty list", "return $ r3", "if $ i0 ! = 0 goto label2", "label $ r4 = new java util array list", "specialinvoke $ r4 < init >", "$ r5 = org apache tika utils regex utils links_pattern", "r2 = $ r5 matcher r0", "label $ z0 = r2 find", "if $ z0 == 0 goto label4", "$ r6 = r2 group", "$ r4 add $ r6", "goto label3", "if $ z0 == 0 goto label4", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tika utils rereadable input stream r0", "$ i0 = r1 size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tika parser chm accessor chm itsf header r0", "$ r1 = r2 dir_uuid", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache tika parser chm accessor chm itsf header r0", "r1 unknown_offset = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tika parser chm accessor chm itsp header r0", "$ r1 = r2 signature", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tika parser chm accessor chm itsp header r0", "$ i0 = r1 index_root", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tika parser chm accessor chm itsp header r0", "r2 system_uuid = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache tika parser chm accessor chm lzxc control data r0", "r1 size = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache tika parser chm accessor chm lzxc control data r0", "r1 windows per reset = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache tika parser chm accessor chm lzxc reset table r0", "r1 block_len = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "r0 destroy", "label return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tika parser html html parser r0", "r1 extract script = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tika parser microsoft office parser config r0", "r1 include header and footer = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tika parser microsoft office parser config r0", "r1 concatenate phonetic run = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tika parser microsoft office parser config r0", "r1 include miss row = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tika parser microsoft office parser config r0", "r1 include slide master content = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = new org json simple parser j s o n parser", "specialinvoke $ r4 < init >", "$ r5 = new org json simple j s o n object", "specialinvoke $ r5 < init >", "r10 = $ r5", "label $ r6 = $ r4 parse r1", "r10 = org json simple j s o n object $ r6", "label goto label4", "label return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 match \\ `` [ 0-9 ] |10|11|12|13\\ ``", "if $ z0 ! = 0 goto label1", "r3 = new java lang illegal argument exception", "specialinvoke r3 < init > \\ `` invalid page segmentation mode\\ ``", "throw r3", "if $ z0 ! = 0 goto label1", "label r4 = org apache tika parser ocr tesseract o c r config r0", "r4 page seg mode = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = null goto label1", "r22 = new java lang illegal argument exception", "specialinvoke r22 < init > \\ `` key must not be null\\ ``", "throw r22", "if r1 ! = null goto label1", "label if r2 ! = null goto label2", "r23 = new java lang illegal argument exception", "specialinvoke r23 < init > \\ `` value must not be null\\ ``", "throw r23", "label if r2 ! = null goto label2", "label $ r4 = org apache tika parser ocr tesseract o c r config allowable_other_params_pattern", "r3 = $ r4 matcher r1", "$ z0 = r3 find", "if $ z0 ! = 0 goto label3", "r25 = new java lang illegal argument exception", "r24 = new java lang string builder", "specialinvoke r24 < init >", "$ r17 = r24 append \\ `` key contain illegal character \\ ``", "$ r18 = $ r17 append r1", "$ r19 = $ r18 to string", "specialinvoke r25 < init > $ r19", "throw r25", "if $ z0 ! = 0 goto label3", "label r3 reset r2", "$ z1 = r3 find", "if $ z1 ! = 0 goto label4", "r27 = new java lang illegal argument exception", "r26 = new java lang string builder", "specialinvoke r26 < init >", "$ r12 = r26 append \\ `` value contain illegal character \\ ``", "$ r13 = $ r12 append r2", "$ r14 = $ r13 to string", "specialinvoke r27 < init > $ r14", "throw r27", "if $ z1 ! = 0 goto label4", "label r28 = org apache tika parser ocr tesseract o c r config r0", "$ r6 = r28 other tesseract config", "$ r7 = r1 trim", "$ r8 = r2 trim", "$ r6 put $ r7 $ r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], [39], [40], [41], [42], [43], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache tika parser pdf p d f parser r0", "$ r1 = r2 default config", "$ r1 set sort by position z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tika parser pdf p d f parser config r0", "$ f0 = r1 ocr image scale", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tika parser string file config r0", "$ r1 = r2 file path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tika parser string string config r0", "$ i0 = r1 min length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tika parser string string config r0", "r2 encode = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > = 1 goto label1", "r2 = new java lang illegal argument exception", "specialinvoke r2 < init > \\ `` invalid timeout\\ ``", "throw r2", "if i0 > = 1 goto label1", "label r3 = org apache tika parser string string config r0", "r3 timeout = i0", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r7 = org apache tika parser wordperfect w p input stream r0", "$ r1 = r7 in", "i0 = $ r1 read", "r8 = org apache tika parser wordperfect w p input stream r0", "$ r2 = r8 in", "i1 = $ r2 read", "r9 = org apache tika parser wordperfect w p input stream r0", "$ r3 = r9 in", "i2 = $ r3 read", "r10 = org apache tika parser wordperfect w p input stream r0", "$ r4 = r10 in", "i3 = $ r4 read", "$ i4 = i0 | i1", "$ i5 = $ i4 | i2", "$ i6 = $ i5 | i3", "if $ i6 > = 0 goto label1", "r6 = new java io e o f exception", "specialinvoke r6 < init >", "throw r6", "if $ i6 > = 0 goto label1", "label $ i8 = i3 < < 24", "$ i7 = i2 < < 16", "$ i10 = $ i8 + $ i7", "$ i9 = i1 < < 8", "$ i12 = $ i10 + $ i9", "$ i11 = i0 < < 0", "$ i13 = $ i12 + $ i11", "$ l14 = long $ i13", "return $ l14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tika parser wordperfect w p input stream r0", "$ r1 = r2 in", "$ b0 = $ r1 read byte", "return $ b0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i2 = 0", "label if i2 > = i0 goto label2", "r1 = org apache tika parser wordperfect w p input stream r0", "r1 read w p byte", "i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = javax servlet http cookie r0", "r1 http only = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = javax servlet unavailable exception r0", "$ z0 = r1 permanent", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache catalina authenticator authenticator base r0", "r1 cache = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache catalina authenticator form authenticator r0", "$ r1 = r2 land page", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina authenticator form authenticator r0", "r2 land page = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache catalina authenticator single sign on r0", "r1 require reauthentication = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache catalina authenticator single sign on entry r0", "$ r1 = r2 auth type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache catalina authenticator single sign on entry r0", "$ r1 = r2 principal", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache catalina connector connector r0", "r2 enable lookup = z0", "$ r1 = java lang string value of z0", "r3 = org apache catalina connector connector r0", "r3 set property \\ `` enable lookups\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = java lang string value of i0", "r2 = org apache catalina connector connector r0", "r2 set property \\ `` port\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "label r8 = org apache catalina connector connector r0", "$ r2 = r8 protocol handler", "if $ r2 == null goto label2", "r9 = org apache catalina connector connector r0", "$ r3 = r9 protocol handler", "$ r3 resume", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r14 = org apache catalina connector coyote input stream r0", "specialinvoke r14 check non block read", "$ z0 = org apache catalina security security util be package protection enable", "if $ z0 == 0 goto label5", "label r12 = new org apache catalina connector coyote input stream $ privilege read", "r15 = org apache catalina connector coyote input stream r0", "$ r4 = r15 ib", "specialinvoke r12 < init > $ r4", "r16 = java security privilege exception action r12", "$ r5 = java security access controller do privilege r16", "r10 = java lang integer $ r5", "$ i1 = r10 int value", "label return $ i1", "if $ z0 == 0 goto label5", "label r17 = org apache catalina connector coyote input stream r0", "$ r2 = r17 ib", "$ i0 = $ r2 read byte", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org apache catalina connector coyote output stream r0", "z0 = specialinvoke r2 check non block write", "r3 = org apache catalina connector coyote output stream r0", "$ r1 = r3 ob", "$ r1 flush", "if z0 == 0 goto label1", "r4 = org apache catalina connector coyote output stream r0", "specialinvoke r4 check register for write", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache catalina connector request r0", "$ r1 = r2 coyote request", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org apache catalina connector request r0", "$ r1 = r6 input stream", "if $ r1 ! = null goto label1", "r5 = new org apache catalina connector coyote input stream", "r7 = org apache catalina connector request r0", "$ r4 = r7 input buffer", "specialinvoke r5 < init > $ r4", "r8 = org apache catalina connector request r0", "r8 input stream = r5", "label r9 = org apache catalina connector request r0", "$ r2 = r9 input stream", "r10 = javax servlet servlet input stream $ r2", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache catalina connector request r0", "$ r2 = r4 note", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache catalina connector request r0", "r1 cooky parse = 1", "r2 = org apache catalina connector request r0", "r2 cooky convert = 1", "r3 = org apache catalina connector request r0", "r3 cooky = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina connector request r0", "r2 request session id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org apache catalina connector request r0", "$ r1 = r4 coyote request", "$ r2 = $ r1 decode u r i", "$ r3 = $ r2 to string", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache catalina connector response r0", "r1 reset buffer 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r17 = @ parameter0", "r0 = @ parameter1", "$ r2 = new java lang string buffer", "specialinvoke $ r2 < init >", "r18 = null", "r19 = null", "label if r17 == null goto label4", "$ z0 = r17 instanceof org apache catalina host", "if $ z0 == 0 goto label2", "r18 = r17", "goto label3", "label r17 = r17 get parent", "goto label1", "if $ z0 == 0 goto label2", "label $ z1 = r17 instanceof org apache catalina engine", "if $ z1 == 0 goto label3", "r19 = r17", "label if r17 == null goto label4", "label if r18 == null goto label5", "$ r11 = org apache catalina host r18", "$ r12 = $ r11 get xml base", "if $ r12 == null goto label5", "$ r13 = org apache catalina host r18", "$ r14 = $ r13 get xml base", "$ r15 = $ r2 append $ r14", "$ r15 append 47", "goto label7", "label $ r2 append r0", "$ r20 = $ r2 to string", "return $ r20", "if $ r12 == null goto label5", "label $ r2 append \\ `` conf \\ ``", "if r19 == null goto label6", "$ r8 = r19 get name", "$ r9 = $ r2 append $ r8", "$ r9 append 47", "label if r18 == null goto label7", "$ r5 = r18 get name", "$ r6 = $ r2 append $ r5", "$ r6 append 47"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [39], []]}
{"nodes": ["r2 = @ parameter0", "label if r2 == null goto label2", "$ z0 = r2 instanceof org apache catalina engine", "if $ z0 ! = 0 goto label2", "r2 = r2 get parent", "goto label1", "if $ z0 ! = 0 goto label2", "label if r2 ! = null goto label3", "return null", "label if r2 ! = null goto label3", "label $ r0 = org apache catalina engine r2", "$ r1 = $ r0 get service", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r4 = org apache catalina core application http request r0", "r4 parse parameter", "r5 = org apache catalina core application http request r0", "$ r1 = r5 parameter", "$ r2 = $ r1 key set", "$ r3 = java util collection enumeration $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i1 = 0", "label $ r3 = org apache catalina core application http request special", "$ i0 = lengthof $ r3", "if i1 > = $ i0 goto label3", "$ r4 = org apache catalina core application http request special", "$ r5 = $ r4 [ i1 ]", "$ z0 = $ r5 equal r1", "if $ z0 == 0 goto label2", "r7 = org apache catalina core application http request r0", "$ r6 = r7 special attribute", "$ r6 [ i1 ] = r2", "return 1", "if $ z0 == 0 goto label2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "r11 = org apache catalina core container base r0", "$ r4 = r11 child", "entermonitor $ r4", "label r12 = org apache catalina core container base r0", "$ r5 = r12 child", "$ i0 = $ r5 size", "r2 = newarray org apache catalina container [ $ i0 ]", "r13 = org apache catalina core container base r0", "$ r6 = r13 child", "$ r7 = $ r6 value", "$ r8 = $ r7 to array r2", "$ r9 = org apache catalina container [ ] $ r8", "exitmonitor $ r4", "label return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = newarray org apache catalina container listener [ 0 ]", "r5 = org apache catalina core container base r0", "$ r2 = r5 listener", "$ r3 = $ r2 to array r1", "$ r4 = org apache catalina container listener [ ] $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r4 = org apache catalina core standard context r0", "r4 response encode = null", "goto label2", "label return", "if r1 ! = null goto label1", "label r3 = new java lang string", "specialinvoke r3 < init > r1", "r5 = org apache catalina core standard context r0", "r5 response encode = r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache catalina core standard context r0", "r1 use name = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache catalina core standard context r0", "$ r3 = r5 application lifecycle listener object", "i0 = lengthof $ r3", "r6 = org apache catalina core standard context r0", "$ r4 = r6 application lifecycle listener object", "$ i1 = i0 + 1", "r2 = java util array copy of $ r4 $ i1", "r2 [ i0 ] = r1", "r7 = org apache catalina core standard context r0", "r7 application lifecycle listener object = r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache catalina core standard context r0", "r1 copy x m l = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache catalina core standard context r0", "$ r2 = r3 get naming resource", "$ r2 add message destination ref r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache catalina core standard context r0", "$ r4 = r9 role mapping", "entermonitor $ r4", "label r10 = org apache catalina core standard context r0", "$ r5 = r10 role mapping", "$ r6 = $ r5 get r1", "r8 = java lang string $ r6", "exitmonitor $ r4", "label goto label5", "label if r8 == null goto label6", "return r8", "label if r8 == null goto label6", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org apache catalina core standard engine r0", "$ r1 = r2 jvm route id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache catalina core standard host r0", "r1 unpack w a r = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache catalina core standard server r0", "$ r1 = r2 global naming context", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache catalina util server info get server number", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina core standard service r0", "r2 server = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r4 = org apache catalina core standard wrapper r0", "l1 = r4 available", "$ l2 = java lang system current time millis", "$ b3 = l0 cmp $ l2", "if $ b3 < = 0 goto label1", "r5 = org apache catalina core standard wrapper r0", "r5 available = l0", "goto label2", "label r7 = org apache catalina core standard wrapper r0", "$ r1 = r7 support", "$ r2 = java lang long value of l1", "r8 = org apache catalina core standard wrapper r0", "$ l4 = r8 available", "$ r3 = java lang long value of $ l4", "$ r1 fire property change \\ `` available\\", "return", "if $ b3 < = 0 goto label1", "label r6 = org apache catalina core standard wrapper r0", "r6 available = 0l"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina core standard wrapper r0", "r2 set name r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina core standard wrapper r0", "r2 instance = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina deploy naming resource impl r0", "r2 container = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = org apache catalina deploy naming resource impl r0", "$ r4 = r11 entry", "$ r4 remove r1", "r12 = org apache catalina deploy naming resource impl r0", "$ r5 = r12 resource env refs", "entermonitor $ r5", "label r13 = org apache catalina deploy naming resource impl r0", "$ r6 = r13 resource env refs", "$ r7 = $ r6 remove r1", "r10 = org apache tomcat util descriptor web context resource env ref $ r7", "exitmonitor $ r5", "label goto label5", "label if r10 == null goto label6", "r14 = org apache catalina deploy naming resource impl r0", "$ r8 = r14 support", "$ r8 fire property change \\ `` resource env ref\\", "r10 set naming resource null", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = org apache catalina filter remote c i d r filter r0", "$ r5 = r13 allow", "r14 = org apache catalina filter remote c i d r filter r0", "r2 = specialinvoke r14 fill from input r1 $ r5", "$ z0 = r2 be empty", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label r3 = r2 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label3", "$ r10 = r3 next", "r4 = java lang string $ r10", "r15 = org apache catalina filter remote c i d r filter r0", "$ r11 = r15 log", "$ r11 error r4", "goto label2", "if $ z1 == 0 goto label3", "label r12 = new java lang illegal argument exception", "$ r8 = org apache catalina filter remote c i d r filter sm", "$ r7 = newarray java lang object [ 1 ]", "$ r7 [ 0 ] = \\ `` allow\\ ``", "$ r9 = $ r8 get string \\ `` remote cidr filter invalid\\", "specialinvoke r12 < init > $ r9", "throw r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = r0 length", "if $ i0 ! = 0 goto label2", "label $ r2 = newarray java lang string [ 0 ]", "goto label3", "label return $ r2", "if $ i0 ! = 0 goto label2", "label $ r1 = org apache catalina filter remote ip filter comma separate value pattern", "$ r2 = $ r1 split r0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina filter remote ip filter r0", "r2 port header = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "z1 = @ parameter3", "r3 = r1 get parameter r2", "z5 = z0", "if r3 == null goto label3", "if z1 == 0 goto label1", "$ z4 = r3 equal \\ `` on\\ ``", "if $ z4 == 0 goto label4", "z5 = 1", "goto label4", "label return z5", "if z1 == 0 goto label1", "label if z0 == 0 goto label2", "$ z3 = r3 equal \\ `` false\\ ``", "if $ z3 == 0 goto label4", "z5 = 0", "label if z0 == 0 goto label2", "label $ z2 = r3 equal \\ `` true\\ ``", "if $ z2 == 0 goto label4", "if r3 == null goto label3", "label if z1 == 0 goto label4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r5 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r6 = org apache catalina mapper mapper rename wildcard host r5", "r7 = org apache catalina mapper mapper r0", "r3 = specialinvoke r7 find context version r6 r1 r2 0", "if r3 ! = null goto label1", "return", "if r3 ! = null goto label1", "label $ r4 = newarray java lang string [ 0 ]", "r3 welcome resource = $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r5 = org apache catalina mbeans container m bean r0", "$ r4 = r5 do get manage resource", "r2 = org apache catalina container $ r4", "r3 = r2 find child r1", "r2 remove child r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache catalina mbeans global resource lifecycle listener log", "$ z0 = $ r1 be debug enabled", "if $ z0 == 0 goto label1", "$ r2 = org apache catalina mbeans global resource lifecycle listener log", "$ r2 debug \\ `` destroy m bean for global jndi resources\\ ``", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "r4 = org apache catalina mbeans m bean factory r0", "$ r3 = specialinvoke r4 create connector r1 r2 i0 0 1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = org apache catalina mbeans m bean utils mserver", "if $ r0 ! = null goto label1", "$ r2 = org apache tomcat util modeler registry get registry null null", "$ r3 = $ r2 get m bean server", "org apache catalina mbeans m bean utils mserver = $ r3", "label $ r1 = org apache catalina mbeans m bean utils mserver", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r25 = org apache catalina mbeans naming resource m bean r0", "$ r6 = r25 resource", "$ r7 = org apache catalina deploy naming resource impl $ r6", "r1 = $ r7 find resource", "r23 = new java util array list", "specialinvoke r23 < init >", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label6", "r4 = r1 [ i1 ]", "label r26 = org apache catalina mbeans naming resource m bean r0", "$ r12 = r26 manage", "$ r13 = $ r12 get domain", "r21 = org apache catalina mbeans m bean utils create object name $ r13 r4", "$ r14 = r21 to string", "r23 add $ r14", "label goto label5", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label6", "label $ r9 = newarray java lang string [ 0 ]", "$ r10 = r23 to array $ r9", "$ r11 = java lang string [ ] $ r10", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache catalina realm digest credential handler base r0", "r1 salt length = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache catalina security security util class cache", "$ r1 remove r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache catalina session j d b c store r0", "r2 = r5 session id col", "r6 = org apache catalina session j d b c store r0", "r6 session id col = r1", "r7 = org apache catalina session j d b c store r0", "$ r4 = r7 support", "r8 = org apache catalina session j d b c store r0", "$ r3 = r8 session id col", "$ r4 fire property change \\ `` session id col\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r4 = org apache catalina session manager base r0", "$ r1 = r4 session attribute name pattern", "if $ r1 ! = null goto label1", "return null", "if $ r1 ! = null goto label1", "label r5 = org apache catalina session manager base r0", "$ r2 = r5 session attribute name pattern", "$ r3 = $ r2 to string", "return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = r1 length", "if $ i0 ! = 0 goto label2", "label r3 = org apache catalina session manager base r0", "r3 session attribute value class name pattern = null", "goto label3", "label return", "if $ i0 ! = 0 goto label2", "label $ r2 = java util regex pattern compile r1", "r4 = org apache catalina session manager base r0", "r4 session attribute value class name pattern = $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache catalina session manager base r0", "r1 warn on session attribute filter failure = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache catalina session manager base r0", "$ i0 = r1 duplicate", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r17 = org apache catalina session persistent manager base r0", "$ r1 = r17 store", "if $ r1 ! = null goto label1", "return", "if $ r1 ! = null goto label1", "label $ z0 = org apache catalina security security util be package protection enable", "if $ z0 == 0 goto label5", "label r16 = new org apache catalina session persistent manager base $ privilege store clear", "r18 = org apache catalina session persistent manager base r0", "specialinvoke r16 < init > r18", "r19 = java security privilege exception action r16", "java security access controller do privilege r19", "label goto label6", "label goto label8", "label return", "if $ z0 == 0 goto label5", "label r21 = org apache catalina session persistent manager base r0", "$ r2 = r21 store", "$ r2 clear"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = org apache catalina session standard session r0", "$ i0 = r1 max inactive interval", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache catalina session standard session r0", "$ r1 = r2 principal", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org apache catalina session standard session r0", "$ r1 = r4 note", "$ r2 = $ r1 key set", "$ r3 = $ r2 iterator", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r8 = org apache catalina startup bootstrap r0", "$ r2 = r8 catalina daemon", "$ r3 = $ r2 get class", "$ r4 = java lang class [ ] null", "r1 = $ r3 get method \\ `` stop\\", "r9 = org apache catalina startup bootstrap r0", "$ r6 = r9 catalina daemon", "$ r5 = java lang object [ ] null", "r1 invoke $ r6 $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache catalina startup catalina r0", "r1 use name = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r87 = @ parameter2", "$ r5 = org apache catalina startup context config log", "$ z0 = $ r5 be debug enabled", "if $ z0 == 0 goto label01", "$ r30 = org apache catalina startup context config log", "r98 = new java lang string builder", "specialinvoke r98 < init >", "$ r31 = r98 append \\ `` process context [ \\ ``", "r104 = org apache catalina startup context config r0", "$ r32 = r104 context", "$ r33 = $ r32 get name", "$ r34 = $ r31 append $ r33", "$ r35 = $ r34 append \\ `` ] configuration file [ \\ ``", "$ r36 = $ r35 append r2", "$ r37 = $ r36 append \\ `` ] \\ ``", "$ r38 = $ r37 to string", "$ r30 debug $ r38", "label r88 = null", "label r99 = new org xml sax input source", "$ r7 = r2 to string", "specialinvoke r99 < init > $ r7", "r88 = r99", "if r87 ! = null goto label03", "r89 = r2 open connection", "r89 set use cache 0", "r87 = r89 get input stream", "label goto label05", "label if r88 ! = null goto label06", "return", "label if r88 ! = null goto label06", "label r88 set byte stream r87", "$ r8 = r0 get class", "$ r9 = $ r8 get class loader", "r1 set class loader $ r9", "r1 set use context class loader 0", "r105 = org apache catalina startup context config r0", "$ r10 = r105 context", "$ r11 = $ r10 get parent", "r1 push $ r11", "r106 = org apache catalina startup context config r0", "$ r12 = r106 context", "r1 push $ r12", "r100 = new org apache tomcat util descriptor xml error handler", "specialinvoke r100 < init >", "r107 = org xml sax error handler r100", "r1 set error handler r107", "r1 parse r88", "$ r15 = r100 get warning", "$ i0 = $ r15 size", "if $ i0 > 0 goto label07", "$ r28 = r100 get error", "$ i1 = $ r28 size", "if $ i1 < = 0 goto label08", "label $ r16 = org apache catalina startup context config log", "$ r17 = r2 to string", "r100 log finding $ r16 $ r17", "r108 = org apache catalina startup context config r0", "r108 ok = 0", "label $ r92 = org apache catalina startup context config log", "$ z1 = $ r92 be debug enabled", "if $ z1 == 0 goto label09", "$ r19 = org apache catalina startup context config log", "r101 = new java lang string builder", "specialinvoke r101 < init >", "$ r20 = r101 append \\ `` successfully process context [ \\ ``", "r109 = org apache catalina startup context config r0", "$ r21 = r109 context", "$ r22 = $ r21 get name", "$ r23 = $ r20 append $ r22", "$ r24 = $ r23 append \\ `` ] configuration file [ \\ ``", "$ r25 = $ r24 append r2", "$ r26 = $ r25 append \\ `` ] \\ ``", "$ r27 = $ r26 to string", "$ r19 debug $ r27", "label if r87 == null goto label10", "r87 close", "label goto label25", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache catalina startup host config r0", "$ r2 = r3 deploy", "$ z0 = $ r2 contain key r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = org apache catalina startup host config r0", "$ r1 = r4 host", "$ r2 = $ r1 get config base file", "$ r3 = $ r2 get absolute path", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org apache catalina startup web annotation set add resource r0 r1 null null", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina user abstract user r0", "r2 password = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = org apache catalina user memory user database r0", "r12 pathname = r1", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r3 = r10 append r1", "$ r4 = $ r3 append \\ `` old\\ ``", "$ r5 = $ r4 to string", "r13 = org apache catalina user memory user database r0", "r13 pathname old = $ r5", "r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r7 = r11 append r1", "$ r8 = $ r7 append \\ `` new\\ ``", "$ r9 = $ r8 to string", "r14 = org apache catalina user memory user database r0", "r14 pathname new = $ r9", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache catalina util charset mapper r0", "$ r3 = r5 map", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i5 = 0", "label $ i1 = lengthof r1", "if i5 > = $ i1 goto label2", "$ i2 = lengthof r1", "$ i3 = $ i2 - i5", "$ i4 = r0 read r1 i5 $ i3", "if $ i4 < 0 goto label2", "i5 = i5 + $ i4", "goto label1", "if $ i4 < 0 goto label2", "label return i5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache catalina util resource set r0", "$ z0 = r6 lock", "if $ z0 == 0 goto label1", "r5 = new java lang illegal state exception", "$ r3 = org apache catalina util resource set sm", "$ r4 = $ r3 get string \\ `` resource set locked\\ ``", "specialinvoke r5 < init > $ r4", "throw r5", "if $ z0 == 0 goto label1", "label $ z1 = specialinvoke r0 add r1", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina valve j d b c access log valve r0", "r2 driver name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina valve j d b c access log valve r0", "r2 user field = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina valve j d b c access log valve r0", "r2 timestamp field = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache catalina valve semaphore valve r0", "$ i0 = r1 concurrency", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache catalina valve semaphore valve r0", "$ z0 = r1 fairness", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache coyote ajp abstract ajp protocol r0", "$ z0 = r1 tomcat authentication", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache coyote http11 abstract http11 protocol r0", "r1 connection upload timeout = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = r1 length", "if $ i0 ! = 0 goto label2", "label r3 = org apache coyote http11 abstract http11 protocol r0", "r3 restrict user agent = null", "goto label3", "label return", "if $ i0 ! = 0 goto label2", "label $ r2 = java util regex pattern compile r1", "r4 = org apache coyote http11 abstract http11 protocol r0", "r4 restrict user agent = $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache coyote http11 abstract http11 protocol r0", "r2 server = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache coyote http11 abstract http11 protocol r0", "$ i0 = r1 max trailer size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org apache coyote response r0", "$ l0 = r1 commit time", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache coyote action code commit", "r2 = org apache coyote response r0", "r2 action $ r1 r0", "r3 = org apache coyote response r0", "r3 set commit 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache name context access controller read only contexts", "$ r1 put r0 r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ z0 = org apache name context access controller check security token r0 r1", "if $ z0 == 0 goto label2", "$ r4 = org apache name context binding object binding", "$ r5 = $ r4 get r0", "r3 = javax name context $ r5", "if r3 ! = null goto label1", "$ r10 = new javax name name exception", "$ r12 = org apache name context binding sm", "$ r11 = newarray java lang object [ 1 ]", "$ r11 [ 0 ] = r0", "$ r13 = $ r12 get string \\ `` context binding unknown context\\", "specialinvoke $ r10 < init > $ r13", "throw $ r10", "if r3 ! = null goto label1", "label $ r6 = org apache name context binding cl binding", "$ r6 put r2 r3", "$ r8 = org apache name context binding cl object binding", "$ r8 put r2 r0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r4 = org apache naming service ref r0", "$ r1 = r4 handler", "$ r2 = $ r1 remove 0", "$ r3 = org apache name handler ref $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i0 = @ parameter0", "$ z0 = org apache tomcat jni status be i0 69", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = org apache tomcat util buf ascii to lower", "$ i1 = i0 & 255", "$ b2 = $ r0 [ $ i1 ]", "$ s3 = $ b2 & 255", "return $ s3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = org apache tomcat util buf b2 c converter r0", "$ r1 = r5 decoder", "$ r1 reset", "r6 = org apache tomcat util buf b2 c converter r0", "$ r3 = r6 leftover", "$ r3 position 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "c2 = @ parameter3", "i4 = i0", "label if i4 > = i1 goto label3", "b3 = r0 [ i4 ]", "if b3 ! = c2 goto label2", "return i4", "if b3 ! = c2 goto label2", "label i4 = i4 + 1", "goto label1", "label if i4 > = i1 goto label3", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r5 = org apache tomcat util buf c2 b converter r0", "$ r1 = r5 encoder", "$ r1 reset", "r6 = org apache tomcat util buf c2 b converter r0", "$ r3 = r6 leftover", "$ r3 position 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org apache tomcat util descriptor web security collection r0", "$ r2 = r10 method", "$ i0 = lengthof $ r2", "if $ i0 ! = 0 goto label1", "r11 = org apache tomcat util descriptor web security collection r0", "$ r5 = r11 omit method", "$ i3 = lengthof $ r5", "if $ i3 ! = 0 goto label1", "return 1", "if $ i3 ! = 0 goto label1", "label r12 = org apache tomcat util descriptor web security collection r0", "$ r3 = r12 method", "$ i1 = lengthof $ r3", "if $ i1 < = 0 goto label5", "r13 = org apache tomcat util descriptor web security collection r0", "r6 = r13 method", "i4 = lengthof r6", "i5 = 0", "label if i5 > = i4 goto label4", "r7 = r6 [ i5 ]", "$ z1 = r7 equal r1", "if $ z1 == 0 goto label3", "label i5 = i5 + 1", "goto label2", "label if i5 > = i4 goto label4", "label return 0", "if $ i1 < = 0 goto label5", "label r14 = org apache tomcat util descriptor web security collection r0", "$ r4 = r14 omit method", "$ i2 = lengthof $ r4", "if $ i2 < = 0 goto label8", "r15 = org apache tomcat util descriptor web security collection r0", "r8 = r15 omit method", "i6 = lengthof r8", "i7 = 0", "label if i7 > = i6 goto label8", "r9 = r8 [ i7 ]", "$ z0 = r9 equal r1", "if $ z0 == 0 goto label7", "return 0", "if $ z0 == 0 goto label7", "label i7 = i7 + 1", "goto label6", "label if i7 > = i6 goto label8", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], [44], [], [46], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tomcat util descriptor web security constraint r0", "$ r1 = r2 user constraint", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org apache tomcat util descriptor web security constraint r0", "$ z0 = r6 authenticate user", "if $ z0 == 0 goto label1", "r7 = org apache tomcat util descriptor web security constraint r0", "r7 authenticate user = 0", "r8 = org apache tomcat util descriptor web security constraint r0", "$ r3 = r8 auth role", "r9 = org apache tomcat util descriptor web security constraint r0", "$ r2 = r9 auth role", "$ i0 = lengthof $ r2", "$ i1 = $ i0 + 1", "$ r4 = java util array copy of $ r3 $ i1", "r1 = java lang string [ ] $ r4", "r10 = org apache tomcat util descriptor web security constraint r0", "$ r5 = r10 auth role", "$ i2 = lengthof $ r5", "r1 [ $ i2 ] = \\ `` * * \\ ``", "r11 = org apache tomcat util descriptor web security constraint r0", "r11 auth role = r1", "r12 = org apache tomcat util descriptor web security constraint r0", "r12 auth constraint = 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["$ r0 = org apache tomcat util diagnostics thread m x bean", "$ z0 = $ r0 be thread cpu time enable", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["z0 = @ parameter0", "$ r0 = org apache tomcat util diagnostics thread m x bean", "$ r0 set thread cpu time enable z0", "$ r1 = org apache tomcat util diagnostics thread m x bean", "z1 = $ r1 be thread cpu time enable", "if z0 == z1 goto label1", "$ r3 = org apache tomcat util diagnostics log", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r4 = $ r2 append \\ `` could not set thread cpu time enable to \\ ``", "$ r5 = $ r4 append z0", "$ r6 = $ r5 append \\", "$ r7 = $ r6 append z1", "$ r8 = $ r7 append \\ `` instead\\ ``", "$ r9 = $ r8 to string", "$ r3 error $ r9", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = org apache tomcat util diagnostics log m x bean", "$ r3 set logger level r0 r1", "$ r4 = org apache tomcat util diagnostics log m x bean", "r2 = $ r4 get logger level r0", "$ z0 = r2 equal r1", "if $ z0 ! = 0 goto label1", "$ r6 = org apache tomcat util diagnostics log", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ r7 = $ r5 append \\ `` could not set logger level for logger \\'\\ ``", "$ r8 = $ r7 append r0", "$ r9 = $ r8 append \\ `` \\ ' to \\'\\ ``", "$ r10 = $ r9 append r1", "$ r11 = $ r10 append \\ `` \\ ' get \\'\\ ``", "$ r12 = $ r11 append r2", "$ r13 = $ r12 append \\ `` \\ ' instead\\ ``", "$ r14 = $ r13 to string", "$ r6 error $ r14", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["$ r2 = org apache tomcat util diagnostics thread m x bean", "r0 = $ r2 find deadlocked thread", "if r0 == null goto label1", "$ r4 = org apache tomcat util diagnostics thread m x bean", "$ r3 = org apache tomcat util diagnostics thread m x bean", "$ r5 = $ r3 find deadlocked thread", "r9 = $ r4 get thread info $ r5 1 1", "if r9 == null goto label1", "$ r6 = new java lang string builder", "specialinvoke $ r6 < init > \\ `` deadlock find between the following threads\\ ``", "$ r6 append \\ `` \\r\\n\\ ``", "$ r7 = org apache tomcat util diagnostics get thread dump r9", "$ r6 append $ r7", "$ r8 = $ r6 to string", "return $ r8", "if r9 == null goto label1", "label return \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["$ r0 = org apache tomcat util diagnostics sm", "$ r1 = org apache tomcat util diagnostics get v m info $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r1 to char array", "r3 = r0 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r5 = r3 next", "r4 = java lang string $ r5", "$ z1 = org apache tomcat util file matcher match r4 r2 1", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["l0 = java lang system current time millis", "$ l1 = org apache tomcat util http fast http date format current date generate", "$ l2 = l0 - $ l1", "$ b3 = $ l2 cmp 1000l", "if $ b3 < = 0 goto label1", "$ r2 = org apache tomcat util http fast http date format format_rfc5322", "$ r1 = new java util date", "specialinvoke $ r1 < init > l0", "$ r3 = $ r2 format $ r1", "org apache tomcat util http fast http date format current date = $ r3", "org apache tomcat util http fast http date format current date generate = l0", "label $ r0 = org apache tomcat util http fast http date format current date", "return $ r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["l0 = @ parameter0", "r0 = @ parameter1", "$ r1 = org apache tomcat util http fast http date format format date l0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r16 = org apache tomcat util http fileupload disk disk file item r0", "$ z0 = r16 be in memory", "if $ z0 == 0 goto label2", "r17 = org apache tomcat util http fileupload disk disk file item r0", "$ r6 = r17 cache content", "if $ r6 ! = null goto label1", "r18 = org apache tomcat util http fileupload disk disk file item r0", "$ r7 = r18 dfos", "if $ r7 == null goto label1", "r19 = org apache tomcat util http fileupload disk disk file item r0", "$ r8 = r19 dfos", "$ r9 = $ r8 get data", "r20 = org apache tomcat util http fileupload disk disk file item r0", "r20 cache content = $ r9", "label r21 = org apache tomcat util http fileupload disk disk file item r0", "$ r12 = r21 cache content", "return $ r12", "if $ z0 == 0 goto label2", "label r22 = org apache tomcat util http fileupload disk disk file item r0", "$ l0 = r22 get size", "$ i1 = int $ l0", "r13 = newarray byte [ $ i1 ]", "r14 = null", "label r15 = new java io file input stream", "r23 = org apache tomcat util http fileupload disk disk file item r0", "$ r4 = r23 dfos", "$ r5 = $ r4 get file", "specialinvoke r15 < init > $ r5", "r14 = r15", "org apache tomcat util http fileupload i o utils read fully r15 r13", "label org apache tomcat util http fileupload i o utils close quietly r15", "goto label9", "label return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tomcat util http fileupload disk disk file item r0", "$ r1 = r2 field name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tomcat util http fileupload file upload base r0", "$ l0 = r1 size max", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tomcat util http fileupload file upload base r0", "r2 listener = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tomcat util http fileupload impl file item stream impl r0", "$ r1 = r2 field name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "i1 = @ parameter1", "i4 = i1", "label r2 = org apache tomcat util http fileupload multipart stream r0", "$ i2 = r2 tail", "if i4 > = $ i2 goto label3", "r3 = org apache tomcat util http fileupload multipart stream r0", "$ r1 = r3 buffer", "$ b3 = $ r1 [ i4 ]", "if $ b3 ! = b0 goto label2", "return i4", "if $ b3 ! = b0 goto label2", "label i4 = i4 + 1", "goto label1", "if i4 > = $ i2 goto label3", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r4 = org apache tomcat util http fileupload multipart stream r0", "i6 = r4 head", "i7 = 0", "label r5 = org apache tomcat util http fileupload multipart stream r0", "$ i0 = r5 tail", "if i6 > = $ i0 goto label4", "label if i7 < 0 goto label3", "r6 = org apache tomcat util http fileupload multipart stream r0", "$ r1 = r6 buffer", "$ b5 = $ r1 [ i6 ]", "r7 = org apache tomcat util http fileupload multipart stream r0", "$ r2 = r7 boundary", "$ b4 = $ r2 [ i7 ]", "if $ b5 == $ b4 goto label3", "r8 = org apache tomcat util http fileupload multipart stream r0", "$ r3 = r8 boundary table", "i7 = $ r3 [ i7 ]", "goto label2", "if $ b5 == $ b4 goto label3", "label i6 = i6 + 1", "i7 = i7 + 1", "r9 = org apache tomcat util http fileupload multipart stream r0", "$ i1 = r9 boundary length", "if i7 ! = $ i1 goto label1", "r10 = org apache tomcat util http fileupload multipart stream r0", "$ i2 = r10 boundary length", "$ i3 = i6 - $ i2", "return $ i3", "if i6 > = $ i0 goto label4", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], []]}
{"nodes": ["r0 = @ this", "i0 = specialinvoke r0 read", "if i0 == -1 goto label1", "r1 = org apache tomcat util http fileupload util limit input stream r0", "$ l1 = r1 count", "$ l2 = $ l1 + 1l", "r2 = org apache tomcat util http fileupload util limit input stream r0", "r2 count = $ l2", "r3 = org apache tomcat util http fileupload util limit input stream r0", "specialinvoke r3 check limit", "label return i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r6 = org apache tomcat util modeler base attribute filter r0", "$ r3 = r6 name", "entermonitor $ r3", "label r7 = org apache tomcat util modeler base attribute filter r0", "$ r4 = r7 name", "$ r4 clear", "exitmonitor $ r3", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache tomcat util modeler manage bean r0", "$ r2 = r5 attribute", "$ r3 = r1 get name", "$ r2 put $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tomcat util multi throwable r0", "$ r2 = r3 throwables", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r6 = org apache tomcat util net abstract endpoint r0", "$ r3 = r6 ssl host configs", "$ r4 = $ r3 key set", "r1 = $ r4 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r5 = r1 next", "r2 = java lang string $ r5", "r7 = org apache tomcat util net abstract endpoint r0", "r7 reload ssl host config r2", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tomcat util net abstract endpoint r0", "r2 utility executor = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < = 0 goto label1", "r1 = org apache tomcat util net abstract endpoint r0", "r1 accept count = i0", "label return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache tomcat util net abstract endpoint r0", "$ r3 = r9 attribute", "r2 = $ r3 get r1", "r10 = org apache tomcat util net abstract endpoint r0", "$ r4 = r10 get log", "$ z0 = $ r4 be trace enabled", "if $ z0 == 0 goto label1", "r11 = org apache tomcat util net abstract endpoint r0", "$ r5 = r11 get log", "$ r7 = org apache tomcat util net abstract endpoint sm", "$ r6 = newarray java lang object [ 2 ]", "$ r6 [ 0 ] = r1", "$ r6 [ 1 ] = r2", "$ r8 = $ r7 get string \\ `` endpoint get attribute\\", "$ r5 trace $ r8", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache tomcat util net nio2 channel r0", "r4 sc = r1", "r5 = org apache tomcat util net nio2 channel r0", "r5 socket wrapper = r2", "r6 = org apache tomcat util net nio2 channel r0", "$ r3 = r6 buf handler", "$ r3 reset", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = @ parameter1", "l0 = @ parameter2", "return 1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "label $ z0 = r1 start with \\ `` selector pool \\ ``", "if $ z0 == 0 goto label3", "r13 = org apache tomcat util net nio endpoint r0", "$ r6 = r13 selector pool", "$ r5 = \\ `` selector pool \\ ``", "$ i0 = $ r5 length", "$ r7 = r1 substring $ i0", "$ z2 = org apache tomcat util introspection utils set property $ r6 $ r7 r2", "label return $ z2", "if $ z0 == 0 goto label3", "label $ z1 = specialinvoke r0 set property r1 r2", "label return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache tomcat util net nio endpoint r0", "r1 poller thread priority = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache tomcat util net socket wrapper base r0", "$ r3 = r7 endpoint", "r2 = $ r3 get executor", "r8 = org apache tomcat util net socket wrapper base r0", "$ r4 = r8 endpoint", "$ z0 = $ r4 be run", "if $ z0 == 0 goto label1", "if r2 ! = null goto label2", "label r6 = new java util concurrent reject execution exception", "specialinvoke r6 < init >", "throw r6", "if r2 ! = null goto label2", "label r2 execute r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tomcat util thread limit latch r0", "$ r1 = r2 count", "$ l0 = $ r1 get", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache tomcat util thread limit latch r0", "r1 limit = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tomcat util thread limit latch r0", "$ r1 = r2 sync", "$ z0 = $ r1 have queue thread", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com github fge uritemplate var specs variable spec r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new org codehaus httpcache4j uri u r i builder", "$ r3 = java util optional of nullable r1", "r11 = org codehaus httpcache4j uri u r i builder r0", "$ r9 = r11 scheme specific part", "r12 = org codehaus httpcache4j uri u r i builder r0", "$ r8 = r12 host", "r13 = org codehaus httpcache4j uri u r i builder r0", "$ r7 = r13 port", "r14 = org codehaus httpcache4j uri u r i builder r0", "$ r6 = r14 path", "r15 = org codehaus httpcache4j uri u r i builder r0", "$ r5 = r15 fragment", "r16 = org codehaus httpcache4j uri u r i builder r0", "$ r4 = r16 parameter", "r17 = org codehaus httpcache4j uri u r i builder r0", "$ z1 = r17 be path absolute", "r18 = org codehaus httpcache4j uri u r i builder r0", "$ z0 = r18 end with slash", "specialinvoke r10 < init > $ r3 $ r9 $ r8 $ r7 $ r6 $ r5 $ r4 $ z1 $ z0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = r1 iterator", "$ z0 = $ r3 have next", "if $ z0 ! = 0 goto label1", "r6 = org codehaus httpcache4j uri u r i builder r0", "return r6", "if $ z0 ! = 0 goto label1", "label r7 = org codehaus httpcache4j uri u r i builder r0", "$ r4 = r7 parameter", "r2 = $ r4 add r1", "r8 = org codehaus httpcache4j uri u r i builder r0", "$ r5 = r8 with parameter r2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r35 = org apache velocity app event event cartridge r0", "$ r2 = r35 rsvc", "if $ r2 ! = null goto label11", "r36 = org apache velocity app event event cartridge r0", "r36 rsvc = r1", "r37 = org apache velocity app event event cartridge r0", "$ r5 = r37 reference handler", "r27 = $ r5 iterator", "label $ z0 = r27 have next", "if $ z0 == 0 goto label03", "$ r23 = r27 next", "r28 = org apache velocity app event event handler $ r23", "$ z11 = r28 instanceof org apache velocity util runtime service aware", "if $ z11 == 0 goto label02", "r38 = org apache velocity app event event cartridge r0", "$ r24 = r38 initialize handler", "$ z12 = $ r24 contain r28", "if $ z12 ! = 0 goto label02", "$ r25 = org apache velocity util runtime service aware r28", "$ r25 set runtime service r1", "r39 = org apache velocity app event event cartridge r0", "$ r26 = r39 initialize handler", "$ r26 add r28", "label goto label01", "if $ z0 == 0 goto label03", "label r40 = org apache velocity app event event cartridge r0", "$ r6 = r40 method exception handler", "if $ r6 == null goto label04", "r41 = org apache velocity app event event cartridge r0", "$ r16 = r41 method exception handler", "$ z8 = $ r16 instanceof org apache velocity util runtime service aware", "if $ z8 == 0 goto label04", "r42 = org apache velocity app event event cartridge r0", "$ r18 = r42 initialize handler", "r43 = org apache velocity app event event cartridge r0", "$ r17 = r43 method exception handler", "$ z9 = $ r18 contain $ r17", "if $ z9 ! = 0 goto label04", "r44 = org apache velocity app event event cartridge r0", "$ r19 = r44 method exception handler", "$ r20 = org apache velocity util runtime service aware $ r19", "$ r20 set runtime service r1", "r45 = org apache velocity app event event cartridge r0", "$ r22 = r45 initialize handler", "r46 = org apache velocity app event event cartridge r0", "$ r21 = r46 method exception handler", "$ r22 add $ r21", "label r47 = org apache velocity app event event cartridge r0", "$ r29 = r47 include handler", "r30 = $ r29 iterator", "label $ z14 = r30 have next", "if $ z14 == 0 goto label07", "$ r12 = r30 next", "r31 = org apache velocity app event event handler $ r12", "$ z5 = r31 instanceof org apache velocity util runtime service aware", "if $ z5 == 0 goto label06", "r48 = org apache velocity app event event cartridge r0", "$ r13 = r48 initialize handler", "$ z6 = $ r13 contain r31", "if $ z6 ! = 0 goto label06", "$ r14 = org apache velocity util runtime service aware r31", "$ r14 set runtime service r1", "r49 = org apache velocity app event event cartridge r0", "$ r15 = r49 initialize handler", "$ r15 add r31", "label goto label05", "if $ z14 == 0 goto label07", "label r50 = org apache velocity app event event cartridge r0", "$ r7 = r50 invalid reference handler", "r32 = $ r7 iterator", "label $ z1 = r32 have next", "if $ z1 == 0 goto label10", "$ r8 = r32 next", "r33 = org apache velocity app event event handler $ r8", "$ z2 = r33 instanceof org apache velocity util runtime service aware", "if $ z2 == 0 goto label09", "r51 = org apache velocity app event event cartridge r0", "$ r9 = r51 initialize handler", "$ z3 = $ r9 contain r33", "if $ z3 ! = 0 goto label09", "$ r10 = org apache velocity util runtime service aware r33", "$ r10 set runtime service r1", "r52 = org apache velocity app event event cartridge r0", "$ r11 = r52 initialize handler", "$ r11 add r33", "label goto label08", "if $ z1 == 0 goto label10", "label goto label12", "label return", "if $ r2 ! = null goto label11", "label r53 = org apache velocity app event event cartridge r0", "$ r3 = r53 rsvc", "if $ r3 == r1 goto label12", "r34 = new org apache velocity exception velocity exception", "specialinvoke r34 < init > \\ `` an event cartridge can not be use by several different runtime service instances\\ ``", "r54 = java lang throwable r34", "throw r54"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache velocity app event event cartridge r0", "$ r2 = r3 invalid reference handler", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 to string", "$ r3 = org apache common lang3 string escape utils escape ecma script $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r5 = @ parameter4", "r38 = org apache velocity app event implement print exception r0", "$ r8 = r38 r", "$ r7 = org apache velocity app event implement print exception show_template_info", "z0 = $ r8 get boolean $ r7 0", "r39 = org apache velocity app event implement print exception r0", "$ r10 = r39 r", "$ r9 = org apache velocity app event implement print exception show_stack_trace", "z1 = $ r10 get boolean $ r9 0", "r37 = new java lang string builder", "specialinvoke r37 < init >", "$ r12 = r37 append \\ `` exception while execute method \\ ``", "$ r13 = r2 to string", "$ r14 = $ r12 append $ r13", "$ r15 = $ r14 append \\ `` \\ ``", "$ r15 append r3", "$ r17 = r37 append \\ `` \\ ``", "$ r18 = r4 get class", "$ r19 = $ r18 get name", "$ r20 = $ r17 append $ r19", "$ r21 = $ r20 append \\ `` \\ ``", "$ r22 = r4 get message", "$ r21 append $ r22", "if z0 == 0 goto label1", "$ r29 = r37 append \\ `` at \\ ``", "$ r30 = r5 get template name", "$ r31 = $ r29 append $ r30", "$ r32 = $ r31 append \\ `` line \\ ``", "$ i0 = r5 get line", "$ r33 = $ r32 append $ i0", "$ r34 = $ r33 append \\", "$ i1 = r5 get column", "$ r35 = $ r34 append $ i1", "$ r35 append \\ `` \\ ``", "label if z1 == 0 goto label2", "$ r25 = java lang system line separator", "$ r26 = r37 append $ r25", "$ r27 = org apache velocity app event implement print exception get stack trace r4", "$ r26 append $ r27", "label $ r24 = r37 to string", "return $ r24"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache velocity runtime runtime singleton get loader name for resource r0", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["$ r0 = org apache velocity runtime runtime singleton get log", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r5 = org apache velocity context internal context base r0", "$ r1 = r5 macro name stack", "$ z0 = $ r1 empty", "if $ z0 == 0 goto label1", "return \\ `` < undef > \\ ``", "if $ z0 == 0 goto label1", "label r6 = org apache velocity context internal context base r0", "$ r2 = r6 macro name stack", "$ r3 = $ r2 peek", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache velocity exception method invocation exception r0", "$ r1 = r2 method name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = lengthof r1", "r2 = org apache velocity io velocity writer r0", "r2 write r1 0 $ i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r8 = org apache velocity runtime directive macro parse exception r0", "$ r1 = r8 current token", "if $ r1 == null goto label1", "r9 = org apache velocity runtime directive macro parse exception r0", "$ r4 = r9 current token", "$ r5 = $ r4 next", "if $ r5 == null goto label1", "r10 = org apache velocity runtime directive macro parse exception r0", "$ r6 = r10 current token", "$ r7 = $ r6 next", "$ i1 = $ r7 begin column", "return $ i1", "if $ r5 == null goto label1", "label r11 = org apache velocity runtime directive macro parse exception r0", "$ r2 = r11 current token", "if $ r2 == null goto label2", "r12 = org apache velocity runtime directive macro parse exception r0", "$ r3 = r12 current token", "$ i0 = $ r3 begin column", "return $ i0", "if $ r2 == null goto label2", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ this", "r3 = new org apache velocity runtime directive stop command", "r4 = org apache velocity runtime directive scope r0", "$ r2 = r4 owner", "specialinvoke r3 < init > $ r2", "r5 = java lang throwable r3", "throw r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache velocity runtime directive scope r0", "$ r1 = r2 parent", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache velocity runtime parser node a s t block r0", "$ r1 = r2 postfix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r5 = new org apache velocity runtime parser node indentation fixer", "specialinvoke r5 < init > r1", "r6 = org apache velocity runtime parser node parser visitor r5", "r0 child accept r6 null", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache velocity util string utils format file string r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get log \\ `` parser\\ ``", "r9 = org apache velocity runtime parser pool impl r0", "r9 log = $ r2", "$ i0 = r1 get int \\ `` parser pool size\\", "r10 = org apache velocity runtime parser pool impl r0", "r10 max = $ i0", "r8 = new org apache velocity util simple pool", "r11 = org apache velocity runtime parser pool impl r0", "$ i1 = r11 max", "specialinvoke r8 < init > $ i1", "r12 = org apache velocity runtime parser pool impl r0", "r12 pool = r8", "i4 = 0", "label r13 = org apache velocity runtime parser pool impl r0", "$ i2 = r13 max", "if i4 > = $ i2 goto label2", "r14 = org apache velocity runtime parser pool impl r0", "$ r6 = r14 pool", "$ r7 = r1 create new parser", "$ r6 put $ r7", "i4 = i4 + 1", "goto label1", "if i4 > = $ i2 goto label2", "label r15 = org apache velocity runtime parser pool impl r0", "$ r4 = r15 log", "r16 = org apache velocity runtime parser pool impl r0", "$ i3 = r16 max", "$ r5 = java lang integer value of $ i3", "$ r4 debug \\ `` create \\ ' { } \\ ' parser \\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache velocity runtime resource resource r0", "r1 modification check interval = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache velocity runtime resource resource r0", "r2 name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache velocity runtime resource util string resource r0", "$ l0 = r1 last modified", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache velocity runtime resource util string resource r0", "r2 body = r1", "$ l0 = java lang system current time millis", "r3 = org apache velocity runtime resource util string resource r0", "r3 last modify = $ l0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache velocity runtime resource util string resource r0", "r1 last modified = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r19 = @ parameter1", "r20 = @ parameter2", "r2 = @ parameter3", "r3 = @ parameter4", "if r1 == null goto label1", "if r2 == null goto label1", "if r3 ! = null goto label2", "label r30 = org apache velocity runtime runtime instance r0", "$ r22 = r30 log", "$ r22 error \\ `` runtime instance invoke velocimacro invalid call vm name context and writer must not be null\\ ``", "r26 = new java lang null pointer exception", "specialinvoke r26 < init > \\ `` runtime instance invoke velocimacro invalid call vm name context and writer must not be null\\ ``", "throw r26", "if r3 ! = null goto label2", "label if r19 ! = null goto label3", "r19 = r1", "label if r20 ! = null goto label4", "r20 = newarray java lang string [ 0 ]", "label r31 = org apache velocity runtime runtime instance r0", "$ z0 = r31 be velocimacro r1 null", "if $ z0 ! = 0 goto label5", "r27 = new java lang string builder", "specialinvoke r27 < init >", "$ r14 = r27 append \\ `` runtime instance invoke velocimacro vm \\'\\ ``", "$ r15 = $ r14 append r1", "$ r16 = $ r15 append \\ `` \\ ' be not registered \\ ``", "r24 = $ r16 to string", "r32 = org apache velocity runtime runtime instance r0", "$ r17 = r32 log", "$ r17 error r24", "r28 = new org apache velocity exception velocity exception", "specialinvoke r28 < init > r24", "r33 = java lang throwable r28", "throw r33", "if $ z0 ! = 0 goto label5", "label r29 = new java lang string builder", "specialinvoke r29 < init > \\ `` #\\ ``", "r29 append r1", "r29 append \\ `` \\ ``", "r4 = r20", "i0 = lengthof r20", "i1 = 0", "label if i1 > = i0 goto label7", "r5 = r4 [ i1 ]", "r29 append \\ `` $ \\ ``", "r29 append r5", "i1 = i1 + 1", "goto label6", "label if i1 > = i0 goto label7", "label r29 append \\ `` \\ ``", "$ r10 = r29 to string", "r34 = org apache velocity runtime runtime instance r0", "$ z1 = r34 evaluate r2 r3 r19 $ r10", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [], [51], [52], [53], [54], [55], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache velocity runtime runtime instance r0", "$ r2 = r3 configuration", "$ i0 = $ r2 get int r1", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache velocity runtime runtime instance r0", "$ r2 = r4 application attribute", "$ r3 = $ r2 get r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache velocity runtime runtime singleton ri", "$ r1 set property r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache velocity runtime runtime singleton ri", "$ r2 = $ r1 get loader name for resource r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r19 = new org apache velocity context internal context adapter impl", "r18 = new org apache velocity velocity context", "specialinvoke r18 < init >", "r21 = org apache velocity context context r18", "specialinvoke r19 < init > r21", "label r22 = org apache velocity template r0", "$ r6 = r22 name", "r19 push current template name $ r6", "r19 set current resource r0", "r23 = org apache velocity template r0", "$ r7 = r23 data", "$ r9 = org apache velocity runtime parser node simple node $ r7", "r24 = org apache velocity template r0", "$ r8 = r24 rsvc", "r25 = org apache velocity context internal context adapter r19", "$ r9 init r25 $ r8", "r20 = new java lang string builder", "specialinvoke r20 < init >", "r26 = org apache velocity template r0", "$ r12 = r26 scope name", "$ r13 = r20 append $ r12", "$ r14 = $ r13 append 46", "$ r15 = $ r14 append \\ `` provide scope control\\ ``", "r2 = $ r15 to string", "r27 = org apache velocity template r0", "$ r16 = r27 rsvc", "r28 = org apache velocity template r0", "$ z0 = r28 provide scope", "$ z1 = $ r16 get boolean r2 $ z0", "r29 = org apache velocity template r0", "r29 provide scope = $ z1", "label r19 pop current template name", "r19 set current resource null", "goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang unsupported operation exception", "specialinvoke $ r1 < init >", "throw $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache velocity util introspection class map r0", "$ r1 = r2 clazz", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = @ parameter1", "z0 = @ parameter2", "if r1 == r4 goto label1", "$ z1 = org apache velocity util introspection introspection utils be method invocation convertible r1 r4 z0", "if $ z1 ! = 0 goto label1", "r5 = org apache velocity util introspection conversion handler impl r0", "$ r2 = r5 get need converter r1 r4", "if $ r2 == null goto label2", "label return 1", "if $ r2 == null goto label2", "label if z0 == 0 goto label4", "$ z2 = r1 be array", "if $ z2 == 0 goto label4", "$ z3 = r4 be array", "if $ z3 == 0 goto label3", "r4 = r4 get component type", "label $ r3 = r1 get component type", "r6 = org apache velocity util introspection conversion handler impl r0", "$ z4 = r6 be explicitly convertible $ r3 r4 0", "return $ z4", "if $ z2 == 0 goto label4", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache velocity velocity context r0", "$ r2 = r4 context", "$ r3 = $ r2 get r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "return \\ `` velocity\\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache velocity script velocity script engine factory mime type", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = io vertx codegen writer code writer r0", "r1 println", "r2 = io vertx codegen writer code writer r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = io vertx core cli option r0", "r1 hidden = z0", "r2 = io vertx core cli option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "specialinvoke r0 ensure validity", "r4 = io vertx core cli type argument r0", "$ r1 = r4 type", "if $ r1 ! = null goto label1", "r3 = new java lang illegal argument exception", "specialinvoke r3 < init > \\ `` type must not be null\\ ``", "throw r3", "if $ r1 ! = null goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx core deployment option r0", "$ r1 = r2 isolation group", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io vertx core deployment option r0", "r2 isolation group = r1", "r3 = io vertx core deployment option r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = io vertx core deployment option r0", "r1 instance = i0", "r2 = io vertx core deployment option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > = 0 goto label1", "r2 = new java lang illegal argument exception", "specialinvoke r2 < init > \\ `` cache negative time to live must be > = 0\\ ``", "throw r2", "if i0 > = 0 goto label1", "label r3 = io vertx core dns address resolver option r0", "r3 cache negative time to live = i0", "r4 = io vertx core dns address resolver option r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx core eventbus delivery option r0", "$ r1 = r2 header", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io vertx core eventbus event bus option r0", "r2 host = r1", "r3 = io vertx core eventbus event bus option r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = specialinvoke r0 to json", "r2 = io vertx core http http client option r0", "io vertx core http http client option converter to json r2 r1", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = io vertx core http http client option r0", "$ z0 = r1 pipelining", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = io vertx core http http client option r0", "r1 pipelining = z0", "r2 = io vertx core http http client option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = io vertx core http http client option r0", "r1 default port = i0", "r2 = io vertx core http http client option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = io vertx core http http server option r0", "r1 max web socket message size = i0", "r2 = io vertx core http http server option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx core http request option r0", "specialinvoke r7 check header", "java util object require non null r1 \\ `` no null key accepted\\ ``", "java util object require non null r2 \\ `` no null value accepted\\ ``", "r8 = io vertx core http request option r0", "$ r5 = r8 header", "$ r5 add r1 r2", "r9 = io vertx core http request option r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io vertx core http web socket connect option r0", "r2 version = r1", "r3 = io vertx core http web socket connect option r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx core impl launcher command bare command r0", "$ r3 = r5 execution context", "r2 = $ r3 main", "$ z0 = r2 instanceof io vertx core impl launcher vertx lifecycle hook", "if $ z0 == 0 goto label1", "$ r4 = io vertx core impl launcher vertx lifecycle hook r2", "$ r4 before start vertx r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = java lang thread current thread", "r2 = $ r4 get context class loader", "label $ r5 = java lang thread current thread", "r17 = io vertx core impl launcher command classpath handler r0", "$ r6 = r17 classloader", "if $ r6 == null goto label2", "r18 = io vertx core impl launcher command classpath handler r0", "$ r14 = r18 classloader", "goto label3", "label $ r5 set context class loader $ r14", "r15 = io vertx core vertx vertx r1", "label $ r8 = java lang thread current thread", "$ r8 set context class loader r2", "return r15", "if $ r6 == null goto label2", "label $ r7 = r0 get class", "$ r14 = $ r7 get class loader"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r6 = java lang thread current thread", "r3 = $ r6 get context class loader", "label $ r7 = java lang thread current thread", "r17 = io vertx core impl launcher command classpath handler r0", "$ r8 = r17 classloader", "if $ r8 == null goto label2", "r18 = io vertx core impl launcher command classpath handler r0", "$ r16 = r18 classloader", "goto label3", "label $ r7 set context class loader $ r16", "io vertx core vertx cluster vertx r1 r2", "label $ r10 = java lang thread current thread", "$ r10 set context class loader r3", "goto label9", "label return", "if $ r8 == null goto label2", "label $ r9 = r0 get class", "$ r16 = $ r9 get class loader"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r4 = new java lang thread", "specialinvoke r4 < init > r0", "r4 start", "$ r2 = io vertx core impl launcher command watcher logger", "$ r2 info \\ `` start the vert x application in redeploy mode\\ ``", "r5 = io vertx core impl launcher command watcher r0", "$ r3 = r5 deploy", "$ r3 handle null", "r6 = io vertx core impl launcher command watcher r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = io vertx core json jackson jackson codec from buffer r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = io vertx core spi json json codec instance", "$ r2 = $ r1 to string r0 1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "java util object require non null r1", "r8 = io vertx core json json object r0", "$ r4 = r8 map", "$ r5 = $ r4 get r1", "r2 = java lang string $ r5", "if r2 ! = null goto label1", "$ r7 = null", "goto label2", "label return $ r7", "if r2 ! = null goto label1", "label $ r6 = java util base64 get decoder", "$ r7 = $ r6 decode r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx core json json object r0", "$ r1 = r2 map", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io vertx core net jks option r0", "r2 password = r1", "r3 = io vertx core net jks option r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io vertx core net jks option r0", "r2 path = r1", "r3 = io vertx core net jks option r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ b1 = l0 cmp 1l", "if $ b1 > = 0 goto label1", "r2 = new java lang illegal argument exception", "specialinvoke r2 < init > \\ `` reconnect interval must be > = 1\\ ``", "throw r2", "if $ b1 > = 0 goto label1", "label r3 = io vertx core net net client option r0", "r3 reconnect interval = l0", "r4 = io vertx core net net client option r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = io vertx core net network option r0", "$ i0 = r1 receive buffer size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = io vertx core net client option base r0", "$ r1 = r2 set receive buffer size i0", "r3 = io vertx core net network option $ r1", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ z1 = 1", "goto label2", "label io vertx core impl argument require $ z1 \\ `` null cert path\\ ``", "r3 = io vertx core net pem key cert option r0", "$ r2 = r3 cert path", "$ r2 add r1", "r4 = io vertx core net pem key cert option r0", "return r4", "if r1 == null goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "java util object require non null r1 \\ `` no null certificate accepted\\ ``", "r4 = io vertx core net pem trust option r0", "$ r3 = r4 cert value", "$ r3 add r1", "r5 = io vertx core net pem trust option r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io vertx core net pfx option r0", "r2 value = r1", "r3 = io vertx core net pfx option r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io vertx core net client option base r0", "$ r2 = r3 set pem key cert option r1", "r4 = io vertx core net t c p s s l option $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io vertx core net client option base r0", "$ r2 = r3 set trust option r1", "r4 = io vertx core net t c p s s l option $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = io vertx core net t c p s s l option r0", "$ r1 = r4 trust option", "$ z0 = $ r1 instanceof io vertx core net pem trust option", "if $ z0 == 0 goto label1", "r5 = io vertx core net t c p s s l option r0", "$ r2 = r5 trust option", "$ r3 = io vertx core net pem trust option $ r2", "goto label2", "label return $ r3", "if $ z0 == 0 goto label1", "label $ r3 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io vertx core net client option base r0", "$ r2 = r3 add crl path r1", "r4 = io vertx core net t c p s s l option $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "java util object require non null r1 \\ `` delim\\ ``", "r4 = io vertx core parsetools impl record parser impl r0", "r4 delimit = 1", "$ r3 = r1 get bytes", "r5 = io vertx core parsetools impl record parser impl r0", "r5 delim = $ r3", "r6 = io vertx core parsetools impl record parser impl r0", "r6 delim po = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx core vertx option r0", "$ r1 = r2 event bus option", "$ z0 = $ r1 be cluster", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex amqp amqp client r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex amqp amqp client $ 4", "r8 = io vertx reactivex amqp amqp client r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 create sender r1 r9", "r10 = io vertx reactivex amqp amqp client r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx reactivex cassandra cassandra client r0", "$ r1 = r3 delegate", "$ r1 close", "r4 = io vertx reactivex cassandra cassandra client r0", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex cassandra cassandra client r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex cassandra cassandra client $ 3", "r8 = io vertx reactivex cassandra cassandra client r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 execute r1 r9", "r10 = io vertx reactivex cassandra cassandra client r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex cassandra cassandra client r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex cassandra cassandra client $ 4", "r8 = io vertx reactivex cassandra cassandra client r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 query stream r1 r9", "r10 = io vertx reactivex cassandra cassandra client r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex circuitbreaker circuit breaker r0", "$ r2 = r4 delegate", "$ r2 half open handler r1", "r5 = io vertx reactivex circuitbreaker circuit breaker r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 get delegate", "$ r4 = io vertx circuitbreaker hystrix metric handler create $ r3 r1", "r2 = io vertx reactivex circuitbreaker hystrix metric handler new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io vertx reactivex config config retriever r0", "$ r2 = r3 delegate", "$ r2 get config r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r8 = io vertx reactivex core http http client r0", "$ r5 = r8 delegate", "r7 = new io vertx reactivex core http http client $ 16", "r9 = io vertx reactivex core http http client r0", "specialinvoke r7 < init > r9 r3", "r10 = io vertx core handler r7", "$ r5 get now r1 r2 r10", "r11 = io vertx reactivex core http http client r0", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex core http http client r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex core http http client $ 37", "r8 = io vertx reactivex core http http client r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 option now r1 r9", "r10 = io vertx reactivex core http http client r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r9 = io vertx reactivex core http http client r0", "$ r6 = r9 delegate", "r8 = new io vertx reactivex core http http client $ 42", "r10 = io vertx reactivex core http http client r0", "specialinvoke r8 < init > r10 r3", "r11 = io vertx core handler r8", "$ r7 = $ r6 put i0 r1 r2 r11", "r4 = io vertx reactivex core http http client request new instance $ r7", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = io vertx reactivex core http http client r0", "$ r5 = r8 delegate", "r7 = new io vertx reactivex core http http client $ 45", "r9 = io vertx reactivex core http http client r0", "specialinvoke r7 < init > r9 r2", "r10 = io vertx core handler r7", "$ r6 = $ r5 put abs r1 r10", "r3 = io vertx reactivex core http http client request new instance $ r6", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r9 = io vertx reactivex core http http client r0", "$ r6 = r9 delegate", "r8 = new io vertx reactivex core http http client $ 47", "r10 = io vertx reactivex core http http client r0", "specialinvoke r8 < init > r10 r3", "r11 = io vertx core handler r8", "$ r7 = $ r6 delete i0 r1 r2 r11", "r4 = io vertx reactivex core http http client request new instance $ r7", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r8 = io vertx reactivex core http http client r0", "$ r5 = r8 delegate", "r7 = new io vertx reactivex core http http client $ 52", "r9 = io vertx reactivex core http http client r0", "specialinvoke r7 < init > r9 r3", "r10 = io vertx core handler r7", "$ r5 websocket i0 r1 r2 r10", "r11 = io vertx reactivex core http http client r0", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r9 = io vertx reactivex core http http client r0", "$ r6 = r9 delegate", "r8 = new io vertx reactivex core http http client $ 54", "r10 = io vertx reactivex core http http client r0", "specialinvoke r8 < init > r10 r3", "r11 = io vertx core handler r8", "$ r6 websocket i0 r1 r2 r11 r4", "r12 = io vertx reactivex core http http client r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex core http http client request r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex core http http client request $ 3", "r7 = io vertx reactivex core http http client request r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 connection handler r8", "r9 = io vertx reactivex core http http client request r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex core http http client response r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex core http http client response $ 2", "r7 = io vertx reactivex core http http client response r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 body handler r8", "r9 = io vertx reactivex core http http client response r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex core http http client response r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex core http http client response $ 3", "r7 = io vertx reactivex core http http client response r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 custom frame handler r8", "r9 = io vertx reactivex core http http client response r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex core http http connection r0", "$ r2 = r4 delegate", "$ r2 shutdown handler r1", "r5 = io vertx reactivex core http http connection r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex core http http server r0", "$ r2 = r4 delegate", "$ r2 exception handler r1", "r5 = io vertx reactivex core http http server r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r6 = io vertx reactivex core http http server r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex core http http server $ 7", "r7 = io vertx reactivex core http http server r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 listen i0 r8", "r9 = io vertx reactivex core http http server r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new io vertx core deployment option", "specialinvoke $ r2 < init >", "$ r3 = io vertx reactivex core rx helper deploy verticle r0 r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx reactivex ext auth chain auth r0", "$ r1 = r2 delegate", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex ext auth hash strategy r0", "$ r3 = r5 delegate", "$ r4 = $ r3 get r1", "r2 = io vertx reactivex ext auth hash algorithm new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = io vertx reactivex ext auth hash strategy r0", "$ r3 = r6 delegate", "$ r4 = r2 get delegate", "$ r3 put r1 $ r4", "r7 = io vertx reactivex ext auth hash strategy r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "r5 = io vertx reactivex ext auth jdbc j d b c auth r0", "$ r4 = r5 delegate", "r3 = $ r4 compute hash r1 r2 i0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = r0 get delegate", "$ r3 = io vertx ext auth jdbc j d b c hash strategy create s h a512 $ r2", "r1 = io vertx reactivex ext auth jdbc j d b c hash strategy new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = r0 get delegate", "$ r3 = io vertx ext auth jdbc j d b c hash strategy create p b k d f2 $ r2", "r1 = io vertx reactivex ext auth jdbc j d b c hash strategy new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex ext auth mongo hash strategy r0", "$ r3 = r5 delegate", "$ r4 = r1 get delegate", "r2 = $ r3 get salt $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io vertx reactivex ext auth mongo hash strategy r0", "$ r2 = r3 delegate", "$ r2 set algorithm r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext auth mongo mongo auth r0", "$ r2 = r4 delegate", "$ r2 set hash algorithm r1", "r5 = io vertx reactivex ext auth mongo mongo auth r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = r0 get delegate", "r5 = new io vertx reactivex ext auth oauth2 provider azure a d auth $ 1", "specialinvoke r5 < init > r2", "r6 = io vertx core handler r5", "io vertx ext auth oauth2 provider azure a d auth discover $ r3 r1 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 get delegate", "$ r5 = io vertx ext auth oauth2 provider facebook auth create $ r4 r1 r2", "r3 = io vertx reactivex ext auth oauth2 o auth2 auth new instance $ r5", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 get delegate", "$ r5 = io vertx ext auth oauth2 provider github auth create $ r4 r1 r2", "r3 = io vertx reactivex ext auth oauth2 o auth2 auth new instance $ r5", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 get delegate", "$ r5 = io vertx ext auth oauth2 provider google auth create $ r4 r1 r2", "r3 = io vertx reactivex ext auth oauth2 o auth2 auth new instance $ r5", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 get delegate", "$ r5 = io vertx ext auth oauth2 provider twitter auth create $ r4 r1 r2", "r3 = io vertx reactivex ext auth oauth2 o auth2 auth new instance $ r5", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex ext consul consul client r0", "$ r3 = r5 delegate", "$ r3 delete value r1 r2", "r6 = io vertx reactivex ext consul consul client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex ext consul consul client r0", "$ r3 = r5 delegate", "$ r3 health state r1 r2", "r6 = io vertx reactivex ext consul consul client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex ext dropwizard metric service r0", "$ r3 = r5 delegate", "$ r4 = r1 get delegate", "r2 = $ r3 get metric snapshot $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex ext dropwizard metric service r0", "$ r3 = r5 delegate", "$ r4 = r1 get delegate", "r2 = $ r3 get metric snapshot $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx reactivex ext eventbus bridge tcp tcp event bus bridge r0", "$ r1 = r3 delegate", "$ r1 listen", "r4 = io vertx reactivex ext eventbus bridge tcp tcp event bus bridge r0", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ r1 = new io vertx reactivex ext mail mail client", "specialinvoke $ r1 < init > r0", "goto label2", "label return $ r1", "if r0 == null goto label1", "label $ r1 = null"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = io vertx reactivex ext mongo mongo client r0", "$ r4 = r6 delegate", "$ r4 count r1 r2 r3", "r7 = io vertx reactivex ext mongo mongo client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r7 = io vertx reactivex ext mongo mongo client r0", "$ r5 = r7 delegate", "$ r5 remove one with option r1 r2 r3 r4", "r8 = io vertx reactivex ext mongo mongo client r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex ext mongo mongo client r0", "$ r3 = r5 delegate", "$ r3 list index r1 r2", "r6 = io vertx reactivex ext mongo mongo client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = io vertx reactivex ext mongo mongo client r0", "$ r4 = r6 delegate", "$ r4 drop index r1 r2 r3", "r7 = io vertx reactivex ext mongo mongo client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = io vertx reactivex ext mongo mongo client r0", "$ r4 = r6 delegate", "$ r4 run command r1 r2 r3", "r7 = io vertx reactivex ext mongo mongo client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext shell command command r0", "$ r2 = r4 delegate", "$ r3 = r1 get delegate", "$ r2 complete $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex ext shell command command builder r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex ext shell command command builder $ 1", "r7 = io vertx reactivex ext shell command command builder r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 process handler r8", "r9 = io vertx reactivex ext shell command command builder r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex ext shell command command builder r0", "$ r3 = r6 delegate", "$ r4 = r1 get delegate", "$ r5 = $ r3 build $ r4", "r2 = io vertx reactivex ext shell command command new instance $ r5", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = io vertx reactivex ext shell shell server r0", "$ r2 = r4 delegate", "$ r3 = $ r2 create shell", "r1 = io vertx reactivex ext shell shell new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex ext shell system job r0", "$ r2 = r5 delegate", "$ r3 = r1 get delegate", "$ r2 set tty $ r3", "r6 = io vertx reactivex ext shell system job r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx reactivex ext shell system process r0", "$ r1 = r2 delegate", "$ r1 resume", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = io vertx reactivex ext shell term term r0", "$ r5 = r7 delegate", "r6 = new io vertx reactivex ext shell term term $ 1", "r8 = io vertx reactivex ext shell term term r0", "specialinvoke r6 < init > r8 r3", "r9 = io vertx core handler r6", "$ r5 readline r1 r2 r9", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 get delegate", "$ r4 = io vertx ext shell term term server create http term server $ r3 r1", "r2 = io vertx reactivex ext shell term term server new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex ext sql s q l client r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex ext sql s q l client $ 1", "r7 = io vertx reactivex ext sql s q l client r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 get connection r8", "r9 = io vertx reactivex ext sql s q l client r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = @ parameter1", "r4 = io vertx reactivex ext sql s q l connection r0", "$ r2 = r4 delegate", "$ r2 set auto commit z0 r1", "r5 = io vertx reactivex ext sql s q l connection r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = io vertx reactivex ext stomp stomp client connection r0", "$ r4 = r7 delegate", "$ r5 = r2 get delegate", "$ r4 send r1 $ r5 r3", "r8 = io vertx reactivex ext stomp stomp client connection r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r8 = io vertx reactivex ext stomp stomp client connection r0", "$ r5 = r8 delegate", "$ r6 = r3 get delegate", "$ r5 send r1 r2 $ r6 r4", "r9 = io vertx reactivex ext stomp stomp client connection r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r7 = io vertx reactivex ext stomp stomp client connection r0", "$ r6 = r7 delegate", "r5 = $ r6 subscribe r1 r2 r3 r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex ext stomp stomp server r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex ext stomp stomp server $ 5", "r7 = io vertx reactivex ext stomp stomp server r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 write frame handler r8", "r9 = io vertx reactivex ext stomp stomp server r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx reactivex ext unit async r0", "$ r1 = r2 delegate", "$ r1 count down", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = io vertx reactivex ext unit report test result r0", "$ r2 = r5 cached_0", "if $ r2 == null goto label1", "r6 = io vertx reactivex ext unit report test result r0", "$ r4 = r6 cached_0", "return $ r4", "if $ r2 == null goto label1", "label r7 = io vertx reactivex ext unit report test result r0", "$ r3 = r7 delegate", "r1 = $ r3 name", "r8 = io vertx reactivex ext unit report test result r0", "r8 cached_0 = r1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = io vertx reactivex ext unit test context r0", "$ r1 = r3 delegate", "$ r1 assert true z0", "r4 = io vertx reactivex ext unit test context r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex ext unit test context r0", "$ r3 = r5 delegate", "$ r3 assert not equal r1 r2", "r6 = io vertx reactivex ext unit test context r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex ext unit test suite r0", "$ r4 = r7 delegate", "$ r5 = r1 get delegate", "$ r6 = $ r4 run $ r5 r2", "r3 = io vertx reactivex ext unit test completion new instance $ r6", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex ext web api contract openapi3 open a p i3 router factory r0", "$ r2 = r5 delegate", "$ r3 = r1 get delegate", "$ r2 set body handler $ r3", "return r0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx reactivex ext web api request parameter r0", "$ r2 = r3 delegate", "r1 = $ r2 cookie parameter names", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx reactivex ext web api request parameter r0", "$ r2 = r3 delegate", "r1 = $ r2 form parameter names", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "r5 = io vertx reactivex ext web api validation h t t p request validation handler r0", "$ r3 = r5 delegate", "$ r3 add query params array with pattern r1 r2 z0", "r6 = io vertx reactivex ext web api validation h t t p request validation handler r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "r5 = io vertx reactivex ext web api validation h t t p request validation handler r0", "$ r3 = r5 delegate", "$ r3 add form params array with pattern r1 r2 z0", "r6 = io vertx reactivex ext web api validation h t t p request validation handler r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext web api validation h t t p request validation handler r0", "$ r2 = r4 delegate", "$ r2 add expect content type r1", "r5 = io vertx reactivex ext web api validation h t t p request validation handler r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = io vertx ext web api validation parameter type validator create string enum type validator r0", "r1 = io vertx reactivex ext web api validation parameter type validator new instance $ r2", "return r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext web client http request r0", "$ r2 = r4 delegate", "$ r2 raw method r1", "r5 = io vertx reactivex ext web client http request r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex ext web client http request r0", "$ r3 = r5 delegate", "$ r3 set query param r1 r2", "r6 = io vertx reactivex ext web client http request r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = io vertx reactivex ext web client http request r0", "$ r1 = r3 delegate", "$ r1 follow redirects z0", "r4 = io vertx reactivex ext web client http request r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 get delegate", "$ r4 = io vertx ext web client web client create $ r3 r1", "r2 = io vertx reactivex ext web client web client new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = io vertx reactivex ext web common template template engine r0", "$ r5 = r7 delegate", "r6 = new io vertx reactivex ext web common template template engine $ 1", "r8 = io vertx reactivex ext web common template template engine r0", "specialinvoke r6 < init > r8 r3", "r9 = io vertx core handler r6", "$ r5 render r1 r2 r9", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["z0 = io vertx ext web common web environment development", "return z0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx reactivex ext web cookie r0", "$ r1 = r2 delegate", "z0 = $ r1 be change", "return z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext web handler basic auth handler r0", "$ r2 = r4 delegate", "$ r2 add authority r1", "return r0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = io vertx reactivex ext web handler body handler r0", "$ r1 = r3 delegate", "$ r1 set handle file uploads z0", "r4 = io vertx reactivex ext web handler body handler r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = io vertx reactivex ext web handler body handler r0", "$ r1 = r3 delegate", "$ r1 set preallocate body buffer z0", "r4 = io vertx reactivex ext web handler body handler r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r1 = io vertx ext web handler cookie handler create", "r0 = io vertx reactivex ext web handler cookie handler new instance $ r1", "return r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ r1 = new io vertx reactivex ext web handler digest auth handler", "specialinvoke $ r1 < init > r0", "goto label2", "label return $ r1", "if r0 == null goto label1", "label $ r1 = null"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ r1 = new io vertx reactivex ext web handler favicon handler", "specialinvoke $ r1 < init > r0", "goto label2", "label return $ r1", "if r0 == null goto label1", "label $ r1 = null"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex ext web handler graphql apollo w s handler r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex ext web handler graphql apollo w s handler $ 1", "r7 = io vertx reactivex ext web handler graphql apollo w s handler r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 connection handler r8", "r9 = io vertx reactivex ext web handler graphql apollo w s handler r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["$ r1 = io vertx ext web handler response content type handler create", "r0 = io vertx reactivex ext web handler response content type handler new instance $ r1", "return r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext web handler session handler r0", "$ r2 = r4 delegate", "$ r2 set session cookie path r1", "r5 = io vertx reactivex ext web handler session handler r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = io vertx reactivex ext web handler session handler r0", "$ r1 = r3 delegate", "$ r1 set min length i0", "r4 = io vertx reactivex ext web handler session handler r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = io vertx reactivex ext web handler static handler r0", "$ r1 = r3 delegate", "$ r1 set directory list z0", "r4 = io vertx reactivex ext web handler static handler r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext web handler static handler r0", "$ r2 = r4 delegate", "$ r2 skip compression for medium type r1", "r5 = io vertx reactivex ext web handler static handler r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ r1 = new io vertx reactivex ext web handler template handler", "specialinvoke $ r1 < init > r0", "goto label2", "label return $ r1", "if r0 == null goto label1", "label $ r1 = null"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = io vertx reactivex ext web route r0", "$ r1 = r3 delegate", "$ r1 use normalise path z0", "r4 = io vertx reactivex ext web route r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext web route r0", "$ r2 = r4 delegate", "$ r2 set regex group names r1", "r5 = io vertx reactivex ext web route r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = io vertx reactivex ext web rout context r0", "$ r1 = r2 delegate", "z0 = $ r1 remove end handler i0", "return z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext web rout context r0", "$ r2 = r4 delegate", "$ r3 = r1 get delegate", "$ r2 set user $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "l0 = @ parameter2", "$ r3 = r0 get delegate", "$ r4 = io vertx ext web sstore clustered session store create $ r3 r1 l0", "r2 = io vertx reactivex ext web sstore clustered session store new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = io vertx reactivex kafka admin kafka admin client r0", "$ r3 = r4 delegate", "$ r3 create topic r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx reactivex kafka admin kafka admin client r0", "$ r1 = r2 delegate", "$ r1 close", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex kafka client consumer kafka consumer r0", "$ r3 = r5 delegate", "$ r3 assign r1 r2", "r6 = io vertx reactivex kafka client consumer kafka consumer r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx reactivex kafka client consumer kafka consumer r0", "$ r1 = r2 delegate", "$ r1 close", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = io vertx reactivex kafka client consumer kafka consumer r0", "$ r3 = r4 delegate", "$ r3 end offset r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex kafka client producer kafka producer r0", "$ r2 = kafka producer $ lambda_rx partition for_5__7 bootstrap $ r4 r1", "$ r3 = io vertx reactivex impl async result single to single $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r4 = io vertx reactivex mqtt mqtt client r0", "$ r2 = r4 delegate", "$ r2 subscribe r1 i0", "r5 = io vertx reactivex mqtt mqtt client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex mqtt mqtt client r0", "$ r2 = r4 delegate", "$ r2 unsubscribe r1", "r5 = io vertx reactivex mqtt mqtt client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex mqtt mqtt endpoint r0", "$ r2 = r4 delegate", "$ r2 publish completion handler r1", "r5 = io vertx reactivex mqtt mqtt endpoint r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = io vertx reactivex mqtt mqtt endpoint r0", "$ r1 = r3 delegate", "$ r1 publish complete i0", "r4 = io vertx reactivex mqtt mqtt endpoint r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "z0 = @ parameter3", "z1 = @ parameter4", "r7 = io vertx reactivex mqtt mqtt endpoint r0", "$ r4 = r7 delegate", "$ r5 = r2 get delegate", "$ r4 publish r1 $ r5 r3 z0 z1", "r8 = io vertx reactivex mqtt mqtt endpoint r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx reactivex mqtt mqtt endpoint r0", "$ r1 = r3 delegate", "$ r1 pong", "r4 = io vertx reactivex mqtt mqtt endpoint r0", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = r0 get delegate", "$ r3 = io vertx mqtt mqtt server create $ r2", "r1 = io vertx reactivex mqtt mqtt server new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx reactivex mqtt mqtt server r0", "$ r1 = r3 delegate", "$ r1 listen", "r4 = io vertx reactivex mqtt mqtt server r0", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex pgclient pg connection r0", "$ r3 = r5 delegate", "$ r4 = $ r3 cancel request r1", "r2 = io vertx reactivex pgclient pg connection new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex pgclient pubsub pg subscriber r0", "$ r3 = r5 delegate", "$ r4 = $ r3 channel r1", "r2 = io vertx reactivex pgclient pubsub pg channel new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = io vertx reactivex rabbitmq envelope r0", "$ r2 = r5 cached_3", "if $ r2 == null goto label1", "r6 = io vertx reactivex rabbitmq envelope r0", "$ r4 = r6 cached_3", "return $ r4", "if $ r2 == null goto label1", "label r7 = io vertx reactivex rabbitmq envelope r0", "$ r3 = r7 delegate", "r1 = $ r3 rout key", "r8 = io vertx reactivex rabbitmq envelope r0", "r8 cached_3 = r1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "z0 = @ parameter2", "r1 = @ parameter3", "r3 = io vertx reactivex rabbitmq rabbit m q client r0", "$ r2 = r3 delegate", "$ r2 basic qos i0 i1 z0 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r6 = io vertx reactivex rabbitmq rabbit m q client r0", "$ r5 = r6 delegate", "$ r5 exchange unbind r1 r2 r3 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx reactivex rabbitmq rabbit m q client r0", "$ r1 = r2 delegate", "z0 = $ r1 be connect", "return z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 7", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 bitfield r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 25", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 dump r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 36", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 geodist r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r9 = io vertx reactivex redis client redis a p i r0", "$ r6 = r9 delegate", "r8 = new io vertx reactivex redis client redis a p i $ 45", "r10 = io vertx reactivex redis client redis a p i r0", "specialinvoke r8 < init > r10 r4", "r11 = io vertx core handler r8", "$ r6 getrange r1 r2 r3 r11", "r12 = io vertx reactivex redis client redis a p i r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r9 = io vertx reactivex redis client redis a p i r0", "$ r6 = r9 delegate", "r8 = new io vertx reactivex redis client redis a p i $ 52", "r10 = io vertx reactivex redis client redis a p i r0", "specialinvoke r8 < init > r10 r4", "r11 = io vertx core handler r8", "$ r6 hincrbyfloat r1 r2 r3 r11", "r12 = io vertx reactivex redis client redis a p i r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 56", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 hmset r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 62", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 hvals r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r9 = io vertx reactivex redis client redis a p i r0", "$ r6 = r9 delegate", "r8 = new io vertx reactivex redis client redis a p i $ 80", "r10 = io vertx reactivex redis client redis a p i r0", "specialinvoke r8 < init > r10 r4", "r11 = io vertx core handler r8", "$ r6 ltrim r1 r2 r3 r11", "r12 = io vertx reactivex redis client redis a p i r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 102", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 psubscribe r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 140", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 slowlog r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r9 = io vertx reactivex redis client redis a p i r0", "$ r6 = r9 delegate", "r8 = new io vertx reactivex redis client redis a p i $ 142", "r10 = io vertx reactivex redis client redis a p i r0", "specialinvoke r8 < init > r10 r4", "r11 = io vertx core handler r8", "$ r6 smove r1 r2 r3 r11", "r12 = io vertx reactivex redis client redis a p i r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex redis client redis a p i r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex redis client redis a p i $ 161", "r7 = io vertx reactivex redis client redis a p i r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 unwatch r8", "r9 = io vertx reactivex redis client redis a p i r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 167", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 xdel r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 175", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 xrevrange r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 177", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 xtrim r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r9 = io vertx reactivex redis client redis a p i r0", "$ r6 = r9 delegate", "r8 = new io vertx reactivex redis client redis a p i $ 193", "r10 = io vertx reactivex redis client redis a p i r0", "specialinvoke r8 < init > r10 r4", "r11 = io vertx core handler r8", "$ r6 zremrangebyscore r1 r2 r3 r11", "r12 = io vertx reactivex redis client redis a p i r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 200", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 zunionstore r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx reactivex redis client redis connection r0", "$ r1 = r2 delegate", "$ r1 close", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = io vertx reactivex redis client request r0", "$ r1 = r3 delegate", "$ r1 arg z0", "r4 = io vertx reactivex redis client request r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx reactivex redis client response r0", "$ r2 = r3 delegate", "r1 = $ r2 to byte", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx reactivex redis client response r0", "$ r2 = r3 delegate", "r1 = $ r2 to boolean", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex redis redis client r0", "$ r2 = r4 delegate", "$ r2 bgrewriteaof r1", "r5 = io vertx reactivex redis redis client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex redis redis client r0", "$ r2 = r4 delegate", "$ r2 cluster reset r1", "r5 = io vertx reactivex redis redis client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex redis redis client r0", "$ r2 = r4 delegate", "$ r2 command r1", "r5 = io vertx reactivex redis redis client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex redis redis client r0", "$ r2 = r4 delegate", "$ r2 config resetstat r1", "r5 = io vertx reactivex redis redis client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex redis redis client r0", "$ r3 = r5 delegate", "$ r3 echo r1 r2", "r6 = io vertx reactivex redis redis client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex redis redis client r0", "$ r3 = r5 delegate", "$ r3 exist r1 r2", "r6 = io vertx reactivex redis redis client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex redis redis client r0", "$ r2 = r4 delegate", "$ r2 flushall r1", "r5 = io vertx reactivex redis redis client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = io vertx reactivex redis redis client r0", "$ r4 = r6 delegate", "$ r4 lpush r1 r2 r3", "r7 = io vertx reactivex redis redis client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex redis redis client r0", "$ r3 = r5 delegate", "$ r3 mget r1 r2", "r6 = io vertx reactivex redis redis client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex redis redis client r0", "$ r3 = r5 delegate", "$ r3 persist r1 r2", "r6 = io vertx reactivex redis redis client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = io vertx reactivex redis redis client r0", "$ r4 = r6 delegate", "$ r4 publish r1 r2 r3", "r7 = io vertx reactivex redis redis client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r6 = io vertx reactivex redis redis client r0", "$ r4 = r6 delegate", "$ r4 restore r1 l0 r2 r3", "r7 = io vertx reactivex redis redis client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex redis redis client r0", "$ r2 = r4 delegate", "$ r2 role r1", "r5 = io vertx reactivex redis redis client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = io vertx reactivex redis redis client r0", "$ r4 = r6 delegate", "$ r4 rpush many r1 r2 r3", "r7 = io vertx reactivex redis redis client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = io vertx reactivex redis redis client r0", "$ r4 = r6 delegate", "$ r4 sadd r1 r2 r3", "r7 = io vertx reactivex redis redis client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = io vertx reactivex redis redis client r0", "$ r4 = r7 delegate", "$ r5 = r2 get delegate", "$ r4 set binary r1 $ r5 r3", "r8 = io vertx reactivex redis redis client r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r6 = io vertx reactivex redis redis client r0", "$ r4 = r6 delegate", "$ r4 setex r1 l0 r2 r3", "r7 = io vertx reactivex redis redis client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = io vertx reactivex redis redis client r0", "$ r4 = r6 delegate", "$ r4 setnx r1 r2 r3", "r7 = io vertx reactivex redis redis client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex redis redis client r0", "$ r3 = r5 delegate", "$ r3 smembers r1 r2", "r6 = io vertx reactivex redis redis client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex redis redis client r0", "$ r3 = r5 delegate", "$ r3 spop r1 r2", "r6 = io vertx reactivex redis redis client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = io vertx reactivex redis redis client r0", "$ r4 = r6 delegate", "$ r4 srem r1 r2 r3", "r7 = io vertx reactivex redis redis client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex redis redis client r0", "$ r3 = r5 delegate", "$ r3 strlen r1 r2", "r6 = io vertx reactivex redis redis client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex redis redis client r0", "$ r3 = r5 delegate", "$ r3 subscribe r1 r2", "r6 = io vertx reactivex redis redis client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r6 = io vertx reactivex redis redis client r0", "$ r4 = r6 delegate", "$ r4 zadd r1 d0 r2 r3", "r7 = io vertx reactivex redis redis client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r5 = @ parameter4", "r8 = io vertx reactivex redis redis client r0", "$ r6 = r8 delegate", "$ r6 zrevrangebylex r1 r2 r3 r4 r5", "r9 = io vertx reactivex redis redis client r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = io vertx reactivex redis redis client r0", "$ r4 = r6 delegate", "$ r4 zrevrank r1 r2 r3", "r7 = io vertx reactivex redis redis client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r1 = @ parameter2", "r4 = io vertx reactivex redis redis client r0", "$ r2 = r4 delegate", "$ r2 swapdb i0 i1 r1", "r5 = io vertx reactivex redis redis client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex redis redis transaction r0", "$ r2 = r4 delegate", "$ r2 multi r1", "r5 = io vertx reactivex redis redis transaction r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex redis redis transaction r0", "$ r2 = r4 delegate", "$ r2 unwatch r1", "r5 = io vertx reactivex redis redis transaction r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex servicediscovery service discovery r0", "$ r2 = r4 delegate", "$ r3 = r1 get delegate", "z0 = $ r2 release $ r3", "return z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = io vertx reactivex servicediscovery service discovery r0", "$ r3 = r4 delegate", "$ r3 update r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = io vertx reactivex servicediscovery spi service publisher r0", "$ r3 = r4 delegate", "$ r3 update r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r4 = r0 get delegate", "r6 = new io vertx reactivex servicediscovery type mongo data source $ 3", "specialinvoke r6 < init > r3", "r7 = io vertx core handler r6", "io vertx servicediscovery type mongo data source get mongo client $ r4 r1 r2 r7", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex sqlclient pool r0", "$ r3 = r6 delegate", "$ r4 = $ r3 query r1", "$ r5 = io vertx reactivex sqlclient pool type_arg_0", "r2 = io vertx reactivex sqlclient query new instance $ r4 $ r5", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx reactivex sqlclient prepared statement r0", "$ r1 = r2 delegate", "$ r1 close", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx reactivex sqlclient row set r0", "$ r1 = r2 next", "r3 = io vertx reactivex sqlclient sql result $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx reactivex sqlclient transaction r0", "$ r1 = r2 delegate", "$ r1 close", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "$ r7 = io vertx sqlclient tuple of r0 r1 r2 r3 r4 r5", "r6 = io vertx reactivex sqlclient tuple new instance $ r7", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven wagon share http abstract http client wagon r0", "r2 proxy auth = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = r0 index of \\ `` \\ ``", "if i0 ! = -1 goto label1", "return \\ `` \\ ``", "if i0 ! = -1 goto label1", "label $ r1 = r0 substring 0 i0", "$ r2 = $ r1 trim", "return $ r2"], "adj": [[1], [2], [3], [], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache maven wagon resource resource r0", "$ l0 = r1 last modified", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jetty websocket api web socket policy r0", "$ l0 = r1 idle timeout", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ l1 = long i0", "r1 = org eclipse jetty websocket api web socket policy r0", "specialinvoke r1 assert great than \\ `` max text message buffer size\\", "r2 = org eclipse jetty websocket api web socket policy r0", "r2 max text message buffer size = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jetty websocket client web socket client r0", "$ r1 = r2 get policy", "$ i0 = $ r1 get max text message buffer size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org eclipse jetty websocket common io abstract web socket connection log", "$ z0 = $ r2 be debug enabled", "if $ z0 == 0 goto label1", "$ r4 = org eclipse jetty websocket common io abstract web socket connection log", "$ r3 = newarray java lang object [ 1 ]", "$ r5 = org eclipse jetty util buffer util to detail string r1", "$ r3 [ 0 ] = $ r5", "$ r4 debug \\ `` set initial buffer - { } \\", "label r6 = org eclipse jetty websocket common io abstract web socket connection r0", "r6 prefill buffer = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jetty websocket core frame r0", "$ r1 = r4 payload", "if $ r1 ! = null goto label1", "$ r3 = org eclipse jetty util buffer util empty_buffer", "return $ r3", "if $ r1 ! = null goto label1", "label r5 = org eclipse jetty websocket core frame r0", "$ r2 = r5 payload", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org eclipse jetty websocket core internal demanding flusher r0", "$ r3 = r9 _frame", "if $ r3 ! = null goto label1", "r10 = org eclipse jetty websocket core internal demanding flusher r0", "$ r5 = r10 _callback", "if $ r5 == null goto label2", "label r7 = new java lang illegal state exception", "specialinvoke r7 < init > \\ `` not expect on frame\\ ``", "throw r7", "if $ r5 == null goto label2", "label r11 = org eclipse jetty websocket core internal demanding flusher r0", "r11 _frame = r1", "r8 = new org eclipse jetty util count callback", "specialinvoke r8 < init > r2 1", "r12 = org eclipse jetty websocket core internal demanding flusher r0", "r13 = org eclipse jetty util callback r8", "r12 _callback = r13", "r14 = org eclipse jetty websocket core internal demanding flusher r0", "r14 succeed", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = org eclipse jetty websocket core internal web socket core session log", "$ z0 = $ r4 be debug enabled", "if $ z0 == 0 goto label01", "$ r9 = org eclipse jetty websocket core internal web socket core session log", "$ r9 debug \\ `` process handler error { } \\", "label $ z1 = r1 instanceof org eclipse jetty websocket core exception close exception", "if $ z1 == 0 goto label02", "$ r8 = org eclipse jetty websocket core exception close exception r1", "i0 = $ r8 get status code", "goto label08", "label r11 = new org eclipse jetty websocket core close status", "specialinvoke r11 < init > i0 r1", "$ z8 = org eclipse jetty websocket core close status be transmittable status code i0", "if $ z8 == 0 goto label09", "r13 = org eclipse jetty websocket core internal web socket core session r0", "r13 close r11 r2", "goto label10", "label return", "if $ z8 == 0 goto label09", "label r14 = org eclipse jetty websocket core internal web socket core session r0", "$ r5 = r14 session state", "$ z5 = $ r5 on closed r11", "if $ z5 == 0 goto label10", "r15 = org eclipse jetty websocket core internal web socket core session r0", "r15 close connection r11 r2", "if $ z1 == 0 goto label02", "label $ z2 = r1 instanceof java nio channel close channel exception", "if $ z2 == 0 goto label03", "i0 = 1006", "if $ z2 == 0 goto label03", "label $ z3 = r1 instanceof org eclipse jetty util utf8 appendable $ not utf8 exception", "if $ z3 == 0 goto label04", "i0 = 1007", "if $ z3 == 0 goto label04", "label $ z4 = r1 instanceof org eclipse jetty websocket core exception web socket timeout exception", "if $ z4 ! = 0 goto label05", "$ z6 = r1 instanceof java util concurrent timeout exception", "if $ z6 ! = 0 goto label05", "$ z7 = r1 instanceof java net socket timeout exception", "if $ z7 == 0 goto label06", "label i0 = 1001", "if $ z7 == 0 goto label06", "label r12 = org eclipse jetty websocket core internal web socket core session r0", "$ r7 = r12 behavior", "$ r6 = org eclipse jetty websocket core behavior client", "if $ r7 ! = $ r6 goto label07", "i0 = 1008", "if $ r7 ! = $ r6 goto label07", "label i0 = 1011"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse jetty websocket jakarta common jakarta web socket container r0", "$ r2 = r3 session listener", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i0 = @ parameter0", "if i0 == 1000 goto label1", "if i0 == 1001 goto label1", "if i0 == 1002 goto label1", "if i0 == 1003 goto label1", "if i0 == 1007 goto label1", "if i0 == 1008 goto label1", "if i0 == 1009 goto label1", "if i0 == 1010 goto label1", "if i0 == 1011 goto label1", "if i0 == 1012 goto label1", "if i0 == 1013 goto label1", "if i0 ! = 1014 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if i0 ! = 1014 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = org wildfly common array arrays2 equal r0 0 r1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org wildfly common assert $ assertion disable", "if $ z0 ! = 0 goto label1", "$ r1 = org wildfly common assert check not null param \\ `` monitor\\", "$ z1 = java lang thread hold lock $ r1", "if $ z1 == 0 goto label1", "$ r2 = new java lang assertion error", "$ r3 = org wildfly common _private common message msg", "$ r4 = $ r3 expect lock not hold r0", "specialinvoke $ r2 < init > $ r4", "throw $ r2", "if $ z1 == 0 goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r0 ! = r1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if r0 ! = r1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = org wildfly common flag flag r0", "i0 = r4 bit", "if i0 ! = 0 goto label1", "r3 = new java util no such element exception", "specialinvoke r3 < init >", "throw r3", "if i0 ! = 0 goto label1", "label $ i1 = java lang integer low one bit i0", "$ i2 = java lang integer number of trail zeros $ i1", "r5 = org wildfly common flag flag r0", "$ r1 = r5 item of $ i2", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java lang enum r1", "r4 = org wildfly common flag flag r0", "$ r3 = r4 head set $ r2", "r5 = java util sort set $ r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org wildfly common flag flag r0", "$ z0 = r3 contain r1", "if $ z0 == 0 goto label1", "r4 = org wildfly common flag flag r0", "$ z1 = r4 contain r2", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == r0 goto label1", "$ z0 = r1 instanceof java util set", "if $ z0 == 0 goto label2", "$ r2 = java util set r1", "r3 = org wildfly common flag flag r0", "$ z1 = r3 equal $ r2", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org wildfly common assert check not null param \\ `` other\\", "label r3 = org wildfly common iteration byte iterator r0", "$ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ z2 = r1 have next", "if $ z2 ! = 0 goto label2", "return 0", "if $ z2 ! = 0 goto label2", "label r4 = org wildfly common iteration byte iterator r0", "$ i0 = r4 next", "$ i1 = r1 next", "if $ i0 == $ i1 goto label1", "if $ z0 == 0 goto label3", "label $ z1 = r1 have next", "if $ z1 ! = 0 goto label4", "$ z3 = 1", "goto label5", "label return $ z3", "if $ z1 ! = 0 goto label4", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ this", "r5 = org wildfly common iteration code point iterator r0", "$ z0 = r5 have next", "if $ z0 == 0 goto label1", "r4 = new java lang string builder", "specialinvoke r4 < init >", "r6 = org wildfly common iteration code point iterator r0", "$ r2 = r6 drain to r4", "$ r3 = $ r2 to string", "goto label2", "label return $ r3", "if $ z0 == 0 goto label1", "label $ r3 = \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org wildfly common iteration code point iterator r0", "$ r1 = r2 a utf8 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org wildfly common lock spin lock r0", "$ r1 = r2 owner", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "i4 = 0", "label r5 = org wildfly common lock spin lock r0", "r1 = r5 owner", "$ r4 = java lang thread current thread", "if r1 ! = $ r4 goto label2", "r6 = org wildfly common lock spin lock r0", "$ i2 = r6 level", "$ i3 = $ i2 + 1", "r7 = org wildfly common lock spin lock r0", "r7 level = $ i3", "return", "if r1 ! = $ r4 goto label2", "label if r1 ! = null goto label3", "$ r2 = org wildfly common lock j d k specific unsafe", "$ l1 = org wildfly common lock spin lock owner offset", "$ r3 = java lang thread current thread", "$ z0 = $ r2 compare and swap object r0 $ l1 null $ r3", "if $ z0 == 0 goto label3", "r8 = org wildfly common lock spin lock r0", "r8 level = 1", "if $ z0 == 0 goto label3", "label $ i0 = org wildfly common lock spin lock spin limit", "if i4 < $ i0 goto label4", "java lang thread yield", "goto label1", "if i4 < $ i0 goto label4", "label org wildfly common lock j d k specific on spin wait", "i4 = i4 + 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], []]}
{"nodes": ["r0 = @ this", "r5 = org wildfly common lock spin lock r0", "r1 = r5 owner", "$ r2 = java lang thread current thread", "if r1 ! = $ r2 goto label1", "r6 = org wildfly common lock spin lock r0", "$ i0 = r6 level", "$ i1 = $ i0 - 1", "r7 = org wildfly common lock spin lock r0", "r7 level = $ i1", "if $ i1 ! = 0 goto label2", "r8 = org wildfly common lock spin lock r0", "r8 owner = null", "goto label2", "label return", "if r1 ! = $ r2 goto label1", "label r4 = new java lang illegal monitor state exception", "specialinvoke r4 < init >", "throw r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "org wildfly common assert check not null param \\ `` address bytes\\", "$ i0 = lengthof r0", "if $ i0 ! = 4 goto label1", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ b3 = r0 [ 0 ]", "$ s4 = $ b3 & 255", "$ r6 = $ r5 append $ s4", "$ r7 = $ r6 append \\ `` \\ ``", "$ b5 = r0 [ 1 ]", "$ s6 = $ b5 & 255", "$ r8 = $ r7 append $ s6", "$ r9 = $ r8 append \\ `` \\ ``", "$ b7 = r0 [ 2 ]", "$ s8 = $ b7 & 255", "$ r10 = $ r9 append $ s8", "$ r11 = $ r10 append \\ `` \\ ``", "$ b9 = r0 [ 3 ]", "$ s10 = $ b9 & 255", "$ r12 = $ r11 append $ s10", "$ r13 = $ r12 to string", "return $ r13", "if $ i0 ! = 4 goto label1", "label $ i1 = lengthof r0", "if $ i1 ! = 16 goto label2", "$ r4 = org wildfly common net inet to optimal string v6 r0", "return $ r4", "if $ i1 ! = 16 goto label2", "label $ r2 = org wildfly common _private common message msg", "$ i2 = lengthof r0", "$ r3 = $ r2 invalid address bytes $ i2", "throw $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ parameter0", "org wildfly common assert check not null param \\ `` address bytes\\", "$ i0 = lengthof r0", "if $ i0 ! = 4 goto label1", "$ r10 = new java lang string builder", "specialinvoke $ r10 < init >", "$ b3 = r0 [ 0 ]", "$ s4 = $ b3 & 255", "$ r11 = $ r10 append $ s4", "$ r12 = $ r11 append \\ `` \\ ``", "$ b5 = r0 [ 1 ]", "$ s6 = $ b5 & 255", "$ r13 = $ r12 append $ s6", "$ r14 = $ r13 append \\ `` \\ ``", "$ b7 = r0 [ 2 ]", "$ s8 = $ b7 & 255", "$ r15 = $ r14 append $ s8", "$ r16 = $ r15 append \\ `` \\ ``", "$ b9 = r0 [ 3 ]", "$ s10 = $ b9 & 255", "$ r17 = $ r16 append $ s10", "$ r18 = $ r17 to string", "return $ r18", "if $ i0 ! = 4 goto label1", "label $ i1 = lengthof r0", "if $ i1 ! = 16 goto label2", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = $ r4 append \\ `` [ \\ ``", "$ r6 = org wildfly common net inet to optimal string v6 r0", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append \\ `` ] \\ ``", "$ r9 = $ r8 to string", "return $ r9", "if $ i1 ! = 16 goto label2", "label $ r2 = org wildfly common _private common message msg", "$ i2 = lengthof r0", "$ r3 = $ r2 invalid address bytes $ i2", "throw $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], []]}
{"nodes": ["r0 = @ this", "r2 = org wildfly common rpc remote exception cause r0", "$ r1 = r2 exception class name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r30 = org wildfly common rpc remote exception cause r0", "r1 = r30 to string", "if r1 ! = null goto label5", "r31 = org wildfly common rpc remote exception cause r0", "r2 = r31 get message", "r29 = new java lang string builder", "specialinvoke r29 < init >", "if r2 ! = null goto label1", "$ r26 = org wildfly common _private common message msg", "r32 = org wildfly common rpc remote exception cause r0", "$ r25 = r32 exception class name", "$ r28 = $ r26 remote exception $ r25", "goto label2", "label r29 append $ r28", "r34 = org wildfly common rpc remote exception cause r0", "$ r10 = r34 field", "$ r11 = $ r10 entry set", "r4 = $ r11 iterator", "$ z0 = r4 have next", "if $ z0 == 0 goto label4", "r29 append \\ `` \\n\\t public fields\\ ``", "label $ r14 = r4 next", "r5 = java util map $ entry $ r14", "$ r15 = r29 append 10", "$ r16 = $ r15 append 9", "$ r17 = $ r16 append 9", "$ r18 = r5 get key", "$ r19 = java lang string $ r18", "$ r20 = $ r17 append $ r19", "$ r21 = $ r20 append 61", "$ r22 = r5 get value", "$ r23 = java lang string $ r22", "$ r21 append $ r23", "$ z1 = r4 have next", "if $ z1 ! = 0 goto label3", "label $ r12 = r29 to string", "r35 = org wildfly common rpc remote exception cause r0", "r35 to string = $ r12", "return $ r12", "if r2 ! = null goto label1", "label $ r8 = org wildfly common _private common message msg", "r33 = org wildfly common rpc remote exception cause r0", "$ r7 = r33 exception class name", "$ r28 = $ r8 remote exception $ r7 r2", "if r1 ! = null goto label5", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], [44], [45], [46], []]}
{"nodes": ["r0 = @ parameter0", "org wildfly common assert check not null param \\ `` clazz\\", "$ r2 = selector $ lambda_selector getter action for_0__1 bootstrap $ r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com ctc wstx dtd d t d subset impl r0", "$ z0 = r1 m be cachable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = com ctc wstx dtd d t d type non validator r0", "$ i1 = r9 m elem count", "$ i2 = $ i1 - 1", "r10 = com ctc wstx dtd d t d type non validator r0", "r10 m elem count = $ i2", "r11 = com ctc wstx dtd d t d type non validator r0", "$ r5 = r11 m elems", "$ r5 [ $ i2 ] = null", "if $ i2 > = 1 goto label1", "return 4", "if $ i2 > = 1 goto label1", "label r12 = com ctc wstx dtd d t d type non validator r0", "$ r6 = r12 m elems", "$ i3 = $ i2 - 1", "r4 = $ r6 [ $ i3 ]", "if r4 ! = null goto label2", "$ i5 = 4", "goto label3", "label return $ i5", "if r4 ! = null goto label2", "label r13 = com ctc wstx dtd d t d type non validator r0", "$ r7 = r13 m elems", "$ i4 = $ i2 - 1", "$ r8 = $ r7 [ $ i4 ]", "$ i5 = $ r8 get allow content if space"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "return r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r3 = com ctc wstx evt merge ns context r0", "$ r1 = r3 m namespaces", "$ r2 = $ r1 iterator", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i1 = 0", "r8 = com ctc wstx evt merge ns context r0", "$ r3 = r8 m namespaces", "i0 = $ r3 size", "label if i1 > = i0 goto label3", "r9 = com ctc wstx evt merge ns context r0", "$ r4 = r9 m namespaces", "$ r5 = $ r4 get i1", "r2 = javax xml stream event namespace $ r5", "r1 write 32", "r1 write \\ `` xmlns\\ ``", "$ z0 = r2 be default namespace declaration", "if $ z0 ! = 0 goto label2", "r1 write 58", "$ r7 = r2 get prefix", "r1 write $ r7", "label r1 write \\ `` =\\\\\\ `` \\ ``", "$ r6 = r2 get namespace u r i", "r1 write $ r6", "r1 write 34", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = com ctc wstx sr input element stack r0", "r4 m n default provider = r2", "r5 = com ctc wstx sr input element stack r0", "r5 add validator r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i7 = @ parameter0", "r1 = @ parameter1", "r15 = new java lang string", "specialinvoke r15 < init > r1", "r18 = com ctc wstx sr stream scanner r0", "$ r5 = r18 m cache entity", "$ r6 = $ r5 get r15", "r13 = com ctc wstx ent int entity $ r6", "if r13 ! = null goto label3", "if i7 > 65535 goto label1", "$ c6 = char i7", "r14 = java lang character to string $ c6", "goto label2", "label r17 = new java lang string", "specialinvoke r17 < init > r1", "r13 = com ctc wstx ent int entity create r17 r14", "r19 = com ctc wstx sr stream scanner r0", "$ r11 = r19 m cache entity", "$ r11 put r15 r13", "label r20 = com ctc wstx ent entity decl r13", "return r20", "if i7 > 65535 goto label1", "label r16 = new java lang string buffer", "specialinvoke r16 < init > 2", "i8 = i7 - 65536", "$ i0 = i8 > > 10", "$ i1 = $ i0 + 55296", "$ c2 = char $ i1", "r16 append $ c2", "$ i3 = i8 & 1023", "$ i4 = $ i3 + 56320", "$ c5 = char $ i4", "r16 append $ c5", "r14 = r16 to string"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com ctc wstx util bijective n map r0", "r2 = r5 m ns string", "i0 = r1 hash code", "r6 = com ctc wstx util bijective n map r0", "$ i1 = r6 m scope end", "i4 = $ i1 - 2", "label if i4 < 0 goto label4", "r3 = r2 [ i4 ]", "if r3 == r1 goto label2", "$ i3 = r3 hash code", "if $ i3 ! = i0 goto label3", "$ z0 = r3 equal r1", "if $ z0 == 0 goto label3", "label $ i2 = i4 + 1", "$ r4 = r2 [ $ i2 ]", "return $ r4", "if $ z0 == 0 goto label3", "label i4 = i4 + -2", "goto label1", "label if i4 < 0 goto label4", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [], [22], []]}
{"nodes": ["com ctc wstx util exception util throw internal null", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = com ctc wstx util string vector r0", "i1 = r6 m size", "label i1 = i1 + -2", "if i1 < 0 goto label2", "r7 = com ctc wstx util string vector r0", "$ r2 = r7 m string", "$ r3 = $ r2 [ i1 ]", "if $ r3 ! = r1 goto label1", "r8 = com ctc wstx util string vector r0", "$ r4 = r8 m string", "$ i0 = i1 + 1", "$ r5 = $ r4 [ $ i0 ]", "return $ r5", "if i1 < 0 goto label2", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = io restassured path xml config xml path config r0", "$ z0 = r1 namespace aware", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new io restassured path xml xml path", "r4 = io restassured path xml xml path r0", "specialinvoke r3 < init > r4 r1", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new io restassured path xml xml path", "r4 = io restassured path xml xml path r0", "specialinvoke r3 < init > r4 r1", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r3 = org apache xmlbeans g date _zero", "goto label2", "label r4 = org apache xmlbeans g duration builder r0", "r4 _fs = $ r3", "return", "if r1 ! = null goto label1", "label $ r3 = r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org apache xmlbeans g duration builder r0", "specialinvoke r1 _normalize impl 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "label r1 = org apache xmlbeans impl common mutex r0", "$ z0 = r1 try to acquire", "if $ z0 ! = 0 goto label2", "r0 wait", "goto label1", "if $ z0 ! = 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["i0 = @ parameter0", "if i0 > = 65536 goto label1", "$ r0 = org apache xmlbeans impl common x m l char char", "$ b1 = $ r0 [ i0 ]", "$ b2 = $ b1 & 2", "if $ b2 ! = 0 goto label2", "label if i0 == 133 goto label2", "if i0 ! = 8232 goto label3", "label $ z0 = 1", "goto label4", "label return $ z0", "if i0 ! = 8232 goto label3", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["i0 = @ parameter0", "if i0 > = 65536 goto label1", "$ r0 = org apache xmlbeans impl common x m l char char", "$ b1 = $ r0 [ i0 ]", "$ s2 = $ b1 & 128", "if $ s2 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ s2 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 length", "if $ i0 ! = 0 goto label1", "return 0", "if $ i0 ! = 0 goto label1", "label c2 = r0 char at 0", "$ z0 = org apache xmlbeans impl common x m l char be n c name start c2", "if $ z0 ! = 0 goto label2", "label i3 = 1", "label $ i1 = r0 length", "if i3 > = $ i1 goto label5", "c4 = r0 char at i3", "$ z1 = org apache xmlbeans impl common x m l char be n c name c4", "if $ z1 ! = 0 goto label4", "label i3 = i3 + 1", "goto label3", "if i3 > = $ i1 goto label5", "label return 1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r3 = org apache xmlbeans impl config name set r0", "$ z0 = r3 _is finite", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label r4 = org apache xmlbeans impl config name set r0", "$ r1 = r4 _finite set", "$ r2 = org apache xmlbeans impl config name set new instance $ z1 $ r1", "return $ r2", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache xmlbeans impl config name set builder r0", "$ z0 = r4 _is finite", "if $ z0 == 0 goto label1", "r5 = org apache xmlbeans impl config name set builder r0", "$ r3 = r5 _finite set", "$ r3 add r1", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r6 = org apache xmlbeans impl config name set builder r0", "$ r2 = r6 _finite set", "$ r2 remove r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 == 1 goto label1", "if i0 == 2 goto label1", "if i0 == 3 goto label1", "r2 = new java lang illegal argument exception", "specialinvoke r2 < init > \\ `` unknown value for design type \\ ``", "throw r2", "if i0 == 3 goto label1", "label r3 = org apache xmlbeans impl inst2xsd inst2 xsd option r0", "r3 _design = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = org apache xmlbeans impl soap attachment part r0", "r1 = r3 get mime header \\ `` content- type\\ ``", "if r1 == null goto label1", "$ i0 = lengthof r1", "if $ i0 < = 0 goto label1", "$ r2 = r1 [ 0 ]", "return $ r2", "if $ i0 < = 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r3 = org apache xmlbeans impl soap mime header r0", "$ r1 = r3 header", "$ r2 = $ r1 iterator", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org apache xmlbeans impl soap mime header $ match iterator", "r4 = org apache xmlbeans impl soap mime header r0", "specialinvoke r3 < init > r4 r1 0", "r5 = java util iterator r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache xmlbeans impl soap s o a p exception r0", "$ r2 = r7 cause", "if $ r2 == null goto label1", "r5 = new java lang illegal state exception", "specialinvoke r5 < init > \\ `` can\\'t override cause\\ ``", "throw r5", "if $ r2 == null goto label1", "label if r1 ! = r0 goto label2", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` self-causation not permitted\\ ``", "throw r6", "label if r1 ! = r0 goto label2", "label r8 = org apache xmlbeans impl soap s o a p exception r0", "r8 cause = r1", "return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache xmlbeans impl tool x m l bean r0", "r1 noupa = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache xmlbeans impl tool x m l bean r0", "r1 noext = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label i0 = lengthof r0", "i1 = i0 * 2", "r1 = newarray byte [ i1 ]", "i12 = 0", "label if i12 > = i0 goto label3", "$ i6 = i12 * 2", "$ r2 = org apache xmlbeans impl util hex bin look up hex alphabet", "$ b2 = r0 [ i12 ]", "$ b3 = $ b2 > > 4", "$ b4 = $ b3 & 15", "$ b5 = $ r2 [ $ b4 ]", "r1 [ $ i6 ] = $ b5", "$ i7 = i12 * 2", "$ i11 = $ i7 + 1", "$ r3 = org apache xmlbeans impl util hex bin look up hex alphabet", "$ b8 = r0 [ i12 ]", "$ b9 = $ b8 & 15", "$ b10 = $ r3 [ $ b9 ]", "r1 [ $ i11 ] = $ b10", "i12 = i12 + 1", "goto label2", "label if i12 > = i0 goto label3", "label return r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label i0 = lengthof r0", "$ i2 = i0 % 2", "if $ i2 == 0 goto label2", "label i1 = i0 2", "r1 = newarray byte [ i1 ]", "i18 = 0", "label if i18 > = i1 goto label6", "$ i3 = i18 * 2", "$ b4 = r0 [ $ i3 ]", "$ z0 = org apache xmlbeans impl util hex bin be hex $ b4", "if $ z0 == 0 goto label4", "$ i5 = i18 * 2", "$ i6 = $ i5 + 1", "$ b7 = r0 [ $ i6 ]", "$ z1 = org apache xmlbeans impl util hex bin be hex $ b7", "if $ z1 ! = 0 goto label5", "label return null", "if $ z1 ! = 0 goto label5", "label $ r2 = org apache xmlbeans impl util hex bin hex number table", "$ i8 = i18 * 2", "$ b9 = r0 [ $ i8 ]", "$ b10 = $ r2 [ $ b9 ]", "$ i15 = $ b10 < < 4", "$ r3 = org apache xmlbeans impl util hex bin hex number table", "$ i11 = i18 * 2", "$ i12 = $ i11 + 1", "$ b13 = r0 [ $ i12 ]", "$ b14 = $ r3 [ $ b13 ]", "$ i16 = $ i15 | $ b14", "$ b17 = byte $ i16", "r1 [ i18 ] = $ b17", "i18 = i18 + 1", "goto label3", "label if i18 > = i1 goto label6", "label return r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], []]}
{"nodes": ["r0 = @ this", "r9 = org apache xmlbeans impl value java decimal holder r0", "$ r2 = r9 _value", "$ i1 = $ r2 scale", "if $ i1 < = 0 goto label1", "r10 = org apache xmlbeans impl value java decimal holder r0", "$ r6 = r10 _value", "$ r7 = $ r6 set scale 0 1", "r11 = org apache xmlbeans impl value java decimal holder r0", "$ r8 = r11 _value", "$ i9 = $ r7 compare to $ r8", "if $ i9 == 0 goto label1", "r12 = org apache xmlbeans impl value java decimal holder r0", "$ i10 = r12 decimal hash code", "return $ i10", "if $ i9 == 0 goto label1", "label r13 = org apache xmlbeans impl value java decimal holder r0", "$ r3 = r13 _value", "r1 = $ r3 to big integer", "$ r4 = org apache xmlbeans impl value java decimal holder _maxlong", "$ i2 = r1 compare to $ r4", "if $ i2 > 0 goto label2", "$ r5 = org apache xmlbeans impl value java decimal holder _minlong", "$ i4 = r1 compare to $ r5", "if $ i4 > = 0 goto label3", "label $ i3 = r1 hash code", "return $ i3", "if $ i4 > = 0 goto label3", "label l0 = r1 long value", "$ l5 = l0 > > 32", "$ l6 = $ l5 * 19l", "$ l7 = $ l6 + l0", "$ i8 = int $ l7", "return $ i8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache xmlbeans q name set r0", "$ r2 = r6 _included u r be", "$ r3 = org apache xmlbeans q name set ns from name r1", "$ z1 = $ r2 contain $ r3", "if $ z1 == 0 goto label2", "r7 = org apache xmlbeans q name set r0", "$ r5 = r7 _excluded q name", "$ z2 = $ r5 contain r1", "if $ z2 ! = 0 goto label1", "$ z3 = 1", "goto label3", "label r9 = org apache xmlbeans q name set r0", "$ z4 = r9 _inverted", "$ z5 = $ z4 ^ $ z3", "return $ z5", "if $ z2 ! = 0 goto label1", "label $ z3 = 0", "if $ z1 == 0 goto label2", "label r8 = org apache xmlbeans q name set r0", "$ r4 = r8 _included q name", "$ z3 = $ r4 contain r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r3 = org apache xmlbeans q name set r0", "$ z0 = r3 _inverted", "if $ z0 ! = 0 goto label1", "r4 = org apache xmlbeans q name set r0", "$ r1 = r4 _included u r be", "$ z1 = $ r1 be empty", "if $ z1 == 0 goto label1", "r5 = org apache xmlbeans q name set r0", "$ r2 = r5 _included q name", "$ z2 = $ r2 be empty", "if $ z2 == 0 goto label1", "$ z3 = 1", "goto label2", "label return $ z3", "if $ z2 == 0 goto label1", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache xmlbeans q name set builder r0", "$ z0 = r2 _inverted", "if $ z0 ! = 0 goto label1", "r3 = org apache xmlbeans q name set builder r0", "specialinvoke r3 add impl r1", "goto label2", "label return", "if $ z0 ! = 0 goto label1", "label r4 = org apache xmlbeans q name set builder r0", "specialinvoke r4 remove impl r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org apache xmlbeans q name set builder r0", "$ z0 = r10 _inverted", "if $ z0 == 0 goto label1", "$ r6 = r1 exclude u r be", "$ r7 = r1 include u r be", "$ r8 = r1 exclude q name in included u r be", "$ r9 = r1 include q name in excluded u r be", "r11 = org apache xmlbeans q name set builder r0", "specialinvoke r11 add all impl $ r6 $ r7 $ r8 $ r9", "goto label2", "label return", "if $ z0 == 0 goto label1", "label $ r2 = r1 exclude u r be", "$ r3 = r1 include u r be", "$ r4 = r1 exclude q name in included u r be", "$ r5 = r1 include q name in excluded u r be", "r12 = org apache xmlbeans q name set builder r0", "specialinvoke r12 remove all impl $ r2 $ r3 $ r4 $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ r1 = class \\ `` lorg apache xmlbeans xml object \\ ``", "$ z0 = $ r1 be assignable from r0", "if $ z0 ! = 0 goto label2", "label return null", "if $ z0 ! = 0 goto label2", "label r5 = r0 get field \\ `` type\\ ``", "if r5 ! = null goto label4", "label return null", "if r5 ! = null goto label4", "label $ r2 = r5 get null", "$ r3 = org apache xmlbeans schema type $ r2", "label return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r3 = org apache xmlbeans xml calendar r0", "$ z1 = r3 be set 1", "if $ z1 ! = 0 goto label1", "$ z2 = 1", "goto label2", "label z0 = $ z2", "if $ z2 == 0 goto label3", "$ i0 = org apache xmlbeans xml calendar get default year", "r4 = org apache xmlbeans xml calendar r0", "r4 set 1 $ i0", "label specialinvoke r0 compute time", "label if z0 == 0 goto label8", "r5 = org apache xmlbeans xml calendar r0", "r5 clear 1", "goto label8", "label return", "if $ z1 ! = 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache xmlbeans xml option r0", "$ r2 = specialinvoke r3 set \\ `` document_type\\", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache xmlbeans xml option r0", "$ r1 = specialinvoke r2 set \\ `` validate_on_set\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r1 = org apache xmlbeans xml option empty_options", "goto label2", "label return $ r1", "if r0 ! = null goto label1", "label $ r1 = r0"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache xmlbeans xml simple list r0", "$ r1 = r2 list iterator 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r0 get owner document", "$ r3 = r2 get base u r i", "$ r4 = org xmlresolver helper d o m utils make absolute r0 r1 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r32 = java lang system get property \\ `` user dir\\ ``", "r33 = r32 replace 92 47", "r34 = \\ `` \\ ``", "$ z0 = r33 end with \\ `` \\ ``", "if $ z0 == 0 goto label1", "r34 = \\ `` \\ ``", "label $ z1 = r0 start with \\ `` \\ ``", "if $ z1 == 0 goto label3", "$ r16 = new java net uri", "$ r17 = new java lang string builder", "specialinvoke $ r17 < init >", "$ r18 = $ r17 append \\ `` file \\ ``", "$ r19 = $ r18 append r0", "$ r20 = $ r19 to string", "specialinvoke $ r16 < init > $ r20", "label return $ r16", "if $ z1 == 0 goto label3", "label $ z2 = r33 start with \\ `` \\ ``", "if $ z2 == 0 goto label4", "$ r8 = new java net uri", "$ r9 = new java lang string builder", "specialinvoke $ r9 < init >", "$ r10 = $ r9 append \\ `` file \\ ``", "$ r11 = $ r10 append r33", "$ r12 = $ r11 append r34", "$ r13 = $ r12 append r0", "$ r14 = $ r13 to string", "specialinvoke $ r8 < init > $ r14", "r35 = $ r8", "goto label5", "label return r35", "if $ z2 == 0 goto label4", "label $ r1 = new java net uri", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append \\ `` file \\ ``", "$ r4 = $ r3 append r33", "$ r5 = $ r4 append r34", "$ r6 = $ r5 append r0", "$ r7 = $ r6 to string", "specialinvoke $ r1 < init > $ r7", "r35 = $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org xmlresolver resource cache r0", "$ r2 = specialinvoke r3 _add namespace u r i r1 null null", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org xmlunit builder diff builder r0", "r1 normalize whitespace = 1", "r2 = org xmlunit builder diff builder r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r4 = new org xmlunit builder input $ source hold builder", "r3 = new javax xml transform dom d o m source", "specialinvoke r3 < init > r0", "specialinvoke r4 < init > r3", "r5 = org xmlunit builder input $ builder r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org xmlunit builder input $ stream builder", "specialinvoke r2 < init > r0 null", "r3 = org xmlunit builder input $ builder r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org xmlunit builder transform $ transformation builder", "specialinvoke r2 < init > r0 null", "r3 = org xmlunit builder transform $ builder r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r1 = null", "goto label2", "label return $ r1", "if r0 ! = null goto label1", "label $ r1 = r0 get x path"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = new org xmlunit diff default comparison formatter", "specialinvoke r3 < init >", "r4 = org xmlunit diff comparison r0", "r5 = org xmlunit diff comparison formatter r3", "$ r2 = r4 to string r5", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org xmlunit diff comparison listener support r0", "$ r2 = r3 match listener", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org xmlunit diff difference r0", "$ r1 = r2 comparison", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "r3 = new java lang illegal argument exception", "specialinvoke r3 < init > \\ `` es must not be null\\ ``", "throw r3", "if r0 ! = null goto label1", "label r4 = new org xmlunit diff element selector $ 8", "specialinvoke r4 < init > r0", "r5 = org xmlunit diff element selector r4", "return r5"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` selector must not be null\\ ``", "throw r6", "if r0 ! = null goto label1", "label r1 = java util array a list r0", "r7 = new org xmlunit util be null predicate", "specialinvoke r7 < init >", "r10 = org xmlunit util predicate r7", "$ z0 = org xmlunit util linqy any r1 r10", "if $ z0 == 0 goto label2", "r8 = new java lang illegal argument exception", "specialinvoke r8 < init > \\ `` selector must not contain null values\\ ``", "throw r8", "if $ z0 == 0 goto label2", "label r9 = new org xmlunit diff element selector $ 10", "specialinvoke r9 < init > r1", "r11 = org xmlunit diff element selector r9", "return r11"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "$ r4 = new java lang illegal argument exception", "specialinvoke $ r4 < init > \\ `` expect name must not be null\\ ``", "throw $ r4", "if r0 ! = null goto label1", "label $ r2 = org xmlunit diff element selector element name predicate r0", "$ r3 = org xmlunit diff element selector conditional selector $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org xmlunit diff element selector by x path r0 null r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r35 = org xmlunit transform transformation r0", "$ r4 = r35 source", "if $ r4 ! = null goto label01", "r31 = new java lang illegal state exception", "specialinvoke r31 < init > \\ `` source must not be null\\ ``", "throw r31", "if $ r4 ! = null goto label01", "label if r1 ! = null goto label02", "r32 = new java lang illegal argument exception", "specialinvoke r32 < init > \\ `` result must not be null\\ ``", "throw r32", "label if r1 ! = null goto label02", "label r36 = org xmlunit transform transformation r0", "r27 = r36 factory", "if r27 ! = null goto label03", "$ r19 = org xmlunit util transformer factory configurer default", "$ r20 = javax xml transform transformer factory new instance", "r27 = $ r19 configure $ r20", "label r37 = org xmlunit transform transformation r0", "$ r5 = r37 style sheet", "if $ r5 == null goto label04", "r38 = org xmlunit transform transformation r0", "$ r18 = r38 style sheet", "r28 = r27 new transformer $ r18", "goto label05", "label r39 = org xmlunit transform transformation r0", "$ r6 = r39 uri resolver", "if $ r6 == null goto label06", "r40 = org xmlunit transform transformation r0", "$ r17 = r40 uri resolver", "r28 set u r i resolver $ r17", "label r41 = org xmlunit transform transformation r0", "$ r7 = r41 error listener", "if $ r7 == null goto label07", "r42 = org xmlunit transform transformation r0", "$ r16 = r42 error listener", "r28 set error listener $ r16", "label r43 = org xmlunit transform transformation r0", "$ r8 = r43 output", "r28 set output property $ r8", "r44 = org xmlunit transform transformation r0", "$ r9 = r44 params", "$ r10 = $ r9 entry set", "r2 = $ r10 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label09", "$ r12 = r2 next", "r3 = java util map $ entry $ r12", "$ r13 = r3 get key", "$ r14 = java lang string $ r13", "$ r15 = r3 get value", "r28 set parameter $ r14 $ r15", "goto label08", "if $ z0 == 0 goto label09", "label r45 = org xmlunit transform transformation r0", "$ r11 = r45 source", "r28 transform $ r11 r1", "label goto label13", "label return", "if $ r5 == null goto label04", "label r28 = r27 new transformer"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [], [56], [57], [58], [59], [60], [61], [62], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org xmlunit util convert to input source r0 null", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof java util collection", "if $ z0 == 0 goto label1", "$ r5 = new java util array list", "$ r6 = java util collection r0", "specialinvoke $ r5 < init > $ r6", "return $ r5", "if $ z0 == 0 goto label1", "label $ r4 = new java util array list", "specialinvoke $ r4 < init >", "r2 = r0 iterator", "label $ z1 = r2 have next", "if $ z1 == 0 goto label3", "r3 = r2 next", "$ r4 add r3", "goto label2", "if $ z1 == 0 goto label3", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r0 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "r3 = r2 next", "$ z1 = r1 test r3", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 clone node 1", "r1 normalize", "org xmlunit util node strip e c w r1", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org xmlunit diff diff r0", "$ r1 = r3 formatter", "r4 = org xmlunit diff diff r0", "$ r2 = r4 to string $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r12 = new org xmlpull v1 builder impl xml infoset builder impl", "specialinvoke r12 < init >", "label $ r3 = java lang system get property \\ `` org xmlpull v1 xml pull parser factory\\ ``", "$ r4 = org xmlpull v1 xml pull parser factory new instance $ r3 null", "r15 = org xmlpull v1 builder xml infoset builder r12", "r15 factory = $ r4", "r16 = org xmlpull v1 builder xml infoset builder r12", "$ r5 = r16 factory", "$ r5 set namespace aware 1", "label goto label4", "label r18 = org xmlpull v1 builder xml infoset builder r12", "return r18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org xmlpull v1 builder xml infoset builder r0", "$ r1 = r2 new document null null null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com thoughtworks xstream converter javabean bean property r0", "$ r1 = r2 property name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ z0 = com thoughtworks xstream core jvm be swing available", "return $ z0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = com thoughtworks xstream core util custom object output stream r0", "$ r1 = r2 peek callback", "$ r1 default write object", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com thoughtworks xstream io abstract reader r0", "$ r2 = r4 name coder", "$ r3 = $ r2 encode node r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r7 = com thoughtworks xstream io path path tracker r0", "$ r3 = r7 current path", "if $ r3 ! = null goto label3", "r8 = com thoughtworks xstream io path path tracker r0", "$ i0 = r8 pointer", "$ i1 = $ i0 + 1", "r1 = newarray java lang string [ $ i1 ]", "r1 [ 0 ] = \\ `` \\ ``", "r9 = com thoughtworks xstream io path path tracker r0", "$ i2 = r9 pointer", "i5 = neg $ i2", "label i5 = i5 + 1", "if i5 > 0 goto label2", "r10 = com thoughtworks xstream io path path tracker r0", "r2 = r10 peek element i5", "r11 = com thoughtworks xstream io path path tracker r0", "$ i3 = r11 pointer", "$ i4 = i5 + $ i3", "r1 [ $ i4 ] = r2", "goto label1", "if i5 > 0 goto label2", "label r6 = new com thoughtworks xstream io path path", "specialinvoke r6 < init > r1", "r12 = com thoughtworks xstream io path path tracker r0", "r12 current path = r6", "label r13 = com thoughtworks xstream io path path tracker r0", "$ r4 = r13 current path", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 equal \\ `` http com thoughtworks xstream sax property configured-xstream\\ ``", "if $ z0 ! = 0 goto label1", "$ z1 = r1 equal \\ `` http com thoughtworks xstream sax property source-object-list\\ ``", "if $ z1 == 0 goto label2", "label r6 = com thoughtworks xstream io xml sax writer r0", "$ r2 = r6 property", "$ r3 = $ r2 get r1", "return $ r3", "if $ z1 == 0 goto label2", "label r5 = new org xml sax s a x not recognize exception", "specialinvoke r5 < init > r1", "throw r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = specialinvoke r0 decode node r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = com thoughtworks xstream io xml xom driver r0", "r1 = r4 get builder", "if r1 == null goto label1", "$ r2 = r1", "goto label2", "label return $ r2", "if r1 == null goto label1", "label r3 = new nu xom builder", "$ r2 = r3", "specialinvoke r3 < init >"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r11 = new com thoughtworks xstream x stream", "specialinvoke $ r11 < init > r1", "com thoughtworks xstream x stream setup default security $ r11", "i1 = 0", "label $ i0 = lengthof r3", "if i1 > = $ i0 goto label02", "$ r13 = r3 [ i1 ]", "$ r11 add permission $ r13", "i1 = i1 + 1", "goto label01", "if i1 > = $ i0 goto label02", "label r16 = r1 create reader r2", "r5 = $ r11 create object input stream r16", "label $ r12 = r5 read object", "r6 = com thoughtworks xstream x stream $ r12", "r7 = r6 create object input stream r16", "label r8 = r7 read object", "label r7 close", "label r5 close", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal component deserializer bind r0", "$ r1 = r2 jsonb deserializer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal jsonb config property r0", "$ r1 = r2 binary data strategy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse yasson internal jsonb config property r0", "$ z0 = r1 strict i json", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal jsonb context r0", "$ r1 = r2 instance creator", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal jsonstructure json generator to structure adapter r0", "$ r1 = r2 root", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = null goto label1", "r15 = org eclipse yasson internal marshaller r0", "$ r11 = r15 get jsonb context", "$ r12 = $ r11 get config property", "$ r13 = $ r12 get null serializer", "$ r13 serialize null r2 r0", "return", "if r1 ! = null goto label1", "label $ r4 = r1 get class", "r16 = org eclipse yasson internal marshaller r0", "r3 = r16 get root serializer $ r4", "r17 = org eclipse yasson internal marshaller r0", "$ r5 = r17 get jsonb context", "$ r6 = $ r5 get config property", "$ z0 = $ r6 be strict i json", "if $ z0 == 0 goto label2", "$ z1 = r3 instanceof org eclipse yasson internal serializer abstract value type serializer", "if $ z1 == 0 goto label2", "r14 = new javax json bind jsonb exception", "$ r9 = org eclipse yasson internal property message key ijson_enabled_single_value", "$ r8 = newarray java lang object [ 0 ]", "$ r10 = org eclipse yasson internal property message get message $ r9 $ r8", "specialinvoke r14 < init > $ r10", "r18 = java lang throwable r14", "throw r18", "if $ z1 == 0 goto label2", "label r3 serialize r1 r2 r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse yasson internal model customization class customization r0", "r2 property order = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = new org eclipse yasson internal model customization class customization", "r3 = org eclipse yasson internal model customization class customization builder r0", "specialinvoke r2 < init > r3", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal model customization customization builder r0", "$ r1 = r2 serializer bind", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal model customization customization builder r0", "$ r1 = r2 deserializer bind", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse yasson internal model customization property customization builder r0", "r2 serialize number formatter = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org eclipse yasson internal model jsonb annotate element r0", "$ r2 = r6 annotation", "$ r3 = $ r2 get r1", "$ r4 = r1 cast $ r3", "$ r5 = java lang annotation annotation $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse yasson internal model jsonb creator r0", "r2 = r5 params", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label3", "r3 = r2 [ i1 ]", "$ r4 = r3 get name", "$ z0 = $ r4 equal r1", "if $ z0 == 0 goto label2", "return r3", "if $ z0 == 0 goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r12 = r0", "label if r12 == class \\ `` ljava lang object \\ `` goto label5", "r2 = r12 get generic interface", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label4", "r3 = r2 [ i1 ]", "$ z0 = r3 instanceof java lang reflect parameterized type", "if $ z0 == 0 goto label3", "$ r8 = java lang reflect parameterized type r3", "$ r9 = $ r8 get raw type", "$ r10 = org eclipse yasson internal reflection utils get raw type $ r9", "$ z1 = r1 be assignable from $ r10", "if $ z1 == 0 goto label3", "$ r11 = java lang reflect parameterized type r3", "return $ r11", "if $ z1 == 0 goto label3", "label i1 = i1 + 1", "goto label2", "label if i1 > = i0 goto label4", "label r12 = r12 get superclass", "goto label1", "label if r12 == class \\ `` ljava lang object \\ `` goto label5", "label r13 = new javax json bind jsonb exception", "$ r6 = org eclipse yasson internal property message key non_parametrized_type", "$ r5 = newarray java lang object [ 1 ]", "$ r5 [ 0 ] = r1", "$ r7 = org eclipse yasson internal property message get message $ r6 $ r5", "specialinvoke r13 < init > $ r7", "r14 = java lang throwable r13", "throw r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal runtime type holder r0", "$ r1 = r2 wrapper", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof java lang reflect parameterized type", "if $ z0 == 0 goto label1", "$ r3 = java lang reflect parameterized type r1", "$ r4 = $ r3 get actual type argument", "$ r5 = $ r4 [ 0 ]", "r8 = org eclipse yasson internal runtime type info r0", "r2 = org eclipse yasson internal reflection utils resolve optional type r8 $ r5", "$ r6 = r2 or else class \\ `` ljava lang object \\ ``", "$ r7 = java lang reflect type $ r6", "return $ r7", "if $ z0 == 0 goto label1", "label return class \\ `` ljava lang object \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r5 = \\ `` ##time-in-millis\\ ``", "$ r6 = r2 get format", "$ z0 = $ r5 equal $ r6", "if $ z0 == 0 goto label1", "r21 = org eclipse yasson internal serializer abstract date time serializer r0", "$ r19 = r21 to instant r1", "$ l0 = $ r19 to epoch milli", "$ r20 = java lang string value of $ l0", "return $ r20", "if $ z0 == 0 goto label1", "label $ r7 = r2 get date time formatter", "if $ r7 == null goto label2", "$ r17 = r2 get date time formatter", "r22 = org eclipse yasson internal serializer abstract date time serializer r0", "$ r18 = r22 format with formatter r1 $ r17", "return $ r18", "if $ r7 == null goto label2", "label $ r8 = r3 get config property", "$ r9 = $ r8 get config date formatter", "r4 = $ r9 get date time formatter", "if r4 == null goto label3", "r23 = org eclipse yasson internal serializer abstract date time serializer r0", "$ r16 = r23 format with formatter r1 r4", "return $ r16", "if r4 == null goto label3", "label $ r10 = r3 get config property", "$ z1 = $ r10 be strict i json", "if $ z1 == 0 goto label4", "r24 = org eclipse yasson internal serializer abstract date time serializer r0", "$ r15 = r24 format strict i json r1", "return $ r15", "if $ z1 == 0 goto label4", "label $ r11 = r3 get config property", "$ r12 = r2 get locale", "$ r13 = $ r11 get locale $ r12", "r25 = org eclipse yasson internal serializer abstract date time serializer r0", "$ r14 = r25 format default r1 $ r13", "return $ r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], [41], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org eclipse yasson internal serializer abstract date time serializer r0", "$ r3 = r5 to temporal accessor r1", "$ r4 = r2 format $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal serializer abstract serializer builder r0", "$ r1 = r2 generic type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal serializer serializer provider wrapper r0", "$ r1 = r2 deserializer provider", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "label r4 = org eclipse yasson internal user deserializer parser r0", "$ r1 = r4 level", "$ z0 = $ r1 be parse", "if $ z0 ! = 0 goto label2", "r5 = org eclipse yasson internal user deserializer parser r0", "$ r2 = r5 jsonb parser", "$ z1 = $ r2 have next", "if $ z1 == 0 goto label2", "r6 = org eclipse yasson internal user deserializer parser r0", "r6 next", "goto label1", "if $ z1 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 equal r2", "if $ z0 == 0 goto label1", "r11 = org elasticsearch search aggregation matrix stats matrix stats result r0", "$ r5 = r11 result", "$ r6 = $ r5 variance", "r12 = org elasticsearch search aggregation matrix stats matrix stats result r0", "specialinvoke r12 check field r1 $ r6", "r13 = org elasticsearch search aggregation matrix stats matrix stats result r0", "$ r7 = r13 result", "$ r8 = $ r7 variance", "$ r9 = $ r8 get r1", "$ r10 = java lang double $ r9", "$ d1 = $ r10 double value", "return $ d1", "if $ z0 == 0 goto label1", "label r14 = org elasticsearch search aggregation matrix stats matrix stats result r0", "$ r3 = r14 result", "$ r4 = $ r3 covariance", "$ d0 = org elasticsearch search aggregation matrix stats matrix stats result get val from upper triangular matrix $ r4 r1 r2", "return $ d0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = org antlr analysis decision probe r0", "$ r1 = r2 dangle state", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r8 = org antlr analysis decision probe r0", "$ r3 = r8 state to alt set with semantic predicate map", "$ r4 = $ r3 get r1", "r2 = java util map $ r4", "if r2 ! = null goto label1", "return null", "if r2 ! = null goto label1", "label $ r5 = org antlr misc utils integer i0", "$ r6 = r2 get $ r5", "$ r7 = org antlr analysis semantic context $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = org antlr analysis dfa r0", "$ z0 = r1 reduce", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label r2 = org antlr analysis n f a configuration r1", "r7 = org antlr analysis n f a configuration r0", "$ i1 = r7 state", "$ i0 = r2 state", "if $ i1 ! = $ i0 goto label2", "r8 = org antlr analysis n f a configuration r0", "$ i3 = r8 alt", "$ i2 = r2 alt", "if $ i3 ! = $ i2 goto label2", "r9 = org antlr analysis n f a configuration r0", "$ r4 = r9 context", "$ r3 = r2 context", "$ z0 = $ r4 equal $ r3", "if $ z0 == 0 goto label2", "r10 = org antlr analysis n f a configuration r0", "$ r6 = r10 semantic context", "$ r5 = r2 semantic context", "$ z1 = $ r6 equal $ r5", "if $ z1 == 0 goto label2", "$ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = new java lang string builder", "$ i0 = r0 length", "$ i1 = $ i0 + 50", "specialinvoke $ r4 < init > $ i1", "i4 = 0", "i5 = r0 index of r1", "label if i5 == -1 goto label3", "$ r8 = r0 substring i4 i5", "$ r4 append $ r8", "if r2 == null goto label2", "$ r4 append r2", "label $ i3 = r1 length", "i4 = i5 + $ i3", "i5 = r0 index of r1 i4", "goto label1", "label if i5 == -1 goto label3", "label $ i2 = r0 length", "$ r5 = r0 substring i4 $ i2", "$ r4 append $ r5", "$ r7 = $ r4 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org antlr tool composite grammar r0", "r2 = r4 get direct delegate r1", "r5 = org antlr tool composite grammar r0", "r3 = r5 get delegate r1", "if r2 == null goto label1", "r3 remove all r2", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["$ r0 = org antlr tool error manager format", "$ r1 = $ r0 get instance of \\ `` location\\ ``", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 == null goto label1", "$ i1 = r1 get token index", "r3 = org antlr tool grammar a s t r0", "r3 start index = $ i1", "label if r2 == null goto label2", "$ i0 = r2 get token index", "r4 = org antlr tool grammar a s t r0", "r4 stop index = $ i0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = org antlr tool grammar report r0", "$ r1 = r3 to notify string", "$ r2 = org antlr tool grammar report to string $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r7 = org antlr tool n f a factory r0", "r2 = r7 new state", "r8 = org antlr tool n f a factory r0", "r3 = r8 new state", "r2 associate a s t node = r1", "r3 associate a s t node = r1", "r9 = org antlr tool n f a factory r0", "specialinvoke r9 transition between state r2 r3 i0", "r6 = new org antlr analysis state cluster", "specialinvoke r6 < init > r2 r3", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang error", "specialinvoke $ r1 < init > \\ `` antlr panic\\ ``", "throw $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org antlr tool r0", "$ z0 = r1 verbose", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org antlr tool r0", "r1 print grammar = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org antlr tool r0", "r1 make = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org antlr runtime base recognizer r0", "$ r1 = r2 state", "$ i0 = $ r1 syntax error", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org antlr runtime debug debug event hub r0", "$ r2 = r3 listener", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org antlr runtime debug debug parser r0", "$ r2 = r5 input", "$ z0 = $ r2 instanceof org antlr runtime debug debug token stream", "if $ z0 == 0 goto label1", "r6 = org antlr runtime debug debug parser r0", "$ r3 = r6 input", "$ r4 = org antlr runtime debug debug token stream $ r3", "$ r4 set debug listener r1", "label r7 = org antlr runtime debug debug parser r0", "r7 dbg = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > = 0 goto label1", "r3 = new java lang illegal argument exception", "specialinvoke r3 < init > \\ `` can\\'t seek before the beginning of the input\\ ``", "throw r3", "if i0 > = 0 goto label1", "label r5 = org antlr runtime misc lookahead stream r0", "$ i2 = r5 current element index", "i1 = $ i2 - i0", "r6 = org antlr runtime misc lookahead stream r0", "$ i3 = r6 p", "$ i4 = $ i3 - i1", "if $ i4 > = 0 goto label2", "r4 = new java lang unsupported operation exception", "specialinvoke r4 < init > \\ `` can\\'t seek before the beginning of this stream\\ 's buffer\\ ``", "throw r4", "if $ i4 > = 0 goto label2", "label r7 = org antlr runtime misc lookahead stream r0", "$ i5 = r7 p", "$ i6 = $ i5 - i1", "r8 = org antlr runtime misc lookahead stream r0", "r8 p = $ i6", "r9 = org antlr runtime misc lookahead stream r0", "r9 current element index = i0", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org antlr runtime parser r0", "r2 input = null", "r3 = org antlr runtime parser r0", "r3 reset", "r4 = org antlr runtime parser r0", "r4 input = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 == null goto label1", "if r2 == null goto label1", "$ r4 = org antlr runtime tree tree r1", "$ r3 = org antlr runtime tree tree r2", "$ r4 add child $ r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r3 = new org antlr runtime common token", "specialinvoke r3 < init > i0 r1", "r4 = org antlr runtime token r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = new org antlr runtime tree tree pattern lexer", "specialinvoke r8 < init > r1", "r9 = new org antlr runtime tree tree pattern parser", "r10 = org antlr runtime tree tree wizard r0", "$ r7 = r10 adaptor", "r11 = org antlr runtime tree tree wizard r0", "specialinvoke r9 < init > r8 r11 $ r7", "r4 = r9 pattern", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new java util array list", "specialinvoke r4 < init >", "r5 = org antlr v4 runtime tree gui tree viewer r0", "r5 highlight node = r4", "r6 = org antlr v4 runtime tree gui tree viewer r0", "$ r3 = r6 highlight node", "$ r3 add all r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache directory server kerberos changepwd exception change passwd error type r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org apache directory server kerberos share crypto encryption de string to key r0", "r2 = r10 character encode string r1", "r11 = org apache directory server kerberos share crypto encryption de string to key r0", "r3 = r11 pad string r2", "r12 = org apache directory server kerberos share crypto encryption de string to key r0", "r4 = r12 fan fold r3", "r13 = org apache directory server kerberos share crypto encryption de string to key r0", "r5 = r13 set parity r4", "r14 = org apache directory server kerberos share crypto encryption de string to key r0", "r6 = r14 get strong key r5", "r15 = org apache directory server kerberos share crypto encryption de string to key r0", "r7 = r15 calculate checksum r3 r6", "r16 = org apache directory server kerberos share crypto encryption de string to key r0", "r8 = r16 set parity r7", "r17 = org apache directory server kerberos share crypto encryption de string to key r0", "r9 = r17 get strong key r8", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = org apache directory server kerberos share store principal store entry r0", "$ i0 = r1 max life", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache directory server kerberos share store principal store entry r0", "$ r1 = r2 password end", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache directory server kerberos share store principal store entry r0", "$ r1 = r2 valid end", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache directory server kerberos share store principal store entry modifier r0", "r2 distinguish name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache directory server kerberos share store principal store entry modifier r0", "r2 valid end = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org apache directory share kerberos codec ad and or ad and or grammar instance", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache directory share kerberos codec authenticator authenticator container r0", "r2 authenticator = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache directory share kerberos codec enc kdc rep part enc kdc rep part container r0", "r2 enc kdc rep part = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache directory share kerberos codec etype info entry e type info entry container r0", "r2 etype info entry = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache directory share kerberos codec krb error krb error container r0", "r2 krb error = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 0 goto label1", "r1 = org apache directory share kerberos codec option option r0", "$ i1 = r1 size", "if i0 < $ i1 goto label2", "label return", "if i0 < $ i1 goto label2", "label r2 = org apache directory share kerberos codec option option r0", "r2 set bit i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache directory share kerberos component enc kdc rep part r0", "$ r1 = r2 srealm", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache directory share kerberos component encrypt data r0", "r1 kvno = i0", "r2 = org apache directory share kerberos component encrypt data r0", "r2 have kvno = 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache directory share kerberos component kdc req body r0", "r2 additional ticket = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = new org apache directory share kerberos component last req entry", "specialinvoke r4 < init >", "r5 = org apache directory share kerberos component last req r0", "r5 current l r = r4", "r6 = org apache directory share kerberos component last req r0", "$ r3 = r6 last reqs", "r7 = org apache directory share kerberos component last req r0", "$ r2 = r7 current l r", "$ r3 add $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache directory share kerberos component last req r0", "$ r2 = r3 last reqs", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache directory share kerberos exception error type r1", "r3 = org apache directory share kerberos exception error type r0", "$ i0 = r3 compare to $ r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache directory share kerberos flag ticket flag initial", "r2 = org apache directory share kerberos flag ticket flag r0", "r3 = org apache directory share kerberos flag kerberos flag $ r1", "$ z0 = r2 be flag set r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r33 = new java lang string builder", "specialinvoke r33 < init >", "$ r3 = org apache directory share kerberos flag ticket flag reserve", "r34 = org apache directory share kerberos flag ticket flag r0", "r35 = org apache directory share kerberos flag kerberos flag $ r3", "$ z0 = r34 be flag set r35", "if $ z0 == 0 goto label01", "r33 append \\ `` reserve 0 \\ ``", "label $ r4 = org apache directory share kerberos flag ticket flag forwardable", "r36 = org apache directory share kerberos flag ticket flag r0", "r37 = org apache directory share kerberos flag kerberos flag $ r4", "$ z1 = r36 be flag set r37", "if $ z1 == 0 goto label02", "r33 append \\ `` forwardable 1 \\ ``", "label $ r5 = org apache directory share kerberos flag ticket flag forward", "r38 = org apache directory share kerberos flag ticket flag r0", "r39 = org apache directory share kerberos flag kerberos flag $ r5", "$ z2 = r38 be flag set r39", "if $ z2 == 0 goto label03", "r33 append \\ `` forward 2 \\ ``", "label $ r6 = org apache directory share kerberos flag ticket flag proxiable", "r40 = org apache directory share kerberos flag ticket flag r0", "r41 = org apache directory share kerberos flag kerberos flag $ r6", "$ z3 = r40 be flag set r41", "if $ z3 == 0 goto label04", "r33 append \\ `` proxiable 3 \\ ``", "label $ r7 = org apache directory share kerberos flag ticket flag proxy", "r42 = org apache directory share kerberos flag ticket flag r0", "r43 = org apache directory share kerberos flag kerberos flag $ r7", "$ z4 = r42 be flag set r43", "if $ z4 == 0 goto label05", "r33 append \\ `` proxy 4 \\ ``", "label $ r8 = org apache directory share kerberos flag ticket flag may_postdate", "r44 = org apache directory share kerberos flag ticket flag r0", "r45 = org apache directory share kerberos flag kerberos flag $ r8", "$ z5 = r44 be flag set r45", "if $ z5 == 0 goto label06", "r33 append \\ `` may_postdate 5 \\ ``", "label $ r9 = org apache directory share kerberos flag ticket flag postdate", "r46 = org apache directory share kerberos flag ticket flag r0", "r47 = org apache directory share kerberos flag kerberos flag $ r9", "$ z6 = r46 be flag set r47", "if $ z6 == 0 goto label07", "r33 append \\ `` postdate 6 \\ ``", "label $ r10 = org apache directory share kerberos flag ticket flag invalid", "r48 = org apache directory share kerberos flag ticket flag r0", "r49 = org apache directory share kerberos flag kerberos flag $ r10", "$ z7 = r48 be flag set r49", "if $ z7 == 0 goto label08", "r33 append \\ `` invalid 7 \\ ``", "label $ r11 = org apache directory share kerberos flag ticket flag renewable", "r50 = org apache directory share kerberos flag ticket flag r0", "r51 = org apache directory share kerberos flag kerberos flag $ r11", "$ z8 = r50 be flag set r51", "if $ z8 == 0 goto label09", "r33 append \\ `` renewable 8 \\ ``", "label $ r12 = org apache directory share kerberos flag ticket flag initial", "r52 = org apache directory share kerberos flag ticket flag r0", "r53 = org apache directory share kerberos flag kerberos flag $ r12", "$ z9 = r52 be flag set r53", "if $ z9 == 0 goto label10", "r33 append \\ `` initial 9 \\ ``", "label $ r13 = org apache directory share kerberos flag ticket flag pre_authent", "r54 = org apache directory share kerberos flag ticket flag r0", "r55 = org apache directory share kerberos flag kerberos flag $ r13", "$ z10 = r54 be flag set r55", "if $ z10 == 0 goto label11", "r33 append \\ `` pre_authent 10 \\ ``", "label $ r14 = org apache directory share kerberos flag ticket flag hw_authent", "r56 = org apache directory share kerberos flag ticket flag r0", "r57 = org apache directory share kerberos flag kerberos flag $ r14", "$ z11 = r56 be flag set r57", "if $ z11 == 0 goto label12", "r33 append \\ `` hw_authent 11 \\ ``", "label $ r15 = org apache directory share kerberos flag ticket flag transited_policy_checked", "r58 = org apache directory share kerberos flag ticket flag r0", "r59 = org apache directory share kerberos flag kerberos flag $ r15", "$ z12 = r58 be flag set r59", "if $ z12 == 0 goto label13", "r33 append \\ `` transited_policy_checked 12 \\ ``", "label $ r16 = org apache directory share kerberos flag ticket flag ok_as_delegate", "r60 = org apache directory share kerberos flag ticket flag r0", "r61 = org apache directory share kerberos flag kerberos flag $ r16", "$ z13 = r60 be flag set r61", "if $ z13 == 0 goto label14", "r33 append \\ `` ok_as_delegate 13 \\ ``", "label $ r17 = r33 to string", "$ r18 = $ r17 trim", "return $ r18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = org apache directory share kerberos kerberos utils utc_date_format", "entermonitor $ r4", "label $ r5 = org apache directory share kerberos kerberos utils utc_date_format", "$ r6 = $ r5 parse r1", "$ l0 = $ r6 get time", "r8 = org apache directory share kerberos kerberos time r0", "r8 kerberos time = $ l0", "exitmonitor $ r4", "label goto label5", "label r9 = org apache directory share kerberos kerberos time r0", "$ l1 = r9 kerberos time", "r10 = org apache directory share kerberos kerberos time r0", "specialinvoke r10 convert internal $ l1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache directory share kerberos message ap req r0", "$ r1 = r2 ap option", "$ z0 = $ r1 get i0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ i0 = specialinvoke r0 compute length", "r1 = org apache directory share kerberos message a req r0", "r1 kdc req length = $ i0", "r2 = org apache directory share kerberos message a req r0", "$ i1 = r2 kdc req length", "$ i2 = org apache directory api asn1 ber tlv tlv get nb byte $ i1", "$ i4 = 1 + $ i2", "r3 = org apache directory share kerberos message a req r0", "$ i3 = r3 kdc req length", "$ i5 = $ i4 + $ i3", "return $ i5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache directory share kerberos message enc a rep part r0", "$ r1 = r2 enc kdc rep part", "$ i0 = $ r1 compute length", "r3 = org apache directory share kerberos message enc a rep part r0", "r3 enc kdc rep part length = $ i0", "r4 = org apache directory share kerberos message enc a rep part r0", "$ i1 = r4 enc kdc rep part length", "$ i2 = org apache directory api asn1 ber tlv tlv get nb byte $ i1", "$ i4 = 1 + $ i2", "r5 = org apache directory share kerberos message enc a rep part r0", "$ i3 = r5 enc kdc rep part length", "$ i5 = $ i4 + $ i3", "return $ i5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r5 = org apache directory api asn1 util bit string r0", "$ r2 = r5 bytes", "$ i0 = lengthof $ r2", "$ i1 = $ i0 + 1", "r1 = newarray byte [ $ i1 ]", "r6 = org apache directory api asn1 util bit string r0", "$ r4 = r6 bytes", "r7 = org apache directory api asn1 util bit string r0", "$ r3 = r7 bytes", "$ i2 = lengthof $ r3", "java lang system arraycopy $ r4 0 r1 1 $ i2", "r8 = org apache directory api asn1 util bit string r0", "$ i3 = r8 nb unused bit", "$ b4 = byte $ i3", "r1 [ 0 ] = $ b4", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org apache directory api util byte buffer r0", "$ r1 = r2 buf", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache directory api util byte buffer r0", "$ i0 = r3 po", "r1 = newarray byte [ $ i0 ]", "r4 = org apache directory api util byte buffer r0", "$ r2 = r4 buf", "r5 = org apache directory api util byte buffer r0", "$ i1 = r5 po", "java lang system arraycopy $ r2 0 r1 0 $ i1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "c1 = @ parameter2", "if r0 == null goto label1", "$ i2 = lengthof r0", "if $ i2 == 0 goto label1", "if i0 < 0 goto label1", "$ i3 = lengthof r0", "if i0 < $ i3 goto label2", "label return 0", "if i0 < $ i3 goto label2", "label $ c4 = r0 [ i0 ]", "if $ c4 ! = c1 goto label3", "$ z0 = 1", "goto label4", "label return $ z0", "if $ c4 ! = c1 goto label3", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["b0 = @ parameter0", "$ b1 = b0 | 127", "if $ b1 == 127 goto label1", "$ r0 = org apache directory api util char hex", "$ z0 = $ r0 [ b0 ]", "if $ z0 == 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org apache directory api util mandatory component monitor r0", "$ z0 = r1 all component use", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ c0 = org apache directory api util unicode byte to char r0 0", "return $ c0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return 0", "if r0 ! = null goto label1", "label i2 = 0", "i3 = 0", "label $ i0 = lengthof r0", "if i3 > = $ i0 goto label3", "$ i1 = org apache directory api util unicode count byte per char r0 i3", "i3 = i3 + $ i1", "i2 = i2 + 1", "goto label2", "if i3 > = $ i0 goto label3", "label return i2"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = com netflix config abstract poll scheduler r0", "r4 initial load r1 r2", "r5 = com netflix config abstract poll scheduler r0", "r3 = r5 get poll runnable r1 r2", "r6 = com netflix config abstract poll scheduler r0", "r6 schedule r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "$ r1 = com netflix config classpath property configuration instance", "if $ r1 == null goto label1", "$ r2 = com netflix config classpath property configuration instance", "$ r3 = $ r2 get property", "goto label2", "label return $ r3", "if $ r1 == null goto label1", "label $ r3 = new java util property", "specialinvoke $ r3 < init >"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = com netflix config concurrent composite configuration r0", "$ r3 = r4 container configuration", "$ r3 set property r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r3 = com netflix config configuration manager instance", "if $ r3 ! = null goto label10", "$ z0 = java lang boolean get boolean \\ `` archaius dynamic property disable default config\\ ``", "if $ z0 ! = 0 goto label10", "entermonitor class \\ `` lcom netflix config configuration manager \\ ``", "label $ r4 = com netflix config configuration manager instance", "if $ r4 ! = null goto label06", "r18 = new com netflix config concurrent composite configuration", "specialinvoke r18 < init >", "r21 = org apache common configuration abstract configuration r18", "com netflix config configuration manager instance = r21", "$ z1 = java lang boolean get boolean \\ `` archaius dynamic property disable system config\\ ``", "if $ z1 ! = 0 goto label05", "r19 = new org apache common configuration system configuration", "specialinvoke r19 < init >", "$ r7 = com netflix config configuration manager instance", "$ r8 = com netflix config concurrent composite configuration $ r7", "r22 = org apache common configuration abstract configuration r19", "$ r8 add configuration r22 \\ `` archaius dynamic property factory sys_config\\ ``", "label r20 = new com netflix config dynamic u r l configuration", "specialinvoke r20 < init >", "$ r10 = com netflix config configuration manager instance", "$ r11 = com netflix config concurrent composite configuration $ r10", "r23 = org apache common configuration abstract configuration r20", "$ r11 add configuration r23 \\ `` archaius dynamic property factory url_config\\ ``", "label goto label05", "label com netflix config configuration manager register config bean", "label exitmonitor class \\ `` lcom netflix config configuration manager \\ ``", "label goto label10", "label $ r17 = com netflix config configuration manager instance", "return $ r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r5 = com netflix config dynamic boolean property r0", "$ r3 = r5 prop", "r6 = com netflix config dynamic boolean property r0", "$ r1 = r6 default value", "$ r2 = java lang boolean $ r1", "$ r4 = $ r3 get boolean $ r2", "$ z0 = $ r4 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r5 = com netflix config dynamic property r0", "$ r3 = r5 lock", "entermonitor $ r3", "label r6 = com netflix config dynamic property r0", "$ l0 = r6 change time", "exitmonitor $ r3", "label return $ l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "r2 = @ parameter2", "com netflix config dynamic property factory check and warn r1", "r5 = new com netflix config dynamic double property", "specialinvoke r5 < init > r1 d0", "r6 = com netflix config property wrapper r5", "com netflix config dynamic property factory add callback r2 r6", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven archetype model archetype model r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven archetype model archetype model r0", "r2 site resource = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven archetype model archetype model r0", "r2 test resource = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven archetype metadata abstract archetype descriptor r0", "r2 file set = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven archetype metadata archetype descriptor r0", "r2 require property = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven archetype metadata file set r0", "$ r1 = r2 encode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven archetype registry archetype registry r0", "r2 languages = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "$ r2 = new java lang illegal argument exception", "specialinvoke $ r2 < init > r1", "throw $ r2", "if r0 ! = null goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == null goto label1", "$ i0 = r0 length", "if $ i0 == 0 goto label1", "r4 = new java io file", "specialinvoke r4 < init > r0", "$ z0 = r4 be directory", "if $ z0 ! = 0 goto label2", "label r5 = new org jboss arquillian container spi configuration exception", "specialinvoke r5 < init > r1", "r6 = java lang throwable r5", "throw r6", "if $ z0 ! = 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get executor", "$ r2 invoke", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r2 = @ parameter1", "if r2 ! = null goto label1", "r2 = r0 get class loader", "label $ r1 = new org jboss arquillian container test spi util service loader", "specialinvoke $ r1 < init > r0 r2", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "specialinvoke r0 activate \\ `` suite\\ ``", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r1 = new org jboss arquillian test spi exception proxy", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = ru yandex qatools ashot comparison image diff r0", "$ r1 = r2 diff markup policy", "$ r1 set diff size trigger i0", "r3 = ru yandex qatools ashot comparison image diff r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = ru yandex qatools ashot comparison image diff r0", "$ r1 = r3 diff markup policy", "$ r2 = $ r1 get transparent mark image", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "f0 = @ parameter1", "r3 = new ru yandex qatools ashot shoot scale decorator", "specialinvoke r3 < init > r0", "$ r2 = r3 with dpr f0", "r4 = ru yandex qatools ashot shoot shoot strategy $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r3 = new ru yandex qatools ashot shoot rotate decorator", "$ r2 = ru yandex qatools ashot shoot shoot strategy simple", "specialinvoke r3 < init > r0 $ r2", "r4 = ru yandex qatools ashot shoot shoot strategy r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org aspectj ajde core aj compiler r0", "$ r2 = r3 build manager", "$ r2 set custom munger factory r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org aspectj ajde ui swing build progress panel r0", "$ r1 = r3 compile_progress bar", "$ i1 = $ r1 get value", "i0 = $ i1 + 1", "r4 = org aspectj ajde ui swing build progress panel r0", "$ r2 = r4 compile_progress bar", "$ r2 set value i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r11 = org aspectj ajdt internal compiler ast inter type declaration r0", "$ r3 = r11 on type bind", "$ i0 = $ r3 get access flag", "$ i1 = $ i0 & 16384", "if $ i1 == 0 goto label1", "$ r4 = r1 problem reporter", "r12 = org aspectj ajdt internal compiler ast inter type declaration r0", "$ i2 = r12 source start", "r13 = org aspectj ajdt internal compiler ast inter type declaration r0", "$ i3 = r13 source end", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r6 = r10 append \\ `` can\\'t make inter-type \\ ``", "$ r7 = $ r6 append r2", "$ r8 = $ r7 append \\ `` declaration on enum type \\ ``", "$ r9 = $ r8 to string", "$ r4 signal error $ i2 $ i3 $ r9", "r14 = org aspectj ajdt internal compiler ast inter type declaration r0", "r14 ignore further investigation = 1", "return 1", "if $ i1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "label r20 = new java io file", "r19 = new java lang string", "$ r7 = r1 get canonical path", "specialinvoke r19 < init > $ r7", "specialinvoke r20 < init > r19", "r22 = org aspectj ajdt internal core builder aj state r0", "$ r8 = r22 reference", "$ r9 = $ r8 get r20", "r3 = org aspectj org eclipse jdt internal core builder reference collection $ r9", "if r3 == null goto label3", "r3 add dependency r2", "label return 1", "if r3 == null goto label3", "label r21 = new org aspectj org eclipse jdt internal core builder reference collection", "$ r13 = char [ ] [ ] [ ] null", "$ r12 = char [ ] [ ] null", "$ r11 = char [ ] [ ] null", "specialinvoke r21 < init > $ r13 $ r12 $ r11", "r21 add dependency r2", "r23 = org aspectj ajdt internal core builder aj state r0", "$ r14 = r23 reference", "$ r14 put r20 r21", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r33 = new java lang string buffer", "specialinvoke r33 < init >", "$ r4 = r33 append \\ `` code max_stack = \\ ``", "r34 = org aspectj apache bcel classfile code r0", "$ i1 = r34 max stack", "$ r4 append $ i1", "$ r6 = r33 append \\", "r35 = org aspectj apache bcel classfile code r0", "$ i2 = r35 max local", "$ r6 append $ i2", "$ r8 = r33 append \\", "r36 = org aspectj apache bcel classfile code r0", "$ r9 = r36 code", "$ i3 = lengthof $ r9", "$ r10 = $ r8 append $ i3", "$ r10 append \\ `` \\n\\ ``", "r37 = org aspectj apache bcel classfile code r0", "$ r13 = r37 code", "r38 = org aspectj apache bcel classfile code r0", "$ r12 = r38 cpool", "$ r14 = org aspectj apache bcel classfile utility code to string $ r13 $ r12 0 -1 1", "r33 append $ r14", "r39 = org aspectj apache bcel classfile code r0", "$ r16 = r39 exception table", "$ i4 = lengthof $ r16", "if $ i4 < = 0 goto label4", "$ r18 = r33 append \\ `` \\n\\ ``", "$ r19 = $ r18 append \\ `` exception entry = \\ ``", "r40 = org aspectj apache bcel classfile code r0", "$ r20 = r40 exception table", "$ i5 = lengthof $ r20", "$ r21 = $ r19 append $ i5", "$ r21 append \\ `` \\n\\ ``", "i8 = 0", "goto label3", "label r43 = org aspectj apache bcel classfile code r0", "$ r32 = r43 exception table", "$ i9 = lengthof $ r32", "if i8 < $ i9 goto label1", "label r41 = org aspectj apache bcel classfile code r0", "$ r23 = r41 exception table", "r2 = $ r23 [ i8 ]", "i0 = r2 get catch type", "r31 = \\ `` finally\\ ``", "if i0 == 0 goto label2", "r42 = org aspectj apache bcel classfile code r0", "$ r30 = r42 cpool", "r31 = $ r30 get constant string i0 7", "label $ r24 = r33 append r31", "$ r24 append \\ `` [ \\ ``", "$ i6 = r2 get start p c", "$ r26 = r33 append $ i6", "$ r27 = $ r26 append \\ `` > \\ ``", "$ i7 = r2 get end p c", "$ r28 = $ r27 append $ i7", "$ r28 append \\ `` ] \\n\\ ``", "i8 = i8 + 1", "if i8 < $ i9 goto label1", "label $ r17 = r33 to string", "return $ r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], []]}
{"nodes": ["r0 = @ this", "r4 = org aspectj apache bcel classfile java class r0", "$ r1 = r4 repository", "if $ r1 ! = null goto label1", "$ r3 = org aspectj apache bcel util synthetic repository get instance", "r5 = org aspectj apache bcel classfile java class r0", "r6 = org aspectj apache bcel util repository $ r3", "r5 repository = r6", "label r7 = org aspectj apache bcel classfile java class r0", "$ r2 = r7 repository", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 dump r1", "r5 = org aspectj apache bcel classfile local variable table r0", "$ z0 = r5 be in packed state", "if $ z0 == 0 goto label1", "r6 = org aspectj apache bcel classfile local variable table r0", "$ r4 = r6 data", "r1 write $ r4", "goto label4", "label return", "if $ z0 == 0 goto label1", "label r7 = org aspectj apache bcel classfile local variable table r0", "$ i0 = r7 local variable table length", "r1 write short $ i0", "i2 = 0", "goto label3", "label r9 = org aspectj apache bcel classfile local variable table r0", "$ i1 = r9 local variable table length", "if i2 < $ i1 goto label2", "label r8 = org aspectj apache bcel classfile local variable table r0", "$ r2 = r8 local variable table", "$ r3 = $ r2 [ i2 ]", "$ r3 dump r1", "i2 = i2 + 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r2 = org aspectj apache bcel generic branch handle r0", "$ r1 = r2 bi", "$ i0 = $ r1 position of this instruction", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new org aspectj apache bcel classfile code exception", "r11 = org aspectj apache bcel generic code exception gen r0", "$ r3 = r11 start_pc", "$ i0 = $ r3 get position", "r12 = org aspectj apache bcel generic code exception gen r0", "$ r4 = r12 end_pc", "$ i1 = $ r4 get position", "r13 = org aspectj apache bcel generic code exception gen r0", "$ r5 = r13 end_pc", "$ r6 = $ r5 get instruction", "$ i2 = $ r6 get length", "$ i3 = $ i1 + $ i2", "r14 = org aspectj apache bcel generic code exception gen r0", "$ r7 = r14 handler_pc", "$ i4 = $ r7 get position", "r15 = org aspectj apache bcel generic code exception gen r0", "$ r8 = r15 catch_type", "if $ r8 ! = null goto label1", "$ i5 = 0", "goto label2", "label specialinvoke r10 < init > $ i0 $ i3 $ i4 $ i5", "return r10", "if $ r8 ! = null goto label1", "label r16 = org aspectj apache bcel generic code exception gen r0", "$ r9 = r16 catch_type", "$ i5 = r1 add class $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org aspectj apache bcel generic instruction handle r0", "$ r3 = r7 targeters", "$ r2 = java util collection empty_set", "if $ r3 ! = $ r2 goto label1", "r6 = new java util hash set", "specialinvoke r6 < init >", "r8 = org aspectj apache bcel generic instruction handle r0", "r8 targeters = r6", "label r9 = org aspectj apache bcel generic instruction handle r0", "$ r4 = r9 targeters", "$ r4 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r3 = org aspectj apache bcel generic object type r0", "$ r2 = r3 classname", "r1 = org aspectj apache bcel repository lookup class $ r2", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label $ z0 = r1 be class", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = org aspectj apache bcel generic object type r0", "$ r2 = r3 classname", "r1 = org aspectj apache bcel repository lookup class $ r2", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label $ z0 = r1 be class", "if $ z0 == 0 goto label2", "$ z1 = 0", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = org aspectj asm internal handle provider delimiter r0", "$ c0 = r1 delim", "return $ c0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = org aspectj bridge abort exception porter", "entermonitor $ r3", "label $ r4 = org aspectj bridge abort exception porter", "$ i0 = $ r4 size", "if $ i0 < = 0 goto label2", "$ r6 = org aspectj bridge abort exception porter", "$ r7 = $ r6 get 0", "r9 = org aspectj bridge abort exception $ r7", "goto label3", "label exitmonitor $ r3", "label goto label7", "label specialinvoke r9 set i message r0", "r9 be porter = 1", "return r9", "if $ i0 < = 0 goto label2", "label $ r5 = new org aspectj bridge abort exception", "specialinvoke $ r5 < init >", "r9 = $ r5", "$ r5 set be silent 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if null == r0 goto label1", "$ r2 = org aspectj bridge message util abort r1", "$ z0 = r0 handle message $ r2", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if null == r0 goto label1", "$ r2 = org aspectj bridge message util warn r1", "$ z0 = r0 handle message $ r2", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if null == r0 goto label1", "$ r2 = org aspectj bridge message util info r1", "$ z0 = r0 handle message $ r2", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "z0 = @ parameter3", "z1 = @ parameter4", "org aspectj util lang util throw iax if null r0 \\ `` sink\\ ``", "org aspectj util lang util throw iax if null r1 \\ `` source\\ ``", "$ r3 = r1 get message r2 z0", "$ z2 = org aspectj bridge message util handle all r0 $ r3 z1", "return $ z2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "z0 = @ parameter3", "z1 = @ parameter4", "org aspectj util lang util throw iax if null r0 \\ `` sink\\ ``", "org aspectj util lang util throw iax if null r1 \\ `` source\\ ``", "if null ! = r2 goto label1", "return 1", "if null ! = r2 goto label1", "label r3 = org aspectj bridge message util get message except r1 r2 z0", "$ z2 = org aspectj bridge message util handle all r0 r3 z1", "return $ z2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if null == r1 goto label2", "$ r3 = r1 get kind", "r8 = org aspectj bridge message writer r0", "$ z0 = r8 be ignore $ r3", "if $ z0 ! = 0 goto label2", "r9 = org aspectj bridge message writer r0", "r2 = r9 render r1", "if null == r2 goto label2", "r10 = org aspectj bridge message writer r0", "$ r4 = r10 writer", "$ r4 println r2", "r11 = org aspectj bridge message writer r0", "$ r5 = r11 writer", "$ r5 flush", "r12 = org aspectj bridge message writer r0", "$ z1 = r12 abort on failure", "if $ z1 == 0 goto label2", "$ z2 = r1 be fail", "if $ z2 ! = 0 goto label1", "$ z3 = r1 be abort", "if $ z3 == 0 goto label2", "label r7 = new org aspectj bridge abort exception", "specialinvoke r7 < init > r1", "r13 = java lang throwable r7", "throw r13", "if $ z3 == 0 goto label2", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], []]}
{"nodes": ["r0 = @ this", "$ r2 = new org aspectj org eclipse jdt core dom aspect declaration", "specialinvoke $ r2 < init > r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "if i0 ! = 2 goto label1", "$ r1 = org aspectj org eclipse jdt core dom aspect declaration aspect p r o p e r t y_ d e s c r i p t o r s_2_0", "return $ r1", "if i0 ! = 2 goto label1", "label $ r0 = org aspectj org eclipse jdt core dom aspect declaration aspect p r o p e r t y_ d e s c r i p t o r s_3_0", "return $ r0"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org aspectj org eclipse jdt internal compiler apt dispatch base processing env impl r0", "r1 _error raise = 1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org aspectj org eclipse jdt internal compiler apt dispatch processor info r0", "r1 _has be call = 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org aspectj org eclipse jdt internal core nd db d b property r0", "r3 = r5 get property r1", "if r3 ! = null goto label1", "$ r4 = r2", "goto label2", "label return $ r4", "if r3 ! = null goto label1", "label $ r4 = r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r15 = org aspectj org eclipse jdt internal core nd db nd string set r0", "$ r3 = r15 lazy cache", "if $ r3 == null goto label1", "r16 = org aspectj org eclipse jdt internal core nd db nd string set r0", "$ r13 = r16 lazy cache", "$ r13 remove r1", "label l7 = 0l", "r17 = org aspectj org eclipse jdt internal core nd db nd string set r0", "l8 = specialinvoke r17 get head", "goto label6", "label $ b2 = l8 cmp 0l", "if $ b2 ! = 0 goto label2", "label $ r5 = org aspectj org eclipse jdt internal core nd db nd string set $ node type next", "r18 = org aspectj org eclipse jdt internal core nd db nd string set r0", "$ r4 = r18 db", "l0 = $ r5 get $ r4 l8", "$ r7 = org aspectj org eclipse jdt internal core nd db nd string set $ node type item", "r19 = org aspectj org eclipse jdt internal core nd db nd string set r0", "$ r6 = r19 db", "l1 = $ r7 get $ r6 l8", "r20 = org aspectj org eclipse jdt internal core nd db nd string set r0", "$ r8 = r20 db", "r2 = $ r8 get string l1", "$ i3 = r2 compare r1 1", "if $ i3 ! = 0 goto label5", "r21 = org aspectj org eclipse jdt internal core nd db nd string set r0", "$ l4 = r21 head", "$ b5 = $ l4 cmp l8", "if $ b5 == 0 goto label3", "$ r12 = org aspectj org eclipse jdt internal core nd db nd string set $ node type next", "r22 = org aspectj org eclipse jdt internal core nd db nd string set r0", "$ r11 = r22 db", "$ r12 put $ r11 l7 l0", "goto label4", "label r26 = org aspectj org eclipse jdt internal core nd db nd string set r0", "$ r10 = r26 db", "$ r10 free l8 6", "return l1", "if $ b5 == 0 goto label3", "label r23 = org aspectj org eclipse jdt internal core nd db nd string set r0", "$ r9 = r23 db", "r24 = org aspectj org eclipse jdt internal core nd db nd string set r0", "$ l6 = r24 ptr", "$ r9 put rec ptr $ l6 l0", "r25 = org aspectj org eclipse jdt internal core nd db nd string set r0", "r25 head = l0", "if $ i3 ! = 0 goto label5", "label l7 = l8", "l8 = l0", "if $ b2 ! = 0 goto label2", "return 0l"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], [39], [], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = org eclipse core resource resource plugin get workspace", "r1 = $ r3 get root", "r2 = r1 find member r0", "if r2 == null goto label1", "$ r4 = r2 get location", "return $ r4", "if r2 == null goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "i2 = 1 < < i1", "$ i3 = i0 & i2", "if $ i3 == 0 goto label1", "return 1", "if $ i3 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r3 = org aspectj org eclipse jdt internal core nd util char array map r0", "$ r1 = r3 map", "$ r2 = $ r1 value", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org aspectj org eclipse jdt internal core nd util char array map r0", "$ r1 = r2 map", "$ z0 = $ r1 be empty", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org aspectj tool ant taskdefs ajc2 r0", "r1 nosymbols = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r6 = new org aspectj tool ant taskdefs ajc2 $ argfile", "specialinvoke r6 < init >", "r8 = org aspectj tool ant taskdefs ajc2 r0", "$ r3 = r8 argfiles", "if $ r3 ! = null goto label1", "r7 = new java util array list", "specialinvoke r7 < init >", "r9 = org aspectj tool ant taskdefs ajc2 r0", "r9 argfiles = r7", "label r10 = org aspectj tool ant taskdefs ajc2 r0", "$ r4 = r10 argfiles", "$ r4 add r6", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org aspectj tool ant taskdefs ajc task r0", "$ r2 = r3 cmd", "$ r2 add flag \\ `` -s\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org aspectj tool ant taskdefs ajc task r0", "$ r4 = r5 cmd", "$ r3 = org aspectj tool ant taskdefs ajc task compliance_inputs", "r2 = $ r4 add option null $ r3 r1", "if null == r2 goto label1", "r6 = org aspectj tool ant taskdefs ajc task r0", "r6 ignore r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r22 = org aspectj tool ant taskdefs ajc task r0", "$ r2 = r22 xweave dir", "if null == $ r2 goto label5", "$ r4 = org aspectj tool ant taskdefs ajc task default_destdir", "r23 = org aspectj tool ant taskdefs ajc task r0", "$ r3 = r23 d dir", "if $ r4 == $ r3 goto label1", "r17 = new org apache tool ant build exception", "specialinvoke r17 < init > \\ `` weave dir force destdir\\ ``", "r24 = java lang throwable r17", "throw r24", "if $ r4 == $ r3 goto label1", "label r25 = org aspectj tool ant taskdefs ajc task r0", "$ r5 = r25 outjar", "if null == $ r5 goto label2", "r18 = new org apache tool ant build exception", "specialinvoke r18 < init > \\ `` weave dir force outjar\\ ``", "r26 = java lang throwable r18", "throw r26", "if null == $ r5 goto label2", "label r27 = org aspectj tool ant taskdefs ajc task r0", "$ r6 = r27 injars", "if null == $ r6 goto label3", "r19 = new org apache tool ant build exception", "specialinvoke r19 < init > \\ `` weave dir incompatible with injars now\\ ``", "r28 = java lang throwable r19", "throw r28", "if null == $ r6 goto label3", "label r29 = org aspectj tool ant taskdefs ajc task r0", "$ r7 = r29 inpath", "if null == $ r7 goto label4", "r20 = new org apache tool ant build exception", "specialinvoke r20 < init > \\ `` weave dir incompatible with inpath now\\ ``", "r30 = java lang throwable r20", "throw r30", "if null == $ r7 goto label4", "label r31 = org aspectj tool ant taskdefs ajc task r0", "$ r8 = r31 xweave dir", "r32 = org aspectj tool ant taskdefs ajc task r0", "r1 = r32 zip directory $ r8", "r21 = new org apache tool ant type path", "r33 = org aspectj tool ant taskdefs ajc task r0", "$ r10 = r33 get project", "$ r11 = r1 get absolute path", "specialinvoke r21 < init > $ r10 $ r11", "r34 = org aspectj tool ant taskdefs ajc task r0", "r34 set injars r21", "r35 = org aspectj tool ant taskdefs ajc task r0", "$ r12 = r35 xweave dir", "r36 = org aspectj tool ant taskdefs ajc task r0", "r36 set destdir $ r12", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r4 = java io file filter null", "$ i0 = org aspectj util file util copy dir r0 r1 r2 r3 $ r4", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r17 = @ parameter1", "if null == r0 goto label1", "$ z0 = r0 can write", "if $ z0 == 0 goto label1", "$ z1 = r0 be directory", "if $ z1 ! = 0 goto label2", "label $ r18 = new java lang illegal argument exception", "$ r19 = new java lang string builder", "specialinvoke $ r19 < init >", "$ r20 = $ r19 append \\ `` bad parent \\ ``", "$ r21 = $ r20 append r0", "$ r22 = $ r21 to string", "specialinvoke $ r18 < init > $ r22", "throw $ r18", "if $ z1 ! = 0 goto label2", "label if null ! = r17 goto label3", "r17 = \\ `` make new child dir\\ ``", "goto label4", "label $ r1 = new java io file", "specialinvoke $ r1 < init > r0 r17", "r23 = $ r1", "i0 = 1000", "r24 = org aspectj util file util random file string", "label i0 = i0 + -1", "if 0 > = i0 goto label6", "$ z6 = r23 exist", "if $ z6 == 0 goto label6", "$ r7 = new java io file", "$ r8 = new java lang string builder", "specialinvoke $ r8 < init >", "$ r9 = $ r8 append r17", "$ r10 = $ r9 append r24", "$ r11 = $ r10 to string", "specialinvoke $ r7 < init > r0 $ r11", "r23 = $ r7", "if $ z6 == 0 goto label6", "label $ z3 = r23 exist", "if $ z3 == 0 goto label7", "$ r3 = java lang system err", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r4 = $ r2 append \\ `` exhausted file for child dir in \\ ``", "$ r5 = $ r4 append r0", "$ r6 = $ r5 to string", "$ r3 println $ r6", "return null", "if $ z3 == 0 goto label7", "label $ z4 = r23 mkdirs", "if $ z4 == 0 goto label8", "$ z5 = r23 exist", "if $ z5 == 0 goto label8", "$ r25 = r23", "goto label9", "label return $ r25", "if $ z5 == 0 goto label8", "label $ r25 = null", "label if null ! = r17 goto label3", "label $ z2 = org aspectj util file util be valid file name r17", "if $ z2 ! = 0 goto label4", "$ r12 = new java lang illegal argument exception", "$ r13 = new java lang string builder", "specialinvoke $ r13 < init >", "$ r14 = $ r13 append \\ `` bad child \\ ``", "$ r15 = $ r14 append r17", "$ r16 = $ r15 to string", "specialinvoke $ r12 < init > $ r16", "throw $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [], [48], [49], [50], [51], [52], [53], [], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = new java io buffer reader", "$ r4 = new java io file reader", "specialinvoke $ r4 < init > r0", "specialinvoke $ r3 < init > $ r4", "$ r5 = new java lang string buffer", "specialinvoke $ r5 < init >", "label i0 = $ r3 read", "if i0 ! = -1 goto label2", "goto label3", "label $ r3 close", "$ r7 = $ r5 to string", "return $ r7", "if i0 ! = -1 goto label2", "label $ c1 = char i0", "$ r5 append $ c1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r10 = @ parameter1", "if null ! = r10 goto label01", "$ r11 = class \\ `` ljava lang object \\ ``", "goto label02", "label r1 = $ r11", "if null ! = r0 goto label03", "$ i3 = 0", "goto label04", "label i0 = $ i3", "if null ! = r10 goto label05", "$ i4 = 0", "goto label06", "label i1 = $ i4", "r12 = null", "if 0 ! = i0 goto label07", "i5 = 0", "goto label11", "label if i5 == i1 goto label12", "$ i2 = r12 size", "$ r4 = java lang reflect array new instance r1 $ i2", "$ r5 = java lang object [ ] $ r4", "r10 = java lang object [ ] $ r5", "label if 0 > = i5 goto label13", "r10 = r12 to array r10", "label return r10", "if 0 ! = i0 goto label07", "label $ r3 = new java util array list", "specialinvoke $ r3 < init > i0", "r12 = $ r3", "i6 = 0", "label if i6 > = i0 goto label10", "$ r6 = r0 [ i6 ]", "if null == $ r6 goto label09", "$ r7 = r0 [ i6 ]", "$ r8 = $ r7 get class", "$ z0 = r1 be assignable from $ r8", "if $ z0 == 0 goto label09", "$ r9 = r0 [ i6 ]", "$ r3 add $ r9", "label i6 = i6 + 1", "goto label08", "label if i6 > = i0 goto label10", "label i5 = $ r3 size", "if null ! = r10 goto label05", "label $ i4 = lengthof r10", "if null ! = r0 goto label03", "label $ i3 = lengthof r0", "if null ! = r10 goto label01", "label $ r2 = r10 get class", "$ r11 = $ r2 get component type"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [], [10], [11], [12], [], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], [44], [45], [46], [47], [48], [49], [50], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = new java lang illegal state exception", "specialinvoke $ r3 < init > \\ `` only make sense for annotation variables\\ ``", "throw $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "i1 = @ parameter3", "$ r3 = r1 get name", "$ r4 = java lang integer to string i0", "$ r5 = java lang integer to hex string i1", "r2 = org aspectj weaver name mangler make name $ r3 r0 $ r4 $ r5", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r1 get exact type", "$ z0 = r3 be parameterized type", "if $ z0 == 0 goto label1", "r4 = org aspectj weaver pattern have this type pattern try to sneak in some generic or parameterized type pattern match stuff anywhere visitor r0", "r4 oh yes it have = 1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org aspectj weaver pattern type pattern list r0", "$ i1 = r1 ellipsis count", "if $ i1 ! = 0 goto label3", "r2 = org aspectj weaver pattern type pattern list r0", "$ i5 = r2 size", "if i0 ! = $ i5 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if i0 ! = $ i5 goto label1", "label $ z0 = 0", "if $ i1 ! = 0 goto label3", "label r3 = org aspectj weaver pattern type pattern list r0", "$ i2 = r3 size", "r4 = org aspectj weaver pattern type pattern list r0", "$ i3 = r4 ellipsis count", "$ i4 = $ i2 - $ i3", "if $ i4 > i0 goto label4", "$ z1 = 1", "goto label5", "label return $ z1", "if $ i4 > i0 goto label4", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "$ r5 = r1 get world", "$ z1 = $ r5 be in java5 mode", "if $ z1 ! = 0 goto label1", "$ r23 = org aspectj weaver weaver message format \\ `` annotation require java5\\ ``", "r29 = org aspectj weaver pattern wild annotation type pattern r0", "$ r24 = r29 get source location", "$ r25 = org aspectj bridge message util error $ r23 $ r24", "r1 message $ r25", "return r0", "if $ z1 ! = 0 goto label1", "label r30 = org aspectj weaver pattern wild annotation type pattern r0", "$ z2 = r30 resolve", "if $ z2 == 0 goto label2", "label r31 = org aspectj weaver pattern wild annotation type pattern r0", "$ r6 = r31 type pattern", "$ r7 = $ r6 resolve binding r1 r2 0 0", "r32 = org aspectj weaver pattern wild annotation type pattern r0", "r32 type pattern = $ r7", "r33 = org aspectj weaver pattern wild annotation type pattern r0", "r33 resolve = 1", "r34 = org aspectj weaver pattern wild annotation type pattern r0", "$ r8 = r34 type pattern", "$ z3 = $ r8 instanceof org aspectj weaver pattern exact type pattern", "if $ z3 == 0 goto label5", "r35 = org aspectj weaver pattern wild annotation type pattern r0", "$ r9 = r35 type pattern", "r3 = org aspectj weaver pattern exact type pattern $ r9", "$ r10 = r3 get exact type", "$ r11 = r1 get world", "$ r12 = $ r10 resolve $ r11", "$ z4 = $ r12 be annotation", "if $ z4 ! = 0 goto label3", "$ r17 = r3 get exact type", "$ r18 = $ r17 get name", "$ r19 = org aspectj weaver weaver message format \\ `` reference to non annotation type\\", "r36 = org aspectj weaver pattern wild annotation type pattern r0", "$ r20 = r36 get source location", "r26 = org aspectj bridge message util error $ r19 $ r20", "$ r21 = r1 get world", "$ r22 = $ r21 get message handler", "$ r22 handle message r26", "r37 = org aspectj weaver pattern wild annotation type pattern r0", "r37 resolve = 0", "label $ r13 = r3 get exact type", "$ r14 = r1 get world", "r27 = $ r13 resolve $ r14", "r38 = org aspectj weaver pattern wild annotation type pattern r0", "r38 resolve annotation value r27 r1", "r28 = new org aspectj weaver pattern exact annotation type pattern", "r39 = org aspectj weaver pattern wild annotation type pattern r0", "$ r16 = r39 annotation value", "r40 = org aspectj weaver unresolved type r27", "specialinvoke r28 < init > r40 $ r16", "r41 = org aspectj weaver pattern pattern node r0", "r28 copy location from r41", "r42 = org aspectj weaver pattern wild annotation type pattern r0", "$ z5 = r42 be for parameter annotation match", "if $ z5 == 0 goto label4", "r28 set for parameter annotation match", "label r43 = org aspectj weaver pattern annotation type pattern r28", "return r43", "if $ z3 == 0 goto label5", "label return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [], [66], []]}
{"nodes": ["r0 = @ this", "r3 = org aspectj weaver reflect java15 reflection base reference type delegate r0", "r1 = r3 get resolve type x", "r4 = org aspectj weaver resolve type r1", "$ z0 = r4 be parameterized type", "if $ z0 ! = 0 goto label1", "r5 = org aspectj weaver resolve type r1", "$ z1 = r5 be raw type", "if $ z1 == 0 goto label2", "label r6 = org aspectj weaver resolve type r1", "$ r2 = r6 get generic type", "r7 = org aspectj weaver resolve type $ r2", "return r7", "if $ z1 == 0 goto label2", "label r8 = org aspectj weaver resolve type r1", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r5 = org aspectj weaver resolve type r0", "$ r3 = r5 get declare interface", "r1 = org aspectj weaver iterators array $ r3", "r6 = org aspectj weaver resolve type r0", "r2 = r6 get superclass", "if r2 ! = null goto label1", "return r1", "if r2 ! = null goto label1", "label $ r4 = org aspectj weaver iterators snoc r1 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org aspectj weaver resolve type r0", "r2 = r10 lookup directly declare member no super r1", "if r2 ! = null goto label3", "r11 = org aspectj weaver resolve type r0", "$ r5 = r11 inter type mungers", "if $ r5 == null goto label3", "r12 = org aspectj weaver resolve type r0", "$ r6 = r12 inter type mungers", "r3 = $ r6 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r7 = r3 next", "r4 = org aspectj weaver concrete type munger $ r7", "$ r8 = r4 get signature", "r13 = org aspectj weaver member $ r8", "$ z1 = org aspectj weaver resolve type match r13 r1", "if $ z1 == 0 goto label2", "$ r9 = r4 get signature", "return $ r9", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r2 = org aspectj weaver shadow r0", "$ r1 = r2 signature", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = new java lang string buffer", "specialinvoke r9 < init >", "i3 = 0", "label $ i0 = lengthof r1", "if i3 > = $ i0 goto label3", "$ r5 = r1 [ i3 ]", "r10 = org aspectj weaver tool abstract trace r0", "$ r6 = r10 format obj $ r5", "r9 append $ r6", "$ i1 = lengthof r1", "$ i2 = $ i1 - 1", "if i3 > = $ i2 goto label2", "r9 append \\", "label i3 = i3 + 1", "goto label1", "if i3 > = $ i0 goto label3", "label $ r4 = r9 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = new org aspectj weaver tool cache default cache key resolver", "specialinvoke r2 < init >", "r3 = org aspectj weaver tool cache cache key resolver r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org aspectj weaver tool cache weaved class cache r0", "$ r1 = r2 cache class handler", "r3 = org aspectj weaver tool generate class handler $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r2 = org aspectj weaver tool cache weaved class cache cache registry", "entermonitor $ r2", "label $ r3 = new java util link list", "$ r4 = org aspectj weaver tool cache weaved class cache cache registry", "specialinvoke $ r3 < init > $ r4", "exitmonitor $ r2", "label return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org aspectj weaver tool default match context r0", "$ r3 = r5 context map", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new org aspectj weaver tool pointcut parser", "specialinvoke $ r2 < init > r0", "$ r3 = java lang thread current thread", "$ r4 = $ r3 get context class loader", "$ r2 set class loader $ r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org aspectj weaver world r0", "$ r1 = r2 message handler", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "z1 = @ parameter1", "r1 = org aspectj weaver world r0", "r1 error threshold = z0", "r2 = org aspectj weaver world r0", "r2 warn threshold = z1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org aspectj weaver world r0", "$ r1 = r2 extra configuration", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r15 = org aspectj apache bcel classfile local variable table r0", "$ z0 = r15 be in packed state", "if $ z0 ! = 0 goto label1", "r10 = new java lang illegal state exception", "specialinvoke r10 < init > \\ `` no in packed state\\ ``", "throw r10", "if $ z0 ! = 0 goto label1", "label r13 = new org aspectj apache bcel classfile local variable table", "r16 = org aspectj apache bcel classfile local variable table r0", "$ i0 = r16 name index", "r17 = org aspectj apache bcel classfile local variable table r0", "$ i1 = r17 length", "r12 = new java io data input stream", "r11 = new java io byte array input stream", "r18 = org aspectj apache bcel classfile local variable table r0", "$ r5 = r18 data", "specialinvoke r11 < init > $ r5", "specialinvoke r12 < init > r11", "r19 = org aspectj apache bcel classfile local variable table r0", "$ r6 = r19 get constant pool", "specialinvoke r13 < init > $ i0 $ i1 r12 $ r6", "label return r13"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org aspectj org eclipse jdt internal core builder reference collection intern qualify name r0 0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r4 = new java lang string buffer", "specialinvoke $ r4 < init >", "$ r4 append \\ `` \\ ``", "i0 = lengthof r0", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r0 [ i1 ]", "$ r8 = r3 get signature", "$ r4 append $ r8", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label $ r4 append \\ `` \\ ``", "$ r7 = $ r4 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core internal runtime adapter manager r0", "$ r1 = r2 factory", "$ r1 clear", "r3 = org eclipse core internal runtime adapter manager r0", "r3 flush lookup", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r4 = new com netflix astyanax map default annotation set", "specialinvoke r4 < init >", "r5 = com netflix astyanax map map cache r0", "r6 = com netflix astyanax map annotation set r4", "$ r3 = r5 get map r1 r6 z0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = com netflix astyanax model column path r0", "$ r1 = r2 path", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com netflix astyanax model column path r0", "$ r1 = r2 column serializer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com netflix astyanax shallow empty checkpoint manager r0", "$ r2 = r5 token map", "$ r3 = $ r2 get r1", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i1 = @ parameter0", "r1 = com google common collect list new array list", "label r11 = com netflix astyanax util write ahead mutation batch executor r0", "$ r5 = r11 wal", "$ r6 = $ r5 read next entry", "if null == $ r6 goto label6", "$ i0 = i1", "i1 = i1 + -1", "if $ i0 < = 0 goto label6", "r12 = com netflix astyanax util write ahead mutation batch executor r0", "$ r7 = r12 keyspace", "r3 = $ r7 prepare mutation batch", "label $ r6 read mutation r3", "r13 = com netflix astyanax util write ahead mutation batch executor r0", "$ r8 = specialinvoke r13 execute wal entry $ r6 r3", "r1 add $ r8", "label goto label5", "label goto label1", "if $ i0 < = 0 goto label6", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r2 = com netflix astyanax connectionpool impl abstract host partition connection pool r0", "$ r1 = r2 topology", "$ r1 refresh", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r1 = @ parameter0", "r2 = r1 slice", "$ r0 = new java util uuid", "$ l0 = r2 get long", "$ l1 = r2 get long", "specialinvoke $ r0 < init > $ l0 $ l1", "return $ r0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r34 = com netflix astyanax recipes lock column prefix distribute row lock r0", "$ r5 = r34 lock column", "if $ r5 == null goto label1", "r35 = com netflix astyanax recipes lock column prefix distribute row lock r0", "$ r23 = r35 lock column", "r30 = new java lang string builder", "specialinvoke r30 < init >", "r36 = com netflix astyanax recipes lock column prefix distribute row lock r0", "$ r24 = r36 prefix", "$ r25 = r30 append $ r24", "r37 = com netflix astyanax recipes lock column prefix distribute row lock r0", "$ r26 = r37 lock id", "$ r27 = $ r25 append $ r26", "$ r28 = $ r27 to string", "$ z0 = $ r23 equal $ r28", "if $ z0 ! = 0 goto label2", "r31 = new java lang illegal state exception", "specialinvoke r31 < init > \\ `` can\\'t change prefix or lock id after acquire the lock\\ ``", "throw r31", "if $ z0 ! = 0 goto label2", "label if r2 ! = null goto label3", "r33 = new java lang long", "specialinvoke r33 < init > 0l", "$ l4 = r33 long value", "goto label4", "label r4 = java lang long value of $ l4", "r43 = com netflix astyanax recipes lock column prefix distribute row lock r0", "$ r15 = r43 column family", "r44 = com netflix astyanax recipes lock column prefix distribute row lock r0", "$ r14 = r44 key", "$ r16 = r1 with row $ r15 $ r14", "r45 = com netflix astyanax recipes lock column prefix distribute row lock r0", "$ r17 = r45 lock column", "$ l3 = r4 long value", "r46 = com netflix astyanax recipes lock column prefix distribute row lock r0", "$ r18 = specialinvoke r46 generate timeout value $ l3", "$ r16 put column $ r17 $ r18 r3", "r47 = com netflix astyanax recipes lock column prefix distribute row lock r0", "$ r20 = r47 lock column", "return $ r20", "label if r2 ! = null goto label3", "label $ l0 = r2 long value", "$ r13 = java util concurrent time unit microseconds", "r41 = com netflix astyanax recipes lock column prefix distribute row lock r0", "$ l1 = r41 timeout", "r42 = com netflix astyanax recipes lock column prefix distribute row lock r0", "$ r12 = r42 timeout unit", "$ l2 = $ r13 convert $ l1 $ r12", "$ l4 = $ l0 + $ l2", "if $ r5 == null goto label1", "label r32 = new java lang string builder", "specialinvoke r32 < init >", "r38 = com netflix astyanax recipes lock column prefix distribute row lock r0", "$ r7 = r38 prefix", "$ r8 = r32 append $ r7", "r39 = com netflix astyanax recipes lock column prefix distribute row lock r0", "$ r9 = r39 lock id", "$ r10 = $ r8 append $ r9", "$ r11 = $ r10 to string", "r40 = com netflix astyanax recipes lock column prefix distribute row lock r0", "r40 lock column = $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com netflix astyanax recipes uniqueness column prefix uniqueness constraint r0", "$ r2 = r4 lock", "$ r2 with lock id r1", "r5 = com netflix astyanax recipes uniqueness column prefix uniqueness constraint r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com netflix astyanax recipes uniqueness dedicate multi row uniqueness constraint r0", "r2 consistency level = r1", "r3 = com netflix astyanax recipes uniqueness dedicate multi row uniqueness constraint r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r13 = com netflix astyanax thrift thrift cluster impl r0", "$ r4 = r13 connection pool", "r12 = new com netflix astyanax thrift thrift cluster impl $ 5", "r14 = com netflix astyanax thrift thrift cluster impl r0", "$ r3 = r14 tracer factory", "$ r2 = com netflix astyanax cassandra operation type get_version", "$ r5 = $ r3 new tracer $ r2", "r15 = com netflix astyanax thrift thrift cluster impl r0", "specialinvoke r12 < init > r15 $ r5", "r16 = com netflix astyanax thrift thrift cluster impl r0", "$ r6 = r16 config", "$ r7 = $ r6 get retry policy", "$ r8 = $ r7 duplicate", "r17 = com netflix astyanax connectionpool operation r12", "$ r9 = $ r4 execute with failover r17 $ r8", "$ r10 = $ r9 get result", "$ r11 = java lang string $ r10", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = org apache avro file codec factory register", "$ r3 = $ r2 get r0", "r1 = org apache avro file codec factory $ r3", "if r1 ! = null goto label1", "r10 = new org apache avro avro runtime exception", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r6 = r9 append \\ `` unrecognized codec \\ ``", "$ r7 = $ r6 append r0", "$ r8 = $ r7 to string", "specialinvoke r10 < init > $ r8", "r11 = java lang throwable r10", "throw r11", "if r1 ! = null goto label1", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org apache avro file data file reader12 r0", "$ r1 = r2 in", "$ r1 close", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new org apache avro file seekable file input", "specialinvoke r5 < init > r1", "r6 = new org apache avro file syncable file output stream", "specialinvoke r6 < init > r1 1", "r7 = org apache avro file data file writer r0", "r8 = org apache avro file seekable input r5", "r9 = java io output stream r6", "$ r4 = r7 append to r8 r9", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = org apache avro file data file writer be reserve meta r1", "if $ z0 == 0 goto label1", "r10 = new org apache avro avro runtime exception", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r6 = r9 append \\ `` can not set reserve meta key \\ ``", "$ r7 = $ r6 append r1", "$ r8 = $ r7 to string", "specialinvoke r10 < init > $ r8", "r11 = java lang throwable r10", "throw r11", "if $ z0 == 0 goto label1", "label r12 = org apache avro file data file writer r0", "$ r3 = specialinvoke r12 set meta internal r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache avro generic generic record builder r0", "$ r1 = r3 record", "$ r2 = $ r1 get i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache avro generic generic record builder r0", "$ r1 = r2 field set flag", "$ z0 = $ r1 [ i0 ]", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache avro generic generic record builder r0", "$ r1 = r3 record", "$ r1 put i0 null", "r4 = org apache avro generic generic record builder r0", "$ r2 = r4 field set flag", "$ r2 [ i0 ] = 0", "r5 = org apache avro generic generic record builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache avro io decoder factory r0", "$ i0 = r1 binary decoder buffer size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "label r9 = org apache avro io parse parser r0", "$ i0 = r9 po", "if $ i0 < = 1 goto label4", "r10 = org apache avro io parse parser r0", "$ r2 = r10 stack", "r11 = org apache avro io parse parser r0", "$ i1 = r11 po", "$ i2 = $ i1 - 1", "r1 = $ r2 [ $ i2 ]", "$ r4 = r1 kind", "$ r3 = org apache avro io parse symbol $ kind implicit_action", "if $ r4 ! = $ r3 goto label2", "r12 = org apache avro io parse parser r0", "$ i5 = r12 po", "$ i6 = $ i5 - 1", "r13 = org apache avro io parse parser r0", "r13 po = $ i6", "r14 = org apache avro io parse parser r0", "$ r7 = r14 symbol handler", "$ r7 do action null r1", "goto label3", "label goto label1", "if $ r4 ! = $ r3 goto label2", "label $ r6 = r1 kind", "$ r5 = org apache avro io parse symbol $ kind terminal", "if $ r6 == $ r5 goto label4", "r15 = org apache avro io parse parser r0", "$ i3 = r15 po", "$ i4 = $ i3 - 1", "r16 = org apache avro io parse parser r0", "r16 po = $ i4", "r17 = org apache avro io parse parser r0", "r17 push production r1", "if $ r6 == $ r5 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "label r8 = org apache avro io parse parser r0", "$ i0 = r8 po", "if $ i0 < 1 goto label2", "r9 = org apache avro io parse parser r0", "$ r2 = r9 stack", "r10 = org apache avro io parse parser r0", "$ i1 = r10 po", "$ i2 = $ i1 - 1", "r1 = $ r2 [ $ i2 ]", "$ r4 = r1 kind", "$ r3 = org apache avro io parse symbol $ kind implicit_action", "if $ r4 ! = $ r3 goto label2", "$ r5 = org apache avro io parse symbol $ implicit action r1", "$ z0 = $ r5 be trail", "if $ z0 == 0 goto label2", "r11 = org apache avro io parse parser r0", "$ i3 = r11 po", "$ i4 = $ i3 - 1", "r12 = org apache avro io parse parser r0", "r12 po = $ i4", "r13 = org apache avro io parse parser r0", "$ r6 = r13 symbol handler", "$ r6 do action null r1", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ this", "r3 = org apache avro io parse parser r0", "$ r1 = r3 stack", "r4 = org apache avro io parse parser r0", "$ i0 = r4 po", "$ i1 = $ i0 - 1", "$ r2 = $ r1 [ $ i1 ]", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache avro protocol r0", "$ r1 = r2 doc", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache avro protocol r0", "$ r2 = r4 type", "$ r3 = $ r2 get r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = org apache avro schema builder builder", "$ r1 = $ r0 map", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache avro util utf8 r0", "$ r1 = r2 set byte length i0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache avro ipc r p c context r0", "$ r1 = r2 response payload", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org apache avro ipc stats stopwatch r0", "$ z0 = r4 run", "if $ z0 ! = 0 goto label1", "r3 = new java lang illegal state exception", "specialinvoke r3 < init >", "throw r3", "if $ z0 ! = 0 goto label1", "label r5 = org apache avro ipc stats stopwatch r0", "$ r1 = r5 tick", "$ l0 = $ r1 tick", "r6 = org apache avro ipc stats stopwatch r0", "$ l1 = r6 start", "$ l2 = $ l0 - $ l1", "r7 = org apache avro ipc stats stopwatch r0", "r7 elapse = $ l2", "r8 = org apache avro ipc stats stopwatch r0", "r8 run = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org apache avro ipc netty transceiver r0", "$ r3 = r10 state lock", "$ r4 = $ r3 write lock", "$ r4 lock", "label r11 = org apache avro ipc netty transceiver r0", "r11 remote = r1", "label r12 = org apache avro ipc netty transceiver r0", "$ r5 = r12 state lock", "$ r6 = $ r5 write lock", "$ r6 unlock", "goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com amazonaws amazon web service client r0", "r5 check mutability", "if r1 ! = null goto label1", "r4 = new java lang illegal argument exception", "specialinvoke r4 < init > \\ `` no region provided\\ ``", "throw r4", "if r1 ! = null goto label1", "label $ r2 = com amazonaws region region get region r1", "r6 = com amazonaws amazon web service client r0", "r6 set region $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws amazon web service request r0", "$ r1 = r2 progress listener", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws amazon web service response r0", "$ r1 = r2 result", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws amazon web service response r0", "$ r1 = r2 response metadata", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws apache http client config r0", "$ r1 = r2 ssl socket factory", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r10 = com amazonaws auth abstract a w s signer get message digest instance", "r10 update r1", "$ r2 = r10 digest", "label return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r10 = com amazonaws auth abstract a w s signer get message digest instance", "r10 update r1", "$ r2 = r10 digest", "label return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r20 = new java lang string builder", "specialinvoke r20 < init >", "$ r10 = r20 append \\ `` aws4\\ ``", "$ r11 = r1 get a w s secret key", "$ r12 = $ r10 append $ r11", "$ r13 = $ r12 to string", "$ r14 = java nio charset charset for name \\ `` utf-8\\ ``", "r5 = $ r13 get bytes $ r14", "$ r15 = com amazonaws auth sign algorithm hmac s h a256", "r21 = com amazonaws auth a w s4 signer r0", "r6 = r21 sign r2 r5 $ r15", "$ r16 = com amazonaws auth sign algorithm hmac s h a256", "r22 = com amazonaws auth a w s4 signer r0", "r7 = r22 sign r3 r6 $ r16", "$ r17 = com amazonaws auth sign algorithm hmac s h a256", "r23 = com amazonaws auth a w s4 signer r0", "r8 = r23 sign r4 r7 $ r17", "$ r18 = com amazonaws auth sign algorithm hmac s h a256", "r24 = com amazonaws auth a w s4 signer r0", "$ r19 = r24 sign \\ `` aws4_request\\", "return $ r19"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["l0 = @ parameter0", "$ r0 = com amazonaws auth internal a w s4 signer utils date formatter", "$ r1 = $ r0 print l0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com amazonaws auth internal signer key r0", "$ l0 = r1 number of day since epoch", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r24 = new java lang illegal argument exception", "specialinvoke r24 < init > \\ `` json string can not be null\\ ``", "throw r24", "if r1 ! = null goto label1", "label r25 = new com amazonaws auth policy policy", "specialinvoke r25 < init >", "r26 = new java util link list", "specialinvoke r26 < init >", "label r2 = com amazonaws util json jackson json node of r1", "r3 = r2 get \\ `` id\\ ``", "r29 = com amazonaws auth policy internal json policy reader r0", "$ z0 = specialinvoke r29 be not null r3", "if $ z0 == 0 goto label3", "$ r12 = r3 a text", "r25 set id $ r12", "label r4 = r2 get \\ `` statement\\ ``", "r30 = com amazonaws auth policy internal json policy reader r0", "$ z1 = specialinvoke r30 be not null r4", "if $ z1 == 0 goto label6", "$ z2 = r4 be object", "if $ z2 == 0 goto label4", "r31 = com amazonaws auth policy internal json policy reader r0", "$ r11 = specialinvoke r31 statement of r4", "r26 add $ r11", "goto label6", "label goto label8", "label r25 set statement r26", "return r25", "if $ z2 == 0 goto label4", "label $ z3 = r4 be array", "if $ z3 == 0 goto label6", "r20 = r4 iterator", "label $ z4 = r20 have next", "if $ z4 == 0 goto label6", "$ r9 = r20 next", "r21 = com fasterxml jackson databind json node $ r9", "r32 = com amazonaws auth policy internal json policy reader r0", "$ r10 = specialinvoke r32 statement of r21", "r26 add $ r10", "goto label5"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new com amazonaws auth policy policy reader option", "specialinvoke $ r1 < init >", "$ r2 = com amazonaws auth policy policy from json r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws auth policy statement r0", "$ r1 = r2 resource", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws auth policy statement r0", "$ r1 = r2 condition", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = com amazonaws auth profile internal aws profile name loader r0", "r1 = specialinvoke r3 get env profile name", "$ z0 = com amazonaws util string utils be null or empty r1", "if $ z0 ! = 0 goto label1", "return r1", "if $ z0 ! = 0 goto label1", "label r4 = com amazonaws auth profile internal aws profile name loader r0", "r2 = specialinvoke r4 get sys property profile name", "$ z1 = com amazonaws util string utils be null or empty r2", "if $ z1 ! = 0 goto label2", "return r2", "if $ z1 ! = 0 goto label2", "label return \\ `` default\\ ``"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com amazonaws auth profile internal basic profile r0", "$ r2 = r5 get property", "$ r3 = $ r2 get r1", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws auth profile internal securitytoken role info r0", "r2 long live credential provider = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com amazonaws auth signer factory create signer r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = com amazonaws client builder aws client builder r0", "$ r1 = r4 request handler", "if $ r1 ! = null goto label1", "$ r3 = null", "goto label2", "label return $ r3", "if $ r1 ! = null goto label1", "label r5 = com amazonaws client builder aws client builder r0", "$ r2 = r5 request handler", "$ r3 = java util collection unmodifiable list $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = com amazonaws client builder aws client builder r0", "$ r3 = r5 advance config", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com amazonaws client configuration r0", "r1 set max connection i0", "r2 = com amazonaws client configuration r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws client configuration r0", "$ r1 = r2 proxy authentication method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com amazonaws client configuration r0", "$ z0 = r1 use gzip", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com amazonaws client configuration r0", "$ l0 = r1 connection max idle millis", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com amazonaws client configuration r0", "$ z0 = r1 cache response metadata", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws client configuration r0", "$ r1 = r2 apache http client config", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 ! = null goto label1", "$ r3 = r0", "goto label2", "label r5 = java io input stream $ r3", "return r5", "if r1 ! = null goto label1", "label r4 = new com amazonaws event response progress input stream", "$ r3 = r4", "$ r2 = r1 get general progress listener", "specialinvoke r4 < init > r0 $ r2"], "adj": [[1], [2], [3], [4], [], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["z0 = @ parameter0", "if z0 == 0 goto label1", "$ r1 = com amazonaws event s d k progress publisher $ lazy holder access $ 000", "$ r1 shutdown now", "goto label2", "label return", "if z0 == 0 goto label1", "label $ r0 = com amazonaws event s d k progress publisher $ lazy holder access $ 000", "$ r0 shutdown"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws http http response r0", "$ r1 = r2 request", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = com amazonaws http idle connection reaper register connection manager r0 60000l", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "$ r3 = com amazonaws http idle connection reaper instance", "if $ r3 ! = null goto label6", "entermonitor class \\ `` lcom amazonaws http idle connection reaper \\ ``", "label $ r7 = com amazonaws http idle connection reaper instance", "if $ r7 ! = null goto label2", "$ r8 = new com amazonaws http idle connection reaper", "specialinvoke $ r8 < init >", "com amazonaws http idle connection reaper instance = $ r8", "$ r9 = com amazonaws http idle connection reaper instance", "$ r9 start", "label exitmonitor class \\ `` lcom amazonaws http idle connection reaper \\ ``", "label goto label6", "label $ r4 = com amazonaws http idle connection reaper connection manager", "$ r5 = java lang long value of l0", "$ r6 = $ r4 put r0 $ r5", "if $ r6 ! = null goto label7", "$ z0 = 1", "goto label8", "label return $ z0", "if $ r6 ! = null goto label7", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = r1 get header", "r7 = com amazonaws internal http json error code parser r0", "r3 = specialinvoke r7 parse error code from header $ r4", "if r3 == null goto label1", "return r3", "if r3 == null goto label1", "label if r2 == null goto label2", "$ r5 = r2 get json node", "r8 = com amazonaws internal http json error code parser r0", "$ r6 = specialinvoke r8 parse error code from content $ r5", "return $ r6", "label if r2 == null goto label2", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = com amazonaws internal sdk internal map r0", "$ z0 = r1 auto construct", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r1 = new java lang illegal argument exception", "specialinvoke $ r1 < init >", "throw $ r1", "if r0 ! = null goto label1", "label $ z0 = com amazonaws log internal log factory factory configure", "if $ z0 == 0 goto label2", "return 0", "if $ z0 == 0 goto label2", "label com amazonaws log internal log factory factory = r0", "com amazonaws log internal log factory factory configure = 1", "return 1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["$ r0 = com amazonaws metric aws sdk metric register admin mbean name", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r1 = com amazonaws metric aws sdk metric mc", "if $ r1 ! = null goto label1", "$ z0 = com amazonaws metric aws sdk metric be default metric enable", "if $ z0 == 0 goto label1", "com amazonaws metric aws sdk metric enable default metric", "label $ r3 = com amazonaws metric aws sdk metric mc", "if $ r3 ! = null goto label2", "$ r4 = com amazonaws metric request metric collector none", "goto label3", "label return $ r4", "if $ r3 ! = null goto label2", "label $ r2 = com amazonaws metric aws sdk metric mc", "$ r4 = $ r2 get request metric collector"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = com amazonaws metric aws sdk metric mc", "if r0 == null goto label1", "$ z0 = r0 be enable", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["$ r0 = com amazonaws metric metric collector none", "com amazonaws metric aws sdk metric set metric collector $ r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com amazonaws metric aws sdk metric registry", "$ r1 set metric type r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r1 = java lang thread current thread", "r0 = $ r1 get stack trace", "i1 = 0", "label $ i0 = lengthof r0", "if i1 > = $ i0 goto label3", "$ r4 = r0 [ i1 ]", "$ r5 = $ r4 get class name", "$ z0 = $ r5 equal \\ `` com amazonaws metric internal cloudwatch default metric collector factory\\ ``", "if $ z0 == 0 goto label2", "$ r6 = com amazonaws metric aws sdk metric credential provider", "return $ r6", "if $ z0 == 0 goto label2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label $ r2 = new java lang security exception", "specialinvoke $ r2 < init >", "$ r3 = org apache common log log factory get log class \\ `` lcom amazonaws metric aws sdk metric \\ ``", "$ r3 warn \\ `` illegal attempt to access the credential provider\\", "throw $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [], [15], [16], [17], [18], [19], []]}
{"nodes": ["$ r0 = com amazonaws metric aws sdk metric jvm metric name", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "com amazonaws metric aws sdk metric jvm metric name = r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = com amazonaws metric aws sdk metric host metric name", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws partition model endpoint r0", "r2 credential scope = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws partition model partition r0", "r2 dns suffix = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com amazonaws partition model service r0", "r1 be regionalized = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com amazonaws region region r0", "$ r2 = r3 region impl", "$ z0 = $ r2 be service support r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com amazonaws region region r0", "$ r2 = r3 region impl", "$ z0 = $ r2 have https endpoint r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com amazonaws region region r0", "$ r2 = r3 region impl", "$ z0 = $ r2 have http endpoint r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws retry retry policy r0", "$ r1 = r2 backoff strategy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = com amazonaws sdk base exception r0", "$ z0 = com amazonaws retry retry utils be throttle exception r1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 equal \\ `` \\ ``", "if $ z0 == 0 goto label1", "return 1", "if $ z0 == 0 goto label1", "label r3 = com amazonaws transform stax unmarshaller context r0", "$ r2 = r3 stack string", "$ z1 = $ r2 end with r1", "return $ z1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r27 = com amazonaws transform stax unmarshaller context r0", "$ r4 = r27 attribute iterator", "if $ r4 == null goto label1", "r28 = com amazonaws transform stax unmarshaller context r0", "$ r21 = r28 attribute iterator", "$ z4 = $ r21 have next", "if $ z4 == 0 goto label1", "r29 = com amazonaws transform stax unmarshaller context r0", "$ r22 = r29 attribute iterator", "$ r23 = $ r22 next", "$ r24 = javax xml stream event x m l event $ r23", "r30 = com amazonaws transform stax unmarshaller context r0", "r30 current event = $ r24", "goto label2", "label r33 = com amazonaws transform stax unmarshaller context r0", "$ r25 = r33 current event", "$ z5 = $ r25 be start element", "if $ z5 == 0 goto label3", "r34 = com amazonaws transform stax unmarshaller context r0", "$ r18 = r34 current event", "$ r19 = $ r18 a start element", "$ r20 = $ r19 get attribute", "r35 = com amazonaws transform stax unmarshaller context r0", "r35 attribute iterator = $ r20", "label r36 = com amazonaws transform stax unmarshaller context r0", "$ r7 = r36 current event", "r37 = com amazonaws transform stax unmarshaller context r0", "specialinvoke r37 update context $ r7", "r38 = com amazonaws transform stax unmarshaller context r0", "$ r8 = r38 event reader", "$ z0 = $ r8 have next", "if $ z0 == 0 goto label6", "r39 = com amazonaws transform stax unmarshaller context r0", "$ r9 = r39 event reader", "r1 = $ r9 peek", "if r1 == null goto label6", "$ z1 = r1 be character", "if $ z1 == 0 goto label6", "r40 = com amazonaws transform stax unmarshaller context r0", "$ r10 = r40 metadata expression", "r2 = $ r10 iterator", "label $ z2 = r2 have next", "if $ z2 == 0 goto label6", "$ r11 = r2 next", "r3 = com amazonaws transform stax unmarshaller context $ metadata expression $ r11", "$ r12 = r3 expression", "$ i0 = r3 target depth", "r41 = com amazonaws transform stax unmarshaller context r0", "$ z3 = r41 test expression $ r12 $ i0", "if $ z3 == 0 goto label5", "r42 = com amazonaws transform stax unmarshaller context r0", "$ r13 = r42 metadata", "$ r14 = r3 key", "$ r15 = r1 a character", "$ r16 = $ r15 get data", "$ r13 put $ r14 $ r16", "label goto label4", "if $ z2 == 0 goto label6", "label r43 = com amazonaws transform stax unmarshaller context r0", "$ r26 = r43 current event", "return $ r26", "if $ z4 == 0 goto label1", "label r31 = com amazonaws transform stax unmarshaller context r0", "$ r5 = r31 event reader", "$ r6 = $ r5 next event", "r32 = com amazonaws transform stax unmarshaller context r0", "r32 current event = $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [], [63], [64], [65], [66], [67], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "$ r3 = \\ `` \\ ``", "goto label3", "label return $ r3", "if $ i0 ! = 0 goto label2", "label $ r1 = com amazonaws util base16 lower codec", "$ r2 = $ r1 encode r0", "$ r3 = com amazonaws util codec utils to string direct $ r2"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "label $ r2 = r0", "goto label3", "label return $ r2", "if $ i0 ! = 0 goto label2", "label $ r1 = com amazonaws util base32 codec", "$ i1 = lengthof r0", "$ r2 = $ r1 decode r0 $ i1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ z0 = r0 have array", "if $ z0 == 0 goto label2", "$ r5 = r0 array", "$ i1 = r0 array offset", "$ i2 = r0 array offset", "$ i3 = r0 limit", "$ i4 = $ i2 + $ i3", "$ r6 = java util array copy of range $ r5 $ i1 $ i4", "return $ r6", "if $ z0 == 0 goto label2", "label r1 = r0 a read only buffer", "r1 rewind", "$ i0 = r1 remain", "r2 = newarray byte [ $ i0 ]", "r1 get r2", "return r2"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = com amazonaws util capacity manager r0", "$ z0 = r1 acquire 1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "label $ r2 = com amazonaws util date utils rfc822 date format", "$ l0 = r0 get time", "$ r3 = $ r2 print $ l0", "label return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "r6 = @ parameter6", "r7 = @ parameter7", "$ r9 = new java util hash map", "specialinvoke $ r9 < init >", "com amazonaws util immutable map parameter put and warn duplicate key $ r9 r0 r1", "com amazonaws util immutable map parameter put and warn duplicate key $ r9 r2 r3", "com amazonaws util immutable map parameter put and warn duplicate key $ r9 r4 r5", "com amazonaws util immutable map parameter put and warn duplicate key $ r9 r6 r7", "$ r10 = new com amazonaws util immutable map parameter", "specialinvoke $ r10 < init > $ r9", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ l0 = com amazonaws util i o utils copy r0 r1 9223372036854775807l", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = com amazonaws util joda time $ lazy holder version", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r3 = com amazonaws util json jackson object mapper", "$ r4 = $ r3 read value r0 r1", "label return $ r4"], "adj": [[1], [2], [3], [], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com amazonaws util md5 utils compute m d5 hash r0", "$ r2 = com amazonaws util base64 encode a string $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get parameter", "$ z0 = r1 be empty", "if $ z0 == 0 goto label1", "return null", "if $ z0 == 0 goto label1", "label $ r8 = new java util array list", "specialinvoke $ r8 < init >", "$ r9 = r1 entry set", "r3 = $ r9 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label5", "$ r11 = r3 next", "r4 = java util map $ entry $ r11", "$ r12 = r4 get key", "r5 = java lang string $ r12", "$ r13 = r4 get value", "$ r14 = java util list $ r13", "r6 = $ r14 iterator", "label $ z2 = r6 have next", "if $ z2 == 0 goto label4", "$ r15 = r6 next", "r7 = java lang string $ r15", "$ r16 = new com amazonaws util basic name value pair", "specialinvoke $ r16 < init > r5 r7", "$ r8 add $ r16", "goto label3", "if $ z2 == 0 goto label4", "label goto label2", "if $ z1 == 0 goto label5", "label $ r10 = com amazonaws util u r l encode utils format $ r8 \\ `` utf-8\\ ``", "return $ r10"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "i3 = 0", "label $ i0 = lengthof r1", "if i3 > = $ i0 goto label3", "$ r5 = r1 [ i3 ]", "$ r3 append $ r5", "$ i1 = lengthof r1", "$ i2 = $ i1 - 1", "if i3 > = $ i2 goto label2", "$ r3 append r0", "label i3 = i3 + 1", "goto label1", "if i3 > = $ i0 goto label3", "label $ r4 = $ r3 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = com amazonaws util string utils be null or empty r0", "if $ z0 == 0 goto label1", "return r0", "if $ z0 == 0 goto label1", "label $ r1 = com amazonaws util string utils locale_english", "$ r2 = r0 to low case $ r1", "return $ r2"], "adj": [[1], [2], [3], [], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com amazonaws util xpath utils xpath", "$ r3 = com amazonaws util xpath utils a byte buffer r0 r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = @ parameter0", "r5 = com amazonaws service sqs amazon s q s client r0", "r6 = com amazonaws amazon web service request r3", "$ r1 = r5 before client execution r6", "r4 = com amazonaws service sqs model receive message request $ r1", "r7 = com amazonaws service sqs amazon s q s client r0", "$ r2 = r7 execute receive message r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = @ parameter0", "r5 = com amazonaws service sqs amazon s q s client r0", "r6 = com amazonaws amazon web service request r3", "$ r1 = r5 before client execution r6", "r4 = com amazonaws service sqs model send message request $ r1", "r7 = com amazonaws service sqs amazon s q s client r0", "$ r2 = r7 execute send message r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = @ parameter0", "r5 = com amazonaws service sqs amazon s q s client r0", "r6 = com amazonaws amazon web service request r3", "$ r1 = r5 before client execution r6", "r4 = com amazonaws service sqs model tag queue request $ r1", "r7 = com amazonaws service sqs amazon s q s client r0", "$ r2 = r7 execute tag queue r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = com amazonaws service sqs buffer queue buffer config r0", "$ i0 = r1 max batch size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = com amazonaws service sqs model add permission request r0", "$ r1 = r5 a w s account id", "if $ r1 ! = null goto label1", "r4 = new com amazonaws internal sdk internal list", "specialinvoke r4 < init >", "r6 = com amazonaws service sqs model add permission request r0", "r6 a w s account id = r4", "label r7 = com amazonaws service sqs model add permission request r0", "$ r2 = r7 a w s account id", "r8 = java util list $ r2", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r5 = com amazonaws service sqs model get queue attribute request r0", "$ r1 = r5 attribute name", "if $ r1 ! = null goto label1", "r4 = new com amazonaws internal sdk internal list", "specialinvoke r4 < init >", "r6 = com amazonaws service sqs model get queue attribute request r0", "r6 attribute name = r4", "label r7 = com amazonaws service sqs model get queue attribute request r0", "$ r2 = r7 attribute name", "r8 = java util list $ r2", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws service sqs model message r0", "r2 message id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws service sqs model purge queue request r0", "r2 queue url = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws service sqs model receive message request r0", "r2 visibility timeout = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws service sqs model receive message request r0", "r2 wait time second = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws service sqs model remove permission request r0", "r2 label = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache axis attachment attachment part r0", "$ r2 = r3 mime header", "$ r2 remove header r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org apache axis attachment attachment utils be attachment r1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r1 = org apache axis attachment boundary delimit stream log", "$ r0 = new java lang string buffer", "specialinvoke $ r0 < init >", "$ r2 = $ r0 append \\ `` \\ ``", "$ i0 = org apache axis attachment boundary delimit stream stream count", "$ i1 = $ i0 + 1", "$ r3 = $ r2 append $ i1", "$ r4 = $ r3 to string", "$ r5 = org apache axis utils message get message \\ `` stream no\\", "$ r1 debug $ r5", "$ i2 = org apache axis attachment boundary delimit stream stream count", "$ i3 = $ i2 + 1", "org apache axis attachment boundary delimit stream stream count = $ i3", "return $ i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis attachment dynamic content data handler r0", "$ i0 = r1 chunk size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis attachment manage memory data source r0", "$ r1 = r2 content type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis axis fault r0", "$ r1 = r2 fault node", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis axis fault r0", "r2 fault node = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis client admin client r0", "$ r1 = r2 call", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r3 = org apache axis client admin client log", "$ r4 = org apache axis utils message get message \\ `` do quit00\\ ``", "$ r3 debug $ r4", "r1 = \\ `` < mquit xmlnsm=\\\\\\ `` http xml apache org axis wsdd \\\\\\ `` > \\ ``", "r8 = new java io byte array input stream", "$ r6 = r1 get bytes", "specialinvoke r8 < init > $ r6", "r9 = org apache axis client admin client r0", "$ r7 = r9 process r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = org apache axis client admin client r0", "$ r4 = r13 call", "if $ r4 ! = null goto label1", "r11 = new java lang exception", "$ r10 = org apache axis utils message get message \\ `` null call00\\ ``", "specialinvoke r11 < init > $ r10", "throw r11", "if $ r4 ! = null goto label1", "label r12 = new java net url", "$ r6 = r1 get u r l", "specialinvoke r12 < init > $ r6", "r14 = org apache axis client admin client r0", "r14 set target endpoint address r12", "$ r7 = r1 get user", "$ r8 = r1 get password", "r15 = org apache axis client admin client r0", "r15 set login $ r7 $ r8", "r3 = r1 be value set 116", "r16 = org apache axis client admin client r0", "r16 set transport r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache axis client admin client r0", "$ r2 = r3 process null r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org apache axis client call r0", "$ r1 = r5 operation", "if $ r1 == null goto label1", "r6 = org apache axis client call r0", "$ r3 = r6 operation", "$ r4 = $ r3 get use", "return $ r4", "if $ r1 == null goto label1", "label $ r2 = org apache axis constant use default", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis client call r0", "$ z0 = r1 use s o a p action", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis client call r0", "r2 use s o a p action = 1", "r3 = org apache axis client call r0", "r3 s o a p action u r i = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "label r6 = org apache axis client call r0", "$ r2 = r6 transport", "if $ r2 ! = null goto label3", "label return null", "if $ r2 ! = null goto label3", "label r7 = org apache axis client call r0", "$ r3 = r7 transport", "$ r4 = $ r3 get url", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis client call r0", "$ z0 = r2 parm and ret req", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache axis client call r0", "r3 set return type r1", "r4 = org apache axis client call r0", "$ r2 = r4 operation", "$ r2 set return header 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis client call r0", "$ r1 = r2 operation name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis client call r0", "$ r1 = r2 port name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l5 = 0l", "$ r2 = org apache axis client call tlog", "$ z0 = $ r2 be debug enabled", "if $ z0 == 0 goto label01", "l5 = java lang system current time millis", "label i6 = 0", "label if r1 == null goto label04", "$ i4 = lengthof r1", "if i6 > = $ i4 goto label04", "$ r32 = r1 [ i6 ]", "$ z3 = $ r32 instanceof org apache axis message s o a p body element", "if $ z3 ! = 0 goto label03", "goto label04", "label if r1 == null goto label09", "$ i1 = lengthof r1", "if $ i1 < = 0 goto label09", "$ i2 = lengthof r1", "if i6 ! = $ i2 goto label09", "r55 = org apache axis client call r0", "r55 be msg = 1", "r50 = new org apache axis message s o a p envelope", "r56 = org apache axis client call r0", "$ r20 = r56 msg context", "$ r21 = $ r20 get s o a p constant", "r57 = org apache axis client call r0", "$ r22 = r57 msg context", "$ r23 = $ r22 get schema version", "specialinvoke r50 < init > $ r21 $ r23", "i7 = 0", "label $ i3 = lengthof r1", "if i7 > = $ i3 goto label06", "$ r30 = r1 [ i7 ]", "$ r31 = org apache axis message s o a p body element $ r30", "r50 add body element $ r31", "i7 = i7 + 1", "goto label05", "if i7 > = $ i3 goto label06", "label r51 = new org apache axis message", "specialinvoke r51 < init > r50", "r58 = org apache axis client call r0", "r58 set request message r51", "r59 = org apache axis client call r0", "r59 invoke", "r60 = org apache axis client call r0", "$ r25 = r60 msg context", "r44 = $ r25 get response message", "if r44 ! = null goto label08", "r61 = org apache axis client call r0", "$ r27 = r61 msg context", "$ z2 = $ r27 be property true \\ `` call fault on no response\\", "if $ z2 == 0 goto label07", "r52 = new org apache axis axis fault", "$ r29 = org apache axis utils message get message \\ `` null response00\\ ``", "specialinvoke r52 < init > $ r29", "r62 = java lang throwable r52", "throw r62", "if $ z2 == 0 goto label07", "label return null", "if r44 ! = null goto label08", "label r45 = r44 get s o a p envelope", "$ r26 = r45 get body element", "return $ r26", "if i6 ! = $ i2 goto label09", "label r63 = org apache axis client call r0", "$ r46 = r63 operation name", "if $ r46 ! = null goto label10", "r53 = new org apache axis axis fault", "$ r18 = org apache axis utils message get message \\ `` no operation00\\ ``", "specialinvoke r53 < init > $ r18", "r64 = java lang throwable r53", "throw r64", "if $ r46 ! = null goto label10", "label r65 = org apache axis client call r0", "$ r3 = r65 operation name", "$ r4 = $ r3 get namespace u r i", "r66 = org apache axis client call r0", "$ r5 = r66 operation name", "$ r6 = $ r5 get local part", "r67 = org apache axis client call r0", "r47 = r67 invoke $ r4 $ r6 r1", "$ r7 = org apache axis client call tlog", "$ z1 = $ r7 be debug enabled", "if $ z1 == 0 goto label11", "l8 = java lang system current time millis", "$ r9 = org apache axis client call tlog", "r54 = new java lang string buffer", "specialinvoke r54 < init >", "$ r10 = r54 append \\ `` axis call invoke \\ ``", "$ l0 = l8 - l5", "$ r11 = $ r10 append $ l0", "$ r12 = $ r11 append \\ `` \\ ``", "r68 = org apache axis client call r0", "$ r13 = r68 operation name", "$ r14 = $ r12 append $ r13", "$ r15 = $ r14 to string", "$ r9 debug $ r15", "label return r47", "if $ z3 ! = 0 goto label03", "label i6 = i6 + 1", "goto label02"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [], [59], [60], [61], [62], [63], [], [65], [66], [67], [68], [69], [70], [71], [72], [], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], [99], [100], [101], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r24 = org apache axis client call r0", "$ r3 = r24 get property \\ `` attachment_encapsulation_format\\ ``", "r2 = java lang string $ r3", "if null == r2 goto label3", "r16 = r1 get attachment impl", "if null == r16 goto label3", "$ r8 = \\ `` axis attachment style mime\\ ``", "$ z1 = $ r8 equal r2", "if $ z1 == 0 goto label1", "r16 set send type 2", "goto label3", "label r25 = org apache axis client call r0", "$ r17 = r25 attachment part", "if null == $ r17 goto label8", "r26 = org apache axis client call r0", "$ r4 = r26 attachment part", "$ z0 = $ r4 be empty", "if $ z0 ! = 0 goto label8", "label r18 = r1 get attachment impl", "if null ! = r18 goto label5", "r22 = new java lang runtime exception", "$ r7 = org apache axis utils message get message \\ `` no attachments\\ ``", "specialinvoke r22 < init > $ r7", "throw r22", "if null ! = r18 goto label5", "label r27 = org apache axis client call r0", "$ r5 = r27 attachment part", "r18 set attachment part $ r5", "label goto label8", "label r29 = org apache axis client call r0", "$ r20 = r29 msg context", "$ r20 set request message r1", "r30 = org apache axis client call r0", "$ r21 = r30 attachment part", "$ r21 clear", "return", "if $ z1 == 0 goto label1", "label $ r9 = \\ `` axis attachment style mtom\\ ``", "$ z2 = $ r9 equal r2", "if $ z2 == 0 goto label2", "r16 set send type 4", "if $ z2 == 0 goto label2", "label $ r10 = \\ `` axis attachment style dime\\ ``", "$ z3 = $ r10 equal r2", "if $ z3 == 0 goto label3", "r16 set send type 3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], [46], [47], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis client call r0", "r1 my header = null", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org apache axis client call r0", "$ z0 = r5 be never invoke", "if $ z0 == 0 goto label1", "r4 = new javax xml rpc j a x r p c exception", "$ r3 = org apache axis utils message get message \\ `` output params unavailable\\ ``", "specialinvoke r4 < init > $ r3", "r6 = java lang throwable r4", "throw r6", "if $ z0 == 0 goto label1", "label r7 = org apache axis client call r0", "$ r1 = r7 out params", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis client service r0", "$ r1 = r2 engine", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = newarray org apache axis message s o a p header element [ 0 ]", "label r9 = org apache axis client stub r0", "$ r1 = r9 _call", "if $ r1 ! = null goto label3", "label return r6", "if $ r1 ! = null goto label3", "label r10 = org apache axis client stub r0", "$ r2 = r10 _call", "$ r3 = $ r2 get response message", "$ r4 = $ r3 get s o a p envelope", "r7 = $ r4 get header", "$ i0 = r7 size", "r6 = newarray org apache axis message s o a p header element [ $ i0 ]", "r7 copy into r6", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis client transport r0", "r2 url = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache axis deployment wsdd w s d d chain r0", "$ r2 = r3 handler", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache axis deployment wsdd w s d d deployment r0", "$ r2 = r4 namespace to service", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r17 = new java io string writer", "specialinvoke r17 < init >", "r18 = new org apache axis encode serialization context", "specialinvoke r18 < init > r17", "r18 set pretty 1", "label r21 = org apache axis deployment wsdd w s d d document r0", "$ r5 = r21 deployment", "$ r5 write to context r18", "label goto label4", "label r17 close", "r20 = new org xml sax input source", "r19 = new java io string reader", "$ r8 = r17 get buffer", "$ r9 = $ r8 to string", "specialinvoke r19 < init > $ r9", "specialinvoke r20 < init > r19", "$ r10 = org apache axis utils x m l utils new document r20", "label return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache axis deployment wsdd w s d d document r0", "$ r2 = r6 deployment", "if $ r2 == null goto label1", "r7 = org apache axis deployment wsdd w s d d document r0", "$ r5 = r7 deployment", "$ r5 deploy to registry r1", "label r8 = org apache axis deployment wsdd w s d d document r0", "$ r3 = r8 undeployment", "if $ r3 == null goto label2", "r9 = org apache axis deployment wsdd w s d d document r0", "$ r4 = r9 undeployment", "$ r4 undeploy from registry r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis deployment wsdd w s d d global configuration r0", "r2 response flow = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache axis deployment wsdd w s d d service r0", "$ r2 = r3 type mapping", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis deployment wsdd w s d d service r0", "r2 style = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis description field desc r0", "$ z0 = r1 _is element", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis description parameter desc r0", "$ z0 = r1 omittable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache axis description parameter desc r0", "r1 nillable = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r25 = org apache axis encode ser base deserializer factory r0", "$ r3 = r25 java type", "if $ r3 == null goto label8", "r26 = org apache axis encode ser base deserializer factory r0", "$ r4 = r26 xml type", "if $ r4 == null goto label8", "r27 = org apache axis encode ser base deserializer factory r0", "r2 = r27 get deser class constructor", "if r2 == null goto label8", "label $ r5 = newarray java lang object [ 2 ]", "r28 = org apache axis encode ser base deserializer factory r0", "$ r6 = r28 java type", "$ r5 [ 0 ] = $ r6", "r29 = org apache axis encode ser base deserializer factory r0", "$ r7 = r29 xml type", "$ r5 [ 1 ] = $ r7", "$ r8 = r2 new instance $ r5", "$ r9 = org apache axis encode deserializer $ r8", "label return $ r9", "if r2 == null goto label8", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r4 = org apache axis encode ser bean deserializer r0", "$ r1 = r4 type desc", "if $ r1 ! = null goto label1", "return null", "if $ r1 ! = null goto label1", "label r5 = org apache axis encode ser bean deserializer r0", "$ r2 = r5 type desc", "$ r3 = $ r2 get any desc", "return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis encode serialization context r0", "$ z0 = r1 do multi refs", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ z0 = r1 instanceof org apache axis encode type mapping delegate", "if $ z0 ! = 0 goto label2", "label r9 = new java lang illegal argument exception", "$ r3 = org apache axis utils message get message \\ `` bad type mapping\\ ``", "specialinvoke r9 < init > $ r3", "throw r9", "if $ z0 ! = 0 goto label2", "label r11 = org apache axis encode type mapping registry impl r0", "$ r4 = r11 default del t m", "$ r5 = $ r4 get next", "if $ r5 == null goto label3", "r10 = new java lang illegal argument exception", "$ r8 = org apache axis utils message get message \\ `` default type mapping set\\ ``", "specialinvoke r10 < init > $ r8", "throw r10", "if $ r5 == null goto label3", "label $ r6 = org apache axis encode type mapping delegate r1", "r12 = org apache axis encode type mapping registry impl r0", "r12 default del t m = $ r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache axis handler basic handler r0", "r1 make lockable = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org apache axis handler basic handler r0", "$ r3 = r6 option", "if $ r3 == null goto label1", "r7 = org apache axis handler basic handler r0", "$ r4 = r7 option", "$ r5 = $ r4 get r1", "if $ r5 ! = null goto label2", "label if r2 == null goto label2", "$ z1 = 1", "goto label3", "label z0 = $ z1", "if $ z1 == 0 goto label4", "r8 = org apache axis handler basic handler r0", "r8 set option r1 r2", "label return z0", "label if r2 == null goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis handler basic handler r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis handler soap s o a p service r0", "$ r1 = r2 actor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache axis handler soap s o a p service r0", "$ r2 = r4 valid transport", "if $ r2 == null goto label1", "r5 = org apache axis handler soap s o a p service r0", "$ r3 = r5 valid transport", "$ r3 remove element r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new javax xml namespace q name", "specialinvoke $ r2 < init > r1", "$ r3 = org apache axis management service admin get transport $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "org apache axis management service admin start", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis message message element r0", "$ r1 = r2 attribute", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis message message element r0", "$ r1 = r2 recorder", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis message message element r0", "r2 recorder = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis message message element r0", "$ r1 = r2 message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r11 = org apache axis message message element r0", "r1 = r11 get a string", "r8 = new java io string reader", "specialinvoke r8 < init > r1", "r9 = new org xml sax input source", "specialinvoke r9 < init > r8", "r3 = org apache axis utils x m l utils new document r9", "if r3 ! = null goto label1", "r10 = new java lang exception", "$ r7 = org apache axis utils message get message \\ `` no doc00\\", "specialinvoke r10 < init > $ r7", "throw r10", "if r3 ! = null goto label1", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new org apache axis message message element", "r6 = org apache axis message message element r0", "$ r4 = r6 get namespace u r i", "specialinvoke r5 < init > $ r4 r1", "r7 = org apache axis message message element r0", "r7 add child r5", "r8 = javax xml soap s o a p element r5", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r5 = new org apache axis message prefix q name", "r6 = org apache axis message message element r0", "$ r2 = r6 get namespace u r i", "r7 = org apache axis message message element r0", "$ r3 = r7 get name", "r8 = org apache axis message message element r0", "$ r4 = r8 get prefix", "specialinvoke r5 < init > $ r2 $ r3 $ r4", "r9 = javax xml soap name r5", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = org apache axis message message element r0", "r3 initialize child", "r4 = org apache axis message message element r0", "$ r1 = r4 child", "$ r2 = $ r1 iterator", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis message node impl r0", "r2 document = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r0 instanceof org apache axis message text", "if $ z0 == 0 goto label1", "r15 = org apache axis message node impl r0", "r15 set node value r1", "goto label5", "label return", "if $ z0 == 0 goto label1", "label r16 = org apache axis message node impl r0", "$ r3 = r16 child", "if $ r3 == null goto label4", "r17 = org apache axis message node impl r0", "$ r6 = r17 child", "$ i0 = $ r6 size", "if $ i0 == 1 goto label2", "r12 = new java lang illegal state exception", "specialinvoke r12 < init > \\ `` set value may not be call on a non- text node with more than one child \\ ``", "throw r12", "if $ i0 == 1 goto label2", "label r18 = org apache axis message node impl r0", "$ r7 = r18 child", "$ r8 = $ r7 get 0", "r2 = javax xml soap node $ r8", "$ z1 = r2 instanceof org apache axis message text", "if $ z1 ! = 0 goto label3", "r13 = new java lang illegal state exception", "specialinvoke r13 < init > \\ `` set value may not be call on a non- text node with a non- text child \\ ``", "throw r13", "if $ z1 ! = 0 goto label3", "label $ r9 = javax xml soap text r2", "$ r9 set node value r1", "if $ r3 == null goto label4", "label r14 = new org apache axis message text", "specialinvoke r14 < init > r1", "r19 = org apache axis message node impl r0", "r20 = org w3c dom node r14", "r19 append child r20"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r11 = org apache axis message node impl r0", "$ r1 = r11 attribute", "if $ r1 == null goto label1", "r12 = org apache axis message node impl r0", "$ r3 = r12 attribute", "$ z0 = $ r3 instanceof org apache axis message null attribute", "if $ z0 == 0 goto label2", "label r9 = new org xml sax helper attribute impl", "specialinvoke r9 < init >", "r13 = org apache axis message node impl r0", "r13 attribute = r9", "goto label3", "label r17 = org apache axis message node impl r0", "$ r7 = r17 attribute", "$ r8 = org xml sax helper attribute impl $ r7", "return $ r8", "if $ z0 == 0 goto label2", "label r14 = org apache axis message node impl r0", "$ r4 = r14 attribute", "$ z1 = $ r4 instanceof org xml sax helper attribute impl", "if $ z1 ! = 0 goto label3", "r10 = new org xml sax helper attribute impl", "r15 = org apache axis message node impl r0", "$ r6 = r15 attribute", "specialinvoke r10 < init > $ r6", "r16 = org apache axis message node impl r0", "r16 attribute = r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache axis message s o a p envelope log", "$ z0 = $ r2 be debug enabled", "if $ z0 == 0 goto label1", "$ r4 = org apache axis message s o a p envelope log", "$ r5 = org apache axis utils message get message \\ `` remove trailer00\\ ``", "$ r4 debug $ r5", "label r6 = org apache axis message s o a p envelope r0", "$ r3 = r6 trailer", "$ r3 remove element r1", "r7 = org apache axis message s o a p envelope r0", "r7 _is dirty = 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r11 = org apache axis message s o a p envelope r0", "$ r1 = r11 body", "if $ r1 ! = null goto label1", "r9 = new org apache axis message s o a p body", "r12 = org apache axis message s o a p envelope r0", "$ r5 = r12 soap constant", "r13 = org apache axis message s o a p envelope r0", "specialinvoke r9 < init > r13 $ r5", "r14 = org apache axis message s o a p envelope r0", "r14 body = r9", "r15 = org apache axis message s o a p envelope r0", "r15 _is dirty = 1", "r16 = org apache axis message s o a p envelope r0", "$ r6 = r16 body", "r17 = org apache axis message s o a p envelope r0", "$ r7 = r17 get owner document", "$ r6 set owner document $ r7", "r18 = org apache axis message s o a p envelope r0", "$ r8 = r18 body", "r19 = javax xml soap s o a p body $ r8", "return r19", "if $ r1 ! = null goto label1", "label r10 = new javax xml soap s o a p exception", "$ r3 = org apache axis utils message get message \\ `` body present\\ ``", "specialinvoke r10 < init > $ r3", "r20 = java lang throwable r10", "throw r20"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r11 = org apache axis message s o a p envelope r0", "$ r1 = r11 header", "if $ r1 ! = null goto label1", "r9 = new org apache axis message s o a p header", "r12 = org apache axis message s o a p envelope r0", "$ r5 = r12 soap constant", "r13 = org apache axis message s o a p envelope r0", "specialinvoke r9 < init > r13 $ r5", "r14 = org apache axis message s o a p envelope r0", "r14 header = r9", "r15 = org apache axis message s o a p envelope r0", "$ r6 = r15 header", "r16 = org apache axis message s o a p envelope r0", "$ r7 = r16 get owner document", "$ r6 set owner document $ r7", "r17 = org apache axis message s o a p envelope r0", "$ r8 = r17 header", "r18 = javax xml soap s o a p header $ r8", "return r18", "if $ r1 ! = null goto label1", "label r10 = new javax xml soap s o a p exception", "$ r3 = org apache axis utils message get message \\ `` header present\\ ``", "specialinvoke r10 < init > $ r3", "r19 = java lang throwable r10", "throw r19"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis message s o a p envelope r0", "$ r1 = r2 body", "r3 = javax xml soap s o a p body $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = javax xml namespace q name r2", "r3 = $ r4 get local part", "$ r5 = javax xml namespace q name r2", "$ r6 = $ r5 get namespace u r i", "$ z0 = $ r6 equal \\ `` http www w3 org 2003 05 soap-envelope\\ ``", "if $ z0 == 0 goto label3", "$ z4 = r3 equal \\ `` role\\ ``", "if $ z4 == 0 goto label1", "$ r12 = java lang string r1", "r13 = org apache axis message s o a p fault builder r0", "r13 fault actor = $ r12", "goto label6", "label return", "if $ z4 == 0 goto label1", "label $ z5 = r3 equal \\ `` text\\ ``", "if $ z5 == 0 goto label2", "$ r11 = java lang string r1", "r14 = org apache axis message s o a p fault builder r0", "r14 fault string = $ r11", "if $ z5 == 0 goto label2", "label $ z6 = r3 equal \\ `` node\\ ``", "if $ z6 == 0 goto label6", "$ r10 = java lang string r1", "r15 = org apache axis message s o a p fault builder r0", "r15 fault node = $ r10", "if $ z0 == 0 goto label3", "label $ z1 = r3 equal \\ `` faultcode\\ ``", "if $ z1 == 0 goto label4", "$ r9 = javax xml namespace q name r1", "r16 = org apache axis message s o a p fault builder r0", "r16 fault code = $ r9", "if $ z1 == 0 goto label4", "label $ z2 = r3 equal \\ `` faultstring\\ ``", "if $ z2 == 0 goto label5", "$ r8 = java lang string r1", "r17 = org apache axis message s o a p fault builder r0", "r17 fault string = $ r8", "if $ z2 == 0 goto label5", "label $ z3 = r3 equal \\ `` faultactor\\ ``", "if $ z3 == 0 goto label6", "$ r7 = java lang string r1", "r18 = org apache axis message s o a p fault builder r0", "r18 fault actor = $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis message r0", "$ r1 = r2 msg context", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis message context r0", "r1 dispose", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org apache axis message context r0", "$ r1 = r5 map registry", "if $ r1 ! = null goto label1", "r6 = org apache axis message context r0", "$ r3 = r6 axis engine", "$ r4 = $ r3 get type mapping registry", "return $ r4", "if $ r1 ! = null goto label1", "label r7 = org apache axis message context r0", "$ r2 = r7 map registry", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis message context r0", "r2 session = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis message context r0", "$ z0 = r1 have pass pivot", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis message context r0", "$ r1 = r2 target service", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return \\ `` bean jndi name\\ ``"], "adj": [[1], []]}
{"nodes": ["$ r2 = org apache axis transport http axis servlet base load counter lock", "entermonitor $ r2", "label $ i0 = org apache axis transport http axis servlet base load counter", "$ i1 = $ i0 - 1", "org apache axis transport http axis servlet base load counter = $ i1", "exitmonitor $ r2", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis transport http axis servlet base r0", "$ r1 = r2 web inf path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis transport http axis servlet base r0", "$ z0 = r1 be development", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis transport http simple axis server r0", "r2 server socket = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis transport http simple axis server r0", "r1 start 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r5 = org apache axis transport jms j m s endpoint r0", "$ r2 = r5 m_connector", "$ r3 = $ r2 get send connection", "r6 = org apache axis transport jms j m s endpoint r0", "$ r4 = $ r3 call r6 r1 l0 null", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache axis transport jms j m s endpoint r0", "$ r2 = r5 m_connector", "$ r3 = $ r2 get receive connection", "r6 = org apache axis transport jms j m s endpoint r0", "$ r4 = r6 create subscription r1 null", "$ r3 unsubscribe $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = null goto label1", "return", "if r1 ! = null goto label1", "label r9 = org apache axis transport jms j m s u r l helper r0", "$ r3 = r9 app property", "if $ r3 ! = null goto label2", "r8 = new java util vector", "specialinvoke r8 < init >", "r10 = org apache axis transport jms j m s u r l helper r0", "r10 app property = r8", "label r11 = org apache axis transport jms j m s u r l helper r0", "$ r4 = r11 property", "$ r4 put r1 r2", "r12 = org apache axis transport jms j m s u r l helper r0", "$ r6 = r12 app property", "$ r6 add element r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "l0 = @ parameter2", "l1 = l0", "if r0 == null goto label4", "$ z0 = r0 contain key r1", "if $ z0 == 0 goto label4", "label $ r3 = r0 remove r1", "$ r4 = java lang long $ r3", "l1 = $ r4 long value", "label goto label4", "label return l1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "$ r1 = java util calendar get instance", "r3 = org apache axis type duration r0", "$ r2 = r3 get a calendar $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org apache axis type n c name be valid r0", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org apache axis type schema type desc", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis type time r0", "$ r1 = r2 _value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = org apache axis type time r0", "$ r3 = r10 _value", "if $ r3 ! = null goto label1", "return \\ `` unassigned time\\ ``", "if $ r3 ! = null goto label1", "label $ r4 = org apache axis type time zulu", "entermonitor $ r4", "label $ r6 = org apache axis type time zulu", "r11 = org apache axis type time r0", "$ r5 = r11 _value", "$ r7 = $ r5 get time", "$ r8 = $ r6 format $ r7", "exitmonitor $ r4", "label return $ r8"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["l0 = @ parameter0", "$ b1 = l0 cmp 0l", "if $ b1 < 0 goto label1", "$ b2 = l0 cmp 255l", "if $ b2 < = 0 goto label2", "label return 0", "if $ b2 < = 0 goto label2", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis type uri r0", "$ r1 = r2 m_path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = new java lang string buffer", "specialinvoke r10 < init >", "r11 = org apache axis type uri r0", "$ r3 = r11 m_scheme", "if $ r3 == null goto label1", "r12 = org apache axis type uri r0", "$ r7 = r12 m_scheme", "r10 append $ r7", "r10 append 58", "label r13 = org apache axis type uri r0", "$ r4 = r13 get scheme specific part", "r10 append $ r4", "$ r6 = r10 to string", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ r1 = r0 trim", "$ i2 = $ r1 length", "if $ i2 ! = 0 goto label2", "label return 0", "if $ i2 ! = 0 goto label2", "label $ c3 = r0 char at 0", "$ z0 = org apache axis type uri be alpha $ c3", "if $ z0 ! = 0 goto label3", "return 0", "if $ z0 ! = 0 goto label3", "label i1 = r0 length", "i4 = 1", "label if i4 > = i1 goto label6", "c0 = r0 char at i4", "$ z1 = org apache axis type uri be scheme character c0", "if $ z1 ! = 0 goto label5", "label i4 = i4 + 1", "goto label4", "label if i4 > = i1 goto label6", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = newarray byte [ 1 ]", "$ b1 = byte i0", "$ r1 [ 0 ] = $ b1", "r2 = org apache axis utils byte array output stream r0", "r2 write $ r1 0 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "org apache axis utils class utils default class loader = r0", "label return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache axis utils c l option r0", "$ r3 = r9 m_arguments", "if null ! = $ r3 goto label1", "$ r8 = newarray java lang string [ 1 ]", "$ r8 [ 0 ] = r1", "r10 = org apache axis utils c l option r0", "r10 m_arguments = $ r8", "goto label2", "label return", "if null ! = $ r3 goto label1", "label r11 = org apache axis utils c l option r0", "$ r4 = r11 m_arguments", "$ i0 = lengthof $ r4", "$ i1 = $ i0 + 1", "r2 = newarray java lang string [ $ i1 ]", "r12 = org apache axis utils c l option r0", "$ r6 = r12 m_arguments", "r13 = org apache axis utils c l option r0", "$ r5 = r13 m_arguments", "$ i2 = lengthof $ r5", "java lang system arraycopy $ r6 0 r2 0 $ i2", "r14 = org apache axis utils c l option r0", "$ r7 = r14 m_arguments", "$ i3 = lengthof $ r7", "r2 [ $ i3 ] = r1", "r15 = org apache axis utils c l option r0", "r15 m_arguments = r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis utils c l option descriptor r0", "$ i0 = r1 m_id", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis utils c l option descriptor r0", "$ r1 = r2 m_name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r4 = new java lang string buffer", "specialinvoke $ r4 < init >", "i7 = 0", "label $ i2 = lengthof r0", "if i7 > = $ i2 goto label15", "$ r5 = r0 [ i7 ]", "$ i3 = $ r5 get id", "c0 = char $ i3", "$ r6 = r0 [ i7 ]", "r2 = $ r6 get name", "$ r7 = r0 [ i7 ]", "r27 = $ r7 get description", "$ r8 = r0 [ i7 ]", "i1 = $ r8 get flag", "$ i4 = i1 & 2", "if $ i4 ! = 2 goto label02", "$ z2 = 1", "goto label03", "label z3 = $ z2", "$ i5 = i1 & 16", "if $ i5 ! = 16 goto label04", "$ z4 = 1", "goto label05", "label z0 = $ z4", "z5 = 0", "if $ z4 == 0 goto label06", "z3 = 1", "label $ r4 append 9", "$ z1 = java lang character be letter c0", "if $ z1 == 0 goto label07", "$ r4 append \\ `` -\\ ``", "$ r4 append c0", "z5 = 1", "label if null == r2 goto label11", "if z5 == 0 goto label08", "$ r4 append \\", "label $ r4 append \\ `` -- \\ ``", "$ r4 append r2", "if z3 == 0 goto label09", "$ r4 append \\ `` < argument > \\ ``", "label if z0 == 0 goto label10", "$ r4 append \\ `` = < value > \\ ``", "label $ r20 = org apache axis utils java utils ls", "$ r4 append $ r20", "label if null == r27 goto label14", "label $ i6 = r27 length", "if $ i6 < = 60 goto label13", "r3 = r27 substring 0 60", "r27 = r27 substring 60", "$ r4 append \\ `` \\t\\t\\ ``", "$ r4 append r3", "$ r16 = org apache axis utils java utils ls", "$ r4 append $ r16", "goto label12", "if $ i6 < = 60 goto label13", "label $ r4 append \\ `` \\t\\t\\ ``", "$ r4 append r27", "$ r12 = org apache axis utils java utils ls", "$ r4 append $ r12", "label i7 = i7 + 1", "goto label01", "if $ i5 ! = 16 goto label04", "label $ z4 = 0", "if $ i4 ! = 2 goto label02", "label $ z2 = 0", "if i7 > = $ i2 goto label15", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [], [56], [57], [58], [59], [60], [61], [], [63], [64], [65], [66], [67], []]}
{"nodes": ["r0 = @ this", "r4 = org apache axis utils field property descriptor r0", "$ r1 = r4 field", "$ r2 = $ r1 get type", "$ r3 = $ r2 get component type", "if $ r3 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r3 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label01", "$ i0 = r0 index of \\ `` [ \\ ``", "if $ i0 < 0 goto label01", "$ c1 = r0 char at 0", "if $ c1 ! = 91 goto label02", "label return r0", "if $ c1 ! = 91 goto label02", "label $ i2 = r0 index of \\ `` [ \\ ``", "r8 = r0 substring 0 $ i2", "$ z0 = r8 equal \\ `` byte\\ ``", "if $ z0 == 0 goto label03", "r9 = \\ `` b\\ ``", "goto label11", "label i4 = r0 index of \\ `` ] \\ ``", "label if i4 < = 0 goto label13", "$ r5 = new java lang string buffer", "specialinvoke $ r5 < init >", "$ r6 = $ r5 append \\ `` [ \\ ``", "$ r7 = $ r6 append r9", "r9 = $ r7 to string", "$ i3 = i4 + 1", "i4 = r0 index of \\ `` ] \\", "goto label12", "label if i4 < = 0 goto label13", "label return r9", "if $ z0 == 0 goto label03", "label $ z1 = r8 equal \\ `` char\\ ``", "if $ z1 == 0 goto label04", "r9 = \\ `` c\\ ``", "if $ z1 == 0 goto label04", "label $ z2 = r8 equal \\ `` double\\ ``", "if $ z2 == 0 goto label05", "r9 = \\ `` d\\ ``", "if $ z2 == 0 goto label05", "label $ z3 = r8 equal \\ `` float\\ ``", "if $ z3 == 0 goto label06", "r9 = \\ `` f\\ ``", "if $ z3 == 0 goto label06", "label $ z4 = r8 equal \\ `` int\\ ``", "if $ z4 == 0 goto label07", "r9 = \\ `` i\\ ``", "if $ z4 == 0 goto label07", "label $ z5 = r8 equal \\ `` long\\ ``", "if $ z5 == 0 goto label08", "r9 = \\ `` j\\ ``", "if $ z5 == 0 goto label08", "label $ z6 = r8 equal \\ `` short\\ ``", "if $ z6 == 0 goto label09", "r9 = \\ `` s\\ ``", "if $ z6 == 0 goto label09", "label $ z7 = r8 equal \\ `` boolean\\ ``", "if $ z7 == 0 goto label10", "r9 = \\ `` z\\ ``", "if $ z7 == 0 goto label10", "label $ r1 = new java lang string buffer", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` l\\ ``", "$ r3 = $ r2 append r8", "$ r4 = $ r3 append \\ `` \\ ``", "r9 = $ r4 to string"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org apache axis utils java utils be true r0 0", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "i10 = 0", "i11 = 0", "label r41 = org apache axis utils option r0", "$ r2 = r41 use args", "if $ r2 == null goto label06", "r42 = org apache axis utils option r0", "$ r34 = r42 use args", "$ i6 = $ r34 size", "if i11 > = $ i6 goto label06", "r43 = org apache axis utils option r0", "$ r35 = r43 use args", "$ r36 = $ r35 element at i11", "r1 = java lang string $ r36", "$ c7 = r1 char at 0", "if $ c7 == 45 goto label02", "goto label05", "label i11 = i11 + 1", "goto label01", "if $ c7 == 45 goto label02", "label i12 = 0", "label $ i8 = r1 length", "if i12 > = $ i8 goto label05", "$ c9 = r1 char at i12", "if $ c9 ! = c0 goto label04", "i10 = i10 + 1", "label i12 = i12 + 1", "goto label03", "if i11 > = $ i6 goto label06", "label i13 = 0", "label r44 = org apache axis utils option r0", "$ r37 = r44 args", "$ i14 = lengthof $ r37", "if i13 > = $ i14 goto label13", "r45 = org apache axis utils option r0", "$ r3 = r45 args", "$ r4 = $ r3 [ i13 ]", "if $ r4 == null goto label12", "r46 = org apache axis utils option r0", "$ r5 = r46 args", "$ r6 = $ r5 [ i13 ]", "$ i1 = $ r6 length", "if $ i1 ! = 0 goto label08", "goto label12", "label i13 = i13 + 1", "goto label07", "if $ i1 ! = 0 goto label08", "label r47 = org apache axis utils option r0", "$ r7 = r47 args", "$ r8 = $ r7 [ i13 ]", "$ c2 = $ r8 char at 0", "if $ c2 == 45 goto label09", "label r48 = org apache axis utils option r0", "$ r9 = r48 args", "$ r10 = $ r9 [ i13 ]", "if $ r10 == null goto label12", "r49 = org apache axis utils option r0", "$ r11 = r49 args", "$ r12 = $ r11 [ i13 ]", "$ i3 = $ r12 index of c0", "if $ i3 == -1 goto label12", "r50 = org apache axis utils option r0", "$ r14 = r50 args", "r38 = new java lang string buffer", "specialinvoke r38 < init >", "r51 = org apache axis utils option r0", "$ r15 = r51 args", "$ r16 = $ r15 [ i13 ]", "$ r17 = $ r16 substring 0 $ i3", "$ r18 = r38 append $ r17", "r52 = org apache axis utils option r0", "$ r19 = r52 args", "$ r20 = $ r19 [ i13 ]", "$ i4 = $ i3 + 1", "$ r21 = $ r20 substring $ i4", "$ r22 = $ r18 append $ r21", "$ r23 = $ r22 to string", "$ r14 [ i13 ] = $ r23", "r53 = org apache axis utils option r0", "$ r24 = r53 args", "$ r25 = $ r24 [ i13 ]", "$ i5 = $ r25 length", "if $ i5 ! = 1 goto label10", "r54 = org apache axis utils option r0", "$ r33 = r54 args", "$ r33 [ i13 ] = null", "label i10 = i10 + 1", "r55 = org apache axis utils option r0", "$ r26 = r55 use args", "if $ r26 ! = null goto label11", "r39 = new java util vector", "specialinvoke r39 < init >", "r56 = org apache axis utils option r0", "r56 use args = r39", "label r57 = org apache axis utils option r0", "$ r28 = r57 use args", "r40 = new java lang string buffer", "specialinvoke r40 < init >", "$ r29 = r40 append \\ `` -\\ ``", "$ r30 = $ r29 append c0", "$ r31 = $ r30 to string", "$ r28 add $ r31", "goto label09", "if i13 > = $ i14 goto label13", "label return i10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [], [46], [], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], [99], [100], [101], [102], [103], [], [105], []]}
{"nodes": ["r0 = @ this", "r13 = null", "i3 = 0", "label r16 = org apache axis utils option r0", "$ r1 = r16 args", "$ i0 = lengthof $ r1", "if i3 > = $ i0 goto label6", "r17 = org apache axis utils option r0", "$ r2 = r17 args", "$ r3 = $ r2 [ i3 ]", "if $ r3 == null goto label5", "r18 = org apache axis utils option r0", "$ r4 = r18 args", "$ r5 = $ r4 [ i3 ]", "$ i1 = $ r5 length", "if $ i1 ! = 0 goto label2", "goto label5", "label i3 = i3 + 1", "goto label1", "if $ i1 ! = 0 goto label2", "label r19 = org apache axis utils option r0", "$ r6 = r19 args", "$ r7 = $ r6 [ i3 ]", "$ c2 = $ r7 char at 0", "if $ c2 == 45 goto label3", "label if r13 ! = null goto label4", "r15 = new java lang string buffer", "specialinvoke r15 < init >", "r13 = r15", "label r20 = org apache axis utils option r0", "$ r8 = r20 args", "$ r9 = $ r8 [ i3 ]", "$ r10 = $ r9 substring 1", "r13 append $ r10", "if i3 > = $ i0 goto label6", "label if r13 ! = null goto label7", "$ r14 = null", "goto label8", "label return $ r14", "label if r13 ! = null goto label7", "label $ r14 = r13 to string"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = r0 length", "if $ i0 ! = 0 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if $ i0 ! = 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache axis utils string utils strip r0 null", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = org apache axis utils string utils get strip end r0 r1", "if i0 > = 0 goto label1", "$ r2 = r0", "goto label2", "label return $ r2", "if i0 > = 0 goto label1", "label $ r2 = r0 substring 0 i0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["$ r0 = new java lang string buffer", "specialinvoke $ r0 < init >", "$ r1 = org apache axis utils message get message \\ `` axis version\\ ``", "$ r2 = $ r0 append $ r1", "$ r3 = $ r2 append \\ `` \\n\\ ``", "$ r4 = org apache axis utils message get message \\ `` build on\\ ``", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 to string", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 last index of 46", "if $ i0 > = 0 goto label1", "return \\ `` \\ ``", "if $ i0 > = 0 goto label1", "label $ i1 = r0 last index of 46", "$ r1 = r0 substring 0 $ i1", "return $ r1"], "adj": [[1], [2], [3], [], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis wsdl from java type r0", "$ z0 = r2 be simple type r1", "if $ z0 ! = 0 goto label1", "$ z1 = org apache axis wsdl from java type be enum class r1", "if $ z1 ! = 0 goto label1", "r3 = org apache axis wsdl from java type r0", "$ z2 = r3 implement simple type r1", "if $ z2 == 0 goto label2", "label $ z3 = 1", "goto label3", "label return $ z3", "if $ z2 == 0 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis wsdl from java type r0", "$ r1 = r2 stop class", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache axis wsdl from java type r0", "$ r2 = r4 doc holder", "$ r3 = $ r2 create element r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis wsdl from java type r0", "$ r1 = r2 service desc", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = org apache axis wsdl skeleton impl table", "$ r4 = $ r3 get r1", "r2 = org apache axis wsdl skeleton impl $ meta info $ r4", "if r2 ! = null goto label1", "return null", "if r2 ! = null goto label1", "label $ r5 = r2 input namespace", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis wsdl symbol table bind entry r0", "$ r1 = r2 bind style", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis wsdl symbol table fault info r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis wsdl symbol table message entry r0", "$ r1 = r2 message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org apache axis wsdl symbol table parameter r0", "$ r1 = r6 name", "if $ r1 ! = null goto label1", "r7 = org apache axis wsdl symbol table parameter r0", "$ r3 = r7 qname", "if $ r3 == null goto label1", "r8 = org apache axis wsdl symbol table parameter r0", "$ r4 = r8 qname", "$ r5 = $ r4 get local part", "return $ r5", "if $ r3 == null goto label1", "label r9 = org apache axis wsdl symbol table parameter r0", "$ r2 = r9 name", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org apache axis wsdl symbol table schema utils be x s d node r0 \\ `` attribute\\ ``", "if $ z0 == 0 goto label4", "r1 = r0 get child node", "i1 = 0", "label $ i0 = r1 get length", "if i1 > = $ i0 goto label4", "r2 = r1 item i1", "$ z1 = org apache axis wsdl symbol table schema utils be x s d node r2 \\ `` complex type\\ ``", "if $ z1 ! = 0 goto label2", "$ z2 = org apache axis wsdl symbol table schema utils be x s d node r2 \\ `` simple type\\ ``", "if $ z2 == 0 goto label3", "label $ r3 = org apache axis wsdl symbol table utils get node name q name r2", "return $ r3", "if $ z2 == 0 goto label3", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label4", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis wsdl symbol table symbol table r0", "$ r1 = r2 symbol table", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache axis wsdl symbol table symbol table class $ org $ apache $ axis $ wsdl $ symbol table $ port type entry", "if $ r2 ! = null goto label1", "$ r7 = org apache axis wsdl symbol table symbol table class $ \\ `` org apache axis wsdl symbol table port type entry\\ ``", "org apache axis wsdl symbol table symbol table class $ org $ apache $ axis $ wsdl $ symbol table $ port type entry = $ r7", "goto label2", "label r8 = org apache axis wsdl symbol table symbol table r0", "$ r3 = r8 get r1 $ r7", "$ r4 = org apache axis wsdl symbol table port type entry $ r3", "return $ r4", "if $ r2 ! = null goto label1", "label $ r7 = org apache axis wsdl symbol table symbol table class $ org $ apache $ axis $ wsdl $ symbol table $ port type entry"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis wsdl symbol table type entry r0", "$ r1 = r2 node", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis wsdl symbol table type entry r0", "$ z0 = r1 only literal reference", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis wsdl symbol table type entry r0", "r2 component type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis wsdl symbol table type entry r0", "$ r1 = r2 to string \\ `` \\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r5 = org apache axis wsdl symbol table type entry r0", "$ r2 = r5 type", "if $ r2 ! = null goto label1", "r6 = org apache axis wsdl symbol table type entry r0", "$ r4 = org apache axis wsdl symbol table utils get nest type r6 r1 z0", "r7 = org apache axis wsdl symbol table type entry r0", "r7 type = $ r4", "label r8 = org apache axis wsdl symbol table type entry r0", "$ r3 = r8 type", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis wsdl to java emitter r0", "$ r1 = r2 output dir", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis wsdl to java emitter r0", "$ r1 = r2 scope", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r2 = org apache axis wsdl to java emitter r0", "r2 n sto pkg filename = r1", "label return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis wsdl to java emitter r0", "r2 n exclude = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis wsdl to java emitter r0", "$ r1 = r2 file info", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache axis wsdl to java emitter r0", "r1 set import z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache axis wsdl to java emitter r0", "r1 type collision protection = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache axis wsdl to java java bean helper writer r0", "$ r2 = r3 wrapper p w", "if $ r2 ! = null goto label1", "specialinvoke r0 register file r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "return \\ `` public \\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis wsdl to java java definition writer r0", "r1 write fault", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis wsdl to java java deploy writer r0", "r2 write deploy service r1", "r1 println \\ `` < deployment > \\ ``", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r10 = new java lang string buffer", "specialinvoke r10 < init >", "r11 = org apache axis wsdl to java java enum type writer r0", "$ r3 = r11 get package", "$ r4 = r10 append $ r3", "$ r5 = $ r4 append \\ `` \\ ``", "r12 = org apache axis wsdl to java java enum type writer r0", "$ r6 = r12 get class name", "$ r7 = $ r5 append $ r6", "r1 = $ r7 to string", "r13 = org apache axis wsdl to java java enum type writer r0", "$ r8 = r13 emitter", "$ z0 = $ r8 be deploy", "if $ z0 == 0 goto label1", "r14 = org apache axis wsdl to java java enum type writer r0", "$ r9 = r14 emitter", "$ z1 = $ r9 do exist r1", "if $ z1 ! = 0 goto label2", "specialinvoke r0 generate", "goto label2", "label return", "if $ z0 == 0 goto label1", "label specialinvoke r0 generate"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], []]}
{"nodes": ["r0 = @ this", "r10 = new java lang string buffer", "specialinvoke r10 < init >", "r11 = org apache axis wsdl to java java holder writer r0", "$ r3 = r11 get package", "$ r4 = r10 append $ r3", "$ r5 = $ r4 append \\ `` \\ ``", "r12 = org apache axis wsdl to java java holder writer r0", "$ r6 = r12 get class name", "$ r7 = $ r5 append $ r6", "r1 = $ r7 to string", "r13 = org apache axis wsdl to java java holder writer r0", "$ r8 = r13 emitter", "$ z0 = $ r8 be deploy", "if $ z0 == 0 goto label1", "r14 = org apache axis wsdl to java java holder writer r0", "$ r9 = r14 emitter", "$ z1 = $ r9 do exist r1", "if $ z1 ! = 0 goto label2", "specialinvoke r0 generate", "goto label2", "label return", "if $ z0 == 0 goto label1", "label specialinvoke r0 generate"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], []]}
{"nodes": ["r0 = @ this", "return \\ `` extend javax xml rpc service \\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk box a p i connection r0", "$ r1 = r2 revoke u r l", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk box a p i connection r0", "$ r1 = r2 refresh lock", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com box sdk box a p i connection r0", "r1 max request attempt = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk box a p i connection r0", "$ r1 = r2 proxy username", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com box sdk box a p i connection r0", "r2 proxy username = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = com box sdk box a p i request r0", "$ i0 = r1 read timeout", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com box sdk box a p i request r0", "r2 body = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r12 = com box sdk box collaboration pending_collaborations_url", "$ r13 = r0 get base u r l", "$ r14 = newarray java lang object [ 0 ]", "r1 = $ r12 build $ r13 $ r14", "$ r15 = new com box sdk box a p i request", "specialinvoke $ r15 < init > r0 r1 \\ `` get\\ ``", "$ r16 = $ r15 send", "r3 = com box sdk box j s o n response $ r16", "$ r17 = r3 get j s o n", "r4 = com eclipsesource json json object read from $ r17", "$ r18 = r4 get \\ `` total_count\\ ``", "i0 = $ r18 a int", "$ r19 = new java util array list", "specialinvoke $ r19 < init > i0", "$ r20 = r4 get \\ `` entries\\ ``", "r6 = $ r20 a array", "r7 = r6 iterator", "label $ z0 = r7 have next", "if $ z0 == 0 goto label2", "$ r21 = r7 next", "r8 = com eclipsesource json json value $ r21", "r9 = r8 a object", "$ r22 = new com box sdk box collaboration", "$ r23 = r9 get \\ `` id\\ ``", "$ r24 = $ r23 a string", "specialinvoke $ r22 < init > r0 $ r24", "$ r25 = new com box sdk box collaboration $ info", "$ r22 get class", "specialinvoke $ r25 < init > $ r22 r9", "$ r19 add $ r25", "goto label1", "if $ z0 == 0 goto label2", "label return $ r19"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com box sdk box date format thread_local_date_format", "$ r2 = $ r1 get", "$ r3 = java text date format $ r2", "$ r4 = $ r3 format r0", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "l0 = @ parameter2", "r3 = @ parameter3", "r4 = com box sdk box file r0", "r4 upload version r1 null r2 l0 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk box file upload session part r0", "$ r1 = r2 sha1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com box sdk box file upload session part r0", "r2 part id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = com box sdk box file upload session part r0", "r1 size = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = com box sdk box file upload session part list r0", "$ i0 = r1 offset", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com box sdk box folder folder_info_url_template", "r4 = com box sdk box folder r0", "$ r3 = r4 get watermark $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i0 = @ parameter0", "com box sdk box global setting read timeout = i0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r40 = com box sdk box group r0", "r3 = r40 get a p i", "r34 = new com eclipsesource json json object", "specialinvoke r34 < init >", "r35 = new com eclipsesource json json object", "specialinvoke r35 < init >", "$ r12 = r1 get i d", "$ r13 = r35 add \\ `` id\\", "r41 = com eclipsesource json json value $ r13", "r34 add \\ `` user\\", "r36 = new com eclipsesource json json object", "specialinvoke r36 < init >", "r42 = com box sdk box group r0", "$ r16 = r42 get i d", "$ r17 = r36 add \\ `` id\\", "r43 = com eclipsesource json json value $ r17", "r34 add \\ `` group\\", "if r2 == null goto label1", "$ r31 = r2 to j s o n string", "r34 add \\ `` role\\", "label $ r19 = com box sdk box group add_membership_url_template", "$ r20 = r3 get base u r l", "$ r21 = newarray java lang object [ 0 ]", "r5 = $ r19 build $ r20 $ r21", "r37 = new com box sdk box j s o n request", "specialinvoke r37 < init > r3 r5 \\ `` post\\ ``", "$ r23 = r34 to string", "r37 set body $ r23", "$ r24 = r37 send", "r7 = com box sdk box j s o n response $ r24", "$ r25 = r7 get j s o n", "r8 = com eclipsesource json json object read from $ r25", "r38 = new com box sdk box group membership", "$ r27 = r8 get \\ `` id\\ ``", "$ r28 = $ r27 a string", "specialinvoke r38 < init > r3 $ r28", "r39 = new com box sdk box group membership $ info", "r38 get class", "specialinvoke r39 < init > r38 r8", "return r39"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r16 = com box sdk box group membership r0", "r2 = r16 get a p i", "$ r7 = com box sdk box group membership membership_url_template", "$ r8 = r2 get base u r l", "$ r9 = newarray java lang object [ 1 ]", "r17 = com box sdk box group membership r0", "$ r10 = r17 get i d", "$ r9 [ 0 ] = $ r10", "r3 = $ r7 build $ r8 $ r9", "r15 = new com box sdk box j s o n request", "specialinvoke r15 < init > r2 r3 \\ `` put\\ ``", "$ r12 = r1 get pending change", "r15 set body $ r12", "$ r13 = r15 send", "r5 = com box sdk box j s o n response $ r13", "$ r14 = r5 get j s o n", "r6 = com eclipsesource json json object read from $ r14", "r1 update r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r6 = com box sdk box legal hold policy legal_hold_url_template", "r17 = com box sdk box legal hold policy r0", "$ r7 = r17 get a p i", "$ r8 = $ r7 get base u r l", "$ r9 = newarray java lang object [ 1 ]", "r18 = com box sdk box legal hold policy r0", "$ r10 = r18 get i d", "$ r9 [ 0 ] = $ r10", "r2 = $ r6 build $ r8 $ r9", "r16 = new com box sdk box j s o n request", "r19 = com box sdk box legal hold policy r0", "$ r12 = r19 get a p i", "specialinvoke r16 < init > $ r12 r2 \\ `` put\\ ``", "$ r13 = r1 get pending change", "r16 set body $ r13", "$ r14 = r16 send", "r4 = com box sdk box j s o n response $ r14", "$ r15 = r4 get j s o n", "r5 = com eclipsesource json json object read from $ r15", "r1 update r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk box metadata filter r0", "$ r1 = r2 scope", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = com box sdk box multipart request r0", "$ r3 = r5 field", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = com box sdk box retention policy r0", "$ r1 = r4 get a p i", "r5 = com box sdk box retention policy r0", "$ r2 = r5 get i d", "$ r3 = com box sdk box retention policy assignment create assignment to enterprise $ r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk box search parameter r0", "$ r1 = r2 scope", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r5 = com box sdk box task task_url_template", "r17 = com box sdk box task r0", "$ r6 = r17 get a p i", "$ r7 = $ r6 get base u r l", "$ r8 = newarray java lang object [ 1 ]", "r18 = com box sdk box task r0", "$ r9 = r18 get i d", "$ r8 [ 0 ] = $ r9", "r1 = $ r5 build $ r7 $ r8", "r15 = new com box sdk box a p i request", "r19 = com box sdk box task r0", "$ r11 = r19 get a p i", "specialinvoke r15 < init > $ r11 r1 \\ `` get\\ ``", "$ r12 = r15 send", "r3 = com box sdk box j s o n response $ r12", "$ r13 = r3 get j s o n", "r4 = com eclipsesource json json object read from $ r13", "r16 = new com box sdk box task $ info", "r20 = com box sdk box task r0", "specialinvoke r16 < init > r20 r4", "return r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r6 = com box sdk box task task_url_template", "r17 = com box sdk box task r0", "$ r7 = r17 get a p i", "$ r8 = $ r7 get base u r l", "$ r9 = newarray java lang object [ 1 ]", "r18 = com box sdk box task r0", "$ r10 = r18 get i d", "$ r9 [ 0 ] = $ r10", "r2 = $ r6 build $ r8 $ r9", "r16 = new com box sdk box j s o n request", "r19 = com box sdk box task r0", "$ r12 = r19 get a p i", "specialinvoke r16 < init > $ r12 r2 \\ `` put\\ ``", "$ r13 = r1 get pending change", "r16 set body $ r13", "$ r14 = r16 send", "r4 = com box sdk box j s o n response $ r14", "$ r15 = r4 get j s o n", "r5 = com eclipsesource json json object read from $ r15", "r1 update r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "$ r4 = com box sdk box task assignment task_assignment_url_template", "r12 = com box sdk box task assignment r0", "$ r5 = r12 get a p i", "$ r6 = $ r5 get base u r l", "$ r7 = newarray java lang object [ 1 ]", "r13 = com box sdk box task assignment r0", "$ r8 = r13 get i d", "$ r7 [ 0 ] = $ r8", "r1 = $ r4 build $ r6 $ r7", "r11 = new com box sdk box a p i request", "r14 = com box sdk box task assignment r0", "$ r10 = r14 get a p i", "specialinvoke r11 < init > $ r10 r1 \\ `` delete\\ ``", "r3 = r11 send", "r3 disconnect", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r6 = com box sdk box task assignment task_assignment_url_template", "r17 = com box sdk box task assignment r0", "$ r7 = r17 get a p i", "$ r8 = $ r7 get base u r l", "$ r9 = newarray java lang object [ 1 ]", "r18 = com box sdk box task assignment r0", "$ r10 = r18 get i d", "$ r9 [ 0 ] = $ r10", "r2 = $ r6 build $ r8 $ r9", "r16 = new com box sdk box j s o n request", "r19 = com box sdk box task assignment r0", "$ r12 = r19 get a p i", "specialinvoke r16 < init > $ r12 r2 \\ `` put\\ ``", "$ r13 = r1 get pending change", "r16 set body $ r13", "$ r14 = r16 send", "r4 = com box sdk box j s o n response $ r14", "$ r15 = r4 get j s o n", "r5 = com eclipsesource json json object read from $ r15", "r1 update r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com box sdk box term of service user status get info r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang unsupported operation exception", "specialinvoke $ r1 < init > \\ `` box transactional a p i connection do not support token refreshing access token can be generate in the developer console \\ ``", "throw $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r26 = new com box sdk query string builder", "specialinvoke r26 < init >", "$ r10 = r26 append param \\ `` fields\\", "r3 = $ r10 to string", "$ r12 = com box sdk box trash folder_info_url_template", "r30 = com box sdk box trash r0", "$ r11 = r30 api", "$ r13 = $ r11 get base u r l", "$ r14 = newarray java lang object [ 1 ]", "$ r14 [ 0 ] = r1", "r4 = $ r12 build with query $ r13 r3 $ r14", "r27 = new com box sdk box a p i request", "r31 = com box sdk box trash r0", "$ r16 = r31 api", "specialinvoke r27 < init > $ r16 r4 \\ `` get\\ ``", "$ r17 = r27 send", "r6 = com box sdk box j s o n response $ r17", "$ r18 = r6 get j s o n", "r7 = com eclipsesource json json object read from $ r18", "r28 = new com box sdk box folder", "r32 = com box sdk box trash r0", "$ r20 = r32 api", "$ r21 = r7 get \\ `` id\\ ``", "$ r22 = $ r21 a string", "specialinvoke r28 < init > $ r20 $ r22", "r29 = new com box sdk box folder $ info", "r28 get class", "$ r25 = r6 get j s o n", "specialinvoke r29 < init > r28 $ r25", "return r29"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk box upload email r0", "$ r1 = r2 access", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com box sdk create user params r0", "r1 be sync enabled = z0", "r2 = com box sdk create user params r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com box sdk create user params r0", "r2 status = r1", "r3 = com box sdk create user params r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = com box sdk event log r0", "$ i0 = r1 chunk size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = com box sdk event stream r0", "$ r4 = r7 listener lock", "entermonitor $ r4", "label r8 = com box sdk event stream r0", "$ r5 = r8 listener", "$ r5 add r1", "exitmonitor $ r4", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk file upload params r0", "$ r1 = r2 content", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com box sdk file upload params r0", "r2 upload file callback = r1", "r3 = com box sdk file upload params r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk file upload params r0", "$ r1 = r2 listener", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = com box sdk in memory l r u access token cache r0", "$ r4 = r9 cache", "entermonitor $ r4", "label r10 = com box sdk in memory l r u access token cache r0", "$ r5 = r10 cache", "$ r6 = $ r5 get r1", "$ r7 = java lang string $ r6", "exitmonitor $ r4", "label return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk j w t encryption preference r0", "$ r1 = r2 private key password", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com box sdk metadata r0", "$ r2 = r5 value", "r6 = com box sdk metadata r0", "$ r3 = specialinvoke r6 path to property r1", "$ r4 = $ r2 get $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new java util array list", "specialinvoke r10 < init >", "r11 = com box sdk metadata r0", "$ r6 = r11 get value r1", "$ r7 = $ r6 a array", "r3 = $ r7 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r8 = r3 next", "r4 = com eclipsesource json json value $ r8", "$ r9 = r4 a string", "r10 add $ r9", "goto label1", "if $ z0 == 0 goto label2", "label return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r5 = com box sdk metadata template metadata_template_url_template", "$ r6 = r0 get base u r l", "$ r7 = newarray java lang object [ 2 ]", "$ r7 [ 0 ] = r1", "$ r7 [ 1 ] = r2", "r3 = $ r5 build $ r6 $ r7", "$ r8 = new com box sdk box j s o n request", "specialinvoke $ r8 < init > r0 r3 \\ `` delete\\ ``", "$ r8 send", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk scoped token r0", "$ r1 = r2 issue token type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com box sdk size range r0", "$ i0 = r1 upper bound bytes", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = bsh classpath bsh class path r0", "$ r1 = r6 get full path", "$ r2 = newarray java net url [ 0 ]", "$ r3 = $ r1 to array $ r2", "$ r4 = java net url [ ] $ r3", "$ r5 = java net url [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = bsh classpath class manager impl r0", "$ r2 = r5 base class path", "$ r2 set path r1", "r6 = bsh classpath class manager impl r0", "specialinvoke r6 init base loader", "r4 = new java util hash map", "specialinvoke r4 < init >", "r7 = bsh classpath class manager impl r0", "r7 loader map = r4", "r8 = bsh classpath class manager impl r0", "r8 class loader change", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = bsh name space r0", "$ r1 = r2 parent", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = bsh block name space r0", "$ r2 = specialinvoke r4 get non block parent", "$ r3 = $ r2 get this r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = bsh block name space r0", "$ r2 = r3 get parent", "$ r2 import class r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = bsh name space r0", "r1 import class \\ `` bsh eval error\\ ``", "r2 = bsh name space r0", "r2 import class \\ `` bsh interpreter\\ ``", "r3 = bsh name space r0", "r3 import package \\ `` javax swing event\\ ``", "r4 = bsh name space r0", "r4 import package \\ `` javax swing\\ ``", "r5 = bsh name space r0", "r5 import package \\ `` java awt event\\ ``", "r6 = bsh name space r0", "r6 import package \\ `` java awt\\ ``", "r7 = bsh name space r0", "r7 import package \\ `` java net\\ ``", "r8 = bsh name space r0", "r8 import package \\ `` java util\\ ``", "r9 = bsh name space r0", "r9 import package \\ `` java io\\ ``", "r10 = bsh name space r0", "r10 import package \\ `` java lang\\ ``", "r11 = bsh name space r0", "r11 import command \\ `` bsh commands\\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 be array", "if $ z0 ! = 0 goto label1", "r3 = new bsh reflect error", "specialinvoke r3 < init > \\ `` the class be not an array \\ ``", "r4 = java lang throwable r3", "throw r4", "if $ z0 ! = 0 goto label1", "label $ r1 = r0 get component type", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = bsh util name completion table r0", "$ r2 = r6 source", "if $ r2 ! = null goto label1", "r5 = new java util array list", "specialinvoke r5 < init >", "r7 = bsh util name completion table r0", "r7 source = r5", "label r8 = bsh util name completion table r0", "$ r3 = r8 source", "$ r3 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r3 = new net bytebuddy description type type description $ for load type", "specialinvoke r3 < init > r0", "r4 = net bytebuddy description type type description r3", "$ r2 = net bytebuddy implementation exception method throw r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r13 = new net bytebuddy implementation bytecode stack manipulation $ compound", "$ r4 = newarray net bytebuddy implementation bytecode stack manipulation [ 2 ]", "$ r5 = net bytebuddy implementation bytecode member field access for field r1", "$ r6 = $ r5 read", "$ r4 [ 0 ] = $ r6", "r14 = net bytebuddy implementation field accessor r0", "$ r7 = r14 assigner", "$ r8 = r1 get type", "$ r9 = r2 get return type", "r15 = net bytebuddy implementation field accessor r0", "$ r10 = r15 type", "$ r11 = $ r7 assign $ r8 $ r9 $ r10", "$ r4 [ 1 ] = $ r11", "specialinvoke r13 < init > $ r4", "r16 = net bytebuddy implementation field accessor r0", "r17 = net bytebuddy implementation bytecode stack manipulation r13", "$ r12 = specialinvoke r16 access r1 r2 r17", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = net bytebuddy matcher element matcher be r0", "r3 = net bytebuddy matcher element matcher $ r1", "$ r2 = net bytebuddy matcher element matcher raw type r3", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ b2 = l0 cmp 0l", "if $ b2 < 0 goto label1", "$ z0 = 1", "goto label2", "label com github benmanes caffeine cache caffeine require argument $ z0", "$ l3 = java lang math min l0 1073741823l", "i1 = int $ l3", "r7 = com github benmanes caffeine cache frequency sketch r0", "$ r1 = r7 table", "if $ r1 == null goto label3", "r8 = com github benmanes caffeine cache frequency sketch r0", "$ r6 = r8 table", "$ i9 = lengthof $ r6", "if $ i9 < i1 goto label3", "return", "if $ i9 < i1 goto label3", "label if i1 ! = 0 goto label4", "$ i10 = 1", "goto label5", "label $ r2 = newarray long [ $ i10 ]", "r9 = com github benmanes caffeine cache frequency sketch r0", "r9 table = $ r2", "r10 = com github benmanes caffeine cache frequency sketch r0", "$ r3 = r10 table", "$ i4 = lengthof $ r3", "$ i5 = $ i4 - 1", "$ i6 = java lang math max 0 $ i5", "r11 = com github benmanes caffeine cache frequency sketch r0", "r11 table mask = $ i6", "$ b7 = l0 cmp 0l", "if $ b7 ! = 0 goto label6", "$ i11 = 10", "goto label7", "label r12 = com github benmanes caffeine cache frequency sketch r0", "r12 sample size = $ i11", "r13 = com github benmanes caffeine cache frequency sketch r0", "$ i8 = r13 sample size", "if $ i8 > 0 goto label8", "r14 = com github benmanes caffeine cache frequency sketch r0", "r14 sample size = 2147483647", "label r15 = com github benmanes caffeine cache frequency sketch r0", "r15 size = 0", "if $ b7 ! = 0 goto label6", "label $ i11 = 10 * i1", "label if i1 ! = 0 goto label4", "label $ i10 = com github benmanes caffeine cache frequency sketch ceiling next power of two i1", "if $ b2 < 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com github benmanes caffeine cache non reentrant lock r0", "$ r2 = r3 sync", "$ z0 = $ r2 be queue r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com github benmanes caffeine cache non reentrant lock r0", "$ r1 = r2 sync", "$ i0 = $ r1 get queue length", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "java util object require non null r1", "$ z0 = r1 instanceof java util concurrent lock abstract queue synchronizer $ condition object", "if $ z0 ! = 0 goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` not owner\\ ``", "throw r6", "if $ z0 ! = 0 goto label1", "label r7 = com github benmanes caffeine cache non reentrant lock r0", "$ r4 = r7 sync", "$ r3 = java util concurrent lock abstract queue synchronizer $ condition object r1", "$ i0 = $ r4 get wait queue length $ r3", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r3 = org apache cassandra auth authenticate user r0", "$ r1 = r3 role", "$ r2 = org apache cassandra auth role get roles $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r7 = new org apache cassandra concurrent debuggable thread pool executor", "$ r3 = java util concurrent time unit second", "r5 = new java util concurrent synchronous queue", "specialinvoke r5 < init >", "r6 = new org apache cassandra concurrent name thread factory", "specialinvoke r6 < init > r0", "r8 = java util concurrent thread factory r6", "specialinvoke r7 < init > 0 2147483647 60l $ r3 r5 r8", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache cassandra config schema r0", "$ r1 = r2 load from disk 1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache cassandra config schema r0", "$ r2 = r5 keyspace instance", "$ r3 = $ r2 get r1", "$ r4 = org apache cassandra db keyspace $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = org apache cassandra config schema $ assertion disable", "if $ z0 ! = 0 goto label1", "if r1 ! = null goto label1", "r8 = new java lang assertion error", "specialinvoke r8 < init >", "throw r8", "if r1 ! = null goto label1", "label r9 = org apache cassandra config schema r0", "$ r4 = r9 keyspaces", "$ r5 = $ r4 get r1", "r3 = org apache cassandra schema keyspace metadata $ r5", "if r3 ! = null goto label2", "$ r7 = null", "goto label3", "label return $ r7", "if r3 ! = null goto label2", "label $ r7 = r3 get table or view nullable r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org apache cassandra config schema r0", "$ r1 = r2 alt version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = new org apache cassandra cql3 column condition $ builder", "specialinvoke $ r0 < init > null", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org apache cassandra cql3 operation r0", "$ r1 = r2 static operation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache cassandra cql3 operation r0", "$ r1 = r3 static operation", "$ z0 = $ r1 be empty", "if $ z0 == 0 goto label1", "r4 = org apache cassandra cql3 operation r0", "$ r2 = r4 regular operation", "$ z1 = $ r2 be empty", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang unsupported operation exception", "specialinvoke $ r1 < init >", "throw $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org apache cassandra cql3 restriction cluster column restriction r0", "$ r3 = r5 restriction", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label3", "$ r4 = r1 next", "r2 = org apache cassandra cql3 restriction single restriction $ r4", "$ z1 = r2 be contain", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache cassandra cql3 restriction restriction set r0", "$ r4 = r8 restriction", "$ r5 = $ r4 key set", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r6 = r2 next", "r3 = org apache cassandra config column definition $ r6", "$ r7 = r3 kind", "if $ r7 ! = r1 goto label2", "return 1", "if $ r7 ! = r1 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r5 = org apache cassandra cql3 restriction single restriction r0", "$ r4 = r5 append to r1 r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache cassandra cql3 restriction statement restriction r0", "$ z0 = r1 use secondary index", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache cassandra cql3 statement bound start", "r25 = org apache cassandra cql3 restriction term slice r0", "$ z0 = r25 have bind $ r2", "if $ z0 == 0 goto label2", "$ z5 = org apache cassandra cql3 restriction term slice $ assertion disable", "if $ z5 ! = 0 goto label1", "$ r19 = org apache cassandra cql3 statement bound start", "$ z8 = r1 have bind $ r19", "if $ z8 == 0 goto label1", "r21 = new java lang assertion error", "specialinvoke r21 < init >", "throw r21", "if $ z8 == 0 goto label1", "label r22 = new org apache cassandra cql3 restriction term slice", "$ r13 = org apache cassandra cql3 statement bound start", "r26 = org apache cassandra cql3 restriction term slice r0", "$ r14 = r26 bind $ r13", "$ r15 = org apache cassandra cql3 statement bound start", "r27 = org apache cassandra cql3 restriction term slice r0", "$ z6 = r27 be inclusive $ r15", "$ r16 = org apache cassandra cql3 statement bound end", "$ r17 = r1 bind $ r16", "$ r18 = org apache cassandra cql3 statement bound end", "$ z7 = r1 be inclusive $ r18", "specialinvoke r22 < init > $ r14 $ z6 $ r17 $ z7", "return r22", "if $ z0 == 0 goto label2", "label $ z1 = org apache cassandra cql3 restriction term slice $ assertion disable", "if $ z1 ! = 0 goto label3", "$ r10 = org apache cassandra cql3 statement bound end", "$ z4 = r1 have bind $ r10", "if $ z4 == 0 goto label3", "r23 = new java lang assertion error", "specialinvoke r23 < init >", "throw r23", "if $ z4 == 0 goto label3", "label r24 = new org apache cassandra cql3 restriction term slice", "$ r4 = org apache cassandra cql3 statement bound start", "$ r5 = r1 bind $ r4", "$ r6 = org apache cassandra cql3 statement bound start", "$ z2 = r1 be inclusive $ r6", "$ r7 = org apache cassandra cql3 statement bound end", "r28 = org apache cassandra cql3 restriction term slice r0", "$ r8 = r28 bind $ r7", "$ r9 = org apache cassandra cql3 statement bound end", "r29 = org apache cassandra cql3 restriction term slice r0", "$ z3 = r29 be inclusive $ r9", "specialinvoke r24 < init > $ r5 $ z2 $ r8 $ z3", "return r24"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z5 = 0", "$ r3 = org apache cassandra cql3 statement bound start", "r11 = org apache cassandra cql3 restriction term slice r0", "$ z0 = r11 have bind $ r3", "if $ z0 == 0 goto label3", "$ r7 = org apache cassandra cql3 statement bound start", "r12 = org apache cassandra cql3 restriction term slice r0", "$ z3 = r12 be inclusive $ r7", "if $ z3 == 0 goto label1", "$ r9 = org apache cassandra cql3 operator gte", "$ z6 = r2 support expression r1 $ r9", "goto label2", "label z5 = 0 | $ z6", "label $ r10 = org apache cassandra cql3 statement bound end", "r13 = org apache cassandra cql3 restriction term slice r0", "$ z7 = r13 have bind $ r10", "if $ z7 == 0 goto label6", "$ z2 = z5", "$ r4 = org apache cassandra cql3 statement bound end", "r14 = org apache cassandra cql3 restriction term slice r0", "$ z1 = r14 be inclusive $ r4", "if $ z1 == 0 goto label4", "$ r6 = org apache cassandra cql3 operator lte", "$ z8 = r2 support expression r1 $ r6", "goto label5", "label z5 = $ z2 | $ z8", "label return z5", "if $ z1 == 0 goto label4", "label $ r5 = org apache cassandra cql3 operator lt", "$ z8 = r2 support expression r1 $ r5", "if $ z3 == 0 goto label1", "label $ r8 = org apache cassandra cql3 operator gt", "$ z6 = r2 support expression r1 $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "r6 = org apache cassandra cql3 selection selection r0", "$ r1 = r6 cfm", "$ z0 = $ r1 be static compact table", "if $ z0 ! = 0 goto label1", "r7 = org apache cassandra cql3 selection selection r0", "$ r2 = r7 cfm", "$ z1 = $ r2 have static column", "if $ z1 ! = 0 goto label2", "label return 0", "if $ z1 ! = 0 goto label2", "label r8 = org apache cassandra cql3 selection selection r0", "$ z2 = r8 be wildcard", "if $ z2 == 0 goto label3", "return 1", "if $ z2 == 0 goto label3", "label r9 = org apache cassandra cql3 selection selection r0", "$ r4 = r9 column", "$ r3 = org apache cassandra cql3 selection selection static_column_filter", "$ r5 = com google common collect iterables filter $ r4 $ r3", "$ z3 = com google common collect iterables be empty $ r5", "if $ z3 ! = 0 goto label4", "$ z4 = 1", "goto label5", "label return $ z4", "if $ z3 ! = 0 goto label4", "label $ z4 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new java util array list", "r11 = org apache cassandra cql3 selection selector factory r0", "$ r6 = r11 factory", "$ i0 = $ r6 size", "specialinvoke r10 < init > $ i0", "r12 = org apache cassandra cql3 selection selector factory r0", "$ r7 = r12 factory", "r3 = $ r7 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r8 = r3 next", "r4 = org apache cassandra cql3 selection selector $ factory $ r8", "$ r9 = r4 new instance r1", "r10 add $ r9", "goto label1", "if $ z0 == 0 goto label2", "label return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r5 = new java util hash set", "specialinvoke r5 < init > r0", "$ i0 = r5 size", "$ i1 = r0 size", "if $ i0 == $ i1 goto label1", "$ r3 = newarray java lang object [ 0 ]", "$ r4 = org apache cassandra cql3 statement request validation invalid request r1 $ r3", "r6 = java lang throwable $ r4", "throw r6", "if $ i0 == $ i1 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r2 = new org apache cassandra db aggregation aggregation specification $ aggregate by pk prefix", "specialinvoke r2 < init > r0 i0", "r3 = org apache cassandra db aggregation aggregation specification r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache cassandra db column family store r0", "r1 invalidate 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r12 = org apache cassandra db column family store r0", "$ r4 = r12 data", "entermonitor $ r4", "label r13 = org apache cassandra db column family store r0", "specialinvoke r13 log flush", "r11 = new org apache cassandra db column family store $ flush", "r14 = org apache cassandra db column family store r0", "specialinvoke r11 < init > r14 0 null", "$ r6 = org apache cassandra db column family store flush executor", "r15 = java lang runnable r11", "$ r6 execute r15", "$ r8 = org apache cassandra db column family store post flush executor", "$ r7 = r11 post flush task", "r16 = java lang runnable $ r7", "$ r8 execute r16", "$ r9 = r11 post flush task", "exitmonitor $ r4", "label r17 = com google common util concurrent listenable future $ r9", "return r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l2 = 0l", "r5 = null", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r4 = r2 next", "r3 = org apache cassandra io sstable format s s table reader $ r4", "$ l0 = r3 on disk length", "$ b1 = $ l0 cmp l2", "if $ b1 < = 0 goto label2", "l2 = r3 on disk length", "r5 = r3", "label goto label1", "if $ z0 == 0 goto label3", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r12 = org apache cassandra db column family store r0", "$ r4 = r12 data", "entermonitor $ r4", "label r11 = new org apache cassandra db column family store $ flush", "r13 = org apache cassandra db column family store r0", "specialinvoke r11 < init > r13 1 null", "$ r6 = org apache cassandra db column family store flush executor", "r14 = java lang runnable r11", "$ r6 execute r14", "$ r8 = org apache cassandra db column family store post flush executor", "$ r7 = r11 post flush task", "r15 = java lang runnable $ r7", "$ r8 execute r15", "$ r9 = r11 post flush task", "exitmonitor $ r4", "label r16 = java util concurrent future $ r9", "return r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = org apache cassandra db column r0", "$ i0 = r1 complex idx", "if $ i0 < = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r4 = org apache cassandra db column r0", "$ r2 = r4 column", "r5 = org apache cassandra db column r0", "$ i0 = r5 complex idx", "$ i1 = $ i0 - 1", "$ r1 = org apache cassandra utils btree b tree $ dir asc", "$ r3 = org apache cassandra utils btree b tree iterator $ r2 0 $ i1 $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r3 = org apache cassandra db column r0", "$ r2 = r3 column", "org apache cassandra utils btree b tree apply $ r2 r1 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r7 = org apache cassandra db commitlog abstract commit log segment manager r0", "$ r3 = r7 manager thread", "$ r3 join", "r8 = org apache cassandra db commitlog abstract commit log segment manager r0", "r8 manager thread = null", "r9 = org apache cassandra db commitlog abstract commit log segment manager r0", "$ r4 = r9 active segment", "r1 = $ r4 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r6 = r1 next", "r2 = org apache cassandra db commitlog commit log segment $ r6", "r2 close", "goto label1", "if $ z0 == 0 goto label2", "label $ r5 = org apache cassandra db commitlog abstract commit log segment manager buffer pool", "$ r5 shutdown", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org apache cassandra db commitlog commit log position none", "r4 = org apache cassandra db commitlog commit log reader r0", "r4 read all file r1 r2 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r11 = new org apache cassandra db commitlog interval set $ builder", "specialinvoke r11 < init >", "r3 = r0 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r8 = r3 next", "r4 = org apache cassandra io sstable format s s table reader $ r8", "$ r9 = r4 get s s table metadata", "$ r10 = $ r9 commit log interval", "r11 add all $ r10", "goto label1", "if $ z0 == 0 goto label2", "label if r1 == null goto label3", "$ r7 = org apache cassandra db commitlog commit log position none", "r12 = java lang comparable $ r7", "r13 = java lang comparable r1", "r11 add r12 r13", "label $ r6 = r11 build", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "$ r5 = org apache cassandra config schema instance", "$ r6 = $ r5 get non system keyspaces", "r1 = $ r6 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label4", "$ r7 = r1 next", "r2 = java lang string $ r7", "$ r8 = org apache cassandra db keyspace open r2", "$ r9 = $ r8 get column family store", "r3 = $ r9 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label3", "$ r10 = r3 next", "r4 = org apache cassandra db column family store $ r10", "r4 disable auto compaction", "goto label2", "if $ z1 == 0 goto label3", "label goto label1", "if $ z0 == 0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache cassandra db compaction compaction strategy manager r0", "r3 maybe reload disk boundary", "r4 = org apache cassandra db compaction compaction strategy manager r0", "$ r2 = r4 compaction strategy for r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache cassandra db compaction writer compaction aware writer r0", "$ l0 = r1 estimate total key", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "l1 = @ parameter2", "r2 = org apache cassandra db context counter context $ context state allocate 1 0 0", "r2 write global r1 l0 l1", "$ r3 = r2 context", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache cassandra db filter column filter r0", "$ r1 = r2 fetch", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = org apache cassandra db column family store get initial directory", "r2 = org apache cassandra db directory get k s child directory r1 $ r3", "org apache cassandra db directory clear snapshot r0 r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r4 = r2 next", "r3 = org apache cassandra io sstable format s s table reader $ r4", "r5 = org apache cassandra db lifecycle lifecycle transaction r0", "r5 cancel r3", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org apache cassandra db liveness info r0", "$ l0 = r1 timestamp", "$ b1 = $ l0 cmp -9223372036854775808l", "if $ b1 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b1 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r10 = org apache cassandra db partition partition update r0", "r1 = r10 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label4", "$ r5 = r1 next", "r2 = org apache cassandra db row row $ r5", "r11 = org apache cassandra db partition partition update r0", "$ r6 = r11 metadata", "$ r7 = $ r6 comparator", "$ r8 = r2 cluster", "r12 = org apache cassandra db cluster prefix $ r8", "$ r7 validate r12", "r3 = r2 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label3", "$ r9 = r3 next", "r4 = org apache cassandra db row column data $ r9", "r4 validate", "goto label2", "if $ z1 == 0 goto label3", "label goto label1", "if $ z0 == 0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r2 = org apache cassandra db row range tombstone bound marker r0", "$ r1 = r2 deletion", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r0 metadata", "$ r6 = org apache cassandra db row row iterators logger", "$ r3 = newarray java lang object [ 5 ]", "$ r3 [ 0 ] = r1", "$ r4 = r2 k name", "$ r3 [ 1 ] = $ r4", "$ r5 = r2 cf name", "$ r3 [ 2 ] = $ r5", "$ r7 = r2 get key validator", "$ r8 = r0 partition key", "$ r9 = $ r8 get key", "$ r10 = $ r7 get string $ r9", "$ r3 [ 3 ] = $ r10", "$ z0 = r0 be reverse order", "$ r11 = java lang boolean value of $ z0", "$ r3 [ 4 ] = $ r11", "$ r6 info \\ `` [ { } ] log iterator on { } { } partition key= { } reversed= { } \\", "r14 = new org apache cassandra db row row iterators $ 1 log", "specialinvoke r14 < init > r1 r2", "r15 = org apache cassandra db transform transformation r14", "$ r13 = org apache cassandra db transform transformation apply r0 r15", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "z0 = @ parameter4", "$ r4 = org apache cassandra db empty iterators unfiltered row r0 r1 z0 r2 r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "$ r2 = r0 decorate key r1", "$ r3 = org apache cassandra db slice all", "$ r4 = org apache cassandra db single partition read command create r0 i0 $ r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "r2 = @ parameter3", "$ r3 = r0 decorate key r1", "$ r4 = org apache cassandra db single partition read command create r0 i0 $ r3 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = newarray java lang object [ 2 ]", "$ r2 [ 0 ] = \\ `` local\\ ``", "$ r2 [ 1 ] = \\ `` local\\ ``", "$ r3 = java lang string format \\ `` delete truncated_at [ ? ] from system % s where key = \\ ' % s\\'\\", "$ r4 = newarray java lang object [ 1 ]", "$ r4 [ 0 ] = r0", "org apache cassandra cql3 query processor execute internal $ r3 $ r4", "org apache cassandra db system keyspace truncation record = null", "org apache cassandra db system keyspace force block flush \\ `` local\\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = com google common collect list new array list r0", "r17 = new org apache cassandra dht bound $ 1", "specialinvoke r17 < init >", "r19 = java util comparator r17", "java util collection sort r1 r19", "r2 = com google common collect set new hash set", "$ r6 = r1 iterator", "r3 = com google common collect iterators peek iterator $ r6", "label $ z0 = r3 have next", "if $ z0 == 0 goto label4", "$ r7 = r3 next", "r4 = org apache cassandra dht bound $ r7", "r16 = r4", "label $ z1 = r3 have next", "if $ z1 == 0 goto label3", "$ r11 = r16 right", "$ r12 = r3 peek", "$ r13 = org apache cassandra dht bound $ r12", "$ r14 = $ r13 leave", "$ i0 = $ r11 compare to $ r14", "if $ i0 < 0 goto label3", "$ r15 = r3 next", "r16 = org apache cassandra dht bound $ r15", "goto label2", "if $ i0 < 0 goto label3", "label r18 = new org apache cassandra dht bound", "$ r10 = r4 leave", "$ r9 = r16 right", "specialinvoke r18 < init > $ r10 $ r9", "r2 add r18", "goto label1", "if $ z0 == 0 goto label4", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [], [33], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 ! = null goto label1", "$ r2 = new java lang unsupported operation exception", "specialinvoke $ r2 < init > \\ `` keyspace may not be null\\ ``", "throw $ r2", "if r1 ! = null goto label1", "label r0 set \\ `` cassandra output keyspace\\", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache cassandra index sasi disk descriptor current", "r3 = org apache cassandra index sasi disk on disk index builder r0", "$ z0 = r3 finish $ r2 r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache cassandra io sstable format big big table scanner get scanner r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org apache cassandra io sstable format s s table read listener noop_listener", "r5 = org apache cassandra io sstable format s s table reader r0", "$ r4 = r5 get position r1 r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "l1 = @ parameter1", "$ d1 = double l0", "$ d0 = double l1", "$ d2 = $ d1 $ d0", "r1 = org apache cassandra io sstable metadata metadata collector r0", "r1 compression ratio = $ d2", "r2 = org apache cassandra io sstable metadata metadata collector r0", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ l0 = r0 get total space", "$ l1 = org apache cassandra io util file utils handle large file system $ l0", "return $ l1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = org apache cassandra locator token metadata r0", "$ r4 = r14 lock", "$ r5 = $ r4 read lock", "$ r5 lock", "label r15 = org apache cassandra locator token metadata r0", "$ r6 = r15 endpoint to host id map", "$ r7 = $ r6 inverse", "$ r8 = $ r7 get r1", "r2 = java net inet address $ r8", "label r16 = org apache cassandra locator token metadata r0", "$ r9 = r16 lock", "$ r10 = $ r9 read lock", "$ r10 unlock", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org apache cassandra locator token metadata $ assertion disable", "if $ z0 ! = 0 goto label1", "if r1 ! = null goto label1", "r18 = new java lang assertion error", "specialinvoke r18 < init >", "throw r18", "if r1 ! = null goto label1", "label r19 = org apache cassandra locator token metadata r0", "$ r5 = r19 lock", "$ r6 = $ r5 write lock", "$ r6 lock", "label r20 = org apache cassandra locator token metadata r0", "$ r7 = r20 move endpoint", "r2 = $ r7 iterator", "label $ z3 = r2 have next", "if $ z3 == 0 goto label5", "$ r10 = r2 next", "r3 = org apache cassandra utils pair $ r10", "$ r11 = r3 right", "$ r12 = java net inet address $ r11", "$ z1 = $ r12 equal r1", "if $ z1 == 0 goto label4", "r21 = org apache cassandra locator token metadata r0", "$ r13 = r21 move endpoint", "$ r13 remove r3", "goto label5", "label r22 = org apache cassandra locator token metadata r0", "r22 invalidate cache ring", "label r23 = org apache cassandra locator token metadata r0", "$ r8 = r23 lock", "$ r9 = $ r8 write lock", "$ r9 unlock", "goto label9", "label return", "if $ z1 == 0 goto label4", "label goto label3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [], [36], [37], []]}
{"nodes": ["r0 = @ this", "r1 = org apache cassandra metric restorable meter r0", "r1 mark 1l", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "$ z1 = org apache cassandra config database descriptor back pressure enable", "if $ z1 == 0 goto label2", "$ z2 = r2 support back pressure", "if $ z2 == 0 goto label2", "r5 = org apache cassandra net messaging service r0", "$ r4 = r5 get connection pool r1", "r3 = $ r4 get back pressure state", "if z0 ! = 0 goto label1", "r3 on response receive", "goto label2", "label return", "if z0 ! = 0 goto label1", "label r3 on response timeout"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache cassandra schema index r0", "$ r2 = r3 index by name", "$ z0 = $ r2 contain key r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 name", "r5 = org apache cassandra schema index r0", "$ r3 = r5 without $ r2", "$ r4 = $ r3 with r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = java lang system get property \\ `` cassandra start_native_transport\\ ``", "if r1 == null goto label1", "$ z3 = java lang boolean parse boolean r1", "if $ z3 ! = 0 goto label2", "label if r1 ! = null goto label3", "$ z2 = org apache cassandra config database descriptor start native transport", "if $ z2 == 0 goto label3", "label r7 = org apache cassandra service cassandra daemon r0", "r7 start native transport", "$ r6 = org apache cassandra service storage service instance", "$ r6 set rpc ready 1", "goto label4", "label r2 = java lang system get property \\ `` cassandra start_rpc\\ ``", "if r2 == null goto label5", "$ z1 = java lang boolean parse boolean r2", "if $ z1 ! = 0 goto label6", "label if r2 ! = null goto label7", "$ z0 = org apache cassandra config database descriptor start rpc", "if $ z0 == 0 goto label7", "label r8 = org apache cassandra service cassandra daemon r0", "$ r5 = r8 thrift server", "$ r5 start", "goto label8", "label return", "if $ z0 == 0 goto label7", "label $ r4 = org apache cassandra service cassandra daemon logger", "$ r4 info \\ `` not start rpc server a request use jmx storage service- > start r p c server or nodetool enablethrift to start it\\ ``", "if $ z2 == 0 goto label3", "label $ r3 = org apache cassandra service cassandra daemon logger", "$ r3 info \\ `` not start native transport a request use jmx storage service- > start native transport or nodetool enablebinary to start it\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r3 = org apache cassandra service native transport service r0", "r3 initialize", "r4 = org apache cassandra service native transport service r0", "$ r1 = r4 server", "$ r2 = native transport service $ start__1 bootstrap $", "$ r1 for each $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r5 = org apache cassandra service startup check r0", "$ r3 = r5 pre flight check", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r4 = r1 next", "r2 = org apache cassandra service startup check $ r4", "r2 execute", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org apache cassandra stream session info $ assertion disable", "if $ z0 ! = 0 goto label1", "r12 = org apache cassandra stream session info r0", "$ r8 = r12 peer", "$ r7 = r1 peer", "$ z1 = $ r8 equal $ r7", "if $ z1 ! = 0 goto label1", "r11 = new java lang assertion error", "specialinvoke r11 < init >", "throw r11", "if $ z1 ! = 0 goto label1", "label $ r4 = r1 direction", "$ r3 = org apache cassandra stream progress info $ direction in", "if $ r4 ! = $ r3 goto label2", "r13 = org apache cassandra stream session info r0", "$ r10 = r13 receive file", "goto label3", "label $ r5 = r1 file name", "$ r10 put $ r5 r1", "return", "if $ r4 ! = $ r3 goto label2", "label r14 = org apache cassandra stream session info r0", "$ r10 = r14 send file"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [], [20], [21], [], [23], [24], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "z0 = @ parameter3", "if z0 == 0 goto label1", "org apache cassandra utils btree b tree apply reverse r0 r1 r2", "goto label2", "label return", "if z0 == 0 goto label1", "label org apache cassandra utils btree b tree apply forward r0 r1 r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 position", "$ i1 = r0 get int $ i0", "return $ i1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 have array", "if $ z0 == 0 goto label1", "$ r5 = r0 array", "$ i13 = r0 array offset", "$ i14 = r0 position", "$ i15 = $ i13 + $ i14", "$ i16 = r0 remain", "$ r6 = org apache cassandra utils hex byte to hex $ r5 $ i15 $ i16", "return $ r6", "if $ z0 == 0 goto label1", "label i0 = r0 position", "i1 = r0 remain", "$ i3 = i1 * 2", "r1 = newarray char [ $ i3 ]", "i17 = 0", "label if i17 > = i1 goto label3", "$ i4 = i17 + i0", "b2 = r0 get $ i4", "$ i8 = i17 * 2", "$ r3 = org apache cassandra utils hex byte to char", "$ s5 = b2 & 240", "$ s6 = $ s5 > > 4", "$ c7 = $ r3 [ $ s6 ]", "r1 [ $ i8 ] = $ c7", "$ i9 = i17 * 2", "$ i12 = 1 + $ i9", "$ r4 = org apache cassandra utils hex byte to char", "$ b10 = b2 & 15", "$ c11 = $ r4 [ $ b10 ]", "r1 [ $ i12 ] = $ c11", "i17 = i17 + 1", "goto label2", "label if i17 > = i1 goto label3", "label $ r2 = org apache cassandra utils hex wrap char array r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], [35], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache cassandra utils concurrent op order $ barrier", "r3 = org apache cassandra utils concurrent op order r0", "specialinvoke r2 < init > r3", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache cassandra utils concurrent ref r0", "$ r3 = r5 reference", "$ r4 = $ r3 remove r1", "r2 = org apache cassandra utils concurrent ref $ r4", "if r2 == null goto label1", "r2 release", "label if r2 == null goto label2", "$ z0 = 1", "goto label3", "label return $ z0", "label if r2 == null goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r3 = org apache cassandra utils merkle tree r0", "$ r2 = r3 add merkle tree i0 126 r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["l0 = @ parameter0", "r0 = org apache cassandra utils nano time to current time millis timestamp_base", "$ l3 = r0 [ 0 ]", "$ r1 = java util concurrent time unit nanoseconds", "$ l1 = r0 [ 1 ]", "$ l2 = l0 - $ l1", "$ l4 = $ r1 to millis $ l2", "$ l5 = $ l3 + $ l4", "return $ l5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 be direct", "if $ z0 == 0 goto label1", "$ l8 = org apache cassandra utils object sizes buffer_empty_size", "return $ l8", "if $ z0 == 0 goto label1", "label $ i0 = r0 capacity", "$ i1 = r0 remain", "if $ i0 < = $ i1 goto label2", "$ i6 = r0 remain", "$ l7 = long $ i6", "return $ l7", "if $ i0 < = $ i1 goto label2", "label $ l2 = org apache cassandra utils object sizes buffer_empty_size", "$ i3 = r0 capacity", "$ l4 = org apache cassandra utils object sizes size of array $ i3 1l", "$ l5 = $ l2 + $ l4", "return $ l5"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], []]}
{"nodes": ["i5 = @ parameter0", "i6 = i5 + -1", "$ i0 = i6 > > 1", "i7 = i6 | $ i0", "$ i1 = i7 > > 2", "i8 = i7 | $ i1", "$ i2 = i8 > > 4", "i9 = i8 | $ i2", "$ i3 = i9 > > 8", "i10 = i9 | $ i3", "$ i4 = i10 > > 16", "i11 = i10 | $ i4", "i12 = i11 + 1", "return i12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["l0 = @ parameter0", "$ l1 = l0 - 1l", "$ l2 = $ l1 > > > 6", "$ l3 = $ l2 + 1l", "return $ l3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache cassandra utils slide time rate r0", "$ d0 = r2 get 0l r1", "return $ d0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "l0 = r0 get most significant bit", "l1 = r0 get least significant bit", "r1 = newarray byte [ 16 ]", "i13 = 0", "label if i13 > = 8 goto label2", "$ i2 = 7 - i13", "$ i3 = $ i2 * 8", "$ l4 = l0 > > > $ i3", "$ i5 = int $ l4", "$ b6 = byte $ i5", "r1 [ i13 ] = $ b6", "$ i12 = 8 + i13", "$ i7 = 7 - i13", "$ i8 = $ i7 * 8", "$ l9 = l1 > > > $ i8", "$ i10 = int $ l9", "$ b11 = byte $ i10", "r1 [ $ i12 ] = $ b11", "i13 = i13 + 1", "goto label1", "label if i13 > = 8 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["$ r0 = org apache cassandra utils u u i d gen instance", "$ l0 = specialinvoke $ r0 create time safe", "$ r1 = org apache cassandra utils u u i d gen create time u u i d bytes $ l0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core abstract table metadata r0", "$ r1 = r2 option", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core aggregate metadata r0", "$ r1 = r2 init cond", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com datastax driver core cluster r0", "$ r2 = r5 manager", "com datastax driver core cluster check not close $ r2", "r6 = com datastax driver core cluster r0", "$ r3 = r6 manager", "$ r4 = $ r3 listener", "z0 = $ r4 remove r1", "if z0 == 0 goto label1", "r7 = com datastax driver core cluster r0", "r1 on unregister r7", "label r8 = com datastax driver core cluster r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["l0 = @ parameter0", "$ r0 = new com datastax driver core cluster wide percentile tracker $ builder", "specialinvoke $ r0 < init > l0", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r18 = com datastax driver core codec registry built_in_codecs", "i0 = lengthof r18", "i1 = 0", "label if i1 > = i0 goto label3", "r2 = r18 [ i1 ]", "$ r15 = r1 get cql type", "$ z4 = r2 accept $ r15", "if $ z4 == 0 goto label2", "$ r16 = r1 get java type", "$ z5 = r2 accept $ r16", "if $ z5 == 0 goto label2", "$ r17 = com datastax driver core codec registry logger", "$ r17 warn \\ `` ignore codec { } because it collide with previously register codec { } \\", "r24 = com datastax driver core codec registry r0", "return r24", "if $ z5 == 0 goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label r25 = com datastax driver core codec registry r0", "$ r3 = r25 codecs", "r19 = $ r3 iterator", "label $ z0 = r19 have next", "if $ z0 == 0 goto label6", "$ r11 = r19 next", "r20 = com datastax driver core type codec $ r11", "$ r12 = r1 get cql type", "$ z2 = r20 accept $ r12", "if $ z2 == 0 goto label5", "$ r13 = r1 get java type", "$ z3 = r20 accept $ r13", "if $ z3 == 0 goto label5", "$ r14 = com datastax driver core codec registry logger", "$ r14 warn \\ `` ignore codec { } because it collide with previously register codec { } \\", "r26 = com datastax driver core codec registry r0", "return r26", "if $ z3 == 0 goto label5", "label goto label4", "if $ z0 == 0 goto label6", "label r23 = new com datastax driver core codec registry $ cache key", "$ r5 = r1 get cql type", "$ r6 = r1 get java type", "specialinvoke r23 < init > $ r5 $ r6", "r27 = com datastax driver core codec registry r0", "$ r7 = r27 cache", "$ r8 = $ r7 get if present r23", "r22 = com datastax driver core type codec $ r8", "if r22 == null goto label7", "$ r10 = com datastax driver core codec registry logger", "$ r10 warn \\ `` ignore codec { } because it collide with previously generate codec { } \\", "r28 = com datastax driver core codec registry r0", "return r28", "if r22 == null goto label7", "label r29 = com datastax driver core codec registry r0", "$ r9 = r29 codecs", "$ r9 add r1", "r30 = com datastax driver core codec registry r0", "return r30"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [], [55], [56], [57], [58], [59], []]}
{"nodes": ["r0 = @ this", "r3 = com datastax driver core column definition r0", "$ r1 = r3 by idx", "$ r2 = java util array a list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core configuration r0", "$ r1 = r2 protocol option", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "l2 = @ parameter2", "$ r0 = new com datastax driver core duration", "specialinvoke $ r0 < init > i0 i1 l2", "return $ r0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core exception unsupported protocol version exception r0", "$ r1 = r2 server version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com datastax driver core execution info r0", "$ i0 = r1 speculative execution", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r8 = com datastax driver core execution info r0", "$ r1 = r8 page state", "if $ r1 ! = null goto label1", "return null", "if $ r1 ! = null goto label1", "label r7 = new com datastax driver core page state", "r9 = com datastax driver core execution info r0", "$ r6 = r9 page state", "r10 = com datastax driver core execution info r0", "$ r5 = r10 statement", "r11 = com datastax driver core execution info r0", "$ r4 = r11 protocol version", "r12 = com datastax driver core execution info r0", "$ r3 = r12 codec registry", "specialinvoke r7 < init > $ r6 $ r5 $ r4 $ r3", "return r7"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = com datastax driver core execution info r0", "$ z0 = r1 schema in agreement", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com datastax driver core function metadata r0", "$ z0 = r1 call on null input", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core host r0", "$ r1 = r2 rack", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core host r0", "$ r1 = r2 dse workload", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = new com datastax driver core jdk s s l option $ builder", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = new com datastax driver core local date", "specialinvoke $ r0 < init > i0", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com datastax driver core local date r0", "$ i0 = r1 day since epoch", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = @ parameter0", "r1 = @ parameter1", "r7 = com datastax driver core metadata handle id r6", "r9 = com datastax driver core metadata r0", "r2 = r9 token map", "if r2 ! = null goto label1", "$ r5 = java util collection empty set", "return $ r5", "if r2 ! = null goto label1", "label $ r4 = r1 get end", "r3 = com datastax driver core metadata $ token map access $ 800 r2 r7 $ r4", "if r3 ! = null goto label2", "$ r8 = java util collection empty set", "goto label3", "label return $ r8", "if r3 ! = null goto label2", "label $ r8 = r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core metric r0", "$ r1 = r2 connect to", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core metric r0", "$ r1 = r2 open connection", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core metric r0", "$ r1 = r2 bytes receive", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ z0 = r0 be empty", "if $ z0 == 0 goto label2", "label return 0", "if $ z0 == 0 goto label2", "label r1 = r0 to char array", "i2 = 0", "label $ i1 = lengthof r1", "if i2 > = $ i1 goto label7", "c0 = r1 [ i2 ]", "if c0 > = 48 goto label4", "if i2 ! = 0 goto label5", "if c0 ! = 45 goto label5", "label if c0 < = 57 goto label6", "label return 0", "label if c0 < = 57 goto label6", "label i2 = i2 + 1", "goto label3", "if i2 > = $ i1 goto label7", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r1 = com datastax driver core policy exponential reconnection policy r0", "$ l0 = r1 max delay m", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "r3 = new com datastax driver core querybuilder assignment $ list set idx assignment", "specialinvoke r3 < init > r0 i0 r1", "r4 = com datastax driver core querybuilder assignment r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = com datastax driver core query option r0", "$ i0 = r1 fetch size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com datastax driver core query option r0", "r1 reprepare on up = z0", "r2 = com datastax driver core query option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com datastax driver core query option r0", "r1 refresh schema interval millis = i0", "r2 = com datastax driver core query option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com datastax driver core query option r0", "r1 max pending refresh schema request = i0", "r2 = com datastax driver core query option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core query trace r0", "specialinvoke r2 maybe fetch trace", "r3 = com datastax driver core query trace r0", "$ r1 = r3 request type", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core schemabuilder abstract create statement r0", "r2 if not exist = 1", "r3 = com datastax driver core schemabuilder abstract create statement r0", "$ r1 = r3 self", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "com datastax driver core schemabuilder abstract create statement validate not empty r1 \\ `` column name\\ ``", "com datastax driver core schemabuilder abstract create statement validate not null r2 \\ `` column element type\\ ``", "$ r3 = newarray java lang object [ 1 ]", "$ r3 [ 0 ] = r1", "$ r4 = java lang string format \\ `` the column name \\ ' % s\\ ' be not allow because it be a reserved keyword\\", "com datastax driver core schemabuilder abstract create statement validate not key word r1 $ r4", "r9 = com datastax driver core schemabuilder abstract create statement r0", "$ r5 = r9 simple columns", "$ r6 = com datastax driver core schemabuilder u d t type set r2", "$ r5 put r1 $ r6", "r10 = com datastax driver core schemabuilder abstract create statement r0", "$ r8 = r10 self", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = com datastax driver core schemabuilder create r0", "$ r3 = r8 table name", "com datastax driver core schemabuilder create validate not empty $ r3 \\ `` column name\\ ``", "com datastax driver core schemabuilder create validate not null r2 \\ `` column udt type\\ ``", "$ r4 = newarray java lang object [ 1 ]", "$ r4 [ 0 ] = r1", "$ r5 = java lang string format \\ `` the static column name \\ ' % s\\ ' be not allow because it be a reserved keyword\\", "com datastax driver core schemabuilder create validate not key word r1 $ r5", "r9 = com datastax driver core schemabuilder create r0", "$ r6 = r9 static column", "$ r6 put r1 r2", "r10 = com datastax driver core schemabuilder create r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new com datastax driver core schemabuilder create keyspace", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new com datastax driver core schemabuilder create type", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "if i0 < 0 goto label1", "if i0 < = 100 goto label2", "label $ r0 = new java lang illegal argument exception", "specialinvoke $ r0 < init > \\ `` percentile value for speculative retry should be between 0 and 100\\ ``", "throw $ r0", "if i0 < = 100 goto label2", "label $ r1 = new com datastax driver core schemabuilder table option $ speculative retry value", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append \\ `` \\'\\ ``", "$ r4 = $ r3 append i0", "$ r5 = $ r4 append \\ `` percentile\\'\\ ``", "$ r6 = $ r5 to string", "specialinvoke $ r1 < init > $ r6", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com google common base optional from nullable r1", "r4 = com datastax driver core schemabuilder table option r0", "r4 cassandra20 cache = $ r2", "r5 = com datastax driver core schemabuilder table option r0", "$ r3 = r5 self", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = com datastax driver core socket option r0", "$ i0 = r1 read timeout millis", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = java lang integer value of i0", "r2 = com datastax driver core socket option r0", "r2 so linger = $ r1", "r3 = com datastax driver core socket option r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core socket option r0", "$ r1 = r2 receive buffer size", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 be serial", "if $ z0 ! = 0 goto label1", "r8 = new java lang illegal argument exception", "r7 = new java lang string builder", "specialinvoke r7 < init >", "$ r4 = r7 append \\ `` supplied consistency level be not serial \\ ``", "$ r5 = $ r4 append r1", "$ r6 = $ r5 to string", "specialinvoke r8 < init > $ r6", "throw r8", "if $ z0 ! = 0 goto label1", "label r9 = com datastax driver core statement r0", "r9 serial consistency = r1", "r10 = com datastax driver core statement r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r0 instanceof com datastax driver core batch statement", "if $ z0 == 0 goto label1", "r6 = new java lang unsupported operation exception", "specialinvoke r6 < init > \\ `` can not set the page state on a batch statement\\ ``", "throw r6", "if $ z0 == 0 goto label1", "label if r1 ! = null goto label2", "r8 = com datastax driver core statement r0", "r8 page state = null", "goto label4", "label r12 = com datastax driver core statement r0", "return r12", "label if r1 ! = null goto label2", "label r9 = com datastax driver core statement r0", "$ z1 = r1 match r9 r2", "if $ z1 == 0 goto label3", "$ r4 = r1 get raw state", "r10 = com datastax driver core statement r0", "r10 page state = $ r4", "if $ z1 == 0 goto label3", "label r7 = new com datastax driver core exception page state exception", "specialinvoke r7 < init > \\ `` page state mismatch this mean that either the paging state content be alter or you\\ 're try to apply it to a different statement\\ ``", "r11 = java lang throwable r7", "throw r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = com datastax driver core table option metadata r0", "$ d0 = r1 read repair", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core table option metadata r0", "$ r1 = r2 speculative retry", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new java util concurrent schedule thread pool executor", "r5 = com datastax driver core threading option r0", "$ r3 = r5 create thread factory r1 \\ `` reconnection\\ ``", "specialinvoke r4 < init > 2 $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r6 = com datastax driver core token range r0", "$ r2 = r6 start", "r7 = com datastax driver core token range r0", "$ r1 = r7 end", "$ z0 = $ r2 equal $ r1", "if $ z0 == 0 goto label1", "r8 = com datastax driver core token range r0", "$ r4 = r8 start", "r9 = com datastax driver core token range r0", "$ r3 = r9 factory", "$ r5 = $ r3 min token", "$ z1 = $ r4 equal $ r5", "if $ z1 ! = 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 ! = 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ this", "r6 = com datastax driver core token range r0", "$ r2 = r6 start", "r7 = com datastax driver core token range r0", "$ r1 = r7 end", "$ i0 = $ r2 compare to $ r1", "if $ i0 < = 0 goto label1", "r8 = com datastax driver core token range r0", "$ r4 = r8 end", "r9 = com datastax driver core token range r0", "$ r3 = r9 factory", "$ r5 = $ r3 min token", "$ z0 = $ r4 equal $ r5", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 length", "$ i1 = $ i0 & 1", "if $ i1 ! = 1 goto label1", "$ r4 = new java lang illegal argument exception", "specialinvoke $ r4 < init > \\ `` a cql blob string must have an even length since one byte be always 2 hexadecimal character \\ ``", "throw $ r4", "if $ i1 ! = 1 goto label1", "label $ c2 = r0 char at 0", "if $ c2 ! = 48 goto label2", "$ c3 = r0 char at 1", "if $ c3 == 120 goto label3", "label $ r1 = new java lang illegal argument exception", "specialinvoke $ r1 < init > \\ `` a cql blob string must start with \\\\\\ `` 0x\\\\\\ `` \\ ``", "throw $ r1", "if $ c3 == 120 goto label3", "label $ r2 = com datastax driver core utils byte from raw hex string r0 2", "$ r3 = java nio byte buffer wrap $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["$ r0 = java util uuid random u u i d", "return $ r0"], "adj": [[1], []]}
{"nodes": ["l0 = @ parameter0", "$ r0 = new java util uuid", "$ l1 = com datastax driver core utils u u i d from unix timestamp l0", "$ l2 = com datastax driver core utils u u i d make m s b $ l1", "specialinvoke $ r0 < init > $ l2 -9187201950435737472l", "return $ r0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ i1 = r0 version", "if $ i1 == 1 goto label1", "$ r1 = new java lang illegal argument exception", "$ r2 = newarray java lang object [ 1 ]", "$ i5 = r0 version", "$ r3 = java lang integer value of $ i5", "$ r2 [ 0 ] = $ r3", "$ r4 = java lang string format \\ `` can only retrieve the unix timestamp for version 1 uuid provide version % d \\", "specialinvoke $ r1 < init > $ r4", "throw $ r1", "if $ i1 == 1 goto label1", "label l0 = r0 timestamp", "$ l3 = l0 10000l", "$ l2 = com datastax driver core utils u u i ds start_epoch", "$ l4 = $ l3 + $ l2", "return $ l4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = com datastax driver core version number r0", "$ i0 = r1 dse patch", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org apache cassandra config database descriptor get cluster name", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r1 get name", "r0 set \\ `` com twitter chill config configuredinstantiator\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new com twitter chill kryo instantiator $ 1", "r4 = com twitter chill kryo instantiator r0", "specialinvoke r3 < init > r4 r1", "r5 = com twitter chill kryo instantiator r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new com twitter chill kryo instantiator $ 2", "r4 = com twitter chill kryo instantiator r0", "specialinvoke r3 < init > r4 r1", "r5 = com twitter chill kryo instantiator r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["i0 = @ parameter0", "r0 = @ parameter1", "r2 = new com twitter chill kryo pool $ 2", "specialinvoke r2 < init > i0 r0", "r3 = com twitter chill kryo pool r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = io github classgraph array class info r0", "$ r1 = r3 array type signature", "$ r2 = $ r1 get element type signature", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r9 = io github classgraph class graph r0", "r9 enable class info", "r10 = io github classgraph class graph r0", "r10 enable field info", "r11 = io github classgraph class graph r0", "r11 enable method info", "r12 = io github classgraph class graph r0", "r12 enable annotation info", "r13 = io github classgraph class graph r0", "r13 enable static final field constant initializer value", "r14 = io github classgraph class graph r0", "r14 ignore class visibility", "r15 = io github classgraph class graph r0", "r15 ignore field visibility", "r16 = io github classgraph class graph r0", "r16 ignore method visibility", "r17 = io github classgraph class graph r0", "return r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r3 = io github classgraph class graph r0", "r3 enable class info", "r4 = io github classgraph class graph r0", "$ r2 = r4 scan spec", "$ r2 disable runtime invisible annotation = 1", "r5 = io github classgraph class graph r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = io github classgraph class graph r0", "$ r1 = r2 scan spec", "$ r1 scan jar = 0", "r3 = io github classgraph class graph r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io github classgraph class graph r0", "$ r2 = r3 scan spec", "$ r2 add module layer r1", "r4 = io github classgraph class graph r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = io github classgraph class graph r0", "$ r1 = r2 scan spec", "$ r1 enable remote jar scan = 1", "r3 = io github classgraph class graph r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io github classgraph class info r0", "$ r4 = specialinvoke r6 get override order", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = io github classgraph class info $ r5", "$ z1 = r3 have declare field annotation r1", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io github classgraph class info r0", "$ r4 = r6 get declare method info", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = io github classgraph method info $ r5", "$ z1 = r3 have annotation r1", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "$ r1 = io github classgraph class info $ rel type method_parameter_annotations", "r3 = io github classgraph class info r0", "$ r2 = specialinvoke r3 get field or method annotation $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = new io github classgraph class info list", "r5 = io github classgraph class info list r0", "$ r3 = r5 directly relate class", "r6 = io github classgraph class info list r0", "$ r2 = r6 directly relate class", "r7 = io github classgraph class info list r0", "$ z0 = r7 sort by name", "specialinvoke r4 < init > $ r3 $ r2 $ z0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io github classgraph mappable info list r0", "r2 = r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r4 = r2 next", "r3 = io github classgraph have name $ r4", "$ r5 = r3 get name", "$ z1 = $ r5 equal r1", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = io github classgraph method info r0", "$ i0 = r1 modifier", "$ z0 = java lang reflect modifier be synchronize $ i0", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io github classgraph method parameter info r0", "$ r1 = r2 type descriptor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r4 = io github classgraph module reader proxy collector to list", "if $ r4 ! = null goto label1", "r11 = new java lang illegal argument exception", "specialinvoke r11 < init > \\ `` could not call collector to list \\ ``", "throw r11", "if $ r4 ! = null goto label1", "label r14 = io github classgraph module reader proxy r0", "$ r5 = r14 module reader", "r1 = nonapi io github classgraph utils reflection utils invoke method $ r5 \\ `` list\\", "if r1 ! = null goto label2", "r12 = new java lang illegal argument exception", "specialinvoke r12 < init > \\ `` could not call module reader list \\ ``", "throw r12", "if r1 ! = null goto label2", "label $ r7 = io github classgraph module reader proxy collector class", "$ r6 = io github classgraph module reader proxy collector to list", "r2 = nonapi io github classgraph utils reflection utils invoke method r1 \\ `` collect\\", "if r2 ! = null goto label3", "r13 = new java lang illegal argument exception", "specialinvoke r13 < init > \\ `` could not call module reader list collect collector to list \\ ``", "throw r13", "if r2 ! = null goto label3", "label r3 = java util list r2", "return r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = io github classgraph resource r0", "$ l0 = r1 last modified", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = io github classgraph scan result r0", "$ r7 = r14 close", "$ z0 = $ r7 get", "if $ z0 == 0 goto label1", "r12 = new java lang illegal argument exception", "specialinvoke r12 < init > \\ `` can not use a scan result after it have be closed\\ ``", "throw r12", "if $ z0 == 0 goto label1", "label r2 = nonapi io github classgraph utils file utils sanitize entry path r1 1", "r13 = new io github classgraph resource list", "specialinvoke r13 < init >", "r15 = io github classgraph scan result r0", "$ r9 = r15 classpath order", "r4 = $ r9 iterator", "label $ z1 = r4 have next", "if $ z1 == 0 goto label4", "$ r10 = r4 next", "r5 = io github classgraph classpath element $ r10", "r6 = r5 get resource r2", "if r6 == null goto label3", "r13 add r6", "label goto label2", "if $ z1 == 0 goto label4", "label return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = io github classgraph scan result r0", "$ r3 = r12 close", "$ z0 = $ r3 get", "if $ z0 == 0 goto label1", "r10 = new java lang illegal argument exception", "specialinvoke r10 < init > \\ `` can not use a scan result after it have be closed\\ ``", "throw r10", "if $ z0 == 0 goto label1", "label r13 = io github classgraph scan result r0", "$ r4 = r13 scan spec", "$ z1 = $ r4 enable class info", "if $ z1 ! = 0 goto label2", "r11 = new java lang illegal argument exception", "specialinvoke r11 < init > \\ `` please call class graph #enable class info before #scan \\ ``", "throw r11", "if $ z1 ! = 0 goto label2", "label r14 = io github classgraph scan result r0", "$ r5 = r14 class name to class info", "$ r6 = $ r5 get r1", "r2 = io github classgraph class info $ r6", "if r2 ! = null goto label3", "$ r9 = io github classgraph class info list empty_list", "goto label4", "label return $ r9", "if r2 ! = null goto label3", "label $ r9 = r2 get class implement"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ this", "r2 = nonapi io github classgraph fastzipfilereader physical zip file r0", "$ r1 = r2 path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = nonapi io github classgraph fastzipfilereader zip file slice r0", "$ r1 = r2 path within parent zip file slice", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = new java lang string builder", "specialinvoke r4 < init >", "r5 = nonapi io github classgraph fastzipfilereader zip file slice r0", "specialinvoke r5 append path r4", "$ r3 = r4 to string", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = new nonapi io github classgraph json class field cache", "specialinvoke $ r3 < init > 1 0", "$ r4 = nonapi io github classgraph json j s o n deserializer deserialize object r0 r1 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = nonapi io github classgraph scanspec white black list r0", "$ z0 = r1 whitelist be empty", "if $ z0 == 0 goto label1", "r2 = nonapi io github classgraph scanspec white black list r0", "$ z1 = r2 blacklist be empty", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r3 = nonapi io github classgraph type parser r0", "$ r1 = r3 string", "$ r2 = $ r1 sub sequence i0 i1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = nonapi io github classgraph type parser r0", "$ r2 = r4 token", "r1 = $ r2 to string", "r5 = nonapi io github classgraph type parser r0", "$ r3 = r5 token", "$ r3 set length 0", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "r2 = r0 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "r3 = r2 next", "nonapi io github classgraph utils jar utils append path elt r3 $ r4", "goto label1", "if $ z0 == 0 goto label2", "label $ r5 = $ r4 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ z0 = r1 be empty", "if $ z0 ! = 0 goto label1", "r0 append r1", "label z2 = 1", "r5 = r4 iterator", "label $ z3 = r5 have next", "if $ z3 == 0 goto label5", "r6 = r5 next", "if z2 == 0 goto label3", "z2 = 0", "goto label4", "label $ r9 = r6 to string", "r0 append $ r9", "goto label2", "if z2 == 0 goto label3", "label r0 append r2", "if $ z3 == 0 goto label5", "label $ z1 = r3 be empty", "if $ z1 ! = 0 goto label6", "r0 append r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ parameter0", "org apache common cli option builder longopt = r0", "$ r1 = org apache common cli option builder instance", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["org apache common cli option builder require = 1", "$ r0 = org apache common cli option builder instance", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["org apache common cli option builder valuesep = 61", "$ r0 = org apache common cli option builder instance", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["org apache common cli option builder require = 1", "$ r0 = org apache common cli option builder instance", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "org apache common cli option builder description = r0", "$ r1 = org apache common cli option builder instance", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r2 = @ parameter2", "r4 = org apache common cli option r0", "r4 add option r1 null z0 r2", "r5 = org apache common cli option r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache common cli option r0", "$ r2 = r6 option group", "$ r3 = r1 get opt", "$ r4 = $ r2 get $ r3", "$ r5 = org apache common cli option group $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common cli pattern option builder string_value", "if $ r2 ! = r1 goto label1", "return r0", "if $ r2 ! = r1 goto label1", "label $ r3 = org apache common cli pattern option builder object_value", "if $ r3 ! = r1 goto label2", "$ r18 = org apache common cli type handler create object r0", "return $ r18", "if $ r3 ! = r1 goto label2", "label $ r4 = org apache common cli pattern option builder number_value", "if $ r4 ! = r1 goto label3", "$ r17 = org apache common cli type handler create number r0", "return $ r17", "if $ r4 ! = r1 goto label3", "label $ r5 = org apache common cli pattern option builder date_value", "if $ r5 ! = r1 goto label4", "$ r16 = org apache common cli type handler create date r0", "return $ r16", "if $ r5 ! = r1 goto label4", "label $ r6 = org apache common cli pattern option builder class_value", "if $ r6 ! = r1 goto label5", "$ r15 = org apache common cli type handler create class r0", "return $ r15", "if $ r6 ! = r1 goto label5", "label $ r7 = org apache common cli pattern option builder file_value", "if $ r7 ! = r1 goto label6", "$ r14 = org apache common cli type handler create file r0", "return $ r14", "if $ r7 ! = r1 goto label6", "label $ r8 = org apache common cli pattern option builder existing_file_value", "if $ r8 ! = r1 goto label7", "$ r13 = org apache common cli type handler create file r0", "return $ r13", "if $ r8 ! = r1 goto label7", "label $ r9 = org apache common cli pattern option builder files_value", "if $ r9 ! = r1 goto label8", "$ r12 = org apache common cli type handler create file r0", "return $ r12", "if $ r9 ! = r1 goto label8", "label $ r10 = org apache common cli pattern option builder url_value", "if $ r10 ! = r1 goto label9", "$ r11 = org apache common cli type handler create u r l r0", "return $ r11", "if $ r10 ! = r1 goto label9", "label return null"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], [17], [18], [19], [], [21], [22], [23], [24], [], [26], [27], [28], [29], [], [31], [32], [33], [34], [], [36], [37], [38], [39], [], [41], [42], [43], [44], [], [46], []]}
{"nodes": ["r0 = @ parameter0", "label $ r2 = java lang class for name r0", "return $ r2"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r3 = new org apache common cli help formatter $ option comparator", "specialinvoke r3 < init > null", "r4 = org apache common cli help formatter r0", "r5 = java util comparator r3", "r4 option comparator = r5", "goto label2", "label return", "if r1 ! = null goto label1", "label r6 = org apache common cli help formatter r0", "r6 option comparator = r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org apache common collection bag transform sorted bag", "specialinvoke r3 < init > r0 r1", "r4 = org apache common collection sort bag r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r25 = org apache common collection buffer block buffer r0", "$ r5 = r25 lock", "entermonitor $ r5", "label r26 = org apache common collection buffer block buffer r0", "$ r6 = r26 collection", "$ z0 = $ r6 be empty", "if $ z0 == 0 goto label08", "label r27 = org apache common collection buffer block buffer r0", "$ l0 = r27 timeout", "$ b1 = $ l0 cmp 0l", "if $ b1 > 0 goto label03", "r28 = org apache common collection buffer block buffer r0", "$ r10 = r28 lock", "$ r10 wait", "goto label06", "label goto label01", "if $ b1 > 0 goto label03", "label r29 = org apache common collection buffer block buffer r0", "$ l2 = r29 timeout", "r30 = org apache common collection buffer block buffer r0", "$ r9 = r30 get $ l2", "label exitmonitor $ r5", "label return $ r9", "if $ z0 == 0 goto label08", "label r32 = org apache common collection buffer block buffer r0", "$ r7 = r32 get buffer", "$ r8 = $ r7 get", "exitmonitor $ r5", "label return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r25 = org apache common collection buffer block buffer r0", "$ r5 = r25 lock", "entermonitor $ r5", "label r26 = org apache common collection buffer block buffer r0", "$ r6 = r26 collection", "$ z0 = $ r6 be empty", "if $ z0 == 0 goto label08", "label r27 = org apache common collection buffer block buffer r0", "$ l0 = r27 timeout", "$ b1 = $ l0 cmp 0l", "if $ b1 > 0 goto label03", "r28 = org apache common collection buffer block buffer r0", "$ r10 = r28 lock", "$ r10 wait", "goto label06", "label goto label01", "if $ b1 > 0 goto label03", "label r29 = org apache common collection buffer block buffer r0", "$ l2 = r29 timeout", "r30 = org apache common collection buffer block buffer r0", "$ r9 = r30 remove $ l2", "label exitmonitor $ r5", "label return $ r9", "if $ z0 == 0 goto label08", "label r32 = org apache common collection buffer block buffer r0", "$ r7 = r32 get buffer", "$ r8 = $ r7 remove", "exitmonitor $ r5", "label return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common collection buffer priority buffer r0", "$ i0 = r1 size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org apache common collection buffer unbounded fifo buffer r0", "$ z0 = r6 be empty", "if $ z0 == 0 goto label1", "r5 = new org apache common collection buffer underflow exception", "specialinvoke r5 < init > \\ `` the buffer be already empty\\ ``", "r7 = java lang throwable r5", "throw r7", "if $ z0 == 0 goto label1", "label r8 = org apache common collection buffer unbounded fifo buffer r0", "$ r2 = r8 buffer", "r9 = org apache common collection buffer unbounded fifo buffer r0", "$ i0 = r9 head", "r1 = $ r2 [ $ i0 ]", "if r1 == null goto label2", "r10 = org apache common collection buffer unbounded fifo buffer r0", "$ r3 = r10 buffer", "r11 = org apache common collection buffer unbounded fifo buffer r0", "$ i1 = r11 head", "$ r3 [ $ i1 ] = null", "r12 = org apache common collection buffer unbounded fifo buffer r0", "$ i2 = r12 head", "r13 = org apache common collection buffer unbounded fifo buffer r0", "$ i3 = specialinvoke r13 increment $ i2", "r14 = org apache common collection buffer unbounded fifo buffer r0", "r14 head = $ i3", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r4 = new org apache common collection collection predicate collection", "$ r3 = org apache common collection functors instanceof predicate get instance r1", "specialinvoke r4 < init > r0 $ r3", "r5 = java util collection r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org apache common collection collection utils get cardinality map r0", "r3 = org apache common collection collection utils get cardinality map r1", "r4 = r0 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label3", "r5 = r4 next", "$ i0 = org apache common collection collection utils get freq r5 r2", "$ i1 = org apache common collection collection utils get freq r5 r3", "if $ i0 < = $ i1 goto label2", "return 0", "if $ i0 < = $ i1 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = new java lang integer", "specialinvoke $ r1 < init > i0", "$ r2 = org apache common collection collection utils index r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r19 = org apache common collection cursorable link list r0", "$ i1 = r19 _size", "if i0 ! = $ i1 goto label1", "r20 = org apache common collection cursorable link list r0", "r20 add r1", "goto label8", "label return", "if i0 ! = $ i1 goto label1", "label if i0 < 0 goto label2", "r21 = org apache common collection cursorable link list r0", "$ i3 = r21 _size", "if i0 < = $ i3 goto label3", "label r18 = new java lang index out of bound exception", "r17 = new java lang string buffer", "specialinvoke r17 < init >", "$ r6 = java lang string value of i0", "$ r7 = r17 append $ r6", "$ r8 = $ r7 append \\ `` < 0 or \\ ``", "$ r9 = java lang string value of i0", "$ r10 = $ r8 append $ r9", "$ r11 = $ r10 append \\ `` > \\ ``", "r22 = org apache common collection cursorable link list r0", "$ i2 = r22 _size", "$ r12 = $ r11 append $ i2", "$ r13 = $ r12 to string", "specialinvoke r18 < init > $ r13", "throw r18", "if i0 < = $ i3 goto label3", "label r23 = org apache common collection cursorable link list r0", "$ z0 = r23 be empty", "if $ z0 == 0 goto label4", "$ r15 = null", "goto label5", "label r2 = $ r15", "if null ! = $ r15 goto label6", "$ r16 = null", "goto label7", "label r25 = org apache common collection cursorable link list r0", "r25 insert listable $ r16 r2 r1", "if null ! = $ r15 goto label6", "label $ r16 = $ r15 prev", "if $ z0 == 0 goto label4", "label r24 = org apache common collection cursorable link list r0", "$ r15 = r24 get listable at i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [], [37], [38], [39], [], [41], [42], [43], [44], [45], [46], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = r0 goto label1", "return 1", "if r1 ! = r0 goto label1", "label $ z0 = r1 instanceof org apache common collection bag", "if $ z0 ! = 0 goto label2", "return 0", "if $ z0 ! = 0 goto label2", "label r2 = org apache common collection bag r1", "$ i0 = r2 size", "r7 = org apache common collection default map bag r0", "$ i1 = r7 size", "if $ i0 == $ i1 goto label3", "label r8 = org apache common collection default map bag r0", "$ r5 = r8 _map", "$ r6 = $ r5 key set", "r3 = $ r6 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label6", "r4 = r3 next", "$ i2 = r2 get count r4", "r9 = org apache common collection default map bag r0", "$ i3 = r9 get count r4", "if $ i2 == $ i3 goto label5", "label goto label4", "if $ z1 == 0 goto label6", "label return 1"], "adj": [[1], [2], [3], [], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common collection default map entry r0", "r2 = r3 value", "r4 = org apache common collection default map entry r0", "r4 value = r1", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache common collection extend property include", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common collection extend property r0", "$ r1 = r3 key a listed", "$ r2 = $ r1 iterator", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r14 = org apache common collection fast array list r0", "$ z0 = r14 fast", "if $ z0 == 0 goto label06", "entermonitor r0", "label r15 = org apache common collection fast array list r0", "$ r8 = r15 list", "$ r9 = $ r8 clone", "r2 = java util array list $ r9", "r2 add i0 r1", "r16 = org apache common collection fast array list r0", "r16 list = r2", "exitmonitor r0", "label goto label05", "label goto label11", "label return", "if $ z0 == 0 goto label06", "label r17 = org apache common collection fast array list r0", "$ r5 = r17 list", "entermonitor $ r5", "label r18 = org apache common collection fast array list r0", "$ r6 = r18 list", "$ r6 add i0 r1", "exitmonitor $ r5", "label goto label11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r14 = org apache common collection fast array list r0", "$ z1 = r14 fast", "if $ z1 == 0 goto label5", "entermonitor r0", "label r15 = org apache common collection fast array list r0", "$ r8 = r15 list", "$ r9 = $ r8 clone", "r2 = java util array list $ r9", "z0 = r2 add all i0 r1", "r16 = org apache common collection fast array list r0", "r16 list = r2", "exitmonitor r0", "label return z0", "if $ z1 == 0 goto label5", "label r17 = org apache common collection fast array list r0", "$ r5 = r17 list", "entermonitor $ r5", "label r18 = org apache common collection fast array list r0", "$ r6 = r18 list", "$ z2 = $ r6 add all i0 r1", "exitmonitor $ r5", "label return $ z2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache common collection fast array list r0", "$ z0 = r8 fast", "if $ z0 == 0 goto label1", "r9 = org apache common collection fast array list r0", "$ r6 = r9 list", "$ i1 = $ r6 index of r1", "return $ i1", "if $ z0 == 0 goto label1", "label r10 = org apache common collection fast array list r0", "$ r4 = r10 list", "entermonitor $ r4", "label r11 = org apache common collection fast array list r0", "$ r5 = r11 list", "$ i0 = $ r5 index of r1", "exitmonitor $ r4", "label return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common collection fast array list r0", "$ z0 = r5 fast", "if $ z0 == 0 goto label1", "r4 = new org apache common collection fast array list $ list iter", "r6 = org apache common collection fast array list r0", "specialinvoke r4 < init > r6 0", "r7 = java util list iterator r4", "return r7", "if $ z0 == 0 goto label1", "label r8 = org apache common collection fast array list r0", "$ r1 = r8 list", "$ r2 = $ r1 list iterator", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common collection fast array list r0", "$ z0 = r5 fast", "if $ z0 == 0 goto label1", "r4 = new org apache common collection fast array list $ list iter", "r6 = org apache common collection fast array list r0", "specialinvoke r4 < init > r6 0", "r7 = java util list iterator r4", "return r7", "if $ z0 == 0 goto label1", "label r8 = org apache common collection fast array list r0", "$ r1 = r8 list", "$ r2 = $ r1 list iterator", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r3 = @ parameter0", "r4 = @ parameter1", "r0 = @ parameter2", "org apache common collection functors functor utils validate r3", "org apache common collection functors functor utils validate r4", "$ i1 = lengthof r3", "$ i0 = lengthof r4", "if $ i1 == $ i0 goto label1", "r8 = new java lang illegal argument exception", "specialinvoke r8 < init > \\ `` the predicate and closure array must be the same size\\ ``", "throw r8", "if $ i1 == $ i0 goto label1", "label $ i2 = lengthof r3", "if $ i2 ! = 0 goto label4", "if r0 ! = null goto label2", "$ r5 = org apache common collection functors n o p closure instance", "goto label3", "label return $ r5", "if r0 ! = null goto label2", "label $ r5 = r0", "if $ i2 ! = 0 goto label4", "label r6 = org apache common collection functors functor utils copy r3", "r7 = org apache common collection functors functor utils copy r4", "r9 = new org apache common collection functors switch closure", "specialinvoke r9 < init > r6 r7 r0", "r10 = org apache common collection closure r9", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org apache common collection iterators object graph iterator", "specialinvoke r3 < init > r0 r1", "r4 = java util iterator r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common collection list set unique list r0", "$ i0 = r2 size", "r3 = org apache common collection list set unique list r0", "$ z0 = r3 add all $ i0 r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache common collection map composite map r0", "$ r3 = r8 composite", "i0 = lengthof $ r3", "i5 = 0", "label if i5 > = i0 goto label3", "r9 = org apache common collection map composite map r0", "$ r4 = r9 composite", "$ r5 = $ r4 [ i5 ]", "$ z0 = $ r5 equal r1", "if $ z0 == 0 goto label2", "$ i1 = i0 - 1", "r2 = newarray java util map [ $ i1 ]", "r10 = org apache common collection map composite map r0", "$ r6 = r10 composite", "java lang system arraycopy $ r6 0 r2 0 i5", "r11 = org apache common collection map composite map r0", "$ r7 = r11 composite", "$ i4 = i5 + 1", "$ i2 = i0 - i5", "$ i3 = $ i2 - 1", "java lang system arraycopy $ r7 $ i4 r2 i5 $ i3", "r12 = org apache common collection map composite map r0", "r12 composite = r2", "return r1", "if $ z0 == 0 goto label2", "label i5 = i5 + 1", "goto label1", "label if i5 > = i0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [], [30], []]}
{"nodes": ["r0 = @ this", "r7 = new org apache common collection set composite set", "specialinvoke r7 < init >", "r8 = org apache common collection map composite map r0", "$ r3 = r8 composite", "$ i0 = lengthof $ r3", "i1 = $ i0 - 1", "label if i1 < 0 goto label2", "r9 = org apache common collection map composite map r0", "$ r4 = r9 composite", "$ r5 = $ r4 [ i1 ]", "$ r6 = $ r5 entry set", "r7 add composited $ r6", "i1 = i1 + -1", "goto label1", "label if i1 < 0 goto label2", "label r10 = java util set r7", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = r1 key set", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "r3 = r2 next", "r6 = org apache common collection map multi key map r0", "r6 check key r3", "goto label1", "if $ z0 == 0 goto label2", "label r7 = org apache common collection map multi key map r0", "$ r5 = r7 map", "$ r5 put all r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r5 = new org apache common collection map multi value map", "r4 = new org apache common collection map multi value map $ reflection factory", "specialinvoke r4 < init > r1", "r6 = org apache common collection factory r4", "specialinvoke r5 < init > r0 r6", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org apache common collection multi map", "if $ z0 == 0 goto label3", "$ r8 = r1 entry set", "r12 = $ r8 iterator", "label $ z2 = r12 have next", "if $ z2 == 0 goto label2", "$ r9 = r12 next", "r13 = java util map $ entry $ r9", "$ r10 = r13 get value", "r2 = java util collection $ r10", "$ r11 = r13 get key", "r16 = org apache common collection map multi value map r0", "r16 put all $ r11 r2", "goto label1", "if $ z2 == 0 goto label2", "label goto label5", "label return", "if $ z0 == 0 goto label3", "label $ r3 = r1 entry set", "r14 = $ r3 iterator", "label $ z1 = r14 have next", "if $ z1 == 0 goto label5", "$ r4 = r14 next", "r15 = java util map $ entry $ r4", "$ r5 = r15 get key", "$ r6 = r15 get value", "r17 = org apache common collection map multi value map r0", "r17 put $ r5 $ r6", "goto label4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r4 = new org apache common collection map transform sorted map", "specialinvoke r4 < init > r0 r1 r2", "r5 = java util sort map r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org apache common collection unmodifiable", "if $ z0 == 0 goto label1", "return r0", "if $ z0 == 0 goto label1", "label r2 = new org apache common collection map unmodifiable ordered map", "specialinvoke r2 < init > r0", "r3 = org apache common collection order map r2", "return r3"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r0 == null goto label1", "r3 = r0 get r1", "if r3 == null goto label1", "return r3", "if r3 == null goto label1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = org apache common collection map utils get float r0 r1", "if r3 ! = null goto label1", "r3 = r2", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r4 = new java util hash map", "$ i0 = r0 size", "specialinvoke $ r4 < init > $ i0", "$ r5 = r0 entry set", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r6 = r2 next", "r3 = java util map $ entry $ r6", "$ r7 = r3 get value", "$ r8 = r3 get key", "$ r4 put $ r7 $ r8", "goto label1", "if $ z0 == 0 goto label2", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java util collection synchronize map r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common collection map unmodifiable map decorate r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common collection map unmodifiable sort map decorate r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org apache common collection map type sorted map decorate r0 r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 instanceof java util set", "if $ z0 ! = 0 goto label1", "r8 = new java lang illegal argument exception", "specialinvoke r8 < init > \\ `` argument must implement java util set\\ ``", "throw r8", "if $ z0 ! = 0 goto label1", "label $ z1 = r2 instanceof java util set", "if $ z1 ! = 0 goto label2", "r9 = new java lang illegal argument exception", "specialinvoke r9 < init > \\ `` argument must implement java util set\\ ``", "throw r9", "if $ z1 ! = 0 goto label2", "label $ r3 = newarray java util set [ 2 ]", "$ r4 = java util set r1", "$ r3 [ 0 ] = $ r4", "$ r5 = java util set r2", "$ r3 [ 1 ] = $ r5", "r10 = org apache common collection set composite set r0", "r10 add composited $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common collection set list order set r0", "$ r1 = r3 set order", "$ r2 = $ r1 to string", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org apache common collection set transformed sorted set", "specialinvoke r3 < init > r0 r1", "r4 = java util sort set r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common collection set typed set decorate r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org apache common collection functors clone transformer instance", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common compress archivers cpio cpio archive input stream r0", "$ z0 = r2 close", "if $ z0 ! = 0 goto label1", "r3 = org apache common compress archivers cpio cpio archive input stream r0", "$ r1 = r3 in", "$ r1 close", "r4 = org apache common compress archivers cpio cpio archive input stream r0", "r4 close = 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ b2 = l0 cmp 0l", "if $ b2 > = 0 goto label1", "r5 = new java lang illegal argument exception", "specialinvoke r5 < init > \\ `` negative skip length\\ ``", "throw r5", "if $ b2 > = 0 goto label1", "label r6 = org apache common compress archivers cpio cpio archive input stream r0", "specialinvoke r6 ensure open", "$ l3 = java lang math min l0 2147483647l", "i1 = int $ l3", "i6 = 0", "label if i6 > = i1 goto label5", "i7 = i1 - i6", "r7 = org apache common compress archivers cpio cpio archive input stream r0", "$ r1 = r7 tmpbuf", "$ i5 = lengthof $ r1", "if i7 < = $ i5 goto label3", "r8 = org apache common compress archivers cpio cpio archive input stream r0", "$ r3 = r8 tmpbuf", "i7 = lengthof $ r3", "label r9 = org apache common compress archivers cpio cpio archive input stream r0", "$ r2 = r9 tmpbuf", "r10 = org apache common compress archivers cpio cpio archive input stream r0", "i8 = r10 read $ r2 0 i7", "if i8 ! = -1 goto label4", "r11 = org apache common compress archivers cpio cpio archive input stream r0", "r11 entry e o f = 1", "goto label5", "label $ l4 = long i6", "return $ l4", "if i8 ! = -1 goto label4", "label i6 = i6 + i8", "goto label2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [], [33], [34], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common configuration abstract file configuration r0", "$ r1 = r4 source u r l", "if $ r1 == null goto label1", "r5 = org apache common configuration abstract file configuration r0", "$ r3 = r5 source u r l", "r6 = org apache common configuration abstract file configuration r0", "r6 load $ r3", "goto label2", "label return", "if $ r1 == null goto label1", "label r7 = org apache common configuration abstract file configuration r0", "$ r2 = r7 get file name", "r8 = org apache common configuration abstract file configuration r0", "r8 load $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r6 = org apache common configuration abstract file configuration r0", "$ z0 = r6 auto save", "if $ z0 == 0 goto label4", "r7 = org apache common configuration abstract file configuration r0", "$ r2 = r7 file name", "if $ r2 == null goto label4", "label r8 = org apache common configuration abstract file configuration r0", "r8 save", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common configuration abstract file configuration r0", "$ r1 = r2 get u r l", "r3 = org apache common configuration abstract file configuration r0", "r3 fire event 21 null $ r1 1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = org apache common configuration beanutils bean helper default bean factory", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common configuration beanutils x m l bean declaration r0", "$ r1 = r3 get configuration", "$ r2 = $ r1 get string \\ `` [ @ config-class ] \\ ``", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common configuration combine configuration r0", "$ r1 = r2 node combiner", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common configuration composite configuration r0", "$ r1 = r2 in memory configuration", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org apache common configuration map configuration", "specialinvoke r2 < init > r0", "r3 = org apache common configuration configuration r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common configuration configuration key r0", "$ r1 = r2 key buffer", "$ i0 = $ r1 length", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common configuration configuration x m l reader r0", "r2 root name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r12 = org apache common configuration data configuration r0", "r3 = r12 get r1 r2 null", "if r3 == null goto label1", "return r3", "if r3 == null goto label1", "label r13 = org apache common configuration data configuration r0", "$ z0 = r13 be throw exception on miss", "if $ z0 == 0 goto label2", "r11 = new java util no such element exception", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r6 = r10 append 39", "$ r7 = $ r6 append r2", "$ r8 = $ r7 append \\ `` \\ ' doesn\\'t map to an exist object\\ ``", "$ r9 = $ r8 to string", "specialinvoke r11 < init > $ r9", "throw r11", "if $ z0 == 0 goto label2", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new java util array list", "specialinvoke r4 < init >", "r5 = org apache common configuration data configuration r0", "$ r3 = r5 get byte list r1 r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache common configuration data configuration r0", "$ r3 = r4 get list class \\ `` ljava lang integer \\", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common configuration data configuration r0", "$ r2 = r4 get class \\ `` ljava util calendar \\", "$ r3 = java util calendar $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common configuration event event source r0", "$ r2 = r3 listener", "$ z0 = $ r2 remove r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "z0 = @ parameter3", "r8 = org apache common configuration event event source r0", "$ z1 = specialinvoke r8 check detail event -1", "if $ z1 == 0 goto label2", "r9 = org apache common configuration event event source r0", "$ r5 = r9 listener", "r3 = $ r5 iterator", "$ z2 = r3 have next", "if $ z2 == 0 goto label2", "r10 = org apache common configuration event event source r0", "r4 = r10 create event i0 r1 r2 z0", "label $ z3 = r3 have next", "if $ z3 == 0 goto label2", "$ r6 = r3 next", "$ r7 = org apache common configuration event configuration listener $ r6", "$ r7 configuration change r4", "goto label1", "if $ z3 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common configuration interpol configuration interpolator r0", "$ r2 = r4 local lookup", "$ r3 = $ r2 remove r1", "if $ r3 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r3 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org apache common configuration property converter to number r0 class \\ `` ljava lang short \\ ``", "$ z0 = r1 instanceof java lang short", "if $ z0 == 0 goto label1", "$ r3 = java lang short r1", "return $ r3", "if $ z0 == 0 goto label1", "label $ r2 = new java lang short", "$ s0 = r1 short value", "specialinvoke $ r2 < init > $ s0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common configuration subnode configuration r0", "$ r1 = r2 subnode key", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r16 = org apache common configuration subset configuration r0", "$ r2 = r16 prefix", "$ z0 = r1 start with $ r2", "if $ z0 ! = 0 goto label1", "r15 = new java lang illegal argument exception", "r14 = new java lang string builder", "specialinvoke r14 < init >", "$ r9 = r14 append \\ `` the parent key \\'\\ ``", "$ r10 = $ r9 append r1", "$ r11 = $ r10 append \\ `` \\ ' be not in the subset \\ ``", "$ r12 = $ r11 to string", "specialinvoke r15 < init > $ r12", "throw r15", "if $ z0 ! = 0 goto label1", "label $ i1 = r1 length", "r17 = org apache common configuration subset configuration r0", "$ r3 = r17 prefix", "$ i2 = $ r3 length", "if $ i1 ! = $ i2 goto label2", "r13 = \\ `` \\ ``", "goto label5", "label return r13", "if $ i1 ! = $ i2 goto label2", "label r18 = org apache common configuration subset configuration r0", "$ r4 = r18 prefix", "$ i3 = $ r4 length", "r19 = org apache common configuration subset configuration r0", "$ r5 = r19 delimiter", "if $ r5 == null goto label3", "r20 = org apache common configuration subset configuration r0", "$ r6 = r20 delimiter", "$ i4 = $ r6 length", "goto label4", "label i0 = $ i3 + $ i4", "r13 = r1 substring i0", "if $ r5 == null goto label3", "label $ i4 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common configuration tree default configuration node r0", "r2 check state", "r3 = org apache common configuration tree default configuration node r0", "r3 name = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common configuration tree default expression engine r0", "r2 attribute start = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common configuration tree node add data r0", "$ r1 = r2 new node name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = new org apache common configuration tree view node", "specialinvoke $ r1 < init >", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label2", "$ r4 = r1 get attribute", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r5 = r2 next", "r3 = org apache common configuration tree configuration node $ r5", "r6 = org apache common configuration tree view node r0", "r6 add attribute r3", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common configuration tree xpath configuration node iterator base r0", "r1 position = i0", "if i0 < 1 goto label1", "r2 = org apache common configuration tree xpath configuration node iterator base r0", "$ i1 = r2 get max position", "if i0 > $ i1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if i0 > $ i1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r3 = @ parameter0", "r5 = org apache common configuration web base web configuration r0", "$ z0 = r5 be delimiter parse disabled", "if $ z0 ! = 0 goto label3", "$ z1 = r3 instanceof java lang string", "if $ z1 == 0 goto label3", "$ r2 = java lang string r3", "r6 = org apache common configuration web base web configuration r0", "$ c0 = r6 get list delimiter", "r1 = org apache common configuration property converter split $ r2 $ c0", "$ i1 = r1 size", "if $ i1 < = 1 goto label1", "$ r4 = r1", "goto label2", "label r3 = $ r4", "label return r3", "if $ i1 < = 1 goto label1", "label $ r4 = r1 get 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org xml sax input source", "specialinvoke r3 < init > r1", "r4 = org apache common configuration x m l configuration r0", "specialinvoke r4 load r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org apache common configuration hierarchical configuration r0", "$ r5 = r7 get expression engine", "r8 = org apache common configuration hierarchical configuration r0", "$ r6 = r8 get root node", "r3 = $ r5 prepare add $ r6 r1", "r9 = org apache common configuration hierarchical configuration r0", "r4 = specialinvoke r9 process node add data r3", "r4 set value r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common configuration hierarchical configuration r0", "$ r2 = r3 configuration at r1 0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = null", "z3 = 0", "z4 = 1", "r9 = new java util string tokenizer", "specialinvoke r9 < init > r2 \\ `` @ \\", "label $ z0 = r9 have more token", "if $ z0 == 0 goto label10", "r4 = r9 next token", "$ r6 = \\ `` \\ ``", "$ z1 = $ r6 equal r4", "if $ z1 == 0 goto label04", "if z3 == 0 goto label02", "r10 = org apache common configuration tree xpath x path expression engine r0", "specialinvoke r10 invalid path r2 \\ `` contain an attribute delimiter at an unallowed position \\ ``", "label if r8 ! = null goto label03", "r11 = org apache common configuration tree xpath x path expression engine r0", "specialinvoke r11 invalid path r2 \\ `` contain a \\ ' \\ ' at an unallowed position \\ ``", "label r1 add path node r8", "if $ z1 == 0 goto label04", "label $ r7 = \\ `` @ \\ ``", "$ z2 = $ r7 equal r4", "if $ z2 == 0 goto label08", "if z3 == 0 goto label05", "r12 = org apache common configuration tree xpath x path expression engine r0", "specialinvoke r12 invalid path r2 \\ `` contains multiple attribute delimiters \\ ``", "label if r8 ! = null goto label06", "if z4 ! = 0 goto label06", "r13 = org apache common configuration tree xpath x path expression engine r0", "specialinvoke r13 invalid path r2 \\ `` contain an attribute delimiter at an unallowed position \\ ``", "label if r8 == null goto label07", "r1 add path node r8", "label z3 = 1", "if $ z2 == 0 goto label08", "label r8 = r4", "label z4 = 0", "goto label01", "if $ z0 == 0 goto label10", "label if r8 ! = null goto label11", "r14 = org apache common configuration tree xpath x path expression engine r0", "specialinvoke r14 invalid path r2 \\ `` contain no component \\ ``", "label r1 set new node name r8", "r1 set attribute z3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], []]}
{"nodes": ["$ r1 = new java util property", "specialinvoke $ r1 < init >", "$ r2 = org apache common crypto random crypto random factory get crypto random $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r1 = new java util property", "specialinvoke $ r1 < init >", "$ r2 = org apache common crypto random crypto random factory get crypto random $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common crypto stream crypto input stream r0", "$ i0 = r1 buffer size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common crypto stream ctr crypto output stream r0", "$ l0 = r1 stream offset", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "r1 = @ parameter2", "i1 = @ parameter3", "i2 = @ parameter4", "i8 = 0", "label if i8 > = i2 goto label3", "$ l4 = long i8", "$ l7 = l0 + $ l4", "$ i6 = i1 + i8", "$ i5 = i2 - i8", "i3 = r0 read $ l7 r1 $ i6 $ i5", "if i3 > = 0 goto label2", "$ r2 = new java io i o exception", "specialinvoke $ r2 < init > \\ `` end of stream reach before read fully \\ ``", "throw $ r2", "if i3 > = 0 goto label2", "label i8 = i8 + i3", "goto label1", "label if i8 > = i2 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common csv c s v format r0", "$ r1 = r5 header", "if $ r1 == null goto label1", "r6 = org apache common csv c s v format r0", "$ r2 = r6 header", "$ r3 = $ r2 clone", "$ r4 = java lang string [ ] $ r3", "goto label2", "label return $ r4", "if $ r1 == null goto label1", "label $ r4 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common csv c s v format r0", "$ r1 = r2 quote mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common csv c s v format r0", "$ r1 = r2 comment marker", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common csv c s v record r0", "$ r1 = r2 comment", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common dbcp2 abandon trace r0", "$ l0 = r1 last used millis", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ l0 = java lang system current time millis", "r1 = org apache common dbcp2 abandon trace r0", "r1 last used millis = $ l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common dbcp2 basic data source r0", "$ r1 = r2 driver class loader", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common dbcp2 basic data source r0", "$ r1 = r3 abandon config", "if $ r1 ! = null goto label1", "$ z0 = 0", "goto label2", "label return $ z0", "if $ r1 ! = null goto label1", "label r4 = org apache common dbcp2 basic data source r0", "$ r2 = r4 abandon config", "$ z0 = $ r2 get remove abandon on borrow"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common dbcp2 basic data source r0", "$ z0 = r1 rollback on return", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org apache common dbcp2 basic data source r0", "$ r3 = r6 log writer", "if $ r3 == null goto label1", "r7 = org apache common dbcp2 basic data source r0", "$ r4 = r7 log writer", "$ r4 println r1", "r8 = org apache common dbcp2 basic data source r0", "$ r5 = r8 log writer", "r2 print stack trace $ r5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache common dbcp2 basic data source r0", "$ r3 = r8 abandon config", "if $ r3 ! = null goto label1", "r7 = new org apache common pool2 impl abandon config", "specialinvoke r7 < init >", "r9 = org apache common dbcp2 basic data source r0", "r9 abandon config = r7", "label r10 = org apache common dbcp2 basic data source r0", "$ r4 = r10 abandon config", "$ r4 set log writer r1", "r11 = org apache common dbcp2 basic data source r0", "r2 = r11 connection pool", "if r2 == null goto label2", "r12 = org apache common dbcp2 basic data source r0", "$ r5 = r12 abandon config", "r2 set abandon config $ r5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common dbcp2 basic data source r0", "r2 jmx name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common dbcp2 basic data source r0", "r1 pool prepare statement = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r3 = org apache common dbcp2 basic data source r0", "r3 soft min evictable idle time millis = l0", "r4 = org apache common dbcp2 basic data source r0", "$ r1 = r4 connection pool", "if $ r1 == null goto label1", "r5 = org apache common dbcp2 basic data source r0", "$ r2 = r5 connection pool", "$ r2 set soft min evictable idle time millis l0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common dbcp2 datasources per user pool data source r0", "$ i0 = r1 get num active null", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common dbcp2 datasources user pas key r0", "$ r1 = r2 user name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common dbcp2 delegate connection r0", "r2 = r3 connection", "label if r2 == null goto label2", "$ z0 = r2 instanceof org apache common dbcp2 delegate connection", "if $ z0 == 0 goto label2", "$ r1 = org apache common dbcp2 delegate connection r2", "r2 = $ r1 get delegate internal", "if r0 ! = r2 goto label1", "return null", "if $ z0 == 0 goto label2", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common dbcp2 delegate connection r0", "r4 auto commit cache = null", "r5 = org apache common dbcp2 delegate connection r0", "r5 read only cached = null", "r6 = org apache common dbcp2 delegate connection r0", "$ r1 = r6 connection", "$ z0 = $ r1 instanceof org apache common dbcp2 delegate connection", "if $ z0 == 0 goto label1", "r7 = org apache common dbcp2 delegate connection r0", "$ r2 = r7 connection", "$ r3 = org apache common dbcp2 delegate connection $ r2", "$ r3 clear cache state", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common dbcp2 manage basic manage data source r0", "$ r1 = r2 transaction manager", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common dbcp2 manage basic manage data source r0", "r2 transaction manager = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common dbcp2 manage data source x a connection factory r0", "$ r1 = r2 user name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common dbcp2 pool connection r0", "r1 clear statement pool on return = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common dbcp2 pool data source r0", "r2 log writer = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = org apache common dbcp2 pool driver pool", "$ r4 = $ r3 get r1", "r2 = org apache common pool2 object pool $ r4", "if null ! = r2 goto label1", "$ r5 = new java sql s q l exception", "$ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "$ r7 = $ r6 append \\ `` pool not register \\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 to string", "specialinvoke $ r5 < init > $ r9", "throw $ r5", "if null ! = r2 goto label1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common dbcp2 p stmt key r0", "$ r1 = r2 auto generate key", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common dbcp2 p stmt key r0", "$ r1 = r2 result set holdability", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache common discovery jdk j d k11 hook system class loader", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common discovery resource class resource class discover impl r0", "$ r2 = r3 find resource class r1", "r4 = org apache common discovery resource name iterator $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["org apache common discovery tool environment cache release", "return"], "adj": [[1], []]}
{"nodes": ["org apache common discovery tool environment cache release", "return"], "adj": [[1], []]}
{"nodes": ["$ r3 = new java util hashtable", "specialinvoke $ r3 < init >", "r8 = org apache common discovery tool manage property get thread context class loader", "goto label1", "label r1 = org apache common discovery tool manage property property cache", "entermonitor r1", "label $ r4 = org apache common discovery tool manage property property cache", "$ r5 = $ r4 get r8", "r9 = java util hash map $ r5", "exitmonitor r1", "goto label4", "label if r9 == null goto label5", "$ r3 put all r9", "label if r8 ! = null goto label6", "goto label7", "label $ r6 = $ r3 key", "return $ r6", "label if r8 ! = null goto label6", "label r8 = org apache common discovery tool manage property get parent r8"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common httpclient cookie cookie2 r0", "r1 have port attribute = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common io output count output stream r0", "$ l2 = r2 count", "$ i0 = lengthof r1", "$ l1 = long $ i0", "$ l3 = $ l2 + $ l1", "r3 = org apache common io output count output stream r0", "r3 count = $ l3", "specialinvoke r0 write r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r11 = org apache common io output defer file output stream r0", "$ r2 = r11 prefix", "if $ r2 == null goto label1", "r12 = org apache common io output defer file output stream r0", "$ r8 = r12 prefix", "r13 = org apache common io output defer file output stream r0", "$ r7 = r13 suffix", "r14 = org apache common io output defer file output stream r0", "$ r6 = r14 directory", "$ r9 = java io file create temp file $ r8 $ r7 $ r6", "r15 = org apache common io output defer file output stream r0", "r15 output file = $ r9", "label r10 = new java io file output stream", "r16 = org apache common io output defer file output stream r0", "$ r4 = r16 output file", "specialinvoke r10 < init > $ r4", "r17 = org apache common io output defer file output stream r0", "$ r5 = r17 memory output stream", "$ r5 write to r10", "r18 = org apache common io output defer file output stream r0", "r18 current output stream = r10", "r19 = org apache common io output defer file output stream r0", "r19 memory output stream = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "label r6 = org apache common io output lockable file writer r0", "$ r2 = r6 out", "$ r2 close", "label r7 = org apache common io output lockable file writer r0", "$ r3 = r7 lock file", "$ r3 delete", "goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache common lang builder hash code builder r0", "$ i1 = r2 i total", "r3 = org apache common lang builder hash code builder r0", "$ i0 = r3 i constant", "$ i2 = $ i1 * $ i0", "if z0 == 0 goto label1", "$ b4 = 0", "goto label2", "label $ i3 = $ i2 + $ b4", "r4 = org apache common lang builder hash code builder r0", "r4 i total = $ i3", "r5 = org apache common lang builder hash code builder r0", "return r5", "if z0 == 0 goto label1", "label $ b4 = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache common lang builder hash code builder r0", "$ i1 = r2 i total", "r3 = org apache common lang builder hash code builder r0", "$ i0 = r3 i constant", "$ i2 = $ i1 * $ i0", "if z0 == 0 goto label1", "$ b4 = 0", "goto label2", "label $ i3 = $ i2 + $ b4", "r4 = org apache common lang builder hash code builder r0", "r4 i total = $ i3", "r5 = org apache common lang builder hash code builder r0", "return r5", "if z0 == 0 goto label1", "label $ b4 = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache common lang builder hash code builder r0", "$ i1 = r2 i total", "r3 = org apache common lang builder hash code builder r0", "$ i0 = r3 i constant", "$ i2 = $ i1 * $ i0", "if z0 == 0 goto label1", "$ b4 = 0", "goto label2", "label $ i3 = $ i2 + $ b4", "r4 = org apache common lang builder hash code builder r0", "r4 i total = $ i3", "r5 = org apache common lang builder hash code builder r0", "return r5", "if z0 == 0 goto label1", "label $ b4 = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org apache common lang time date format utils format r0 r1 null r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = org apache common lang time fast date format get instance r1 r2 r3", "$ r5 = r4 format r0", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "r1 = org apache common lang mutable mutable byte r0", "$ b1 = r1 value", "$ i2 = $ b1 - b0", "$ b3 = byte $ i2", "r2 = org apache common lang mutable mutable byte r0", "r2 value = $ b3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java util log level warn", "$ r4 = java lang string value of r1", "r5 = org apache common log impl jdk14 logger r0", "specialinvoke r5 log $ r3 $ r4 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common log impl log4 j category log r0", "$ r2 = r3 category", "$ r1 = org apache log4j level warn", "$ z0 = $ r2 be enable for $ r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 == null goto label1", "r5 = org apache common log impl log kit logger r0", "$ r3 = r5 get logger", "$ r4 = java lang string value of r1", "$ r3 warn $ r4 r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org apache common math analysis composable function $ 29", "r4 = org apache common math analysis composable function r0", "specialinvoke r3 < init > r4 r1", "r5 = org apache common math analysis composable function r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "i0 = @ parameter1", "r1 = org apache common math analysis integration univariate real integrator impl r0", "r1 result = d0", "r2 = org apache common math analysis integration univariate real integrator impl r0", "r2 iteration count = i0", "r3 = org apache common math analysis integration univariate real integrator impl r0", "r3 result compute = 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common math analysis integration univariate real integrator impl r0", "$ i0 = r5 minimal iteration count", "if $ i0 < = 0 goto label1", "r6 = org apache common math analysis integration univariate real integrator impl r0", "$ i4 = r6 maximal iteration count", "r7 = org apache common math analysis integration univariate real integrator impl r0", "$ i3 = r7 minimal iteration count", "if $ i4 > $ i3 goto label2", "label $ r1 = newarray java lang object [ 2 ]", "r8 = org apache common math analysis integration univariate real integrator impl r0", "$ i1 = r8 minimal iteration count", "$ r2 = java lang integer value of $ i1", "$ r1 [ 0 ] = $ r2", "r9 = org apache common math analysis integration univariate real integrator impl r0", "$ i2 = r9 maximal iteration count", "$ r3 = java lang integer value of $ i2", "$ r1 [ 1 ] = $ r3", "$ r4 = org apache common math math runtime exception create illegal argument exception \\ `` invalid iteration limit min= { 0 } max= { 1 } \\", "throw $ r4", "if $ i4 > $ i3 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org apache common math analysis interpolation microsphere interpolator r0", "$ i1 = r4 microsphere element", "if $ i1 > = 0 goto label1", "$ r1 = newarray java lang object [ 1 ]", "r5 = org apache common math analysis interpolation microsphere interpolator r0", "$ i2 = r5 microsphere element", "$ r2 = java lang integer value of $ i2", "$ r1 [ 0 ] = $ r2", "$ r3 = org apache common math math runtime exception create illegal argument exception \\ `` number of microsphere element must be positive but get { 0 } \\", "throw $ r3", "if $ i1 > = 0 goto label1", "label r6 = org apache common math analysis interpolation microsphere interpolator r0", "r6 microsphere element = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common math analysis solver univariate real solver impl r0", "$ z0 = r3 result compute", "if $ z0 ! = 0 goto label1", "$ r1 = newarray java lang object [ 0 ]", "$ r2 = org apache common math math runtime exception create illegal state exception \\ `` no result available\\", "throw $ r2", "if $ z0 ! = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math complex complex r0", "$ z0 = r1 be na n", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math complex complex r0", "$ z0 = r1 be infinite", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = org apache common math distribution cauchy distribution impl r0", "$ d2 = r1 median", "d1 = d0 - $ d2", "r2 = org apache common math distribution cauchy distribution impl r0", "$ d8 = r2 scale", "$ d6 = d1 * d1", "r3 = org apache common math distribution cauchy distribution impl r0", "$ d4 = r3 scale", "r4 = org apache common math distribution cauchy distribution impl r0", "$ d3 = r4 scale", "$ d5 = $ d4 * $ d3", "$ d7 = $ d6 + $ d5", "$ d9 = $ d8 $ d7", "$ d10 = 0 3183098861837907 * $ d9", "return $ d10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = org apache common math distribution f distribution impl r0", "specialinvoke r1 set denominator degree of freedom internal d0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common math distribution pascal distribution impl r0", "specialinvoke r1 set number of success internal i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "return 2147483647"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math distribution weibull distribution impl r0", "$ d0 = r1 shape", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math estimation estimate parameter r0", "$ d0 = r1 estimate", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache common math fraction big fraction r1", "r4 = org apache common math fraction big fraction r0", "$ r3 = r4 add $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache common math fraction big fraction r1", "r4 = org apache common math fraction big fraction r0", "$ r3 = r4 multiply $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r3 = org apache common math fraction big fraction r0", "$ r1 = r3 numerator", "$ d1 = $ r1 double value", "$ d2 = java lang math pow $ d1 d0", "r4 = org apache common math fraction big fraction r0", "$ r2 = r4 denominator", "$ d3 = $ r2 double value", "$ d4 = java lang math pow $ d3 d0", "$ d5 = $ d2 $ d4", "return $ d5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache common math linear array field vector r0", "$ r2 = r8 dot product r1", "$ r3 = r1 dot product r1", "$ r4 = $ r2 divide $ r3", "$ r5 = org apache common math field element $ r4", "$ r6 = r1 map multiply $ r5", "$ r7 = org apache common math linear array field vector $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org apache common math math runtime exception $ 2", "specialinvoke r3 < init > r0 r1", "r4 = java lang array index out of bound exception r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math ode continuous output model r0", "r2 initial time = #na n", "r3 = org apache common math ode continuous output model r0", "r3 final time = #na n", "r4 = org apache common math ode continuous output model r0", "r4 forward = 1", "r5 = org apache common math ode continuous output model r0", "r5 index = 0", "r6 = org apache common math ode continuous output model r0", "$ r1 = r6 step", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "d1 = @ parameter2", "i0 = @ parameter3", "r5 = org apache common math ode event combine event manager r0", "$ r3 = r5 state", "r4 = new org apache common math ode event event state", "specialinvoke r4 < init > r1 d0 d1 i0", "$ r3 add r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math ode event combine event manager r0", "$ r1 = r2 state", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math ode event combine event manager r0", "$ r1 = r2 state", "$ z0 = $ r1 be empty", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math ode jacobians first order integrator with jacobians r0", "$ r1 = r2 integrator", "$ r1 clear event handler", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common math random random data impl r0", "$ r1 = r5 rand", "if $ r1 ! = null goto label1", "r4 = new org apache common math random j d k random generator", "specialinvoke r4 < init >", "r6 = org apache common math random random data impl r0", "r7 = org apache common math random random generator r4", "r6 rand = r7", "label r8 = org apache common math random random data impl r0", "$ r2 = r8 rand", "$ l0 = java lang system current time millis", "$ r2 set seed $ l0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "$ d2 = org apache common math special beta log beta d0 d1 1 0e-14 2147483647", "return $ d2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common math stat descriptive multivariate summary statistic r0", "$ r2 = r3 geo mean impl", "r4 = org apache common math stat descriptive multivariate summary statistic r0", "specialinvoke r4 set impl r1 $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "org apache common math stat inference test utils one way anova = r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org apache common math stat inference t test impl r0", "specialinvoke r3 check sample data r1", "r4 = org apache common math stat inference t test impl r0", "specialinvoke r4 check sample data r2", "$ d0 = org apache common math stat stat utils mean r1", "$ d1 = org apache common math stat stat utils mean r2", "$ d2 = org apache common math stat stat utils variance r1", "$ d3 = org apache common math stat stat utils variance r2", "$ i0 = lengthof r1", "$ d5 = double $ i0", "$ i1 = lengthof r2", "$ d4 = double $ i1", "r5 = org apache common math stat inference t test impl r0", "$ d6 = r5 homoscedastic t $ d0 $ d1 $ d2 $ d3 $ d5 $ d4", "return $ d6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = @ parameter1", "r2 = org apache common math stat inference t test impl r0", "specialinvoke r2 check sample data r1", "$ d1 = org apache common math stat stat utils mean r1", "$ d2 = org apache common math stat stat utils variance r1", "$ i0 = lengthof r1", "$ d3 = double $ i0", "r3 = org apache common math stat inference t test impl r0", "$ d4 = r3 t $ d1 d0 $ d2 $ d3", "return $ d4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = @ parameter1", "d1 = @ parameter2", "r2 = org apache common math stat inference t test impl r0", "specialinvoke r2 check significance level d1", "r3 = org apache common math stat inference t test impl r0", "$ d2 = r3 t test d0 r1", "$ b0 = $ d2 cmpg d1", "if $ b0 > = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b0 > = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "d0 = @ parameter2", "d13 = 0 0", "d14 = 0 0", "i0 = lengthof r0", "if i0 < 2 goto label1", "$ i2 = lengthof r1", "if i0 == $ i2 goto label2", "label $ r2 = newarray java lang object [ 2 ]", "$ r3 = java lang integer value of i0", "$ r2 [ 0 ] = $ r3", "$ i1 = lengthof r1", "$ r4 = java lang integer value of $ i1", "$ r2 [ 1 ] = $ r4", "$ r5 = org apache common math math runtime exception create illegal argument exception \\ `` input array must have the same length and at least two element { 0 } and { 1 } \\", "throw $ r5", "if i0 == $ i2 goto label2", "label i4 = 0", "label if i4 > = i0 goto label4", "$ d8 = r0 [ i4 ]", "$ d7 = r1 [ i4 ]", "d16 = $ d8 - $ d7", "$ d10 = d16 - d0", "$ d9 = d16 - d0", "$ d11 = $ d10 * $ d9", "d13 = d13 + $ d11", "$ d12 = d16 - d0", "d14 = d14 + $ d12", "i4 = i4 + 1", "goto label3", "label if i4 > = i0 goto label4", "label $ d2 = d14 * d14", "$ d1 = double i0", "$ d3 = $ d2 $ d1", "$ d5 = d13 - $ d3", "$ i3 = i0 - 1", "$ d4 = double $ i3", "$ d6 = $ d5 $ d4", "return $ d6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [39], []]}
{"nodes": ["d0 = @ parameter0", "i0 = @ parameter1", "$ d1 = org apache common math util math utils round d0 i0 4", "return $ d1"], "adj": [[1], [2], [3], []]}
{"nodes": ["d0 = @ parameter0", "$ d1 = java lang math exp d0", "$ d2 = neg d0", "$ d3 = java lang math exp $ d2", "$ d4 = $ d1 - $ d3", "$ d5 = $ d4 2 0", "return $ d5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r5 = org apache common math util resizable double array r0", "$ i0 = r5 num element", "if $ i0 > = 1 goto label1", "$ r3 = newarray java lang object [ 0 ]", "$ r4 = org apache common math math runtime exception create array index out of bound exception \\ `` can not substitute an element from an empty array\\", "throw $ r4", "if $ i0 > = 1 goto label1", "label r6 = org apache common math util resizable double array r0", "$ r1 = r6 internal array", "r7 = org apache common math util resizable double array r0", "$ i3 = r7 start index", "r8 = org apache common math util resizable double array r0", "$ i1 = r8 num element", "$ i2 = $ i1 - 1", "$ i4 = $ i3 + $ i2", "d1 = $ r1 [ $ i4 ]", "r9 = org apache common math util resizable double array r0", "$ r2 = r9 internal array", "r10 = org apache common math util resizable double array r0", "$ i7 = r10 start index", "r11 = org apache common math util resizable double array r0", "$ i5 = r11 num element", "$ i6 = $ i5 - 1", "$ i8 = $ i7 + $ i6", "$ r2 [ $ i8 ] = d0", "return d1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common math util resizable double array r0", "specialinvoke r1 discard extreme element i0 1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = r0 goto label01", "return 1", "if r1 ! = r0 goto label01", "label $ z0 = r1 instanceof org apache common math util resizable double array", "if $ z0 ! = 0 goto label02", "return 0", "if $ z0 ! = 0 goto label02", "label entermonitor r0", "label entermonitor r1", "label r4 = org apache common math util resizable double array r1", "$ i9 = r4 initial capacity", "r13 = org apache common math util resizable double array r0", "$ i8 = r13 initial capacity", "if $ i9 ! = $ i8 goto label05", "$ z3 = 1", "goto label06", "label if $ z3 == 0 goto label07", "$ f3 = r4 contraction criterion", "r14 = org apache common math util resizable double array r0", "$ f2 = r14 contraction criterion", "$ b7 = $ f3 cmpl $ f2", "if $ b7 ! = 0 goto label07", "$ z5 = 1", "goto label08", "label if $ z5 == 0 goto label09", "$ f1 = r4 expansion factor", "r15 = org apache common math util resizable double array r0", "$ f0 = r15 expansion factor", "$ b6 = $ f1 cmpl $ f0", "if $ b6 ! = 0 goto label09", "$ z7 = 1", "goto label10", "label if $ z7 == 0 goto label11", "$ i5 = r4 expansion mode", "r16 = org apache common math util resizable double array r0", "$ i4 = r16 expansion mode", "if $ i5 ! = $ i4 goto label11", "$ z9 = 1", "goto label12", "label if $ z9 == 0 goto label13", "$ i3 = r4 num element", "r17 = org apache common math util resizable double array r0", "$ i2 = r17 num element", "if $ i3 ! = $ i2 goto label13", "$ z11 = 1", "goto label14", "label if $ z11 == 0 goto label15", "$ i1 = r4 start index", "r18 = org apache common math util resizable double array r0", "$ i0 = r18 start index", "if $ i1 ! = $ i0 goto label15", "$ z13 = 1", "goto label16", "label if $ z13 ! = 0 goto label19", "exitmonitor r1", "label exitmonitor r0", "label return 0", "label if $ z13 ! = 0 goto label19", "label r19 = org apache common math util resizable double array r0", "$ r10 = r19 internal array", "$ r9 = r4 internal array", "$ z1 = java util array equal $ r10 $ r9", "if $ i1 ! = $ i0 goto label15", "label $ z13 = 0", "if $ i3 ! = $ i2 goto label13", "label $ z11 = 0", "if $ i5 ! = $ i4 goto label11", "label $ z9 = 0", "if $ b6 ! = 0 goto label09", "label $ z7 = 0", "if $ b7 ! = 0 goto label07", "label $ z5 = 0", "if $ i9 ! = $ i8 goto label05", "label $ z3 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], [46], [47], [], [49], [50], [51], [52], [53], [54], [], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common net daytime u d p client r0", "$ r2 = r3 get time r1 13", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java net datagram socket", "specialinvoke $ r1 < init >", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = new java net server socket", "specialinvoke $ r1 < init > i0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache common net finger client r0", "$ r1 = r2 get input stream z0 \\ `` \\ ``", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net ftp ftp r0", "specialinvoke r1 __get reply", "r2 = org apache common net ftp ftp r0", "$ i0 = r2 _reply code", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common net ftp ftp r0", "$ i0 = r2 send command 16 r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net ftp ftp r0", "$ i0 = r1 send command 32", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net ftp f t p client r0", "$ z0 = r1 __remote verification enable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common net ftp f t p client r0", "$ i1 = r1 type i0", "$ z0 = org apache common net ftp f t p reply be positive completion $ i1", "if $ z0 == 0 goto label1", "r2 = org apache common net ftp f t p client r0", "r2 __file type = i0", "r3 = org apache common net ftp f t p client r0", "r3 __file format = 4", "return 1", "if $ z0 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net ftp f t p client r0", "$ i0 = r1 get reply", "$ z0 = org apache common net ftp f t p reply be positive completion $ i0", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common net ftp f t p client r0", "$ i0 = r2 site r1", "$ z0 = org apache common net ftp f t p reply be positive completion $ i0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org apache common net ftp f t p client config split short month string r0", "$ r3 = new java text date format symbol", "$ r4 = java util locale u", "specialinvoke $ r3 < init > $ r4", "$ r3 set short month r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net ftp f t p file r0", "$ i0 = r1 _type", "if $ i0 ! = 1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 ! = 1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common net ftp f t p file r0", "r2 _name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common net ftp f t p file r0", "$ r1 = r2 _group", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r12 = new java util link list", "specialinvoke r12 < init >", "i1 = i0", "label if i1 < = 0 goto label2", "r13 = org apache common net ftp f t p list parse engine r0", "$ r8 = r13 _internal iterator", "$ z0 = $ r8 have previous", "if $ z0 == 0 goto label2", "r14 = org apache common net ftp f t p list parse engine r0", "$ r9 = r14 _internal iterator", "$ r10 = $ r9 previous", "r2 = java lang string $ r10", "r15 = org apache common net ftp f t p list parse engine r0", "$ r11 = r15 parser", "r3 = $ r11 parse f t p entry r2", "r12 add 0 r3", "i1 = i1 + -1", "goto label1", "if $ z0 == 0 goto label2", "label $ r5 = newarray org apache common net ftp f t p file [ 0 ]", "$ r6 = r12 to array $ r5", "$ r7 = org apache common net ftp f t p file [ ] $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "$ r1 = new org apache common net ftp f t p client config", "specialinvoke $ r1 < init > \\ `` windows\\", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new java lang string buffer", "specialinvoke r6 < init >", "$ r3 = r6 append \\ `` ! \\ ``", "$ r4 = $ r3 append r1", "$ r5 = $ r4 to string", "r7 = org apache common net nntp new group or news query r0", "r7 add newsgroup $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net nntp new group or news query r0", "$ z0 = r1 __is g m t", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net nntp nntp r0", "$ z0 = r1 _is allow to post", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net nntp nntp r0", "specialinvoke r1 __get reply", "r2 = org apache common net nntp nntp r0", "$ i0 = r2 _reply code", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common net nntp nntp r0", "$ r1 = r2 _reply string", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common net nntp n n t p client r0", "$ r1 = r2 retrieve article body null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = java lang integer to string i0", "r3 = org apache common net nntp n n t p client r0", "$ r2 = specialinvoke r3 __retrieve article info $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache common net nntp simple n n t p header r0", "$ i0 = r6 __newsgroup count", "$ i1 = $ i0 + 1", "r7 = org apache common net nntp simple n n t p header r0", "r7 __newsgroup count = $ i1", "if $ i0 < = 0 goto label1", "r8 = org apache common net nntp simple n n t p header r0", "$ r4 = r8 __newsgroups", "$ r4 append 44", "label r9 = org apache common net nntp simple n n t p header r0", "$ r2 = r9 __newsgroups", "$ r2 append r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common net nntp simple n n t p header r0", "$ r1 = r3 __newsgroups", "$ r2 = $ r1 to string", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common net ntp n t p u d p client r0", "r1 _version = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common net ntp ntp v3 impl r0", "$ r1 = specialinvoke r2 get timestamp 40", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net ntp time stamp r0", "$ l0 = r1 ntp time", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net ntp time stamp r0", "$ l0 = r1 ntp time", "$ l1 = $ l0 & 4294967295l", "return $ l1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ l0 = java lang system current time millis", "$ r0 = org apache common net ntp time stamp get ntp time $ l0", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common net ntp time stamp r0", "$ l0 = r2 ntp time", "$ r1 = org apache common net ntp time stamp to string $ l0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net pop3 p o p3 client r0", "$ i0 = r1 get state", "if $ i0 ! = 1 goto label3", "r2 = org apache common net pop3 p o p3 client r0", "$ i1 = r2 send command 7", "$ i2 = org apache common net pop3 p o p3 reply ok", "if $ i1 ! = $ i2 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 ! = $ i2 goto label1", "label $ z0 = 0", "if $ i0 ! = 1 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common net smtp smtp r0", "$ i0 = r2 send command 0 r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net smtp smtp r0", "$ i0 = r1 send command 7", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string buffer", "specialinvoke r7 < init >", "$ r3 = r7 append \\ `` < \\ ``", "$ r4 = $ r3 append r1", "$ r5 = $ r4 append \\ `` > \\ ``", "$ r6 = $ r5 to string", "r8 = org apache common net smtp s m t p client r0", "$ i0 = r8 mail $ r6", "$ z0 = org apache common net smtp s m t p reply be positive completion $ i0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string buffer", "specialinvoke r7 < init >", "$ r3 = r7 append \\ `` < \\ ``", "$ r4 = $ r3 append r1", "$ r5 = $ r4 append \\ `` > \\ ``", "$ r6 = $ r5 to string", "r8 = org apache common net smtp s m t p client r0", "$ i0 = r8 rcpt $ r6", "$ z0 = org apache common net smtp s m t p reply be positive completion $ i0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r2 = org apache common net socket client __default_socket_factory", "r3 = org apache common net socket client r0", "r3 _socket factory_ = $ r2", "goto label2", "label return", "if r1 ! = null goto label1", "label r4 = org apache common net socket client r0", "r4 _socket factory_ = r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common net tftp t f t p data packet r0", "$ r1 = r2 _data", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common net ftp f t p s client r0", "$ r1 = r4 _socket_", "$ z0 = $ r1 instanceof javax net ssl s s l socket", "if $ z0 == 0 goto label1", "r5 = org apache common net ftp f t p s client r0", "$ r2 = r5 _socket_", "$ r3 = javax net ssl s s l socket $ r2", "$ z1 = $ r3 get enable session creation", "return $ z1", "if $ z0 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common net socket client r0", "r1 receive buffer size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r2 = org apache common net socket client __default_server_socket_factory", "r3 = org apache common net socket client r0", "r3 _server socket factory_ = $ r2", "goto label2", "label return", "if r1 ! = null goto label1", "label r4 = org apache common net socket client r0", "r4 _server socket factory_ = r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common net ftp ftp r0", "$ r1 = r2 _command support_", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org apache common net ftp f t p client r0", "$ z0 = specialinvoke r8 init feature map", "if $ z0 ! = 0 goto label1", "return 0", "if $ z0 ! = 0 goto label1", "label r9 = org apache common net ftp f t p client r0", "$ r5 = r9 __features map", "$ r4 = java util locale english", "$ r6 = r1 to upper case $ r4", "$ r7 = $ r5 get $ r6", "r3 = java util set $ r7", "if r3 == null goto label2", "$ z1 = r3 contain r2", "return $ z1", "if r3 == null goto label2", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r2 = org apache common net ftp f t p client r0", "r2 __restart offset = 0l", "$ r1 = java lang long to string l0", "r3 = org apache common net ftp f t p client r0", "$ i1 = r3 rest $ r1", "$ z0 = org apache common net ftp f t p reply be positive intermediate $ i1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ b1 = l0 cmp 0l", "if $ b1 < 0 goto label1", "r1 = org apache common net ftp f t p client r0", "r1 __restart offset = l0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net ftp f t p client r0", "$ i0 = r1 __send data socket buffer size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = org apache common net imap i m a p command rename", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r5 = r9 append r1", "$ r6 = $ r5 append \\ `` \\ ``", "$ r7 = $ r6 append r2", "$ r8 = $ r7 to string", "r10 = org apache common net imap i m a p client r0", "$ z0 = r10 do command $ r4 $ r8", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 start with \\ `` * \\ ``", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["i0 = @ parameter0", "if i0 ! = 3 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if i0 ! = 3 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common pool impl stack key object pool r0", "$ i0 = r1 _tot idle", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common pool2 impl abandon config r0", "$ z0 = r1 log abandon", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common pool2 impl abandon config r0", "r1 log abandon = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ r1 = java time duration of millis l0", "r2 = org apache common pool2 impl base generic object pool r0", "r2 max wait = $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common pool2 impl base object pool config r0", "r2 jmx name base = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache common pool2 pool object state abandon", "r2 = org apache common pool2 impl default pool object r0", "r2 state = $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common pool2 impl generic object pool r0", "i0 = r1 get max idle", "r2 = org apache common pool2 impl generic object pool r0", "$ i1 = r2 min idle", "if $ i1 < = i0 goto label1", "return i0", "if $ i1 < = i0 goto label1", "label r3 = org apache common pool2 impl generic object pool r0", "$ i2 = r3 min idle", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r13 = org apache common pool2 impl generic object pool r0", "r13 abandon config = null", "goto label2", "label return", "if r1 ! = null goto label1", "label r12 = new org apache common pool2 impl abandon config", "specialinvoke r12 < init >", "r14 = org apache common pool2 impl generic object pool r0", "r14 abandon config = r12", "r15 = org apache common pool2 impl generic object pool r0", "$ r3 = r15 abandon config", "$ z0 = r1 get log abandon", "$ r3 set log abandon $ z0", "r16 = org apache common pool2 impl generic object pool r0", "$ r4 = r16 abandon config", "$ r5 = r1 get log writer", "$ r4 set log writer $ r5", "r17 = org apache common pool2 impl generic object pool r0", "$ r6 = r17 abandon config", "$ z1 = r1 get remove abandon on borrow", "$ r6 set remove abandon on borrow $ z1", "r18 = org apache common pool2 impl generic object pool r0", "$ r7 = r18 abandon config", "$ z2 = r1 get remove abandon on maintenance", "$ r7 set remove abandon on maintenance $ z2", "r19 = org apache common pool2 impl generic object pool r0", "$ r8 = r19 abandon config", "$ r9 = r1 get remove abandon timeout duration", "$ r8 set remove abandon timeout $ r9", "r20 = org apache common pool2 impl generic object pool r0", "$ r10 = r20 abandon config", "$ z3 = r1 get use usage track", "$ r10 set use usage track $ z3", "r21 = org apache common pool2 impl generic object pool r0", "$ r11 = r21 abandon config", "$ z4 = r1 get require full stack trace", "$ r11 set require full stack trace $ z4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], []]}
{"nodes": ["r0 = @ this", "r8 = org apache common pool2 impl link block deque r0", "$ r2 = r8 lock", "$ r2 lock", "label r9 = org apache common pool2 impl link block deque r0", "$ r4 = r9 lock", "r10 = org apache common pool2 impl link block deque r0", "$ r3 = r10 not empty", "z0 = $ r4 have waiter $ r3", "label r11 = org apache common pool2 impl link block deque r0", "$ r5 = r11 lock", "$ r5 unlock", "return z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r6 = org apache common pool2 impl link block deque r0", "$ r2 = r6 lock", "$ r2 lock", "label r7 = org apache common pool2 impl link block deque r0", "$ i2 = r7 capacity", "r8 = org apache common pool2 impl link block deque r0", "$ i1 = r8 count", "i0 = $ i2 - $ i1", "label r9 = org apache common pool2 impl link block deque r0", "$ r3 = r9 lock", "$ r3 unlock", "return i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r10 = org apache common pool2 impl link block deque r0", "$ r4 = r10 lock", "$ r4 lock", "label r11 = org apache common pool2 impl link block deque r0", "$ r5 = specialinvoke r11 unlink last", "if $ r5 ! = null goto label2", "r12 = org apache common pool2 impl link block deque r0", "$ r7 = r12 not empty", "$ r7 await", "goto label1", "if $ r5 ! = null goto label2", "label r13 = org apache common pool2 impl link block deque r0", "$ r6 = r13 lock", "$ r6 unlock", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common pool2 pool utils erode pool r0 1 0f", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org apache common pool2 pool utils $ synchronize pool object factory", "specialinvoke r2 < init > r0", "r3 = org apache common pool2 pool object factory r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "c0 = @ parameter1", "i1 = r1 index of c0", "if i1 < = -1 goto label1", "$ i2 = i1 + 1", "$ r2 = r1 substring $ i2", "goto label2", "label return $ r2", "if i1 < = -1 goto label1", "label $ r2 = \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = r0 get node", "com googlecode concurrenttrees common pretty printer pretty print $ r3 $ r2 \\ `` \\", "$ r4 = $ r2 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = new com typesafe config config render option", "specialinvoke $ r0 < init > 0 0 0 1", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = cucumber deps com thoughtworks xstream converter javabean java bean converter r0", "$ r2 = r3 bean provider", "$ z0 = $ r2 can instantiate r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new org apache curator time trace", "r7 = org apache curator curator zookeeper client r0", "$ r3 = r7 tracer", "$ r4 = $ r3 get", "$ r5 = org apache curator driver tracer driver $ r4", "specialinvoke r6 < init > r1 $ r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r4 = org apache curator curator zookeeper client r0", "$ r1 = r4 state", "$ r2 = $ r1 get ensemble provider", "$ r3 = $ r2 get connection string", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = org apache zookeeper keeper exception $ code connectionloss", "$ i1 = $ r0 int value", "if i0 == $ i1 goto label1", "$ r1 = org apache zookeeper keeper exception $ code operationtimeout", "$ i2 = $ r1 int value", "if i0 == $ i2 goto label1", "$ r2 = org apache zookeeper keeper exception $ code sessionmoved", "$ i3 = $ r2 int value", "if i0 == $ i3 goto label1", "$ r3 = org apache zookeeper keeper exception $ code sessionexpired", "$ i4 = $ r3 int value", "if i0 ! = $ i4 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if i0 ! = $ i4 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org apache curator utils closeable executor service r0", "$ r1 = r2 be open", "$ z0 = $ r1 get", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache curator framework listen listener container r0", "$ r1 = r2 listener", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache curator framework recipes barrier distribute barrier r0", "r1 wait on barrier -1l null", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache curator framework recipe cache child data r0", "$ r1 = r2 stat", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org apache curator framework recipe cache tree cache $ builder", "specialinvoke $ r2 < init > r0 r1 null", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r8 = org apache curator framework recipe leader leader selector r0", "$ r3 = r8 state", "$ r2 = org apache curator framework recipe leader leader selector $ state latent", "$ r1 = org apache curator framework recipe leader leader selector $ state start", "$ z0 = $ r3 compare and set $ r2 $ r1", "com google common base precondition check state $ z0 \\ `` can not be start more than once\\ ``", "r9 = org apache curator framework recipe leader leader selector r0", "$ r4 = r9 executor service", "$ z1 = $ r4 be shutdown", "if $ z1 ! = 0 goto label1", "$ z4 = 1", "goto label2", "label com google common base precondition check state $ z4 \\ `` already started\\ ``", "r10 = org apache curator framework recipe leader leader selector r0", "$ z2 = r10 have leadership", "if $ z2 ! = 0 goto label3", "$ z5 = 1", "goto label4", "label com google common base precondition check state $ z5 \\ `` already have leadership\\ ``", "r11 = org apache curator framework recipe leader leader selector r0", "$ r5 = r11 client", "$ r6 = $ r5 get connection state listenable", "r12 = org apache curator framework recipe leader leader selector r0", "$ r7 = r12 listener", "$ r6 add listener $ r7", "r13 = org apache curator framework recipe leader leader selector r0", "r13 requeue", "return", "if $ z2 ! = 0 goto label3", "label $ z5 = 0", "if $ z1 ! = 0 goto label1", "label $ z4 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r2 = org apache curator framework recipe lock inter process read write lock r0", "$ r1 = r2 read mutex", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = new org apache curator framework recipe lock reaper $ path holder", "r9 = org apache curator framework recipe lock reaper r0", "specialinvoke r8 < init > r9 r1 r2 0 null", "r10 = org apache curator framework recipe lock reaper r0", "$ r5 = r10 active path", "$ r5 put r1 r8", "r11 = org apache curator framework recipe lock reaper r0", "$ i0 = r11 reap threshold m", "r12 = org apache curator framework recipe lock reaper r0", "r12 schedule r8 $ i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r4 = org apache curator framework recipe queue queue sharder r0", "$ r1 = r4 queue", "$ r2 = $ r1 key set", "$ r3 = com google common collect immutable set copy of $ r2", "r5 = java util collection $ r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = org apache curator framework recipe queue simple distribute queue r0", "r1 = specialinvoke r4 internal element 0 null", "if r1 ! = null goto label1", "r3 = new java util no such element exception", "specialinvoke r3 < init >", "throw r3", "if r1 ! = null goto label1", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r3 = org apache curator framework recipe queue simple distribute queue r0", "$ r2 = specialinvoke r3 internal poll l0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r9 = new org apache curator framework recipe share versioned value", "$ i1 = r1 get version", "$ r4 = r1 get value", "$ r5 = java lang integer $ r4", "$ i2 = $ r5 int value", "$ r6 = org apache curator framework recipe share share count to bytes $ i2", "specialinvoke r9 < init > $ i1 $ r6", "r10 = org apache curator framework recipe share share count r0", "$ r7 = r10 share value", "$ r8 = org apache curator framework recipe share share count to byte i0", "$ z0 = $ r7 try set value r9 $ r8", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = com lmax disruptor collection histogram r0", "$ r1 = r2 upper bound", "$ l1 = $ r1 [ i0 ]", "return $ l1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "l1 = @ parameter1", "$ r1 = new java lang unsupported operation exception", "specialinvoke $ r1 < init >", "throw $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = com lmax disruptor util mutable long r0", "r1 value = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org dom4j io output format r0", "$ z0 = r1 do x h t m l", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r7 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r7 ! = null goto label1", "$ r6 = new java util hash map", "specialinvoke $ r6 < init >", "r7 = $ r6", "label $ r3 = r7 get r1", "r8 = org dom4j rule rule set $ r3", "if r8 ! = null goto label2", "$ r4 = new org dom4j rule rule set", "specialinvoke $ r4 < init >", "r8 = $ r4", "r7 put r1 $ r4", "label r8 add rule r2", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "r11 = org dom4j tree concurrent reader hash map r0", "r3 = r11 table", "$ i2 = lengthof r3", "$ i3 = $ i2 - 1", "i1 = i0 & $ i3", "r4 = r3 [ i1 ]", "r7 = r4", "label if r7 ! = null goto label4", "r10 = new org dom4j tree concurrent reader hash map $ entry", "specialinvoke r10 < init > i0 r1 r2 r4", "r3 [ i1 ] = r10", "r12 = org dom4j tree concurrent reader hash map r0", "$ i5 = r12 count", "$ i6 = $ i5 + 1", "r13 = org dom4j tree concurrent reader hash map r0", "r13 count = $ i6", "r14 = org dom4j tree concurrent reader hash map r0", "$ i7 = r14 threshold", "if $ i6 < $ i7 goto label2", "r15 = org dom4j tree concurrent reader hash map r0", "r15 rehash", "goto label3", "label return null", "if $ i6 < $ i7 goto label2", "label r16 = org dom4j tree concurrent reader hash map r0", "r16 record modification r10", "label if r7 ! = null goto label4", "label $ i4 = r7 hash", "if $ i4 ! = i0 goto label5", "$ r5 = r7 key", "r17 = org dom4j tree concurrent reader hash map r0", "$ z0 = r17 eq r1 $ r5", "if $ z0 == 0 goto label5", "r9 = r7 value", "r7 value = r2", "return r9", "if $ z0 == 0 goto label5", "label r7 = r7 next", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], []]}
{"nodes": ["r0 = @ this", "r4 = org dom4j tree concurrent reader hash map r0", "r1 = r4 value", "if r1 == null goto label1", "$ r2 = r1", "goto label2", "label r8 = java util collection $ r2", "return r8", "if r1 == null goto label1", "label r3 = new org dom4j tree concurrent reader hash map $ value", "$ r2 = r3", "r5 = org dom4j tree concurrent reader hash map r0", "specialinvoke r3 < init > r5 null", "r6 = org dom4j tree concurrent reader hash map r0", "r7 = java util collection r3", "r6 value = r7"], "adj": [[1], [2], [3], [4], [5], [], [7], [], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = new org dom4j tree concurrent reader hash map $ value iterator", "r3 = org dom4j tree concurrent reader hash map r0", "specialinvoke r2 < init > r3", "r4 = java util enumeration r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java util hash map", "specialinvoke $ r1 < init >", "$ r2 = java util collection synchronize map $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java util hash map", "specialinvoke $ r1 < init >", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org easymock internal matcher any any", "r1 = org easymock i argument matcher $ r0", "org easymock easy mock report matcher r1", "return 0 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["b0 = @ parameter0", "r2 = new org easymock internal matcher great or equal", "$ r1 = java lang byte value of b0", "specialinvoke r2 < init > $ r1", "r3 = org easymock i argument matcher r2", "org easymock easy mock report matcher r3", "return 0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["b0 = @ parameter0", "r2 = new org easymock internal matcher less or equal", "$ r1 = java lang byte value of b0", "specialinvoke r2 < init > $ r1", "r3 = org easymock i argument matcher r2", "org easymock easy mock report matcher r3", "return 0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["b0 = @ parameter0", "r2 = new org easymock internal matcher less than", "$ r1 = java lang byte value of b0", "specialinvoke r2 < init > $ r1", "r3 = org easymock i argument matcher r2", "org easymock easy mock report matcher r3", "return 0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["b0 = @ parameter0", "r2 = new org easymock internal matcher less than", "$ r1 = java lang byte value of b0", "specialinvoke r2 < init > $ r1", "r3 = org easymock i argument matcher r2", "org easymock easy mock report matcher r3", "return 0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["b0 = @ parameter0", "r2 = new org easymock internal matcher less than", "$ r1 = java lang byte value of b0", "specialinvoke r2 < init > $ r1", "r3 = org easymock i argument matcher r2", "org easymock easy mock report matcher r3", "return 0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org easymock internal matcher instance of", "specialinvoke r2 < init > r0", "r3 = org easymock i argument matcher r2", "org easymock easy mock report matcher r3", "return null"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["z0 = @ parameter0", "z1 = @ parameter1", "org easymock internal last control report or 2", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["z0 = @ parameter0", "z1 = @ parameter1", "org easymock internal last control report or 2", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["z0 = @ parameter0", "org easymock internal last control report not", "return 0"], "adj": [[1], [2], []]}
{"nodes": ["z0 = @ parameter0", "r2 = new org easymock internal matcher equal", "$ r1 = java lang boolean value of z0", "specialinvoke r2 < init > $ r1", "r3 = org easymock i argument matcher r2", "org easymock easy mock report matcher r3", "return 0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org easymock internal matcher match", "specialinvoke r2 < init > r0", "r3 = org easymock i argument matcher r2", "org easymock easy mock report matcher r3", "return null"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org easymock mock control r0", "$ r1 = r2 ctrl", "$ r1 verify", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0", "$ z0 = r3 be empty", "if $ z0 == 0 goto label1", "r4 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0", "$ l1 = r4 match", "r5 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0", "$ i0 = r5 path ptr", "r6 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0", "$ r2 = r6 restrict $ l1 $ i0", "return $ r2", "if $ z0 == 0 goto label1", "label $ r1 = specialinvoke r0 to method return", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r7 = org eclipse jdt internal compiler classfmt type annotation walker r0", "l9 = r7 match", "$ b1 = l9 cmp 0l", "if $ b1 ! = 0 goto label1", "$ r6 = org eclipse jdt internal compiler classfmt type annotation walker empty_annotation_walker", "return $ r6", "if $ b1 ! = 0 goto label1", "label r8 = org eclipse jdt internal compiler classfmt type annotation walker r0", "$ r3 = r8 type annotation", "i0 = lengthof $ r3", "l10 = 1l", "i11 = 0", "goto label5", "label if i11 < i0 goto label2", "label r9 = org eclipse jdt internal compiler classfmt type annotation walker r0", "$ r4 = r9 type annotation", "r1 = $ r4 [ i11 ]", "r2 = r1 get type path", "r10 = org eclipse jdt internal compiler classfmt type annotation walker r0", "$ i3 = r10 path ptr", "$ i2 = lengthof r2", "if $ i3 > = $ i2 goto label3", "r11 = org eclipse jdt internal compiler classfmt type annotation walker r0", "$ i5 = r11 path ptr", "$ i6 = r2 [ $ i5 ]", "if $ i6 == 2 goto label4", "label $ l4 = l10 ^ -1l", "l9 = l9 & $ l4", "label i11 = i11 + 1", "l10 = l10 < < 1", "label if i11 < i0 goto label2", "r12 = org eclipse jdt internal compiler classfmt type annotation walker r0", "$ i7 = r12 path ptr", "$ i8 = $ i7 + 2", "r13 = org eclipse jdt internal compiler classfmt type annotation walker r0", "$ r5 = r13 restrict l9 $ i8", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r7 = org eclipse jdt internal compiler parser recover local variable r0", "$ z0 = r7 already complete local initialization", "if $ z0 ! = 0 goto label1", "$ z1 = r1 instanceof org eclipse jdt internal compiler ast expression", "if $ z1 ! = 0 goto label2", "label $ r2 = specialinvoke r0 add r1 i0", "return $ r2", "if $ z1 ! = 0 goto label2", "label r8 = org eclipse jdt internal compiler parser recover local variable r0", "r8 already complete local initialization = 1", "r9 = org eclipse jdt internal compiler parser recover local variable r0", "$ r4 = r9 local declaration", "$ r3 = org eclipse jdt internal compiler ast expression r1", "$ r4 initialization = $ r3", "r10 = org eclipse jdt internal compiler parser recover local variable r0", "$ r5 = r10 local declaration", "$ i1 = r1 source end", "$ r5 declaration source end = $ i1", "r11 = org eclipse jdt internal compiler parser recover local variable r0", "$ r6 = r11 local declaration", "$ i2 = r1 source end", "$ r6 declaration end = $ i2", "r12 = org eclipse jdt internal compiler parser recover element r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache lucene search uhighlight custom unify highlighter r0", "$ r2 = r5 offset source", "if $ r2 ! = null goto label1", "$ r4 = specialinvoke r0 get offset source r1", "return $ r4", "if $ r2 ! = null goto label1", "label r6 = org apache lucene search uhighlight custom unify highlighter r0", "$ r3 = r6 offset source", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org elasticsearch action admin cluster allocation cluster allocation explain request builder r0", "$ r1 = r3 request", "$ r2 = org elasticsearch action admin cluster allocation cluster allocation explain request $ r1", "$ r2 include yes decision z0", "r4 = org elasticsearch action admin cluster allocation cluster allocation explain request builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r10 = org elasticsearch action admin cluster allocation cluster allocation explain request builder r0", "$ r1 = r10 request", "$ r2 = org elasticsearch action admin cluster allocation cluster allocation explain request $ r1", "$ r2 set index null", "r11 = org elasticsearch action admin cluster allocation cluster allocation explain request builder r0", "$ r4 = r11 request", "$ r5 = org elasticsearch action admin cluster allocation cluster allocation explain request $ r4", "$ r5 set shard null", "r12 = org elasticsearch action admin cluster allocation cluster allocation explain request builder r0", "$ r7 = r12 request", "$ r8 = org elasticsearch action admin cluster allocation cluster allocation explain request $ r7", "$ r8 set primary null", "r13 = org elasticsearch action admin cluster allocation cluster allocation explain request builder r0", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin cluster health cluster health request r0", "$ r1 = r2 level", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin cluster node info node info r0", "$ r1 = r2 version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin cluster node info node info r0", "$ r1 = r2 setting", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin cluster node stats node stats r0", "$ r1 = r2 jvm", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin cluster node stats node stats r0", "$ r1 = r2 thread pool", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action admin cluster node task get get task request r0", "$ z0 = r1 wait for completion", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org elasticsearch action admin cluster node task list list task request builder r0", "$ r2 = r5 request", "$ r3 = org elasticsearch action admin cluster node task list list task request $ r2", "$ r3 set description r1", "r6 = org elasticsearch action admin cluster node task list list task request builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin cluster repository put put repository request r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch action admin cluster reroute cluster reroute request r0", "r2 command = r1", "r3 = org elasticsearch action admin cluster reroute cluster reroute request r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org elasticsearch action admin cluster snapshots clone clone snapshot request builder r0", "$ r2 = r5 request", "$ r3 = org elasticsearch action admin cluster snapshots clone clone snapshot request $ r2", "$ r3 index option r1", "r6 = org elasticsearch action admin cluster snapshots clone clone snapshot request builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin cluster snapshot create create snapshot request r0", "$ r1 = r2 index", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin cluster snapshot get get snapshots request r0", "$ r1 = r2 snapshot", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action admin cluster snapshot restore restore snapshot request r0", "$ z0 = r1 partial", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action admin cluster snapshot status snapshot status request r0", "$ z0 = r1 ignore unavailable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action admin cluster snapshot status snapshot status request r0", "$ z0 = r1 ignore unavailable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action admin cluster snapshot status snapshot stats r0", "$ l0 = r1 incremental size", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin index alias alias r0", "$ r1 = r2 index rout", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org elasticsearch action admin index close close index request builder r0", "$ r2 = r5 request", "$ r3 = org elasticsearch action admin index close close index request $ r2", "$ r3 index option r1", "r6 = org elasticsearch action admin index close close index request builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin index create create index cluster state update request r0", "$ r1 = r2 provide name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org elasticsearch common setting setting builder", "$ r3 = $ r2 load from map r1", "$ r4 = $ r3 build", "r5 = org elasticsearch action admin index create create index request r0", "r5 setting = $ r4", "r6 = org elasticsearch action admin index create create index request r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org elasticsearch common setting setting builder", "$ r4 = $ r3 load from source r1 r2", "$ r5 = $ r4 build", "r6 = org elasticsearch action admin index create create index request r0", "r6 setting = $ r5", "r7 = org elasticsearch action admin index create create index request r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ i0 = lengthof r1", "r4 = org elasticsearch action admin index create create index request r0", "$ r3 = r4 source r1 0 $ i0 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin index delete delete index request r0", "$ r1 = r2 index", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action admin index flush flush request r0", "$ z0 = r1 force", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "java util object require non null r1 \\ `` index must not be null\\ ``", "r3 = org elasticsearch action admin index map put put map request r0", "r3 concrete index = r1", "r4 = org elasticsearch action admin index map put put map request r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org elasticsearch action admin index open open index request builder r0", "$ r2 = r5 request", "$ r3 = org elasticsearch action admin index open open index request $ r2", "$ r3 index option r1", "r6 = org elasticsearch action admin index open open index request builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action admin index recovery recovery request r0", "$ z0 = r1 detail", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r15 = new org elasticsearch action admin index rollover max docs condition", "$ r3 = java lang long value of l0", "specialinvoke r15 < init > $ r3", "r18 = org elasticsearch action admin index rollover rollover request r0", "$ r5 = r18 condition", "$ r4 = r15 name", "$ z0 = $ r5 contain key $ r4", "if $ z0 == 0 goto label1", "r17 = new java lang illegal argument exception", "r16 = new java lang string builder", "specialinvoke r16 < init >", "$ r11 = r15 name", "$ r12 = r16 append $ r11", "$ r13 = $ r12 append \\ `` condition be already set\\ ``", "$ r14 = $ r13 to string", "specialinvoke r17 < init > $ r14", "throw r17", "if $ z0 == 0 goto label1", "label r19 = org elasticsearch action admin index rollover rollover request r0", "$ r7 = r19 condition", "$ r6 = r15 name", "$ r7 put $ r6 r15", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = new org elasticsearch action admin index rollover max size condition", "specialinvoke r14 < init > r1", "r17 = org elasticsearch action admin index rollover rollover request r0", "$ r5 = r17 condition", "$ r4 = r14 name", "$ z0 = $ r5 contain key $ r4", "if $ z0 == 0 goto label1", "r16 = new java lang illegal argument exception", "r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r11 = r15 append r14", "$ r12 = $ r11 append \\ `` condition be already set\\ ``", "$ r13 = $ r12 to string", "specialinvoke r16 < init > $ r13", "throw r16", "if $ z0 == 0 goto label1", "label r18 = org elasticsearch action admin index rollover rollover request r0", "$ r7 = r18 condition", "$ r6 = r14 name", "$ r7 put $ r6 r14", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org elasticsearch common setting setting builder", "$ r4 = $ r3 load from source r1 r2", "$ r5 = $ r4 build", "r6 = org elasticsearch action admin index setting put update setting request r0", "r6 setting = $ r5", "r7 = org elasticsearch action admin index setting put update setting request r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org elasticsearch action admin index shard index shard store request builder r0", "$ r2 = r5 request", "$ r3 = org elasticsearch action admin index shard index shard store request $ r2", "$ r3 shard status r1", "r6 = org elasticsearch action admin index shard index shard store request builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin index stats shard stats r0", "$ r1 = r2 shard rout", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin index template put put index template request r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch action admin index validate query validate query request r0", "r2 query = r1", "r3 = org elasticsearch action admin index validate query validate query request r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org elasticsearch action bulk backoff policy $ wrap backoff policy", "specialinvoke r3 < init > r0 r1", "r4 = org elasticsearch action bulk backoff policy r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r4 = r2 next", "r3 = org elasticsearch action doc write request $ r4", "r6 = org elasticsearch action bulk bulk request r0", "r6 add r3", "goto label1", "if $ z0 == 0 goto label2", "label r7 = org elasticsearch action bulk bulk request r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = org elasticsearch action support active shard count from i0", "r3 = org elasticsearch action bulk bulk request r0", "$ r2 = r3 wait for active shard $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = new org elasticsearch core time value", "r3 = org elasticsearch action bulk bulk response r0", "$ l0 = r3 take in millis", "specialinvoke r2 < init > $ l0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r8 = new org elasticsearch action bulk retry $ retry handler", "r9 = org elasticsearch action bulk retry r0", "$ r7 = r9 backoff policy", "r10 = org elasticsearch action bulk retry r0", "$ r6 = r10 scheduler", "specialinvoke r8 < init > $ r7 r1 r3 $ r6", "r8 execute r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action fieldcaps field capability index response r0", "$ r1 = r2 index name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action fieldcaps field capability request r0", "$ r1 = r2 field", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action get get request r0", "$ z0 = r1 refresh", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action get get request r0", "$ l0 = r1 version", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch action get get response r0", "$ r1 = r3 get result", "$ r2 = $ r1 internal source ref", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r4 = org elasticsearch action index index request builder r0", "$ r1 = r4 request", "$ r2 = org elasticsearch action index index request $ r1", "$ r2 set require alias z0", "r5 = org elasticsearch action index index request builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org elasticsearch action ingest simulate pipeline request builder r0", "$ r1 = r3 request", "$ r2 = org elasticsearch action ingest simulate pipeline request $ r1", "$ r2 set verbose z0", "r4 = org elasticsearch action ingest simulate pipeline request builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org elasticsearch action search search request builder r0", "$ r3 = specialinvoke r5 source builder", "$ r3 fetch source r1 r2", "r6 = org elasticsearch action search search request builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org elasticsearch action search search request builder r0", "$ r2 = specialinvoke r4 source builder", "$ r2 add rescorer r1", "r5 = org elasticsearch action search search request builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org elasticsearch action step listener r0", "$ r2 = r3 delegate", "$ r2 add listener r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org elasticsearch action support master master node operation request builder r0", "$ r2 = r5 request", "$ r3 = org elasticsearch action support master master node request $ r2", "$ r3 master node timeout r1", "r6 = org elasticsearch action support master master node operation request builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action support master master node read request r0", "$ z0 = r1 local", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action support replication replication task r0", "$ r1 = r2 phase", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action termvectors term vector request r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action termvectors term vector request r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action termvectors term vector request r0", "$ z0 = r1 realtime", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org elasticsearch action termvectors term vector request builder r0", "$ r2 = r5 request", "$ r3 = org elasticsearch action termvectors term vector request $ r2", "$ r3 type r1", "r6 = org elasticsearch action termvectors term vector request builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r8 = org elasticsearch action update update request r0", "$ r2 = r8 fetch source context", "if $ r2 ! = null goto label1", "$ r6 = org elasticsearch search fetch subphase fetch source context fetch_source", "goto label2", "label r7 = new org elasticsearch search fetch subphase fetch source context", "$ r4 = $ r6 include", "$ r5 = $ r6 exclude", "specialinvoke r7 < init > z0 $ r4 $ r5", "r10 = org elasticsearch action update update request r0", "r10 fetch source context = r7", "r11 = org elasticsearch action update update request r0", "return r11", "if $ r2 ! = null goto label1", "label r9 = org elasticsearch action update update request r0", "$ r6 = r9 fetch source context"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r8 = org elasticsearch action update update request r0", "$ r2 = r8 fetch source context", "if $ r2 ! = null goto label1", "$ r6 = org elasticsearch search fetch subphase fetch source context fetch_source", "goto label2", "label r7 = new org elasticsearch search fetch subphase fetch source context", "$ r4 = $ r6 include", "$ r5 = $ r6 exclude", "specialinvoke r7 < init > z0 $ r4 $ r5", "r10 = org elasticsearch action update update request r0", "r10 fetch source context = r7", "r11 = org elasticsearch action update update request r0", "return r11", "if $ r2 ! = null goto label1", "label r9 = org elasticsearch action update update request r0", "$ r6 = r9 fetch source context"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action update update request r0", "$ r1 = r2 doc", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org elasticsearch action update update request r0", "$ r2 = specialinvoke r4 safe upsert request", "$ r2 source r1", "r5 = org elasticsearch action update update request r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "java util object require non null r1", "$ r3 = startup exception $ println__2 bootstrap $ r1", "r4 = org elasticsearch bootstrap startup exception r0", "specialinvoke r4 print stack trace $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = new org elasticsearch action bulk bulk request", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org elasticsearch action admin index shard index shard store request", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = new org elasticsearch action admin index alias index aliases request", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org elasticsearch action admin index forcemerge force merge request", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch cluster block cluster block r0", "$ z0 = r1 retryable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ l0 = r1 get term", "r34 = org elasticsearch cluster coordination coordination state r0", "$ l1 = r34 get current term", "$ b2 = $ l0 cmp $ l1", "if $ b2 > 0 goto label1", "$ r14 = org elasticsearch cluster coordination coordination state logger", "r35 = org elasticsearch cluster coordination coordination state r0", "$ l10 = r35 get current term", "$ r15 = java lang long value of $ l10", "$ r14 debug \\ `` handle start join ignore [ { } ] a term provide be not great than current term [ { } ] \\", "r29 = new org elasticsearch cluster coordination coordination state reject exception", "r28 = new java lang string builder", "specialinvoke r28 < init >", "$ r18 = r28 append \\ `` incoming term \\ ``", "$ l11 = r1 get term", "$ r19 = $ r18 append $ l11", "$ r20 = $ r19 append \\ `` not great than current term \\ ``", "r36 = org elasticsearch cluster coordination coordination state r0", "$ l12 = r36 get current term", "$ r21 = $ r20 append $ l12", "$ r22 = $ r21 to string", "$ r23 = newarray java lang object [ 0 ]", "specialinvoke r29 < init > $ r22 $ r23", "r37 = java lang throwable r29", "throw r37", "if $ b2 > 0 goto label1", "label $ r2 = org elasticsearch cluster coordination coordination state logger", "r38 = org elasticsearch cluster coordination coordination state r0", "$ l3 = r38 get current term", "$ r3 = java lang long value of $ l3", "$ r2 debug \\ `` handle start join leave term [ { } ] due to { } \\", "r39 = org elasticsearch cluster coordination coordination state r0", "$ r4 = r39 join vote", "$ z0 = $ r4 be empty", "if $ z0 ! = 0 goto label5", "r40 = org elasticsearch cluster coordination coordination state r0", "$ z1 = r40 election win", "if $ z1 ! = 0 goto label2", "r24 = \\ `` fail election\\ ``", "goto label4", "label $ r25 = org elasticsearch cluster coordination coordination state logger", "r42 = org elasticsearch cluster coordination coordination state r0", "$ r26 = r42 join vote", "$ r25 debug \\ `` handle start join discard { } { } \\", "label r43 = org elasticsearch cluster coordination coordination state r0", "$ r27 = r43 persist state", "$ l13 = r1 get term", "$ r27 set current term $ l13", "$ z3 = org elasticsearch cluster coordination coordination state $ assertion disable", "if $ z3 ! = 0 goto label6", "r44 = org elasticsearch cluster coordination coordination state r0", "$ l7 = r44 get current term", "$ l8 = r1 get term", "$ b9 = $ l7 cmp $ l8", "if $ b9 == 0 goto label6", "r30 = new java lang assertion error", "specialinvoke r30 < init >", "throw r30", "if $ b9 == 0 goto label6", "label r45 = org elasticsearch cluster coordination coordination state r0", "r45 last publish version = 0l", "r46 = org elasticsearch cluster coordination coordination state r0", "$ r5 = r46 get last accepted configuration", "r47 = org elasticsearch cluster coordination coordination state r0", "r47 last publish configuration = $ r5", "r48 = org elasticsearch cluster coordination coordination state r0", "r48 start join since last reboot = 1", "r49 = org elasticsearch cluster coordination coordination state r0", "r49 election win = 0", "r31 = new org elasticsearch cluster coordination coordination state $ vote collection", "specialinvoke r31 < init >", "r50 = org elasticsearch cluster coordination coordination state r0", "r50 join vote = r31", "r32 = new org elasticsearch cluster coordination coordination state $ vote collection", "specialinvoke r32 < init >", "r51 = org elasticsearch cluster coordination coordination state r0", "r51 publish vote = r32", "r33 = new org elasticsearch cluster coordination join", "r52 = org elasticsearch cluster coordination coordination state r0", "$ r9 = r52 local node", "$ r10 = r1 get source node", "r53 = org elasticsearch cluster coordination coordination state r0", "$ l4 = r53 get current term", "r54 = org elasticsearch cluster coordination coordination state r0", "$ l5 = r54 get last accepted term", "r55 = org elasticsearch cluster coordination coordination state r0", "$ l6 = specialinvoke r55 get last accepted version or metadata version", "specialinvoke r33 < init > $ r9 $ r10 $ l4 $ l5 $ l6", "return r33", "if $ z1 ! = 0 goto label2", "label $ r12 = r1 get source node", "r41 = org elasticsearch cluster coordination coordination state r0", "$ r13 = r41 local node", "$ z2 = $ r12 equal $ r13", "if $ z2 == 0 goto label3", "r24 = \\ `` bump term\\ ``", "if $ z2 == 0 goto label3", "label r24 = \\ `` stand down as leader\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [], [92], [93], [94], [95], [96], [97], [98], [99], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch cluster metadata alias action r0", "$ r1 = r2 index", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch cluster metadata data stream alias r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r16 = new org elasticsearch cluster metadata index name expression resolver $ context", "$ r7 = org elasticsearch action support index option lenient expand open", "r18 = org elasticsearch cluster metadata index name expression resolver r0", "$ r8 = r18 get system index access level", "r19 = org elasticsearch cluster metadata index name expression resolver r0", "$ r9 = r19 get system index access predicate", "r20 = org elasticsearch cluster metadata index name expression resolver r0", "$ r10 = r20 get net new system index predicate", "specialinvoke r16 < init > r1 $ r7 1 0 1 $ r8 $ r9 $ r10", "r15 = java util array a list r2", "r21 = org elasticsearch cluster metadata index name expression resolver r0", "$ r11 = r21 expression resolvers", "r4 = $ r11 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label2", "$ r14 = r4 next", "r5 = org elasticsearch cluster metadata index name expression resolver $ expression resolver $ r14", "r15 = r5 resolve r16 r15", "goto label1", "if $ z0 == 0 goto label2", "label r17 = new java util hash set", "specialinvoke r17 < init > r15", "$ r13 = java util collection unmodifiable set r17", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ z0 = r0 be empty", "if $ z0 ! = 0 goto label1", "$ z1 = org elasticsearch cluster metadata index name expression resolver be explicit all pattern r0", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch cluster metadata metadata r0", "$ r1 = r2 all index", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch cluster metadata metadata r0", "$ r1 = r2 all open index", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch cluster metadata metadata r0", "$ r1 = r2 visible open index", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch cluster metadata index metadata r0", "$ i0 = r1 total number of shard", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = new java util hash map", "r10 = org elasticsearch cluster metadata node shutdown metadata r0", "$ r4 = r10 node", "specialinvoke r8 < init > $ r4", "$ r5 = r1 get node id", "r8 put $ r5 r1", "r9 = new org elasticsearch cluster metadata node shutdown metadata", "specialinvoke r9 < init > r8", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org elasticsearch cluster metadata repository metadata r0", "$ r4 = r7 repository", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = org elasticsearch cluster metadata repository metadata $ r5", "$ r6 = r3 name", "$ z1 = r1 equal $ r6", "if $ z1 == 0 goto label2", "return r3", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org elasticsearch cluster node discovery node r0", "$ r5 = r10 node", "$ r6 = $ r5 value", "r2 = $ r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r7 = r2 next", "r3 = com carrotsearch hppc cursor object cursor $ r7", "$ r8 = r3 value", "r4 = org elasticsearch cluster node discovery node $ r8", "$ r9 = r4 get address", "$ z1 = $ r9 equal r1", "if $ z1 == 0 goto label2", "return r4", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 stream", "$ r3 = $ r2 sort", "$ r4 = java util stream collector to list", "$ r5 = $ r3 collect $ r4", "$ r6 = java util list $ r5", "$ r7 = java util collection unmodifiable list $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch cluster rout allocation allocator balance shard allocator r0", "$ r1 = r2 weight function", "$ f0 = org elasticsearch cluster rout allocation allocator balance shard allocator $ weight function access $ 500 $ r1", "return $ f0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch cluster rout allocation fail shard r0", "$ z0 = r1 mark a stale", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "org apache lucene util collection util tim sort r0", "$ r1 = new org elasticsearch cluster rout group shard iterator", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch cluster rout index rout table r0", "$ i0 = r2 primary shard active", "r3 = org elasticsearch cluster rout index rout table r0", "$ r1 = r3 shard", "$ i1 = $ r1 size", "if $ i0 ! = $ i1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 ! = $ i1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = 0", "r5 = org elasticsearch cluster rout index rout table r0", "r1 = r5 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label3", "$ r3 = r1 next", "r2 = org elasticsearch cluster rout index shard rout table $ r3", "$ r4 = r2 primary shard", "$ z1 = $ r4 active", "if $ z1 == 0 goto label2", "i0 = i0 + 1", "label goto label1", "if $ z0 == 0 goto label3", "label return i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r13 = new java util array deque", "specialinvoke r13 < init >", "r15 = org elasticsearch cluster rout rout node r0", "$ r5 = r15 node to shard", "$ r6 = $ r5 entry set", "r2 = $ r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r8 = r2 next", "r3 = java util map $ entry $ r8", "$ r9 = r3 get value", "$ r10 = org elasticsearch cluster rout rout node $ r9", "$ r11 = $ r10 copy shard", "$ r12 = $ r11 iterator", "r13 add $ r12", "goto label1", "if $ z0 == 0 goto label2", "label r14 = new org elasticsearch cluster rout rout nodes $ 1", "r16 = org elasticsearch cluster rout rout node r0", "specialinvoke r14 < init > r16 r13", "r17 = java util iterator r14", "return r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r10 = new java util array list", "specialinvoke r10 < init >", "r11 = org elasticsearch cluster rout rout table r0", "$ r7 = r11 index rout", "$ r8 = $ r7 key", "$ r9 = $ r8 to array class \\ `` ljava lang string \\ ``", "r2 = java lang string [ ] $ r9", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label2", "r4 = r2 [ i1 ]", "r12 = org elasticsearch cluster rout rout table r0", "r5 = r12 all shard r4", "r10 add all r5", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org elasticsearch cluster rout rout nodes $ assertion disable", "if $ z0 ! = 0 goto label1", "$ z1 = r1 be relocation target", "if $ z1 ! = 0 goto label1", "r11 = new java lang assertion error", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r6 = r10 append \\ `` only relocation target shard can have their relocation source remove \\ ``", "$ r7 = $ r6 append r1", "$ r8 = $ r7 append \\ `` \\ ``", "$ r9 = $ r8 to string", "specialinvoke r11 < init > $ r9", "throw r11", "if $ z1 ! = 0 goto label1", "label r2 = r1 remove relocation source", "r12 = org elasticsearch cluster rout rout node r0", "specialinvoke r12 update assign r1 r2", "r13 = org elasticsearch cluster rout rout node r0", "$ i0 = r13 inactive shard count", "$ i1 = $ i0 + 1", "r14 = org elasticsearch cluster rout rout node r0", "r14 inactive shard count = $ i1", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch cluster routing unassigned info r0", "$ r1 = r2 reason", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ z0 = org elasticsearch cluster service cluster applier service $ assertion disable", "if $ z0 ! = 0 goto label1", "$ z2 = org elasticsearch cluster service cluster applier service assert not call from cluster state applier \\ `` the applied cluster state be not yet available\\ ``", "if $ z2 ! = 0 goto label1", "r6 = new java lang assertion error", "specialinvoke r6 < init >", "throw r6", "if $ z2 ! = 0 goto label1", "label r8 = org elasticsearch cluster service cluster applier service r0", "$ r2 = r8 state", "$ r3 = $ r2 get", "r1 = org elasticsearch cluster cluster state $ r3", "$ z1 = org elasticsearch cluster service cluster applier service $ assertion disable", "if $ z1 ! = 0 goto label2", "if r1 ! = null goto label2", "r7 = new java lang assertion error", "specialinvoke r7 < init > \\ `` initial cluster state not set yet\\ ``", "throw r7", "if r1 ! = null goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch cluster service master service r0", "$ r1 = r2 thread pool executor", "$ i0 = $ r1 get number of pending task", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org elasticsearch common cache cache r0", "l0 = r3 now", "r4 = org elasticsearch common cache cache r0", "specialinvoke r4 put r1 r2 l0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch common cache cache r0", "$ r1 = cache $ lambda_keys_8__8 bootstrap $ r2", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "label r7 = new org elasticsearch common bytes byte array", "r9 = org elasticsearch common compress compress x content r0", "$ r3 = r9 bytes", "specialinvoke r7 < init > $ r3", "r10 = org elasticsearch common bytes byte reference r7", "$ r4 = org elasticsearch common compress compressor factory uncompress r10", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org elasticsearch common field memory stats r0", "$ r2 = r3 stats", "$ l0 = $ r2 get r1", "return $ l0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 be empty", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label $ i0 = r0 length", "r2 = newarray double [ $ i0 ]", "$ i1 = lengthof r2", "r3 = newarray double [ $ i1 ]", "i3 = 0", "label $ i2 = lengthof r2", "if i3 > = $ i2 goto label3", "$ r5 = newarray double [ 2 ]", "$ d0 = r0 get x i3", "$ r5 [ 0 ] = $ d0", "$ d1 = r0 get y i3", "$ r5 [ 1 ] = $ d1", "org elasticsearch common geo geo utils normalize point $ r5 0 1", "$ d2 = $ r5 [ 0 ]", "r2 [ i3 ] = $ d2", "$ d3 = $ r5 [ 1 ]", "r3 [ i3 ] = $ d3", "i3 = i3 + 1", "goto label2", "if i3 > = $ i2 goto label3", "label org elasticsearch common geo geo line decomposer decompose r2 r3 r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch common inject assistedinject assist constructor r0", "$ r1 = r2 all parameter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org elasticsearch common inject internal unique annotation next unique value", "$ i0 = $ r0 get and increment", "$ r1 = org elasticsearch common inject internal unique annotation create $ i0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "r1 = @ parameter2", "i1 = @ parameter3", "i2 = @ parameter4", "i3 = org elasticsearch common io channel read from file channel r0 l0 r1 i1 i2", "if i3 > = 0 goto label1", "$ r2 = new java io e o f exception", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append \\ `` read past eof po [ \\ ``", "$ r5 = $ r4 append l0", "$ r6 = $ r5 append \\ `` ] length [ \\ ``", "$ r7 = $ r6 append i2", "$ r8 = $ r7 append \\ `` ] end [ \\ ``", "$ l4 = r0 size", "$ r9 = $ r8 append $ l4", "$ r10 = $ r9 append \\ `` ] \\ ``", "$ r11 = $ r10 to string", "specialinvoke $ r2 < init > $ r11", "throw $ r2", "if i3 > = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ parameter0", "i0 = lengthof r0", "i1 = 0", "label if i1 > = i0 goto label12", "r2 = r0 [ i1 ]", "r3 = java nio file file new directory stream r2", "label r9 = r3 iterator", "label $ z0 = r9 have next", "if $ z0 == 0 goto label05", "$ r4 = r9 next", "r10 = java nio file path $ r4", "$ r5 = newarray java nio file link option [ 0 ]", "$ z1 = java nio file file be directory r10 $ r5", "if $ z1 == 0 goto label04", "$ r6 = newarray java nio file path [ 1 ]", "$ r6 [ 0 ] = r10", "org elasticsearch core internal io i o utils rm $ r6", "label goto label03", "if $ z0 == 0 goto label05", "label if r3 == null goto label11", "r3 close", "goto label11", "label i1 = i1 + 1", "goto label01", "label if i1 > = i0 goto label12", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [], [25], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch common io stream stream output r0", "$ r1 = r2 version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r2 = org elasticsearch common io stream stream output r0", "r2 write v int 0", "return", "if r1 ! = null goto label1", "label $ i0 = r1 length", "$ i1 = $ i0 + 1", "r3 = org elasticsearch common io stream stream output r0", "r3 write v int $ i1", "r1 write to r0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i8 = @ parameter0", "$ i0 = java lang integer number of lead zero i8", "if $ i0 < 25 goto label1", "$ b7 = byte i8", "r4 = org elasticsearch common io stream stream output r0", "r4 write byte $ b7", "return", "if $ i0 < 25 goto label1", "label $ r2 = org elasticsearch common io stream stream output scratch", "$ r3 = $ r2 get", "r1 = byte [ ] $ r3", "i9 = 0", "label $ i1 = i9", "i9 = i9 + 1", "$ i2 = i8 & 127", "$ i3 = $ i2 | 128", "$ b4 = byte $ i3", "r1 [ $ i1 ] = $ b4", "i8 = i8 > > > 7", "$ i5 = i8 & -128", "if $ i5 ! = 0 goto label2", "i10 = i9 + 1", "$ b6 = byte i8", "r1 [ i9 ] = $ b6", "r5 = org elasticsearch common io stream stream output r0", "r5 write byte r1 0 i10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r2 = org elasticsearch common io stream stream output r0", "r2 write boolean 0", "goto label2", "label return", "if r1 ! = null goto label1", "label r3 = org elasticsearch common io stream stream output r0", "r3 write boolean 1", "$ i0 = r1 ordinal", "r4 = org elasticsearch common io stream stream output r0", "r4 write v int $ i0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org elasticsearch common logging cluster id converter", "specialinvoke $ r1 < init >", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = newarray java lang object [ 2 ]", "r4 = org elasticsearch common lucene search function score function r0", "$ r2 = r4 score combiner", "$ r1 [ 0 ] = $ r2", "r5 = org elasticsearch common lucene search function score function r0", "$ i0 = r5 do hash code", "$ r3 = java lang integer value of $ i0", "$ r1 [ 1 ] = $ r3", "$ i1 = java util object hash $ r1", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org apache lucene search match no docs query", "specialinvoke r2 < init > r0", "r3 = org apache lucene search query r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org elasticsearch common lucene search x more like this r0", "r1 boost factor = f0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch common lucene search x more like this r0", "$ r1 = r2 analyzer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch common lucene search x more like this r0", "$ i0 = r1 max doc freq", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r36 = new java lang string builder", "specialinvoke r36 < init >", "$ r5 = r36 append \\ `` \\t\\ ``", "$ r6 = $ r5 append \\ `` max query term \\ ``", "r37 = org elasticsearch common lucene search x more like this r0", "$ i1 = r37 max query term", "$ r7 = $ r6 append $ i1", "$ r7 append \\ `` \\n\\ ``", "$ r9 = r36 append \\ `` \\t\\ ``", "$ r10 = $ r9 append \\ `` min word len \\ ``", "r38 = org elasticsearch common lucene search x more like this r0", "$ i2 = r38 min word len", "$ r11 = $ r10 append $ i2", "$ r11 append \\ `` \\n\\ ``", "$ r13 = r36 append \\ `` \\t\\ ``", "$ r14 = $ r13 append \\ `` max word len \\ ``", "r39 = org elasticsearch common lucene search x more like this r0", "$ i3 = r39 max word len", "$ r15 = $ r14 append $ i3", "$ r15 append \\ `` \\n\\ ``", "$ r17 = r36 append \\ `` \\t\\ ``", "$ r17 append \\ `` field name \\ ``", "r35 = \\ `` \\ ``", "r40 = org elasticsearch common lucene search x more like this r0", "r2 = r40 field names", "i0 = lengthof r2", "i6 = 0", "label if i6 > = i0 goto label2", "r3 = r2 [ i6 ]", "$ r33 = r36 append r35", "$ r33 append r3", "r35 = \\", "i6 = i6 + 1", "goto label1", "label if i6 > = i0 goto label2", "label r36 append \\ `` \\n\\ ``", "$ r20 = r36 append \\ `` \\t\\ ``", "$ r21 = $ r20 append \\ `` boost \\ ``", "r41 = org elasticsearch common lucene search x more like this r0", "$ z0 = r41 boost", "$ r22 = $ r21 append $ z0", "$ r22 append \\ `` \\n\\ ``", "$ r24 = r36 append \\ `` \\t\\ ``", "$ r25 = $ r24 append \\ `` min term freq \\ ``", "r42 = org elasticsearch common lucene search x more like this r0", "$ i4 = r42 min term freq", "$ r26 = $ r25 append $ i4", "$ r26 append \\ `` \\n\\ ``", "$ r28 = r36 append \\ `` \\t\\ ``", "$ r29 = $ r28 append \\ `` min doc freq \\ ``", "r43 = org elasticsearch common lucene search x more like this r0", "$ i5 = r43 min doc freq", "$ r30 = $ r29 append $ i5", "$ r30 append \\ `` \\n\\ ``", "$ r32 = r36 to string", "return $ r32"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = org elasticsearch common network inet address to addr string r0", "$ r3 = $ r1 append $ r2", "$ r4 = $ r3 append \\ `` \\ ``", "$ r5 = $ r4 append i0", "$ r6 = $ r5 to string", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org elasticsearch common transport port range", "specialinvoke $ r1 < init > \\ `` \\ ``", "$ r2 = org elasticsearch common network network address format r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = network utils $ lambda_get all addresses_1__2 bootstrap $", "$ r1 = org elasticsearch common network network utils filter all address $ r0 \\ `` no up-and-running address found\\ ``", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch common pid file r0", "$ r1 = r2 path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r2 = org elasticsearch common setting abstract scoped setting r0", "r2 validate r1 z0 0 0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org elasticsearch common setting key store wrapper allowed_setting_name", "$ r2 = $ r1 matcher r0", "$ z0 = $ r2 match", "if $ z0 ! = 0 goto label1", "$ r3 = new java lang illegal argument exception", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = $ r4 append \\ `` set name [ \\ ``", "$ r6 = $ r5 append r0", "$ r7 = $ r6 append \\ `` ] do not match the allowed setting name pattern [ \\ ``", "$ r8 = org elasticsearch common setting key store wrapper allowed_setting_name", "$ r9 = $ r8 pattern", "$ r10 = $ r7 append $ r9", "$ r11 = $ r10 append \\ `` ] \\ ``", "$ r12 = $ r11 to string", "specialinvoke $ r3 < init > $ r12", "throw $ r3", "if $ z0 ! = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch common setting secure string r0", "$ r1 = r3 char", "if $ r1 == null goto label1", "r4 = org elasticsearch common setting secure string r0", "$ r2 = r4 char", "java util array fill $ r2 0", "r5 = org elasticsearch common setting secure string r0", "r5 char = null", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java lang unsupported operation exception", "specialinvoke $ r2 < init > \\ `` secure setting be not strings\\ ``", "throw $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org elasticsearch common setting set r0", "$ r2 = r3 key", "$ z0 = $ r2 match r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["l0 = @ parameter0", "i1 = org elasticsearch common time date utils round get year l0", "i2 = org elasticsearch common time date utils round get month of year l0 i1", "$ i4 = i2 - 1", "$ i5 = $ i4 3", "$ i6 = $ i5 * 3", "i3 = $ i6 + 1", "$ l7 = org elasticsearch common time date utils of i1 i3", "return $ l7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch common unit distance unit r0", "$ d0 = r1 meter", "$ d1 = 6378137 0 $ d0", "return $ d1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "$ r1 = org elasticsearch common unit distance unit meter", "r2 = org elasticsearch common unit distance unit r0", "$ d1 = org elasticsearch common unit distance unit convert d0 r2 $ r1", "return $ d1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r13 = org elasticsearch common util big byte array r0", "i1 = r13 num page l0", "r14 = org elasticsearch common util big byte array r0", "$ r1 = r14 page", "$ i2 = lengthof $ r1", "if i1 < = $ i2 goto label1", "r15 = org elasticsearch common util big byte array r0", "$ r9 = r15 page", "$ i3 = org apache lucene util ram usage estimator num_bytes_object_ref", "$ i4 = org apache lucene util array util oversize i1 $ i3", "$ r10 = java util array copy of $ r9 $ i4", "$ r11 = byte [ ] [ ] $ r10", "r16 = org elasticsearch common util big byte array r0", "r16 page = $ r11", "label i5 = i1 - 1", "label if i5 < 0 goto label3", "r17 = org elasticsearch common util big byte array r0", "$ r5 = r17 page", "$ r6 = $ r5 [ i5 ]", "if $ r6 ! = null goto label3", "r18 = org elasticsearch common util big byte array r0", "$ r7 = r18 page", "r19 = org elasticsearch common util big byte array r0", "$ r8 = r19 new byte page i5", "$ r7 [ i5 ] = $ r8", "i5 = i5 + -1", "goto label2", "if $ r6 ! = null goto label3", "label i6 = i1", "label r20 = org elasticsearch common util big byte array r0", "$ r12 = r20 page", "$ i7 = lengthof $ r12", "if i6 > = $ i7 goto label5", "r21 = org elasticsearch common util big byte array r0", "$ r2 = r21 page", "$ r3 = $ r2 [ i6 ]", "if $ r3 == null goto label5", "r22 = org elasticsearch common util big byte array r0", "$ r4 = r22 page", "$ r4 [ i6 ] = null", "r23 = org elasticsearch common util big byte array r0", "r23 release page i6", "i6 = i6 + 1", "goto label4", "if $ r3 == null goto label5", "label r24 = org elasticsearch common util big byte array r0", "r24 size = l0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [], [47], [48], [49], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "$ i3 = org elasticsearch common util byte ref hash rehash i0", "$ l5 = long $ i3", "r4 = org elasticsearch common util byte ref hash r0", "$ l4 = r4 mask", "l1 = org elasticsearch common util byte ref hash slot $ l5 $ l4", "l8 = l1", "label r5 = org elasticsearch common util byte ref hash r0", "l2 = r5 id l8", "$ b6 = l2 cmp -1l", "if $ b6 == 0 goto label2", "r6 = org elasticsearch common util byte ref hash r0", "$ r2 = r6 spare", "r7 = org elasticsearch common util byte ref hash r0", "$ r3 = r7 get l2 $ r2", "$ z0 = r1 bytes equal $ r3", "if $ z0 == 0 goto label3", "label return l2", "if $ z0 == 0 goto label3", "label r8 = org elasticsearch common util byte ref hash r0", "$ l7 = r8 mask", "l8 = org elasticsearch common util byte ref hash next slot l8 $ l7", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["d0 = @ parameter0", "r0 = @ parameter1", "i0 = @ parameter2", "$ l1 = java lang double double to raw long bit d0", "org elasticsearch common util byte utils write long l e $ l1 r0 i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if $ i0 ! = 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r14 = org elasticsearch common util concurrent abstract async task r0", "$ z0 = r14 be close", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label r15 = org elasticsearch common util concurrent abstract async task r0", "$ r1 = r15 cancellable", "if $ r1 == null goto label2", "r16 = org elasticsearch common util concurrent abstract async task r0", "$ r13 = r16 cancellable", "$ r13 cancel", "label r17 = org elasticsearch common util concurrent abstract async task r0", "$ r2 = r17 interval", "$ l0 = $ r2 millis", "$ b1 = $ l0 cmp 0l", "if $ b1 < = 0 goto label4", "r18 = org elasticsearch common util concurrent abstract async task r0", "$ z1 = r18 must reschedule", "if $ z1 == 0 goto label4", "r19 = org elasticsearch common util concurrent abstract async task r0", "$ r5 = r19 logger", "$ z2 = $ r5 be trace enabled", "if $ z2 == 0 goto label3", "r20 = org elasticsearch common util concurrent abstract async task r0", "$ r10 = r20 logger", "$ r11 = r0 to string", "r21 = org elasticsearch common util concurrent abstract async task r0", "$ r12 = r21 interval", "$ r10 trace \\ `` schedule { } every { } \\", "label r22 = org elasticsearch common util concurrent abstract async task r0", "$ r6 = r22 thread pool", "r23 = org elasticsearch common util concurrent abstract async task r0", "$ r7 = r23 interval", "r24 = org elasticsearch common util concurrent abstract async task r0", "$ r8 = r24 get thread pool", "$ r9 = $ r6 schedule r0 $ r7 $ r8", "r25 = org elasticsearch common util concurrent abstract async task r0", "r26 = org elasticsearch threadpool scheduler $ cancellable $ r9", "r25 cancellable = r26", "r27 = org elasticsearch common util concurrent abstract async task r0", "r27 be schedule or run = 1", "goto label5", "label return", "if $ z1 == 0 goto label4", "label r28 = org elasticsearch common util concurrent abstract async task r0", "$ r3 = r28 logger", "$ r4 = r0 to string", "$ r3 trace \\ `` schedule { } disabled\\", "r29 = org elasticsearch common util concurrent abstract async task r0", "r29 cancellable = null", "r30 = org elasticsearch common util concurrent abstract async task r0", "r30 be schedule or run = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [46], [47], [48], [49], [50], [51], [52], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch common util concurrent abstract runnable r0", "r2 on failure r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch common util concurrent queue resize es thread pool executor r0", "$ r1 = r2 work queue", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org elasticsearch common util concurrent thread context r0", "r2 = r3 stash context", "r4 = org elasticsearch common util concurrent thread context r0", "r4 put transient \\ `` action origin\\", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org elasticsearch common util concurrent thread context r0", "$ r2 = r7 thread local", "$ r3 = $ r2 get", "$ r4 = org elasticsearch common util concurrent thread context $ thread context struct $ r3", "$ r5 = org elasticsearch common util concurrent thread context $ thread context struct access $ 300 $ r4", "$ r6 = $ r5 get r1", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r6 = org elasticsearch common util concurrent thread context r0", "$ r2 = r6 thread local", "r7 = org elasticsearch common util concurrent thread context r0", "$ r1 = r7 thread local", "$ r3 = $ r1 get", "$ r4 = org elasticsearch common util concurrent thread context $ thread context struct $ r3", "$ r5 = org elasticsearch common util concurrent thread context $ thread context struct access $ 1700 $ r4", "$ r2 set $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util object require non null r1 \\ `` circuit breaker consumer can not be null\\ ``", "$ r3 = java util function consumer $ r2", "r5 = org elasticsearch common util set back scale cuckoo filter r0", "r5 breaker = $ r3", "r6 = org elasticsearch common util set back scale cuckoo filter r0", "$ l0 = r6 get size in byte", "$ r4 = java lang long value of $ l0", "r1 accept $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org elasticsearch common xcontent support x content map value be array r0", "if $ z0 == 0 goto label3", "r1 = java util list r0", "$ i0 = r1 size", "r2 = newarray java lang string [ $ i0 ]", "i2 = 0", "label $ i1 = lengthof r2", "if i2 > = $ i1 goto label2", "$ r5 = r1 get i2", "$ r6 = org elasticsearch common xcontent support x content map value node string value $ r5 null", "r2 [ i2 ] = $ r6", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label return r2", "if $ z0 == 0 goto label3", "label $ r3 = r0 to string", "$ r4 = org elasticsearch common string split string by comma to array $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch discovery discovery setting r0", "$ r1 = r2 publish timeout", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org elasticsearch discovery zen node fault detection r0", "$ r1 = r4 node f d", "$ r2 = $ r1 key set", "$ r3 = java util collection unmodifiable set $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r11 = new java util array list", "specialinvoke r11 < init >", "r12 = org elasticsearch discovery zen pending cluster state queue r0", "$ r5 = r12 pending state", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r9 = r2 next", "r3 = org elasticsearch discovery zen pending cluster state queue $ cluster state context $ r9", "$ r10 = r3 state", "r11 add $ r10", "goto label1", "if $ z0 == 0 goto label2", "label $ i0 = r11 size", "$ r6 = newarray org elasticsearch cluster cluster state [ $ i0 ]", "$ r7 = r11 to array $ r6", "$ r8 = org elasticsearch cluster cluster state [ ] $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java util array a list r2", "r4 = org elasticsearch elasticsearch exception r0", "r4 add metadata r1 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = r0", "r3 = org elasticsearch elasticsearch exception r0", "r2 = r3 get cause", "label if r2 == null goto label2", "if r2 == r1 goto label2", "r1 = r2", "r2 = r2 get cause", "goto label1", "if r2 == r1 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org elasticsearch env environment r0", "$ r2 = r4 repo file", "$ r3 = org elasticsearch core path utils get $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r23 = org elasticsearch env environment r0", "$ r2 = r23 tmp file", "$ r1 = newarray java nio file link option [ 0 ]", "$ z0 = java nio file file exist $ r2 $ r1", "if $ z0 ! = 0 goto label1", "r20 = new java io file not find exception", "r19 = new java lang string builder", "specialinvoke r19 < init >", "$ r14 = r19 append \\ `` temporary file directory [ \\ ``", "r24 = org elasticsearch env environment r0", "$ r15 = r24 tmp file", "$ r16 = $ r14 append $ r15", "$ r17 = $ r16 append \\ `` ] do not exist or be not accessible\\ ``", "$ r18 = $ r17 to string", "specialinvoke r20 < init > $ r18", "throw r20", "if $ z0 ! = 0 goto label1", "label r25 = org elasticsearch env environment r0", "$ r4 = r25 tmp file", "$ r3 = newarray java nio file link option [ 0 ]", "$ z1 = java nio file file be directory $ r4 $ r3", "if $ z1 ! = 0 goto label2", "r22 = new java io i o exception", "r21 = new java lang string builder", "specialinvoke r21 < init >", "$ r7 = r21 append \\ `` configured temporary file directory [ \\ ``", "r26 = org elasticsearch env environment r0", "$ r8 = r26 tmp file", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 append \\ `` ] be not a directory\\ ``", "$ r11 = $ r10 to string", "specialinvoke r22 < init > $ r11", "throw r22", "if $ z1 ! = 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 data file", "$ r3 = r1 data file", "org elasticsearch env environment assert equal $ r2 $ r3 \\ `` data files\\ ``", "$ r4 = r0 repo file", "$ r5 = r1 repo file", "org elasticsearch env environment assert equal $ r4 $ r5 \\ `` repo files\\ ``", "$ r6 = r0 config file", "$ r7 = r1 config file", "org elasticsearch env environment assert equal $ r6 $ r7 \\ `` config file\\ ``", "$ r8 = r0 plugins file", "$ r9 = r1 plugins file", "org elasticsearch env environment assert equal $ r8 $ r9 \\ `` plugins file\\ ``", "$ r10 = r0 bin file", "$ r11 = r1 bin file", "org elasticsearch env environment assert equal $ r10 $ r11 \\ `` bin file\\ ``", "$ r12 = r0 lib file", "$ r13 = r1 lib file", "org elasticsearch env environment assert equal $ r12 $ r13 \\ `` lib file\\ ``", "$ r14 = r0 module file", "$ r15 = r1 module file", "org elasticsearch env environment assert equal $ r14 $ r15 \\ `` module file\\ ``", "$ r16 = r0 log file", "$ r17 = r1 log file", "org elasticsearch env environment assert equal $ r16 $ r17 \\ `` logs file\\ ``", "$ r18 = r0 pid file", "$ r19 = r1 pid file", "org elasticsearch env environment assert equal $ r18 $ r19 \\ `` pid file\\ ``", "$ r20 = r0 tmp file", "$ r21 = r1 tmp file", "org elasticsearch env environment assert equal $ r20 $ r21 \\ `` tmp file\\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = r0 resolve \\ `` nodes\\ ``", "$ r2 = java lang integer to string i0", "$ r3 = $ r1 resolve $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r6 = new java util array list", "specialinvoke $ r6 < init >", "$ r7 = r1 rout node", "r3 = $ r7 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r8 = r3 next", "r4 = org elasticsearch cluster rout rout node $ r8", "$ r9 = r1 deciders", "r5 = $ r9 can allocate r0 r4 r1", "$ r10 = new org elasticsearch cluster rout allocation node allocation result", "$ r11 = r4 node", "specialinvoke $ r10 < init > $ r11 null r5", "$ r6 add $ r10", "goto label1", "if $ z0 == 0 goto label2", "label return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r18 = org elasticsearch gateway metadata state format r0", "r2 = r18 get state file name l0", "i1 = lengthof r1", "i2 = 0", "label if i2 > = i1 goto label15", "r4 = r1 [ i2 ]", "$ r7 = org elasticsearch gateway metadata state format logger", "$ r7 trace \\ `` cleanup old file clean up { } \\", "r5 = r4 resolve \\ `` _state\\ ``", "label r19 = org elasticsearch gateway metadata state format r0", "r13 = r19 new directory r5", "label r14 = r13 list all", "i3 = lengthof r14", "i4 = 0", "label if i4 > = i3 goto label06", "r6 = r14 [ i4 ]", "r20 = org elasticsearch gateway metadata state format r0", "$ r8 = r20 prefix", "$ z0 = r6 start with $ r8", "if $ z0 == 0 goto label05", "$ z1 = r6 equal r2", "if $ z1 ! = 0 goto label05", "org elasticsearch gateway metadata state format delete file ignore exception r5 r13 r6", "label i4 = i4 + 1", "goto label04", "label if i4 > = i3 goto label06", "label if r13 == null goto label12", "r13 close", "goto label12", "label goto label14", "label i2 = i2 + 1", "goto label01", "label if i2 > = i1 goto label15", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [], [33], [34], [], [36], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r2 get index", "$ r4 = org elasticsearch gateway meta state service logger", "$ r4 trace \\ `` [ { } ] write state reason [ { } ] \\", "label r20 = org elasticsearch gateway meta state service r0", "$ r5 = r20 index_metadata_format", "r21 = org elasticsearch gateway meta state service r0", "$ r6 = r21 node env", "$ r7 = r2 get index", "$ r8 = $ r6 index paths $ r7", "l0 = $ r5 write r2 $ r8", "$ r9 = org elasticsearch gateway meta state service logger", "$ r9 trace \\ `` [ { } ] state written\\", "label return l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append r2", "$ r5 = $ r4 append \\ `` _path\\ ``", "$ r6 = $ r5 to string", "$ r7 = org elasticsearch index analysis analysis get word list r0 r1 $ r6 r2 1", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org elasticsearch index analysis index analyzer r0", "$ r2 = r5 analyzer", "$ r3 = $ r2 get r1", "$ r4 = org elasticsearch index analysis name analyzer $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index analysis name analyzer r0", "$ r1 = r2 analysis mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index engine commit stats r0", "$ i0 = r1 num doc", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = new org elasticsearch index engine commit stats", "r4 = org elasticsearch index engine engine r0", "$ r2 = r4 get last committed segment info", "specialinvoke r3 < init > $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "return -1l"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index engine engine config r0", "$ r1 = r2 index setting", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index engine segment stats r0", "$ l0 = r1 doc value memory in byte", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = new org elasticsearch index fielddata numeric double value $ 2", "r3 = org elasticsearch index fielddata numeric double value r0", "specialinvoke r2 < init > r3", "r4 = org apache lucene index numeric doc value r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index index setting r0", "$ r1 = r2 flush threshold size", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org elasticsearch index mapper map field type $ collapse type none", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "label $ r2 = map field type $ lambda_is aggregatable_0__1 bootstrap $", "r5 = org elasticsearch index mapper map field type r0", "r5 fielddata builder \\ `` \\", "label return 1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org elasticsearch index mapper map lookup empty", "if r0 == $ r1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if r0 == $ r1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index mapper map lookup r0", "$ r1 = r2 map", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index merge on go merge r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "if i0 > = 1 goto label1", "$ r0 = new java lang illegal argument exception", "specialinvoke $ r0 < init > \\ `` max nested depth must be > = 1\\ ``", "throw $ r0", "if i0 > = 1 goto label1", "label org elasticsearch index query bool query builder max nest depth = i0", "return"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query bool query builder r0", "$ r1 = r2 filter clause", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query bool query builder r0", "$ r1 = r2 minimum should match", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index query bool query builder r0", "$ z0 = r1 adjust pure negative", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org elasticsearch common string be empty r1", "if $ z0 == 0 goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` supplied field be null or empty \\ ``", "throw r6", "if $ z0 == 0 goto label1", "label r7 = org elasticsearch index query combine field query builder r0", "$ r2 = r7 field and boost", "$ r3 = java lang float value of 1 0f", "$ r2 put r1 $ r3", "r8 = org elasticsearch index query combine field query builder r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query functionscore function score query builder r0", "$ r1 = r2 boost mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index query geo distance query builder r0", "$ d0 = r1 distance", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org elasticsearch common string be empty r1", "if $ z0 == 0 goto label1", "r5 = new java lang illegal argument exception", "specialinvoke r5 < init > \\ `` geohash must not be null or empty\\ ``", "throw r5", "if $ z0 == 0 goto label1", "label r6 = org elasticsearch index query geo distance query builder r0", "$ r2 = r6 center", "$ r2 reset from geo hash r1", "r7 = org elasticsearch index query geo distance query builder r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query geo distance query builder r0", "$ r1 = r2 geo distance", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch index query geo polygon query builder r0", "r2 validation method = r1", "r3 = org elasticsearch index query geo polygon query builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query match bool prefix query builder r0", "$ r1 = r2 minimum should match", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query match bool prefix query builder r0", "$ r1 = r2 fuzzy rewrite", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query match query builder r0", "$ r1 = r2 analyzer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util optional of nullable r1", "$ r3 = org elasticsearch common string empty_array", "$ r4 = $ r2 or else $ r3", "$ r5 = java lang string [ ] $ r4", "r6 = org elasticsearch index query more like this query builder r0", "r6 unlike text = $ r5", "r7 = org elasticsearch index query more like this query builder r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "f0 = @ parameter1", "$ z0 = org elasticsearch common string be empty r1", "if $ z0 == 0 goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` supplied field be null or empty \\ ``", "throw r6", "if $ z0 == 0 goto label1", "label r7 = org elasticsearch index query multi match query builder r0", "r7 check negative boost f0", "r8 = org elasticsearch index query multi match query builder r0", "$ r2 = r8 field boost", "$ r3 = java lang float value of f0", "$ r2 put r1 $ r3", "r9 = org elasticsearch index query multi match query builder r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index query multi match query builder r0", "$ i0 = r1 slop", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index query nest query builder r0", "$ z0 = r1 ignore unmapped", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org elasticsearch index query match bool prefix query builder", "specialinvoke $ r2 < init > r0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = new org elasticsearch index query distance feature query builder", "specialinvoke $ r3 < init > r0 r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org elasticsearch index query query string query builder", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org elasticsearch index query boost query builder", "specialinvoke $ r2 < init > r0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org elasticsearch index query type query builder", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org elasticsearch index query script query builder", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org elasticsearch index query geo bound box query builder", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query query string query builder r0", "$ r1 = r2 analyzer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index query regexp query builder r0", "$ i0 = r1 max determinized state", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org elasticsearch index query search execution context r0", "$ r1 = r4 similarity service", "if $ r1 == null goto label1", "r5 = org elasticsearch index query search execution context r0", "$ r2 = r5 similarity service", "$ r3 = $ r2 get default similarity", "goto label2", "label return $ r3", "if $ r1 == null goto label1", "label $ r3 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org elasticsearch index query search execution context r0", "$ r4 = r6 script service", "r3 = $ r4 compile r1 r2", "$ z0 = r3 instanceof org elasticsearch script script factory", "if $ z0 == 0 goto label1", "$ r5 = org elasticsearch script script factory r3", "$ z1 = $ r5 be result deterministic", "if $ z1 ! = 0 goto label1", "r7 = org elasticsearch index query search execution context r0", "r7 fail if frozen", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index query search execution context r0", "$ z0 = r1 cacheable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index query search execution context r0", "$ i0 = r1 shard id", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index query search execution context r0", "$ i0 = r1 shard request index", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query search execution context r0", "$ r1 = r2 index setting", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch index query simple query string builder r0", "$ r1 = r3 setting", "$ r2 = $ r1 quote field suffix", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch index query simple query string builder r0", "$ r1 = r3 setting", "$ r2 = $ r1 quote field suffix", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index recovery recovery stats r0", "$ r1 = r2 current a target", "$ i0 = $ r1 get", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch index reindex bulk by scroll response r0", "$ r1 = r3 status", "$ r2 = $ r1 get reason cancel", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r4 = org elasticsearch index reindex reindex request r0", "$ r2 = r4 get search request", "$ r2 index r1", "label r5 = org elasticsearch index reindex reindex request r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org elasticsearch index reindex reindex request r0", "$ r2 = r4 get destination", "$ r2 set pipeline r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 start with \\ `` _\\ ``", "if $ z0 == 0 goto label1", "return 1", "if $ z0 == 0 goto label1", "label r12 = org elasticsearch index search nest helper r0", "$ r4 = r12 be map field predicate", "$ z1 = $ r4 test r1", "if $ z1 ! = 0 goto label2", "return 0", "if $ z1 ! = 0 goto label2", "label r11 = org elasticsearch index search nest helper parent object r1", "label if r11 == null goto label9", "r13 = org elasticsearch index search nest helper r0", "$ r5 = r13 object mapper lookup", "$ r6 = $ r5 apply r11", "r3 = org elasticsearch index mapper object mapper $ r6", "if r3 == null goto label8", "$ r7 = r3 nest", "$ z2 = $ r7 be nest", "if $ z2 == 0 goto label8", "$ r8 = r3 full path", "$ z3 = $ r8 equal r2", "if $ z3 == 0 goto label7", "$ r9 = r3 nest", "$ z4 = $ r9 be include in parent", "if $ z4 ! = 0 goto label4", "$ r10 = r3 nest", "$ z5 = $ r10 be include in root", "if $ z5 == 0 goto label5", "label $ z6 = 1", "goto label6", "label return $ z6", "if $ z5 == 0 goto label5", "label $ z6 = 0", "if $ z3 == 0 goto label7", "label return 1", "if $ z2 == 0 goto label8", "label r11 = org elasticsearch index search nest helper parent object r11", "goto label3", "label if r11 == null goto label9", "label return 1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], [39], [40], [41], [], [43], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "java util object require non null r2", "entermonitor r0", "label $ z0 = org elasticsearch index seqno replication tracker $ assertion disable", "if $ z0 ! = 0 goto label2", "r28 = org elasticsearch index seqno replication tracker r0", "$ z2 = r28 primary mode", "if $ z2 ! = 0 goto label2", "r25 = new java lang assertion error", "specialinvoke r25 < init >", "throw r25", "if $ z2 ! = 0 goto label2", "label r29 = org elasticsearch index seqno replication tracker r0", "$ r8 = r29 retention lease", "$ z1 = $ r8 contain r1", "if $ z1 ! = 0 goto label3", "r26 = new org elasticsearch index seqno retention lease not find exception", "specialinvoke r26 < init > r1", "r30 = java lang throwable r26", "throw r30", "if $ z1 ! = 0 goto label3", "label r31 = org elasticsearch index seqno replication tracker r0", "$ r10 = r31 logger", "r32 = org elasticsearch index seqno replication tracker r0", "$ r9 = r32 retention lease", "$ r10 debug \\ `` remove retention lease [ { } ] from current retention lease [ { } ] \\", "r27 = new org elasticsearch index seqno retention lease", "r33 = org elasticsearch index seqno replication tracker r0", "$ l0 = r33 operation primary term", "r34 = org elasticsearch index seqno replication tracker r0", "$ r12 = r34 retention lease", "$ l1 = $ r12 version", "$ l2 = $ l1 + 1l", "r35 = org elasticsearch index seqno replication tracker r0", "$ r13 = r35 retention lease", "$ r14 = $ r13 lease", "$ r15 = $ r14 stream", "$ r16 = replication tracker $ lambda_remove retention lease_2__3 bootstrap $ r1", "$ r17 = $ r15 filter $ r16", "$ r18 = java util stream collector to list", "$ r19 = $ r17 collect $ r18", "$ r20 = java util collection $ r19", "specialinvoke r27 < init > $ l0 $ l2 $ r20", "r36 = org elasticsearch index seqno replication tracker r0", "r36 retention lease = r27", "r37 = org elasticsearch index seqno replication tracker r0", "r3 = r37 retention lease", "exitmonitor r0", "label goto label7", "label r38 = org elasticsearch index seqno replication tracker r0", "$ r21 = r38 on sync retention lease", "$ r21 accept r3 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index seqno retention lease r0", "$ r1 = r2 source", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org elasticsearch index seqno retention lease stats r0", "$ r2 = r3 retention lease", "$ r2 write to r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = org elasticsearch index store store r0", "r5 fail if corrupt", "label r6 = org elasticsearch index store store r0", "$ r2 = r6 directory", "$ r3 = org elasticsearch index store store read segment info null $ r2", "label return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org elasticsearch index translog translog read checkpoint r0 r1", "$ l0 = r2 global checkpoint", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index translog translog stats r0", "$ l0 = r1 uncommitted size in byte", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org elasticsearch index executor selector r0", "$ r4 = r10 system indices", "r2 = $ r4 find matching descriptor r1", "$ z0 = java util object non null r2", "if $ z0 == 0 goto label1", "$ r8 = r2 get thread pool name", "$ r9 = $ r8 thread pool for search", "return $ r9", "if $ z0 == 0 goto label1", "label r11 = org elasticsearch index executor selector r0", "$ r5 = r11 system indices", "r3 = $ r5 find matching data stream descriptor r1", "$ z1 = java util object non null r3", "if $ z1 == 0 goto label2", "$ r6 = r3 get thread pool name", "$ r7 = $ r6 thread pool for search", "return $ r7", "if $ z1 == 0 goto label2", "label return \\ `` search\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org elasticsearch index index memory controller r0", "$ r2 = r6 thread pool", "$ r3 = $ r2 executor \\ `` refresh\\ ``", "r5 = new org elasticsearch index index memory controller $ 1", "r7 = org elasticsearch index index memory controller r0", "specialinvoke r5 < init > r7 r1", "r8 = java lang runnable r5", "$ r3 execute r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r7 = new org elasticsearch index recovery recovery target", "specialinvoke r7 < init > r1 r2 r3", "r8 = org elasticsearch index recovery recovery collection r0", "specialinvoke r8 start recovery internal r7 r4", "$ l0 = r7 recovery id", "return $ l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org elasticsearch index recovery recovery target r0", "$ r2 = r4 multi file writer", "$ r3 = $ r2 get temp name for file r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org elasticsearch index system index descriptor r0", "$ r4 = r8 minimum node version", "$ z0 = $ r4 on or before r1", "if $ z0 == 0 goto label1", "r9 = org elasticsearch index system index descriptor r0", "return r9", "if $ z0 == 0 goto label1", "label r10 = org elasticsearch index system index descriptor r0", "$ r5 = r10 prior system index descriptor", "r2 = $ r5 iterator", "label $ z1 = r2 have next", "if $ z1 == 0 goto label4", "$ r6 = r2 next", "r3 = org elasticsearch index system index descriptor $ r6", "$ r7 = r3 minimum node version", "$ z2 = r1 on or after $ r7", "if $ z2 == 0 goto label3", "return r3", "if $ z2 == 0 goto label3", "label goto label2", "if $ z1 == 0 goto label4", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r63 = new org elasticsearch ingest ingest document $ field path", "r74 = org elasticsearch ingest ingest document r0", "specialinvoke r63 < init > r74 r1 null", "r59 = org elasticsearch ingest ingest document $ field path access $ 100 r63", "i7 = 0", "label $ r5 = org elasticsearch ingest ingest document $ field path access $ 200 r63", "$ i1 = lengthof $ r5", "$ i2 = $ i1 - 1", "if i7 > = $ i2 goto label02", "$ r48 = org elasticsearch ingest ingest document $ field path access $ 200 r63", "$ r49 = $ r48 [ i7 ]", "r59 = org elasticsearch ingest ingest document resolve $ r49 r1 r59", "i7 = i7 + 1", "goto label01", "if i7 > = $ i2 goto label02", "label $ r6 = org elasticsearch ingest ingest document $ field path access $ 200 r63", "$ r7 = org elasticsearch ingest ingest document $ field path access $ 200 r63", "$ i3 = lengthof $ r7", "$ i4 = $ i3 - 1", "r60 = $ r6 [ $ i4 ]", "$ z0 = r59 instanceof java util map", "if $ z0 == 0 goto label04", "r61 = java util map r59", "$ z2 = r61 contain key r60", "if $ z2 == 0 goto label03", "r61 remove r60", "return", "if $ z2 == 0 goto label03", "label r65 = new java lang illegal argument exception", "r64 = new java lang string builder", "specialinvoke r64 < init >", "$ r41 = r64 append \\ `` field [ \\ ``", "$ r42 = $ r41 append r60", "$ r43 = $ r42 append \\ `` ] not present a part of path [ \\ ``", "$ r44 = $ r43 append r1", "$ r45 = $ r44 append \\ `` ] \\ ``", "$ r46 = $ r45 to string", "specialinvoke r65 < init > $ r46", "throw r65", "if $ z0 == 0 goto label04", "label $ z1 = r59 instanceof java util list", "if $ z1 == 0 goto label11", "r62 = java util list r59", "label i0 = java lang integer parse int r60", "label goto label08", "label if i0 < 0 goto label09", "$ i6 = r62 size", "if i0 < $ i6 goto label10", "label r69 = new java lang illegal argument exception", "r68 = new java lang string builder", "specialinvoke r68 < init >", "$ r30 = r68 append \\ `` [ \\ ``", "$ r31 = $ r30 append i0", "$ r32 = $ r31 append \\ `` ] be out of bound for array with length [ \\ ``", "$ i5 = r62 size", "$ r33 = $ r32 append $ i5", "$ r34 = $ r33 append \\ `` ] a part of path [ \\ ``", "$ r35 = $ r34 append r1", "$ r36 = $ r35 append \\ `` ] \\ ``", "$ r37 = $ r36 to string", "specialinvoke r69 < init > $ r37", "throw r69", "if i0 < $ i6 goto label10", "label r62 remove i0", "if $ z1 == 0 goto label11", "label if r59 ! = null goto label12", "r71 = new java lang illegal argument exception", "r70 = new java lang string builder", "specialinvoke r70 < init >", "$ r22 = r70 append \\ `` can not remove [ \\ ``", "$ r23 = $ r22 append r60", "$ r24 = $ r23 append \\ `` ] from null a part of path [ \\ ``", "$ r25 = $ r24 append r1", "$ r26 = $ r25 append \\ `` ] \\ ``", "$ r27 = $ r26 to string", "specialinvoke r71 < init > $ r27", "throw r71", "label if r59 ! = null goto label12", "label r73 = new java lang illegal argument exception", "r72 = new java lang string builder", "specialinvoke r72 < init >", "$ r10 = r72 append \\ `` can not remove [ \\ ``", "$ r11 = $ r10 append r60", "$ r12 = $ r11 append \\ `` ] from object of type [ \\ ``", "$ r13 = r59 get class", "$ r14 = $ r13 get name", "$ r15 = $ r12 append $ r14", "$ r16 = $ r15 append \\ `` ] a part of path [ \\ ``", "$ r17 = $ r16 append r1", "$ r18 = $ r17 append \\ `` ] \\ ``", "$ r19 = $ r18 to string", "specialinvoke r73 < init > $ r19", "throw r73"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = java util collection empty list", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch plugins plugin info r0", "$ r1 = r2 classname", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch plugins plugin info r0", "$ r1 = r2 version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r12 = org elasticsearch repository blobstore checksum blob store format r0", "r5 = r12 blob name r3", "r6 = r2 read blob r5", "label r13 = org elasticsearch repository blobstore checksum blob store format r0", "r10 = r13 deserialize r1 r4 r6", "label if r6 == null goto label3", "r6 close", "label return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ z0 = r3 instanceof org elasticsearch rest base rest handler", "if $ z0 == 0 goto label1", "r9 = org elasticsearch rest rest controller r0", "$ r8 = r9 usage service", "$ r7 = org elasticsearch rest base rest handler r3", "$ r8 add rest handler $ r7", "label r10 = org elasticsearch rest rest controller r0", "$ r4 = r10 handler wrapper", "$ r5 = $ r4 apply r3", "$ r6 = org elasticsearch rest rest handler $ r5", "r11 = org elasticsearch rest rest controller r0", "specialinvoke r11 register handler no wrap r1 r2 $ r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = java util collection empty map", "$ r4 = new org elasticsearch rest rest request", "$ r5 = r1 uri", "$ r6 = r1 get header", "$ r7 = org elasticsearch rest rest request request id generator", "$ l0 = $ r7 increment and get", "specialinvoke $ r4 < init > r0 r3 $ r5 $ r6 r1 r2 $ l0", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "label r7 = org elasticsearch script abstract sort script r0", "$ r2 = r7 scorer", "$ f0 = $ r2 score", "$ d0 = double $ f0", "label return $ d0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch script field script r0", "$ r1 = r2 leaf lookup", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r1 start object", "r47 = org elasticsearch script script r0", "$ r8 = r47 option", "if $ r8 ! = null goto label01", "$ r43 = null", "goto label02", "label r49 = org elasticsearch script script r0", "$ r12 = r49 type", "$ r11 = org elasticsearch script script type inline", "if $ r12 ! = $ r11 goto label12", "if $ r43 == null goto label11", "$ r34 = r1 content type", "$ r35 = $ r34 medium type", "$ z1 = $ r35 equal $ r43", "if $ z1 == 0 goto label11", "r46 = new org elasticsearch common bytes byte array", "r50 = org elasticsearch script script r0", "$ r37 = r50 id or code", "specialinvoke r46 < init > $ r37", "r4 = r46 stream input", "label $ r38 = org elasticsearch script script source_parse_field", "$ r39 = $ r38 get prefer name", "r51 = java io input stream r4", "r1 raw field $ r39 r51", "label if r4 == null goto label10", "r52 = java io input stream r4", "r52 close", "goto label10", "label goto label13", "label r56 = org elasticsearch script script r0", "$ r44 = r56 lang", "if $ r44 == null goto label14", "$ r26 = org elasticsearch script script lang_parse_field", "$ r27 = $ r26 get prefer name", "r57 = org elasticsearch script script r0", "$ r28 = r57 lang", "r1 field $ r27 $ r28", "label r58 = org elasticsearch script script r0", "$ r15 = r58 option", "if $ r15 == null goto label15", "r59 = org elasticsearch script script r0", "$ r21 = r59 option", "$ z0 = $ r21 be empty", "if $ z0 ! = 0 goto label15", "$ r22 = org elasticsearch script script options_parse_field", "$ r23 = $ r22 get prefer name", "r60 = org elasticsearch script script r0", "$ r24 = r60 option", "r1 field $ r23 $ r24", "label r61 = org elasticsearch script script r0", "$ r45 = r61 params", "$ z2 = $ r45 be empty", "if $ z2 ! = 0 goto label16", "$ r17 = org elasticsearch script script params_parse_field", "$ r18 = $ r17 get prefer name", "r62 = org elasticsearch script script r0", "$ r19 = r62 params", "r1 field $ r18 $ r19", "label r1 end object", "return r1", "if $ z1 == 0 goto label11", "label $ r30 = org elasticsearch script script source_parse_field", "$ r31 = $ r30 get prefer name", "r54 = org elasticsearch script script r0", "$ r32 = r54 id or code", "r1 field $ r31 $ r32", "goto label13", "if $ r12 ! = $ r11 goto label12", "label r55 = org elasticsearch script script r0", "$ r13 = r55 id or code", "r1 field \\ `` id\\", "if $ r8 ! = null goto label01", "label r48 = org elasticsearch script script r0", "$ r9 = r48 option", "$ r10 = $ r9 get \\ `` content_type\\ ``", "$ r43 = java lang string $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [], [64], [65], [66], [67], [68], [69], [], [71], [72], [73], [74], [75], [76], [77], [78], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search aggregation aggregation builder r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch search aggregation aggregation builder r0", "$ r1 = r3 factory builder", "$ r2 = $ r1 get pipeline aggregator factory", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r10 = org elasticsearch search aggregation aggregator factory r0", "$ i0 = r10 count aggregator", "r3 = newarray org elasticsearch search aggregation aggregator [ $ i0 ]", "i2 = 0", "label r11 = org elasticsearch search aggregation aggregator factory r0", "$ r4 = r11 factory", "$ i1 = lengthof $ r4", "if i2 > = $ i1 goto label2", "r12 = org elasticsearch search aggregation aggregator factory r0", "$ r7 = r12 context", "r13 = org elasticsearch search aggregation aggregator factory r0", "$ r5 = r13 factory", "$ r6 = $ r5 [ i2 ]", "$ r8 = $ r6 create r1 r2", "$ r9 = $ r7 profile if enable $ r8", "r3 [ i2 ] = $ r9", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search aggregation bucket composite composite value source builder r0", "$ r1 = r2 script", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search aggregation bucket composite composite value source builder r0", "$ z0 = r1 miss bucket", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org elasticsearch search aggregation bucket geogrid geo tile utils parse hash r0", "$ i0 = r1 [ 0 ]", "$ l5 = long $ i0", "$ i1 = r1 [ 1 ]", "$ l4 = long $ i1", "$ i2 = r1 [ 2 ]", "$ l3 = long $ i2", "$ l6 = org elasticsearch search aggregation bucket geogrid geo tile utils long encode $ l5 $ l4 $ l3", "return $ l6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search aggregation bucket histogram date histogram aggregation builder r0", "$ z0 = r1 key", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search aggregation bucket histogram date histogram aggregation builder r0", "$ l0 = r1 offset", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "d1 = @ parameter2", "r6 = new org elasticsearch search aggregation bucket range range aggregator $ range", "$ r3 = java lang double value of d0", "$ r4 = java lang double value of d1", "specialinvoke r6 < init > r1 $ r3 $ r4", "r7 = org elasticsearch search aggregation bucket range date range aggregation builder r0", "r7 add range r6", "r8 = org elasticsearch search aggregation bucket range date range aggregation builder r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search aggregation bucket sampler diversified aggregation builder r0", "$ i0 = r1 max doc per value", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ b1 = l0 cmp 0l", "if $ b1 > = 0 goto label1", "r12 = new java lang illegal argument exception", "r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r4 = r11 append \\ `` [ shard min doc count ] must be great than or equal to 0 find [ \\ ``", "$ r5 = $ r4 append l0", "$ r6 = $ r5 append \\ `` ] in [ \\ ``", "r13 = org elasticsearch search aggregation bucket term significant term aggregation builder r0", "$ r7 = r13 name", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 append \\ `` ] \\ ``", "$ r10 = $ r9 to string", "specialinvoke r12 < init > $ r10", "throw r12", "if $ b1 > = 0 goto label1", "label r14 = org elasticsearch search aggregation bucket term significant term aggregation builder r0", "$ r1 = r14 bucket count threshold", "$ r1 set shard min doc count l0", "r15 = org elasticsearch search aggregation bucket term significant term aggregation builder r0", "return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search aggregation bucket term term aggregation builder r0", "$ r1 = r2 collect mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org elasticsearch search aggregation bucket order r0", "r3 partially build bucket comparator null r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r7 = internal aggregation $ lambda_top level reduce_4__3 bootstrap $ r1", "r2 = org elasticsearch search aggregation internal aggregation reduce r0 r1 $ r7", "if r2 ! = null goto label1", "return null", "if r2 ! = null goto label1", "label $ z0 = r1 be final reduce", "if $ z0 == 0 goto label4", "r18 = specialinvoke r2 get internal aggregation", "$ r8 = r18 stream", "$ r9 = internal aggregation $ lambda_top level reduce_5__7 bootstrap $ r1", "$ r10 = $ r8 map $ r9", "$ r11 = java util stream collector to list", "$ r12 = $ r10 collect $ r11", "r19 = java util list $ r12", "$ r13 = r1 pipeline tree root", "$ r14 = $ r13 aggregator", "r3 = $ r14 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label3", "$ r16 = r3 next", "r4 = org elasticsearch search aggregation pipeline pipeline aggregator $ r16", "r5 = org elasticsearch search aggregation pipeline sibling pipeline aggregator r4", "$ r17 = org elasticsearch search aggregation internal aggregation from r19", "r20 = org elasticsearch search aggregation aggregation $ r17", "r6 = r5 do reduce r20 r1", "r19 add r6", "goto label2", "if $ z1 == 0 goto label3", "label $ r15 = org elasticsearch search aggregation internal aggregation from r19", "return $ r15", "if $ z0 == 0 goto label4", "label return r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [], [33], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org elasticsearch search aggregation internal order count_desc", "r2 = org elasticsearch search aggregation bucket order $ r1", "$ z0 = org elasticsearch search aggregation internal order be order r0 r2", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org elasticsearch search aggregation internal order key_desc", "r2 = org elasticsearch search aggregation bucket order $ r1", "$ z0 = org elasticsearch search aggregation internal order be order r0 r2", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search aggregation metric abstract internal h d r percentile r0", "$ r1 = r2 key", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search aggregation metric abstract internal h d r percentile r0", "$ z0 = r1 key", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search aggregation metric median absolute deviation aggregation builder r0", "$ d0 = r1 compression", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search aggregation metric top hit aggregation builder r0", "$ i0 = r1 size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r14 = new java lang illegal argument exception", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r8 = r13 append \\ `` [ field ] must not be null [ \\ ``", "r15 = org elasticsearch search aggregation metric top hit aggregation builder r0", "$ r9 = r15 name", "$ r10 = $ r8 append $ r9", "$ r11 = $ r10 append \\ `` ] \\ ``", "$ r12 = $ r11 to string", "specialinvoke r14 < init > $ r12", "throw r14", "if r1 ! = null goto label1", "label r16 = org elasticsearch search aggregation metric top hit aggregation builder r0", "$ r2 = r16 store field context", "if $ r2 ! = null goto label2", "$ r5 = org elasticsearch search fetch store field context from list r1", "r17 = org elasticsearch search aggregation metric top hit aggregation builder r0", "r17 store field context = $ r5", "goto label3", "label r19 = org elasticsearch search aggregation metric top hit aggregation builder r0", "return r19", "if $ r2 ! = null goto label2", "label r18 = org elasticsearch search aggregation metric top hit aggregation builder r0", "$ r3 = r18 store field context", "$ r3 add field name r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [], [23], [], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search aggregation metric top hit aggregation builder r0", "$ z0 = r1 explain", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch search aggregation pipeline abstract pipeline aggregation builder r0", "$ r2 = r3 metadata", "r4 = org elasticsearch search aggregation pipeline abstract pipeline aggregation builder r0", "r1 = r4 create internal $ r2", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search aggregation pipeline mov avg pipeline aggregation builder r0", "$ i0 = r1 window", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search aggregation pipeline mov avg pipeline aggregation builder r0", "$ r1 = r2 model", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search aggregation pipeline mov avg pipeline aggregation builder r0", "$ i0 = r1 predict", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search aggregation pipeline mov fn pipeline aggregation builder r0", "$ i0 = r1 window", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > 0 goto label1", "r10 = new java lang illegal argument exception", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r3 = r9 append \\ `` [ \\ ``", "$ r4 = org elasticsearch search aggregation pipeline mov fn pipeline aggregation builder window", "$ r5 = $ r4 get prefer name", "$ r6 = $ r3 append $ r5", "$ r7 = $ r6 append \\ `` ] must be a positive non-zero integer \\ ``", "$ r8 = $ r7 to string", "specialinvoke r10 < init > $ r8", "throw r10", "if i0 > 0 goto label1", "label r11 = org elasticsearch search aggregation pipeline mov fn pipeline aggregation builder r0", "r11 window = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "d0 = @ parameter1", "d1 = @ parameter2", "$ i0 = lengthof r0", "if $ i0 ! = 0 goto label1", "return #na n", "if $ i0 ! = 0 goto label1", "label $ r1 = org elasticsearch search aggregation pipeline move function holt forecast r0 d0 d1 1", "$ d2 = $ r1 [ 0 ]", "return $ d2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r9 = new java util array list", "r10 = org elasticsearch search aggregation top bucket builder r0", "$ r3 = r10 queue", "$ i0 = $ r3 size", "specialinvoke r9 < init > $ i0", "r11 = org elasticsearch search aggregation top bucket builder r0", "$ r4 = r11 queue", "$ i1 = $ r4 size", "i2 = $ i1 - 1", "label if i2 < 0 goto label2", "r12 = org elasticsearch search aggregation top bucket builder r0", "$ r5 = r12 queue", "$ r6 = $ r5 pop", "$ r7 = org elasticsearch search aggregation delay bucket $ r6", "$ r8 = $ r7 reduce", "r9 add $ r8", "i2 = i2 + -1", "goto label1", "label if i2 < 0 goto label2", "label java util collection reverse r9", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search builder search source builder r0", "$ r1 = r2 aggregation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org elasticsearch search builder search source builder r0", "$ r2 = r3 rewrite r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r9 = org elasticsearch search builder search source builder r0", "$ r7 = r9 query builder", "r10 = org elasticsearch search builder search source builder r0", "$ r6 = r10 post query builder", "r11 = org elasticsearch search builder search source builder r0", "$ r5 = r11 aggregation", "r12 = org elasticsearch search builder search source builder r0", "$ r4 = r12 slice builder", "r13 = org elasticsearch search builder search source builder r0", "$ r3 = r13 sort", "r14 = org elasticsearch search builder search source builder r0", "$ r2 = r14 rescore builder", "r15 = org elasticsearch search builder search source builder r0", "$ r1 = r15 highlight builder", "r16 = org elasticsearch search builder search source builder r0", "$ r8 = specialinvoke r16 shallow copy $ r7 $ r6 $ r5 $ r4 $ r3 $ r2 $ r1", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["l0 = @ parameter0", "$ z0 = org elasticsearch search dfs dfs search result $ assertion disable", "if $ z0 ! = 0 goto label1", "$ b2 = l0 cmp 0l", "if $ b2 > = 0 goto label1", "$ r0 = new java lang assertion error", "specialinvoke $ r0 < init >", "throw $ r0", "if $ b2 > = 0 goto label1", "label $ l1 = l0 - 1l", "return $ l1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r5 = org elasticsearch search fetch fetch context r0", "$ r1 = r5 search context", "$ r2 = $ r1 index shard", "$ r3 = $ r2 shard id", "$ r4 = $ r3 get index name", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch search fetch fetch context r0", "$ r1 = r3 search context", "$ r2 = $ r1 fetch source context", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search fetch fetch context r0", "$ r1 = r2 search context", "$ z0 = $ r1 version", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search fetch store field context r0", "$ z0 = r1 fetch field", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search fetch subphase highlight abstract highlighter builder r0", "$ r1 = r2 no match size", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org elasticsearch search internal reader context r0", "$ r2 = r5 context", "if $ r2 == null goto label1", "r6 = org elasticsearch search internal reader context r0", "$ r3 = r6 context", "$ r4 = $ r3 get r1", "goto label2", "label return $ r4", "if $ r2 == null goto label1", "label $ r4 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org elasticsearch search lookup source lookup r0", "$ r2 = r4 source", "$ r3 = org elasticsearch common xcontent support x content map value extract raw value r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ z0 = org elasticsearch search profile query internal query profile tree $ assertion disable", "if $ z0 ! = 0 goto label1", "r3 = org elasticsearch search profile query internal query profile tree r0", "$ l1 = r3 rewrite scratch", "$ b2 = $ l1 cmp 0l", "if $ b2 == 0 goto label1", "r2 = new java lang assertion error", "specialinvoke r2 < init >", "throw r2", "if $ b2 == 0 goto label1", "label $ l0 = java lang system nano time", "r4 = org elasticsearch search profile query internal query profile tree r0", "r4 rewrite scratch = $ l0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch search profile query query profiler r0", "$ r1 = r3 profile tree", "$ r2 = org elasticsearch search profile query internal query profile tree $ r1", "$ r2 start rewrite time", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch search profile query query profiler r0", "$ r1 = r3 collector", "$ r2 = $ r1 get collector tree", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org elasticsearch search query query search result r0", "$ r2 = r5 profile shard result", "if $ r2 ! = null goto label1", "r4 = new java lang illegal state exception", "specialinvoke r4 < init > \\ `` profile result already consumed\\ ``", "throw r4", "if $ r2 ! = null goto label1", "label r6 = org elasticsearch search query query search result r0", "r1 = r6 profile shard result", "r7 = org elasticsearch search query query search result r0", "r7 profile shard result = null", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search rescore rescore context r0", "$ i0 = r1 window size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search search hit r0", "$ l0 = r1 version", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search search hit r0", "$ r1 = r2 shard", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org elasticsearch search search service r0", "$ r2 = specialinvoke r3 can match r1 1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r18 = new java lang string builder", "specialinvoke r18 < init >", "l9 = 0l", "label r19 = org elasticsearch search sort bucket sort r0", "$ r3 = r19 value", "$ l0 = $ r3 size", "$ b1 = l9 cmp $ l0", "if $ b1 > = 0 goto label3", "r20 = org elasticsearch search sort bucket sort r0", "$ i2 = r20 bucket size", "$ l3 = long $ i2", "$ l4 = l9 % $ l3", "$ b5 = $ l4 cmp 0l", "if $ b5 ! = 0 goto label2", "$ r11 = r18 append 10", "$ r13 = java util locale root", "$ r12 = newarray java lang object [ 1 ]", "r21 = org elasticsearch search sort bucket sort r0", "$ i6 = r21 bucket size", "$ l7 = long $ i6", "$ l8 = l9 $ l7", "$ r14 = java lang long value of $ l8", "$ r12 [ 0 ] = $ r14", "$ r15 = java lang string format $ r13 \\ `` % 20d\\", "$ r16 = $ r11 append $ r15", "$ r16 append \\ `` \\ ``", "label $ r6 = java util locale root", "$ r5 = newarray java lang object [ 1 ]", "r22 = org elasticsearch search sort bucket sort r0", "$ r7 = r22 get value l9", "$ r5 [ 0 ] = $ r7", "$ r8 = java lang string format $ r6 \\ `` % 20s\\", "$ r9 = r18 append $ r8", "$ r9 append 32", "l9 = l9 + 1l", "goto label1", "if $ b1 > = 0 goto label3", "label $ r4 = r18 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], [39], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "r4 = org elasticsearch search sort geo distance sort builder r0", "$ r2 = r4 point", "r3 = new org elasticsearch common geo geo point", "specialinvoke r3 < init > d0 d1", "$ r2 add r3", "r5 = org elasticsearch search sort geo distance sort builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search sort geo distance sort builder r0", "$ r1 = r2 nest filter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 regex r1", "r3 = org elasticsearch search suggest completion completion suggestion builder r0", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search suggest completion fuzzy option r0", "$ i0 = r1 fuzzy prefix length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search suggest phrase direct candidate generator builder r0", "$ r1 = r2 prefix length", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search suggest phrase phrase suggestion builder r0", "$ r1 = r2 gram size", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch search suggest phrase phrase suggestion builder r0", "r2 model = r1", "r3 = org elasticsearch search suggest phrase phrase suggestion builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search suggest phrase phrase suggestion builder r0", "$ r1 = r2 collate query", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org elasticsearch search suggest term term suggestion builder", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search suggest term term suggestion builder r0", "$ i0 = r1 max edit", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = restore service $ lambda_restore snapshot_0__9 bootstrap $", "r4 = org elasticsearch snapshot restore service r0", "r4 restore snapshot r1 r2 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org elasticsearch snapshot snapshot shard failure snapshot_shard_failure_parser", "$ r2 = $ r1 parse r0 null", "$ r3 = org elasticsearch snapshot snapshot shard failure $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch task cancellable task r0", "$ r1 = r2 reason", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch task task r0", "$ r1 = r2 description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch task task r0", "$ r1 = r2 parent task", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch task task info r0", "$ r1 = r2 status", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r24 = org elasticsearch transport remote cluster service r0", "$ r3 = r24 transport service", "$ r4 = $ r3 get remote cluster service", "$ z0 = $ r4 be enable", "if $ z0 ! = 0 goto label1", "r21 = new java lang illegal argument exception", "r20 = new java lang string builder", "specialinvoke r20 < init >", "$ r14 = r20 append \\ `` this node do not have the \\ ``", "$ r15 = org elasticsearch cluster node discovery node role remote_cluster_client_role", "$ r16 = $ r15 role name", "$ r17 = $ r14 append $ r16", "$ r18 = $ r17 append \\ `` role\\ ``", "$ r19 = $ r18 to string", "specialinvoke r21 < init > $ r19", "throw r21", "if $ z0 ! = 0 goto label1", "label r25 = org elasticsearch transport remote cluster service r0", "$ r5 = r25 transport service", "$ r6 = $ r5 get remote cluster service", "$ r7 = $ r6 get remote cluster name", "$ z1 = $ r7 contain r2", "if $ z1 ! = 0 goto label2", "r22 = new org elasticsearch transport no such remote cluster exception", "specialinvoke r22 < init > r2", "r26 = java lang throwable r22", "throw r26", "if $ z1 ! = 0 goto label2", "label r23 = new org elasticsearch transport remote cluster aware client", "r27 = org elasticsearch transport remote cluster service r0", "$ r10 = r27 setting", "r28 = org elasticsearch transport remote cluster service r0", "$ r9 = r28 transport service", "specialinvoke r23 < init > $ r10 r1 $ r9 r2", "r29 = org elasticsearch client client r23", "return r29"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "r6 = @ parameter6", "r7 = @ parameter7", "r8 = @ parameter8", "r9 = @ parameter9", "$ r10 = newarray java lang object [ 10 ]", "$ r10 [ 0 ] = r0", "$ r10 [ 1 ] = r1", "$ r10 [ 2 ] = r2", "$ r10 [ 3 ] = r3", "$ r10 [ 4 ] = r4", "$ r10 [ 5 ] = r5", "$ r10 [ 6 ] = r6", "$ r10 [ 7 ] = r7", "$ r10 [ 8 ] = r8", "$ r10 [ 9 ] = r9", "$ r11 = org elasticsearch core map map n $ r10", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["$ r0 = java lang system get property \\ `` java class path\\ ``", "$ r1 = org elasticsearch jdk jar hell parse class path $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch client heap buffer async response consumer r0", "$ i0 = r1 buffer limit bytes", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client request r0", "$ r1 = r2 method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch client analytics parse string stats r0", "$ d0 = r1 entropy", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client asyncsearch async search response r0", "$ r1 = r2 error", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org elasticsearch client asyncsearch submit async search request r0", "$ r2 = r4 search request", "$ r2 request cache r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client ccr client r0", "$ r3 = r9 rest high level client", "$ r4 = ccr client $ unfollow__10 bootstrap $", "$ r5 = ccr client $ from x content__18 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client core acknowledge response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client ccr client r0", "$ r3 = r9 rest high level client", "$ r4 = ccr client $ delete auto follow pattern__14 bootstrap $", "$ r5 = ccr client $ from x content__23 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client core acknowledge response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch client core indexer job stats r0", "$ l0 = r1 search total", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org elasticsearch client core term vector request r0", "r1 request payload = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org elasticsearch client core term vector request r0", "r1 realtime = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client core term vector response r0", "$ r1 = r2 term vector list", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client enrich client r0", "$ r3 = r9 rest high level client", "$ r4 = enrich client $ get policy__10 bootstrap $", "$ r5 = enrich client $ from x content__16 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client enrich get policy response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client enrich client r0", "$ r3 = r9 rest high level client", "$ r4 = enrich client $ stats__1 bootstrap $", "$ r5 = enrich client $ from x content__15 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client enrich stats response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org elasticsearch client graph vertex request r0", "$ r2 = r9 include", "if $ r2 == null goto label1", "r7 = new java lang illegal argument exception", "specialinvoke r7 < init > \\ `` can not have both include and exclude clauses\\ ``", "throw r7", "if $ r2 == null goto label1", "label r10 = org elasticsearch client graph vertex request r0", "$ r3 = r10 exclude", "if $ r3 ! = null goto label2", "r8 = new java util hash set", "specialinvoke r8 < init >", "r11 = org elasticsearch client graph vertex request r0", "r11 exclude = r8", "label r12 = org elasticsearch client graph vertex request r0", "$ r4 = r12 exclude", "$ r4 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "f0 = @ parameter1", "r12 = org elasticsearch client graph vertex request r0", "$ r2 = r12 exclude", "if $ r2 == null goto label1", "r9 = new java lang illegal argument exception", "specialinvoke r9 < init > \\ `` can not have both include and exclude clauses\\ ``", "throw r9", "if $ r2 == null goto label1", "label r13 = org elasticsearch client graph vertex request r0", "$ r3 = r13 include", "if $ r3 ! = null goto label2", "r10 = new java util hash map", "specialinvoke r10 < init >", "r14 = org elasticsearch client graph vertex request r0", "r14 include = r10", "label r15 = org elasticsearch client graph vertex request r0", "$ r5 = r15 include", "r11 = new org elasticsearch client graph graph explore request $ term boost", "specialinvoke r11 < init > r1 f0", "$ r5 put r1 r11", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client index lifecycle client r0", "$ r3 = r9 rest high level client", "$ r4 = index lifecycle client $ delete lifecycle policy__10 bootstrap $", "$ r5 = index lifecycle client $ from x content__24 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client core acknowledge response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client index lifecycle client r0", "$ r3 = r9 rest high level client", "$ r4 = index lifecycle client $ get snapshot lifecycle policy__33 bootstrap $", "$ r5 = index lifecycle client $ from x content__39 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client slm get snapshot lifecycle policy response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client index lifecycle client r0", "$ r3 = r9 rest high level client", "$ r4 = index lifecycle client $ snapshot lifecycle management status__67 bootstrap $", "$ r5 = index lifecycle client $ from x content__70 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client indexlifecycle lifecycle management status response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client index analyze request r0", "$ r1 = r2 normalizer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client index analyze request r0", "$ r1 = r2 tokenizer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client index close index request r0", "$ r1 = r2 index", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client index freeze index request r0", "$ r1 = r2 index", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch client index get mapping request r0", "$ z0 = r1 local", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client index rollover rollover request r0", "$ r1 = r2 alias", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client index client r0", "$ r3 = r9 rest high level client", "$ r4 = indices client $ get mappings__37 bootstrap $", "$ r5 = index client $ from x content__41 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch action admin index map get get mapping response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client index client r0", "$ r4 = r9 rest high level client", "$ r5 = indices client $ update aliases__43 bootstrap $", "$ r6 = index client $ from x content__47 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client index client r0", "$ r4 = r9 rest high level client", "$ r5 = indices client $ refresh__69 bootstrap $", "$ r6 = index client $ from x content__80 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client index client r0", "$ r4 = r9 rest high level client", "$ r5 = indices client $ clear cache__96 bootstrap $", "$ r6 = index client $ from x content__102 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client index client r0", "$ r4 = r9 rest high level client", "$ r5 = indices client $ index exist__103 bootstrap $", "$ r6 = index client $ convert exist response__116 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r8 = $ r4 perform request async r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client index client r0", "$ r3 = r9 rest high level client", "$ r4 = indices client $ split__116 bootstrap $", "$ r5 = index client $ from x content__124 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch action admin index shrink resize response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client index client r0", "$ r4 = r9 rest high level client", "$ r5 = indices client $ clone__129 bootstrap $", "$ r6 = index client $ from x content__138 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client index client r0", "$ r3 = r9 rest high level client", "$ r4 = indices client $ freeze index__187 bootstrap $", "$ r5 = index client $ from x content__204 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client core shard acknowledge response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client index client r0", "$ r4 = r9 rest high level client", "$ r5 = indices client $ freeze index__194 bootstrap $", "$ r6 = index client $ from x content__205 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client ingest client r0", "$ r3 = r9 rest high level client", "$ r4 = ingest client $ put pipeline__7 bootstrap $", "$ r5 = ingest client $ from x content__15 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch action support master acknowledge response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client ingest client r0", "$ r4 = r9 rest high level client", "$ r5 = ingest client $ put pipeline__1 bootstrap $", "$ r6 = ingest client $ from x content__11 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client license client r0", "$ r4 = r9 rest high level client", "$ r5 = license client $ get license__3 bootstrap $", "$ r6 = license client $ lambda_get license async_1__24 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client license client r0", "$ r3 = r9 rest high level client", "$ r4 = license client $ delete license__6 bootstrap $", "$ r5 = license client $ from x content__21 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch action support master acknowledge response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client machine learn client r0", "$ r3 = r9 rest high level client", "$ r4 = machine learn client $ get job__13 bootstrap $", "$ r5 = machine learn client $ from x content__29 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client ml get job response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client machine learn client r0", "$ r3 = r9 rest high level client", "$ r4 = machine learn client $ delete expire data__7 bootstrap $", "$ r5 = machine learn client $ from x content__22 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client ml delete expire data response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client machine learn client r0", "$ r4 = r9 rest high level client", "$ r5 = machine learn client $ open job__10 bootstrap $", "$ r6 = machine learn client $ from x content__17 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client machine learn client r0", "$ r4 = r9 rest high level client", "$ r5 = machine learn client $ close job__13 bootstrap $", "$ r6 = machine learn client $ from x content__28 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client machine learn client r0", "$ r3 = r9 rest high level client", "$ r4 = machine learn client $ put datafeed__40 bootstrap $", "$ r5 = machine learn client $ from x content__45 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client ml put datafeed response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client machine learn client r0", "$ r4 = r9 rest high level client", "$ r5 = machine learn client $ put datafeed__41 bootstrap $", "$ r6 = machine learn client $ from x content__46 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client machine learn client r0", "$ r4 = r9 rest high level client", "$ r5 = machine learn client $ update model snapshot__102 bootstrap $", "$ r6 = machine learn client $ from x content__106 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client machine learn client r0", "$ r3 = r9 rest high level client", "$ r4 = machine learn client $ get calendars__117 bootstrap $", "$ r5 = machine learn client $ from x content__131 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client ml get calendar response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client machine learn client r0", "$ r3 = r9 rest high level client", "$ r4 = machine learn client $ put calendar job__126 bootstrap $", "$ r5 = machine learn client $ from x content__140 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client ml put calendar response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client machine learn client r0", "$ r3 = r9 rest high level client", "$ r4 = machine learn client $ get calendar events__137 bootstrap $", "$ r5 = machine learn client $ from x content__150 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client ml get calendar event response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client machine learn client r0", "$ r4 = r9 rest high level client", "$ r5 = machine learn client $ set upgrade mode__174 bootstrap $", "$ r6 = machine learn client $ from x content__182 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client machine learn client r0", "$ r3 = r9 rest high level client", "$ r4 = machine learn client $ get data frame analytics stats__193 bootstrap $", "$ r5 = machine learn client $ from x content__214 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client ml get data frame analytics stats response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client machine learn client r0", "$ r3 = r9 rest high level client", "$ r4 = machine learn client $ start data frame analytics__197 bootstrap $", "$ r5 = machine learn client $ from x content__208 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client ml start data frame analytics response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client machine learn client r0", "$ r3 = r9 rest high level client", "$ r4 = machine learn client $ delete data frame analytics__201 bootstrap $", "$ r5 = machine learn client $ from x content__217 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch action support master acknowledge response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client machine learn client r0", "$ r3 = r9 rest high level client", "$ r4 = machine learn client $ explain data frame analytics__212 bootstrap $", "$ r5 = machine learn client $ from x content__216 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client ml explain data frame analytics response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client migration client r0", "$ r4 = r9 rest high level client", "$ r5 = migration client $ get deprecation info__1 bootstrap $", "$ r6 = migration client $ from x content__4 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = java lang boolean value of z0", "r2 = org elasticsearch client ml close job request r0", "r2 allow no match = $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch client ml close job response r0", "$ z0 = r1 close", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch client ml delete data frame analytics request r0", "r2 timeout = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client ml delete expire data request r0", "$ r1 = r2 request per second", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client ml forecast job response r0", "$ r1 = r2 forecast id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = java lang boolean value of z0", "r2 = org elasticsearch client ml get bucket request r0", "r2 descend = $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = new org elasticsearch client ml get datafeed request", "$ r1 = newarray java lang string [ 1 ]", "$ r1 [ 0 ] = \\ `` _all\\ ``", "specialinvoke $ r0 < init > $ r1", "return $ r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = java lang boolean value of z0", "r2 = org elasticsearch client ml get datafeed request r0", "r2 allow no match = $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client ml get overall bucket response r0", "$ r1 = r2 result", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client ml get record response r0", "$ r1 = r2 result", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch client ml inference trainedmodel inference stats r0", "$ l0 = r1 cache miss count", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client ml job config data description r0", "$ r1 = r2 quote character", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client ml job config job r0", "$ r1 = r2 analysis limit", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client ml job config job r0", "$ r1 = r2 data description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client ml job config job r0", "$ r1 = r2 background persist interval", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch client ml job process data count r0", "$ l0 = r1 invalid date count", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client ml job process model size stats r0", "$ r1 = r2 timestamp", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch client ml job result anomaly record r0", "$ l0 = r1 bucket span", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client ml job stats job stats r0", "$ r1 = r2 data count", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client ml job stats job stats r0", "$ r1 = r2 forecast stats", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client ml job stats job stats r0", "$ r1 = r2 state", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch client ml set upgrade mode request r0", "r2 timeout = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch client node response header r0", "$ i0 = r1 fail", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client rest high level client r0", "$ r1 = r2 transform client", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = rest high level client $ submit reindex__2 bootstrap $", "$ r4 = rest high level client $ from x content__19 bootstrap $", "$ r5 = java util collection empty set", "r8 = org elasticsearch client rest high level client r0", "r9 = org elasticsearch action action request r1", "$ r6 = r8 perform request and parse entity r9 $ r3 r2 $ r4 $ r5", "$ r7 = org elasticsearch client task task submission response $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = rest high level client $ reindex__2 bootstrap $", "$ r5 = rest high level client $ from x content__30 bootstrap $", "$ r6 = java lang integer value of 409", "$ r7 = java util collection singleton $ r6", "r9 = org elasticsearch client rest high level client r0", "r10 = org elasticsearch action action request r1", "$ r8 = r9 perform request async and parse entity r10 $ r4 r2 $ r5 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = rest high level client $ delete by query__10 bootstrap $", "$ r4 = rest high level client $ from x content__26 bootstrap $", "$ r5 = java lang integer value of 409", "$ r6 = java util collection singleton $ r5", "r9 = org elasticsearch client rest high level client r0", "r10 = org elasticsearch action action request r1", "$ r7 = r9 perform request and parse entity r10 $ r3 r2 $ r4 $ r6", "$ r8 = org elasticsearch index reindex bulk by scroll response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = rest high level client $ multi get__41 bootstrap $", "$ r5 = rest high level client $ from x content__59 bootstrap $", "$ r6 = java lang integer value of 404", "$ r7 = java util collection singleton $ r6", "r9 = org elasticsearch client rest high level client r0", "r10 = org elasticsearch action action request r1", "$ r8 = r9 perform request async and parse entity r10 $ r4 r2 $ r5 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = rest high level client $ exists__46 bootstrap $", "$ r5 = rest high level client $ convert exist response__48 bootstrap $", "$ r6 = java util collection empty set", "r8 = org elasticsearch client rest high level client r0", "r9 = org elasticsearch action action request r1", "$ r7 = r8 perform request async r9 $ r4 r2 $ r5 r3 $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = rest high level client $ search template__95 bootstrap $", "$ r4 = rest high level client $ from x content__104 bootstrap $", "$ r5 = java util collection empty set", "r8 = org elasticsearch client rest high level client r0", "r9 = org elasticsearch action action request r1", "$ r6 = r8 perform request and parse entity r9 $ r3 r2 $ r4 $ r5", "$ r7 = org elasticsearch script mustache search template response $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = rest high level client $ search template__102 bootstrap $", "$ r5 = rest high level client $ from x content__111 bootstrap $", "$ r6 = java util collection empty set", "r8 = org elasticsearch client rest high level client r0", "r9 = org elasticsearch action action request r1", "$ r7 = r8 perform request async and parse entity r9 $ r4 r2 $ r5 r3 $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = rest high level client $ term vectors__108 bootstrap $", "$ r5 = rest high level client $ from x content__110 bootstrap $", "$ r6 = java util collection empty set", "r8 = org elasticsearch client rest high level client r0", "r9 = org elasticsearch client validatable r1", "$ r7 = r8 perform request async and parse entity r9 $ r4 r2 $ r5 r3 $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client rollup client r0", "$ r4 = r9 rest high level client", "$ r5 = rollup client $ stop job__11 bootstrap $", "$ r6 = rollup client $ from x content__29 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client searchable snapshots client r0", "$ r3 = r9 rest high level client", "$ r4 = searchable snapshot client $ mount snapshot__3 bootstrap $", "$ r5 = searchable snapshot client $ from x content__6 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch action admin cluster snapshot restore restore snapshot response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "$ r1 = new org elasticsearch client security invalidate api key request", "$ r2 = org elasticsearch client security invalidate api key request api key id to ids r0", "specialinvoke $ r1 < init > null null null z0 $ r2", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = org elasticsearch client security refresh policy none", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r5 = org elasticsearch client security client r0", "$ r4 = r5 enable user async r2 r1 r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client security client r0", "$ r4 = r9 rest high level client", "$ r5 = security client $ get roles__67 bootstrap $", "$ r6 = security client $ from x content__71 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client security client r0", "$ r3 = r9 rest high level client", "$ r4 = security client $ get privileges__95 bootstrap $", "$ r5 = security client $ from x content__103 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client security get privilege response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client security client r0", "$ r3 = r9 rest high level client", "$ r4 = security client $ grant api key__119 bootstrap $", "$ r5 = security client $ from x content__128 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client security create api key response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client snapshot client r0", "$ r3 = r9 rest high level client", "$ r4 = snapshot client $ get repositories__11 bootstrap $", "$ r5 = snapshot client $ from x content__29 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch action admin cluster repository get get repository response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client snapshot client r0", "$ r3 = r9 rest high level client", "$ r4 = snapshot client $ cleanup repository__9 bootstrap $", "$ r5 = snapshot client $ from x content__22 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch action admin cluster repository cleanup cleanup repository response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client snapshot client r0", "$ r3 = r9 rest high level client", "$ r4 = snapshot client $ clone snapshot__12 bootstrap $", "$ r5 = snapshot client $ from x content__17 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch action support master acknowledge response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch client time request r0", "r2 timeout = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client transform client r0", "$ r3 = r9 rest high level client", "$ r4 = transform client $ preview transform__1 bootstrap $", "$ r5 = transform client $ from x content__26 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client transform preview transform response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client watcher watcher stats response r0", "$ r1 = r2 node", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client watcher client r0", "$ r4 = r9 rest high level client", "$ r5 = watcher client $ stop watch service__6 bootstrap $", "$ r6 = watcher client $ from x content__24 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r10 = org elasticsearch client watcher client r0", "$ r4 = r10 rest high level client", "$ r5 = watcher client $ activate watch__32 bootstrap $", "$ r6 = watcher client $ from x content__37 bootstrap $", "$ r7 = java lang integer value of 404", "$ r8 = java util collection singleton $ r7", "r11 = org elasticsearch client validatable r1", "$ r9 = $ r4 perform request async and parse entity r11 $ r5 r2 $ r6 r3 $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r5 = net jodah failsafe circuit breaker r0", "$ r1 = r5 state", "$ r2 = $ r1 get", "$ r3 = net jodah failsafe internal circuit state $ r2", "$ r4 = $ r3 get state", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = net jodah failsafe circuit breaker r0", "$ r1 = r2 success threshold", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "$ b1 = l0 cmp 0l", "if $ b1 < 0 goto label1", "$ z1 = 1", "goto label2", "label $ r2 = newarray java lang object [ 0 ]", "net jodah failsafe internal util assert be true $ z1 \\ `` timeout can not be negative\\", "r13 = net jodah failsafe failsafe future r0", "$ r3 = r13 circuit", "$ r4 = net jodah failsafe internal util assert not null r1 \\ `` unit\\ ``", "$ r5 = java util concurrent time unit $ r4", "$ z0 = $ r3 await l0 $ r5", "if $ z0 ! = 0 goto label3", "r11 = new java util concurrent timeout exception", "specialinvoke r11 < init >", "throw r11", "if $ z0 ! = 0 goto label3", "label r14 = net jodah failsafe failsafe future r0", "$ r6 = r14 failure", "if $ r6 == null goto label4", "r12 = new java util concurrent execution exception", "r15 = net jodah failsafe failsafe future r0", "$ r9 = r15 failure", "specialinvoke r12 < init > $ r9", "throw r12", "if $ r6 == null goto label4", "label r16 = net jodah failsafe failsafe future r0", "$ r7 = r16 result", "return $ r7", "if $ b1 < 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [], [32], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "net jodah failsafe internal util assert not null r1 \\ `` time unit\\ ``", "$ l1 = r1 to nanos l0", "r7 = net jodah failsafe retry policy r0", "$ r3 = r7 delay", "$ l2 = $ r3 to nanos", "$ b3 = $ l1 cmp $ l2", "if $ b3 < = 0 goto label1", "$ z0 = 1", "goto label2", "label $ r4 = newarray java lang object [ 0 ]", "net jodah failsafe internal util assert state $ z0 \\ `` max duration must be great than the delay\\", "r6 = new net jodah failsafe util duration", "specialinvoke r6 < init > l0 r1", "r8 = net jodah failsafe retry policy r0", "r8 max duration = r6", "r9 = net jodah failsafe retry policy r0", "return r9", "if $ b3 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ parameter0", "r11 = null", "if r0 ! = null goto label1", "r11 = java util locale get default", "goto label6", "label return r11", "if r0 ! = null goto label1", "label r12 = r0 split \\ `` _\\ ``", "$ i0 = lengthof r12", "if $ i0 ! = 1 goto label2", "$ r8 = new java util locale", "$ r9 = r12 [ 0 ]", "specialinvoke $ r8 < init > $ r9", "r11 = $ r8", "goto label4", "label goto label6", "if $ i0 ! = 1 goto label2", "label $ i1 = lengthof r12", "if $ i1 ! = 2 goto label3", "$ r5 = new java util locale", "$ r7 = r12 [ 0 ]", "$ r6 = r12 [ 1 ]", "specialinvoke $ r5 < init > $ r7 $ r6", "r11 = $ r5", "if $ i1 ! = 2 goto label3", "label $ i2 = lengthof r12", "if $ i2 ! = 3 goto label4", "$ r1 = new java util locale", "$ r4 = r12 [ 0 ]", "$ r3 = r12 [ 1 ]", "$ r2 = r12 [ 2 ]", "specialinvoke $ r1 < init > $ r4 $ r3 $ r2", "r11 = $ r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r2 = com sun xml fastinfoset stax event location r0", "$ r1 = r2 _public id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun xml fastinfoset stax event character event r0", "$ r1 = r2 _text", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun xml fastinfoset stax event d t d event r0", "$ r1 = r2 _notations", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = com sun xml fastinfoset stax event end element event r0", "$ r1 = r5 _namespaces", "if $ r1 == null goto label1", "r6 = com sun xml fastinfoset stax event end element event r0", "$ r3 = r6 _namespaces", "$ r4 = $ r3 iterator", "return $ r4", "if $ r1 == null goto label1", "label $ r2 = com sun xml fastinfoset stax event empty iterator get instance", "r7 = java util iterator $ r2", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r8 = com sun xml fastinfoset stax event event base r0", "$ z0 = r8 be start element", "if $ z0 == 0 goto label1", "$ r6 = javax xml stream event start element r0", "return $ r6", "if $ z0 == 0 goto label1", "label r7 = new java lang class cast exception", "$ r2 = com sun xml fastinfoset common resource bundle get instance", "$ r3 = newarray java lang object [ 1 ]", "r9 = com sun xml fastinfoset stax event event base r0", "$ r4 = specialinvoke r9 get event type string", "$ r3 [ 0 ] = $ r4", "$ r5 = $ r2 get string \\ `` message start element case\\", "specialinvoke r7 < init > $ r5", "throw r7"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = com sun xml fastinfoset stax event start document event r0", "$ r1 = r2 _version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com sun xml fastinfoset stax event st a x event reader r0", "$ r2 = r4 _stream reader", "$ r3 = $ r2 get property r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = com sun xml fastinfoset stax factory st a x input factory r0", "$ r3 = r4 _manager", "$ r3 set property r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ b1 = l0 cmp 0l", "if $ b1 > = 0 goto label1", "r16 = new java lang index out of bound exception", "r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r11 = r15 append \\ `` index \\ ``", "$ r12 = $ r11 append l0", "$ r13 = $ r12 append \\ `` be negative\\ ``", "$ r14 = $ r13 to string", "specialinvoke r16 < init > $ r14", "throw r16", "if $ b1 > = 0 goto label1", "label r19 = it unimi dsi fastutil booleans abstract boolean big list r0", "$ l2 = r19 size64", "$ b3 = l0 cmp $ l2", "if $ b3 < 0 goto label2", "r18 = new java lang index out of bound exception", "r17 = new java lang string builder", "specialinvoke r17 < init >", "$ r3 = r17 append \\ `` index \\ ``", "$ r4 = $ r3 append l0", "$ r5 = $ r4 append \\ `` be great than or equal to list size \\ ``", "r20 = it unimi dsi fastutil booleans abstract boolean big list r0", "$ l4 = r20 size64", "$ r6 = $ r5 append $ l4", "$ r7 = $ r6 append \\ `` \\ ``", "$ r8 = $ r7 to string", "specialinvoke r18 < init > $ r8", "throw r18", "if $ b3 < 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z2 = 0", "r2 = r1 iterator", "i0 = r1 size", "label $ i1 = i0", "i0 = i0 + -1", "if $ i1 == 0 goto label2", "$ z0 = r2 next boolean", "r3 = it unimi dsi fastutil booleans abstract boolean collection r0", "$ z1 = r3 add $ z0", "if $ z1 == 0 goto label1", "z2 = 1", "goto label1", "if $ i1 == 0 goto label2", "label return z2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z2 = 0", "r2 = r1 iterator", "i0 = r1 size", "label $ i1 = i0", "i0 = i0 + -1", "if $ i1 == 0 goto label2", "$ z0 = r2 next boolean", "r3 = it unimi dsi fastutil booleans abstract boolean collection r0", "$ z1 = r3 add $ z0", "if $ z1 == 0 goto label1", "z2 = 1", "goto label1", "if $ i1 == 0 goto label2", "label return z2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > = 0 goto label1", "r16 = new java lang index out of bound exception", "r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r11 = r15 append \\ `` index \\ ``", "$ r12 = $ r11 append i0", "$ r13 = $ r12 append \\ `` be negative\\ ``", "$ r14 = $ r13 to string", "specialinvoke r16 < init > $ r14", "throw r16", "if i0 > = 0 goto label1", "label r19 = it unimi dsi fastutil booleans abstract boolean list r0", "$ i1 = r19 size", "if i0 < $ i1 goto label2", "r18 = new java lang index out of bound exception", "r17 = new java lang string builder", "specialinvoke r17 < init >", "$ r3 = r17 append \\ `` index \\ ``", "$ r4 = $ r3 append i0", "$ r5 = $ r4 append \\ `` be great than or equal to list size \\ ``", "r20 = it unimi dsi fastutil booleans abstract boolean list r0", "$ i2 = r20 size", "$ r6 = $ r5 append $ i2", "$ r7 = $ r6 append \\ `` \\ ``", "$ r8 = $ r7 to string", "specialinvoke r18 < init > $ r8", "throw r18", "if i0 < $ i1 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], []]}
{"nodes": ["r0 = @ this", "r2 = it unimi dsi fastutil booleans boolean array list r0", "$ r1 = r2 a", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r3 = it unimi dsi fastutil booleans boolean array list r0", "$ i2 = r3 size", "it unimi dsi fastutil array ensure from to $ i2 i0 i1", "r4 = it unimi dsi fastutil booleans boolean array list r0", "$ r2 = r4 a", "r5 = it unimi dsi fastutil booleans boolean array list r0", "$ r1 = r5 a", "r6 = it unimi dsi fastutil booleans boolean array list r0", "$ i3 = r6 size", "$ i4 = $ i3 - i1", "java lang system arraycopy $ r2 i1 $ r1 i0 $ i4", "r7 = it unimi dsi fastutil booleans boolean array list r0", "$ i6 = r7 size", "$ i5 = i1 - i0", "$ i7 = $ i6 - $ i5", "r8 = it unimi dsi fastutil booleans boolean array list r0", "r8 size = $ i7", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i1 = lengthof r0", "if i0 < = $ i1 goto label1", "r1 = newarray boolean [ i0 ]", "$ i2 = lengthof r0", "java lang system arraycopy r0 0 r1 0 $ i2", "return r1", "if i0 < = $ i1 goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i1 = lengthof r0", "if i0 ! = $ i1 goto label1", "return r0", "if i0 ! = $ i1 goto label1", "label $ i2 = lengthof r0", "if i0 > = $ i2 goto label2", "$ r2 = it unimi dsi fastutil booleans boolean array trim r0 i0", "return $ r2", "if i0 > = $ i2 goto label2", "label $ r1 = it unimi dsi fastutil booleans boolean array ensure capacity r0 i0", "return $ r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 clone", "$ r2 = boolean [ ] $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "i1 = @ parameter3", "$ i2 = i1 - i0", "if $ i2 > = 8192 goto label1", "it unimi dsi fastutil booleans boolean array quick sort r0 r1 i0 i1", "label r7 = new java util concurrent fork join pool", "$ r4 = java lang runtime get runtime", "$ i3 = $ r4 available processor", "specialinvoke r7 < init > $ i3", "r8 = new it unimi dsi fastutil booleans boolean arrays $ fork join quick sort2", "specialinvoke r8 < init > r0 r1 i0 i1", "r9 = java util concurrent fork join task r8", "r7 invoke r9", "r7 shutdown", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = lengthof r0", "it unimi dsi fastutil booleans boolean array merge sort r0 0 $ i0 r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "$ i1 = it unimi dsi fastutil big array segment l0", "$ r1 = r0 [ $ i1 ]", "$ i2 = it unimi dsi fastutil big array displacement l0", "$ z0 = $ r1 [ $ i2 ]", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = lengthof r0", "if i0 ! = 0 goto label1", "$ l6 = 0l", "goto label2", "label return $ l6", "if i0 ! = 0 goto label1", "label $ i1 = i0 - 1", "$ l2 = it unimi dsi fastutil big array start $ i1", "$ i3 = i0 - 1", "$ r1 = r0 [ $ i3 ]", "$ i4 = lengthof $ r1", "$ l5 = long $ i4", "$ l6 = $ l2 + $ l5"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "it unimi dsi fastutil big array ensure length l0", "l1 = it unimi dsi fastutil booleans boolean big array length r0", "$ b4 = l0 cmp l1", "if $ b4 < 0 goto label1", "return r0", "if $ b4 < 0 goto label1", "label $ l5 = l0 + 134217727l", "$ l6 = $ l5 > > > 27", "i2 = int $ l6", "$ r2 = java util array copy of r0 i2", "r1 = boolean [ ] [ ] $ r2", "$ l7 = l0 & 134217727l", "i3 = int $ l7", "if i3 == 0 goto label2", "$ i9 = i2 - 1", "$ i8 = i2 - 1", "$ r3 = r1 [ $ i8 ]", "$ r4 = it unimi dsi fastutil booleans boolean array trim $ r3 i3", "r1 [ $ i9 ] = $ r4", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new it unimi dsi fastutil booleans boolean collection $ synchronize collection", "specialinvoke r2 < init > r0", "r3 = it unimi dsi fastutil booleans boolean collection r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new it unimi dsi fastutil booleans boolean collection $ synchronize collection", "specialinvoke r3 < init > r0 r1", "r4 = it unimi dsi fastutil booleans boolean collection r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof it unimi dsi fastutil booleans boolean iterator", "if $ z0 == 0 goto label1", "$ r2 = it unimi dsi fastutil booleans boolean iterator r0", "return $ r2", "if $ z0 == 0 goto label1", "label r3 = new it unimi dsi fastutil booleans boolean iterators $ iterator wrapper", "specialinvoke r3 < init > r0", "r4 = it unimi dsi fastutil booleans boolean iterator r3", "return r4"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "$ r1 = it unimi dsi fastutil booleans boolean iterators concat r0 0 $ i0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = new it unimi dsi fastutil bytes abstract byte2 boolean map $ 2", "r3 = it unimi dsi fastutil bytes abstract byte2 boolean map r0", "specialinvoke r2 < init > r3", "r4 = it unimi dsi fastutil booleans boolean collection r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = it unimi dsi fastutil bytes abstract byte2 boolean sort map r0", "$ r1 = r2 key set", "r3 = it unimi dsi fastutil bytes byte set $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new it unimi dsi fastutil bytes byte2 boolean sort maps $ synchronize sort map", "specialinvoke r3 < init > r0 r1", "r4 = it unimi dsi fastutil bytes byte2 boolean sort map r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "$ i1 = lengthof r1", "r2 = it unimi dsi fastutil bytes byte array front cod list r0", "$ i2 = r2 get i0 r1 0 $ i1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "b1 = @ parameter2", "$ i2 = it unimi dsi fastutil big array segment l0", "$ r1 = r0 [ $ i2 ]", "$ i3 = it unimi dsi fastutil big array displacement l0", "$ b4 = $ r1 [ $ i3 ]", "$ i5 = $ b4 * b1", "$ b6 = byte $ i5", "$ r1 [ $ i3 ] = $ b6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "b0 = @ parameter1", "$ l1 = it unimi dsi fastutil bytes byte big array length r0", "$ l2 = it unimi dsi fastutil bytes byte big array binary search r0 0l $ l1 b0", "return $ l2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = it unimi dsi fastutil bytes byte link open custom hash set r0", "$ r1 = r2 iterator", "r3 = it unimi dsi fastutil bytes byte bidirectional iterator $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r1 = @ parameter3", "r2 = @ parameter4", "it unimi dsi fastutil bytes byte array ensure offset length r0 i0 i1", "$ i2 = lengthof r1", "if $ i2 > = i1 goto label1", "$ r3 = new java lang illegal argument exception", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = $ r4 append \\ `` the heap length \\ ``", "$ i7 = lengthof r1", "$ r6 = $ r5 append $ i7", "$ r7 = $ r6 append \\ `` be small than the number of element \\ ``", "$ r8 = $ r7 append i1", "$ r9 = $ r8 append \\ `` \\ ``", "$ r10 = $ r9 to string", "specialinvoke $ r3 < init > $ r10", "throw $ r3", "if $ i2 > = i1 goto label1", "label i8 = i1", "label $ i3 = i8", "i8 = i8 + -1", "if $ i3 == 0 goto label3", "$ i6 = i0 + i8", "r1 [ i8 ] = $ i6", "goto label2", "if $ i3 == 0 goto label3", "label i9 = i1 > > > 1", "label $ i4 = i9", "i9 = i9 + -1", "if $ i4 == 0 goto label5", "it unimi dsi fastutil bytes byte semi indirect heap down heap r0 r1 i1 i9 r2", "goto label4", "if $ i4 == 0 goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [], [36], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new it unimi dsi fastutil bytes byte sort set $ unmodifiable sort set", "specialinvoke r2 < init > r0", "r3 = it unimi dsi fastutil bytes byte sort set r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "f0 = @ parameter1", "$ f1 = float i0", "$ f2 = $ f1 * f0", "$ d0 = double $ f2", "$ d1 = java lang math ceil $ d0", "$ i2 = int $ d1", "$ i1 = i0 - 1", "$ i3 = java lang math min $ i2 $ i1", "return $ i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r17 = new java io file input stream", "specialinvoke r17 < init > r0", "$ r5 = r17 get channel", "l0 = $ r5 size", "$ b1 = l0 cmp 2147483647l", "if $ b1 < = 0 goto label1", "r17 close", "r19 = new java lang illegal argument exception", "r18 = new java lang string builder", "specialinvoke r18 < init >", "$ r10 = r18 append \\ `` file too long \\ ``", "$ r11 = r17 get channel", "$ l5 = $ r11 size", "$ r12 = $ r10 append $ l5", "$ r13 = $ r12 append \\ `` byte \\ ``", "$ r14 = $ r13 append l0", "$ r15 = $ r14 append \\ `` element \\ ``", "$ r16 = $ r15 to string", "specialinvoke r19 < init > $ r16", "throw r19", "if $ b1 < = 0 goto label1", "label $ i2 = int l0", "r2 = newarray boolean [ $ i2 ]", "r21 = new java io data input stream", "r20 = new it unimi dsi fastutil io fast buffer input stream", "specialinvoke r20 < init > r17", "r22 = java io input stream r20", "specialinvoke r21 < init > r22", "i6 = 0", "label $ l3 = long i6", "$ b4 = $ l3 cmp l0", "if $ b4 > = 0 goto label3", "$ z0 = r21 read boolean", "r2 [ i6 ] = $ z0", "i6 = i6 + 1", "goto label2", "if $ b4 > = 0 goto label3", "label r21 close", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], [39], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = 0", "label i1 = lengthof r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = lengthof r0", "i1 = 0", "label if i1 > = i0 goto label2", "$ z0 = r0 [ i1 ]", "r1 write boolean $ z0", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i1 = 0", "label i2 = lengthof r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i1 = 0", "label i2 = lengthof r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r9 = it unimi dsi fastutil io fast buffer output stream r0", "$ r1 = r9 repositionable stream", "if $ r1 == null goto label1", "r10 = it unimi dsi fastutil io fast buffer output stream r0", "$ r7 = r10 repositionable stream", "$ l8 = $ r7 position", "r11 = it unimi dsi fastutil io fast buffer output stream r0", "$ i9 = r11 po", "$ l10 = long $ i9", "$ l11 = $ l8 + $ l10", "return $ l11", "if $ r1 == null goto label1", "label r12 = it unimi dsi fastutil io fast buffer output stream r0", "$ r2 = r12 measurable stream", "if $ r2 == null goto label2", "r13 = it unimi dsi fastutil io fast buffer output stream r0", "$ r6 = r13 measurable stream", "$ l4 = $ r6 position", "r14 = it unimi dsi fastutil io fast buffer output stream r0", "$ i5 = r14 po", "$ l6 = long $ i5", "$ l7 = $ l4 + $ l6", "return $ l7", "if $ r2 == null goto label2", "label r15 = it unimi dsi fastutil io fast buffer output stream r0", "$ r3 = r15 file channel", "if $ r3 == null goto label3", "r16 = it unimi dsi fastutil io fast buffer output stream r0", "$ r5 = r16 file channel", "$ l0 = $ r5 position", "r17 = it unimi dsi fastutil io fast buffer output stream r0", "$ i1 = r17 po", "$ l2 = long $ i1", "$ l3 = $ l0 + $ l2", "return $ l3", "if $ r3 == null goto label3", "label r8 = new java lang unsupported operation exception", "specialinvoke r8 < init > \\ `` position can only be call if the underlie byte stream implement the measurable stream or repositionable stream interface or if the get channel method of the underlie byte stream exists and return a file channel\\ ``", "throw r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], [39], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r1 = @ parameter3", "r8 = new java io print stream", "r7 = new it unimi dsi fastutil io fast buffer output stream", "r6 = new java io file output stream", "specialinvoke r6 < init > r1", "specialinvoke r7 < init > r6", "r9 = java io output stream r7", "specialinvoke r8 < init > r9", "it unimi dsi fastutil io text i o store booleans r0 i0 i1 r8", "r8 close", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["l0 = @ parameter0", "l1 = @ parameter1", "r1 = new it unimi dsi fastutil longs long iterators $ interval iterator", "specialinvoke r1 < init > l0 l1", "r2 = it unimi dsi fastutil longs long bidirectional iterator r1", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r10 = org apache fontbox cff c f f data input r0", "i0 = r10 read unsigned byte", "if i0 < 1 goto label1", "if i0 < = 4 goto label2", "label r9 = new java io i o exception", "r8 = new java lang string builder", "specialinvoke r8 < init >", "$ r3 = r8 append \\ `` illegal < 1 or > 4 off size value \\ ``", "$ r4 = $ r3 append i0", "$ r5 = $ r4 append \\ `` in cff font at position \\ ``", "r11 = org apache fontbox cff c f f data input r0", "$ i1 = r11 get position", "$ i2 = $ i1 - 1", "$ r6 = $ r5 append $ i2", "$ r7 = $ r6 to string", "specialinvoke r9 < init > $ r7", "throw r9", "if i0 < = 4 goto label2", "label return i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r8 = ru vyarus java generic resolver context generic context r0", "$ r3 = r8 context generic", "$ r4 = ru vyarus java generic resolver util generic utils resolve generic of r1 $ r3", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = ru vyarus java generic resolver context method generic context r0", "$ r1 = r4 method", "r5 = ru vyarus java generic resolver context method generic context r0", "$ r2 = r5 context generic", "$ r3 = ru vyarus java generic resolver util generic utils get method parameter $ r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r12 = new java net datagram packet", "r14 = info ganglion gmetric4j gmetric abstract protocol r0", "$ r4 = r14 udp addr", "r15 = info ganglion gmetric4j gmetric abstract protocol r0", "$ i1 = r15 port", "specialinvoke r12 < init > r1 i0 $ r4 $ i1", "$ r6 = info ganglion gmetric4j gmetric abstract protocol log", "$ r7 = java util log level fine", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r8 = r13 append \\ `` sending message of length \\ ``", "$ r9 = $ r8 append i0", "$ r10 = $ r9 to string", "$ r6 log $ r7 $ r10", "r16 = info ganglion gmetric4j gmetric abstract protocol r0", "$ r11 = r16 socket", "$ r11 send r12", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "r2 = @ parameter2", "$ r3 = java lang double to string d0", "$ r5 = info ganglion gmetric4j gmetric g metric type double", "$ r4 = info ganglion gmetric4j gmetric g metric slope both", "r6 = info ganglion gmetric4j gmetric g metric r0", "r6 announce r1 $ r3 $ r5 \\ `` \\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r4 = com netflix governator guice bootstrap binder r0", "$ r1 = r4 binder", "$ r2 = com google inject multibindings multibinder new set binder $ r1 class \\ `` lcom netflix governator guice module transformer \\ ``", "$ r3 = $ r2 add bind", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r4 = com netflix governator governator r0", "$ r2 = r4 override module", "$ r3 = java util array a list r1", "$ r2 add all $ r3", "label r5 = com netflix governator governator r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = ai grakn util error message no_type", "$ r1 = newarray java lang object [ 1 ]", "$ r3 = r0 id", "$ r1 [ 0 ] = $ r3", "$ r4 = $ r2 get message $ r1", "$ r5 = ai grakn exception grakn tx operation exception create $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new ai grakn exception temporary write exception", "$ r3 = newarray java lang object [ 1 ]", "$ r3 [ 0 ] = r0", "$ r4 = java lang string format \\ `` index overlap have lead to the accidental sharing of a partially complete vertex { % s } \\", "specialinvoke $ r2 < init > $ r4 r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = null goto label1", "r10 = new java lang runtime exception", "$ r7 = ai grakn util error message unavailable_property", "$ r6 = newarray java lang object [ 2 ]", "r11 = ai grakn grakn config key r0", "$ r8 = r11 name", "$ r6 [ 0 ] = $ r8", "$ r6 [ 1 ] = r2", "$ r9 = $ r7 get message $ r6", "specialinvoke r10 < init > $ r9", "throw r10", "if r1 ! = null goto label1", "label r12 = ai grakn grakn config key r0", "$ r3 = r12 parser", "$ r4 = $ r3 read r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = ai grakn grakn system property r0", "$ r1 = r2 key", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = ai grakn graql graql var r0", "$ r2 = ai grakn graql internal query aggregate aggregate sum $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ z0 = ai grakn graql internal analytics utility may have resource edge r0 r1 r2", "if $ z0 == 0 goto label1", "$ r4 = r0 graql", "$ r5 = newarray ai grakn graql pattern [ 3 ]", "$ r6 = ai grakn graql graql var \\ `` x\\ ``", "$ r7 = $ r6 id r1", "$ r5 [ 0 ] = $ r7", "$ r8 = ai grakn graql graql var \\ `` y\\ ``", "$ r9 = $ r8 id r2", "$ r5 [ 1 ] = $ r9", "$ r10 = ai grakn graql graql var \\ `` z\\ ``", "$ r11 = ai grakn graql graql var \\ `` x\\ ``", "r24 = ai grakn graql var pattern $ r11", "$ r12 = $ r10 rel r24", "$ r13 = ai grakn graql graql var \\ `` y\\ ``", "r25 = ai grakn graql var pattern $ r13", "$ r14 = $ r12 rel r25", "$ r5 [ 2 ] = $ r14", "r26 = ai grakn graql pattern [ ] $ r5", "$ r15 = $ r4 match r26", "$ r16 = newarray java lang string [ 0 ]", "$ r17 = $ r15 get \\ `` z\\", "$ r18 = $ r17 stream", "$ r19 = utility $ lambda_get resource edge id_1__2 bootstrap $", "$ r20 = $ r18 map $ r19", "r3 = $ r20 find first", "$ z1 = r3 be present", "if $ z1 == 0 goto label1", "$ r21 = r3 get", "$ r22 = ai grakn concept concept $ r21", "$ r23 = $ r22 id", "return $ r23", "if $ z1 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], []]}
{"nodes": ["r0 = @ this", "r3 = ai grakn graql internal gremlin fragment fragment r0", "$ r1 = r3 accurate fragment cost", "if $ r1 == null goto label1", "r4 = ai grakn graql internal gremlin fragment fragment r0", "$ r2 = r4 accurate fragment cost", "$ d1 = $ r2 double value", "return $ d1", "if $ r1 == null goto label1", "label r5 = ai grakn graql internal gremlin fragment fragment r0", "$ d0 = r5 internal fragment cost", "return $ d0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = ai grakn graql internal gremlin spanningtree datastructure fibonacci heap r0", "r1 o min entry = null", "r2 = ai grakn graql internal gremlin spanningtree datastructure fibonacci heap r0", "r2 size = 0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof ai grakn concept concept", "if $ z0 == 0 goto label01", "$ r21 = ai grakn concept concept r1", "r23 = ai grakn graql internal printer printer r0", "$ r22 = r23 concept $ r21", "return $ r22", "if $ z0 == 0 goto label01", "label $ z1 = r1 instanceof java lang boolean", "if $ z1 == 0 goto label02", "$ r19 = java lang boolean r1", "$ z10 = $ r19 boolean value", "r24 = ai grakn graql internal printer printer r0", "$ r20 = r24 bool $ z10", "return $ r20", "if $ z1 == 0 goto label02", "label $ z2 = r1 instanceof java util collection", "if $ z2 == 0 goto label03", "$ r17 = java util collection r1", "r25 = ai grakn graql internal printer printer r0", "$ r18 = r25 collection $ r17", "return $ r18", "if $ z2 == 0 goto label03", "label $ z3 = r1 instanceof ai grakn graql answer answer group", "if $ z3 == 0 goto label04", "$ r15 = ai grakn graql answer answer group r1", "r26 = ai grakn graql internal printer printer r0", "$ r16 = r26 answer group $ r15", "return $ r16", "if $ z3 == 0 goto label04", "label $ z4 = r1 instanceof ai grakn graql answer concept list", "if $ z4 == 0 goto label05", "$ r13 = ai grakn graql answer concept list r1", "r27 = ai grakn graql internal printer printer r0", "$ r14 = r27 concept list $ r13", "return $ r14", "if $ z4 == 0 goto label05", "label $ z5 = r1 instanceof ai grakn graql answer concept map", "if $ z5 == 0 goto label06", "$ r11 = ai grakn graql answer concept map r1", "r28 = ai grakn graql internal printer printer r0", "$ r12 = r28 concept map $ r11", "return $ r12", "if $ z5 == 0 goto label06", "label $ z6 = r1 instanceof ai grakn graql answer concept set", "if $ z6 == 0 goto label08", "$ z9 = r1 instanceof ai grakn graql answer concept set measure", "if $ z9 == 0 goto label07", "$ r9 = ai grakn graql answer concept set measure r1", "r29 = ai grakn graql internal printer printer r0", "$ r10 = r29 concept set measure $ r9", "return $ r10", "if $ z9 == 0 goto label07", "label $ r7 = ai grakn graql answer concept set r1", "r30 = ai grakn graql internal printer printer r0", "$ r8 = r30 concept set $ r7", "return $ r8", "if $ z6 == 0 goto label08", "label $ z7 = r1 instanceof ai grakn graql answer value", "if $ z7 == 0 goto label09", "$ r5 = ai grakn graql answer value r1", "r31 = ai grakn graql internal printer printer r0", "$ r6 = r31 value $ r5", "return $ r6", "if $ z7 == 0 goto label09", "label $ z8 = r1 instanceof java util map", "if $ z8 == 0 goto label10", "$ r3 = java util map r1", "r32 = ai grakn graql internal printer printer r0", "$ r4 = r32 map $ r3", "return $ r4", "if $ z8 == 0 goto label10", "label r33 = ai grakn graql internal printer printer r0", "$ r2 = r33 object r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [], [38], [39], [40], [41], [42], [43], [], [45], [46], [47], [48], [49], [50], [51], [52], [], [54], [55], [56], [57], [], [59], [60], [61], [62], [63], [64], [], [66], [67], [68], [69], [70], [71], [], [73], [74], [75], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = r0 get atoms class \\ `` lai grakn graql internal reasoner atom atom \\ ``", "$ r4 = graql traversal planner $ be selectable__1 bootstrap $", "$ r5 = $ r3 filter $ r4", "$ r6 = java util stream collector to list", "$ r7 = $ r5 collect $ r6", "r1 = java util list $ r7", "$ r8 = r0 get atoms class \\ `` lai grakn graql internal reasoner atom predicate id predicate \\ ``", "$ r9 = java util stream collector to set", "$ r10 = $ r8 collect $ r9", "r2 = java util set $ r10", "$ r11 = ai grakn graql internal reasoner plan graql traversal planner refine plan r0 r1 r2", "$ r12 = com google common collect immutable list copy of $ r11", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r23 = ai grakn graql internal reasoner query reasoner query impl r0", "$ r4 = r23 substitution", "if $ r4 ! = null goto label1", "r24 = ai grakn graql internal reasoner query reasoner query impl r0", "r1 = r24 get var name", "r25 = ai grakn graql internal reasoner query reasoner query impl r0", "$ r6 = r25 get atoms class \\ `` lai grakn graql internal reasoner atom binary isa atom base \\ ``", "$ r7 = reasoner query impl $ get type predicate__33 bootstrap $", "$ r8 = $ r6 map $ r7", "$ r9 = reasoner query impl $ non null__35 bootstrap $", "$ r10 = $ r8 filter $ r9", "$ r11 = reasoner query impl $ lambda_get substitution_32__40 bootstrap $ r1", "$ r12 = $ r10 filter $ r11", "$ r13 = java util stream collector to set", "$ r14 = $ r12 collect $ r13", "r2 = java util set $ r14", "r26 = ai grakn graql internal reasoner query reasoner query impl r0", "$ r15 = r26 get atoms class \\ `` lai grakn graql internal reasoner atom predicate id predicate \\ ``", "r2 get class", "$ r17 = reasoner query impl $ add__48 bootstrap $ r2", "$ r15 for each $ r17", "r21 = new java util hash map", "specialinvoke r21 < init >", "r27 = ai grakn graql internal reasoner query reasoner query impl r0", "$ r19 = reasoner query impl $ lambda_get substitution_33__53 bootstrap $ r27 r21", "r2 for each $ r19", "r22 = new ai grakn graql internal query answer concept map impl", "specialinvoke r22 < init > r21", "r28 = ai grakn graql internal reasoner query reasoner query impl r0", "r29 = ai grakn graql answer concept map r22", "r28 substitution = r29", "label r30 = ai grakn graql internal reasoner query reasoner query impl r0", "$ r5 = r30 substitution", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = ai grakn kb internal cache cache r0", "$ z0 = r3 be present", "if $ z0 == 0 goto label1", "r4 = ai grakn kb internal cache cache r0", "$ r2 = r4 get", "r1 accept $ r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = ai grakn kb internal cache global cache r0", "$ r3 = r5 cache label", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = ai grakn kb internal structure edge element r0", "$ r1 = r3 element", "$ r2 = org apache tinkerpop gremlin structure edge $ r1", "$ r2 remove", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r1 = new ai grakn matcher grakn matcher $ 5", "specialinvoke r1 < init >", "r2 = org hamcrest matcher r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tinkerpop gremlin process computer memory r0", "$ r2 = r3 key", "$ z0 = $ r2 contain r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "l1 = @ parameter2", "r15 = org apache tinkerpop gremlin process traversal dsl graph graph traversal r0", "$ r2 = r15 a admin", "$ r3 = $ r2 get bytecode", "$ r4 = newarray java lang object [ 3 ]", "$ r4 [ 0 ] = r1", "$ r5 = java lang long value of l0", "$ r4 [ 1 ] = $ r5", "$ r6 = java lang long value of l1", "$ r4 [ 2 ] = $ r6", "$ r3 add step \\ `` range\\", "r16 = org apache tinkerpop gremlin process traversal dsl graph graph traversal r0", "$ r7 = r16 a admin", "$ r8 = org apache tinkerpop gremlin process traversal scope global", "$ z0 = r1 equal $ r8", "if $ z0 == 0 goto label1", "r13 = new org apache tinkerpop gremlin process traversal step filter range global step", "$ r12 = r13", "r17 = org apache tinkerpop gremlin process traversal dsl graph graph traversal r0", "$ r11 = r17 a admin", "r18 = org apache tinkerpop gremlin process traversal traversal $ admin $ r11", "specialinvoke r13 < init > r18 l0 l1", "goto label2", "label r21 = org apache tinkerpop gremlin process traversal step $ r12", "$ r10 = $ r7 add step r21", "r22 = org apache tinkerpop gremlin process traversal dsl graph graph traversal $ r10", "return r22", "if $ z0 == 0 goto label1", "label r14 = new org apache tinkerpop gremlin process traversal step map range local step", "$ r12 = r14", "r19 = org apache tinkerpop gremlin process traversal dsl graph graph traversal r0", "$ r9 = r19 a admin", "r20 = org apache tinkerpop gremlin process traversal traversal $ admin $ r9", "specialinvoke r14 < init > r20 l0 l1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r14 = org apache tinkerpop gremlin process traversal dsl graph graph traversal r0", "$ r2 = r14 a admin", "$ r3 = $ r2 get bytecode", "$ r4 = newarray java lang object [ 2 ]", "$ r4 [ 0 ] = r1", "$ r5 = java lang long value of l0", "$ r4 [ 1 ] = $ r5", "$ r3 add step \\ `` tail\\", "r15 = org apache tinkerpop gremlin process traversal dsl graph graph traversal r0", "$ r6 = r15 a admin", "$ r7 = org apache tinkerpop gremlin process traversal scope global", "$ z0 = r1 equal $ r7", "if $ z0 == 0 goto label1", "r12 = new org apache tinkerpop gremlin process traversal step filter tail global step", "$ r11 = r12", "r16 = org apache tinkerpop gremlin process traversal dsl graph graph traversal r0", "$ r10 = r16 a admin", "r17 = org apache tinkerpop gremlin process traversal traversal $ admin $ r10", "specialinvoke r12 < init > r17 l0", "goto label2", "label r20 = org apache tinkerpop gremlin process traversal step $ r11", "$ r9 = $ r6 add step r20", "r21 = org apache tinkerpop gremlin process traversal dsl graph graph traversal $ r9", "return r21", "if $ z0 == 0 goto label1", "label r13 = new org apache tinkerpop gremlin process traversal step map tail local step", "$ r11 = r13", "r18 = org apache tinkerpop gremlin process traversal dsl graph graph traversal r0", "$ r8 = r18 a admin", "r19 = org apache tinkerpop gremlin process traversal traversal $ admin $ r8", "specialinvoke r13 < init > r19 l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ parameter0", "r3 = new org apache tinkerpop gremlin process traversal p", "$ r2 = org apache tinkerpop gremlin process traversal compare gte", "r4 = java util function bi predicate $ r2", "specialinvoke r3 < init > r4 r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java util array a list r0", "$ r2 = org apache tinkerpop gremlin process traversal p within $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tinkerpop gremlin process traversal traversal side effect r0", "$ r1 = r2 key", "$ i0 = $ r1 size", "if $ i0 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache common configuration base configuration", "specialinvoke r2 < init >", "r3 = org apache common configuration configuration r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache tinkerpop gremlin process traversal traverser r0", "$ r2 = r5 a admin", "$ r3 = $ r2 get side effect", "$ r4 = $ r3 get r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache tinkerpop gremlin process traversal traverser r0", "$ r3 = r5 a admin", "$ r4 = $ r3 get side effect", "$ r4 add r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache tinkerpop gremlin structure io io core gryo", "$ r3 = r0 io $ r2", "$ r4 = org apache tinkerpop gremlin structure io gryo gryo io $ r3", "$ r5 = $ r4 reader", "$ r6 = $ r5 create", "$ r7 = org apache tinkerpop gremlin structure io io core gryo", "$ r8 = r1 io $ r7", "$ r9 = org apache tinkerpop gremlin structure io gryo gryo io $ r8", "$ r10 = $ r9 writer", "$ r11 = $ r10 create", "r12 = org apache tinkerpop gremlin structure io graph reader $ r6", "r13 = org apache tinkerpop gremlin structure io graph writer $ r11", "org apache tinkerpop gremlin structure io graph migrator migrate graph r0 r1 r12 r13", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = new org apache tinkerpop gremlin structure io gryo kryoshim shade shaded kryo adapter", "specialinvoke r9 < init > r1", "r10 = new org apache tinkerpop gremlin structure io gryo kryoshim shade shade output adapter", "specialinvoke r10 < init > r2", "r11 = org apache tinkerpop gremlin structure io gryo kryoshim shade shaded serializer adapter r0", "$ r8 = r11 serializer", "r12 = org apache tinkerpop gremlin structure io gryo kryoshim kryo shim r9", "r13 = org apache tinkerpop gremlin structure io gryo kryoshim output shim r10", "$ r8 write r12 r13 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = lengthof r1", "if $ i0 < = 1 goto label3", "$ r2 = r1 [ 0 ]", "$ r3 = $ r2 get class", "z0 = r0 be assignable from $ r3", "i2 = 1", "label $ i1 = lengthof r1", "if i2 > = $ i1 goto label3", "$ r4 = r1 [ i2 ]", "$ r5 = $ r4 get class", "$ z1 = r0 be assignable from $ r5", "if $ z1 == z0 goto label2", "$ r6 = org apache tinkerpop gremlin structure graph $ exception id args must be either id or element", "throw $ r6", "if $ z1 == z0 goto label2", "label i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "$ i1 = $ i0 % 2", "if $ i1 == 0 goto label1", "$ r6 = org apache tinkerpop gremlin structure element $ exception provide key value must be a multiple of two", "throw $ r6", "if $ i1 == 0 goto label1", "label i4 = 0", "label $ i2 = lengthof r0", "if i4 > = $ i2 goto label5", "$ r1 = r0 [ i4 ]", "$ z0 = $ r1 instanceof java lang string", "if $ z0 ! = 0 goto label3", "$ r4 = r0 [ i4 ]", "$ z1 = $ r4 instanceof org apache tinkerpop gremlin structure t", "if $ z1 ! = 0 goto label3", "$ r5 = org apache tinkerpop gremlin structure element $ exception provide key value must have a legal key on even index", "throw $ r5", "if $ z1 ! = 0 goto label3", "label $ i3 = i4 + 1", "$ r2 = r0 [ $ i3 ]", "if null ! = $ r2 goto label4", "$ r3 = org apache tinkerpop gremlin structure property $ exception property value can not be null", "throw $ r3", "if null ! = $ r2 goto label4", "label i4 = i4 + 2", "goto label2", "if i4 > = $ i2 goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [], [25], [26], [], [28], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = java util array a list r1", "$ i0 = r2 size", "$ r4 = java util stream int stream range 0 $ i0", "$ r5 = element helper $ lambda_remove_0__1 bootstrap $", "$ r6 = $ r4 filter $ r5", "$ r7 = element helper $ lambda_remove_1__5 bootstrap $ r0 r2", "$ r8 = $ r6 filter $ r7", "$ r9 = element helper $ lambda_remove_2__7 bootstrap $", "$ r10 = $ r8 flat map $ r9", "$ r11 = element helper $ lambda_remove_3__8 bootstrap $ r2", "$ r12 = $ r10 map to obj $ r11", "$ r13 = java util stream collector to list", "$ r14 = $ r12 collect $ r13", "r3 = java util list $ r14", "$ i1 = r3 size", "if $ i1 < = 0 goto label1", "$ r15 = r3 to array", "$ r16 = java util optional of $ r15", "goto label2", "label return $ r16", "if $ i1 < = 0 goto label1", "label $ r16 = java util optional empty"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = groovy jmx builder jmx event emitter r0", "r2 message = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = groovy lang int range r0", "$ i0 = r1 from", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = groovy sql groovy result set extension r0", "$ z0 = r3 update", "if $ z0 == 0 goto label1", "r4 = groovy sql groovy result set extension r0", "$ r2 = r4 get result set", "$ r2 update row", "r5 = groovy sql groovy result set extension r0", "r5 update = 0", "label r6 = groovy sql groovy result set extension r0", "$ r1 = r6 get result set", "$ z1 = $ r1 next", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = groovy swing impl table layout cell r0", "$ z0 = r1 colfill", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = groovy util groovy test case r0", "$ z0 = r6 use agile dox name", "if $ z0 == 0 goto label1", "$ r2 = specialinvoke r0 get name", "$ r3 = $ r2 substring 4", "$ r4 = $ r3 replace all \\ `` [ a-z ] \\", "$ r5 = $ r4 to lower case", "return $ r5", "if $ z0 == 0 goto label1", "label $ r1 = specialinvoke r0 get name", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = groovy util xml parser r0", "r1 namespace aware = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org codehaus groovy ant groovy r0", "r1 use groovy shell = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org codehaus groovy ant groovyc r0", "r1 fork = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org codehaus groovy ant groovyc r0", "r1 stacktrace = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org codehaus groovy ant groovydoc r0", "r2 header = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r12 = new org codehaus groovy groovy bug error", "r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r7 = r11 append \\ `` tried to remove meta data with null key \\ ``", "$ r8 = $ r7 append r0", "$ r9 = $ r8 append \\ `` \\ ``", "$ r10 = $ r9 to string", "specialinvoke r12 < init > $ r10", "r13 = java lang throwable r12", "throw r13", "if r1 ! = null goto label1", "label r14 = org codehaus groovy ast a s t node r0", "$ r2 = r14 meta data map", "$ r2 remove r1", "r15 = org codehaus groovy ast a s t node r0", "$ r4 = r15 meta data map", "$ i0 = $ r4 size", "if $ i0 ! = 0 goto label2", "r16 = org codehaus groovy ast a s t node r0", "r16 meta data map = null", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r24 = org codehaus groovy ast method node r0", "$ r3 = r24 type descriptor", "if $ r3 ! = null goto label4", "r23 = new java lang string buffer", "r25 = org codehaus groovy ast method node r0", "$ r6 = r25 name", "$ i0 = $ r6 length", "r26 = org codehaus groovy ast method node r0", "$ r7 = r26 parameter", "$ i1 = lengthof $ r7", "$ i2 = $ i1 * 10", "$ i3 = $ i0 + $ i2", "specialinvoke r23 < init > $ i3", "r27 = org codehaus groovy ast method node r0", "$ r8 = r27 return type", "$ r9 = $ r8 get name", "r23 append $ r9", "r23 append 32", "r28 = org codehaus groovy ast method node r0", "$ r12 = r28 name", "r23 append $ r12", "r23 append 40", "i5 = 0", "label r29 = org codehaus groovy ast method node r0", "$ r15 = r29 parameter", "$ i4 = lengthof $ r15", "if i5 > = $ i4 goto label3", "if i5 < = 0 goto label2", "r23 append \\", "label r30 = org codehaus groovy ast method node r0", "$ r18 = r30 parameter", "r2 = $ r18 [ i5 ]", "$ r19 = r2 get type", "$ r20 = $ r19 get name", "r23 append $ r20", "i5 = i5 + 1", "goto label1", "if i5 > = $ i4 goto label3", "label r23 append 41", "$ r17 = r23 to string", "r31 = org codehaus groovy ast method node r0", "r31 type descriptor = $ r17", "label r32 = org codehaus groovy ast method node r0", "$ r4 = r32 type descriptor", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = org codehaus groovy runtime invoker helper invoke method r1 r2 r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = null", "r4 = org codehaus groovy control error collector r0", "r1 = r4 get error i0", "if r1 == null goto label1", "$ z0 = r1 instanceof org codehaus groovy control message syntax error message", "if $ z0 == 0 goto label1", "$ r2 = org codehaus groovy control message syntax error message r1", "r3 = $ r2 get cause", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org codehaus groovy control process unit r0", "$ i0 = r1 phase", "$ i1 = $ i0 + 1", "r2 = org codehaus groovy control process unit r0", "r2 goto phase $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = new java text simple date format", "specialinvoke $ r3 < init > r1", "$ r4 = r0 get time zone", "$ r3 set time zone $ r4", "$ r5 = r0 get time", "$ r6 = $ r3 format $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = new java text simple date format", "specialinvoke $ r3 < init > r1", "$ r4 = $ r3 parse r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get meta data", "$ r3 = new java util link hash map", "$ i0 = r1 get column count", "specialinvoke $ r3 < init > $ i0 1 0f", "i2 = 1", "label $ i1 = r1 get column count", "if i2 > $ i1 goto label2", "$ r5 = r1 get column label i2", "$ r6 = r0 get object i2", "$ r3 put $ r5 $ r6", "i2 = i2 + 1", "goto label1", "if i2 > $ i1 goto label2", "label $ r4 = new groovy sql groovy row result", "specialinvoke $ r4 < init > $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r0 add r1", "return r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 get component count", "return $ i0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r0 add r1", "return r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r0 add r1", "return r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus groovy tool groovydoc link argument r0", "$ r1 = r2 href", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "org codehaus groovy vmplugin v6 plugin default groovy method store bind var r0 r2", "r3 = r0 eval r1", "org codehaus groovy vmplugin v6 plugin default groovy method retrieve bind var r0 r2", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = new groovy util node list", "specialinvoke r4 < init >", "r5 = java util list r4", "r5 add r0", "r6 = groovy util node r0", "$ r3 = specialinvoke r6 depth first rest", "r7 = java util list r4", "r7 add all $ r3", "r8 = java util list r4", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new org codehaus groovy classgen return adder", "specialinvoke $ r2 < init >", "$ r2 visit method r0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org codehaus groovy runtime default groovy method with r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = java util collection singleton list r1", "org codehaus groovy runtime default groovy method mixin r0 $ r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org codehaus groovy runtime default groovy method get closure owner r0", "$ r3 = newarray java lang object [ 1 ]", "$ r3 [ 0 ] = r1", "org codehaus groovy runtime invoker helper invoke method r2 \\ `` print\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org codehaus groovy runtime default groovy method sprintf r0 r1 r2", "r0 print $ r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus groovy runtime default groovy method unique r0 1", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 iterator", "org codehaus groovy runtime default groovy method each $ r2 r1", "return r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 iterator", "org codehaus groovy runtime default groovy method each $ r2 r1", "return r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus groovy runtime typehandling default type transformation primitive array to list r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = org codehaus groovy runtime invoker helper a iterator r0", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r4 = r3 next", "$ r5 = r2 call $ r4", "r1 add $ r5", "goto label1", "if $ z0 == 0 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new java util array list", "specialinvoke $ r2 < init >", "$ r3 = org codehaus groovy runtime default groovy method collect nest r0 $ r2 r1", "$ r4 = java util list $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org codehaus groovy runtime invoker helper a iterator r0", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "r3 = r2 next", "r4 = r1 call r3", "if r4 == null goto label2", "return r4", "if r4 == null goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org codehaus groovy runtime default groovy method a collection r0", "$ r3 = java util array a list r1", "$ z0 = $ r2 contain all $ r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = groovy util groovy collection transpose r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "b0 = @ parameter1", "b4 = b0", "i1 = lengthof r0", "i5 = 0", "label if i5 > = i1 goto label2", "b2 = r0 [ i5 ]", "$ i3 = b4 + b2", "b4 = byte $ i3", "i5 = i5 + 1", "goto label1", "label if i5 > = i1 goto label2", "label return b4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = groovy util groovy collection min r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = r1 get maximum number of parameter", "if i0 == 1 goto label1", "r9 = new groovy util closure comparator", "specialinvoke r9 < init > r1", "r10 = java util comparator r9", "$ r6 = org codehaus groovy runtime default groovy method min r0 r10", "return $ r6", "if i0 == 1 goto label1", "label z2 = 1", "r7 = null", "r8 = null", "r2 = r0 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label5", "r3 = r2 next", "r4 = r1 call r3", "if z2 == 0 goto label3", "z2 = 0", "r7 = r3", "r8 = r4", "goto label4", "label goto label2", "if z2 == 0 goto label3", "label $ z1 = org codehaus groovy runtime script bytecode adapter compare less than r4 r8", "if $ z1 == 0 goto label4", "if $ z0 == 0 goto label5", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r0 put r1 r2", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java util collection unmodifiable collection r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java util collection unmodifiable collection r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java util collection synchronize collection r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "if z0 == 0 goto label1", "$ r4 = r0", "goto label2", "label r5 = new org codehaus groovy runtime number aware comparator", "specialinvoke r5 < init >", "r6 = java util comparator r5", "java util array sort $ r4 r6", "return $ r4", "if z0 == 0 goto label1", "label $ r2 = r0 clone", "$ r4 = java lang object [ ] $ r2"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org codehaus groovy runtime number aware comparator", "specialinvoke r2 < init >", "r3 = java util comparator r2", "java util array sort r0 r3", "return r0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r3 = new org codehaus groovy runtime number aware comparator", "specialinvoke r3 < init >", "r4 = java util comparator r3", "$ r2 = org codehaus groovy runtime default groovy method to sort r0 r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 be empty", "if $ z0 == 0 goto label1", "$ r2 = new java util no such element exception", "specialinvoke $ r2 < init > \\ `` can not pop an empty list\\ ``", "throw $ r2", "if $ z0 == 0 goto label1", "label $ i0 = r0 size", "$ i1 = $ i0 - 1", "$ r1 = r0 remove $ i1", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 iterator", "$ z0 = r1 have next", "if $ z0 ! = 0 goto label1", "$ r3 = new java util no such element exception", "specialinvoke $ r3 < init > \\ `` can not access first element from an empty iterable\\ ``", "throw $ r3", "if $ z0 ! = 0 goto label1", "label $ r2 = r1 next", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus groovy runtime default groovy method first r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "if $ i0 ! = 0 goto label1", "$ r2 = new java util no such element exception", "specialinvoke $ r2 < init > \\ `` can not access init for an empty object array\\ ``", "throw $ r2", "if $ i0 ! = 0 goto label1", "label $ i1 = lengthof r0", "$ i2 = $ i1 - 1", "r1 = org codehaus groovy runtime default groovy method create similar array r0 $ i2", "$ i3 = lengthof r0", "$ i4 = $ i3 - 1", "java lang system arraycopy r0 0 r1 0 $ i4", "return r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "if $ i0 ! = 0 goto label1", "$ r2 = new java util no such element exception", "specialinvoke $ r2 < init > \\ `` can not access init for an empty object array\\ ``", "throw $ r2", "if $ i0 ! = 0 goto label1", "label $ i1 = lengthof r0", "$ i2 = $ i1 - 1", "r1 = org codehaus groovy runtime default groovy method create similar array r0 $ i2", "$ i3 = lengthof r0", "$ i4 = $ i3 - 1", "java lang system arraycopy r0 0 r1 0 $ i4", "return r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = org codehaus groovy runtime string groovy method take r0 i0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i1 = lengthof r0", "if $ i1 == 0 goto label1", "if i0 > 0 goto label2", "label $ r1 = org codehaus groovy runtime default groovy method create similar array r0 0", "return $ r1", "if i0 > 0 goto label2", "label $ i2 = lengthof r0", "if $ i2 > i0 goto label3", "$ i5 = lengthof r0", "r2 = org codehaus groovy runtime default groovy method create similar array r0 $ i5", "$ i6 = lengthof r0", "java lang system arraycopy r0 0 r2 0 $ i6", "return r2", "if $ i2 > i0 goto label3", "label r3 = org codehaus groovy runtime default groovy method create similar array r0 i0", "$ i3 = lengthof r0", "$ i4 = $ i3 - i0", "java lang system arraycopy r0 $ i4 r3 0 i0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i1 = lengthof r0", "if $ i1 == 0 goto label1", "if i0 > 0 goto label2", "label $ r1 = org codehaus groovy runtime default groovy method create similar array r0 0", "return $ r1", "if i0 > 0 goto label2", "label $ i2 = lengthof r0", "if $ i2 > i0 goto label3", "$ i5 = lengthof r0", "r2 = org codehaus groovy runtime default groovy method create similar array r0 $ i5", "$ i6 = lengthof r0", "java lang system arraycopy r0 0 r2 0 $ i6", "return r2", "if $ i2 > i0 goto label3", "label r3 = org codehaus groovy runtime default groovy method create similar array r0 i0", "$ i3 = lengthof r0", "$ i4 = $ i3 - i0", "java lang system arraycopy r0 $ i4 r3 0 i0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i1 = lengthof r0", "if $ i1 > i0 goto label1", "$ r1 = org codehaus groovy runtime default groovy method create similar array r0 0", "return $ r1", "if $ i1 > i0 goto label1", "label if i0 > 0 goto label2", "$ i6 = lengthof r0", "r2 = org codehaus groovy runtime default groovy method create similar array r0 $ i6", "$ i7 = lengthof r0", "java lang system arraycopy r0 0 r2 0 $ i7", "return r2", "label if i0 > 0 goto label2", "label $ i2 = lengthof r0", "$ i3 = $ i2 - i0", "r3 = org codehaus groovy runtime default groovy method create similar array r0 $ i3", "$ i4 = lengthof r0", "$ i5 = $ i4 - i0", "java lang system arraycopy r0 0 r3 0 $ i5", "return r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i1 = lengthof r0", "if $ i1 > i0 goto label1", "$ r1 = org codehaus groovy runtime default groovy method create similar array r0 0", "return $ r1", "if $ i1 > i0 goto label1", "label if i0 > 0 goto label2", "$ i6 = lengthof r0", "r2 = org codehaus groovy runtime default groovy method create similar array r0 $ i6", "$ i7 = lengthof r0", "java lang system arraycopy r0 0 r2 0 $ i7", "return r2", "label if i0 > 0 goto label2", "label $ i2 = lengthof r0", "$ i3 = $ i2 - i0", "r3 = org codehaus groovy runtime default groovy method create similar array r0 $ i3", "$ i4 = lengthof r0", "$ i5 = $ i4 - i0", "java lang system arraycopy r0 0 r3 0 $ i5", "return r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i1 = 0", "$ r4 = new org codehaus groovy runtime callsite boolean closure wrapper", "specialinvoke $ r4 < init > r1", "label $ i0 = lengthof r0", "if i1 > = $ i0 goto label2", "r3 = r0 [ i1 ]", "$ r6 = newarray java lang object [ 1 ]", "$ r6 [ 0 ] = r3", "$ z0 = $ r4 call $ r6", "if $ z0 == 0 goto label2", "i1 = i1 + 1", "goto label1", "if $ z0 == 0 goto label2", "label $ r5 = org codehaus groovy runtime default groovy method take r0 i1", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i1 = 0", "$ r4 = new org codehaus groovy runtime callsite boolean closure wrapper", "specialinvoke $ r4 < init > r1", "label $ i0 = lengthof r0", "if i1 > = $ i0 goto label2", "r3 = r0 [ i1 ]", "$ r6 = newarray java lang object [ 1 ]", "$ r6 [ 0 ] = r3", "$ z0 = $ r4 call $ r6", "if $ z0 == 0 goto label2", "i1 = i1 + 1", "goto label1", "if $ z0 == 0 goto label2", "label $ r5 = org codehaus groovy runtime default groovy method take r0 i1", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i1 = 0", "$ r3 = new org codehaus groovy runtime callsite boolean closure wrapper", "specialinvoke $ r3 < init > r1", "label $ i0 = lengthof r0", "if i1 > = $ i0 goto label2", "$ r5 = newarray java lang object [ 1 ]", "$ r6 = r0 [ i1 ]", "$ r5 [ 0 ] = $ r6", "$ z0 = $ r3 call $ r5", "if $ z0 == 0 goto label2", "i1 = i1 + 1", "goto label1", "if $ z0 == 0 goto label2", "label $ r4 = org codehaus groovy runtime default groovy method drop r0 i1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof java util list", "if $ z0 == 0 goto label1", "$ r2 = java util list r0", "return $ r2", "if $ z0 == 0 goto label1", "label $ r1 = org codehaus groovy runtime default groovy method to list r0", "return $ r1"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "if z0 ! = 0 goto label1", "r8 = new org codehaus groovy runtime reverse list iterator", "$ r4 = java util array a list r0", "specialinvoke r8 < init > $ r4", "r9 = java util iterator r8", "$ r5 = org codehaus groovy runtime default groovy method to list r9", "$ r6 = $ r5 to array", "$ r7 = java lang object [ ] $ r6", "return $ r7", "if z0 ! = 0 goto label1", "label r1 = java util array a list r0", "java util collection reverse r1", "$ r2 = r1 to array", "$ i0 = r1 size", "java lang system arraycopy $ r2 0 r0 0 $ i0", "return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org codehaus groovy runtime default groovy method a collection r0", "r3 = org codehaus groovy runtime default groovy method a collection r1", "$ z0 = r2 be empty", "if $ z0 ! = 0 goto label1", "$ z1 = r3 be empty", "if $ z1 == 0 goto label2", "label return 1", "if $ z1 == 0 goto label2", "label r10 = new java util tree set", "r9 = new org codehaus groovy runtime number aware comparator", "specialinvoke r9 < init >", "r11 = java util comparator r9", "specialinvoke r10 < init > r11", "r10 add all r3", "r5 = r2 iterator", "label $ z3 = r5 have next", "if $ z3 == 0 goto label5", "r6 = r5 next", "$ z4 = r10 contain r6", "if $ z4 == 0 goto label4", "return 0", "if $ z4 == 0 goto label4", "label goto label3", "if $ z3 == 0 goto label5", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label3", "if r1 ! = null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if r1 ! = null goto label1", "label $ z0 = 0", "if r0 ! = null goto label3", "label if r1 ! = null goto label4", "return 0", "label if r1 ! = null goto label4", "label if r0 ! = r1 goto label5", "return 1", "label if r0 ! = r1 goto label5", "label $ i1 = lengthof r0", "$ i0 = lengthof r1", "if $ i1 == $ i0 goto label6", "label i5 = 0", "label $ i2 = lengthof r0", "if i5 > = $ i2 goto label9", "$ i4 = r0 [ i5 ]", "$ i3 = r1 [ i5 ]", "if $ i4 == $ i3 goto label8", "label i5 = i5 + 1", "goto label7", "if i5 > = $ i2 goto label9", "label return 1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org codehaus groovy runtime resource groovy method leave shift r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i2 = r0 length", "i1 = org codehaus groovy runtime default groovy method normalise index i0 $ i2", "$ z0 = r0 get i1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i2 = r0 length", "i1 = org codehaus groovy runtime default groovy method normalise index i0 $ i2", "$ z0 = r0 get i1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i2 = r0 length", "i1 = org codehaus groovy runtime default groovy method normalise index i0 $ i2", "$ z0 = r0 get i1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i2 = r0 length", "i1 = org codehaus groovy runtime default groovy method normalise index i0 $ i2", "$ z0 = r0 get i1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i2 = r0 length", "i1 = org codehaus groovy runtime default groovy method normalise index i0 $ i2", "$ z0 = r0 get i1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r0 put r1 r2", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus groovy runtime typehandling default type transformation primitive array to list r0", "$ r2 = org codehaus groovy runtime default groovy method to set $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i1 = java lang reflect array get length r0", "$ i2 = org codehaus groovy runtime default groovy method normalise index i0 $ i1", "$ r1 = java lang reflect array get r0 $ i2", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ c0 = r0 char value", "$ r2 = java lang integer value of $ c0", "$ i1 = org codehaus groovy runtime default groovy method compare to $ r2 r1", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ c0 = r0 char value", "$ r2 = java lang integer value of $ c0", "$ i1 = org codehaus groovy runtime default groovy method compare to $ r2 r1", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 boolean value", "$ z1 = r1 boolean value", "$ z2 = $ z0 ^ $ z1", "$ r2 = java lang boolean value of $ z2", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ c0 = r0 char value", "$ z0 = java lang character be upper case $ c0", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ c0 = r0 char value", "$ z0 = java lang character be letter $ c0", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ c0 = r0 char value", "$ z0 = java lang character be digit $ c0", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ c0 = r0 char value", "$ z0 = java lang character be letter or digit $ c0", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus groovy runtime string groovy method to big integer r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "r4 = new org codehaus groovy runtime default groovy method $ 2", "specialinvoke r4 < init > r1", "$ l1 = long i0", "r5 = java util timer task r4", "r0 schedule r5 $ l1", "r6 = java util timer task r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = org codehaus groovy runtime default groovy method find last index of r0 0 r1", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus groovy runtime invoker helper invoke constructor of r0 null", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r2 = @ parameter1", "$ z0 = r2 instanceof org codehaus groovy runtime handle meta class", "if $ z0 == 0 goto label1", "$ r1 = org codehaus groovy runtime handle meta class r2", "r2 = $ r1 get adaptee", "label r0 set meta class r2", "org codehaus groovy runtime default groovy method disable primitive optimization r0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "z0 = r0 [ i0 ]", "$ z1 = r0 [ i1 ]", "r0 [ i0 ] = $ z1", "r0 [ i1 ] = z0", "return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "$ r1 = new java io buffer writer", "$ r2 = new java io file writer", "specialinvoke $ r2 < init > r0 z0", "specialinvoke $ r1 < init > $ r2", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = org codehaus groovy runtime default groovy static method create temp dir null", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org codehaus groovy vmplugin v7 indy interface $ call_types method", "$ i0 = $ r3 ordinal", "$ r4 = org codehaus groovy vmplugin v7 indy interface real bootstrap r0 r1 $ i0 r2 0 0 0", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = groovy swing impl table layout r0", "$ i0 = r1 row count", "$ i1 = $ i0 + 1", "r2 = groovy swing impl table layout r0", "r2 row count = $ i1", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "if z0 == 0 goto label1", "r13 = groovy text markup base template r0", "$ r12 = specialinvoke r13 fork model r1", "goto label2", "label r14 = groovy text markup base template r0", "$ r5 = r14 engine", "r4 = $ r5 resolve template r2", "r15 = groovy text markup base template r0", "$ r7 = r15 engine", "r16 = groovy text markup base template r0", "$ r6 = r16 model type", "$ r8 = $ r7 create type check model template r4 $ r6", "$ r9 = $ r8 make $ r12", "r17 = groovy text markup base template r0", "$ r10 = r17 out", "$ r9 write to $ r10", "return r0", "if z0 == 0 goto label1", "label $ r12 = r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = groovy text markup template configuration r0", "r2 base template class = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io grpc deadline r0", "$ z0 = r2 expire", "if $ z0 ! = 0 goto label2", "r3 = io grpc deadline r0", "$ l0 = r3 deadline nanos", "r4 = io grpc deadline r0", "$ r1 = r4 ticker", "$ l1 = $ r1 read", "$ l2 = $ l0 - $ l1", "$ b3 = $ l2 cmp 0l", "if $ b3 > 0 goto label1", "r5 = io grpc deadline r0", "r5 expire = 1", "goto label2", "label return 1", "if $ b3 > 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r3 = new io grpc call option", "r4 = io grpc call option r0", "specialinvoke r3 < init > r4", "r3 wait for ready = 1", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = new io grpc call option", "r4 = io grpc call option r0", "specialinvoke r3 < init > r4", "r3 wait for ready = 0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 0 goto label1", "$ z0 = 1", "goto label2", "label com google common base precondition check argument $ z0 \\ `` invalid maxsize % s\\", "r4 = new io grpc call option", "r5 = io grpc call option r0", "specialinvoke r4 < init > r5", "$ r3 = java lang integer value of i0", "r4 max inbound message size = $ r3", "return r4", "if i0 < 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = io grpc internal channelz r0", "$ r4 = r9 per server socket", "r10 = io grpc internal with log id r1", "$ l0 = io grpc internal channelz id r10", "$ r5 = java lang long value of $ l0", "$ r6 = $ r4 get $ r5", "r3 = io grpc internal channelz $ server socket map $ r6", "$ z0 = io grpc internal channelz $ assertion disable", "if $ z0 ! = 0 goto label1", "if r3 ! = null goto label1", "r8 = new java lang assertion error", "specialinvoke r8 < init >", "throw r8", "if r3 ! = null goto label1", "label r11 = java util map r3", "io grpc internal channelz remove r11 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = io grpc internal grpc util http status to grpc code i0", "$ r1 = $ r0 to status", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append \\ `` http status code \\ ``", "$ r4 = $ r3 append i0", "$ r5 = $ r4 to string", "$ r6 = $ r1 with description $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "if r1 == null goto label1", "$ r3 append r1", "$ r3 append 32", "label $ r3 append \\ `` grpc-java-\\ ``", "$ r3 append r0", "$ r3 append 47", "$ r3 append \\ `` 1 15 0\\ ``", "$ r8 = $ r3 to string", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = io grpc internal http2 ping r0", "$ l0 = r1 data", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io grpc internal internal handler registry r0", "$ r1 = r2 service", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io grpc internal serializing executor r0", "$ r2 = r4 run queue", "$ r3 = com google common base precondition check not null r1 \\ `` \\ ' r\\ ' must not be null \\ ``", "$ r2 add $ r3", "r5 = io grpc internal serializing executor r0", "specialinvoke r5 schedule r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = new java lang unsupported operation exception", "specialinvoke $ r3 < init > \\ `` not implemented\\ ``", "throw $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = io grpc forward channel builder r0", "$ r1 = r2 enable retry", "r3 = io grpc manage channel builder $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io grpc method descriptor r0", "$ r2 = r4 request marshaller", "$ r3 = $ r2 parse r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com google common base precondition check not null r0 \\ `` full method name\\ ``", "$ r2 = java lang string $ r1", "i0 = $ r2 last index of 47", "if i0 ! = -1 goto label1", "return null", "if i0 ! = -1 goto label1", "label $ r3 = r0 substring 0 i0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["$ r0 = io grpc server provider provider", "if $ r0 ! = null goto label1", "r3 = new io grpc manage channel provider $ provider not find exception", "specialinvoke r3 < init > \\ `` no functional server find try add a dependency on the grpc-netty or grpc-netty-shaded artifact\\ ``", "r4 = java lang throwable r3", "throw r4", "if $ r0 ! = null goto label1", "label $ r1 = io grpc server provider provider", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = io grpc server service definition r0", "$ r1 = r2 service descriptor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io grpc stub abstract stub r0", "$ r3 = r6 channel", "r7 = io grpc stub abstract stub r0", "$ r2 = r7 call option", "$ r4 = $ r2 with call credential r1", "r8 = io grpc stub abstract stub r0", "$ r5 = r8 build $ r3 $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r5 = io grpc stub abstract stub r0", "$ r2 = r5 channel", "r6 = io grpc stub abstract stub r0", "$ r1 = r6 call option", "$ r3 = $ r1 with max outbound message size i0", "r7 = io grpc stub abstract stub r0", "$ r4 = r7 build $ r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new com google common collect constraint $ constrain multiset", "specialinvoke r3 < init > r0 r1", "r4 = com google common collect multiset r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com google common io byte stream a byte source r0", "$ l0 = $ r1 size", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com google common io resource new reader supplier r0 r1", "$ r3 = com google common io char stream read line $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = com github rholder retry retryer builder r0", "$ r2 = r5 rejection predicate", "r4 = new com github rholder retry retryer builder $ exception class predicate", "specialinvoke r4 < init > class \\ `` ljava lang runtime exception \\ ``", "r6 = com google common base predicate r4", "$ r3 = com google common base predicate or $ r2 r6", "r7 = com github rholder retry retryer builder r0", "r7 rejection predicate = $ r3", "r8 = com github rholder retry retryer builder r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["l0 = @ parameter0", "$ r0 = java util concurrent time unit milliseconds", "$ r1 = com github rholder retry stop strategy stop after delay l0 $ r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r1 [ i1 ]", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r5 = r9 append \\ `` should not contain \\ ``", "$ r6 = $ r5 append r3", "$ r7 = $ r6 to string", "r10 = com google common collect test abstract container tester r0", "$ r8 = r10 actual content", "$ z0 = $ r8 contain r3", "com google common collect test abstract container tester assert false $ r7 $ z0", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util array a list r1", "r4 = com google common collect test feature specific test suite builder r0", "$ r3 = r4 suppress $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com google common collect test google test string multiset generator r0", "$ r2 = r3 order r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r12 = com google common collect test tester navigable set navigation tester r0", "$ r2 = r12 navigable set", "r13 = com google common collect test tester navigable set navigation tester r0", "$ r1 = r13 a", "$ r3 = $ r2 low $ r1", "com google common collect test tester navigable set navigation tester assert equal null $ r3", "r14 = com google common collect test tester navigable set navigation tester r0", "$ r6 = r14 a", "r15 = com google common collect test tester navigable set navigation tester r0", "$ r5 = r15 navigable set", "r16 = com google common collect test tester navigable set navigation tester r0", "$ r4 = r16 b", "$ r7 = $ r5 low $ r4", "com google common collect test tester navigable set navigation tester assert equal $ r6 $ r7", "r17 = com google common collect test tester navigable set navigation tester r0", "$ r10 = r17 b", "r18 = com google common collect test tester navigable set navigation tester r0", "$ r9 = r18 navigable set", "r19 = com google common collect test tester navigable set navigation tester r0", "$ r8 = r19 c", "$ r11 = $ r9 low $ r8", "com google common collect test tester navigable set navigation tester assert equal $ r10 $ r11", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["$ r0 = newarray java lang reflect method [ 4 ]", "$ r1 = com google common collect test helper get method class \\ `` lcom google common collect test tester navigable set navigation tester \\", "$ r0 [ 0 ] = $ r1", "$ r2 = com google common collect test helper get method class \\ `` lcom google common collect test tester navigable set navigation tester \\", "$ r0 [ 1 ] = $ r2", "$ r3 = com google common collect test helper get method class \\ `` lcom google common collect test tester navigable set navigation tester \\", "$ r0 [ 2 ] = $ r3", "$ r4 = com google common collect test helper get method class \\ `` lcom google common collect test tester navigable set navigation tester \\", "$ r0 [ 3 ] = $ r4", "return $ r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com google common collect test test integer sort set generator r0", "$ r2 = r3 order r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "c0 = @ parameter2", "r2 = com google common escape escapers compute replacement r0 c0", "junit framework assert assert not null r2", "junit framework assert assert equal r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "c0 = @ parameter1", "$ r1 = com google common escape escapers compute replacement r0 c0", "junit framework assert assert null $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = com google common test null pointer tester $ visibility public", "r2 = com google common test abstract package sanity test r0", "r2 visibility = $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r3 = r0", "$ r1 = r0 get cause", "if $ r1 == null goto label1", "r3 = r0 get cause", "label $ r2 = com google inject internal exception rethrow r3", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "$ r6 = r1 get", "r8 = com google inject internal provider internal factory r0", "$ r7 = r8 source", "r5 = r2 check for null $ r6 $ r7 r3", "r4 set proxy delegate r5", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r7 = @ parameter0", "$ z0 = r7 instanceof com google inject spi element source", "if $ z0 == 0 goto label1", "$ r6 = com google inject spi element source r7", "r7 = $ r6 get declare source", "label $ z1 = r7 instanceof java lang reflect method", "if $ z1 == 0 goto label2", "$ r5 = java lang reflect method r7", "r7 = com google inject internal util stack trace element for member $ r5", "label $ z2 = r7 instanceof java lang stack trace element", "if $ z2 == 0 goto label3", "$ r3 = java lang stack trace element r7", "r8 = com google inject grapher short name factory r0", "$ r4 = r8 get file string $ r3", "return $ r4", "if $ z2 == 0 goto label3", "label $ r1 = r7 to string", "r9 = com google inject grapher short name factory r0", "$ r2 = specialinvoke r9 strip package $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 api timestamp with time zone r0", "$ l0 = r1 date value", "$ i1 = org h2 util date time utils year from date value $ l0", "return $ i1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org h2 bnf context db column", "specialinvoke $ r2 < init > r0 r1 1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org h2 bnf context db column", "specialinvoke $ r2 < init > r0 r1 0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = java lang boolean false", "r5 = org h2 engine generate key r0", "$ r2 = r5 generate key request", "$ z0 = $ r3 equal $ r2", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label r6 = org h2 engine generate key r0", "$ r4 = r6 row", "$ r4 add r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label01", "$ r53 = null", "goto label02", "label r2 = $ r53", "$ r5 = java lang boolean false", "r87 = org h2 engine generate key r0", "$ r4 = r87 generate key request", "$ z0 = $ r5 equal $ r4", "if $ z0 == 0 goto label03", "r88 = org h2 engine generate key r0", "r88 clear null", "r75 = new org h2 result local result", "specialinvoke r75 < init >", "return r75", "if $ z0 == 0 goto label03", "label $ r7 = java lang boolean true", "r89 = org h2 engine generate key r0", "$ r6 = r89 generate key request", "$ z1 = $ r7 equal $ r6", "if $ z1 == 0 goto label06", "r76 = new java util array list", "r90 = org h2 engine generate key r0", "$ r48 = r90 all columns", "$ i3 = $ r48 size", "specialinvoke r76 < init > $ i3", "r54 = r76", "r91 = org h2 engine generate key r0", "$ r49 = r91 all columns", "r55 = $ r49 iterator", "label $ z13 = r55 have next", "if $ z13 == 0 goto label05", "$ r50 = r55 next", "r56 = org h2 table column $ r50", "r77 = new org h2 expression expression column", "specialinvoke r77 < init > r2 r56", "r76 add r77", "goto label04", "if $ z13 == 0 goto label05", "label goto label23", "label i12 = r54 size", "if i12 ! = 0 goto label24", "r111 = org h2 engine generate key r0", "r111 clear null", "r85 = new org h2 result local result", "specialinvoke r85 < init >", "return r85", "if i12 ! = 0 goto label24", "label r86 = new org h2 result local result", "$ r18 = newarray org h2 expression expression [ 0 ]", "$ r19 = r54 to array $ r18", "$ r20 = org h2 expression expression [ ] $ r19", "specialinvoke r86 < init > r1 $ r20 i12", "r112 = org h2 engine generate key r0", "$ r21 = r112 data", "r70 = $ r21 iterator", "label $ z4 = r70 have next", "if $ z4 == 0 goto label32", "$ r22 = r70 next", "r71 = java util map $ r22", "r72 = newarray org h2 value value [ i12 ]", "$ r23 = r71 entry set", "r73 = $ r23 iterator", "label $ z5 = r73 have next", "if $ z5 == 0 goto label28", "$ r26 = r73 next", "r74 = java util map $ entry $ r26", "r113 = org h2 engine generate key r0", "$ r27 = r113 all columns", "$ r28 = r74 get key", "i13 = $ r27 index of $ r28", "if i13 < 0 goto label27", "$ r29 = r74 get value", "$ r30 = org h2 value value $ r29", "r72 [ i13 ] = $ r30", "label goto label26", "if $ z5 == 0 goto label28", "label i14 = 0", "label if i14 > = i12 goto label31", "$ r24 = r72 [ i14 ]", "if $ r24 ! = null goto label30", "$ r25 = org h2 value value null instance", "r72 [ i14 ] = $ r25", "label i14 = i14 + 1", "goto label29", "label if i14 > = i12 goto label31", "label r114 = org h2 value value [ ] r72", "r86 add row r114", "goto label25", "if $ z4 == 0 goto label32", "label r115 = org h2 engine generate key r0", "r115 clear null", "return r86", "if $ z1 == 0 goto label06", "label r92 = org h2 engine generate key r0", "$ r8 = r92 generate key request", "$ z2 = $ r8 instanceof int [ ]", "if $ z2 == 0 goto label11", "r93 = org h2 engine generate key r0", "$ r38 = r93 table", "if $ r38 == null goto label10", "r94 = org h2 engine generate key r0", "$ r40 = r94 generate key request", "$ r41 = int [ ] $ r40", "r57 = int [ ] $ r41", "r95 = org h2 engine generate key r0", "$ r42 = r95 table", "r58 = $ r42 get columns", "i4 = lengthof r58", "r96 = org h2 engine generate key r0", "$ r43 = r96 all columns", "$ r43 clear", "r78 = new java util array list", "$ i1 = lengthof r57", "specialinvoke r78 < init > $ i1", "r54 = r78", "i5 = lengthof r57", "i6 = 0", "label if i6 > = i5 goto label09", "i7 = r57 [ i6 ]", "if i7 < 1 goto label08", "if i7 > i4 goto label08", "$ i2 = i7 - 1", "r60 = r58 [ $ i2 ]", "r79 = new org h2 expression expression column", "specialinvoke r79 < init > r2 r60", "r78 add r79", "r97 = org h2 engine generate key r0", "$ r46 = r97 all columns", "$ r46 add r60", "label i6 = i6 + 1", "goto label07", "label if i6 > = i5 goto label09", "label goto label23", "if $ r38 == null goto label10", "label r98 = org h2 engine generate key r0", "r98 clear null", "r80 = new org h2 result local result", "specialinvoke r80 < init >", "return r80", "if $ z2 == 0 goto label11", "label r99 = org h2 engine generate key r0", "$ r9 = r99 generate key request", "$ z3 = $ r9 instanceof java lang string [ ]", "if $ z3 == 0 goto label22", "r100 = org h2 engine generate key r0", "$ r11 = r100 table", "if $ r11 == null goto label21", "r101 = org h2 engine generate key r0", "$ r13 = r101 generate key request", "$ r14 = java lang string [ ] $ r13", "r61 = java lang string [ ] $ r14", "r102 = org h2 engine generate key r0", "$ r15 = r102 all columns", "$ r15 clear", "r81 = new java util array list", "$ i0 = lengthof r61", "specialinvoke r81 < init > $ i0", "r54 = r81", "i8 = lengthof r61", "i9 = 0", "label if i9 > = i8 goto label20", "r63 = r61 [ i9 ]", "r103 = org h2 engine generate key r0", "$ r32 = r103 table", "$ z6 = $ r32 do column exist r63", "if $ z6 == 0 goto label13", "r104 = org h2 engine generate key r0", "$ r37 = r104 table", "r64 = $ r37 get column r63", "goto label18", "label r82 = new org h2 expression expression column", "specialinvoke r82 < init > r2 r64", "r81 add r82", "r108 = org h2 engine generate key r0", "$ r68 = r108 all columns", "$ r68 add r64", "label i9 = i9 + 1", "goto label12", "if $ z6 == 0 goto label13", "label r65 = org h2 util string utils to upper english r63", "r105 = org h2 engine generate key r0", "$ r33 = r105 table", "$ z7 = $ r33 do column exist r65", "if $ z7 == 0 goto label14", "r106 = org h2 engine generate key r0", "$ r36 = r106 table", "r64 = $ r36 get column r65", "if $ z7 == 0 goto label14", "label r107 = org h2 engine generate key r0", "$ r34 = r107 table", "r66 = $ r34 get columns", "i10 = lengthof r66", "i11 = 0", "label if i11 > = i10 goto label17", "r3 = r66 [ i11 ]", "$ r35 = r3 get name", "$ z8 = $ r35 equal ignore case r65", "if $ z8 == 0 goto label16", "r64 = r3", "if $ z8 == 0 goto label16", "label i11 = i11 + 1", "goto label15", "label if i11 > = i10 goto label17", "label goto label19", "label if i9 > = i8 goto label20", "label goto label23", "if $ r11 == null goto label21", "label r109 = org h2 engine generate key r0", "r109 clear null", "r83 = new org h2 result local result", "specialinvoke r83 < init >", "return r83", "if $ z3 == 0 goto label22", "label r110 = org h2 engine generate key r0", "r110 clear null", "r84 = new org h2 result local result", "specialinvoke r84 < init >", "return r84", "if r1 ! = null goto label01", "label $ r53 = r1 get database"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], [46], [47], [], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [], [87], [88], [89], [], [91], [92], [93], [], [95], [96], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [110], [111], [112], [113], [114], [115], [116], [117], [118], [119], [120], [121], [122], [123], [124], [125], [126], [127], [128], [129], [130], [131], [132], [], [134], [135], [136], [137], [138], [139], [140], [], [142], [143], [144], [145], [146], [147], [148], [149], [150], [151], [152], [153], [154], [155], [156], [157], [158], [159], [160], [161], [162], [163], [164], [165], [166], [167], [168], [169], [170], [171], [], [173], [174], [175], [176], [177], [178], [179], [], [181], [182], [183], [184], [185], [186], [187], [188], [189], [190], [191], [192], [193], [194], [195], [196], [197], [198], [199], [200], [201], [202], [203], [], [205], [206], [207], [208], [209], [210], [211], [212], [213], [], [215], [216], [217], [218], [219], [], [221], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` get s q l keywords\\ ``", "return \\ `` limit minus offset rownum sysdate systime systimestamp today\\ ``"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org h2 mvstore concurrent array list r0", "r1 = r3 array", "$ i0 = lengthof r1", "if $ i0 ! = 0 goto label1", "$ r2 = null", "goto label2", "label return $ r2", "if $ i0 ! = 0 goto label1", "label $ r2 = r1 [ 0 ]"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org h2 mvstore concurrent array list r0", "$ r2 = r6 peek last", "if $ r2 == r1 goto label1", "return 0", "if $ r2 == r1 goto label1", "label r7 = org h2 mvstore concurrent array list r0", "$ r4 = r7 array", "r8 = org h2 mvstore concurrent array list r0", "$ r3 = r8 array", "$ i0 = lengthof $ r3", "$ i1 = $ i0 - 1", "$ r5 = java util array copy of $ r4 $ i1", "r9 = org h2 mvstore concurrent array list r0", "r9 array = $ r5", "return 1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 mvstore file store r0", "$ r1 = r2 write count", "$ l0 = $ r1 get", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "i1 = @ parameter1", "r2 = org h2 mvstore free space bit set r0", "i2 = specialinvoke r2 get block l0", "r3 = org h2 mvstore free space bit set r0", "i3 = specialinvoke r3 get block count i1", "i5 = i2", "label $ i4 = i2 + i3", "if i5 > = $ i4 goto label3", "r4 = org h2 mvstore free space bit set r0", "$ r1 = r4 set", "$ z0 = $ r1 get i5", "if $ z0 == 0 goto label2", "return 0", "if $ z0 == 0 goto label2", "label i5 = i5 + 1", "goto label1", "if i5 > = $ i4 goto label3", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "l1 = @ parameter2", "r3 = org h2 mvstore m v map r0", "r3 store = r1", "r4 = org h2 mvstore m v map r0", "r4 id = i0", "r5 = org h2 mvstore m v map r0", "r5 create version = l1", "$ l2 = r1 get current version", "r6 = org h2 mvstore m v map r0", "r6 write version = $ l2", "r7 = org h2 mvstore m v map r0", "$ r2 = org h2 mvstore page create empty r7 -1l", "r8 = org h2 mvstore m v map r0", "r8 root = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org h2 mvstore m v store r0", "$ r3 = r8 meta", "r7 = new java lang string builder", "specialinvoke r7 < init >", "$ r4 = r7 append \\ `` name \\ ``", "$ r5 = $ r4 append r1", "$ r6 = $ r5 to string", "$ z0 = $ r3 contain key $ r6", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 mvstore m v store r0", "$ z0 = r2 close", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label r3 = org h2 mvstore m v store r0", "r1 = r3 file store", "if r1 == null goto label2", "$ z1 = r1 be read only", "if $ z1 ! = 0 goto label2", "r4 = org h2 mvstore m v store r0", "specialinvoke r4 stop background thread", "r5 = org h2 mvstore m v store r0", "$ z2 = r5 have unsaved change", "if $ z2 == 0 goto label2", "r6 = org h2 mvstore m v store r0", "specialinvoke r6 commit and save", "label r7 = org h2 mvstore m v store r0", "specialinvoke r7 close store 1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 mvstore m v store r0", "$ l0 = r1 current version", "r2 = org h2 mvstore m v store r0", "r2 rollback to $ l0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 mvstore m v store r0", "$ r1 = r2 file store", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ l2 = long i0", "$ l3 = $ l2 * 1024l", "l1 = $ l3 * 1024l", "r7 = org h2 mvstore m v store r0", "$ r1 = r7 cache", "if $ r1 == null goto label1", "r8 = org h2 mvstore m v store r0", "$ r5 = r8 cache", "$ r5 set max memory l1", "r9 = org h2 mvstore m v store r0", "$ r6 = r9 cache", "$ r6 clear", "label r10 = org h2 mvstore m v store r0", "$ r2 = r10 cache chunk ref", "if $ r2 == null goto label2", "r11 = org h2 mvstore m v store r0", "$ r3 = r11 cache chunk ref", "$ l4 = l1 4l", "$ r3 set max memory $ l4", "r12 = org h2 mvstore m v store r0", "$ r4 = r12 cache chunk ref", "$ r4 clear", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "$ r1 = new java io print writer", "$ r2 = java lang system out", "specialinvoke $ r1 < init > $ r2", "org h2 mvstore m v store tool dump r0 $ r1 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org h2 mvstore rtree spatial key r0", "$ r3 = r4 min max", "$ r2 = r1 min max", "$ z0 = java util array equal $ r3 $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "$ i1 = 3 * i0", "r3 = org h2 mvstore write buffer r0", "r2 = specialinvoke r3 ensure capacity $ i1", "org h2 mvstore data utils write string data r2 r1 i0", "r4 = org h2 mvstore write buffer r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 result result with generated key r0", "$ i0 = r1 update count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org h2 schema schema r0", "$ r2 = r5 synonym", "$ r3 = $ r2 get r1", "$ r4 = org h2 table table synonym $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r8 = @ parameter0", "r9 = @ parameter1", "r10 = @ parameter2", "r11 = @ parameter3", "if r8 ! = null goto label1", "r12 = org h2 schema sequence r0", "$ l12 = r12 value", "r8 = java lang long value of $ l12", "label if r9 ! = null goto label2", "r13 = org h2 schema sequence r0", "$ l11 = r13 min value", "r9 = java lang long value of $ l11", "label if r10 ! = null goto label3", "r14 = org h2 schema sequence r0", "$ l10 = r14 max value", "r10 = java lang long value of $ l10", "label if r11 ! = null goto label4", "r15 = org h2 schema sequence r0", "$ l9 = r15 increment", "r11 = java lang long value of $ l9", "label $ l0 = r8 long value", "$ l1 = r9 long value", "$ l2 = r10 long value", "$ l3 = r11 long value", "$ z0 = org h2 schema sequence be valid $ l0 $ l1 $ l2 $ l3", "if $ z0 ! = 0 goto label5", "$ r1 = newarray java lang string [ 5 ]", "r16 = org h2 schema sequence r0", "$ r2 = r16 get name", "$ r1 [ 0 ] = $ r2", "$ r3 = java lang string value of r8", "$ r1 [ 1 ] = $ r3", "$ r4 = java lang string value of r9", "$ r1 [ 2 ] = $ r4", "$ r5 = java lang string value of r10", "$ r1 [ 3 ] = $ r5", "$ r6 = java lang string value of r11", "$ r1 [ 4 ] = $ r6", "$ r7 = org h2 message db exception get 90009 $ r1", "r17 = java lang throwable $ r7", "throw r17", "if $ z0 ! = 0 goto label5", "label $ l4 = r8 long value", "r18 = org h2 schema sequence r0", "r18 value = $ l4", "$ l5 = r8 long value", "r19 = org h2 schema sequence r0", "r19 value with margin = $ l5", "$ l6 = r9 long value", "r20 = org h2 schema sequence r0", "r20 min value = $ l6", "$ l7 = r10 long value", "r21 = org h2 schema sequence r0", "r21 max value = $ l7", "$ l8 = r11 long value", "r22 = org h2 schema sequence r0", "r22 increment = $ l8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org h2 table join batch $ fake lookup batch", "specialinvoke r2 < init > r0", "r3 = org h2 index index lookup batch r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org h2 table table r0", "$ r2 = r4 synonym", "$ r3 = org h2 table table add $ r2 r1", "r5 = org h2 table table r0", "r5 synonym = $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = org h2 table table filter r0", "r2 = r13 get columns", "i0 = lengthof r2", "$ i1 = r1 size", "if i0 == $ i1 goto label1", "$ r11 = org h2 message db exception get 21002", "r14 = java lang throwable $ r11", "throw r14", "if i0 == $ i1 goto label1", "label r12 = new java util hash map", "specialinvoke r12 < init > i0", "i2 = 0", "label if i2 > = i0 goto label6", "$ r6 = r1 get i2", "r4 = java lang string $ r6", "i3 = 0", "label if i3 > = i2 goto label5", "$ r9 = r1 get i3", "$ z0 = r4 equal $ r9", "if $ z0 == 0 goto label4", "$ r10 = org h2 message db exception get 42121 r4", "r15 = java lang throwable $ r10", "throw r15", "if $ z0 == 0 goto label4", "label i3 = i3 + 1", "goto label3", "label if i3 > = i2 goto label5", "label $ r7 = r2 [ i2 ]", "r12 put $ r7 r4", "i2 = i2 + 1", "goto label2", "label if i2 > = i0 goto label6", "label r16 = org h2 table table filter r0", "r16 derive column map = r12", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [], [29], [30], [31], [32], [], [34], [35], [36], []]}
{"nodes": ["$ r0 = org h2 util date time utils cached_calendar", "$ r1 = $ r0 get", "r3 = java util gregorian calendar $ r1", "if r3 ! = null goto label1", "r3 = org h2 util date time utils create gregorian calendar", "$ r2 = org h2 util date time utils cached_calendar", "$ r2 set r3", "label r3 clear", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["l0 = @ parameter0", "$ i1 = org h2 util date time utils get week year l0 1 4", "return $ i1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "l13 = @ parameter1", "$ b2 = l13 cmp 0l", "if $ b2 > = 0 goto label1", "r0 append 45", "l13 = neg l13", "label $ l3 = neg l13", "l14 = $ l3 -1000000l", "$ l4 = l14 * 1000000l", "l15 = l13 - $ l4", "l16 = l14 1000l", "$ l5 = l16 * 1000l", "l17 = l14 - $ l5", "l18 = l16 60l", "$ l6 = l18 * 60l", "l19 = l16 - $ l6", "l0 = l18 60l", "$ l7 = l0 * 60l", "l20 = l18 - $ l7", "org h2 util string utils append zero pad r0 2 l0", "r0 append 58", "org h2 util string utils append zero pad r0 2 l20"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["$ z0 = org h2 util local date time utils is_java8_date_api_present", "return $ z0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "label $ r2 = org h2 util local date time utils local_time_of_nano", "$ r1 = newarray java lang object [ 1 ]", "$ r3 = r0 convert to 9", "$ r4 = org h2 value value time $ r3", "$ l0 = $ r4 get nanos", "$ r5 = java lang long value of $ l0", "$ r1 [ 0 ] = $ r5", "$ r6 = $ r2 invoke null $ r1", "label return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org h2 util source compiler r0", "r1 use java system compiler = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["l0 = @ parameter0", "i1 = @ parameter1", "i2 = @ parameter2", "$ l3 = long i2", "$ l4 = $ l3 * 1000000000l", "$ r0 = org h2 api interval of hour minute nanos l0 i1 $ l4", "return $ r0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org h2 command dml all column for plan r0", "$ r2 = r9 map", "if $ r2 ! = null goto label1", "r8 = new java util hash map", "specialinvoke r8 < init >", "r10 = org h2 command dml all column for plan r0", "r10 map = r8", "r11 = org h2 command dml all column for plan r0", "$ r7 = r11 filter", "r12 = org h2 command dml all column for plan r0", "org h2 expression expression visitor all column for table filter $ r7 r12", "label r13 = org h2 command dml all column for plan r0", "$ r3 = r13 map", "$ r4 = $ r3 get r1", "$ r5 = java util array list $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "r2 = @ parameter3", "if z0 == 0 goto label1", "r4 = new org h2 command dml select group $ group", "$ r3 = r4", "specialinvoke r4 < init > r0 r1 r2", "goto label2", "label r6 = org h2 command dml select group $ r3", "return r6", "if z0 == 0 goto label1", "label r5 = new org h2 command dml select group $ plain", "$ r3 = r5", "specialinvoke r5 < init > r0 r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 engine connection info r0", "r1 remove property \\ `` authrealm\\", "r2 = org h2 engine connection info r0", "r2 remove property \\ `` authzpwd\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 expression analysis window frame r0", "$ r1 = r2 unit", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 expression analysis window frame r0", "$ r1 = r2 start", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = new java lang index out of bound exception", "specialinvoke $ r1 < init >", "throw $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 read type info", "r3 = org h2 expression parameter remote r0", "r3 type = $ r2", "$ i0 = r1 read int", "r4 = org h2 expression parameter remote r0", "r4 nullable = $ i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "if r1 ! = null goto label1", "r19 = new java lang null pointer exception", "specialinvoke r19 < init >", "throw r19", "if r1 ! = null goto label1", "label r22 = org h2 jdbc jdbc blob r0", "$ z0 = r22 be debug enabled", "if $ z0 == 0 goto label2", "r20 = new java lang string builder", "specialinvoke r20 < init >", "$ r9 = r20 append \\ `` set byte \\ ``", "$ r10 = $ r9 append l0", "$ r11 = $ r10 append \\", "$ r12 = org h2 jdbc jdbc blob quote bytes r1", "$ r13 = $ r11 append $ r12", "$ r14 = $ r13 append \\ `` \\ ``", "$ r15 = $ r14 to string", "r23 = org h2 jdbc jdbc blob r0", "r23 debug code $ r15", "label r24 = org h2 jdbc jdbc blob r0", "r24 check editable", "$ b1 = l0 cmp 1l", "if $ b1 == 0 goto label3", "$ r6 = java lang long value of l0", "$ r7 = org h2 message db exception get invalid value exception \\ `` pos\\", "r25 = java lang throwable $ r7", "throw r25", "if $ b1 == 0 goto label3", "label r26 = org h2 jdbc jdbc blob r0", "$ r4 = r26 conn", "r21 = new java io byte array input stream", "specialinvoke r21 < init > r1", "$ r5 = $ r4 create blob r21 -1l", "r27 = org h2 jdbc jdbc blob r0", "r27 complete write $ r5", "$ i2 = lengthof r1", "label return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [39], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org h2 mvstore file store r0", "$ r1 = r2 free space", "$ i1 = $ r1 get project fill rate i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org h2 security auth config property r0", "$ r4 = r6 property", "$ r5 = $ r4 get r1", "r3 = java lang string $ r5", "if r3 ! = null goto label1", "return r2", "if r3 ! = null goto label1", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r22 = org h2 security auth default authenticator r0", "$ z0 = r22 skip default initialization", "if $ z0 == 0 goto label01", "return", "if $ z0 == 0 goto label01", "label r23 = org h2 security auth default authenticator r0", "$ z1 = r23 initialize", "if $ z1 == 0 goto label02", "label entermonitor r0", "label r24 = org h2 security auth default authenticator r0", "$ z2 = r24 initialize", "if $ z2 == 0 goto label05", "exitmonitor r0", "label return", "if $ z2 == 0 goto label05", "label r3 = r1 get trace 2", "r16 = null", "label r17 = org h2 engine sys property auth_config_file", "if r17 == null goto label08", "$ z4 = r3 be debug enabled", "if $ z4 == 0 goto label07", "$ r7 = newarray java lang object [ 1 ]", "$ r7 [ 0 ] = r17", "r3 debug \\ `` default authenticator config configuration read from system property h2auth configurationfile= { 0 } \\", "label r19 = new java net url", "specialinvoke r19 < init > r17", "r16 = r19", "label if r16 ! = null goto label10", "$ z3 = r3 be debug enabled", "if $ z3 == 0 goto label09", "r3 debug \\ `` default authenticator config default configuration\\ ``", "label r25 = org h2 security auth default authenticator r0", "specialinvoke r25 default configuration", "goto label11", "label goto label13", "label r28 = org h2 security auth default authenticator r0", "r28 initialize = 1", "label if r16 ! = null goto label10", "label r26 = org h2 security auth default authenticator r0", "r26 configure from url r16"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], [39], [40], [41], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org h2 security auth realm config r0", "r2 name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org h2 table table filter r0", "$ r2 = r5 common join column to exclude", "if $ r2 ! = null goto label1", "$ r4 = org h2 util utils new small array list", "r6 = org h2 table table filter r0", "r6 common join column to exclude = $ r4", "label r7 = org h2 table table filter r0", "$ r3 = r7 common join column to exclude", "$ r3 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["l0 = @ parameter0", "$ r0 = org h2 util date time utils get time zone", "$ i1 = $ r0 get time zone offset u t c l0", "return $ i1"], "adj": [[1], [2], [3], []]}
{"nodes": ["l1 = @ parameter0", "l2 = l1 % 86400000000000l", "$ b0 = l2 cmp 0l", "if $ b0 > = 0 goto label1", "l2 = l2 + 86400000000000l", "label return l2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r6 = new org h2 util json j s o n byte array target", "specialinvoke r6 < init >", "r7 = new org h2 util geometry geo json utils $ geo json target", "specialinvoke r7 < init > r6 i0", "r8 = org h2 util geometry geometry utils $ target r7", "org h2 util geometry e w k b utils parse e w k b r0 r8", "$ r5 = r6 get result", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r4 = new org h2 util geometry geometry utils $ envelope target", "specialinvoke r4 < init >", "r5 = org h2 util geometry geometry utils $ target r4", "org h2 util geometry e w k b utils parse e w k b r0 r5", "$ r3 = r4 get envelope", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org h2 util geometry j t s utils parse geometry r0 r1 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r3 = new java lang null pointer exception", "specialinvoke $ r3 < init >", "throw $ r3", "if r1 ! = null goto label1", "label $ r2 = org h2 util json j s o n item type value", "if r0 == $ r2 goto label2", "if r0 ! = r1 goto label3", "label $ z0 = 1", "goto label4", "label return $ z0", "if r0 ! = r1 goto label3", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 value value geometry r0", "$ i0 = r1 type and dimension system", "$ i1 = $ i0 % 1000", "return $ i1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 value value geometry r0", "$ i0 = r1 srid", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 value value geometry r0", "$ r1 = r2 bytes", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 value value string r0", "$ r1 = r2 value", "$ i0 = $ r1 length", "$ i1 = $ i0 * 2", "$ i2 = $ i1 + 94", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop security authentication server kerberos authentication handler r0", "$ r1 = r2 keytab", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = r1 last index of \\ `` & s=\\ ``", "if i0 ! = -1 goto label1", "r11 = new org apache hadoop security authentication util signer exception", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r7 = r10 append \\ `` invalid sign text \\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 to string", "specialinvoke r11 < init > $ r9", "r12 = java lang throwable r11", "throw r12", "if i0 ! = -1 goto label1", "label $ r4 = \\ `` & s=\\ ``", "$ i1 = $ r4 length", "$ i2 = i0 + $ i1", "r2 = r1 substring $ i2", "r3 = r1 substring 0 i0", "r13 = org apache hadoop security authentication util signer r0", "r13 check signatures r3 r2", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r4 = org apache hadoop conf configuration r0", "r2 = r4 get trim r1", "if r2 ! = null goto label1", "return l0", "if r2 ! = null goto label1", "label r5 = org apache hadoop conf configuration r0", "r3 = specialinvoke r5 get hex digit r2", "if r3 == null goto label2", "$ l2 = java lang long parse long r3 16", "return $ l2", "if r3 == null goto label2", "label $ l1 = java lang long parse long r2", "return $ l1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = r2 to string", "r4 = org apache hadoop conf configuration r0", "r4 set r1 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r2 = @ parameter2", "r18 = org apache hadoop conf configuration r0", "r14 = r18 get r1", "if null ! = r14 goto label1", "return l0", "if null ! = r14 goto label1", "label r15 = r14 trim", "r16 = org apache hadoop conf configuration $ parsed time duration unit for r15", "if null ! = r16 goto label2", "$ r6 = org apache hadoop conf configuration log", "r17 = new java lang string builder", "specialinvoke r17 < init >", "$ r7 = r17 append \\ `` no unit for \\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 append \\ `` \\ ``", "$ r10 = $ r9 append r15", "$ r11 = $ r10 append \\ `` assume \\ ``", "$ r12 = $ r11 append r2", "$ r13 = $ r12 to string", "$ r6 warn $ r13", "r16 = org apache hadoop conf configuration $ parsed time duration unit for r2", "goto label3", "label $ l2 = java lang long parse long r15", "$ r4 = r16 unit", "$ l3 = r2 convert $ l2 $ r4", "return $ l3", "if null ! = r16 goto label2", "label $ r3 = r16 suffix", "$ i1 = r15 last index of $ r3", "r15 = r15 substring 0 $ i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache hadoop conf configuration r0", "r2 = r3 get password from credential provider r1", "if r2 ! = null goto label1", "r4 = org apache hadoop conf configuration r0", "r2 = r4 get password from config r1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r19 = null", "label r27 = org apache hadoop conf configuration r0", "r20 = org apache hadoop security alias credential provider factory get provider r27", "if r20 == null goto label08", "r2 = r20 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label08", "$ r4 = r2 next", "r3 = org apache hadoop security alias credential provider $ r4", "label r21 = r3 get credential entry r1", "if r21 == null goto label05", "r19 = r21 get credential", "label goto label08", "label goto label10", "label return r19", "if r21 == null goto label05", "label goto label07", "label goto label02"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop conf reconfiguration task status r0", "$ l0 = r1 start time", "$ b1 = $ l0 cmp 0l", "if $ b1 < = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b1 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ i1 = r0 get version", "$ r3 = org apache hadoop crypto crypto protocol version unknown", "$ i2 = $ r3 get version", "if $ i1 ! = $ i2 goto label1", "return 0", "if $ i1 ! = $ i2 goto label1", "label r1 = org apache hadoop crypto crypto protocol version value", "i0 = lengthof r1", "i5 = 0", "label if i5 > = i0 goto label4", "r2 = r1 [ i5 ]", "$ i3 = r2 get version", "$ i4 = r0 get version", "if $ i3 ! = $ i4 goto label3", "return 1", "if $ i3 ! = $ i4 goto label3", "label i5 = i5 + 1", "goto label2", "label if i5 > = i0 goto label4", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "if i0 < 512 goto label1", "$ z0 = 1", "goto label2", "label com google common base precondition check argument $ z0 \\ `` minimum value of buffer size be 512 \\ ``", "$ r1 = r0 get cipher suite", "$ i1 = $ r1 get algorithm block size", "$ i2 = i0 % $ i1", "$ i3 = i0 - $ i2", "return $ i3", "if i0 < 512 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r7 = org apache hadoop crypto key key shell r0", "i0 = specialinvoke r7 init r1", "if i0 == 0 goto label3", "label return i0", "if i0 == 0 goto label3", "label r8 = org apache hadoop crypto key key shell r0", "$ r3 = r8 command", "$ z0 = $ r3 validate", "if $ z0 == 0 goto label4", "r9 = org apache hadoop crypto key key shell r0", "$ r4 = r9 command", "$ r4 execute", "goto label5", "label goto label7", "label return i0", "if $ z0 == 0 goto label4", "label i0 = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "r3 = new org apache hadoop conf configuration", "specialinvoke r3 < init >", "r4 = new org apache hadoop crypto key key shell", "specialinvoke r4 < init >", "r5 = org apache hadoop util tool r4", "i0 = org apache hadoop util tool runner run r3 r5 r0", "java lang system exit i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java lang unsupported operation exception", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = r0 get class", "$ r5 = $ r4 get simple name", "$ r6 = $ r3 append $ r5", "$ r7 = $ r6 append \\ `` doesn\\'t support remove default acl\\ ``", "$ r8 = $ r7 to string", "specialinvoke $ r2 < init > $ r8", "throw $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop f block location r0", "$ l0 = r1 length", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r2 = org apache hadoop f block location empty_str_array", "r3 = org apache hadoop f block location r0", "r3 host = $ r2", "goto label2", "label return", "if r1 ! = null goto label1", "label r4 = org apache hadoop f block location r0", "r4 host = r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop f checksum file system r0", "$ r1 = r2 f", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop f checksum file system r0", "$ i0 = r1 byte per checksum", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop f content summary r0", "$ l0 = r1 quota", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r7 = org apache hadoop f content summary r0", "$ r3 = r7 type quota", "if $ r3 ! = null goto label1", "return 0", "if $ r3 ! = null goto label1", "label $ r4 = org apache hadoop fs storage type get type support quota", "r1 = $ r4 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label4", "$ r5 = r1 next", "r2 = org apache hadoop fs storage type $ r5", "r8 = org apache hadoop f content summary r0", "$ r6 = r8 type quota", "$ i0 = r2 ordinal", "$ l1 = $ r6 [ $ i0 ]", "$ b2 = $ l1 cmp 0l", "if $ b2 < = 0 goto label3", "return 1", "if $ b2 < = 0 goto label3", "label goto label2", "if $ z0 == 0 goto label4", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop fs delegation token renewer r0", "$ r1 = r2 queue", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "entermonitor r0", "label r12 = org apache hadoop fs delegation token renewer r0", "$ z0 = r12 be alive", "if $ z0 ! = 0 goto label2", "r13 = org apache hadoop fs delegation token renewer r0", "r13 start", "label exitmonitor r0", "label goto label6", "label r11 = new org apache hadoop fs delegation token renewer $ renew action", "specialinvoke r11 < init > r1 null", "$ r5 = org apache hadoop fs delegation token renewer $ renew action access $ 100 r11", "if $ r5 == null goto label7", "r14 = org apache hadoop fs delegation token renewer r0", "$ r7 = r14 queue", "r15 = java util concurrent delay r11", "$ r7 add r15", "goto label8", "label return r11", "if $ r5 == null goto label7", "label $ r6 = org apache hadoop f file system log", "$ r6 error \\ `` do not have a token for renewal\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r2 = org apache hadoop f du r0", "$ r1 = r2 use", "$ r1 add and get l0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = new org apache hadoop conf configuration", "specialinvoke $ r0 < init >", "$ r1 = org apache hadoop f file context get file context $ r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["org apache hadoop fs abstract file system print statistic", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache hadoop f file system get default uri r0", "$ r2 = org apache hadoop f file system get $ r1 r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache hadoop fs abstract file system r0", "$ r1 = r3 get uri", "r4 = org apache hadoop fs abstract file system r0", "$ i0 = r4 get uri default port", "$ r2 = org apache hadoop security security util build d t service name $ r1 $ i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache hadoop fs local file system name", "$ r2 = org apache hadoop f file system get $ r1 r0", "$ r3 = org apache hadoop fs local file system $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache hadoop fs abstract file system r0", "r4 check path r1", "r5 = org apache hadoop fs abstract file system r0", "$ r2 = r5 get uri", "$ r3 = r1 make qualified $ r2 null", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop f file system r0", "$ z0 = r2 delete r1 1", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r5 = org apache hadoop f file system r0", "$ r3 = r5 get file status r1", "if $ r3 == null goto label2", "$ z0 = 1", "goto label3", "label return $ z0", "if $ r3 == null goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop f file system r0", "$ r1 = r2 get status null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java lang unsupported operation exception", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = r0 get class", "$ r5 = $ r4 get simple name", "$ r6 = $ r3 append $ r5", "$ r7 = $ r6 append \\ `` doesn\\'t support get acl status\\ ``", "$ r8 = $ r7 to string", "specialinvoke $ r2 < init > $ r8", "throw $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org apache hadoop f file util fully delete r0 0", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r3 = org apache hadoop f f s data input stream r0", "$ r1 = r3 in", "$ r2 = org apache hadoop f seekable $ r1", "$ z0 = $ r2 seek to new source l0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache hadoop f f s output summer r0", "$ r1 = r3 buf", "r4 = org apache hadoop f f s output summer r0", "$ i1 = r4 count", "$ i2 = $ i1 + 1", "r5 = org apache hadoop f f s output summer r0", "r5 count = $ i2", "$ b3 = byte i0", "$ r1 [ $ i1 ] = $ b3", "r6 = org apache hadoop f f s output summer r0", "$ i5 = r6 count", "r7 = org apache hadoop f f s output summer r0", "$ r2 = r7 buf", "$ i4 = lengthof $ r2", "if $ i5 ! = $ i4 goto label1", "r8 = org apache hadoop f f s output summer r0", "r8 flush buffer", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "$ r6 = new java io i o exception", "specialinvoke $ r6 < init > \\ `` invalid argument to create hard link source file be null\\ ``", "throw $ r6", "if r0 ! = null goto label1", "label if r1 ! = null goto label2", "$ r5 = new java io i o exception", "specialinvoke $ r5 < init > \\ `` invalid argument to create hard link link name be null\\ ``", "throw $ r5", "label if r1 ! = null goto label2", "label $ r2 = r1 to path", "$ r3 = r0 to path", "java nio file file create link $ r2 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r2 = @ parameter2", "r6 = org apache hadoop fs local dir allocator r0", "$ r4 = r6 context cfg item name", "r7 = org apache hadoop fs local dir allocator r0", "r3 = specialinvoke r7 obtain context $ r4", "$ r5 = r3 create tmp file for write r1 l0 r2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r4 = org apache hadoop fs path r0", "$ r2 = r4 uri", "r1 = $ r2 get path", "i0 = r1 last index of \\ `` \\ ``", "$ i1 = i0 + 1", "$ r3 = r1 substring $ i1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = newarray org apache hadoop fs permission acl entry [ 3 ]", "$ r2 = new org apache hadoop fs permission acl entry $ builder", "specialinvoke $ r2 < init >", "$ r3 = org apache hadoop fs permission acl entry scope access", "$ r4 = $ r2 set scope $ r3", "$ r5 = org apache hadoop fs permission acl entry type user", "$ r6 = $ r4 set type $ r5", "$ r7 = r0 get user action", "$ r8 = $ r6 set permission $ r7", "$ r9 = $ r8 build", "$ r1 [ 0 ] = $ r9", "$ r10 = new org apache hadoop fs permission acl entry $ builder", "specialinvoke $ r10 < init >", "$ r11 = org apache hadoop fs permission acl entry scope access", "$ r12 = $ r10 set scope $ r11", "$ r13 = org apache hadoop fs permission acl entry type group", "$ r14 = $ r12 set type $ r13", "$ r15 = r0 get group action", "$ r16 = $ r14 set permission $ r15", "$ r17 = $ r16 build", "$ r1 [ 1 ] = $ r17", "$ r18 = new org apache hadoop fs permission acl entry $ builder", "specialinvoke $ r18 < init >", "$ r19 = org apache hadoop fs permission acl entry scope access", "$ r20 = $ r18 set scope $ r19", "$ r21 = org apache hadoop fs permission acl entry type other", "$ r22 = $ r20 set type $ r21", "$ r23 = r0 get other action", "$ r24 = $ r22 set permission $ r23", "$ r25 = $ r24 build", "$ r1 [ 2 ] = $ r25", "$ r26 = com google common collect list new array list $ r1", "return $ r26"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 size", "if $ i0 ! = 3 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 ! = 3 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get permission", "s0 = r2 to short", "$ z1 = r1 be directory", "if $ z1 ! = 0 goto label1", "$ s3 = s0 & 73", "if $ s3 == 0 goto label2", "label $ z2 = 1", "goto label3", "label r3 = org apache hadoop fs permission chmod parser r0", "$ i1 = r3 combine mode s0 $ z2", "$ s2 = short $ i1", "return $ s2", "if $ s3 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [], [15], []]}
{"nodes": ["$ r0 = new org apache hadoop fs permission f permission", "specialinvoke $ r0 < init > 438", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop fs permission scoped acl entry r0", "$ r1 = r2 access entry", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label6", "$ r5 = r2 next", "r3 = org apache hadoop f shell path data $ r5", "label r7 = org apache hadoop f shell command r0", "r7 process argument r3", "label goto label5", "label goto label1", "if $ z0 == 0 goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = 0", "label if i1 > = i0 goto label2", "$ r2 = r1 pop", "$ r3 = java lang string $ r2", "r4 = org apache hadoop f shell find base expression r0", "r4 add argument $ r3", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop f shell find find option r0", "$ z0 = r1 follow link", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop f shell find find option r0", "$ i0 = r1 min depth", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache hadoop http http server create default channel connector", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "r10 = org apache hadoop http http server r0", "$ r4 = r10 web server", "$ r5 = $ r4 get handler", "$ i0 = lengthof $ r5", "if 0 ! = $ i0 goto label1", "r8 = new java lang runtime exception", "specialinvoke r8 < init > \\ `` couldn\\'t find handler\\ ``", "throw r8", "if 0 ! = $ i0 goto label1", "label r9 = new org mortbay jetty webapp web app context", "specialinvoke r9 < init >", "r9 set context path r1", "r9 set war r2", "r11 = org apache hadoop http http server r0", "r12 = org mortbay jetty servlet context r9", "r11 add context r12 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r3 = org apache hadoop http http server r0", "$ r1 = r3 web server", "if $ r1 == null goto label1", "r4 = org apache hadoop http http server r0", "$ r2 = r4 web server", "$ z0 = $ r2 be start", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label4", "label r16 = new org apache hadoop io data output buffer", "specialinvoke r16 < init >", "r21 = java io data output r16", "r1 write r21", "r17 = new org apache hadoop io data input buffer", "specialinvoke r17 < init >", "$ r6 = r16 get data", "$ i0 = r16 get length", "r17 reset $ r6 $ i0", "r22 = org apache hadoop io abstract map writable r0", "r23 = java io data input r17", "r22 read field r23", "label goto label5", "label return", "if r1 == null goto label4", "label r20 = new java lang illegal argument exception", "specialinvoke r20 < init > \\ `` source map can not be null\\ ``", "throw r20"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache hadoop io boolean writable r0", "r1 value = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop io bound byte array output stream r0", "$ i0 = r1 limit", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org apache hadoop io byte writable", "if $ z0 ! = 0 goto label1", "return 0", "if $ z0 ! = 0 goto label1", "label r2 = org apache hadoop io byte writable r1", "r3 = org apache hadoop io byte writable r0", "$ b1 = r3 value", "$ b0 = r2 value", "if $ b1 ! = $ b0 goto label2", "$ z1 = 1", "goto label3", "label return $ z1", "if $ b1 ! = $ b0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r6 = org apache hadoop io compress bzip2 bzip2 decompressor r0", "specialinvoke r6 check stream", "r7 = org apache hadoop io compress bzip2 bzip2 decompressor r0", "$ l0 = r7 stream", "org apache hadoop io compress bzip2 bzip2 decompressor end $ l0", "r8 = org apache hadoop io compress bzip2 bzip2 decompressor r0", "$ z0 = r8 conserve memory", "if $ z0 == 0 goto label1", "$ b6 = 1", "goto label2", "label $ l1 = org apache hadoop io compress bzip2 bzip2 decompressor init $ b6", "r9 = org apache hadoop io compress bzip2 bzip2 decompressor r0", "r9 stream = $ l1", "r10 = org apache hadoop io compress bzip2 bzip2 decompressor r0", "r10 finish = 0", "r11 = org apache hadoop io compress bzip2 bzip2 decompressor r0", "r11 compress direct buf len = 0", "r12 = org apache hadoop io compress bzip2 bzip2 decompressor r0", "r12 compress direct buf off = 0", "r13 = org apache hadoop io compress bzip2 bzip2 decompressor r0", "$ r1 = r13 uncompress direct buf", "r14 = org apache hadoop io compress bzip2 bzip2 decompressor r0", "$ i3 = r14 direct buffer size", "$ r1 limit $ i3", "r15 = org apache hadoop io compress bzip2 bzip2 decompressor r0", "$ r3 = r15 uncompress direct buf", "r16 = org apache hadoop io compress bzip2 bzip2 decompressor r0", "$ i4 = r16 direct buffer size", "$ r3 position $ i4", "r17 = org apache hadoop io compress bzip2 bzip2 decompressor r0", "r17 user buf len = 0", "r18 = org apache hadoop io compress bzip2 bzip2 decompressor r0", "r18 user buf off = 0", "return", "if $ z0 == 0 goto label1", "label $ b6 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org apache hadoop io compress bzip2 bzip2 factory be native bzip2 load r0", "if $ z0 == 0 goto label1", "r2 = new org apache hadoop io compress bzip2 bzip2 compressor", "$ r1 = r2", "specialinvoke r2 < init > r0", "goto label2", "label r4 = org apache hadoop io compress compressor $ r1", "return r4", "if $ z0 == 0 goto label1", "label r3 = new org apache hadoop io compress bzip2 b zip2 dummy compressor", "$ r1 = r3", "specialinvoke r3 < init >"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop io compress b zip2 codec r0", "$ r1 = r2 conf", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 end with r1", "if $ z0 == 0 goto label1", "$ i0 = r0 length", "$ i1 = r1 length", "$ i2 = $ i0 - $ i1", "$ r2 = r0 substring 0 $ i2", "return $ r2", "if $ z0 == 0 goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop io compress lz4 lz4 compressor r0", "r2 reset", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache hadoop io compress zlib zlib compressor r0", "r9 reset", "if r1 ! = null goto label1", "return", "if r1 ! = null goto label1", "label r10 = org apache hadoop io compress zlib zlib compressor r0", "$ l0 = r10 stream", "org apache hadoop io compress zlib zlib compressor end $ l0", "$ r2 = org apache hadoop io compress zlib zlib factory get compression level r1", "r11 = org apache hadoop io compress zlib zlib compressor r0", "r11 level = $ r2", "$ r3 = org apache hadoop io compress zlib zlib factory get compression strategy r1", "r12 = org apache hadoop io compress zlib zlib compressor r0", "r12 strategy = $ r3", "r13 = org apache hadoop io compress zlib zlib compressor r0", "$ r4 = r13 level", "$ i1 = $ r4 compression level", "r14 = org apache hadoop io compress zlib zlib compressor r0", "$ r5 = r14 strategy", "$ i2 = $ r5 compression strategy", "r15 = org apache hadoop io compress zlib zlib compressor r0", "$ r6 = r15 window bit", "$ i3 = $ r6 window bit", "$ l4 = org apache hadoop io compress zlib zlib compressor init $ i1 $ i2 $ i3", "r16 = org apache hadoop io compress zlib zlib compressor r0", "r16 stream = $ l4", "$ r7 = org apache hadoop io compress zlib zlib compressor log", "$ z0 = $ r7 be debug enabled", "if $ z0 == 0 goto label2", "$ r8 = org apache hadoop io compress zlib zlib compressor log", "$ r8 debug \\ `` reinit compressor with new compression configuration\\ ``", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org apache hadoop io compress zlib zlib factory be native zlib load r0", "if $ z0 == 0 goto label1", "r3 = new org apache hadoop io compress zlib zlib compressor", "$ r2 = r3", "specialinvoke r3 < init > r0", "goto label2", "label r5 = org apache hadoop io compress compressor $ r2", "return r5", "if $ z0 == 0 goto label1", "label r4 = new org apache hadoop io compress zlib build in zlib deflater", "$ r2 = r4", "$ r1 = org apache hadoop io compress zlib zlib factory get compression level r0", "$ i0 = $ r1 compression level", "specialinvoke r4 < init > $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop io enum set writable r0", "$ r1 = r2 element type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop io data input buffer r0", "$ r1 = r2 buffer", "$ i0 = $ r1 get length", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache hadoop io int writable r0", "r1 value = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r5 = new org apache hadoop fs path", "specialinvoke $ r5 < init > r1", "$ r6 = new org apache hadoop fs path", "specialinvoke $ r6 < init > r2", "$ z0 = r0 rename $ r5 $ r6", "if $ z0 ! = 0 goto label1", "$ r7 = new java io i o exception", "$ r8 = new java lang string builder", "specialinvoke $ r8 < init >", "$ r9 = $ r8 append \\ `` could not rename \\ ``", "$ r10 = $ r9 append $ r5", "$ r11 = $ r10 append \\ `` to \\ ``", "$ r12 = $ r11 append $ r6", "$ r13 = $ r12 to string", "specialinvoke $ r7 < init > $ r13", "throw $ r7", "if $ z0 ! = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r5 = new org apache hadoop fs path", "specialinvoke $ r5 < init > r1", "$ r6 = new org apache hadoop fs path", "specialinvoke $ r6 < init > $ r5 \\ `` data\\ ``", "$ r7 = new org apache hadoop fs path", "specialinvoke $ r7 < init > $ r5 \\ `` index\\ ``", "r0 delete $ r6 1", "r0 delete $ r7 1", "r0 delete $ r5 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache hadoop io m d5 hash r1", "r3 = org apache hadoop io m d5 hash r0", "$ i0 = r3 compare to $ r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org apache hadoop io nativeio share file descriptor factory get loading failure reason", "if r2 == null goto label1", "$ r17 = new java io i o exception", "specialinvoke $ r17 < init > r2", "throw $ r17", "if r2 == null goto label1", "label $ i1 = lengthof r1", "if $ i1 ! = 0 goto label2", "$ r16 = new java io i o exception", "specialinvoke $ r16 < init > \\ `` no share file descriptor factory path be configure \\ ``", "throw $ r16", "if $ i1 ! = 0 goto label2", "label $ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "r25 = \\ `` \\ ``", "i0 = lengthof r1", "i2 = 0", "label if i2 > = i0 goto label7", "r5 = r1 [ i2 ]", "label $ r9 = new java io file input stream", "$ r10 = new java lang string builder", "specialinvoke $ r10 < init >", "$ r11 = $ r10 append r0", "$ r12 = $ r11 append \\ `` test\\ ``", "$ r13 = $ r12 to string", "$ r14 = org apache hadoop io nativeio share file descriptor factory create descriptor0 $ r13 r5 1", "specialinvoke $ r9 < init > $ r14", "$ r9 close", "org apache hadoop io nativeio share file descriptor factory delete stale temporary files0 r0 r5", "$ r15 = new org apache hadoop io nativeio share file descriptor factory", "specialinvoke $ r15 < init > r0 r5", "label return $ r15", "label if i2 > = i0 goto label7", "label $ r7 = new java io i o exception", "$ r8 = $ r6 to string", "specialinvoke $ r7 < init > $ r8", "throw $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get class", "r3 = org apache hadoop io object writable r0", "r3 declare class = $ r2", "r4 = org apache hadoop io object writable r0", "r4 instance = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["entermonitor class \\ `` lorg apache hadoop io readahead pool \\ ``", "label $ r2 = org apache hadoop io readahead pool instance", "if $ r2 ! = null goto label2", "$ z0 = org apache hadoop io nativeio native i o be available", "if $ z0 == 0 goto label2", "$ r3 = new org apache hadoop io readahead pool", "specialinvoke $ r3 < init >", "org apache hadoop io readahead pool instance = $ r3", "label $ r5 = org apache hadoop io readahead pool instance", "exitmonitor class \\ `` lorg apache hadoop io readahead pool \\ ``", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org apache hadoop io v long writable", "if $ z0 ! = 0 goto label1", "return 0", "if $ z0 ! = 0 goto label1", "label r2 = org apache hadoop io v long writable r1", "r3 = org apache hadoop io v long writable r0", "$ l1 = r3 value", "$ l0 = r2 value", "$ b2 = $ l1 cmp $ l0", "if $ b2 ! = 0 goto label2", "$ z1 = 1", "goto label3", "label return $ z1", "if $ b2 ! = 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = org apache hadoop io writable comparable r1", "$ r3 = org apache hadoop io writable comparable r2", "r5 = org apache hadoop io writable comparator r0", "$ i0 = r5 compare $ r4 $ r3", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ b1 = r0 [ i0 ]", "$ s2 = $ b1 & 255", "$ i7 = $ s2 < < 24", "$ i3 = i0 + 1", "$ b4 = r0 [ $ i3 ]", "$ s5 = $ b4 & 255", "$ i6 = $ s5 < < 16", "$ i12 = $ i7 + $ i6", "$ i8 = i0 + 2", "$ b9 = r0 [ $ i8 ]", "$ s10 = $ b9 & 255", "$ i11 = $ s10 < < 8", "$ i16 = $ i12 + $ i11", "$ i13 = i0 + 3", "$ b14 = r0 [ $ i13 ]", "$ s15 = $ b14 & 255", "$ i17 = $ i16 + $ s15", "return $ i17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org apache hadoop io writable factory get factory r0", "if r2 == null goto label2", "r3 = r2 new instance", "$ z0 = r3 instanceof org apache hadoop conf configurable", "if $ z0 == 0 goto label1", "$ r6 = org apache hadoop conf configurable r3", "$ r6 set conf r1", "label return r3", "if r2 == null goto label2", "label $ r4 = org apache hadoop util reflection utils new instance r0 r1", "$ r5 = org apache hadoop io writable $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r3 = org apache hadoop ipc metric rpc detailed metric r0", "$ r2 = r3 rate", "$ l1 = long i0", "$ r2 add r1 $ l1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache hadoop ipc refresh registry r0", "$ r3 = r4 handler table", "$ z0 = $ r3 remove r1 r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r1 = org apache hadoop ipc server cur call", "$ r2 = $ r1 get", "r0 = org apache hadoop ipc server $ call $ r2", "if r0 == null goto label1", "$ i0 = org apache hadoop ipc server $ call access $ 000 r0", "goto label2", "label return $ i0", "if r0 == null goto label1", "label $ i0 = -2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "org apache hadoop ipc server bind r0 r1 i0 null null", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r9 = org apache hadoop ipc server r0", "$ r1 = r9 responder", "$ r1 start", "r10 = org apache hadoop ipc server r0", "$ r2 = r10 listener", "$ r2 start", "r11 = org apache hadoop ipc server r0", "$ i0 = r11 handler count", "$ r3 = newarray org apache hadoop ipc server $ handler [ $ i0 ]", "r12 = org apache hadoop ipc server r0", "r12 handler = $ r3", "i2 = 0", "label r13 = org apache hadoop ipc server r0", "$ i1 = r13 handler count", "if i2 > = $ i1 goto label2", "r14 = org apache hadoop ipc server r0", "$ r5 = r14 handler", "r8 = new org apache hadoop ipc server $ handler", "r15 = org apache hadoop ipc server r0", "specialinvoke r8 < init > r15 i2", "$ r5 [ i2 ] = r8", "r16 = org apache hadoop ipc server r0", "$ r6 = r16 handler", "$ r7 = $ r6 [ i2 ]", "$ r7 start", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "$ r2 = org apache hadoop ipc rpc $ rpc kind rpc_builtin", "r4 = org apache hadoop ipc server r0", "$ r3 = r4 call $ r2 null r1 l0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop ipc server r0", "$ r1 = r2 connection manager", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop ipc server r0", "$ i0 = r1 max queue size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache hadoop metric context factory r0", "$ r2 = r4 attribute map", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = new java lang string builder", "specialinvoke r11 < init >", "r12 = org apache hadoop metric spi abstract metric context r0", "$ r4 = r12 context name", "$ r5 = r11 append $ r4", "$ r6 = $ r5 append \\ `` \\ ``", "$ r7 = $ r6 append r1", "r2 = $ r7 to string", "r13 = org apache hadoop metric spi abstract metric context r0", "$ r8 = r13 factory", "$ r9 = $ r8 get attribute r2", "$ r10 = java lang string $ r9", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop metric spi abstract metric context r0", "$ r1 = r2 context name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache hadoop metric spi abstract metric context r0", "$ r2 = r3 updaters", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache hadoop metric spi metric record impl r0", "$ r2 = r4 tag table", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache hadoop metric util metric int value r0", "r1 value = i0", "r2 = org apache hadoop metric util metric int value r0", "r2 change = 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = specialinvoke r0 get property r1", "if r2 ! = null goto label4", "$ r11 = org apache hadoop metrics2 impl metric config log", "$ z1 = $ r11 be debug enabled", "if $ z1 == 0 goto label1", "$ r18 = org apache hadoop metrics2 impl metric config log", "r28 = new java lang string builder", "specialinvoke r28 < init >", "$ r19 = r28 append \\ `` poke parent \\'\\ ``", "r31 = org apache hadoop metrics2 impl metric config r0", "$ r20 = r31 get parent", "$ r21 = $ r20 get class", "$ r22 = $ r21 get simple name", "$ r23 = $ r19 append $ r22", "$ r24 = $ r23 append \\ `` \\ ' for key \\ ``", "$ r25 = $ r24 append r1", "$ r26 = $ r25 to string", "$ r18 debug $ r26", "label r32 = org apache hadoop metrics2 impl metric config r0", "$ r12 = r32 get parent", "$ z2 = r1 start with \\ `` * \\ ``", "if $ z2 == 0 goto label2", "$ r27 = r1", "goto label3", "label $ r16 = $ r12 get property $ r27", "return $ r16", "if $ z2 == 0 goto label2", "label r29 = new java lang string builder", "specialinvoke r29 < init >", "$ r14 = r29 append \\ `` * \\ ``", "$ r15 = $ r14 append r1", "$ r27 = $ r15 to string", "if r2 ! = null goto label4", "label $ r3 = org apache hadoop metrics2 impl metric config log", "$ z0 = $ r3 be debug enabled", "if $ z0 == 0 goto label5", "$ r5 = org apache hadoop metrics2 impl metric config log", "r30 = new java lang string builder", "specialinvoke r30 < init >", "$ r6 = r30 append \\ `` return \\'\\ ``", "$ r7 = $ r6 append r2", "$ r8 = $ r7 append \\ `` \\ ' for key \\ ``", "$ r9 = $ r8 append r1", "$ r10 = $ r9 to string", "$ r5 debug $ r10", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache hadoop metrics2 lib intern $ info instance", "$ r3 = $ r2 cache", "$ r4 = $ r3 add r0 r1", "$ r5 = org apache hadoop metrics2 metric info $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "$ r3 = org apache hadoop metrics2 lib intern info r1 r2", "r5 = org apache hadoop metrics2 lib metric registry r0", "$ r4 = r5 new counter $ r3 i0", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "i0 = @ parameter4", "r10 = org apache hadoop metrics2 lib metric registry r0", "specialinvoke r10 check metric name r1", "r9 = new org apache hadoop metrics2 lib mutable quantiles", "specialinvoke r9 < init > r1 r2 r3 r4 i0", "r11 = org apache hadoop metrics2 lib metric registry r0", "$ r7 = r11 metric map", "$ r7 put r1 r9", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache hadoop metrics2 lib metric registry r0", "$ r2 = r3 new rate r1 r1 0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop metrics2 lib mutable metric r0", "r2 snapshot r1 0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop metrics2 lib mutable metric r0", "r1 change = 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop metrics2 lib mutable stat r0", "$ r1 = r2 min max", "$ r1 reset", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache hadoop net net utils create socket addr r0 -1", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "$ r1 = r0 get channel", "if $ r1 ! = null goto label1", "$ r2 = r0 get output stream", "goto label2", "label r4 = java io output stream $ r2", "return r4", "if $ r1 ! = null goto label1", "label r3 = new org apache hadoop net socket output stream", "$ r2 = r3", "specialinvoke r3 < init > r0 l0"], "adj": [[1], [2], [3], [4], [5], [], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get network location", "r4 = org apache hadoop net network topology r0", "$ r3 = r4 get node $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return", "if r1 ! = null goto label1", "label $ z0 = r1 instanceof org apache hadoop net network topology $ inner node", "if $ z0 == 0 goto label2", "r34 = new java lang illegal argument exception", "r33 = new java lang string builder", "specialinvoke r33 < init >", "$ r25 = r33 append \\ `` not allow to remove an inner node \\ ``", "$ r26 = org apache hadoop net node base get path r1", "$ r27 = $ r25 append $ r26", "$ r28 = $ r27 to string", "specialinvoke r34 < init > $ r28", "throw r34", "if $ z0 == 0 goto label2", "label $ r5 = org apache hadoop net network topology log", "r35 = new java lang string builder", "specialinvoke r35 < init >", "$ r6 = r35 append \\ `` remove a node \\ ``", "$ r7 = org apache hadoop net node base get path r1", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 to string", "$ r5 info $ r9", "r37 = org apache hadoop net network topology r0", "$ r10 = r37 netlock", "$ r11 = $ r10 write lock", "$ r11 lock", "label r38 = org apache hadoop net network topology r0", "$ r12 = r38 cluster map", "$ z1 = $ r12 remove r1", "if $ z1 == 0 goto label4", "$ r21 = r1 get network location", "r39 = org apache hadoop net network topology r0", "$ r22 = r39 get node $ r21", "r2 = org apache hadoop net network topology $ inner node $ r22", "if r2 ! = null goto label4", "r40 = org apache hadoop net network topology r0", "$ i0 = r40 num of rack", "$ i1 = $ i0 - 1", "r41 = org apache hadoop net network topology r0", "r41 num of rack = $ i1", "label $ r32 = org apache hadoop net network topology log", "$ z2 = $ r32 be debug enabled", "if $ z2 == 0 goto label5", "$ r16 = org apache hadoop net network topology log", "r36 = new java lang string builder", "specialinvoke r36 < init >", "$ r17 = r36 append \\ `` network topology became\\n\\ ``", "r42 = org apache hadoop net network topology r0", "$ r18 = r42 to string", "$ r19 = $ r17 append $ r18", "$ r20 = $ r19 to string", "$ r16 debug $ r20", "label r43 = org apache hadoop net network topology r0", "$ r13 = r43 netlock", "$ r14 = $ r13 write lock", "$ r14 unlock", "goto label7", "label return"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 == null goto label1", "if r2 ! = null goto label2", "label return 0", "if r2 ! = null goto label2", "label r11 = org apache hadoop net network topology with node group r0", "$ r4 = r11 netlock", "$ r5 = $ r4 read lock", "$ r5 lock", "label r12 = org apache hadoop net network topology with node group r0", "z0 = r12 be same parent r1 r2", "label r13 = org apache hadoop net network topology with node group r0", "$ r6 = r13 netlock", "$ r7 = $ r6 read lock", "$ r7 unlock", "return z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop net node base r0", "r2 location = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache hadoop net node base r0", "r1 level = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop record buffer r0", "$ r1 = r2 get", "$ i0 = lengthof $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r18 = org apache hadoop record compiler ant rcc task r0", "$ r6 = r18 src", "if $ r6 ! = null goto label1", "r19 = org apache hadoop record compiler ant rcc task r0", "$ r13 = r19 filesets", "$ i1 = $ r13 size", "if $ i1 ! = 0 goto label1", "r16 = new org apache tool ant build exception", "specialinvoke r16 < init > \\ `` there must be a file attribute or a fileset child element\\ ``", "r20 = java lang throwable r16", "throw r20", "if $ i1 ! = 0 goto label1", "label r21 = org apache hadoop record compiler ant rcc task r0", "$ r7 = r21 src", "if $ r7 == null goto label2", "r22 = org apache hadoop record compiler ant rcc task r0", "$ r12 = r22 src", "r23 = org apache hadoop record compiler ant rcc task r0", "specialinvoke r23 do compile $ r12", "label r24 = org apache hadoop record compiler ant rcc task r0", "r1 = r24 get project", "i2 = 0", "label r25 = org apache hadoop record compiler ant rcc task r0", "$ r15 = r25 filesets", "$ i3 = $ r15 size", "if i2 > = $ i3 goto label6", "r26 = org apache hadoop record compiler ant rcc task r0", "$ r8 = r26 filesets", "$ r9 = $ r8 get i2", "r2 = org apache tool ant type file set $ r9", "r3 = r2 get directory scanner r1", "r4 = r2 get dir r1", "r5 = r3 get include file", "i4 = 0", "label $ i0 = lengthof r5", "if i4 > = $ i0 goto label5", "r17 = new java io file", "$ r11 = r5 [ i4 ]", "specialinvoke r17 < init > r4 $ r11", "r27 = org apache hadoop record compiler ant rcc task r0", "specialinvoke r27 do compile r17", "i4 = i4 + 1", "goto label4", "if i4 > = $ i0 goto label5", "label i2 = i2 + 1", "goto label3", "if i2 > = $ i3 goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], [46], [], [48], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop record meta map type i d r0", "$ r1 = r2 type i d key", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop record meta map type i d r0", "$ r1 = r2 type i d value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop record record r0", "r2 deserialize r1 \\ `` \\ ``", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r15 = org apache hadoop security authorize access control list r0", "$ z0 = specialinvoke r15 be wild card a c l value r1", "if $ z0 == 0 goto label1", "r13 = new java lang illegal argument exception", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r8 = r12 append \\ `` group \\ ``", "$ r9 = $ r8 append r1", "$ r10 = $ r9 append \\ `` can not be added\\ ``", "$ r11 = $ r10 to string", "specialinvoke r13 < init > $ r11", "throw r13", "if $ z0 == 0 goto label1", "label r16 = org apache hadoop security authorize access control list r0", "$ z1 = r16 be all allow", "if $ z1 ! = 0 goto label2", "r14 = new java util link list", "specialinvoke r14 < init >", "r14 add r1", "r17 = org apache hadoop security authorize access control list r0", "$ r4 = r17 group map", "$ r4 cache group add r14", "r18 = org apache hadoop security authorize access control list r0", "$ r5 = r18 group", "$ r5 add r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop security authorize access control list r0", "$ r1 = r2 group", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = new java lang string builder", "specialinvoke r10 < init > 256", "r11 = org apache hadoop security authorize access control list r0", "$ z0 = r11 all allow", "if $ z0 == 0 goto label1", "r10 append 42", "goto label2", "label $ r8 = r10 to string", "return $ r8", "if $ z0 == 0 goto label1", "label r12 = org apache hadoop security authorize access control list r0", "$ r3 = specialinvoke r12 get user string", "r10 append $ r3", "r10 append \\ `` \\ ``", "r13 = org apache hadoop security authorize access control list r0", "$ r6 = specialinvoke r13 get group string", "r10 append $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache hadoop security credential r0", "$ r2 = r4 secret key map", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r18 = org apache hadoop security credential r0", "$ r3 = r18 secret key map", "$ r3 clear", "r19 = org apache hadoop security credential r0", "$ r4 = r19 token map", "$ r4 clear", "i0 = org apache hadoop io writable utils read v int r1", "i1 = 0", "label if i1 > = i0 goto label2", "r15 = new org apache hadoop io text", "specialinvoke r15 < init >", "r15 read field r1", "r16 = new org apache hadoop security token token", "specialinvoke r16 < init >", "r16 read field r1", "r20 = org apache hadoop security credential r0", "$ r10 = r20 token map", "$ r10 put r15 r16", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label i2 = org apache hadoop io writable utils read v int r1", "i3 = 0", "label if i3 > = i2 goto label4", "r17 = new org apache hadoop io text", "specialinvoke r17 < init >", "r17 read field r1", "i4 = org apache hadoop io writable utils read v int r1", "r2 = newarray byte [ i4 ]", "r1 read fully r2", "r21 = org apache hadoop security credential r0", "$ r6 = r21 secret key map", "$ r6 put r17 r2", "i3 = i3 + 1", "goto label3", "label if i3 > = i2 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "l11 = @ parameter0", "r2 = org apache hadoop security sasl input stream r0", "$ z0 = r2 use wrap", "if $ z0 ! = 0 goto label1", "r3 = org apache hadoop security sasl input stream r0", "$ r1 = r3 in stream", "$ l10 = $ r1 skip l11", "return $ l10", "if $ z0 ! = 0 goto label1", "label r4 = org apache hadoop security sasl input stream r0", "$ i2 = r4 ofinish", "r5 = org apache hadoop security sasl input stream r0", "$ i1 = r5 ostart", "i0 = $ i2 - $ i1", "$ l3 = long i0", "$ b4 = l11 cmp $ l3", "if $ b4 < = 0 goto label2", "l11 = long i0", "label $ b5 = l11 cmp 0l", "if $ b5 > = 0 goto label3", "return 0l", "if $ b5 > = 0 goto label3", "label r6 = org apache hadoop security sasl input stream r0", "$ i6 = r6 ostart", "$ l7 = long $ i6", "$ l8 = $ l7 + l11", "$ i9 = int $ l8", "r7 = org apache hadoop security sasl input stream r0", "r7 ostart = $ i9", "return l11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["i0 = @ parameter0", "if i0 > = 1024 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if i0 > = 1024 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop security token delegation abstract delegation token secret manager r0", "$ i0 = r1 current id", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r34 = new java io byte array input stream", "$ r12 = r1 get identifier", "specialinvoke r34 < init > $ r12", "r35 = new java io data input stream", "specialinvoke r35 < init > r34", "r42 = org apache hadoop security token delegation abstract delegation token secret manager r0", "$ r14 = r42 create identifier", "r5 = org apache hadoop security token delegation abstract delegation token identifier $ r14", "r5 read field r35", "$ r16 = org apache hadoop security token delegation abstract delegation token secret manager log", "r36 = new java lang string builder", "specialinvoke r36 < init >", "$ r17 = r36 append \\ `` token cancelation request for identifier \\ ``", "$ r18 = $ r17 append r5", "$ r19 = $ r18 to string", "$ r16 info $ r19", "$ r20 = r5 get user", "if $ r20 ! = null goto label1", "r37 = new org apache hadoop security token secret manager $ invalid token", "specialinvoke r37 < init > \\ `` token with no owner\\ ``", "r43 = java lang throwable r37", "throw r43", "if $ r20 ! = null goto label1", "label $ r21 = r5 get user", "r6 = $ r21 get user name", "r7 = r5 get renewer", "r38 = new org apache hadoop security hadoop kerberos name", "specialinvoke r38 < init > r2", "r9 = r38 get short name", "$ z0 = r2 equal r6", "if $ z0 ! = 0 goto label3", "if r7 == null goto label2", "$ r26 = r7 to string", "$ z1 = $ r26 be empty", "if $ z1 ! = 0 goto label2", "$ r27 = r7 to string", "$ z2 = r9 equal $ r27", "if $ z2 ! = 0 goto label3", "label r40 = new org apache hadoop security access control exception", "r39 = new java lang string builder", "specialinvoke r39 < init >", "$ r31 = r39 append r2", "$ r32 = $ r31 append \\ `` be not authorize to cancel the token\\ ``", "$ r33 = $ r32 to string", "specialinvoke r40 < init > $ r33", "r44 = java lang throwable r40", "throw r44", "if $ z2 ! = 0 goto label3", "label r45 = org apache hadoop security token delegation abstract delegation token secret manager r0", "$ r23 = r45 current token", "$ r24 = $ r23 remove r5", "r10 = org apache hadoop security token delegation abstract delegation token secret manager $ delegation token information $ r24", "if r10 ! = null goto label4", "r41 = new org apache hadoop security token secret manager $ invalid token", "specialinvoke r41 < init > \\ `` token not found\\ ``", "r46 = java lang throwable r41", "throw r46", "if r10 ! = null goto label4", "label r47 = org apache hadoop security token delegation abstract delegation token secret manager r0", "r47 remove store token r5", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [], [51], [52], [53], [54], [55], [56], [57], [58], [59], [], [61], [62], [63], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache hadoop security token delegation web delegation token manager r0", "$ r2 = r3 secret manager", "$ r2 stop thread", "r4 = org apache hadoop security token delegation web delegation token manager r0", "r4 secret manager = r1", "r5 = org apache hadoop security token delegation web delegation token manager r0", "r5 manage secret manager = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop security token token r0", "$ r1 = specialinvoke r2 get renewer", "r3 = org apache hadoop security token token r0", "$ z0 = $ r1 be manage r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r2 = r1 get service", "r3 = org apache hadoop security user group information r0", "$ z0 = r3 add token $ r2 r1", "goto label2", "label return $ z0", "if r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache hadoop security user group information r0", "$ r4 = r7 subject", "entermonitor $ r4", "label r8 = org apache hadoop security user group information r0", "$ r5 = specialinvoke r8 get credential internal", "$ r5 add all r1", "exitmonitor $ r4", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "org apache hadoop security user group information ensure initialize", "label r18 = new java util link hash set", "$ r2 = org apache hadoop security user group information group", "r20 = org apache hadoop security user group information r0", "$ r3 = r20 get short user name", "$ r4 = $ r2 get group $ r3", "specialinvoke r18 < init > $ r4", "$ i0 = r18 size", "$ r5 = newarray java lang string [ $ i0 ]", "$ r6 = r18 to array $ r5", "$ r7 = java lang string [ ] $ r6", "label return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = java lang system out", "$ r2 println \\ `` get ugi for current user\\ ``", "r1 = org apache hadoop security user group information get current user", "specialinvoke r1 print", "$ r4 = java lang system out", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r5 = $ r3 append \\ `` ugi \\ ``", "$ r6 = $ r5 append r1", "$ r7 = $ r6 to string", "$ r4 println $ r7", "$ r9 = java lang system out", "$ r8 = new java lang string builder", "specialinvoke $ r8 < init >", "$ r10 = $ r8 append \\ `` auth method \\ ``", "$ r11 = r1 user", "$ r12 = $ r11 get authentication method", "$ r13 = $ r10 append $ r12", "$ r14 = $ r13 to string", "$ r9 println $ r14", "$ r16 = java lang system out", "$ r15 = new java lang string builder", "specialinvoke $ r15 < init >", "$ r17 = $ r15 append \\ `` keytab \\ ``", "$ z0 = r1 be keytab", "$ r18 = $ r17 append $ z0", "$ r19 = $ r18 to string", "$ r16 println $ r19", "$ r20 = java lang system out", "$ r20 println \\ `` ============================================================\\ ``", "$ i0 = lengthof r0", "if $ i0 ! = 2 goto label1", "$ r21 = java lang system out", "$ r21 println \\ `` get ugi from keytab \\ ``", "$ r23 = r0 [ 0 ]", "$ r22 = r0 [ 1 ]", "org apache hadoop security user group information login user from keytab $ r23 $ r22", "$ r24 = org apache hadoop security user group information get current user", "specialinvoke $ r24 print", "$ r26 = java lang system out", "$ r25 = new java lang string builder", "specialinvoke $ r25 < init >", "$ r27 = $ r25 append \\ `` keytab \\ ``", "$ r28 = $ r27 append r1", "$ r29 = $ r28 to string", "$ r26 println $ r29", "$ r31 = java lang system out", "$ r30 = new java lang string builder", "specialinvoke $ r30 < init >", "$ r32 = $ r30 append \\ `` auth method \\ ``", "$ r33 = org apache hadoop security user group information login user", "$ r34 = $ r33 user", "$ r35 = $ r34 get authentication method", "$ r36 = $ r32 append $ r35", "$ r37 = $ r36 to string", "$ r31 println $ r37", "$ r39 = java lang system out", "$ r38 = new java lang string builder", "specialinvoke $ r38 < init >", "$ r40 = $ r38 append \\ `` keytab \\ ``", "$ r41 = org apache hadoop security user group information login user", "$ z1 = $ r41 be keytab", "$ r42 = $ r40 append $ z1", "$ r43 = $ r42 to string", "$ r39 println $ r43", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache hadoop service abstract service r0", "$ r4 = r8 blocker map", "entermonitor $ r4", "label r9 = org apache hadoop service abstract service r0", "$ r5 = r9 blocker map", "$ r5 remove r1", "exitmonitor $ r4", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache hadoop service service operation log", "$ r2 = org apache hadoop service service operation stop quietly $ r1 r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r15 = org apache hadoop util async disk service r0", "$ r4 = r15 executor", "$ r5 = $ r4 get r1", "r3 = java util concurrent thread pool executor $ r5", "if r3 ! = null goto label1", "r14 = new java lang runtime exception", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r8 = r13 append \\ `` can not find root \\ ``", "$ r9 = $ r8 append r1", "$ r10 = $ r9 append \\ `` for execution of task \\ ``", "$ r11 = $ r10 append r2", "$ r12 = $ r11 to string", "specialinvoke r14 < init > $ r12", "throw r14", "if r3 ! = null goto label1", "label r3 execute r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop util bloom key r0", "$ d0 = r1 weight", "$ d1 = $ d0 + 1 0", "r2 = org apache hadoop util bloom key r0", "r2 weight = $ d1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["org apache hadoop util exit util system exit disable = 1", "return"], "adj": [[1], []]}
{"nodes": ["org apache hadoop util exit util first exit exception = null", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop util generic option parser r0", "$ r1 = r2 conf", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get \\ `` tmpjars\\ ``", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label r2 = r1 split \\", "$ r7 = new java util array list", "specialinvoke $ r7 < init >", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label5", "r5 = r2 [ i1 ]", "$ r11 = new org apache hadoop fs path", "specialinvoke $ r11 < init > r5", "$ r12 = $ r11 get file system r0", "$ r13 = org apache hadoop f file system get local r0", "$ z0 = $ r12 equal $ r13", "if $ z0 == 0 goto label3", "$ r21 = org apache hadoop f file system get local r0", "$ r22 = $ r21 path to file $ r11", "$ r23 = $ r22 to u r i", "$ r24 = $ r23 to u r l", "$ r7 add $ r24", "goto label4", "label i1 = i1 + 1", "goto label2", "if $ z0 == 0 goto label3", "label $ r15 = org apache hadoop util generic option parser log", "$ r14 = new java lang string builder", "specialinvoke $ r14 < init >", "$ r16 = $ r14 append \\ `` the libjars file \\ ``", "$ r17 = $ r16 append $ r11", "$ r18 = $ r17 append \\ `` be not on the local \\ ``", "$ r19 = $ r18 append \\ `` filesystem ignore \\ ``", "$ r20 = $ r19 to string", "$ r15 warn $ r20", "label if i1 > = i0 goto label5", "label $ r8 = newarray java net url [ 0 ]", "$ r9 = $ r7 to array $ r8", "$ r10 = java net url [ ] $ r9", "return $ r10"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 get boolean \\ `` io native lib available\\", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ z0 = org apache hadoop util native code loader be native code load", "return $ z0"], "adj": [[1], []]}
{"nodes": ["r4 = @ parameter0", "$ r3 = new java util array list", "specialinvoke $ r3 < init >", "label if r4 == null goto label4", "r1 = r4 get declare method", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label3", "r2 = r1 [ i1 ]", "$ r3 add r2", "i1 = i1 + 1", "goto label2", "label if i1 > = i0 goto label3", "label r4 = r4 get superclass", "goto label1", "label if r4 == null goto label4", "label return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache hadoop util shutdown hook manager r0", "$ r2 = r8 shutdown in progress", "$ z0 = $ r2 get", "if $ z0 == 0 goto label1", "r6 = new java lang illegal state exception", "specialinvoke r6 < init > \\ `` shutdown in progress can not remove a shutdown hook\\ ``", "throw r6", "if $ z0 == 0 goto label1", "label r9 = org apache hadoop util shutdown hook manager r0", "$ r4 = r9 hook", "r7 = new org apache hadoop util shutdown hook manager $ hook entry", "specialinvoke r7 < init > r1 0", "$ z1 = $ r4 remove r7", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop util shutdown hook manager r0", "$ r1 = r2 shutdown in progress", "$ z0 = $ r1 get", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache hadoop util stop watch r0", "$ z0 = r3 be start", "if $ z0 ! = 0 goto label1", "r2 = new java lang illegal state exception", "specialinvoke r2 < init > \\ `` stop watch be already stopped\\ ``", "throw r2", "if $ z0 ! = 0 goto label1", "label l0 = java lang system nano time", "r4 = org apache hadoop util stop watch r0", "r4 be start = 0", "r5 = org apache hadoop util stop watch r0", "$ l3 = r5 current elapse nanos", "r6 = org apache hadoop util stop watch r0", "$ l1 = r6 start nanos", "$ l2 = l0 - $ l1", "$ l4 = $ l3 + $ l2", "r7 = org apache hadoop util stop watch r0", "r7 current elapse nanos = $ l4", "r8 = org apache hadoop util stop watch r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["l0 = @ parameter0", "l1 = org apache hadoop util time now", "label $ l3 = org apache hadoop util time now", "$ l4 = $ l3 - l1", "$ b5 = $ l4 cmp l0", "if $ b5 > = 0 goto label6", "$ l6 = org apache hadoop util time now", "$ l7 = $ l6 - l1", "l2 = l0 - $ l7", "label java lang thread sleep l2", "label goto label5", "label goto label1", "if $ b5 > = 0 goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["$ r0 = org apache hadoop util version info common_version_info", "$ r1 = $ r0 _get revision", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org apache hadoop util version info common_version_info", "$ r1 = $ r0 _get src checksum", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "$ i2 = i0 ^ i1", "return $ i2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = com google common collect list new array list", "if r0 ! = null goto label1", "return r1", "if r0 ! = null goto label1", "label $ r6 = com google common base splitter on 44", "$ r7 = $ r6 omit empty string", "$ r8 = $ r7 trim result", "$ r9 = $ r8 split r0", "r2 = com google common collect list new array list $ r9", "r3 = r2 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label4", "$ r10 = r3 next", "r4 = java lang string $ r10", "r5 = r4 split \\ `` \\", "$ i0 = lengthof r5", "if $ i0 == 2 goto label3", "r23 = new org apache hadoop util z k util $ bad auth format exception", "r22 = new java lang string builder", "specialinvoke r22 < init >", "$ r18 = r22 append \\ `` auth \\'\\ ``", "$ r19 = $ r18 append r4", "$ r20 = $ r19 append \\ `` \\ ' not of expect form schemeauth\\ ``", "$ r21 = $ r20 to string", "specialinvoke r23 < init > $ r21", "r25 = java lang throwable r23", "throw r25", "if $ i0 == 2 goto label3", "label r24 = new org apache hadoop util z k util $ z k auth info", "$ r14 = r5 [ 0 ]", "$ r13 = r5 [ 1 ]", "$ r12 = com google common base charsets utf_8", "$ r15 = $ r13 get bytes $ r12", "specialinvoke r24 < init > $ r14 $ r15", "r1 add r24", "goto label2", "if $ z0 == 0 goto label4", "label return r1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], []]}
{"nodes": ["r0 = @ this", "r34 = org apache hadoop hdfs block reader factory r0", "$ r1 = r34 configuration", "com google common base precondition check not null $ r1", "r35 = org apache hadoop hdfs block reader factory r0", "$ r2 = r35 conf", "$ z0 = $ r2 short circuit local read", "if $ z0 == 0 goto label4", "r36 = org apache hadoop hdfs block reader factory r0", "$ z3 = r36 allow short circuit local read", "if $ z3 == 0 goto label4", "r37 = org apache hadoop hdfs block reader factory r0", "$ r14 = r37 client context", "$ z4 = $ r14 get use legacy block reader local", "if $ z4 == 0 goto label2", "r38 = org apache hadoop hdfs block reader factory r0", "r27 = specialinvoke r38 get legacy block reader local", "if r27 == null goto label4", "$ r21 = org apache hadoop hdfs block reader factory log", "$ z6 = $ r21 be trace enabled", "if $ z6 == 0 goto label1", "$ r23 = org apache hadoop hdfs block reader factory log", "r31 = new java lang string builder", "specialinvoke r31 < init >", "$ r24 = r31 append r0", "$ r25 = $ r24 append \\ `` return new legacy block reader local \\ ``", "$ r26 = $ r25 to string", "$ r23 trace $ r26", "label return r27", "if r27 == null goto label4", "label r40 = org apache hadoop hdfs block reader factory r0", "$ r29 = r40 conf", "$ z7 = $ r29 domain socket data traffic", "if $ z7 == 0 goto label6", "r41 = org apache hadoop hdfs block reader factory r0", "r30 = specialinvoke r41 get remote block reader from domain", "if r30 == null goto label6", "$ r4 = org apache hadoop hdfs block reader factory log", "$ z2 = $ r4 be trace enabled", "if $ z2 == 0 goto label5", "$ r6 = org apache hadoop hdfs block reader factory log", "r33 = new java lang string builder", "specialinvoke r33 < init >", "$ r7 = r33 append r0", "$ r8 = $ r7 append \\ `` return new remote block reader use \\ ``", "$ r9 = $ r8 append \\ `` unix domain socket on \\ ``", "r42 = org apache hadoop hdfs block reader factory r0", "$ r10 = r42 path info", "$ r11 = $ r10 get path", "$ r12 = $ r9 append $ r11", "$ r13 = $ r12 to string", "$ r6 trace $ r13", "label return r30", "if r30 == null goto label6", "label $ z1 = org apache hadoop hdfs d f s input stream tcp read disable for test", "if $ z1 ! = 0 goto label7", "$ z8 = 1", "goto label8", "label com google common base precondition check state $ z8 \\ `` tcp read be disable for test but we fail to do a non- t c p read \\ ``", "r43 = org apache hadoop hdfs block reader factory r0", "$ r3 = specialinvoke r43 get remote block reader from tcp", "return $ r3", "if $ z1 ! = 0 goto label7", "label $ z8 = 0", "if $ z4 == 0 goto label2", "label r39 = org apache hadoop hdfs block reader factory r0", "r28 = specialinvoke r39 get block reader local", "if r28 == null goto label4", "$ r15 = org apache hadoop hdfs block reader factory log", "$ z5 = $ r15 be trace enabled", "if $ z5 == 0 goto label3", "$ r17 = org apache hadoop hdfs block reader factory log", "r32 = new java lang string builder", "specialinvoke r32 < init >", "$ r18 = r32 append r0", "$ r19 = $ r18 append \\ `` return new block reader local \\ ``", "$ r20 = $ r19 to string", "$ r17 trace $ r20", "label return r28"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [], [59], [60], [61], [], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r3 = org apache hadoop hdfs client hdfs admin r0", "$ r2 = r3 dfs", "$ r2 set quota r1 l0 9223372036854775807l", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache hadoop hdfs client hdfs admin r0", "$ r3 = r4 dfs", "$ r3 set storage policy r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org apache hadoop hdfs client hdfs data input stream r0", "$ r1 = specialinvoke r3 get d f s input stream", "$ r2 = $ r1 get current block", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get \\ `` dfs client context\\", "$ r2 = new org apache hadoop hdfs d f s client $ conf", "specialinvoke $ r2 < init > r0", "$ r3 = org apache hadoop hdfs client context get $ r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 equal \\ `` \\ ``", "if $ z0 ! = 0 goto label1", "$ z1 = r0 equal \\ `` \\ ``", "if $ z1 ! = 0 goto label1", "$ i0 = r0 index of \\ `` \\ ``", "if $ i0 > = 0 goto label1", "$ i1 = r0 index of \\ `` \\ ``", "if $ i1 < 0 goto label2", "label return 0", "if $ i1 < 0 goto label2", "label $ z2 = org apache hadoop hdfs d f s util be reserve path component r0", "if $ z2 ! = 0 goto label3", "$ z3 = 1", "goto label4", "label return $ z3", "if $ z2 ! = 0 goto label3", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org apache hadoop hdfs protocol hdfs constant reserved_path_components", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label3", "r2 = r1 [ i1 ]", "$ z0 = r0 equal r2", "if $ z0 == 0 goto label2", "return 1", "if $ z0 == 0 goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org apache hadoop hdfs d f s util concat suffix r1", "$ r3 = org apache hadoop hdfs d f s util add suffix r0 r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["l0 = @ parameter0", "l1 = @ parameter1", "$ b2 = l1 cmp 0l", "if $ b2 > 0 goto label1", "$ f3 = 100 0f", "goto label2", "label return $ f3", "if $ b2 > 0 goto label1", "label $ f0 = float l0", "$ f2 = $ f0 * 100 0f", "$ f1 = float l1", "$ f3 = $ f2 $ f1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java text simple date format", "$ r3 = java util locale english", "specialinvoke $ r2 < init > \\ `` yyyy- m m-dd\\ ' t\\ ' h hmmss z\\", "$ r4 = $ r2 format r0", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache hadoop hdfs distribute file system r0", "r2 = r7 fix relative part r1", "r6 = new org apache hadoop hdfs distribute file system $ 2", "r8 = org apache hadoop hdfs distribute file system r0", "specialinvoke r6 < init > r8 r1", "$ r4 = r6 resolve r0 r2", "$ r5 = java lang boolean $ r4", "$ z0 = $ r5 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r4 = new org apache hadoop hdfs distribute file system $ disk status", "r5 = org apache hadoop hdfs distribute file system r0", "$ r2 = r5 dfs", "$ r3 = $ r2 get disk status", "specialinvoke r4 < init > $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop hdfs distribute file system r0", "$ r1 = r2 dfs", "$ r1 refresh node", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache hadoop hdfs distribute file system r0", "$ r2 = r4 dfs", "$ r3 = $ r2 roll upgrade r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r2 = org apache hadoop hdfs distribute file system r0", "$ r1 = r2 dfs", "$ r1 set balancer bandwidth l0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache hadoop hdfs distribute file system r0", "$ r1 = r3 dfs", "$ r2 = $ r1 get canonical service name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["return"], "adj": [[]]}
{"nodes": ["i0 = @ parameter0", "r0 = @ parameter1", "r2 = new org apache hadoop hdfs protocol block list a longs $ buffer decoder", "specialinvoke r2 < init > i0 r0", "r3 = org apache hadoop hdfs protocol block list a longs r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs protocol datanode info r0", "$ l0 = r1 block pool use", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs protocol datanode info r0", "$ l1 = r1 remain", "r2 = org apache hadoop hdfs protocol datanode info r0", "$ l0 = r2 capacity", "$ f0 = org apache hadoop hdfs d f s util get percent remain $ l1 $ l0", "return $ f0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs protocol datanode info r0", "$ i0 = r1 xceiver count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop hdfs protocol datanode info r0", "$ r1 = r2 parent", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop hdfs protocol datatransfer op r0", "$ b0 = r2 code", "r1 write $ b0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache hadoop hdfs protocol datatransfer sasl sasl participant r0", "r1 = r3 get negotiate qop", "if r1 == null goto label1", "$ r2 = \\ `` auth-conf\\ ``", "$ z0 = $ r2 equal ignore case r1", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r6 = org apache hadoop hdfs protocol directory list r0", "$ r1 = r6 partial list", "$ i0 = lengthof $ r1", "if $ i0 ! = 0 goto label1", "return null", "if $ i0 ! = 0 goto label1", "label r7 = org apache hadoop hdfs protocol directory list r0", "$ r3 = r7 partial list", "r8 = org apache hadoop hdfs protocol directory list r0", "$ r2 = r8 partial list", "$ i1 = lengthof $ r2", "$ i2 = $ i1 - 1", "$ r4 = $ r3 [ $ i2 ]", "$ r5 = $ r4 get local name in byte", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache hadoop hdfs protocol layout version get last non reserve feature r0", "$ r2 = $ r1 get info", "$ i0 = $ r2 get layout version", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org apache hadoop hdfs qjournal server journal node http server r0", "$ r2 = r5 http server", "r1 = $ r2 get connector address 0", "$ z0 = org apache hadoop hdfs qjournal server journal node http server $ assertion disable", "if $ z0 ! = 0 goto label1", "$ i0 = r1 get port", "if $ i0 ! = 0 goto label1", "r4 = new java lang assertion error", "specialinvoke r4 < init >", "throw r4", "if $ i0 ! = 0 goto label1", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "entermonitor r0", "label r22 = org apache hadoop hdfs security token block block token secret manager r0", "$ r5 = r22 all key", "$ r6 = java lang integer value of i0", "$ r7 = $ r5 get $ r6", "r19 = org apache hadoop hdfs security token block block key $ r7", "if r19 ! = null goto label2", "r21 = new org apache hadoop hdfs protocol datatransfer invalid encryption key exception", "r20 = new java lang string builder", "specialinvoke r20 < init >", "$ r12 = r20 append \\ `` can\\'t re-compute encryption key for nonce since the required block key key i d=\\ ``", "$ r13 = $ r12 append i0", "$ r14 = $ r13 append \\ `` doesn\\'t exist current key \\ ``", "r23 = org apache hadoop hdfs security token block block token secret manager r0", "$ r15 = r23 current key", "$ i1 = $ r15 get key id", "$ r16 = $ r14 append $ i1", "$ r17 = $ r16 to string", "specialinvoke r21 < init > $ r17", "r24 = java lang throwable r21", "throw r24", "if r19 ! = null goto label2", "label exitmonitor r0", "label goto label6", "label $ r8 = r19 get key", "$ r9 = org apache hadoop hdfs security token block block token secret manager create password r1 $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache hadoop hdfs security token delegation delegation token secret manager r0", "$ r3 = r7 current token", "$ r4 = $ r3 get r1", "r2 = org apache hadoop security token delegation abstract delegation token secret manager $ delegation token information $ r4", "if r2 == null goto label1", "$ l0 = r2 get renew date", "return $ l0", "if r2 == null goto label1", "label r6 = new java io i o exception", "specialinvoke r6 < init > \\ `` no delegation token find for this identifier\\ ``", "throw r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r2 = org apache hadoop hdfs server blockmanagement block id manager r0", "$ r1 = r2 block id generator", "$ r1 skip to l0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ l0 = r1 get generation stamp", "r2 = org apache hadoop hdfs server blockmanagement block id manager r0", "$ l1 = r2 get generation stamp v1 limit", "$ b2 = $ l0 cmp $ l1", "if $ b2 > = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b2 > = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ i1 = 0", "goto label2", "label i0 = $ i1", "r7 = new java util array list", "specialinvoke r7 < init > $ i1", "r9 = org apache hadoop hdfs server blockmanagement block info contiguous under construction r0", "r9 replica = r7", "i2 = 0", "label if i2 > = i0 goto label4", "r10 = org apache hadoop hdfs server blockmanagement block info contiguous under construction r0", "$ r6 = r10 replica", "r8 = new org apache hadoop hdfs server blockmanagement block info contiguous under construction $ replica under construction", "$ r5 = r1 [ i2 ]", "$ r4 = org apache hadoop hdfs server common hdfs server constant $ replica state rbw", "r11 = org apache hadoop hdfs protocol block r0", "specialinvoke r8 < init > r11 $ r5 $ r4", "$ r6 add r8", "i2 = i2 + 1", "goto label3", "label if i2 > = i0 goto label4", "label return", "if r1 ! = null goto label1", "label $ i1 = lengthof r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "l4 = 0l", "r7 = org apache hadoop hdfs server blockmanagement datanode descriptor r0", "r2 = r7 get storage info", "i1 = lengthof r2", "i5 = 0", "label if i5 > = i1 goto label4", "r3 = r2 [ i5 ]", "$ r4 = r3 get state", "$ r5 = org apache hadoop hdfs server protocol datanode storage $ state normal", "if $ r4 ! = $ r5 goto label3", "if r1 == null goto label2", "$ r6 = r3 get storage type", "if $ r6 ! = r1 goto label3", "label l2 = r3 get remain", "$ b3 = l2 cmp l0", "if $ b3 < 0 goto label3", "l4 = l4 + l2", "label i5 = i5 + 1", "goto label1", "label if i5 > = i1 goto label4", "label return l4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs server blockmanagement datanode manager r0", "$ i0 = r1 num stale storage", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = org apache hadoop hdfs server blockmanagement datanode manager r0", "$ r5 = r10 datanode map", "entermonitor $ r5", "label r11 = org apache hadoop hdfs server blockmanagement datanode manager r0", "$ r6 = r11 datanode map", "$ r7 = $ r6 value", "r2 = $ r7 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r8 = r2 next", "r3 = org apache hadoop hdfs server blockmanagement datanode descriptor $ r8", "r3 set last caching directive sent time m 0l", "goto label2", "if $ z0 == 0 goto label3", "label exitmonitor $ r5", "label goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop hdfs server blockmanagement under replicate block r0", "$ r1 = r2 iterator", "r3 = java util iterator $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "if z0 == 0 goto label1", "$ r5 = \\ `` ? \\ ``", "goto label2", "label $ r2 = org apache hadoop hdfs server common jsp helper get url param r0 r1 $ r5", "return $ r2", "if z0 == 0 goto label1", "label $ r5 = \\ `` & \\ ``"], "adj": [[1], [2], [3], [4], [5], [], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs server common storage info r0", "$ i0 = r1 layout version", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r7 = null", "label $ r3 = new java io data input stream", "$ r4 = new java io buffer input stream", "$ r5 = new java io file input stream", "specialinvoke $ r5 < init > r0", "$ i0 = org apache hadoop hdfs protocol hdfs constant io_file_buffer_size", "specialinvoke $ r4 < init > $ r5 $ i0", "specialinvoke $ r3 < init > $ r4", "r7 = $ r3", "r1 = org apache hadoop hdfs server datanode block metadata header read data checksum $ r3 r0", "label org apache hadoop io i o utils close stream $ r3", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ i1 = org apache hadoop hdfs server datanode block metadata header get header size", "r1 = newarray byte [ $ i1 ]", "r2 = java nio byte buffer wrap r1", "label $ z0 = r2 have remain", "if $ z0 == 0 goto label2", "$ i7 = r0 read r2 0l", "if $ i7 > 0 goto label1", "$ r5 = new java io e o f exception", "specialinvoke $ r5 < init > \\ `` unexpected eof while read metadata file header\\ ``", "throw $ r5", "if $ z0 == 0 goto label2", "label $ b2 = r1 [ 0 ]", "$ i5 = $ b2 < < 8", "$ b3 = r1 [ 1 ]", "$ s4 = $ b3 & 255", "$ i6 = $ i5 | $ s4", "s0 = short $ i6", "r3 = org apache hadoop util data checksum new data checksum r1 2", "$ r4 = new org apache hadoop hdfs server datanode block metadata header", "specialinvoke $ r4 < init > s0 r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label5", "$ r6 = r2 next", "r3 = org apache hadoop hdfs server common storage $ storage directory $ r6", "r29 = org apache hadoop hdfs server datanode block pool slice storage r0", "$ r7 = r29 blockpool i d", "$ r8 = r3 get current dir", "r4 = org apache hadoop hdfs server datanode block pool slice storage get bp root $ r7 $ r8", "r26 = new java io file", "specialinvoke r26 < init > r4 \\ `` roll upgrade in progress\\ ``", "$ r10 = org apache hadoop hdfs server datanode block pool slice storage storage with roll upgrade marker", "$ r11 = r4 to string", "$ z1 = $ r10 contain $ r11", "if $ z1 ! = 0 goto label4", "$ z2 = r26 exist", "if $ z2 ! = 0 goto label2", "$ z5 = r26 create new file", "if $ z5 == 0 goto label2", "$ r18 = org apache hadoop hdfs server datanode block pool slice storage log", "r27 = new java lang string builder", "specialinvoke r27 < init >", "$ r19 = r27 append \\ `` create \\ ``", "$ r20 = $ r19 append r26", "$ r21 = $ r20 to string", "$ r18 info $ r21", "goto label3", "label $ r22 = org apache hadoop hdfs server datanode block pool slice storage storage with roll upgrade marker", "$ r23 = r4 to string", "$ r22 add $ r23", "$ r24 = org apache hadoop hdfs server datanode block pool slice storage storage without roll upgrade marker", "$ r25 = r4 to string", "$ r24 remove $ r25", "label goto label1", "if $ z5 == 0 goto label2", "label $ r13 = org apache hadoop hdfs server datanode block pool slice storage log", "r28 = new java lang string builder", "specialinvoke r28 < init >", "$ r14 = r28 append r26", "$ r15 = $ r14 append \\ `` already exist \\ ``", "$ r16 = $ r15 to string", "$ r13 info $ r16", "if $ z0 == 0 goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label4", "$ r6 = r2 next", "r3 = org apache hadoop hdfs server common storage $ storage directory $ r6", "r30 = org apache hadoop hdfs server datanode block pool slice storage r0", "$ r7 = r30 blockpool i d", "$ r8 = r3 get current dir", "r4 = org apache hadoop hdfs server datanode block pool slice storage get bp root $ r7 $ r8", "r27 = new java io file", "specialinvoke r27 < init > r4 \\ `` roll upgrade in progress\\ ``", "$ r10 = org apache hadoop hdfs server datanode block pool slice storage storage without roll upgrade marker", "$ r11 = r4 to string", "$ z1 = $ r10 contain $ r11", "if $ z1 ! = 0 goto label3", "$ z2 = r27 exist", "if $ z2 == 0 goto label2", "$ r13 = org apache hadoop hdfs server datanode block pool slice storage log", "r28 = new java lang string builder", "specialinvoke r28 < init >", "$ r14 = r28 append \\ `` delete \\ ``", "$ r15 = $ r14 append r27", "$ r16 = $ r15 to string", "$ r13 info $ r16", "$ r17 = r3 get current dir", "r31 = org apache hadoop hdfs server datanode block pool slice storage r0", "r31 do finalize $ r17", "$ z5 = r27 delete", "if $ z5 ! = 0 goto label2", "$ r19 = org apache hadoop hdfs server datanode block pool slice storage log", "r29 = new java lang string builder", "specialinvoke r29 < init >", "$ r20 = r29 append \\ `` fail to delete \\ ``", "$ r21 = $ r20 append r27", "$ r22 = $ r21 to string", "$ r19 warn $ r22", "label $ r23 = org apache hadoop hdfs server datanode block pool slice storage storage without roll upgrade marker", "$ r24 = r4 to string", "$ r23 add $ r24", "$ r25 = org apache hadoop hdfs server datanode block pool slice storage storage with roll upgrade marker", "$ r26 = r4 to string", "$ r25 remove $ r26", "label goto label1", "if $ z0 == 0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], []]}
{"nodes": ["r0 = @ this", "r17 = org apache hadoop hdfs server datanode block scanner r0", "$ r1 = r17 scanner", "$ r2 = $ r1 entry set", "r13 = $ r2 iterator", "label $ z0 = r13 have next", "if $ z0 == 0 goto label2", "$ r10 = r13 next", "r14 = java util map $ entry $ r10", "$ r11 = r14 get value", "$ r12 = org apache hadoop hdfs server datanode volume scanner $ r11", "$ r12 shutdown", "goto label1", "if $ z0 == 0 goto label2", "label r18 = org apache hadoop hdfs server datanode block scanner r0", "$ r3 = r18 scanner", "$ r4 = $ r3 entry set", "r15 = $ r4 iterator", "label $ z1 = r15 have next", "if $ z1 == 0 goto label4", "$ r6 = r15 next", "r16 = java util map $ entry $ r6", "$ r7 = r16 get value", "$ r9 = java lang thread $ r7", "$ r8 = java util concurrent time unit minute", "com google common util concurrent uninterruptibles join uninterruptibly $ r9 5l $ r8", "goto label3", "if $ z1 == 0 goto label4", "label r19 = org apache hadoop hdfs server datanode block scanner r0", "$ r5 = r19 scanner", "$ r5 clear", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r8 = org apache hadoop hdfs server datanode fsdataset impl f volume impl r0", "$ r1 = r8 bp slice", "$ r2 = $ r1 key set", "r9 = org apache hadoop hdfs server datanode fsdataset impl f volume impl r0", "$ r3 = r9 bp slice", "$ r4 = $ r3 key set", "$ i0 = $ r4 size", "$ r5 = newarray java lang string [ $ i0 ]", "$ r6 = $ r2 to array $ r5", "$ r7 = java lang string [ ] $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop hdfs server datanode replica info r0", "$ r1 = r2 volume", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r10 = org apache hadoop hdfs server datanode replica under recovery r0", "$ l1 = r10 recovery id", "$ b2 = l0 cmp $ l1", "if $ b2 < = 0 goto label1", "r11 = org apache hadoop hdfs server datanode replica under recovery r0", "r11 recovery id = l0", "goto label2", "label return", "if $ b2 < = 0 goto label1", "label r9 = new java lang illegal argument exception", "r8 = new java lang string builder", "specialinvoke r8 < init >", "$ r3 = r8 append \\ `` the new rcovery id \\ ``", "$ r4 = $ r3 append l0", "$ r5 = $ r4 append \\ `` must be great than the current one \\ ``", "r12 = org apache hadoop hdfs server datanode replica under recovery r0", "$ l3 = r12 recovery id", "$ r6 = $ r5 append $ l3", "$ r7 = $ r6 to string", "specialinvoke r9 < init > $ r7", "throw r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r20 = new org apache hadoop hdfs server namenode acl transformation $ validate acl spec", "specialinvoke r20 < init > r1", "r3 = com google common collect list new array list with capacity 32", "r4 = com google common collect map new enum map class \\ `` lorg apache hadoop fs permission acl entry scope \\ ``", "r5 = java util enum set none of class \\ `` lorg apache hadoop fs permission acl entry scope \\ ``", "r6 = java util enum set none of class \\ `` lorg apache hadoop fs permission acl entry scope \\ ``", "r7 = r0 iterator", "label $ z0 = r7 have next", "if $ z0 == 0 goto label5", "$ r11 = r7 next", "r8 = org apache hadoop fs permission acl entry $ r11", "$ z1 = r20 contain key r8", "if $ z1 == 0 goto label2", "$ r16 = r8 get scope", "r6 add $ r16", "$ r17 = r8 get type", "$ r18 = org apache hadoop fs permission acl entry type mask", "if $ r17 ! = $ r18 goto label4", "$ r19 = r8 get scope", "r5 add $ r19", "goto label4", "label goto label1", "if $ z1 == 0 goto label2", "label $ r12 = r8 get type", "$ r13 = org apache hadoop fs permission acl entry type mask", "if $ r12 ! = $ r13 goto label3", "$ r14 = r8 get scope", "r21 = java lang enum $ r14", "r4 put r21 r8", "if $ r12 ! = $ r13 goto label3", "label r3 add r8", "if $ z0 == 0 goto label5", "label org apache hadoop hdfs server namenode acl transformation copy default if need r3", "org apache hadoop hdfs server namenode acl transformation calculate mask r3 r4 r5 r6", "$ r10 = org apache hadoop hdfs server namenode acl transformation build and validate acl r3", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new java util link list", "specialinvoke r10 < init >", "i1 = 0", "label r11 = org apache hadoop hdfs server namenode cache block r0", "$ r5 = r11 triplet", "$ i0 = lengthof $ r5", "if i1 > = $ i0 goto label4", "r12 = org apache hadoop hdfs server namenode cache block r0", "$ r6 = r12 triplet", "$ r7 = $ r6 [ i1 ]", "r3 = org apache hadoop hdfs server blockmanagement datanode descriptor $ cache block list $ r7", "if r1 == null goto label2", "$ r9 = r3 get type", "if $ r9 ! = r1 goto label3", "label $ r8 = r3 get datanode", "r10 add $ r8", "label i1 = i1 + 3", "goto label1", "if i1 > = $ i0 goto label4", "label return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ z0 = org apache hadoop hdfs server namenode edit log backup output stream $ assertion disable", "if $ z0 ! = 0 goto label1", "r6 = org apache hadoop hdfs server namenode edit log backup output stream r0", "$ r2 = r6 double buf", "$ z1 = $ r2 be flush", "if $ z1 ! = 0 goto label1", "r4 = new java lang assertion error", "specialinvoke r4 < init > \\ `` previous data be not flush yet\\ ``", "throw r4", "if $ z1 ! = 0 goto label1", "label r5 = new org apache hadoop hdfs server namenode edit double buffer", "specialinvoke r5 < init > 256", "r7 = org apache hadoop hdfs server namenode edit log backup output stream r0", "r7 double buf = r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org apache hadoop hdfs server namenode i node with additional field", "if $ z0 == 0 goto label1", "r5 = org apache hadoop hdfs server namenode f s directory r0", "$ r3 = r5 inode map", "$ r3 put r1", "$ z1 = r1 be symlink", "if $ z1 ! = 0 goto label1", "r2 = r1 get x attr feature", "$ r4 = org apache hadoop hdfs server namenode i node with additional field r1", "r6 = org apache hadoop hdfs server namenode f s directory r0", "specialinvoke r6 add encryption zone $ r4 r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r5 = org apache hadoop hdfs server namenode f s directory r0", "r5 read lock", "label r6 = org apache hadoop hdfs server namenode f s directory r0", "$ r3 = r6 inode map", "r1 = $ r3 get l0", "label r7 = org apache hadoop hdfs server namenode f s directory r0", "r7 read unlock", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs server namenode f s edit log r0", "$ l0 = r1 synctxid", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = org apache hadoop hdfs server namenode f s permission checker r0", "$ z0 = r10 be super user", "if $ z0 ! = 0 goto label1", "r9 = new org apache hadoop security access control exception", "r8 = new java lang string builder", "specialinvoke r8 < init >", "$ r3 = r8 append \\ `` access deny for user \\ ``", "r11 = org apache hadoop hdfs server namenode f s permission checker r0", "$ r4 = r11 get user", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 append \\ `` superuser privilege be required\\ ``", "$ r7 = $ r6 to string", "specialinvoke r9 < init > $ r7", "r12 = java lang throwable r9", "throw r12", "if $ z0 ! = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r6 = new java io string writer", "specialinvoke r6 < init >", "r7 = new java io print writer", "specialinvoke r7 < init > r6 1", "r8 = new java lang string builder", "specialinvoke r8 < init >", "r9 = org apache hadoop hdfs server namenode i node r0", "r9 dump tree recursively r7 r8 2147483646", "$ r5 = r6 get buffer", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs server namenode i node file r0", "$ l0 = r1 compute file size 0 0", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs server namenode i node file r0", "$ l0 = r1 storagespace consume no replication", "r2 = org apache hadoop hdfs server namenode i node file r0", "$ s1 = r2 get block replication", "$ l2 = long $ s1", "$ l3 = $ l0 * $ l2", "return $ l3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 be reference", "if $ z0 ! = 0 goto label1", "return -1", "if $ z0 ! = 0 goto label1", "label $ r1 = r0 a reference", "$ i0 = org apache hadoop hdfs server namenode i node reference remove reference $ r1", "return $ i0"], "adj": [[1], [2], [3], [], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs server namenode i node in path r0", "$ z0 = r1 be snapshot", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label com google common base precondition check state $ z1", "r2 = org apache hadoop hdfs server namenode i node in path r0", "$ i0 = r2 snapshot id", "return $ i0", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "i1 = @ parameter1", "r2 = org apache hadoop hdfs server namenode i node with additional field r0", "$ z0 = r2 be directory", "com google common base precondition check state $ z0", "r3 = org apache hadoop hdfs server namenode i node with additional field r0", "$ l2 = r3 modification time", "$ b3 = l0 cmp $ l2", "if $ b3 > 0 goto label1", "return r0", "if $ b3 > 0 goto label1", "label r4 = org apache hadoop hdfs server namenode i node with additional field r0", "$ r1 = r4 set modification time l0 i1", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r3 = org apache hadoop hdfs server namenode name node resource checker r0", "$ r1 = r3 volume", "$ r2 = $ r1 value", "r4 = org apache hadoop hdfs server namenode name node resource checker r0", "$ i0 = r4 minimum redundant volume", "$ z0 = org apache hadoop hdfs server namenode name node resource policy be resource available $ r2 $ i0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 == null goto label1", "$ l4 = r1 begin time", "$ b5 = $ l4 cmp -9223372036854775808l", "if $ b5 == 0 goto label1", "if r2 == null goto label1", "$ l6 = r2 end time", "$ b7 = $ l6 cmp -9223372036854775808l", "if $ b7 == 0 goto label1", "$ l9 = r2 end time", "$ l8 = r1 begin time", "l10 = $ l9 - $ l8", "goto label3", "label $ l11 = java lang math max 0l l10", "return $ l11", "if $ b7 == 0 goto label1", "label if r1 == null goto label2", "$ l0 = r1 begin time", "$ b1 = $ l0 cmp -9223372036854775808l", "if $ b1 == 0 goto label2", "$ l2 = org apache hadoop util time monotonic now", "$ l3 = r1 begin time", "l10 = $ l2 - $ l3", "if $ b1 == 0 goto label2", "label l10 = 0l"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l3 = 0l", "r10 = org apache hadoop hdfs server namenode startupprogress startup progress view r0", "$ r4 = r10 phase", "$ r5 = $ r4 get r1", "$ r6 = org apache hadoop hdfs server namenode startupprogress phase track $ r5", "$ r7 = $ r6 step", "$ r8 = $ r7 value", "r2 = $ r8 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r9 = r2 next", "r3 = org apache hadoop hdfs server namenode startupprogress step track $ r9", "$ l0 = r3 total", "$ b1 = $ l0 cmp -9223372036854775808l", "if $ b1 == 0 goto label2", "$ l2 = r3 total", "l3 = l3 + $ l2", "label goto label1", "if $ z0 == 0 goto label3", "label return l3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop hdfs server namenode startupprogress step r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs server protocol balancer bandwidth command r0", "$ l0 = r1 bandwidth", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache hadoop hdfs server protocol block recovery command r0", "$ r2 = r3 recover block", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs server protocol checkpoint command r0", "$ z0 = r1 need to return image", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = new java lang string builder", "specialinvoke $ r0 < init >", "$ r1 = $ r0 append \\ `` ds-\\ ``", "$ r2 = java util uuid random u u i d", "$ r3 = $ r1 append $ r2", "$ r4 = $ r3 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs server protocol volume failure summary r0", "$ l0 = r1 last volume failure date", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org apache hadoop hdfs shortcircuit client mmap r0", "$ r1 = r4 replica", "if $ r1 == null goto label2", "r5 = org apache hadoop hdfs shortcircuit client mmap r0", "$ z0 = r5 anchor", "if $ z0 == 0 goto label1", "r6 = org apache hadoop hdfs shortcircuit client mmap r0", "$ r3 = r6 replica", "$ r3 remove no checksum anchor", "label r7 = org apache hadoop hdfs shortcircuit client mmap r0", "$ r2 = r7 replica", "$ r2 unref", "label r8 = org apache hadoop hdfs shortcircuit client mmap r0", "r8 replica = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs shortcircuit dfs client shm r0", "$ z0 = r1 disconnect", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "if i0 > = 0 goto label1", "r50 = new org apache hadoop f invalid request exception", "r49 = new java lang string builder", "specialinvoke r49 < init >", "$ r44 = r49 append r0", "$ r45 = $ r44 append \\ `` invalid negative slot \\ ``", "$ r46 = $ r45 append \\ `` index \\ ``", "$ r47 = $ r46 append i0", "$ r48 = $ r47 to string", "specialinvoke r50 < init > $ r48", "r59 = java lang throwable r50", "throw r59", "if i0 > = 0 goto label1", "label r60 = org apache hadoop hdfs shortcircuit short circuit shm r0", "$ r3 = r60 slot", "$ i1 = lengthof $ r3", "if i0 < $ i1 goto label2", "r52 = new org apache hadoop f invalid request exception", "r51 = new java lang string builder", "specialinvoke r51 < init >", "$ r37 = r51 append r0", "$ r38 = $ r37 append \\ `` invalid slot \\ ``", "$ r39 = $ r38 append \\ `` index \\ ``", "$ r40 = $ r39 append i0", "$ r41 = $ r40 to string", "specialinvoke r52 < init > $ r41", "r61 = java lang throwable r52", "throw r61", "if i0 < $ i1 goto label2", "label r62 = org apache hadoop hdfs shortcircuit short circuit shm r0", "$ r4 = r62 allocate slot", "$ z0 = $ r4 get i0", "if $ z0 == 0 goto label3", "r54 = new org apache hadoop f invalid request exception", "r53 = new java lang string builder", "specialinvoke r53 < init >", "$ r30 = r53 append r0", "$ r31 = $ r30 append \\ `` slot \\ ``", "$ r32 = $ r31 append i0", "$ r33 = $ r32 append \\ `` be already in use \\ ``", "$ r34 = $ r33 to string", "specialinvoke r54 < init > $ r34", "r63 = java lang throwable r54", "throw r63", "if $ z0 == 0 goto label3", "label r55 = new org apache hadoop hdfs shortcircuit short circuit shm $ slot", "r64 = org apache hadoop hdfs shortcircuit short circuit shm r0", "$ l2 = specialinvoke r64 calculate slot address i0", "r65 = org apache hadoop hdfs shortcircuit short circuit shm r0", "specialinvoke r55 < init > r65 $ l2 r1", "$ z1 = r55 be valid", "if $ z1 ! = 0 goto label4", "r57 = new org apache hadoop f invalid request exception", "r56 = new java lang string builder", "specialinvoke r56 < init >", "$ r23 = r56 append r0", "$ r24 = $ r23 append \\ `` slot \\ ``", "$ r25 = $ r24 append i0", "$ r26 = $ r25 append \\ `` be not mark a valid \\ ``", "$ r27 = $ r26 to string", "specialinvoke r57 < init > $ r27", "r66 = java lang throwable r57", "throw r66", "if $ z1 ! = 0 goto label4", "label r67 = org apache hadoop hdfs shortcircuit short circuit shm r0", "$ r6 = r67 slot", "$ r6 [ i0 ] = r55", "r68 = org apache hadoop hdfs shortcircuit short circuit shm r0", "$ r7 = r68 allocate slot", "$ r7 set i0 1", "$ r8 = org apache hadoop hdfs shortcircuit short circuit shm log", "$ z2 = $ r8 be trace enabled", "if $ z2 == 0 goto label5", "$ r10 = org apache hadoop hdfs shortcircuit short circuit shm log", "r58 = new java lang string builder", "specialinvoke r58 < init >", "$ r11 = r58 append r0", "$ r12 = $ r11 append \\ `` register slot \\ ``", "$ r13 = $ r12 append i0", "$ r14 = $ r13 append \\ `` allocated slots=\\ ``", "r69 = org apache hadoop hdfs shortcircuit short circuit shm r0", "$ r15 = r69 allocate slot", "$ r16 = $ r14 append $ r15", "$ r17 = java lang thread current thread", "$ r18 = org apache hadoop util string utils get stack trace $ r17", "$ r19 = $ r16 append $ r18", "$ r20 = $ r19 to string", "$ r10 trace $ r20", "label return r55"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z1 = r1 equal \\ `` check\\ ``", "if $ z1 ! = 0 goto label1", "$ z5 = r1 equal \\ `` true\\ ``", "if $ z5 ! = 0 goto label1", "$ z6 = r1 equal \\ `` false\\ ``", "if $ z6 ! = 0 goto label1", "$ r25 = java lang system err", "$ r25 println \\ `` restore failed storage valid args be true|false|check\\ ``", "return -1", "if $ z6 ! = 0 goto label1", "label r30 = org apache hadoop hdfs tool d f s admin r0", "r2 = r30 get d f s", "r3 = r2 get conf", "r4 = r2 get uri", "z0 = org apache hadoop hdfs h a util be logical uri r3 r4", "if z0 == 0 goto label4", "r26 = r4 get host", "r5 = org apache hadoop hdfs h a util get proxy for all name node in nameservice r3 r26 class \\ `` lorg apache hadoop hdfs protocol client protocol \\ ``", "r6 = r5 iterator", "label $ z3 = r6 have next", "if $ z3 == 0 goto label3", "$ r14 = r6 next", "r7 = org apache hadoop hdfs name node proxy $ proxy and info $ r14", "$ r15 = r7 get proxy", "$ r16 = org apache hadoop hdfs protocol client protocol $ r15", "$ z4 = $ r16 restore fail storage r1", "r8 = java lang boolean value of $ z4", "$ r18 = java lang system out", "r28 = new java lang string builder", "specialinvoke r28 < init >", "$ r19 = r28 append \\ `` restore failed storage be set to \\ ``", "$ r20 = $ r19 append r8", "$ r21 = $ r20 append \\ `` for \\ ``", "$ r22 = r7 get address", "$ r23 = $ r21 append $ r22", "$ r24 = $ r23 to string", "$ r18 println $ r24", "goto label2", "if $ z3 == 0 goto label3", "label goto label5", "label return 0", "if z0 == 0 goto label4", "label $ z2 = r2 restore fail storage r1", "r27 = java lang boolean value of $ z2", "$ r10 = java lang system out", "r29 = new java lang string builder", "specialinvoke r29 < init >", "$ r11 = r29 append \\ `` restore failed storage be set to \\ ``", "$ r12 = $ r11 append r27", "$ r13 = $ r12 to string", "$ r10 println $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], []]}
{"nodes": ["r0 = @ this", "r30 = null", "r31 = null", "label r36 = new org apache hadoop hdfs server namenode f s edit log loader $ position track input stream", "r35 = new java io buffer input stream", "r34 = new java io file input stream", "r33 = new java io file", "r42 = org apache hadoop hdfs tool offline image viewer offline image viewer r0", "$ r6 = r42 input file", "specialinvoke r33 < init > $ r6", "specialinvoke r34 < init > r33", "specialinvoke r35 < init > r34", "specialinvoke r36 < init > r35", "r31 = r36", "r37 = new java io data input stream", "r43 = java io input stream r36", "specialinvoke r37 < init > r43", "r30 = r37", "r44 = org apache hadoop hdfs tool offline image viewer offline image viewer r0", "i0 = specialinvoke r44 find image version r37", "r32 = org apache hadoop hdfs tool offline image viewer image loader $ loader factory get loader i0", "if r32 ! = null goto label2", "r39 = new java io i o exception", "r38 = new java lang string builder", "specialinvoke r38 < init >", "$ r18 = r38 append \\ `` no image processor to read version \\ ``", "$ r19 = $ r18 append i0", "$ r20 = $ r19 append \\ `` be available \\ ``", "$ r21 = $ r20 to string", "specialinvoke r39 < init > $ r21", "throw r39", "if r32 ! = null goto label2", "label r45 = org apache hadoop hdfs tool offline image viewer offline image viewer r0", "$ r8 = r45 processor", "r46 = org apache hadoop hdfs tool offline image viewer offline image viewer r0", "$ z0 = r46 skip block", "r32 load image r37 $ r8 $ z0", "label goto label4", "label $ r10 = org apache hadoop hdfs tool offline image viewer offline image viewer log", "$ r9 = newarray java io closeable [ 2 ]", "$ r9 [ 0 ] = r37", "$ r9 [ 1 ] = r36", "r47 = java io closeable [ ] $ r9", "org apache hadoop io i o utils cleanup $ r10 r47", "goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache hadoop hdfs util diff $ list type create", "r7 = org apache hadoop hdfs util diff r0", "$ r3 = r7 get list $ r2", "$ r4 = org apache hadoop hdfs util diff $ list type delete", "r8 = org apache hadoop hdfs util diff r0", "$ r5 = r8 get list $ r4", "$ r6 = org apache hadoop hdfs util diff apply2 previous r1 $ r3 $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "r3 = org apache hadoop hdfs util enum double r0", "$ r2 = r3 double", "$ i0 = r1 ordinal", "$ r2 [ $ i0 ] = d0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i1 = 0", "label r5 = org apache hadoop hdfs util enum double r0", "$ r2 = r5 double", "$ i0 = lengthof $ r2", "if i1 > = $ i0 goto label2", "r6 = org apache hadoop hdfs util enum double r0", "$ r3 = r6 double", "$ d1 = $ r3 [ i1 ]", "$ r4 = r1 double", "$ d0 = $ r4 [ i1 ]", "$ d2 = $ d1 + $ d0", "$ r3 [ i1 ] = $ d2", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop hdfs util light weight hash set r0", "z0 = r2 add elem r1", "r3 = org apache hadoop hdfs util light weight hash set r0", "r3 expand if necessary", "return z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r7 = new java util array list", "r8 = org apache hadoop hdfs util light weight hash set r0", "$ i0 = r8 size", "specialinvoke r7 < init > $ i0", "i2 = 0", "label r9 = org apache hadoop hdfs util light weight hash set r0", "$ r3 = r9 entry", "$ i1 = lengthof $ r3", "if i2 > = $ i1 goto label4", "r10 = org apache hadoop hdfs util light weight hash set r0", "$ r4 = r10 entry", "r6 = $ r4 [ i2 ]", "label if r6 == null goto label3", "$ r5 = r6 element", "r7 add $ r5", "r6 = r6 next", "goto label2", "label if r6 == null goto label3", "label i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label4", "label r11 = org apache hadoop hdfs util light weight hash set r0", "r11 clear", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs util light weight hash set r0", "$ i1 = r1 size", "r2 = org apache hadoop hdfs util light weight hash set r0", "$ i0 = r2 shrink threshold", "if $ i1 > = $ i0 goto label1", "r3 = org apache hadoop hdfs util light weight hash set r0", "$ i3 = r3 capacity", "r4 = org apache hadoop hdfs util light weight hash set r0", "$ i2 = r4 initial capacity", "if $ i3 < = $ i2 goto label1", "r5 = org apache hadoop hdfs util light weight hash set r0", "$ i4 = r5 capacity", "$ i5 = $ i4 2", "r6 = org apache hadoop hdfs util light weight hash set r0", "specialinvoke r6 resize $ i5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache hadoop hdfs util long bit format r0", "$ l1 = r1 mask", "$ l3 = l0 & $ l1", "r2 = org apache hadoop hdfs util long bit format r0", "$ i2 = r2 offset", "$ l4 = $ l3 > > > $ i2", "return $ l4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache hadoop hdfs util reference count map r0", "$ r2 = r7 reference map", "$ r3 = $ r2 get r1", "r6 = org apache hadoop hdfs util reference count map $ reference counter $ r3", "if r6 ! = null goto label1", "r6 = r1", "r8 = org apache hadoop hdfs util reference count map r0", "$ r4 = r8 reference map", "$ r4 put r1 r1", "label r6 increment and get ref count", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache hadoop hdfs util reference count map r0", "$ r3 = r5 reference map", "$ r4 = $ r3 get r1", "r2 = org apache hadoop hdfs util reference count map $ reference counter $ r4", "if r2 == null goto label1", "$ i0 = r2 get ref count", "$ l1 = long $ i0", "return $ l1", "if r2 == null goto label1", "label return 0l"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r21 = new java net url", "r23 = org apache hadoop hdfs web hftp file system r0", "$ r5 = r23 get underlying protocol", "r24 = org apache hadoop hdfs web hftp file system r0", "$ r6 = r24 nn uri", "$ r7 = $ r6 get host", "r25 = org apache hadoop hdfs web hftp file system r0", "$ r8 = r25 nn uri", "$ i0 = $ r8 get port", "r20 = new java lang string builder", "specialinvoke r20 < init >", "$ r10 = r20 append r1", "$ r11 = $ r10 append 63", "$ r12 = $ r11 append r2", "$ r13 = $ r12 to string", "specialinvoke r21 < init > $ r5 $ r7 $ i0 $ r13", "$ r14 = org apache hadoop hdfs web hftp file system log", "$ z0 = $ r14 be trace enabled", "if $ z0 == 0 goto label1", "$ r16 = org apache hadoop hdfs web hftp file system log", "r22 = new java lang string builder", "specialinvoke r22 < init >", "$ r17 = r22 append \\ `` url=\\ ``", "$ r18 = $ r17 append r21", "$ r19 = $ r18 to string", "$ r16 trace $ r19", "label return r21"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "return \\ `` http\\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r2 = r0 get name space", "r1 = $ r2 to string", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = org apache hadoop util string utils to lower case r1", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 append \\ `` \\ ``", "$ r7 = r0 get name", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 to string", "return $ r9"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r8 = new org apache hadoop fs path", "r9 = org apache hadoop mapred yarn output file r0", "$ r3 = specialinvoke r9 get attempt output dir", "specialinvoke r8 < init > $ r3 \\ `` file out\\ ``", "r10 = org apache hadoop mapred yarn output file r0", "$ r4 = r10 l dir alloc", "$ r5 = r8 to string", "r11 = org apache hadoop mapred yarn output file r0", "$ r6 = r11 conf", "r12 = org apache hadoop conf configuration $ r6", "$ r7 = $ r4 get local path to read $ r5 r12", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r8 = new org apache hadoop fs path", "r9 = org apache hadoop mapred yarn output file r0", "$ r3 = specialinvoke r9 get attempt output dir", "specialinvoke r8 < init > $ r3 \\ `` file out index\\ ``", "r10 = org apache hadoop mapred yarn output file r0", "$ r4 = r10 l dir alloc", "$ r5 = r8 to string", "r11 = org apache hadoop mapred yarn output file r0", "$ r6 = r11 conf", "r12 = org apache hadoop conf configuration $ r6", "$ r7 = $ r4 get local path for write $ r5 l0 r12", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new org apache hadoop fs path", "$ r5 = r1 get parent", "specialinvoke r10 < init > $ r5 \\ `` output\\ ``", "r11 = new org apache hadoop fs path", "r13 = org apache hadoop mapred yarn output file r0", "$ r7 = r13 conf", "$ r8 = $ r7 get \\ `` mapreduce task attempt id\\ ``", "specialinvoke r11 < init > r10 $ r8", "r12 = new org apache hadoop fs path", "specialinvoke r12 < init > r11 \\ `` file out index\\ ``", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r9 = org apache hadoop mapred yarn output file r0", "$ r3 = r9 l dir alloc", "$ r1 = newarray java lang object [ 2 ]", "r10 = org apache hadoop mapred yarn output file r0", "$ r2 = r10 conf", "$ r4 = $ r2 get \\ `` mapreduce task attempt id\\ ``", "$ r1 [ 0 ] = $ r4", "$ r5 = java lang integer value of i0", "$ r1 [ 1 ] = $ r5", "$ r6 = java lang string format \\ `` % s_spill_ % d out\\", "r11 = org apache hadoop mapred yarn output file r0", "$ r7 = r11 conf", "r12 = org apache hadoop conf configuration $ r7", "$ r8 = $ r3 get local path to read $ r6 r12", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r7 = org apache hadoop mapreduce v2 app job impl task attempt impl r0", "$ r3 = r7 read lock", "$ r3 lock", "label r8 = org apache hadoop mapreduce v2 app job impl task attempt impl r0", "r1 = r8 node rack name", "label r9 = org apache hadoop mapreduce v2 app job impl task attempt impl r0", "$ r4 = r9 read lock", "$ r4 unlock", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r23 = null", "r30 = org apache hadoop mapreduce v2 app m r app master r0", "$ r2 = r30 get config", "r31 = org apache hadoop mapreduce v2 app m r app master r0", "r1 = r31 get file system $ r2", "label r26 = new org apache hadoop mapred job conf", "r32 = org apache hadoop mapreduce v2 app m r app master r0", "$ r4 = r32 get config", "specialinvoke r26 < init > $ r4", "r33 = org apache hadoop mapreduce v2 app m r app master r0", "$ z0 = r33 keep job file r26", "if $ z0 ! = 0 goto label4", "r34 = org apache hadoop mapreduce v2 app m r app master r0", "$ r5 = r34 get config", "r23 = $ r5 get \\ `` mapreduce job dir\\ ``", "if r23 ! = null goto label3", "$ r16 = org apache hadoop mapreduce v2 app m r app master log", "$ r16 warn \\ `` job stag directory be null\\ ``", "label return", "if r23 ! = null goto label3", "label r27 = new org apache hadoop fs path", "specialinvoke r27 < init > r23", "$ r8 = org apache hadoop mapreduce v2 app m r app master log", "r28 = new java lang string builder", "specialinvoke r28 < init >", "$ r9 = r28 append \\ `` delete stag directory \\ ``", "r35 = org apache hadoop mapreduce v2 app m r app master r0", "$ r10 = r35 get config", "$ r11 = org apache hadoop f file system get default uri $ r10", "$ r12 = $ r9 append $ r11", "$ r13 = $ r12 append \\ `` \\ ``", "$ r14 = $ r13 append r23", "$ r15 = $ r14 to string", "$ r8 info $ r15", "r1 delete r27 1", "label goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "label r10 = org apache hadoop mapreduce v2 app webapp app controller r0", "r10 require task", "label goto label4", "label r12 = org apache hadoop mapreduce v2 app webapp app controller r0", "$ r2 = r12 app", "$ r3 = $ r2 get task", "if $ r3 == null goto label5", "$ r5 = newarray java lang object [ 2 ]", "$ r5 [ 0 ] = \\ `` counter for \\ ``", "r13 = org apache hadoop mapreduce v2 app webapp app controller r0", "$ r6 = r13 $ \\ `` task id\\ ``", "$ r5 [ 1 ] = $ r6", "$ r7 = org apache hadoop yarn util string helper join $ r5", "r14 = org apache hadoop mapreduce v2 app webapp app controller r0", "r14 set title $ r7", "label r15 = org apache hadoop mapreduce v2 app webapp app controller r0", "$ r4 = r15 counter page", "r16 = org apache hadoop mapreduce v2 app webapp app controller r0", "r16 render $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "label r16 = org apache hadoop mapreduce v2 app webapp app controller r0", "r16 require job", "label goto label4", "label r18 = org apache hadoop mapreduce v2 app webapp app controller r0", "$ r2 = r18 $ \\ `` counter group\\ ``", "$ r3 = java net u r l decoder decode $ r2 \\ `` utf-8\\ ``", "r19 = org apache hadoop mapreduce v2 app webapp app controller r0", "r19 set \\ `` counter group\\", "r20 = org apache hadoop mapreduce v2 app webapp app controller r0", "$ r4 = r20 $ \\ `` counter name\\ ``", "$ r5 = java net u r l decoder decode $ r4 \\ `` utf-8\\ ``", "r21 = org apache hadoop mapreduce v2 app webapp app controller r0", "r21 set \\ `` counter name\\", "r22 = org apache hadoop mapreduce v2 app webapp app controller r0", "$ r6 = r22 app", "$ r7 = $ r6 get job", "if $ r7 == null goto label5", "$ r9 = newarray java lang object [ 5 ]", "r23 = org apache hadoop mapreduce v2 app webapp app controller r0", "$ r10 = r23 $ \\ `` counter group\\ ``", "$ r9 [ 0 ] = $ r10", "$ r9 [ 1 ] = \\ `` \\ ``", "r24 = org apache hadoop mapreduce v2 app webapp app controller r0", "$ r11 = r24 $ \\ `` counter name\\ ``", "$ r9 [ 2 ] = $ r11", "$ r9 [ 3 ] = \\ `` for \\ ``", "r25 = org apache hadoop mapreduce v2 app webapp app controller r0", "$ r12 = r25 $ \\ `` job id\\ ``", "$ r9 [ 4 ] = $ r12", "$ r13 = org apache hadoop yarn util string helper join $ r9", "r26 = org apache hadoop mapreduce v2 app webapp app controller r0", "r26 set title $ r13", "label r27 = org apache hadoop mapreduce v2 app webapp app controller r0", "$ r8 = r27 single counter page", "r28 = org apache hadoop mapreduce v2 app webapp app controller r0", "r28 render $ r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["$ r0 = org apache hadoop mapreduce v2 jobhistory job history utils job_history_file_filter", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r6 = r0 get \\ `` mapreduce jobhistory done-dir\\ ``", "if r6 ! = null goto label1", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = r0 get \\ `` yarn app mapreduce be staging-dir\\", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append \\ `` history done\\ ``", "r6 = $ r5 to string", "label $ r1 = org apache hadoop mapreduce v2 jobhistory job history utils ensure path in default file system r6 r0", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r0 set \\ `` mapred cache local files\\", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop mapred cluster status r0", "$ i0 = r1 reduce_tasks", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapred cluster status r0", "$ r1 = r2 status", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return 1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 get boolean \\ `` mapreduce output fileoutputformat compress\\", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r7 = org apache hadoop mapred i file output stream r0", "$ z0 = r7 finish", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label r8 = org apache hadoop mapred i file output stream r0", "r8 finish = 1", "r9 = org apache hadoop mapred i file output stream r0", "$ r2 = r9 sum", "r10 = org apache hadoop mapred i file output stream r0", "$ r1 = r10 barray", "$ r2 write value $ r1 0 0", "r11 = org apache hadoop mapred i file output stream r0", "$ r4 = r11 out", "r12 = org apache hadoop mapred i file output stream r0", "$ r5 = r12 barray", "r13 = org apache hadoop mapred i file output stream r0", "$ r3 = r13 sum", "$ i1 = $ r3 get checksum size", "$ r4 write $ r5 0 $ i1", "r14 = org apache hadoop mapred i file output stream r0", "$ r6 = r14 out", "$ r6 flush"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapred invalid input exception r0", "$ r1 = r2 problem", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapred job conf r0", "$ r1 = r2 credential", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop mapred job conf r0", "r2 set \\ `` mapreduce job jar\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop util class util find contain jar r1", "if r2 == null goto label1", "r3 = org apache hadoop mapred job conf r0", "r3 set jar r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r6 = org apache hadoop mapred job conf r0", "r1 = r6 get local dirs", "i1 = 0", "label $ i0 = lengthof r1", "if i1 > = $ i0 goto label2", "$ r2 = org apache hadoop f file system get local r0", "r5 = new org apache hadoop fs path", "$ r4 = r1 [ i1 ]", "specialinvoke r5 < init > $ r4", "$ r2 delete r5 1", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop mapred job conf r0", "r2 set \\ `` mapreduce task file preserve filepattern\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache hadoop mapred job conf r0", "r1 set boolean \\ `` mapred mapper new-api\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop mapred job conf r0", "r2 set \\ `` mapreduce map debug script\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache hadoop mapred job conf log", "$ r1 warn \\ `` get max virtual memory for task be deprecate instead use get memory for map task and get memory for reduce task \\ ``", "r2 = org apache hadoop mapred job conf r0", "$ l1 = r2 get memory for map task", "r3 = org apache hadoop mapred job conf r0", "$ l2 = r3 get memory for reduce task", "$ l3 = java lang math max $ l1 $ l2", "$ l4 = $ l3 * 1024l", "$ l5 = $ l4 * 1024l", "r4 = org apache hadoop mapred job conf r0", "l0 = r4 get long \\ `` mapred task maxvmem\\", "return l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r11 = org apache hadoop conf configuration r1", "$ r3 = org apache hadoop mapreduce job get instance r11", "specialinvoke r0 set job $ r3", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r4 = org apache hadoop mapred join composite input format r0", "r4 set format r1", "r1 set long \\ `` mapred min split size\\", "r5 = org apache hadoop mapred join composite input format r0", "$ r2 = r5 root", "$ r3 = $ r2 get split r1 i0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop mapred join composite input split r0", "$ l0 = r1 totsize", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapred join composite record reader r0", "$ r1 = r2 cmp", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache hadoop mapred join join record reader $ join delegation iterator", "r3 = org apache hadoop mapred join join record reader r0", "specialinvoke r2 < init > r3", "r4 = org apache hadoop mapred join resetable iterator r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = org apache hadoop mapred join wrap record reader r0", "$ r3 = r5 rr", "r6 = org apache hadoop mapred join wrap record reader r0", "$ r2 = r6 khead", "r7 = org apache hadoop mapred join wrap record reader r0", "$ r1 = r7 vhead", "$ z0 = $ r3 next $ r2 $ r1", "if $ z0 ! = 0 goto label1", "$ z2 = 1", "goto label2", "label r8 = org apache hadoop mapred join wrap record reader r0", "r8 empty = $ z2", "r9 = org apache hadoop mapred join wrap record reader r0", "$ z1 = r9 have next", "return $ z1", "if $ z0 ! = 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapred lib combine file record reader r0", "$ l0 = r2 progress", "$ f0 = float $ l0", "r3 = org apache hadoop mapred lib combine file record reader r0", "$ r1 = r3 split", "$ l1 = $ r1 get length", "$ f1 = float $ l1", "$ f2 = $ f0 $ f1", "$ f3 = java lang math min 1 0f $ f2", "return $ f3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "r0 set input format class \\ `` lorg apache hadoop mapred lib db d b input format \\ ``", "$ r7 = new org apache hadoop mapred lib db d b configuration", "specialinvoke $ r7 < init > r0", "$ r7 set input class r1", "$ r7 set input table name r2", "$ r7 set input field name r5", "$ r7 set input condition r3", "$ r7 set input order by r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "r0 set boolean \\ `` mo counters\\", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r7 = org apache hadoop mapred pipe output handler r0", "r7 progress value = f0", "r8 = org apache hadoop mapred pipe output handler r0", "$ r1 = r8 reporter", "$ r1 progress", "r9 = org apache hadoop mapred pipe output handler r0", "$ r2 = r9 record reader", "if $ r2 == null goto label1", "r10 = org apache hadoop mapred pipe output handler r0", "$ r3 = r10 progress key", "$ r3 set f0", "r11 = org apache hadoop mapred pipe output handler r0", "$ r6 = r11 record reader", "r12 = org apache hadoop mapred pipe output handler r0", "$ r5 = r12 progress key", "r13 = org apache hadoop mapred pipe output handler r0", "$ r4 = r13 null value", "$ r6 next $ r5 $ r4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "entermonitor r0", "label r5 = org apache hadoop mapred pipe output handler r0", "r5 do = 1", "r0 notify", "exitmonitor r0", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "r0 set boolean \\ `` mapreduce pipe commandfile preserve\\", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org apache hadoop mapred pipe submitter", "specialinvoke $ r1 < init >", "i0 = $ r1 run r0", "org apache hadoop util exit util terminate i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 ! = null goto label1", "r2 = \\ `` none\\ ``", "goto label2", "label r0 set \\ `` mapreduce job skip outdir\\", "return", "if r1 ! = null goto label1", "label r2 = r1 to string"], "adj": [[1], [2], [3], [4], [], [6], [], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ l0 = r0 get long \\ `` mapreduce reduce skip maxgroups\\", "return $ l0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org apache hadoop mapred task r0", "$ r1 = r3 task status", "$ r2 = $ r1 get phase", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r7 = org apache hadoop mapred task log", "$ r7 fatal r3", "$ r8 = org apache hadoop util shutdown hook manager get", "$ z0 = $ r8 be shutdown in progress", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label r4 = r2 get cause", "if r4 ! = null goto label2", "$ r12 = org apache hadoop util string utils stringify exception r2", "goto label3", "label r13 = org apache hadoop mapred task r0", "$ r9 = r13 umbilical", "$ r9 fatal error r1 $ r12", "label goto label6", "label return", "if r4 ! = null goto label2", "label $ r12 = org apache hadoop util string utils stringify exception r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "$ r1 = specialinvoke r0 get task attempt i d", "$ r2 = org apache hadoop mapred task attempt i d $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "specialinvoke r0 set finish time l0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 0l"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop mapred task status r0", "r2 counter = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop mapreduce id r0", "$ i0 = r1 id", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org apache hadoop mapreduce job $ job state define", "r3 = org apache hadoop mapreduce job r0", "specialinvoke r3 ensure state $ r1", "r4 = org apache hadoop mapreduce job r0", "$ r2 = r4 conf", "$ r2 set boolean \\ `` mapreduce job complete cancel delegation tokens\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get \\ `` mapreduce client output filter\\", "$ r2 = org apache hadoop mapreduce job $ task status filter value of $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapreduce jobhistory job inited event r0", "$ r1 = r2 datum", "$ i0 = $ r1 total map", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org apache hadoop mapreduce jobhistory job unsuccessful completion event r0", "$ r2 = r4 datum", "r1 = $ r2 get diagnostics", "if r1 ! = null goto label1", "$ r3 = \\ `` \\ ``", "goto label2", "label return $ r3", "if r1 ! = null goto label1", "label $ r3 = r1 to string"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r3 = org apache hadoop mapreduce jobhistory map attempt finish event r0", "$ r1 = r3 task status", "$ r2 = $ r1 to string", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache hadoop mapreduce jobhistory event type task_finished", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop mapreduce job status r0", "r1 be retire = 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapreduce lib input combine file split r0", "$ r1 = r2 lengths", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "$ r1 = r0 get configuration", "$ r1 set long \\ `` mapreduce input fileinputformat split minsize\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache hadoop mapreduce job context r1", "$ i0 = org apache hadoop mapreduce lib output file output committer get app attempt id r3", "r4 = org apache hadoop mapreduce lib output file output committer r0", "$ r2 = r4 get commit task path $ i0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com google common base charsets utf_8", "$ r3 = r0 get bytes $ r2", "$ r4 = org apache hadoop mapreduce security secure shuffle utils generate hash $ r3 r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get path", "$ r2 = r0 get query", "$ i0 = r0 get port", "$ r3 = org apache hadoop mapreduce security secure shuffle utils build msg from $ r1 $ r2 $ i0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapreduce security token job token identifier r0", "$ r1 = r2 jobid", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = r1 get bytes", "r5 = org apache hadoop mapreduce security token job token secret manager r0", "$ r4 = r5 master key", "r2 = org apache hadoop mapreduce security token job token secret manager create password $ r3 $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapreduce task job context impl r0", "$ r1 = r2 conf", "$ i0 = $ r1 get max reduce attempt", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapreduce task attempt i d r0", "$ r1 = r2 task id", "$ z0 = $ r1 be map", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache hadoop mapreduce task attempt i d r0", "$ r1 = r3 task id", "$ r2 = $ r1 get task type", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache hadoop mapreduce task attempt i d r0", "$ r2 = r6 task id", "$ r3 = $ r2 append to r1", "$ r4 = $ r3 append 95", "r7 = org apache hadoop mapreduce task attempt i d r0", "$ i0 = r7 id", "$ r5 = $ r4 append $ i0", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapreduce task report r0", "$ r1 = r2 state", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop mapreduce task report r0", "$ l0 = r1 finish time", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "z0 = @ parameter2", "org apache hadoop mapreduce util process tree terminate process group r0", "org apache hadoop mapreduce util process tree sig kill r0 1 l0 z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "org apache hadoop mapreduce util process tree maybe signal process r0 15 \\ `` sigterm\\", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop yarn api record timeline timeline domain r0", "r2 id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop yarn api record timeline timeline entity r0", "r2 entity = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop yarn api record timeline timeline entity r0", "r2 domain id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop yarn server api auxiliary service r0", "$ r1 = r2 recovery path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop yarn server api auxiliary service r0", "r2 recovery path = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = org apache hadoop yarn client api a m r m client r0", "r2 wait for r1 i0 1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache hadoop yarn client api async impl a m r m client async impl r0", "$ r2 = r3 client", "$ r2 remove container request r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r2 = new org apache hadoop yarn client api impl yarn client impl", "specialinvoke r2 < init >", "r3 = org apache hadoop yarn client api yarn client r2", "return r3"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r4 = new org apache hadoop fs path", "$ r5 = org apache hadoop yarn logaggregation log aggregation utils get remote log suffix dir r0 r2 r3", "$ r6 = r1 to string", "specialinvoke $ r4 < init > $ r5 $ r6", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache hadoop yarn util string helper dot_joiner", "$ r2 = $ r1 join r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache hadoop yarn webapp util web app utils load ssl configuration r0 null", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = org hdr histogram abstract histogram r0", "$ l0 = r1 low discernible value", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org hdr histogram abstract histogram r0", "$ l0 = r1 high trackable value", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org hdr histogram abstract histogram r0", "$ l1 = r1 next non equivalent value l0", "$ l2 = $ l1 - 1l", "return $ l2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org hdr histogram abstract histogram r0", "$ l0 = r1 max value", "$ b1 = $ l0 cmp 0l", "if $ b1 ! = 0 goto label1", "$ l3 = 0l", "goto label2", "label return $ l3", "if $ b1 ! = 0 goto label1", "label r2 = org hdr histogram abstract histogram r0", "$ l2 = r2 max value", "r3 = org hdr histogram abstract histogram r0", "$ l3 = r3 high equivalent value $ l2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org hdr histogram abstract histogram r0", "$ l2 = r1 get total count", "$ b3 = $ l2 cmp 0l", "if $ b3 ! = 0 goto label1", "return 100 0", "if $ b3 ! = 0 goto label1", "label r2 = org hdr histogram abstract histogram r0", "$ i4 = r2 count array index l0", "r3 = org hdr histogram abstract histogram r0", "$ i5 = r3 count array length", "$ i6 = $ i5 - 1", "i1 = java lang math min $ i4 $ i6", "l9 = 0l", "i10 = 0", "label if i10 > i1 goto label3", "r4 = org hdr histogram abstract histogram r0", "$ l8 = r4 get count at index i10", "l9 = l9 + $ l8", "i10 = i10 + 1", "goto label2", "label if i10 > i1 goto label3", "label $ d0 = double l9", "$ d1 = 100 0 * $ d0", "r5 = org hdr histogram abstract histogram r0", "$ l7 = r5 get total count", "$ d2 = double $ l7", "$ d3 = $ d1 $ d2", "return $ d3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "l1 = @ parameter1", "r1 = org hdr histogram abstract histogram r0", "$ i4 = r1 count array index l0", "i2 = java lang math max 0 $ i4", "r2 = org hdr histogram abstract histogram r0", "$ i5 = r2 count array index l1", "r3 = org hdr histogram abstract histogram r0", "$ i6 = r3 count array length", "$ i7 = $ i6 - 1", "i3 = java lang math min $ i5 $ i7", "l9 = 0l", "i10 = i2", "label if i10 > i3 goto label2", "r4 = org hdr histogram abstract histogram r0", "$ l8 = r4 get count at index i10", "l9 = l9 + $ l8", "i10 = i10 + 1", "goto label1", "label if i10 > i3 goto label2", "label return l9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org hdr histogram abstract histogram r0", "$ i2 = r1 count array index l0", "$ i3 = java lang math max 0 $ i2", "r2 = org hdr histogram abstract histogram r0", "$ i4 = r2 count array length", "$ i5 = $ i4 - 1", "i1 = java lang math min $ i3 $ i5", "r3 = org hdr histogram abstract histogram r0", "$ l6 = r3 get count at index i1", "return $ l6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r3 = new org hdr histogram double histogram", "r4 = org hdr histogram double histogram r0", "$ l0 = r4 configure high to lowest value ratio", "r5 = org hdr histogram double histogram r0", "$ i1 = r5 get number of significant value digits", "specialinvoke r3 < init > $ l0 $ i1", "r6 = org hdr histogram double histogram r0", "$ d2 = r6 current low value in auto range", "r7 = org hdr histogram double histogram r0", "$ d1 = r7 current high value limit in auto range", "specialinvoke r3 set trackable value range $ d2 $ d1", "r8 = org hdr histogram double histogram r0", "r3 add while correct for coordinate omission r8 d0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r7 = org hdr histogram packedarray pack array recorder r0", "$ r2 = r7 record phaser", "l1 = $ r2 writer critical section enter", "label r8 = org hdr histogram packedarray pack array recorder r0", "$ r3 = r8 active array", "$ r3 increment i0", "label r9 = org hdr histogram packedarray pack array recorder r0", "$ r4 = r9 record phaser", "$ r4 writer critical section exit l1", "goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ b1 = l0 cmp 0l", "if $ b1 > = 0 goto label1", "$ r1 = org hdr histogram writer reader phaser odd end epoch updater", "goto label2", "label $ r1 get and increment r0", "return", "if $ b1 > = 0 goto label1", "label $ r1 = org hdr histogram writer reader phaser even end epoch updater"], "adj": [[1], [2], [3], [4], [5], [], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org hibernate boot model name identifier r0", "$ z0 = r1 be quote", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org hibernate criterion logical expression", "specialinvoke $ r2 < init > r0 r1 \\ `` or\\ ``", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org hibernate engine jdbc blob proxy get proxy class loader", "$ r3 = org hibernate engine jdbc blob proxy proxy_interfaces", "r6 = new org hibernate engine jdbc blob proxy", "specialinvoke r6 < init > r0", "r7 = java lang reflect invocation handler r6", "$ r4 = java lang reflect proxy new proxy instance $ r1 $ r3 r7", "$ r5 = java sql blob $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org hibernate engine spi batch fetch queue r0", "$ r3 = r5 subselects by entity key", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate id enhance sequence style generator r0", "$ r1 = r2 database structure", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org hibernate internal session impl r0", "$ z1 = r2 be transaction in progress", "if $ z1 ! = 0 goto label1", "r3 = org hibernate internal session impl r0", "$ r1 = r3 get jdbc coordinator", "$ r1 after transaction", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["$ r0 = org hibernate version version", "if $ r0 ! = null goto label1", "$ r1 = class \\ `` lorg hibernate version \\ ``", "$ r2 = $ r1 get package", "$ r3 = $ r2 get implementation version", "org hibernate version version = $ r3", "$ r4 = org hibernate version version", "if $ r4 ! = null goto label1", "org hibernate version version = \\ `` [ work ] \\ ``", "label $ r5 = org hibernate version version", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = jakarta persistence fetch type value of r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = jakarta persistence generation type value of r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb association override r0", "r2 join table = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb attribute r0", "r2 embed id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org hibernate boot jaxb map spi jaxb attribute r0", "$ r1 = r5 _transient", "if $ r1 ! = null goto label1", "r4 = new java util array list", "specialinvoke r4 < init >", "r6 = org hibernate boot jaxb map spi jaxb attribute r0", "r6 _transient = r4", "label r7 = org hibernate boot jaxb map spi jaxb attribute r0", "$ r2 = r7 _transient", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb basic r0", "r2 enumerate = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb map spi jaxb cascade type r0", "$ r1 = r2 cascade all", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb cascade type r0", "r2 cascade all = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb map spi jaxb cascade type r0", "$ r1 = r2 cascade remove", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb map spi jaxb convert r0", "$ r1 = r2 disable conversion", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb discriminator column r0", "r2 discriminator type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org hibernate boot jaxb map spi jaxb element collection r0", "$ r1 = r5 map key convert", "if $ r1 ! = null goto label1", "r4 = new java util array list", "specialinvoke r4 < init >", "r6 = org hibernate boot jaxb map spi jaxb element collection r0", "r6 map key convert = r4", "label r7 = org hibernate boot jaxb map spi jaxb element collection r0", "$ r2 = r7 map key convert", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb entity r0", "r2 table generator = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb entity r0", "r2 post persist = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb map spi jaxb entity r0", "$ r1 = r2 post update", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org hibernate boot jaxb map spi jaxb entity r0", "$ r1 = r5 name entity graph", "if $ r1 ! = null goto label1", "r4 = new java util array list", "specialinvoke r4 < init >", "r6 = org hibernate boot jaxb map spi jaxb entity r0", "r6 name entity graph = r4", "label r7 = org hibernate boot jaxb map spi jaxb entity r0", "$ r2 = r7 name entity graph", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r5 = org hibernate boot jaxb map spi jaxb entity result r0", "$ r1 = r5 field result", "if $ r1 ! = null goto label1", "r4 = new java util array list", "specialinvoke r4 < init >", "r6 = org hibernate boot jaxb map spi jaxb entity result r0", "r6 field result = r4", "label r7 = org hibernate boot jaxb map spi jaxb entity result r0", "$ r2 = r7 field result", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb map spi jaxb foreign key r0", "$ r1 = r2 constraint mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb map spi jaxb many to one r0", "$ r1 = r2 map id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb name entity graph r0", "r2 include all attribute = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb name native query r0", "r2 result set mapping = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org hibernate boot jaxb map spi jaxb sql result set mapping r0", "$ r1 = r5 constructor result", "if $ r1 ! = null goto label1", "r4 = new java util array list", "specialinvoke r4 < init >", "r6 = org hibernate boot jaxb map spi jaxb sql result set mapping r0", "r6 constructor result = r4", "label r7 = org hibernate boot jaxb map spi jaxb sql result set mapping r0", "$ r2 = r7 constructor result", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get database name", "r3 = org hibernate dialect database r0", "$ z0 = r3 product name match $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 to lower case", "r4 = org hibernate dialect database r0", "$ r3 = r4 get url prefix", "$ z0 = $ r2 start with $ r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get sqm function registry", "$ r2 = $ r1 name aggregate descriptor builder \\ `` stddev\\ ``", "$ r3 = r0 get type configuration", "$ r4 = $ r3 get basic type registry", "$ r5 = org hibernate type standard basic type double", "$ r6 = $ r4 resolve $ r5", "$ r7 = $ r2 set invariant type $ r6", "$ r8 = $ r7 set exact argument count 1", "$ r8 register", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get sqm function registry", "$ r2 = $ r1 name descriptor builder \\ `` format\\", "$ r3 = r0 get type configuration", "$ r4 = $ r3 get basic type registry", "$ r5 = org hibernate type standard basic type string", "$ r6 = $ r4 resolve $ r5", "$ r7 = $ r2 set invariant type $ r6", "$ r8 = $ r7 set exact argument count 2", "$ r9 = $ r8 set argument list signature \\ `` datetime a pattern \\ ``", "$ r9 register", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = org hibernate dialect pagination abstract limit handler select_pattern", "r2 = $ r3 matcher r1", "$ z0 = r2 find", "if $ z0 == 0 goto label1", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init > r1", "$ i0 = r2 end", "$ r5 = $ r4 insert $ i0 r0", "$ r6 = $ r5 to string", "return $ r6", "if $ z0 == 0 goto label1", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "l1 = @ parameter1", "r1 = @ parameter2", "r9 = org hibernate dialect type name r0", "$ r2 = r9 weight", "$ r3 = java lang integer value of i0", "$ r4 = type names $ lambda_put_0__1 bootstrap $", "$ r5 = $ r2 compute if absent $ r3 $ r4", "$ r6 = java util map $ r5", "$ r7 = java lang long value of l1", "$ r6 put $ r7 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = new org hibernate query sqm produce function pattern function descriptor builder", "$ r4 = org hibernate query sqm function function kind normal", "r6 = org hibernate query sqm function sqm function registry r0", "specialinvoke r5 < init > r6 r1 $ r4 r2", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org hibernate query sqm function sqm function registry r0", "$ r2 = r4 name descriptor builder r1", "$ r3 = $ r2 register", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate query sqm tree expression sqm binary arithmetic r0", "$ r1 = r2 rh operand", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java lang unsupported operation exception", "specialinvoke $ r2 < init > \\ `` direct semantic query walker visitation of a sqm jpa criterion parameter wrapper be not support visitation for a criterion parameter should be handle during ` semantic query walker #visit jpa criterion parameter ` this wrapper be intend only for represent unique sqm parameter node for each criterion parameter in the sqm tree a part of the query parameter - > sqm parameter - > jdbc parameter transformation each occurrence require a unique sqm parameter to make sure weultimately get the complete set of jdbc parameter references\\ ``", "throw $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org hibernate sql ast tree select query part r0", "$ z0 = r1 be root", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r3 = org hibernate type basic type registry r0", "$ r2 = r3 resolve r1 i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label $ i0 = r1 ordinal", "$ b1 = byte $ i0", "$ r2 = java lang byte value of $ b1", "return $ r2"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org hibernate validator internal cfg context cascadable constraint map context impl base r0", "$ r3 = r5 group conversion", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java util collection r1", "r4 = org hibernate validator internal constraintvalidators bv size size validator for collection r0", "$ z0 = r4 be valid $ r3 r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new org hibernate validator internal engine messageinterpolation parser token", "specialinvoke r6 < init > r1", "r6 terminate", "r7 = org hibernate validator internal engine messageinterpolation parser token iterator r0", "$ r4 = r7 token list", "r8 = org hibernate validator internal engine messageinterpolation parser token iterator r0", "$ i0 = r8 current position", "$ i1 = $ i0 - 1", "$ r4 set $ i1 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org hibernate validator internal metadata raw constrain executable r0", "$ z0 = r1 have parameter constraint", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "i6 = 0", "z0 = 1", "$ i2 = r0 size", "i7 = $ i2 - 1", "label if i7 < 0 goto label6", "$ r1 = r0 get i7", "$ r2 = java lang integer $ r1", "i8 = $ r2 int value", "if z0 == 0 goto label2", "i9 = i8 * i0", "goto label3", "label i6 = i6 + i9", "if z0 ! = 0 goto label4", "$ z1 = 1", "goto label5", "label z0 = $ z1", "i7 = i7 + -1", "goto label1", "if z0 ! = 0 goto label4", "label $ z1 = 0", "if z0 == 0 goto label2", "label i9 = i8 * i1", "label if i7 < 0 goto label6", "label $ i3 = i6 % 10", "$ i4 = 10 - $ i3", "$ i5 = $ i4 % 10", "return $ i5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 be primitive", "if $ z0 == 0 goto label1", "$ r1 = org hibernate validator internal util reflection helper internal boxed type r0", "return $ r1", "if $ z0 == 0 goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ r1 = r0 trim", "$ z0 = $ r1 be empty", "if $ z0 == 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r1 set state 0", "r9 = com zaxxer hikari util concurrent bag r0", "$ r3 = r9 thread list", "$ r4 = $ r3 get", "r2 = java util list $ r4", "if r2 == null goto label3", "r10 = com zaxxer hikari util concurrent bag r0", "$ z0 = r10 weak thread local", "if $ z0 == 0 goto label1", "r8 = new java lang ref weak reference", "$ r6 = r8", "specialinvoke r8 < init > r1", "goto label2", "label r2 add $ r6", "label r11 = com zaxxer hikari util concurrent bag r0", "$ r7 = r11 synchronizer", "$ r7 signal", "return", "if $ z0 == 0 goto label1", "label $ r6 = r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 compare and set 0 -2", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com zaxxer hikari hikari config r0", "$ r1 = r2 schema", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com zaxxer hikari hikari config r0", "r2 check if seal", "r3 = com zaxxer hikari hikari config r0", "r3 schema = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "r3 = com carrotsearch hppc byte array deque r0", "i1 = r3 tail", "r4 = com carrotsearch hppc byte array deque r0", "$ r1 = r4 buffer", "i2 = lengthof $ r1", "r5 = com carrotsearch hppc byte array deque r0", "i4 = r5 head", "label if i4 == i1 goto label3", "r6 = com carrotsearch hppc byte array deque r0", "$ r2 = r6 buffer", "$ b3 = $ r2 [ i4 ]", "if $ b3 ! = b0 goto label2", "return i4", "if $ b3 ! = b0 goto label2", "label i4 = com carrotsearch hppc byte array deque one right i4 i2", "goto label1", "label if i4 == i1 goto label3", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "r3 = com carrotsearch hppc byte array deque r0", "$ r1 = r3 buffer", "i1 = lengthof $ r1", "r4 = com carrotsearch hppc byte array deque r0", "$ i3 = r4 head", "i2 = com carrotsearch hppc byte array deque one leave $ i3 i1", "r5 = com carrotsearch hppc byte array deque r0", "$ i4 = r5 tail", "i6 = com carrotsearch hppc byte array deque one leave $ i4 i1", "label if i6 == i2 goto label3", "r6 = com carrotsearch hppc byte array deque r0", "$ r2 = r6 buffer", "$ b5 = $ r2 [ i6 ]", "if $ b5 ! = b0 goto label2", "return i6", "if $ b5 ! = b0 goto label2", "label i6 = com carrotsearch hppc byte array deque one leave i6 i1", "goto label1", "label if i6 == i2 goto label3", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r2 = new com carrotsearch hppc byte array deque $ value iterator", "r3 = com carrotsearch hppc byte array deque r0", "specialinvoke r2 < init > r3", "r4 = java util iterator r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = new com carrotsearch hppc byte array deque $ descend value iterator", "r3 = com carrotsearch hppc byte array deque r0", "specialinvoke r2 < init > r3", "r4 = java util iterator r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ z0 = com carrotsearch hppc byte array list $ assertion disable", "if $ z0 ! = 0 goto label1", "if i1 > = 0 goto label1", "r5 = new java lang assertion error", "specialinvoke r5 < init > \\ `` length must be > = 0\\ ``", "throw r5", "if i1 > = 0 goto label1", "label r6 = com carrotsearch hppc byte array list r0", "r6 ensure buffer space i1", "r7 = com carrotsearch hppc byte array list r0", "$ r2 = r7 buffer", "r8 = com carrotsearch hppc byte array list r0", "$ i2 = r8 element count", "java lang system arraycopy r1 i0 $ r2 $ i2 i1", "r9 = com carrotsearch hppc byte array list r0", "$ i3 = r9 element count", "$ i4 = $ i3 + i1", "r10 = com carrotsearch hppc byte array list r0", "r10 element count = $ i4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "r2 = com carrotsearch hppc byte array list r0", "r2 ensure buffer space 1", "r3 = com carrotsearch hppc byte array list r0", "$ r1 = r3 buffer", "r4 = com carrotsearch hppc byte array list r0", "$ i1 = r4 element count", "$ i2 = $ i1 + 1", "r5 = com carrotsearch hppc byte array list r0", "r5 element count = $ i2", "$ r1 [ $ i1 ] = b0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "$ r1 = com carrotsearch hppc byte array list empty_array", "r2 = com carrotsearch hppc byte array list r0", "r2 buffer = $ r1", "r3 = com carrotsearch hppc byte array list r0", "r3 element count = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i1 = r1 size", "r5 = com carrotsearch hppc char byte hash map r0", "$ i2 = r5 size", "if $ i1 == $ i2 goto label1", "return 0", "if $ i1 == $ i2 goto label1", "label r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label5", "$ r4 = r2 next", "r3 = com carrotsearch hppc cursor char byte cursor $ r4", "c0 = r3 key", "r6 = com carrotsearch hppc char byte hash map r0", "$ z1 = r6 contain key c0", "if $ z1 == 0 goto label3", "r7 = com carrotsearch hppc char byte hash map r0", "$ b3 = r7 get c0", "$ b4 = r3 value", "if $ b3 == $ b4 goto label4", "label return 0", "if $ b3 == $ b4 goto label4", "label goto label2", "if $ z0 == 0 goto label5", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "c1 = @ parameter1", "$ z0 = com carrotsearch hppc char hash set $ assertion disable", "if $ z0 ! = 0 goto label1", "if i0 > = 0 goto label1", "r7 = new java lang assertion error", "specialinvoke r7 < init > \\ `` the index must point at an exist key \\ ``", "throw r7", "if i0 > = 0 goto label1", "label $ z1 = com carrotsearch hppc char hash set $ assertion disable", "if $ z1 ! = 0 goto label3", "r10 = com carrotsearch hppc char hash set r0", "$ i4 = r10 mask", "if i0 < = $ i4 goto label3", "r11 = com carrotsearch hppc char hash set r0", "$ i5 = r11 mask", "$ i6 = $ i5 + 1", "if i0 ! = $ i6 goto label2", "r12 = com carrotsearch hppc char hash set r0", "$ z2 = r12 have empty key", "if $ z2 ! = 0 goto label3", "label r8 = new java lang assertion error", "specialinvoke r8 < init >", "throw r8", "if $ z2 ! = 0 goto label3", "label $ z3 = com carrotsearch hppc char hash set $ assertion disable", "if $ z3 ! = 0 goto label4", "r13 = com carrotsearch hppc char hash set r0", "$ r3 = r13 key", "$ c3 = $ r3 [ i0 ]", "if c1 == $ c3 goto label4", "r9 = new java lang assertion error", "specialinvoke r9 < init >", "throw r9", "if c1 == $ c3 goto label4", "label r14 = com carrotsearch hppc char hash set r0", "$ r1 = r14 key", "c2 = $ r1 [ i0 ]", "r15 = com carrotsearch hppc char hash set r0", "$ r2 = r15 key", "$ r2 [ i0 ] = c1", "return c2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r2 = com carrotsearch hppc double stack r0", "r2 ensure buffer space 1", "r3 = com carrotsearch hppc double stack r0", "$ r1 = r3 buffer", "r4 = com carrotsearch hppc double stack r0", "$ i0 = r4 element count", "$ i1 = $ i0 + 1", "r5 = com carrotsearch hppc double stack r0", "r5 element count = $ i1", "$ r1 [ $ i0 ] = d0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "d3 = @ parameter3", "r5 = com carrotsearch hppc double stack r0", "r5 ensure buffer space 4", "r6 = com carrotsearch hppc double stack r0", "$ r1 = r6 buffer", "r7 = com carrotsearch hppc double stack r0", "$ i0 = r7 element count", "$ i1 = $ i0 + 1", "r8 = com carrotsearch hppc double stack r0", "r8 element count = $ i1", "$ r1 [ $ i0 ] = d0", "r9 = com carrotsearch hppc double stack r0", "$ r2 = r9 buffer", "r10 = com carrotsearch hppc double stack r0", "$ i2 = r10 element count", "$ i3 = $ i2 + 1", "r11 = com carrotsearch hppc double stack r0", "r11 element count = $ i3", "$ r2 [ $ i2 ] = d1", "r12 = com carrotsearch hppc double stack r0", "$ r3 = r12 buffer", "r13 = com carrotsearch hppc double stack r0", "$ i4 = r13 element count", "$ i5 = $ i4 + 1", "r14 = com carrotsearch hppc double stack r0", "r14 element count = $ i5", "$ r3 [ $ i4 ] = d2", "r15 = com carrotsearch hppc double stack r0", "$ r4 = r15 buffer", "r16 = com carrotsearch hppc double stack r0", "$ i6 = r16 element count", "$ i7 = $ i6 + 1", "r17 = com carrotsearch hppc double stack r0", "r17 element count = $ i7", "$ r4 [ $ i6 ] = d3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "f1 = @ parameter1", "r3 = com carrotsearch hppc float stack r0", "r3 ensure buffer space 2", "r4 = com carrotsearch hppc float stack r0", "$ r1 = r4 buffer", "r5 = com carrotsearch hppc float stack r0", "$ i0 = r5 element count", "$ i1 = $ i0 + 1", "r6 = com carrotsearch hppc float stack r0", "r6 element count = $ i1", "$ r1 [ $ i0 ] = f0", "r7 = com carrotsearch hppc float stack r0", "$ r2 = r7 buffer", "r8 = com carrotsearch hppc float stack r0", "$ i2 = r8 element count", "$ i3 = $ i2 + 1", "r9 = com carrotsearch hppc float stack r0", "r9 element count = $ i3", "$ r2 [ $ i2 ] = f1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = nu validator htmlparser dom html document builder r0", "$ r4 = r9 tree builder", "$ r5 = r2 intern", "$ r6 = r3 intern", "$ r4 set fragment context $ r5 $ r6 null 0", "r10 = nu validator htmlparser dom html document builder r0", "specialinvoke r10 tokenize r1", "r11 = nu validator htmlparser dom html document builder r0", "$ r7 = r11 tree builder", "$ r8 = $ r7 get document fragment", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = nu validator htmlparser dom html document builder r0", "$ z0 = r1 check normalization", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = nu validator htmlparser dom html document builder r0", "$ r1 = r2 content non xml char policy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = nu validator htmlparser dom html document builder r0", "$ r1 = r2 content space policy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = nu validator htmlparser impl push location r0", "$ z0 = r1 next char on new line", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = nu validator htmlparser impl push location r0", "$ r1 = r2 public id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = nu validator htmlparser impl u t f16 buffer r0", "$ i1 = r1 start", "r2 = nu validator htmlparser impl u t f16 buffer r0", "$ i0 = r2 end", "if $ i1 > = $ i0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 > = $ i0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label2", "r12 = nu validator htmlparser io driver r0", "$ z4 = r12 be check normalization", "if $ z4 == 0 goto label1", "return", "if $ z4 == 0 goto label1", "label r11 = new nu validator htmlparser extra normalization checker", "r13 = nu validator htmlparser io driver r0", "$ r6 = r13 tokenizer", "r14 = org xml sax locator $ r6", "specialinvoke r11 < init > r14", "r15 = nu validator htmlparser io driver r0", "$ r7 = r15 tokenizer", "$ r8 = $ r7 get error handler", "r11 set error handler $ r8", "goto label7", "label return", "if z0 == 0 goto label2", "label r16 = nu validator htmlparser io driver r0", "$ z2 = r16 be check normalization", "if $ z2 == 0 goto label6", "r17 = nu validator htmlparser io driver r0", "$ r2 = r17 character handler", "$ i0 = lengthof $ r2", "$ i1 = $ i0 - 1", "r10 = newarray nu validator htmlparser common character handler [ $ i1 ]", "i3 = 0", "i4 = 0", "label r18 = nu validator htmlparser io driver r0", "$ r3 = r18 character handler", "$ i2 = lengthof $ r3", "if i4 > = $ i2 goto label5", "r19 = nu validator htmlparser io driver r0", "$ r4 = r19 character handler", "r1 = $ r4 [ i4 ]", "$ z3 = r1 instanceof nu validator htmlparser extra normalization checker", "if $ z3 ! = 0 goto label4", "r10 [ i3 ] = r1", "i3 = i3 + 1", "label i4 = i4 + 1", "goto label3", "if i4 > = $ i2 goto label5", "label r20 = nu validator htmlparser io driver r0", "r20 character handler = r10", "if $ z2 == 0 goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [46], [47], []]}
{"nodes": ["r0 = @ this", "r2 = nu validator saxtree element r0", "$ r1 = r2 uri", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org apache htrace trace be trace", "if $ z0 == 0 goto label1", "r3 = new org apache htrace wrapper trace runnable", "$ r2 = org apache htrace trace current span", "specialinvoke r3 < init > $ r2 r0", "r4 = java lang runnable r3", "return r4", "if $ z0 == 0 goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r18 = org apache htrace trace scope r0", "r18 detach = 1", "$ r2 = org apache htrace tracer get instance", "r1 = $ r2 current span", "r19 = org apache htrace trace scope r0", "$ r3 = r19 span", "if r1 == $ r3 goto label1", "$ r9 = org apache htrace tracer log", "r17 = new java lang string builder", "specialinvoke r17 < init >", "$ r10 = r17 append \\ `` close trace span \\ ``", "r20 = org apache htrace trace scope r0", "$ r11 = r20 span", "$ r12 = $ r10 append $ r11", "$ r13 = $ r12 append \\ `` but \\ ``", "$ r14 = $ r13 append r1", "$ r15 = $ r14 append \\ `` be top-of-stack\\ ``", "$ r16 = $ r15 to string", "$ r9 debug $ r16", "goto label2", "label r22 = org apache htrace trace scope r0", "$ r7 = r22 span", "return $ r7", "if r1 == $ r3 goto label1", "label $ r4 = org apache htrace tracer get instance", "r21 = org apache htrace trace scope r0", "$ r5 = r21 save span", "$ r4 set current span $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "i5 = 0", "i6 = 0", "label r15 = fr bmartel protocol http utils list of byte r0", "$ r1 = r15 classic list", "$ i0 = $ r1 size", "if i6 > = $ i0 goto label2", "r16 = fr bmartel protocol http utils list of byte r0", "$ r11 = r16 classic list", "$ r12 = $ r11 get i6", "$ r13 = byte [ ] $ r12", "$ i4 = lengthof $ r13", "i5 = i5 + $ i4", "i6 = i6 + 1", "goto label1", "if i6 > = $ i0 goto label2", "label r14 = newarray byte [ i5 ]", "i7 = 0", "i8 = 0", "label r17 = fr bmartel protocol http utils list of byte r0", "$ r2 = r17 classic list", "$ i1 = $ r2 size", "if i8 > = $ i1 goto label4", "r18 = fr bmartel protocol http utils list of byte r0", "$ r3 = r18 classic list", "$ r4 = $ r3 get i8", "r19 = fr bmartel protocol http utils list of byte r0", "$ r5 = r19 classic list", "$ r6 = $ r5 get i8", "$ r7 = byte [ ] $ r6", "$ i2 = lengthof $ r7", "java lang system arraycopy $ r4 0 r14 i7 $ i2", "r20 = fr bmartel protocol http utils list of byte r0", "$ r8 = r20 classic list", "$ r9 = $ r8 get i8", "$ r10 = byte [ ] $ r9", "$ i3 = lengthof $ r10", "i7 = i7 + $ i3", "i8 = i8 + 1", "goto label3", "if i8 > = $ i1 goto label4", "label return r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], []]}
{"nodes": ["r0 = @ this", "r2 = org apache http client cache http cache entry r0", "$ r1 = r2 request date", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache http impl client cache basic http cache storage r0", "$ r3 = r5 entry", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache http impl client cache cache config r0", "r1 heuristic caching enable = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache http impl client cache cache config r0", "r1 be share cache = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r23 = org apache http impl client cache cache invalidator r0", "$ r5 = r23 cache key generator", "r3 = $ r5 get u r i r1 r2", "r24 = org apache http impl client cache cache invalidator r0", "r4 = specialinvoke r24 get entry r3", "r25 = org apache http impl client cache cache invalidator r0", "$ z0 = r25 request should not be cache r2", "if $ z0 ! = 0 goto label1", "r26 = org apache http impl client cache cache invalidator r0", "$ z4 = specialinvoke r26 should invalidate head cache entry r2 r4", "if $ z4 == 0 goto label7", "label r27 = org apache http impl client cache cache invalidator r0", "$ r7 = r27 log", "r22 = new java lang string builder", "specialinvoke r22 < init >", "$ r8 = r22 append \\ `` invalidating parent cache entry \\ ``", "$ r9 = $ r8 append r4", "$ r10 = $ r9 to string", "$ r7 debug $ r10", "if r4 == null goto label4", "$ r13 = r4 get variant map", "$ r14 = $ r13 value", "r16 = $ r14 iterator", "label $ z3 = r16 have next", "if $ z3 == 0 goto label3", "$ r15 = r16 next", "r17 = java lang string $ r15", "r28 = org apache http impl client cache cache invalidator r0", "specialinvoke r28 flush entry r17", "goto label2", "if $ z3 == 0 goto label3", "label r29 = org apache http impl client cache cache invalidator r0", "specialinvoke r29 flush entry r3", "label r30 = org apache http impl client cache cache invalidator r0", "r18 = specialinvoke r30 get absolute u r l r3", "if r18 ! = null goto label5", "r31 = org apache http impl client cache cache invalidator r0", "$ r12 = r31 log", "$ r12 error \\ `` couldn\\'t transform request into valid url\\ ``", "return", "if r18 ! = null goto label5", "label r19 = r2 get first header \\ `` content- location\\ ``", "if r19 == null goto label6", "r20 = r19 get value", "r32 = org apache http impl client cache cache invalidator r0", "$ z2 = r32 flush absolute uri from same host r18 r20", "if $ z2 ! = 0 goto label6", "r33 = org apache http impl client cache cache invalidator r0", "r33 flush relative uri from same host r18 r20", "label r21 = r2 get first header \\ `` location\\ ``", "if r21 == null goto label7", "$ r11 = r21 get value", "r34 = org apache http impl client cache cache invalidator r0", "r34 flush absolute uri from same host r18 $ r11", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], []]}
{"nodes": ["r0 = @ this", "r2 = org apache http impl client cache cache exec r0", "$ r1 = r2 cache miss", "$ l0 = $ r1 get", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = r1 get original", "r3 = org apache http client method http request wrapper wrap $ r4", "$ r5 = r1 get all header", "r3 set header $ r5", "r3 add header \\ `` cache- control\\", "r3 add header \\ `` pragma\\", "r3 remove header \\ `` if- range\\ ``", "r3 remove header \\ `` if- match\\ ``", "r3 remove header \\ `` if- none- match\\ ``", "r3 remove header \\ `` if- unmodified- since\\ ``", "r3 remove header \\ `` if- modified- since\\ ``", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = com netflix hystrix abstract command r0", "$ r1 = specialinvoke r2 get command result", "$ z0 = $ r1 be response thread pool reject", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com netflix hystrix abstract command r0", "$ r1 = specialinvoke r2 get command result", "$ z0 = $ r1 be response reject", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = com netflix hystrix abstract command r0", "$ r1 = specialinvoke r3 get command result", "$ r2 = $ r1 get order list", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = com netflix hystrix abstract command r0", "$ r1 = specialinvoke r4 get command result", "$ r2 = $ r1 get event count", "$ r3 = com netflix hystrix hystrix event type fallback_emit", "$ i0 = $ r2 get count $ r3", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = com netflix hystrix collapser collapse request subject r0", "$ z0 = specialinvoke r12 be terminate", "if $ z0 ! = 0 goto label1", "r13 = com netflix hystrix collapser collapse request subject r0", "$ r7 = r13 subject", "$ r7 on next r1", "r14 = com netflix hystrix collapser collapse request subject r0", "$ r8 = r14 value set", "$ r8 set 1", "r15 = com netflix hystrix collapser collapse request subject r0", "$ r9 = r15 subject", "$ r9 on complete", "goto label2", "label return", "if $ z0 ! = 0 goto label1", "label r11 = new java lang illegal state exception", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r4 = r10 append \\ `` response have already terminate so response can not be set \\ ``", "$ r5 = $ r4 append r1", "$ r6 = $ r5 to string", "specialinvoke r11 < init > $ r6", "throw r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r2 = com netflix hystrix hystrix command property r0", "$ r1 = r2 execution timeout enable", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = io github qsy7 interruptable enumeration interruptable invocation type application", "$ r3 = $ r2 wrap r1", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = null", "$ z0 = r1 instanceof software amazon ion facet faceted", "if $ z0 == 0 goto label1", "$ r2 = software amazon ion facet faceted r1", "r3 = $ r2 a facet r0", "goto label2", "label return r3", "if $ z0 == 0 goto label1", "label $ z1 = r0 be instance r1", "if $ z1 == 0 goto label2", "r3 = r0 cast r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = software amazon ion impl bin write buffer r0", "$ r1 = r2 current", "$ i0 = $ r1 remain", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "r9 = software amazon ion impl bin write buffer r0", "$ i1 = r9 remain", "if $ i1 > = 1 goto label2", "r10 = software amazon ion impl bin write buffer r0", "$ i2 = r10 index", "r11 = software amazon ion impl bin write buffer r0", "$ r2 = r11 block", "$ i3 = $ r2 size", "$ i4 = $ i3 - 1", "if $ i2 ! = $ i4 goto label1", "r12 = software amazon ion impl bin write buffer r0", "specialinvoke r12 allocate new block", "label r13 = software amazon ion impl bin write buffer r0", "$ i5 = r13 index", "$ i6 = $ i5 + 1", "r14 = software amazon ion impl bin write buffer r0", "r14 index = $ i6", "r15 = software amazon ion impl bin write buffer r0", "$ r3 = r15 block", "r16 = software amazon ion impl bin write buffer r0", "$ i7 = r16 index", "$ r4 = $ r3 get $ i7", "$ r5 = software amazon ion impl bin block $ r4", "r17 = software amazon ion impl bin write buffer r0", "r17 current = $ r5", "label r18 = software amazon ion impl bin write buffer r0", "r1 = r18 current", "$ r7 = r1 data", "$ i8 = r1 limit", "$ r7 [ $ i8 ] = b0", "$ i9 = r1 limit", "$ i10 = $ i9 + 1", "r1 limit = $ i10", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = software amazon ion impl bin write buffer r0", "$ r4 = r7 block", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r5 = r2 next", "r3 = software amazon ion impl bin block $ r5", "$ r6 = r3 data", "$ i0 = r3 limit", "r1 write $ r6 0 $ i0", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = software amazon ion ion type string", "if r0 == $ r1 goto label1", "$ r2 = software amazon ion ion type symbol", "if r0 ! = $ r2 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if r0 ! = $ r2 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = software amazon ion system ion binary writer builder r0", "$ z0 = r1 my stream copy optimize", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = software amazon ion system ion system builder r0", "$ r1 = r2 copy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = software amazon ion system ion system builder r0", "$ z0 = r1 my stream copy optimize", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = software amazon ion system ion text writer builder standard", "$ r1 = $ r0 with json downgrade", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = software amazon ion system ion text writer builder r0", "r11 mutation check", "if r1 == null goto label1", "$ r2 = software amazon ion system ion text writer builder ascii", "$ z0 = r1 equal $ r2", "if $ z0 ! = 0 goto label1", "$ r3 = software amazon ion system ion text writer builder utf8", "$ z1 = r1 equal $ r3", "if $ z1 == 0 goto label2", "label r12 = software amazon ion system ion text writer builder r0", "r12 my charset = r1", "goto label3", "label return", "if $ z1 == 0 goto label2", "label r10 = new java lang illegal argument exception", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r6 = r9 append \\ `` unsupported charset \\ ``", "$ r7 = $ r6 append r1", "$ r8 = $ r7 to string", "specialinvoke r10 < init > $ r8", "throw r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r5 = org apache ivy core cache default repository cache manager r0", "$ r1 = r5 use origin", "if $ r1 ! = null goto label2", "r6 = org apache ivy core cache default repository cache manager r0", "$ r3 = r6 get setting", "if $ r3 == null goto label1", "r7 = org apache ivy core cache default repository cache manager r0", "$ r4 = r7 get setting", "$ z1 = $ r4 be default use origin", "return $ z1", "if $ r3 == null goto label1", "label return 0", "if $ r1 ! = null goto label2", "label r8 = org apache ivy core cache default repository cache manager r0", "$ r2 = r8 use origin", "$ z0 = $ r2 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = org apache ivy core cache parser setting monitor r0", "r1 monitor setting = null", "r2 = org apache ivy core cache parser setting monitor r0", "r2 delegate setting = null", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r17 = org apache ivy core cache parser setting monitor r0", "$ r7 = r17 substitute", "$ r8 = $ r7 entry set", "r2 = $ r8 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r9 = r2 next", "r3 = java util map $ entry $ r9", "$ r10 = r3 get key", "r4 = java lang string $ r10", "r5 = r3 get value", "r6 = r1 substitute r4", "$ z1 = r5 equal r6", "if $ z1 ! = 0 goto label2", "r16 = new java lang string buffer", "specialinvoke r16 < init >", "$ r12 = r16 append \\ `` setting variable have change for \\ ``", "$ r13 = r3 get key", "$ r14 = $ r12 append $ r13", "$ r15 = $ r14 to string", "org apache ivy util message debug $ r15", "return 1", "if $ z1 ! = 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r18 = org apache ivy core ivy context r0", "$ r6 = r18 context map", "entermonitor $ r6", "label r19 = org apache ivy core ivy context r0", "$ r7 = r19 context map", "r3 = $ r7 get r1", "if r3 ! = null goto label3", "exitmonitor $ r6", "label return null", "if r3 ! = null goto label3", "label $ z0 = r3 instanceof java util list", "if $ z0 == 0 goto label7", "$ r13 = java util list r3", "$ i0 = $ r13 size", "if $ i0 ! = 0 goto label5", "label $ r14 = java util list r3", "r4 = $ r14 get 0", "if $ z0 == 0 goto label7", "label r17 = new java lang runtime exception", "r16 = new java lang string buffer", "specialinvoke r16 < init >", "$ r10 = r16 append \\ `` can not top from non list object \\ ``", "$ r11 = $ r10 append r3", "$ r12 = $ r11 to string", "specialinvoke r17 < init > $ r12", "throw r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "$ r2 = org apache ivy core report download status fail", "r4 = org apache ivy core report configuration resolve report r0", "r1 = r4 get artifacts report $ r2 1", "$ r3 = org apache ivy core report configuration resolve report filter out merge artifact r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r8 = org apache ivy core repository repository management engine r0", "specialinvoke r8 ensure analyze", "r7 = new java util hash set", "r9 = org apache ivy core repository repository management engine r0", "$ r3 = r9 revision", "$ r4 = $ r3 key set", "specialinvoke r7 < init > $ r4", "r10 = org apache ivy core repository repository management engine r0", "$ r5 = r10 dependers", "$ r6 = $ r5 key set", "r7 remove all $ r6", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r3 = org apache ivy core resolve ivy node r0", "$ z0 = r3 be root", "if $ z0 == 0 goto label1", "return 0", "if $ z0 == 0 goto label1", "label r4 = org apache ivy core resolve ivy node r0", "r1 = r4 get root module configuration", "i1 = 0", "label $ i0 = lengthof r1", "if i1 > = $ i0 goto label4", "$ r2 = r1 [ i1 ]", "r5 = org apache ivy core resolve ivy node r0", "$ z1 = r5 be blacklist $ r2", "if $ z1 ! = 0 goto label3", "label i1 = i1 + 1", "goto label2", "if i1 > = $ i0 goto label4", "label return 1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache ivy core resolve ivy node r0", "$ r4 = r8 merge usage", "if $ r4 ! = null goto label1", "return 0", "if $ r4 ! = null goto label1", "label r9 = org apache ivy core resolve ivy node r0", "$ r5 = r9 merge usage", "$ r6 = $ r5 value", "r2 = $ r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label4", "$ r7 = r2 next", "r3 = org apache ivy core resolve ivy node usage $ r7", "$ z1 = r3 have transitive depender r1", "if $ z1 == 0 goto label3", "return 1", "if $ z1 == 0 goto label3", "label goto label2", "if $ z0 == 0 goto label4", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r3 = org apache ivy core resolve resolve module revision r0", "$ r1 = r3 descriptor", "$ r2 = $ r1 get resolve module revision id", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache ivy core resolve resolve module revision r0", "$ r1 = r2 resolver", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache ivy core setting ivy setting r0", "$ r2 = r3 list ignore", "r1 remove all $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r11 = new java lang string buffer", "specialinvoke r11 < init >", "$ r4 = r11 append \\ `` nbr of module to sort \\ ``", "r12 = org apache ivy core sort module descriptor sorter r0", "$ r5 = r12 module descriptor", "$ i0 = $ r5 size", "$ r6 = $ r4 append $ i0", "$ r7 = $ r6 to string", "org apache ivy util message debug $ r7", "r13 = org apache ivy core sort module descriptor sorter r0", "$ r8 = r13 module descriptor", "r1 = $ r8 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r10 = r1 next", "r2 = org apache ivy core sort module in sort $ r10", "r14 = org apache ivy core sort module descriptor sorter r0", "specialinvoke r14 sort module descriptor help r2 r2", "goto label1", "if $ z0 == 0 goto label2", "label r15 = org apache ivy core sort module descriptor sorter r0", "$ r9 = r15 sort", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], []]}
{"nodes": ["return \\ `` http ant apache org ivy \\ ``"], "adj": [[]]}
{"nodes": ["r0 = @ this", "r52 = org apache ivy ivy r0", "r52 push context", "label r53 = org apache ivy ivy r0", "$ r2 = r53 setting", "if $ r2 ! = null goto label02", "r41 = new org apache ivy core setting ivy setting", "specialinvoke r41 < init >", "r54 = org apache ivy ivy r0", "r54 setting = r41", "label r55 = org apache ivy ivy r0", "$ r3 = r55 event manager", "if $ r3 ! = null goto label03", "r42 = new org apache ivy core event event manager", "specialinvoke r42 < init >", "r56 = org apache ivy ivy r0", "r56 event manager = r42", "label r57 = org apache ivy ivy r0", "$ r4 = r57 sort engine", "if $ r4 ! = null goto label04", "r43 = new org apache ivy core sort sort engine", "r58 = org apache ivy ivy r0", "$ r37 = r58 setting", "r59 = org apache ivy core sort sort engine setting $ r37", "specialinvoke r43 < init > r59", "r60 = org apache ivy ivy r0", "r60 sort engine = r43", "label r61 = org apache ivy ivy r0", "$ r5 = r61 search engine", "if $ r5 ! = null goto label05", "r44 = new org apache ivy core search search engine", "r62 = org apache ivy ivy r0", "$ r35 = r62 setting", "specialinvoke r44 < init > $ r35", "r63 = org apache ivy ivy r0", "r63 search engine = r44", "label r64 = org apache ivy ivy r0", "$ r6 = r64 resolve engine", "if $ r6 ! = null goto label06", "r45 = new org apache ivy core resolve resolve engine", "r65 = org apache ivy ivy r0", "$ r33 = r65 setting", "r66 = org apache ivy ivy r0", "$ r32 = r66 event manager", "r67 = org apache ivy ivy r0", "$ r31 = r67 sort engine", "r68 = org apache ivy core resolve resolve engine setting $ r33", "specialinvoke r45 < init > r68 $ r32 $ r31", "r69 = org apache ivy ivy r0", "r69 resolve engine = r45", "label r70 = org apache ivy ivy r0", "$ r7 = r70 retrieve engine", "if $ r7 ! = null goto label07", "r46 = new org apache ivy core retrieve retrieve engine", "r71 = org apache ivy ivy r0", "$ r29 = r71 setting", "r72 = org apache ivy ivy r0", "$ r28 = r72 event manager", "r73 = org apache ivy core retrieve retrieve engine setting $ r29", "specialinvoke r46 < init > r73 $ r28", "r74 = org apache ivy ivy r0", "r74 retrieve engine = r46", "label r75 = org apache ivy ivy r0", "$ r8 = r75 deliver engine", "if $ r8 ! = null goto label08", "r47 = new org apache ivy core deliver deliver engine", "r76 = org apache ivy ivy r0", "$ r26 = r76 setting", "r77 = org apache ivy core deliver deliver engine setting $ r26", "specialinvoke r47 < init > r77", "r78 = org apache ivy ivy r0", "r78 deliver engine = r47", "label r79 = org apache ivy ivy r0", "$ r9 = r79 publish engine", "if $ r9 ! = null goto label09", "r48 = new org apache ivy core publish publish engine", "r80 = org apache ivy ivy r0", "$ r24 = r80 setting", "r81 = org apache ivy ivy r0", "$ r23 = r81 event manager", "r82 = org apache ivy core publish publish engine setting $ r24", "specialinvoke r48 < init > r82 $ r23", "r83 = org apache ivy ivy r0", "r83 publish engine = r48", "label r84 = org apache ivy ivy r0", "$ r10 = r84 install engine", "if $ r10 ! = null goto label10", "r49 = new org apache ivy core install install engine", "r85 = org apache ivy ivy r0", "$ r21 = r85 setting", "r86 = org apache ivy ivy r0", "$ r20 = r86 search engine", "r87 = org apache ivy ivy r0", "$ r19 = r87 resolve engine", "r88 = org apache ivy core install install engine setting $ r21", "specialinvoke r49 < init > r88 $ r20 $ r19", "r89 = org apache ivy ivy r0", "r89 install engine = r49", "label r90 = org apache ivy ivy r0", "$ r11 = r90 repository engine", "if $ r11 ! = null goto label11", "r50 = new org apache ivy core repository repository management engine", "r91 = org apache ivy ivy r0", "$ r17 = r91 setting", "r92 = org apache ivy ivy r0", "$ r16 = r92 search engine", "r93 = org apache ivy ivy r0", "$ r15 = r93 resolve engine", "r94 = org apache ivy core repository repository management engine setting $ r17", "specialinvoke r50 < init > r94 $ r16 $ r15", "r95 = org apache ivy ivy r0", "r95 repository engine = r50", "label r96 = org apache ivy ivy r0", "$ r13 = r96 event manager", "r51 = new org apache ivy ivy $ 1", "r97 = org apache ivy ivy r0", "specialinvoke r51 < init > r97", "r98 = org apache ivy plugins repository transfer listener r51", "$ r13 add transfer listener r98", "r99 = org apache ivy ivy r0", "r99 bound = 1", "label r100 = org apache ivy ivy r0", "r100 pop context", "goto label15", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [110], [111], [112], [113], [114], [115], [116], [117], [118], [119], [120], [121], [122], [123], [], []]}
{"nodes": ["r0 = @ this", "return \\ `` \\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 be file", "if $ z0 ! = 0 goto label1", "$ z1 = r0 be directory", "if $ z1 ! = 0 goto label1", "return", "if $ z1 ! = 0 goto label1", "label $ r3 = new java util zip zip output stream", "specialinvoke $ r3 < init > r1", "$ r3 set level 9", "org apache ivy osgi util zip util zip file r0 r0 $ r3", "$ r3 finish", "$ r3 close"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org apache ivy plugins resolver packager packager resolver r0", "$ r1 = r2 build root", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache ivy plugins resolver packager packager resolver r0", "r2 resource cache = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "label $ r4 = new java lang string buffer", "specialinvoke $ r4 < init >", "r11 = r0 read line", "label if r11 == null goto label3", "$ r5 = new java lang string buffer", "specialinvoke $ r5 < init >", "$ r6 = $ r5 append r11", "$ r7 = $ r6 append \\ `` \\n\\ ``", "$ r8 = $ r7 to string", "$ r4 append $ r8", "label if r11 == null goto label3", "label r2 = $ r4 to string", "label r0 close", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r6 = org apache ivy util message logger engine r0", "$ r1 = r6 logger stack", "$ z0 = $ r1 be empty", "if $ z0 == 0 goto label1", "r7 = org apache ivy util message logger engine r0", "$ r5 = specialinvoke r7 get default logger", "return $ r5", "if $ z0 == 0 goto label1", "label r8 = org apache ivy util message logger engine r0", "$ r2 = r8 logger stack", "$ r3 = $ r2 peek", "$ r4 = org apache ivy util message logger $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], []]}
{"nodes": ["c0 = @ parameter0", "c4 = 0", "label $ r0 = org apache ivy util string utils shift", "$ i1 = lengthof $ r0", "if c4 > = $ i1 goto label3", "$ r7 = org apache ivy util string utils shift", "$ c2 = $ r7 [ c4 ]", "if $ c2 ! = c0 goto label2", "return c4", "if $ c2 ! = c0 goto label2", "label $ i3 = c4 + 1", "c4 = char $ i3", "goto label1", "if c4 > = $ i1 goto label3", "label $ r1 = new java lang illegal argument exception", "$ r2 = new java lang string buffer", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append \\ `` impossible to decrypt \\'\\ ``", "$ r4 = $ r3 append c0", "$ r5 = $ r4 append \\ `` \\ ' unhandled character \\ ``", "$ r6 = $ r5 to string", "specialinvoke $ r1 < init > $ r6", "throw $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org codehaus jackson json node r0", "$ r1 = r2 get i0", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com fasterxml jackson databind object mapper r0", "$ r2 = r4 _serialization config", "$ r3 = $ r2 with serialization inclusion r1", "r5 = com fasterxml jackson databind object mapper r0", "r5 _serialization config = $ r3", "r6 = com fasterxml jackson databind object mapper r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "if i0 > = 0 goto label1", "r10 = new java lang unsupported operation exception", "specialinvoke r10 < init > \\ `` must pass actual length for cbor encode data\\ ``", "throw r10", "if i0 > = 0 goto label1", "label r12 = com fasterxml jackson dataformat cbor c b o r generator r0", "r12 _verify value write \\ `` write binary value\\ ``", "r13 = com fasterxml jackson dataformat cbor c b o r generator r0", "specialinvoke r13 _write length marker 64 i0", "r14 = com fasterxml jackson dataformat cbor c b o r generator r0", "i1 = specialinvoke r14 _write byte r1 i0", "if i1 < = 0 goto label2", "r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r3 = r11 append \\ `` too few byte available miss \\ ``", "$ r4 = $ r3 append i1", "$ r5 = $ r4 append \\ `` bytes out of \\ ``", "$ r6 = $ r5 append i0", "$ r7 = $ r6 append \\ `` \\ ``", "$ r8 = $ r7 to string", "r15 = com fasterxml jackson dataformat cbor c b o r generator r0", "r15 _report error $ r8", "label return i0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "return null"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "return null"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = @ parameter0", "if r3 ! = null goto label1", "r3 = org codehaus jackson map mapper config default_date_format", "label r4 = org codehaus jackson map mapper config r0", "$ r1 = r4 _base", "$ r2 = $ r1 with date format r3", "r5 = org codehaus jackson map mapper config r0", "r5 _base = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new org codehaus jackson map ser std serializer provider", "r5 = org codehaus jackson map ser std serializer provider r0", "specialinvoke r4 < init > r1 r5 r2", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org codehaus jackson map ser std serializer provider r0", "$ r4 = r6 _serializer factory", "r7 = org codehaus jackson map ser std serializer provider r0", "$ r3 = r7 _config", "$ r5 = $ r4 create serializer $ r3 r1 r2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = org codehaus jackson node miss node get instance", "r2 = org codehaus jackson json node $ r1", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = new com fasterxml jackson module paranamer shade cache paranamer", "r3 = new com fasterxml jackson module paranamer shade bytecode read paranamer", "specialinvoke r3 < init >", "r5 = com fasterxml jackson module paranamer shade paranamer r3", "specialinvoke r4 < init > r5", "r6 = com fasterxml jackson module paranamer shade paranamer r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 mime type", "r5 = jakarta activation activation data flavor r0", "$ z0 = r5 be mime type equal $ r2", "if $ z0 == 0 goto label1", "$ r3 = r1 get representation class", "r6 = jakarta activation activation data flavor r0", "$ r4 = r6 representation class", "if $ r3 ! = $ r4 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ r3 ! = $ r4 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org janusgraph core attribute geoshape r0", "$ r2 = specialinvoke r4 get spatial relation r1", "$ r3 = org locationtech spatial4j shape spatial relation disjoint", "if $ r2 ! = $ r3 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r2 ! = $ r3 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["l0 = @ parameter0", "$ b1 = l0 cmp 0l", "if $ b1 < = 0 goto label1", "$ z0 = 1", "goto label2", "label $ r0 = newarray java lang object [ 1 ]", "$ r1 = java lang long value of l0", "$ r0 [ 0 ] = $ r1", "com google common base precondition check argument $ z0 \\ `` vertex id must be positive % s\\", "$ r2 = org janusgraph graphdb idmanagement i d manager $ vertex i d type normal vertex", "$ l2 = $ r2 remove pad 9223372036854775807l", "$ b3 = $ l2 cmp l0", "if $ b3 < 0 goto label3", "$ z1 = 1", "goto label4", "label $ r3 = newarray java lang object [ 1 ]", "$ r4 = java lang long value of l0", "$ r3 [ 0 ] = $ r4", "com google common base precondition check argument $ z1 \\ `` vertex id be too large % s\\", "$ r5 = org janusgraph graphdb idmanagement i d manager $ vertex i d type normal vertex", "$ l4 = $ r5 add pad l0", "return $ l4", "if $ b3 < 0 goto label3", "label $ z1 = 0", "if $ b1 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "l0 = @ parameter2", "r2 = @ parameter3", "org janusgraph core util management util await index update r0 r1 null l0 r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r2 = org janusgraph diskstorage configuration config option manage type", "r3 = org janusgraph diskstorage configuration config option r0", "$ r1 = r3 type", "$ z0 = $ r2 contain $ r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org janusgraph diskstorage keycolumnvalue slice query r0", "$ r1 = r2 slice end", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org janusgraph diskstorage log read marker r0", "$ r1 = r2 identifier", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r4 = org janusgraph diskstorage mutation r0", "$ r1 = r4 deletion", "if $ r1 ! = null goto label1", "$ r3 = com google common collect immutable list of", "r5 = java util list $ r3", "return r5", "if $ r1 ! = null goto label1", "label r6 = org janusgraph diskstorage mutation r0", "$ r2 = r6 deletion", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["l0 = @ parameter0", "$ l1 = org janusgraph graphdb idmanagement i d manager make temporary l0", "return $ l1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ r1 = java lang boolean value of 1", "r2 = org janusgraph graphdb management configuration management graph r0", "specialinvoke r2 remove vertex \\ `` template_ configuration\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 == null goto label1", "$ i0 = lengthof r1", "if $ i0 ! = 0 goto label2", "label return", "if $ i0 ! = 0 goto label2", "label org apache tinkerpop gremlin structure util element helper legal property key value array r1", "$ r2 = org apache tinkerpop gremlin structure util element helper get id value r1", "$ z0 = $ r2 be present", "if $ z0 == 0 goto label3", "$ r5 = org apache tinkerpop gremlin structure edge $ exception user supply id not support", "throw $ r5", "if $ z0 == 0 goto label3", "label $ r3 = org apache tinkerpop gremlin structure util element helper get label value r1", "$ z1 = $ r3 be present", "if $ z1 == 0 goto label4", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` can not provide label a argument\\ ``", "throw r6", "if $ z1 == 0 goto label4", "label r7 = org apache tinkerpop gremlin structure element r0", "org apache tinkerpop gremlin structure util element helper attach property r7 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com jamesmurty utils x m l builder r0", "$ r2 = r3 text r1 0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = com jamesmurty utils x m l builder r0", "$ r2 = r7 xml node", "r8 = com jamesmurty utils x m l builder r0", "$ r3 = r8 get document", "$ r4 = net iharder base64 encode bytes r1", "$ r5 = $ r3 create c d a t a section $ r4", "$ r2 append child $ r5", "r9 = com jamesmurty utils x m l builder r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = com jamesmurty utils x m l builder r0", "$ r1 = r2 up 1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 alias r0", "$ r2 = r3 get alias object extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 alias r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 balloon style r0", "$ r2 = r3 get balloon style simple extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 balloon style r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 basic link r0", "$ r2 = r3 get basic link object extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 basic link r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 extend data r0", "$ r2 = r3 get schema data", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 extend data r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = specialinvoke r0 get feature object extension", "$ r2 add r1", "r3 = de micromata opengis kml v_2_2_0 container r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = de micromata opengis kml v_2_2_0 gx playlist r0", "r2 tour primitive = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = de micromata opengis kml v_2_2_0 gx simple array data r0", "r2 simple array data extension = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "label r6 = de micromata opengis kml v_2_2_0 kml r0", "$ r2 = specialinvoke r6 create marshaller", "r7 = de micromata opengis kml v_2_2_0 kml r0", "r7 m = $ r2", "r8 = de micromata opengis kml v_2_2_0 kml r0", "$ r4 = r8 m", "$ r3 = java lang system out", "$ r4 marshal r0 $ r3", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 list style r0", "$ r2 = r3 get item icon", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 list style r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 model r0", "$ r2 = r3 get model simple extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 model r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 poly style r0", "$ r2 = r3 get poly style simple extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 poly style r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 poly style r0", "$ r2 = r3 get poly style object extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 poly style r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 time primitive r0", "$ r2 = r3 get time primitive object extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 time primitive r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 update r0", "$ r2 = r3 get update extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 update r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = de micromata opengis kml v_2_2_0 xal post office r0", "r2 post office name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "if i0 ! = i1 goto label1", "return", "if i0 ! = i1 goto label1", "label i2 = i0 64", "$ i4 = i1 - 1", "i3 = $ i4 64", "r5 = com googlecode javaewah datastructure bit set r0", "$ r1 = r5 data", "$ l7 = $ r1 [ i2 ]", "$ l5 = -1l < < i0", "$ l6 = $ l5 ^ -1l", "$ l8 = $ l7 ^ $ l6", "$ r1 [ i2 ] = $ l8", "i15 = i2", "label if i15 > = i3 goto label3", "r6 = com googlecode javaewah datastructure bit set r0", "$ r4 = r6 data", "r7 = com googlecode javaewah datastructure bit set r0", "$ r3 = r7 data", "$ l13 = $ r3 [ i15 ]", "$ l14 = $ l13 ^ -1l", "$ r4 [ i15 ] = $ l14", "i15 = i15 + 1", "goto label2", "label if i15 > = i3 goto label3", "label r8 = com googlecode javaewah datastructure bit set r0", "$ r2 = r8 data", "$ l11 = $ r2 [ i3 ]", "$ i9 = neg i1", "$ l10 = -1l > > > $ i9", "$ l12 = $ l11 ^ $ l10", "$ r2 [ i3 ] = $ l12"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i12 = i0 64", "r4 = com googlecode javaewah datastructure bit set r0", "$ i1 = r4 get number of word", "if i12 < $ i1 goto label1", "return -1", "if i12 < $ i1 goto label1", "label r5 = com googlecode javaewah datastructure bit set r0", "$ r1 = r5 data", "l13 = $ r1 [ i12 ]", "l14 = l13 > > > i0", "$ b2 = l14 cmp 0l", "if $ b2 == 0 goto label2", "$ i10 = java lang long number of trail zero l14", "$ i11 = i0 + $ i10", "return $ i11", "if $ b2 == 0 goto label2", "label i15 = i12 + 1", "label r6 = com googlecode javaewah datastructure bit set r0", "$ i3 = r6 get number of word", "if i15 > = $ i3 goto label5", "r7 = com googlecode javaewah datastructure bit set r0", "$ r2 = r7 data", "$ l4 = $ r2 [ i15 ]", "$ b5 = $ l4 cmp 0l", "if $ b5 == 0 goto label4", "$ i7 = i15 * 64", "r8 = com googlecode javaewah datastructure bit set r0", "$ r3 = r8 data", "$ l6 = $ r3 [ i15 ]", "$ i8 = java lang long number of trail zeros $ l6", "$ i9 = $ i7 + $ i8", "return $ i9", "if $ b5 == 0 goto label4", "label i15 = i15 + 1", "goto label3", "if i15 > = $ i3 goto label5", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [], [38], []]}
{"nodes": ["r0 = @ this", "r9 = new com googlecode javaewah datastructure bit set", "r10 = com googlecode javaewah datastructure immutable bit set r0", "$ i0 = r10 size", "specialinvoke r9 < init > $ i0", "r11 = com googlecode javaewah datastructure immutable bit set r0", "$ r3 = r11 data", "$ r3 rewind", "r12 = com googlecode javaewah datastructure immutable bit set r0", "$ r7 = r12 data", "$ r6 = r9 data", "$ r5 = r9 data", "$ i1 = lengthof $ r5", "$ r7 get $ r6 0 $ i1", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "l0 = @ parameter1", "$ b1 = l0 cmp 0l", "if $ b1 ! = 0 goto label1", "return", "if $ b1 ! = 0 goto label1", "label r1 = com googlecode javaewah e w a h compress bitmap r0", "$ i2 = r1 size in bit", "$ l4 = long $ i2", "$ l3 = l0 * 64l", "$ l5 = $ l4 + $ l3", "$ i6 = int $ l5", "r2 = com googlecode javaewah e w a h compress bitmap r0", "r2 size in bit = $ i6", "r3 = com googlecode javaewah e w a h compress bitmap r0", "specialinvoke r3 fastadd stream of empty word z0 l0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r11 = new java util array list", "specialinvoke r11 < init >", "r12 = com googlecode javaewah e w a h compress bitmap r0", "r2 = r12 get e w a h iterator", "i20 = 0", "label $ z0 = r2 have next", "if $ z0 == 0 goto label12", "r3 = r2 next", "$ z1 = r3 get run bit", "if $ z1 == 0 goto label06", "l21 = r3 get run length", "l22 = 0l", "label $ b18 = l22 cmp l21", "if $ b18 > = 0 goto label05", "i23 = 0", "label if i23 > = 64 goto label04", "$ i19 = i20", "i20 = i20 + 1", "$ r10 = java lang integer value of $ i19", "r11 add $ r10", "i23 = i23 + 1", "goto label03", "label if i23 > = 64 goto label04", "label l22 = l22 + 1l", "goto label02", "if $ b18 > = 0 goto label05", "label goto label07", "label i24 = r3 get number of literal word", "i25 = 0", "label if i25 > = i24 goto label11", "$ r8 = r2 buffer", "$ i11 = r2 literal word", "$ i12 = $ i11 + i25", "l26 = $ r8 get word $ i12", "label $ b13 = l26 cmp 0l", "if $ b13 == 0 goto label10", "$ l14 = neg l26", "l27 = l26 & $ l14", "$ l15 = l27 - 1l", "$ i16 = java lang long bit count $ l15", "$ i17 = $ i16 + i20", "$ r9 = java lang integer value of $ i17", "r11 add $ r9", "l26 = l26 ^ l27", "goto label09", "if $ b13 == 0 goto label10", "label i20 = i20 + 64", "i25 = i25 + 1", "goto label08", "label if i25 > = i24 goto label11", "label goto label01", "if $ z1 == 0 goto label06", "label $ l7 = long i20", "$ l8 = r3 get run length", "$ l9 = 64l * $ l8", "$ l10 = $ l7 + $ l9", "i20 = int $ l10", "if $ z0 == 0 goto label12", "label $ i0 = r11 size", "if $ i0 < = 0 goto label13", "$ i1 = r11 size", "$ i2 = $ i1 - 1", "$ r5 = r11 get $ i2", "$ r6 = java lang integer $ r5", "$ i3 = $ r6 int value", "r13 = com googlecode javaewah e w a h compress bitmap r0", "$ i4 = r13 size in bit", "if $ i3 < $ i4 goto label13", "$ i5 = r11 size", "$ i6 = $ i5 - 1", "r11 remove $ i6", "goto label12", "if $ i3 < $ i4 goto label13", "label return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [], [47], [48], [49], [], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [], [74], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 0 goto label1", "r2 = com googlecode javaewah e w a h compress bitmap r0", "$ i3 = r2 size in bit", "if i0 < $ i3 goto label2", "label return 0", "if i0 < $ i3 goto label2", "label i14 = 0", "r3 = com googlecode javaewah e w a h compress bitmap r0", "r1 = r3 get iterate r l w", "i1 = i0 64", "label if i14 > i1 goto label8", "$ l4 = long i14", "$ l5 = r1 get run length", "$ l6 = $ l4 + $ l5", "i15 = int $ l6", "if i1 > = i15 goto label4", "$ z1 = r1 get run bit", "return $ z1", "if i1 > = i15 goto label4", "label $ i7 = r1 get number of literal word", "$ i8 = i15 + $ i7", "if i1 > = $ i8 goto label7", "$ i10 = i1 - i15", "l2 = r1 get literal word at $ i10", "$ l11 = 1l < < i0", "$ l12 = l2 & $ l11", "$ b13 = $ l12 cmp 0l", "if $ b13 == 0 goto label5", "$ z2 = 1", "goto label6", "label return $ z2", "if $ b13 == 0 goto label5", "label $ z2 = 0", "if i1 > = $ i8 goto label7", "label $ i9 = r1 get number of literal word", "i14 = i15 + $ i9", "r1 next", "goto label3", "label if i14 > i1 goto label8", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [], [41], []]}
{"nodes": ["r0 = @ this", "i18 = 0", "r6 = com googlecode javaewah e w a h compress bitmap r0", "$ r1 = r6 buffer", "i0 = $ r1 size in word", "i19 = 0", "label if i19 > = i0 goto label4", "r7 = com googlecode javaewah e w a h compress bitmap r0", "$ r2 = r7 buffer", "l1 = com googlecode javaewah run length word get run length $ r2 i19", "r8 = com googlecode javaewah e w a h compress bitmap r0", "$ r3 = r8 buffer", "z0 = com googlecode javaewah run length word get run bit $ r3 i19", "$ b5 = l1 cmp 0l", "if $ b5 < = 0 goto label2", "if z0 == 0 goto label2", "$ i17 = i18 * 64", "return $ i17", "if z0 == 0 goto label2", "label $ l6 = long i18", "$ l7 = $ l6 + l1", "i18 = int $ l7", "r9 = com googlecode javaewah e w a h compress bitmap r0", "$ r4 = r9 buffer", "$ i8 = com googlecode javaewah run length word get number of literal word $ r4 i19", "l2 = long $ i8", "$ b9 = l2 cmp 0l", "if $ b9 < = 0 goto label3", "r10 = com googlecode javaewah e w a h compress bitmap r0", "$ r5 = r10 buffer", "$ i10 = i19 + 1", "l3 = $ r5 get word $ i10", "$ b11 = l3 cmp 0l", "if $ b11 == 0 goto label3", "$ l12 = neg l3", "l4 = l3 & $ l12", "$ i14 = i18 * 64", "$ l13 = l4 - 1l", "$ i15 = java lang long bit count $ l13", "$ i16 = $ i14 + $ i15", "return $ i16", "if $ b11 == 0 goto label3", "label i19 = i19 + 1", "goto label1", "label if i19 > = i0 goto label4", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [], [45], []]}
{"nodes": ["r0 = @ this", "r2 = com googlecode javaewah e w a h compress bitmap r0", "$ r1 = r2 buffer", "$ i0 = $ r1 size in word", "$ i1 = $ i0 * 8", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r2 clear", "r5 = com googlecode javaewah e w a h compress bitmap r0", "r3 = r5 chunk iterator", "r4 = r1 chunk iterator", "i3 = 0", "label $ z6 = r3 have next", "if $ z6 == 0 goto label3", "$ z1 = r4 have next", "if $ z1 == 0 goto label3", "$ z2 = r3 next bit", "if $ z2 ! = 0 goto label2", "i4 = r3 next length", "i3 = i3 + i4", "r2 set size in bit i3 0", "r3 move i4", "goto label1", "if $ z2 ! = 0 goto label2", "label $ i1 = r3 next length", "$ i2 = r4 next length", "i5 = java lang math min $ i1 $ i2", "i3 = i3 + i5", "$ z3 = r4 next bit", "r2 set size in bit i3 $ z3", "r3 move i5", "r4 move i5", "if $ z1 == 0 goto label3", "label r6 = com googlecode javaewah e w a h compress bitmap r0", "$ i0 = r6 size in bit", "r2 set size in bit $ i0 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = com googlecode javaewah e w a h compress bitmap r0", "$ r3 = r7 buffer", "$ i1 = $ r3 size in word", "$ r4 = r1 buffer", "$ i2 = $ r4 size in word", "i0 = $ i1 + $ i2", "r6 = new com googlecode javaewah e w a h compress bitmap", "specialinvoke r6 < init > i0", "r8 = com googlecode javaewah e w a h compress bitmap r0", "r9 = com googlecode javaewah bitmap storage r6", "r8 xor to container r1 r9", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = com googlecode javaewah32 e w a h compress bitmap32 r0", "$ r3 = r8 buffer", "$ r2 = r1 buffer", "$ r3 swap $ r2", "r9 = com googlecode javaewah32 e w a h compress bitmap32 r0", "$ r4 = r9 rlw", "i0 = $ r4 position", "r10 = com googlecode javaewah32 e w a h compress bitmap32 r0", "$ r6 = r10 rlw", "$ r5 = r1 rlw", "$ i2 = $ r5 position", "$ r6 position = $ i2", "$ r7 = r1 rlw", "$ r7 position = i0", "r11 = com googlecode javaewah32 e w a h compress bitmap32 r0", "i1 = r11 size in bit", "$ i3 = r1 size in bit", "r12 = com googlecode javaewah32 e w a h compress bitmap32 r0", "r12 size in bit = $ i3", "r1 size in bit = i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = lengthof r1", "if $ i0 > = 2 goto label1", "$ r2 = new java lang illegal argument exception", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append \\ `` you should provide at least two bitmap provide \\ ``", "$ i1 = lengthof r1", "$ r5 = $ r4 append $ i1", "$ r6 = $ r5 to string", "specialinvoke $ r2 < init > $ r6", "throw $ r2", "if $ i0 > = 2 goto label1", "label com googlecode javaewah32 fast aggregation32 or to container r0 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "r3 = new com googlecode javaewah32 e w a h compress bitmap32", "specialinvoke r3 < init >", "r4 = com googlecode javaewah32 bitmap storage32 r3", "com googlecode javaewah32 iterator util32 materialize r0 r4", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org javaruntype type type r0", "$ i0 = r1 array dimension", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org javaruntype type type r0", "$ z0 = r2 be array", "if $ z0 ! = 0 goto label1", "r3 = org javaruntype type type r0", "$ r1 = r3 component class", "$ z1 = $ r1 be interface", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r6 = org javaruntype type type r0", "$ r1 = r6 type parameter", "$ i1 = lengthof $ r1", "if $ i1 ! = 0 goto label1", "return 1", "if $ i1 ! = 0 goto label1", "label i2 = 0", "r7 = org javaruntype type type r0", "$ r2 = r7 type parameter", "i0 = lengthof $ r2", "label if i2 > = i0 goto label4", "r8 = org javaruntype type type r0", "$ r3 = r8 type parameter", "$ r5 = $ r3 [ i2 ]", "$ r4 = org javaruntype type wildcard type parameter unknown", "$ z0 = $ r5 equal $ r4", "if $ z0 ! = 0 goto label3", "return 0", "if $ z0 ! = 0 goto label3", "label i2 = i2 + 1", "goto label2", "label if i2 > = i0 goto label4", "label return 1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [], [23], []]}
{"nodes": ["r0 = @ this", "r1 = org javaruntype typedef inner class type def variable r0", "$ i0 = r1 array dimension", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = javassist class pool r0", "$ r2 = r3 source", "$ r2 record invalid class name r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = javassist ct behavior r0", "$ r1 = r2 method info", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 256", "if $ i1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 16384", "if $ i1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 2048", "if $ i1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = javassist scopedpool soft value hash map r0", "specialinvoke r3 process queue", "r4 = javassist scopedpool soft value hash map r0", "$ r1 = r4 hash", "$ r2 = $ r1 entry set", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r16 = org javatuples tuple r0", "$ i1 = r16 get size", "if i0 < $ i1 goto label1", "r15 = new java lang illegal argument exception", "r14 = new java lang string builder", "specialinvoke r14 < init >", "$ r5 = r14 append \\ `` can not retrieve position \\ ``", "$ r6 = $ r5 append i0", "$ r7 = $ r6 append \\ `` in \\ ``", "$ r8 = r0 get class", "$ r9 = $ r8 get simple name", "$ r10 = $ r7 append $ r9", "$ r11 = $ r10 append \\ `` position for this class start with 0 and end with \\ ``", "r17 = org javatuples tuple r0", "$ i2 = r17 get size", "$ i3 = $ i2 - 1", "$ r12 = $ r11 append $ i3", "$ r13 = $ r12 to string", "specialinvoke r15 < init > $ r13", "throw r15", "if i0 < $ i1 goto label1", "label r18 = org javatuples tuple r0", "$ r1 = r18 value array", "$ r2 = $ r1 [ i0 ]", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = javax el e l context r0", "$ r4 = r7 get evaluation listener", "if $ r4 ! = null goto label1", "return", "if $ r4 ! = null goto label1", "label r8 = javax el e l context r0", "$ r5 = r8 get evaluation listener", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r6 = r2 next", "r3 = javax el evaluation listener $ r6", "r9 = javax el e l context r0", "r3 after evaluation r9 r1", "goto label2", "if $ z0 == 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r6 = javax el e l manager r0", "$ r1 = r6 el context", "if $ r1 ! = null goto label1", "r5 = new javax el standard e l context", "$ r4 = javax el e l manager get expression factory", "specialinvoke r5 < init > $ r4", "r7 = javax el e l manager r0", "r7 el context = r5", "label r8 = javax el e l manager r0", "$ r2 = r8 el context", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = javax el lambda expression r0", "r2 context = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 == null goto label1", "$ z0 = r2 instanceof java util list", "if $ z0 == 0 goto label1", "return class \\ `` ljava lang integer \\ ``", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com sun mail iap argument r0", "$ r3 = r4 item", "$ r2 = r1 item", "$ r3 add all $ r2", "r5 = com sun mail iap argument r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = com sun mail iap argument r0", "$ r1 = r3 item", "$ r2 = java lang integer value of i0", "$ r1 add $ r2", "r4 = com sun mail iap argument r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com sun mail iap argument r0", "$ r2 = r3 item", "$ r2 add r1", "r4 = com sun mail iap argument r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = com sun mail iap byte array r0", "$ r1 = r2 bytes", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com sun mail iap byte array r0", "r1 count = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com sun mail iap protocol r0", "$ r1 = r2 input", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "label r4 = com sun mail iap protocol r0", "$ r2 = r4 input", "$ i0 = $ r2 available", "if $ i0 < = 0 goto label2", "$ z0 = 1", "goto label3", "label return $ z0", "if $ i0 < = 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r5 = com sun mail iap protocol r0", "$ r2 = r5 trace logger", "$ r1 = java util log level fine", "$ z0 = $ r2 be loggable $ r1", "if $ z0 == 0 goto label1", "r6 = com sun mail iap protocol r0", "$ r3 = r6 trace input", "$ r3 set trace 1", "r7 = com sun mail iap protocol r0", "$ r4 = r7 trace output", "$ r4 set trace 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "$ r1 = com sun mail iap response atom_char_delim", "r3 = com sun mail iap response r0", "$ r2 = specialinvoke r3 read delim string $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = com sun mail iap response r0", "r3 skip space", "r4 = com sun mail iap response r0", "$ r1 = r4 buffer", "r5 = com sun mail iap response r0", "$ i1 = r5 index", "r6 = com sun mail iap response r0", "$ i0 = r6 size", "r7 = com sun mail iap response r0", "$ r2 = specialinvoke r7 to string $ r1 $ i1 $ i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = com sun mail imap acl r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun mail imap acl r0", "$ r1 = r2 right", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return \\ `` envelope internaldate rfc822 size\\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = com sun mail imap i m a p folder r0", "$ r1 = r2 expunge null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com sun mail imap i m a p folder r0", "r1 check open", "r2 = com sun mail imap i m a p folder r0", "$ z0 = r2 uid not sticky", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = new com sun mail imap i m a p folder $ 17", "r5 = com sun mail imap i m a p folder r0", "specialinvoke r4 < init > r5", "r6 = com sun mail imap i m a p folder r0", "r7 = com sun mail imap i m a p folder $ protocol command r4", "$ r2 = r6 do optional command \\ `` acl not supported\\", "$ r3 = com sun mail imap right $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r5 = com sun mail imap i m a p folder r0", "$ r1 = r5 connection pool logger", "$ r1 fine \\ `` get store protocol borrow a connection\\ ``", "r6 = com sun mail imap i m a p folder r0", "$ r2 = r6 store", "$ r3 = com sun mail imap i m a p store $ r2", "$ r4 = $ r3 get folder store protocol", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r4 = com sun mail imap i m a p message r0", "$ r1 = r4 folder", "$ r2 = com sun mail imap i m a p folder $ r1", "$ r3 = $ r2 message cache", "r5 = com sun mail imap i m a p message r0", "$ i0 = r5 get message number", "$ i1 = $ r3 seqnum of $ i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r10 = com sun mail imap i m a p message r0", "r10 check expunge", "r11 = com sun mail imap i m a p message r0", "$ z0 = r11 body load", "if $ z0 == 0 goto label1", "$ r9 = specialinvoke r0 get reply to", "return $ r9", "if $ z0 == 0 goto label1", "label r12 = com sun mail imap i m a p message r0", "specialinvoke r12 load envelope", "r13 = com sun mail imap i m a p message r0", "$ r1 = r13 envelope", "$ r2 = $ r1 reply to", "if $ r2 == null goto label2", "r14 = com sun mail imap i m a p message r0", "$ r4 = r14 envelope", "$ r5 = $ r4 reply to", "$ i0 = lengthof $ r5", "if $ i0 ! = 0 goto label3", "label r15 = com sun mail imap i m a p message r0", "$ r3 = r15 get from", "return $ r3", "if $ i0 ! = 0 goto label3", "label r16 = com sun mail imap i m a p message r0", "$ r6 = r16 envelope", "$ r7 = $ r6 reply to", "r17 = com sun mail imap i m a p message r0", "$ r8 = specialinvoke r17 aaclone $ r7", "r18 = javax mail address [ ] $ r8", "return r18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r4 = com sun mail imap i m a p message r0", "r4 check expunge", "r5 = com sun mail imap i m a p message r0", "$ z0 = r5 body load", "if $ z0 == 0 goto label1", "$ r3 = specialinvoke r0 get content m d5", "return $ r3", "if $ z0 == 0 goto label1", "label r6 = com sun mail imap i m a p message r0", "specialinvoke r6 load b o d y s t r u c t u r e", "r7 = com sun mail imap i m a p message r0", "$ r1 = r7 b", "$ r2 = $ r1 md5", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = com sun mail imap i m a p message r0", "r2 check expunge", "r3 = com sun mail imap i m a p message r0", "specialinvoke r3 load header", "$ r1 = specialinvoke r0 get all header", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = com sun mail imap i m a p store r0", "$ z0 = r1 use s s l", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = com sun mail imap i m a p store r0", "r1 = specialinvoke r6 get namespaces", "if r1 == null goto label1", "$ r3 = r1 share", "if $ r3 ! = null goto label2", "label $ r2 = specialinvoke r0 get share namespaces", "return $ r2", "if $ r3 ! = null goto label2", "label $ r4 = r1 share", "r7 = com sun mail imap i m a p store r0", "$ r5 = specialinvoke r7 namespace to folders $ r4 null", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = com sun mail imap protocol i m a p protocol r0", "$ z0 = r1 have capability \\ `` literal+\\ ``", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = com sun mail imap protocol i m a p protocol r0", "$ r1 = r5 search sequence", "if $ r1 ! = null goto label1", "r4 = new com sun mail imap protocol search sequence", "r6 = com sun mail imap protocol i m a p protocol r0", "specialinvoke r4 < init > r6", "r7 = com sun mail imap protocol i m a p protocol r0", "r7 search sequence = r4", "label r8 = com sun mail imap protocol i m a p protocol r0", "$ r2 = r8 search sequence", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = com sun mail imap resync data r0", "$ l0 = r1 modseq", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = new javax mail method not support exception", "specialinvoke r2 < init > \\ `` expunge not supported\\ ``", "r3 = java lang throwable r2", "throw r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com sun mail smtp s m t p address succeed exception r0", "$ r1 = r2 cmd", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com sun mail smtp s m t p message r0", "$ i0 = r1 return option", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun mail smtp s m t p message r0", "$ r1 = r2 extension", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ l2 = com sun mail util a s c i i utility parse long r0 i0 i1 10", "return $ l2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "$ i1 = $ i0 + 2", "$ i2 = $ i1 3", "$ i3 = $ i2 * 4", "return $ i3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label7", "r24 = com sun mail util log compact formatter r0", "r2 = r24 apply r1", "r3 = r2 get localized message", "r4 = r2 to string", "$ r6 = r2 get class", "r5 = com sun mail util log compact formatter simple class name $ r6", "$ z0 = com sun mail util log compact formatter be null or space r3", "if $ z0 ! = 0 goto label4", "$ z1 = r4 contain r3", "if $ z1 == 0 goto label3", "$ r18 = r2 get class", "$ r19 = $ r18 get name", "$ z2 = r4 start with $ r19", "if $ z2 ! = 0 goto label1", "$ z3 = r4 start with r5", "if $ z3 == 0 goto label2", "label r21 = com sun mail util log compact formatter replace class name r3 r1", "goto label5", "label $ z4 = r21 contain r5", "if $ z4 ! = 0 goto label6", "r23 = new java lang string builder", "specialinvoke r23 < init >", "$ r9 = r23 append r5", "$ r10 = $ r9 append \\ `` \\ ``", "$ r11 = $ r10 append r21", "r21 = $ r11 to string", "label goto label8", "label return r21", "if $ z3 == 0 goto label2", "label $ r20 = com sun mail util log compact formatter simple class name r4", "r21 = com sun mail util log compact formatter replace class name $ r20 r1", "if $ z1 == 0 goto label3", "label r22 = new java lang string builder", "specialinvoke r22 < init >", "$ r13 = com sun mail util log compact formatter simple class name r4", "$ r14 = r22 append $ r13", "$ r15 = $ r14 append \\ `` \\ ``", "$ r16 = $ r15 append r3", "$ r17 = $ r16 to string", "r21 = com sun mail util log compact formatter replace class name $ r17 r1", "if $ z0 ! = 0 goto label4", "label $ r7 = com sun mail util log compact formatter simple class name r4", "r21 = com sun mail util log compact formatter replace class name $ r7 r1", "if r1 == null goto label7", "label r21 = \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], []]}
{"nodes": ["r0 = @ this", "r1 = com sun mail util log duration filter r0", "$ l0 = r1 record", "$ l1 = java lang system current time millis", "r2 = com sun mail util log duration filter r0", "$ z0 = specialinvoke r2 test $ l0 $ l1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = com sun mail util log log manager property r0", "r3 = r5 get property r1", "if r3 ! = null goto label1", "$ r4 = r2", "goto label2", "label return $ r4", "if r3 ! = null goto label1", "label $ r4 = r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com sun mail util log mail handler r0", "specialinvoke r4 check access", "r5 = com sun mail util log mail handler r0", "$ z0 = r5 be write", "if $ z0 == 0 goto label1", "r3 = new java lang illegal state exception", "specialinvoke r3 < init >", "throw r3", "if $ z0 == 0 goto label1", "label r6 = com sun mail util log mail handler r0", "r6 comparator = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com sun mail util log mail handler r0", "specialinvoke r2 set mail properties0 r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r20 = com sun mail util log mail handler r0", "specialinvoke r20 check access", "$ i0 = lengthof r1", "if $ i0 ! = 0 goto label01", "r15 = com sun mail util log mail handler empty formatter array", "goto label02", "label i7 = 0", "label $ i8 = lengthof r1", "if i7 > = $ i8 goto label07", "r2 = r1 [ i7 ]", "if r2 == null goto label05", "$ i6 = r2 length", "if $ i6 < = 0 goto label04", "$ r13 = com sun mail util log mail handler $ tail name formatter of r2", "r15 [ i7 ] = $ r13", "goto label06", "label i7 = i7 + 1", "goto label03", "if $ i6 < = 0 goto label04", "label r17 = new java lang illegal argument exception", "$ r12 = com sun mail util log mail handler at index msg i7", "specialinvoke r17 < init > $ r12", "throw r17", "if r2 == null goto label05", "label r18 = new java lang null pointer exception", "$ r10 = com sun mail util log mail handler at index msg i7", "specialinvoke r18 < init > $ r10", "throw r18", "if i7 > = $ i8 goto label07", "label entermonitor r0", "label r21 = com sun mail util log mail handler r0", "$ r5 = r21 attachment formatters", "$ i3 = lengthof $ r5", "$ i2 = lengthof r1", "if $ i3 == $ i2 goto label09", "r22 = com sun mail util log mail handler r0", "$ r7 = r22 attachment formatters", "$ i5 = lengthof $ r7", "$ i4 = lengthof r1", "$ r8 = com sun mail util log mail handler attachment mismatch $ i5 $ i4", "throw $ r8", "if $ i3 == $ i2 goto label09", "label r23 = com sun mail util log mail handler r0", "$ z0 = r23 be write", "if $ z0 == 0 goto label10", "r19 = new java lang illegal state exception", "specialinvoke r19 < init >", "throw r19", "if $ z0 == 0 goto label10", "label r24 = com sun mail util log mail handler r0", "r24 attachment name = r15", "exitmonitor r0", "label goto label14", "label return", "if $ i0 ! = 0 goto label01", "label $ i1 = lengthof r1", "r15 = newarray java util log formatter [ $ i1 ]"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [], [21], [22], [23], [24], [], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [46], [47], [48], [49], [], [51], [52], [53], [54], [55], [56], [57], [58], []]}
{"nodes": ["r0 = @ this", "r2 = com sun mail util mail connect exception r0", "$ r1 = r2 host", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax mail authenticator r0", "$ r1 = r2 request protocol", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = javax mail event connection event r0", "$ i0 = r1 type", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax mail event transport event r0", "$ r1 = r2 invalid", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = @ parameter1", "r7 = javax mail folder r0", "$ r3 = r7 message count listener", "if $ r3 ! = null goto label1", "return", "if $ r3 ! = null goto label1", "label r6 = new javax mail event message count event", "r8 = javax mail folder r0", "specialinvoke r6 < init > r8 2 z0 r1", "r9 = javax mail folder r0", "$ r5 = r9 message count listener", "r10 = javax mail folder r0", "r11 = javax mail event mail event r6", "specialinvoke r10 queue event r11 $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = javax mail internet address exception r0", "$ r1 = r2 ref", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = javax mail internet address exception r0", "$ i0 = r1 po", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = javax mail internet content disposition r0", "r2 disposition = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = javax mail internet mime body part r0", "$ r2 = r3 header", "$ r2 add header line r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = javax mail internet mime message $ recipient type newsgroups", "if r1 ! = $ r3 goto label1", "if r2 == null goto label2", "$ i0 = r2 length", "if $ i0 == 0 goto label2", "r6 = javax mail internet mime message r0", "r6 add header \\ `` newsgroups\\", "goto label2", "label return", "if r1 ! = $ r3 goto label1", "label r7 = javax mail internet mime message r0", "$ r4 = specialinvoke r7 get header name r1", "$ r5 = javax mail internet internet address parse r2", "r8 = javax mail internet mime message r0", "r9 = javax mail address [ ] $ r5", "specialinvoke r8 add address header $ r4 r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "$ r1 = javax mail internet mime body part get description r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = javax mail internet mime message r0", "r2 set description r1 null", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = javax mail internet mime message r0", "r1 modify = 1", "r2 = javax mail internet mime message r0", "r2 save = 1", "r3 = javax mail internet mime message r0", "r3 update header", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r8 = new java lang string builder", "specialinvoke r8 < init >", "$ r2 = r8 append \\ `` < \\ ``", "r9 = javax mail internet mime message r0", "$ r3 = r9 session", "$ r4 = javax mail internet unique value get unique message i d value $ r3", "$ r5 = $ r2 append $ r4", "$ r6 = $ r5 append \\ `` > \\ ``", "$ r7 = $ r6 to string", "r10 = javax mail internet mime message r0", "r10 set header \\ `` message- i d\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = javax mail internet news address r0", "$ r1 = r2 newsgroup", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = javax mail message r0", "r1 expunge = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = javax mail body part r0", "r2 parent = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = javax mail provider r0", "$ r1 = r2 protocol", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = javax mail search flag term r0", "$ z0 = r1 set", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = javax mail search not term r0", "$ r2 = r3 term", "$ z0 = $ r2 match r1", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = javax mail service r0", "$ z0 = r1 connect", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = javax mail session r0", "r3 debug = z0", "r4 = javax mail session r0", "specialinvoke r4 init logger", "r5 = javax mail session r0", "$ r2 = r5 logger", "$ r1 = java util log level config", "$ r2 log $ r1 \\ `` set debug java mail version { 0 } \\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = javax mail session r0", "$ r2 = r4 prop", "$ r3 = $ r2 get property r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = javax mail session r0", "$ r2 = r11 provider", "$ r2 add element r1", "r12 = javax mail session r0", "$ r3 = r12 provider by class name", "$ r4 = r1 get class name", "$ r3 put $ r4 r1", "r13 = javax mail session r0", "$ r6 = r13 provider by protocol", "$ r7 = r1 get protocol", "$ z0 = $ r6 contain key $ r7", "if $ z0 ! = 0 goto label1", "r14 = javax mail session r0", "$ r8 = r14 provider by protocol", "$ r9 = r1 get protocol", "$ r8 put $ r9 r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 ! = null goto label1", "r7 = javax mail session r0", "$ r5 = r7 address map", "$ r5 remove r1", "goto label2", "label return", "if r2 ! = null goto label1", "label r8 = javax mail session r0", "$ r3 = r8 address map", "$ r3 put r1 r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r7 = javax mail store r0", "$ r3 = r7 store listener", "if $ r3 ! = null goto label1", "return", "if $ r3 ! = null goto label1", "label r6 = new javax mail event store event", "r8 = javax mail store r0", "specialinvoke r6 < init > r8 i0 r1", "r9 = javax mail store r0", "$ r5 = r9 store listener", "r10 = javax mail store r0", "r11 = javax mail event mail event r6", "r10 queue event r11 $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = javax mail store close exception r0", "$ r1 = r2 store", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r3 = javax servlet http http servlet request wrapper r0", "$ r1 = specialinvoke r3 _get http servlet request", "$ r2 = $ r1 get http servlet map", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "specialinvoke r0 print stack trace", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r28 = com sun xml bind v2 runtime association map r0", "$ r4 = r28 by element", "$ r5 = $ r4 get r1", "r26 = com sun xml bind v2 runtime association map $ entry $ r5", "if r26 == null goto label2", "$ r21 = com sun xml bind v2 runtime association map $ entry access $ 000 r26", "if $ r21 == null goto label1", "r29 = com sun xml bind v2 runtime association map r0", "$ r23 = r29 by peer", "$ r24 = com sun xml bind v2 runtime association map $ entry access $ 000 r26", "$ r23 remove $ r24", "label com sun xml bind v2 runtime association map $ entry access $ 002 r26 r2", "goto label3", "label r30 = com sun xml bind v2 runtime association map r0", "$ r9 = r30 by element", "$ r9 put r1 r26", "r31 = com sun xml bind v2 runtime association map r0", "$ r11 = r31 by peer", "$ r12 = $ r11 put r2 r26", "r3 = com sun xml bind v2 runtime association map $ entry $ r12", "if r3 == null goto label5", "$ r13 = com sun xml bind v2 runtime association map $ entry access $ 200 r3", "if $ r13 == null goto label4", "r32 = com sun xml bind v2 runtime association map r0", "$ r18 = r32 by peer", "$ r19 = com sun xml bind v2 runtime association map $ entry access $ 200 r3", "$ r18 remove $ r19", "label $ r14 = com sun xml bind v2 runtime association map $ entry access $ 100 r3", "if $ r14 == null goto label5", "r33 = com sun xml bind v2 runtime association map r0", "$ r15 = r33 by element", "$ r16 = com sun xml bind v2 runtime association map $ entry access $ 100 r3", "$ r15 remove $ r16", "label return", "if r26 == null goto label2", "label r27 = new com sun xml bind v2 runtime association map $ entry", "specialinvoke r27 < init >", "r26 = r27", "com sun xml bind v2 runtime association map $ entry access $ 102 r27 r1", "com sun xml bind v2 runtime association map $ entry access $ 002 r27 r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r4 = new com sun codemodel j annotation string value", "$ r3 = com sun codemodel j expr light z0", "specialinvoke r4 < init > $ r3", "r5 = com sun codemodel j annotation use r0", "r6 = com sun codemodel j annotation value r4", "specialinvoke r5 add value r1 r6", "r7 = com sun codemodel j annotation use r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new com sun codemodel j while loop", "specialinvoke r5 < init > r1", "r6 = com sun codemodel j block r0", "$ r3 = specialinvoke r6 insert r5", "$ r4 = com sun codemodel j while loop $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r5 = new com sun codemodel j block", "specialinvoke r5 < init >", "r5 brace require = 0", "r5 indent require = 0", "r6 = com sun codemodel j block r0", "$ r3 = specialinvoke r6 insert r5", "$ r4 = com sun codemodel j block $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "$ r1 = com sun codemodel j class empty_array", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = com sun codemodel j code model r0", "$ r2 = r9 package", "$ r3 = $ r2 get r1", "r7 = com sun codemodel j package $ r3", "if r7 ! = null goto label1", "r8 = new com sun codemodel j package", "r10 = com sun codemodel j code model r0", "specialinvoke r8 < init > r1 r10", "r7 = r8", "r11 = com sun codemodel j code model r0", "$ r5 = r11 package", "$ r5 put r1 r8", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = r1 last index of 46", "if i0 > = 0 goto label1", "r8 = com sun codemodel j code model r0", "$ r6 = r8 root package", "$ r7 = $ r6 _get class r1", "return $ r7", "if i0 > = 0 goto label1", "label $ r2 = r1 substring 0 i0", "r9 = com sun codemodel j code model r0", "$ r3 = r9 _package $ r2", "$ i1 = i0 + 1", "$ r4 = r1 substring $ i1", "$ r5 = $ r3 _get class $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r3 = com sun codemodel j define class r0", "$ r2 = r3 class type", "$ r1 = com sun codemodel class type annotation_type_decl", "if $ r2 ! = $ r1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r2 ! = $ r1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r5 = com sun codemodel j define class r0", "$ r1 = r5 init", "if $ r1 ! = null goto label1", "r4 = new com sun codemodel j block", "specialinvoke r4 < init >", "r6 = com sun codemodel j define class r0", "r6 init = r4", "label r7 = com sun codemodel j define class r0", "$ r2 = r7 init", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = com sun codemodel j enum constant r0", "$ r3 = r9 annotation", "if $ r3 ! = null goto label1", "r7 = new java util array list", "specialinvoke r7 < init >", "r10 = com sun codemodel j enum constant r0", "r10 annotation = r7", "label r8 = new com sun codemodel j annotation use", "specialinvoke r8 < init > r1", "r11 = com sun codemodel j enum constant r0", "$ r5 = r11 annotation", "$ r5 add r8", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = com sun codemodel j method r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun codemodel j method r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = com sun codemodel j method r0", "$ r2 = r6 params", "r7 = com sun codemodel j method r0", "$ r1 = r7 params", "$ i0 = $ r1 size", "$ r3 = newarray com sun codemodel j var [ $ i0 ]", "$ r4 = $ r2 to array $ r3", "$ r5 = com sun codemodel j var [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r6 = com sun codemodel j package r0", "$ r1 = r6 jdoc", "if $ r1 ! = null goto label1", "r5 = new com sun codemodel j doc comment", "r7 = com sun codemodel j package r0", "$ r4 = r7 owner", "specialinvoke r5 < init > $ r4", "r8 = com sun codemodel j package r0", "r8 jdoc = r5", "label r9 = com sun codemodel j package r0", "$ r2 = r9 jdoc", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 index of 46", "if $ i0 < 0 goto label1", "r20 = new java lang illegal argument exception", "r19 = new java lang string builder", "specialinvoke r19 < init >", "$ r14 = r19 append \\ `` j class name contain \\ ' \\ ' \\ ``", "$ r15 = $ r14 append r1", "$ r16 = $ r15 to string", "specialinvoke r20 < init > $ r16", "throw r20", "if $ i0 < 0 goto label1", "label r17 = \\ `` \\ ``", "r23 = com sun codemodel j package r0", "$ z0 = r23 be unnamed", "if $ z0 ! = 0 goto label2", "r21 = new java lang string builder", "specialinvoke r21 < init >", "r24 = com sun codemodel j package r0", "$ r9 = r24 name", "$ r10 = r21 append $ r9", "$ r11 = $ r10 append 46", "r17 = $ r11 to string", "label r22 = new java lang string builder", "specialinvoke r22 < init >", "$ r3 = r22 append r17", "$ r4 = $ r3 append r1", "r18 = $ r4 to string", "r25 = com sun codemodel j package r0", "$ r5 = r25 owner", "$ r6 = java lang class for name r18", "$ r7 = $ r5 ref $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["i0 = @ parameter0", "if 55296 > i0 goto label1", "if i0 > 56319 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if i0 > 56319 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 - 65536", "$ i2 = $ i1 > > 10", "$ i3 = $ i2 & 1023", "$ i4 = 55296 | $ i3", "$ c5 = char $ i4", "return $ c5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 - 65536", "$ i2 = $ i1 & 1023", "$ i3 = 56320 | $ i2", "$ c4 = char $ i3", "return $ c4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = com sun org apache xml internal resolver catalog r0", "$ r1 = r3 base", "$ r2 = $ r1 to string", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get tag name", "$ i0 = r1 index of 58", "if $ i0 < = 0 goto label1", "$ i1 = r1 index of 58", "$ i2 = $ i1 + 1", "r1 = r1 substring $ i2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = null goto label1", "r16 = com sun org apache xml internal resolver reader s a x catalog reader r0", "$ r12 = r16 namespace map", "$ r13 = $ r12 get r2", "$ r14 = java lang string $ r13", "return $ r14", "if r1 ! = null goto label1", "label r17 = com sun org apache xml internal resolver reader s a x catalog reader r0", "$ r4 = r17 namespace map", "r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r5 = r15 append \\ `` { \\ ``", "$ r6 = $ r5 append r1", "$ r7 = $ r6 append \\ `` } \\ ``", "$ r8 = $ r7 append r2", "$ r9 = $ r8 to string", "$ r10 = $ r4 get $ r9", "$ r11 = java lang string $ r10", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com sun tool jxc gen config n g c c runtime r0", "$ r2 = r5 current handler", "if $ r2 == null goto label1", "r4 = new java lang illegal state exception", "specialinvoke r4 < init >", "throw r4", "if $ r2 == null goto label1", "label r6 = com sun tool jxc gen config n g c c runtime r0", "r7 = com sun tool jxc gen config n g c c event receiver r1", "r6 current handler = r7", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r3 = new java lang illegal argument exception", "specialinvoke $ r3 < init >", "throw $ r3", "if r0 ! = null goto label1", "label $ r1 = com sun xml bind api impl name converter standard", "$ r2 = $ r1 to package name r0", "return $ r2"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 equal \\ `` preserve\\ ``", "if $ z0 == 0 goto label1", "$ r4 = com sun tool xjc generator util whitespace normalizer preserve", "return $ r4", "if $ z0 == 0 goto label1", "label $ z1 = r0 equal \\ `` replace\\ ``", "if $ z1 == 0 goto label2", "$ r3 = com sun tool xjc generator util whitespace normalizer replace", "return $ r3", "if $ z1 == 0 goto label2", "label $ z2 = r0 equal \\ `` collapse\\ ``", "if $ z2 == 0 goto label3", "$ r2 = com sun tool xjc generator util whitespace normalizer collapse", "return $ r2", "if $ z2 == 0 goto label3", "label $ r1 = new java lang illegal argument exception", "specialinvoke $ r1 < init > r0", "throw $ r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r19 = com sun tool xjc model c element info r0", "$ r3 = r19 squeeze name", "if $ r3 == null goto label1", "r20 = com sun tool xjc model c element info r0", "$ r17 = r20 squeeze name", "return $ r17", "if $ r3 == null goto label1", "label r18 = new java lang string builder", "specialinvoke r18 < init >", "r21 = com sun tool xjc model c element info r0", "r2 = r21 get scope", "if r2 == null goto label2", "$ r15 = r2 get squeeze name", "r18 append $ r15", "label r22 = com sun tool xjc model c element info r0", "$ r5 = r22 class name", "if $ r5 == null goto label3", "r23 = com sun tool xjc model c element info r0", "$ r13 = r23 class name", "r18 append $ r13", "goto label4", "label $ r12 = r18 to string", "return $ r12", "if $ r5 == null goto label3", "label r24 = com sun tool xjc model c element info r0", "$ r6 = r24 model", "$ r7 = $ r6 get name converter", "r25 = com sun tool xjc model c element info r0", "$ r8 = r25 tag name", "$ r9 = $ r8 get local part", "$ r10 = $ r7 to class name $ r9", "r18 append $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i1 = r1 min", "r6 = com sun tool xjc model multiplicity r0", "$ i0 = r6 min", "if $ i1 > = $ i0 goto label1", "return 0", "if $ i1 > = $ i0 goto label1", "label r7 = com sun tool xjc model multiplicity r0", "$ r2 = r7 max", "if $ r2 ! = null goto label2", "return 1", "if $ r2 ! = null goto label2", "label $ r3 = r1 max", "if $ r3 ! = null goto label3", "label $ r4 = r1 max", "$ i2 = $ r4 int value", "r8 = com sun tool xjc model multiplicity r0", "$ r5 = r8 max", "$ i3 = $ r5 int value", "if $ i2 > $ i3 goto label4", "$ z0 = 1", "goto label5", "label return $ z0", "if $ i2 > $ i3 goto label4", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], []]}
{"nodes": ["r0 = @ this", "r3 = com sun tool xjc reader dtd bindinfo b i element r0", "$ r1 = r3 e", "$ r2 = com sun tool xjc reader dtd bindinfo d o m locator get location info $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r8 = com sun tool xjc reader dtd bindinfo bind info r0", "$ r2 = r8 dom", "r1 = com sun tool xjc reader dtd bindinfo d o m util get element $ r2 \\ `` http java sun com xml n jaxb xjc\\", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label r5 = com sun tool xjc reader dtd bindinfo d o m util get attribute r1 \\ `` name\\ ``", "if r5 ! = null goto label3", "label return null", "if r5 ! = null goto label3", "label r9 = com sun tool xjc reader dtd bindinfo bind info r0", "$ r3 = r9 code model", "r6 = $ r3 _class r5", "r6 hide", "label goto label6", "label r11 = com sun codemodel j class r6", "return r11"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = com sun tool xjc reader dtd bindinfo bind info r0", "$ r3 = r7 conversion", "$ r4 = $ r3 get r1", "r2 = com sun tool xjc reader dtd bindinfo b i conversion $ r4", "if r2 ! = null goto label1", "r6 = new java lang assertion error", "specialinvoke r6 < init > \\ `` undefined conversion name this should be check by the validator before we read it\\ ``", "throw r6", "if r2 ! = null goto label1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r10 = com sun tool xjc reader xmlschema b g m builder r0", "$ r3 = r10 to purple", "r11 = com sun xml xsom visitor x s function $ r3", "$ r4 = r1 apply r11", "$ r5 = java lang boolean $ r4", "$ z0 = $ r5 boolean value", "if $ z0 == 1 goto label1", "r12 = com sun tool xjc reader xmlschema b g m builder r0", "$ r7 = r12 get class selector", "$ r8 = $ r7 bind to type r1 r2", "if $ r8 == null goto label2", "label r13 = com sun tool xjc reader xmlschema b g m builder r0", "$ r6 = r13 purple", "r14 = com sun xml xsom visitor x s visitor $ r6", "r1 visit r14", "goto label3", "label return", "if $ r8 == null goto label2", "label r15 = com sun tool xjc reader xmlschema b g m builder r0", "$ r9 = r15 green", "r16 = com sun xml xsom visitor x s visitor $ r9", "r1 visit r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "$ r1 = com sun tool xjc reader xmlschema bindinfo b i x substitutable name", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "label r5 = com sun tool xjc reader xmlschema class selector r0", "$ r1 = r5 bind queue", "$ i0 = $ r1 size", "if $ i0 == 0 goto label2", "r6 = com sun tool xjc reader xmlschema class selector r0", "$ r2 = r6 bind queue", "$ r3 = $ r2 pop", "$ r4 = com sun tool xjc reader xmlschema class selector $ bind $ r3", "$ r4 build", "goto label1", "if $ i0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "$ r1 = newarray java lang object [ 3 ]", "r8 = com sun tool xjc reader xmlschema collision info r0", "$ r2 = r8 name", "$ r1 [ 0 ] = $ r2", "r9 = com sun tool xjc reader xmlschema collision info r0", "$ r3 = r9 source1", "r10 = com sun tool xjc reader xmlschema collision info r0", "$ r4 = specialinvoke r10 print locator $ r3", "$ r1 [ 1 ] = $ r4", "r11 = com sun tool xjc reader xmlschema collision info r0", "$ r5 = r11 source2", "r12 = com sun tool xjc reader xmlschema collision info r0", "$ r6 = specialinvoke r12 print locator $ r5", "$ r1 [ 2 ] = $ r6", "$ r7 = com sun tool xjc reader xmlschema message format \\ `` collision info collision info\\", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = com sun tool xjc reader xmlschema ct complex type field builder r0", "$ r3 = r7 complex type bind mode", "$ r4 = $ r3 get r1", "r2 = com sun tool xjc reader xmlschema ct complex type bind mode $ r4", "$ z0 = com sun tool xjc reader xmlschema ct complex type field builder $ assertion disable", "if $ z0 ! = 0 goto label1", "if r2 ! = null goto label1", "r6 = new java lang assertion error", "specialinvoke r6 < init >", "throw r6", "if r2 ! = null goto label1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r12 = com sun tool xjc x j c2 task r0", "$ r5 = r12 option", "r11 = new java net url", "specialinvoke r11 < init > r1", "r13 = com sun tool xjc x j c2 task r0", "$ r6 = specialinvoke r13 get input source r11", "$ r5 add grammar $ r6", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com sun tool xjc x j c2 task r0", "$ r2 = r3 option", "$ r2 default package = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "r3 = com sun tool xjc x j c2 task r0", "$ r2 = r3 option", "$ r2 compatibility mode = 2", "goto label2", "label return", "if z0 == 0 goto label1", "label r4 = com sun tool xjc x j c2 task r0", "$ r1 = r4 option", "$ r1 compatibility mode = 1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = com sun xml dtdparser d t d parser r0", "$ r1 = r2 locale", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com sun xml dtdparser d t d parser r0", "r2 resolver = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = com sun xml dtdparser xml reader r0", "$ r1 = r3 in", "if $ r1 == null goto label1", "r4 = com sun xml dtdparser xml reader r0", "$ r2 = r4 in", "$ r2 reset", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com sun xml xsom impl complex type impl r0", "$ r2 = r5 base type", "$ z0 = $ r2 instanceof com sun xml xsom impl parser delay ref", "if $ z0 == 0 goto label1", "r6 = com sun xml xsom impl complex type impl r0", "$ r3 = r6 base type", "$ r4 = com sun xml xsom impl parser delay ref $ r3", "r7 = com sun xml xsom x s declaration r1", "$ r4 redefine r7", "goto label2", "label r10 = com sun xml xsom impl complex type impl r0", "r1 redefine by = r10", "$ s0 = r1 redefine count", "$ i1 = $ s0 + 1", "$ s2 = short $ i1", "r11 = com sun xml xsom impl complex type impl r0", "r11 redefine count = $ s2", "return", "if $ z0 == 0 goto label1", "label r8 = com sun xml xsom impl complex type impl r0", "r9 = com sun xml xsom impl ref $ type r1", "r8 base type = r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "$ r1 = r0 to string", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org kohsuke rngom digest d ref pattern r0", "$ r1 = r3 target", "$ r2 = $ r1 get name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org jboss classfilewriter util descriptor utils make descriptor r2", "r5 = org jboss classfilewriter class file r0", "$ r4 = r5 add field i0 r1 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r5 = org jboss classfilewriter code lookup switch builder r0", "$ r3 = r5 value", "r4 = new org jboss classfilewriter code lookup switch builder $ value pair", "specialinvoke r4 < init > i0 r1", "$ r3 add r4", "r6 = org jboss classfilewriter code lookup switch builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r7 = org jboss classfilewriter code stack frame r0", "$ r2 = r7 stack state", "r1 = $ r2 pop 4", "r6 = new org jboss classfilewriter code stack frame", "r8 = org jboss classfilewriter code stack frame r0", "$ r4 = r8 local variable state", "r9 = org jboss classfilewriter code stack frame r0", "$ r5 = specialinvoke r9 type no local change r1", "specialinvoke r6 < init > r1 $ r4 $ r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r14 = org jboss classfilewriter code stack frame r0", "$ r4 = r14 stack state", "$ r5 = $ r4 get content", "r15 = org jboss classfilewriter code stack frame r0", "$ r6 = r15 stack state", "$ r7 = $ r6 get content", "$ i1 = $ r7 size", "$ i2 = $ i1 - 1", "$ i3 = $ i2 - i0", "$ r8 = $ r5 get $ i3", "r1 = org jboss classfilewriter code stack entry $ r8", "r16 = org jboss classfilewriter code stack frame r0", "$ r9 = r16 stack state", "r2 = $ r9 constructor call i0 r1", "r17 = org jboss classfilewriter code stack frame r0", "$ r10 = r17 local variable state", "r3 = $ r10 constructor call r1", "r13 = new org jboss classfilewriter code stack frame", "$ r12 = org jboss classfilewriter code stack frame type full_frame", "specialinvoke r13 < init > r2 r3 $ r12", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = new java lang string builder", "specialinvoke r13 < init > \\ `` parse \\\\\\ `` \\ ``", "r14 = com beust jcommander j commander r0", "$ r4 = specialinvoke r14 join r1", "$ r5 = $ r4 append \\ `` \\\\\\ `` \\n with\\ ``", "r15 = com beust jcommander j commander r0", "$ r6 = r15 m_objects", "$ r7 = $ r6 to array", "r16 = com beust jcommander j commander r0", "$ r8 = specialinvoke r16 join $ r7", "$ r9 = $ r5 append $ r8", "r13 append $ r9", "$ r11 = r13 to string", "r17 = com beust jcommander j commander r0", "specialinvoke r17 p $ r11", "r18 = com beust jcommander j commander r0", "specialinvoke r18 create description", "r19 = com beust jcommander j commander r0", "specialinvoke r19 initialize default value", "r20 = com beust jcommander j commander r0", "$ r12 = specialinvoke r20 expand args r1", "r21 = com beust jcommander j commander r0", "specialinvoke r21 parse value $ r12", "r22 = com beust jcommander j commander r0", "specialinvoke r22 validate option", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r5 = new java lang string builder", "specialinvoke r5 < init >", "r6 = com beust jcommander j commander r0", "r6 usage r5", "$ r3 = java lang system out", "$ r4 = r5 to string", "$ r3 println $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r5 = new java lang string builder", "specialinvoke r5 < init >", "r6 = com beust jcommander j commander r0", "r6 usage r5", "$ r3 = java lang system out", "$ r4 = r5 to string", "$ r3 println $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = new com beust jcommander j commander", "specialinvoke r7 < init > r2", "r7 set program name r1", "r8 = com beust jcommander j commander r0", "$ r5 = r8 m_commands", "$ r5 put r1 r7", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r4 = com beust jcommander j commander r0", "$ r1 = r4 program name", "if $ r1 ! = null goto label1", "$ r3 = null", "goto label2", "label return $ r3", "if $ r1 ! = null goto label1", "label r5 = com beust jcommander j commander r0", "$ r2 = r5 program name", "$ r3 = $ r2 get name"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "r1 = @ parameter2", "$ r2 = org jctools util unsafe access unsafe", "$ r2 put order object r0 l0 r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org jdom2 attribute r0", "$ z0 = r1 specify", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org jdom2 attribute r0", "r1 specify = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org jdom2 attribute r0", "$ r1 = r3 parent", "if $ r1 == null goto label1", "r4 = org jdom2 attribute r0", "$ r2 = r4 parent", "r5 = org jdom2 attribute r0", "$ r2 remove attribute r5", "label r6 = org jdom2 attribute r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org jdom2 attribute r1", "r3 = org jdom2 attribute list r0", "r3 add i0 $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jdom2 attribute list r0", "$ i0 = r2 size", "r3 = org jdom2 attribute list r0", "$ z0 = r3 add all $ i0 r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org jdom2 attribute list r0", "$ r1 = r2 get i0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jdom2 content r0", "$ r1 = r2 ctype", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = new org jdom2 descendant iterator", "specialinvoke r2 < init > r0", "r3 = org jdom2 util iterator iterable r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org jdom2 filter filter fboolean", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org jdom2 input d o m builder r0", "$ r2 = r5 factory", "$ r3 = r1 get node value", "$ r4 = $ r2 cdata $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r7 = org jdom2 input sax s a x handler r0", "r7 current locator = null", "r8 = org jdom2 input sax s a x handler r0", "$ r1 = r8 factory", "$ r2 = $ r1 document null", "r9 = org jdom2 input sax s a x handler r0", "r9 current document = $ r2", "r10 = org jdom2 input sax s a x handler r0", "r10 current element = null", "r11 = org jdom2 input sax s a x handler r0", "r11 at root = 1", "r12 = org jdom2 input sax s a x handler r0", "r12 in d t d = 0", "r13 = org jdom2 input sax s a x handler r0", "r13 in internal subset = 0", "r14 = org jdom2 input sax s a x handler r0", "r14 previous c d a t a = 0", "r15 = org jdom2 input sax s a x handler r0", "r15 in c d a t a = 0", "r16 = org jdom2 input sax s a x handler r0", "r16 expand = 1", "r17 = org jdom2 input sax s a x handler r0", "r17 suppress = 0", "r18 = org jdom2 input sax s a x handler r0", "r18 entity depth = 0", "r19 = org jdom2 input sax s a x handler r0", "$ r3 = r19 declare namespaces", "$ r3 clear", "r20 = org jdom2 input sax s a x handler r0", "$ r4 = r20 internal subset", "$ r4 set length 0", "r21 = org jdom2 input sax s a x handler r0", "$ r5 = r21 text buffer", "$ r5 clear", "r22 = org jdom2 input sax s a x handler r0", "$ r6 = r22 external entity", "$ r6 clear", "r23 = org jdom2 input sax s a x handler r0", "r23 ignore white = 0", "r24 = org jdom2 input sax s a x handler r0", "r24 ignore boundary white = 0", "r25 = org jdom2 input sax s a x handler r0", "r25 reset sub c lass", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], []]}
{"nodes": ["r0 = @ this", "r2 = org jdom2 input sax x m l reader s a x2 factory r0", "$ r1 = r2 saxdriver", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r3 = org jdom2 input s a x builder defaultsaxhandlerfac", "goto label2", "label r4 = org jdom2 input s a x builder r0", "r4 handlerfac = $ r3", "r5 = org jdom2 input s a x builder r0", "r5 engine = null", "return", "if r1 ! = null goto label1", "label $ r3 = r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org jdom2 input s a x builder r0", "r1 expand = z0", "r2 = org jdom2 input s a x builder r0", "r2 engine = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "label $ r3 = java lang system get property r0 r1", "label return $ r3"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org jdom2 output d o m outputter r0", "$ r3 = r7 processor", "r8 = org jdom2 output d o m outputter r0", "$ r2 = r8 adapter", "$ r4 = $ r2 create document", "r9 = org jdom2 output d o m outputter r0", "$ r5 = r9 format", "$ r6 = $ r3 process $ r4 $ r5 r1", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jdom2 internal reflection constructor construct r0 class \\ `` lorg jdom2 xpath x path factory \\ ``", "$ r2 = org jdom2 xpath x path factory $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java net uri create r1", "r4 = com sun jersey api client client r0", "$ r3 = r4 resource $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java net uri create r1", "r4 = com sun jersey api client client r0", "$ r3 = r4 async resource $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = new com sun jersey api client client", "$ r1 = com sun jersey api client client create default client hander", "specialinvoke $ r0 < init > $ r1", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com sun jersey api client client request r0", "$ z0 = r2 get property a feature r1 0", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = newarray java lang annotation annotation [ 0 ]", "r2 = org glassfish jersey internal inject provider get service handle r0 r1 $ r3", "$ r4 = org glassfish jersey internal inject provider get class r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org glassfish jersey internal util collection link transfer queue r0", "specialinvoke r3 xfer r1 1 1 0l", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = new com sun jersey json impl j s o n marshaller impl", "r4 = com sun jersey api json j s o n j a x b context r0", "$ r2 = r4 get j s o n configuration", "specialinvoke r3 < init > r0 $ r2", "r5 = com sun jersey api json j s o n marshaller r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jersey api json j s o n with pad r0", "$ r1 = r2 callback name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com sun jersey json impl impl message localizer", "$ r3 = com sun jersey json impl impl message localizable e r r o r_ n o n g e_ j s o n p_ m s g_ b o d y_ w r i t e r_ n o t_ f o u n d r0 r1", "$ r4 = $ r2 localize $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org glassfish jersey jaxb internal jaxb string reader provider r0", "$ r4 = r9 mt unmarshaller", "$ r5 = $ r4 get", "r2 = javax w r ext context resolver $ r5", "if r2 == null goto label1", "$ r8 = r2 get context r1", "r3 = javax xml bind unmarshaller $ r8", "if r3 == null goto label1", "return r3", "if r3 == null goto label1", "label r10 = org glassfish jersey jaxb internal jaxb string reader provider r0", "$ r6 = specialinvoke r10 get j a x b context r1", "$ r7 = $ r6 create unmarshaller", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "r1 = java lang system get property \\ `` java class path\\ ``", "$ r3 = java io file path separator", "r2 = r1 split $ r3", "$ r4 = com sun jersey api container container factory create container r0 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jersey api core resource config r0", "$ r1 = specialinvoke r2 get filter list \\ `` com sun jersey spi container resource filters\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r19 = com sun jersey api core scan resource config r0", "r19 scanner = r1", "r18 = new com sun jersey spi scan path provider scanner listener", "specialinvoke r18 < init >", "r20 = com sun jersey core spi scan scanner listener r18", "r1 scan r20", "r21 = com sun jersey api core scan resource config r0", "$ r6 = r21 get class", "r22 = com sun jersey spi scan annotation scanner listener r18", "$ r7 = r22 get annotate class", "$ r6 add all $ r7", "$ r9 = com sun jersey api core scan resource config logger", "$ r8 = java util log level info", "$ z1 = $ r9 be loggable $ r8", "if $ z1 == 0 goto label4", "r23 = com sun jersey api core scan resource config r0", "$ r10 = r23 get class", "$ z3 = $ r10 be empty", "if $ z3 ! = 0 goto label4", "r24 = com sun jersey api core scan resource config r0", "r3 = specialinvoke r24 get class \\ `` ljavax w rs path \\ ``", "$ z4 = r3 be empty", "if $ z4 == 0 goto label1", "$ r14 = com sun jersey api core scan resource config logger", "$ r13 = java util log level info", "$ r14 log $ r13 \\ `` no root resource class find \\ ``", "goto label2", "label r26 = com sun jersey api core scan resource config r0", "r4 = specialinvoke r26 get class \\ `` ljavax w r ext provider \\ ``", "$ z5 = r4 be empty", "if $ z5 == 0 goto label3", "$ r12 = com sun jersey api core scan resource config logger", "$ r11 = java util log level info", "$ r12 log $ r11 \\ `` no provider class find \\ ``", "goto label4", "label r28 = com sun jersey api core scan resource config r0", "$ r15 = r28 cache class", "$ r15 clear", "r29 = com sun jersey api core scan resource config r0", "$ r16 = r29 cache class", "r30 = com sun jersey api core scan resource config r0", "$ r17 = r30 get class", "$ r16 add all $ r17", "return", "if $ z5 == 0 goto label3", "label r27 = com sun jersey api core scan resource config r0", "specialinvoke r27 log class \\ `` provider class found\\", "if $ z4 == 0 goto label1", "label r25 = com sun jersey api core scan resource config r0", "specialinvoke r25 log class \\ `` root resource class found\\"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [], [38], [39], [40], [41], [42], [43], [44], [45], [], [47], [48], [49], [50], [51], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jersey api param exception r0", "$ r1 = r2 default string value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get request header", "$ r2 = $ r1 get first \\ `` content- type\\ ``", "$ r3 = java lang string $ r2", "$ r4 = com sun jersey server impl model http helper get content type $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jersey server impl uri rule automata trie node r0", "r1 = r2 first arc", "label if r1 == null goto label2", "r1 pack", "r1 = r1 next", "goto label1", "label if r1 == null goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com sun jersey server impl uri rule base rule r0", "$ r3 = r5 template", "r6 = com sun jersey server impl uri rule base rule r0", "$ r2 = r6 template", "$ r4 = $ r2 get template variable", "r1 push match $ r3 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com sun jersey spi container adapt container request r0", "$ r2 = r3 acr", "$ r2 set method r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jersey spi container servlet servlet container r0", "$ r1 = r2 web component", "$ r1 load", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com sun research w wadl doc r0", "r2 title = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com sun research w wadl include r0", "$ r1 = r2 href", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun research w wadl link r0", "$ r1 = r2 resource type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com sun research w wadl param r0", "r2 require = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = com sun research w wadl resource r0", "$ r1 = r3 query type", "if $ r1 ! = null goto label1", "return \\ `` application x-www-form-urlencoded\\ ``", "if $ r1 ! = null goto label1", "label r4 = com sun research w wadl resource r0", "$ r2 = r4 query type", "return $ r2"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r5 = com sun research w wadl response r0", "$ r1 = r5 representation or fault", "if $ r1 ! = null goto label1", "r4 = new java util array list", "specialinvoke r4 < init >", "r6 = com sun research w wadl response r0", "r6 representation or fault = r4", "label r7 = com sun research w wadl response r0", "$ r2 = r7 representation or fault", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org glassfish jersey server chunk output r0", "$ z0 = r6 close", "if $ z0 == 0 goto label1", "r5 = new java io i o exception", "$ r4 = org glassfish jersey server internal localization message chunked_output_closed", "specialinvoke r5 < init > $ r4", "throw r5", "if $ z0 == 0 goto label1", "label if r1 == null goto label2", "r7 = org glassfish jersey server chunk output r0", "$ r2 = r7 queue", "$ r2 add r1", "label r8 = org glassfish jersey server chunk output r0", "specialinvoke r8 flush queue", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey server container request r0", "$ r1 = r2 property delegate", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey server container request r0", "$ r1 = r2 request uri", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org glassfish jersey server container request r0", "$ r2 = r5 get header", "$ r3 = $ r2 get r1", "$ r4 = java util list $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = r0 length", "if $ i0 == 0 goto label1", "$ z0 = r0 contain \\ `` ? \\ ``", "if $ z0 ! = 0 goto label2", "label return r0", "if $ z0 ! = 0 goto label2", "label $ i1 = r0 index of \\ `` ? \\ ``", "$ r1 = r0 substring 0 $ i1", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if class \\ `` ljava util list \\ `` ! = r0 goto label1", "r12 = new org glassfish jersey server internal inject string collection extractor $ list string", "specialinvoke r12 < init > r1 r2", "r17 = org glassfish jersey server internal inject string collection extractor r12", "return r17", "if class \\ `` ljava util list \\ `` ! = r0 goto label1", "label if class \\ `` ljava util set \\ `` ! = r0 goto label2", "r13 = new org glassfish jersey server internal inject string collection extractor $ set string", "specialinvoke r13 < init > r1 r2", "r18 = org glassfish jersey server internal inject string collection extractor r13", "return r18", "label if class \\ `` ljava util set \\ `` ! = r0 goto label2", "label if class \\ `` ljava util sort set \\ `` ! = r0 goto label3", "r14 = new org glassfish jersey server internal inject string collection extractor $ sort set string", "specialinvoke r14 < init > r1 r2", "r19 = org glassfish jersey server internal inject string collection extractor r14", "return r19", "label if class \\ `` ljava util sort set \\ `` ! = r0 goto label3", "label r16 = new java lang runtime exception", "r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r5 = r15 append \\ `` unsupported collection type \\ ``", "$ r6 = r0 get name", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 to string", "specialinvoke r16 < init > $ r8", "throw r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["$ r0 = org glassfish jersey server internal localization message localizer", "$ r1 = org glassfish jersey server internal localization message localizable l o g g i n g_ m e s s a g e_ b o d y_ r e a d e r s", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey server internal localization message localizer", "$ r2 = org glassfish jersey server internal localization message localizable e r r o r_ s c a n n i n g_ c l a s s_ n o t_ f o u n d r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org glassfish jersey server internal localization message localizer", "$ r3 = org glassfish jersey server internal localization message localizable e r r o r_ w a d l_ b u i l d e r_ g e n e r a t i o n_ r e s o u r c e_ p a t h r0 r1", "$ r4 = $ r2 localize $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey server internal localization message localizer", "$ r2 = org glassfish jersey server internal localization message localizable e r r o r_ c l o s i n g_ f i n d e r r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org glassfish jersey server internal localization message localizer", "$ r1 = org glassfish jersey server internal localization message localizable c a l l b a c k_ a r r a y_ n u l l", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish jersey server internal localization message localizer", "$ r1 = org glassfish jersey server internal localization message localizable e r r o r_ w r i t i n g_ r e s p o n s e_ e n t i t y", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish jersey server internal localization message localizer", "$ r1 = org glassfish jersey server internal localization message localizable r c_ n o t_ m o d i f i a b l e", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish jersey server internal localization message localizer", "$ r1 = org glassfish jersey server internal localization message localizable l o g g i n g_ g l o b a l_ r e s p o n s e_ f i l t e r s", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r25 = org glassfish jersey server internal monitoring jmx resource mx bean impl r0", "$ r7 = r25 method execution statistic bean", "$ r8 = r1 get resource method execution statistic", "$ r7 update execution statistic $ r8", "r26 = org glassfish jersey server internal monitoring jmx resource mx bean impl r0", "$ r9 = r26 request execution statistic bean", "$ r10 = r1 get request execution statistic", "$ r9 update execution statistic $ r10", "$ r11 = r1 get resource method statistic", "$ r12 = $ r11 entry set", "r2 = $ r12 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r13 = r2 next", "r3 = java util map $ entry $ r13", "$ r14 = r3 get value", "r4 = org glassfish jersey server monitoring resource method statistic $ r14", "$ r15 = r3 get key", "r5 = org glassfish jersey server model resource method $ r15", "r6 = org glassfish jersey server internal monitoring monitoring utils get method unique id r5", "r27 = org glassfish jersey server internal monitoring jmx resource mx bean impl r0", "$ r16 = r27 resource method", "$ r17 = $ r16 get r6", "r23 = org glassfish jersey server internal monitoring jmx resource method m x bean impl $ r17", "if r23 ! = null goto label2", "r24 = new org glassfish jersey server internal monitoring jmx resource method m x bean impl", "r28 = org glassfish jersey server internal monitoring jmx resource mx bean impl r0", "$ z1 = r28 uri resource", "r29 = org glassfish jersey server internal monitoring jmx resource mx bean impl r0", "$ r20 = r29 m bean exposer", "r30 = org glassfish jersey server internal monitoring jmx resource mx bean impl r0", "$ r19 = r30 resource property name", "specialinvoke r24 < init > r4 $ z1 $ r20 $ r19 r6", "r23 = r24", "r31 = org glassfish jersey server internal monitoring jmx resource mx bean impl r0", "$ r21 = r31 resource method", "$ r21 put r6 r24", "label r23 update resource method statistic r4", "goto label1", "if $ z0 == 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey server internal processing provider r0", "$ r1 = r2 global request filter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org glassfish jersey server internal routing uri rout context r0", "r1 decode query params view = null", "r2 = org glassfish jersey server internal routing uri rout context r0", "r2 encode query params view = null", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey server model component model validator r0", "$ r1 = r2 issue list", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org glassfish jersey server model resource method r0", "$ r1 = r3 data", "$ r2 = $ r1 get type", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey server model runtime resource r0", "$ r1 = r2 regex", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r48 = org glassfish jersey internal property delegate r0", "r1 = org glassfish jersey message internal tracing logger get instance r48", "$ r2 = org glassfish jersey server internal server trace event start", "r49 = org glassfish jersey message internal tracing logger $ event $ r2", "$ z0 = r1 be log enable r49", "if $ z0 == 0 goto label3", "r46 = new java lang string builder", "specialinvoke r46 < init >", "$ r20 = newarray java lang object [ 4 ]", "$ r21 = r0 get base uri", "$ r20 [ 0 ] = $ r21", "$ r22 = r0 get request uri", "$ r20 [ 1 ] = $ r22", "$ r23 = r0 get method", "$ r20 [ 2 ] = $ r23", "$ r24 = r0 get security context", "$ r25 = $ r24 get authentication scheme", "$ r26 = org glassfish jersey server trace utils to string or n a $ r25", "$ r20 [ 3 ] = $ r26", "$ r27 = java lang string format \\ `` base uri= [ % s ] request uri= [ % s ] method= [ % s ] auth scheme= [ % s ] \\", "r46 append $ r27", "$ r29 = org glassfish jersey server trace utils summary_headers", "r41 = $ r29 iterator", "label $ z4 = r41 have next", "if $ z4 == 0 goto label2", "$ r33 = r41 next", "r42 = java lang string $ r33", "$ r34 = newarray java lang object [ 2 ]", "$ r34 [ 0 ] = r42", "$ r35 = r0 get request header", "$ r36 = $ r35 get r42", "$ r37 = org glassfish jersey server trace utils to string or n a $ r36", "$ r34 [ 1 ] = $ r37", "$ r38 = java lang string format \\ `` % s= % s\\", "r46 append $ r38", "goto label1", "if $ z4 == 0 goto label2", "label $ r31 = org glassfish jersey server internal server trace event start", "$ r30 = newarray java lang object [ 1 ]", "$ r32 = r46 to string", "$ r30 [ 0 ] = $ r32", "r50 = org glassfish jersey message internal tracing logger $ event $ r31", "r1 log r50 $ r30", "label $ r3 = org glassfish jersey server internal server trace event start_headers", "r51 = org glassfish jersey message internal tracing logger $ event $ r3", "$ z1 = r1 be log enable r51", "if $ z1 == 0 goto label8", "r47 = new java lang string builder", "specialinvoke r47 < init >", "$ r5 = r0 get request header", "$ r6 = $ r5 key set", "r44 = $ r6 iterator", "label $ z2 = r44 have next", "if $ z2 == 0 goto label6", "$ r11 = r44 next", "r45 = java lang string $ r11", "$ r12 = org glassfish jersey server trace utils summary_headers", "$ z3 = $ r12 contain r45", "if $ z3 ! = 0 goto label5", "$ r13 = newarray java lang object [ 2 ]", "$ r13 [ 0 ] = r45", "$ r14 = r0 get request header", "$ r15 = $ r14 get r45", "$ r16 = org glassfish jersey server trace utils to string or n a $ r15", "$ r13 [ 1 ] = $ r16", "$ r17 = java lang string format \\ `` % s= % s\\", "r47 append $ r17", "label goto label4", "if $ z2 == 0 goto label6", "label $ i0 = r47 length", "if $ i0 < = 0 goto label7", "r47 insert 0 \\ `` other request headers\\ ``", "label $ r8 = org glassfish jersey server internal server trace event start_headers", "$ r7 = newarray java lang object [ 1 ]", "$ r9 = r47 to string", "$ r7 [ 0 ] = $ r9", "r52 = org glassfish jersey message internal tracing logger $ event $ r8", "r1 log r52 $ r7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = \\ `` private\\ ``", "$ z0 = $ r2 equal r1", "if $ z0 ! = 0 goto label1", "$ r3 = \\ `` public_read\\ ``", "$ z1 = $ r3 equal r1", "if $ z1 ! = 0 goto label1", "$ r4 = \\ `` public_read_write\\ ``", "$ z2 = $ r4 equal r1", "if $ z2 ! = 0 goto label1", "r11 = new java lang illegal argument exception", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r7 = r10 append \\ `` acl permission string be not a legal value \\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 to string", "specialinvoke r11 < init > $ r9", "throw r11", "if $ z2 ! = 0 goto label1", "label r12 = org jets3t apps cockpit cockpit preference r0", "r12 upload a c l permission = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r17 = null", "r3 = r1 get property r2 null", "$ r5 = org jets3t gui skin skin utils log", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r6 = $ r4 append \\ `` load skin color with property \\'\\ ``", "$ r7 = $ r6 append r2", "$ r8 = $ r7 append \\ `` \\ ' value \\ ``", "$ r9 = $ r8 append r3", "$ r10 = $ r9 to string", "$ r5 debug $ r10", "if r3 == null goto label1", "r17 = java awt color decode r3", "goto label2", "label return r17", "if r3 == null goto label1", "label $ r12 = org jets3t gui skin skin utils log", "$ r11 = new java lang string builder", "specialinvoke $ r11 < init >", "$ r13 = $ r11 append \\ `` color be not available for property \\'\\ ``", "$ r14 = $ r13 append r2", "$ r15 = $ r14 append \\ `` \\'\\ ``", "$ r16 = $ r15 to string", "$ r12 warn $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r2 = org jets3t service acl email address grantee r0", "$ r1 = r2 email address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jets3t service cloud front service r0", "$ r1 = r2 list distribution 100", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jets3t service cloud front service r0", "$ r1 = r2 list stream distribution 100", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r5 = org jets3t service cloud front service log", "$ z0 = $ r5 be debug enabled", "if $ z0 == 0 goto label03", "$ r19 = org jets3t service cloud front service log", "r38 = new java lang string builder", "specialinvoke r38 < init >", "$ r20 = r38 append \\ `` create \\ ``", "$ z1 = r1 be stream distribution config", "if $ z1 == 0 goto label01", "$ r31 = \\ `` streaming\\ ``", "goto label02", "label $ r21 = $ r20 append $ r31", "$ r22 = $ r21 append \\ `` distribution for origin \\ ``", "$ r23 = r1 get origins", "$ r24 = java util array a list $ r23", "$ r25 = $ r22 append $ r24", "$ r26 = $ r25 to string", "$ r19 debug $ r26", "label r40 = new org apache http client method http post", "r39 = new java lang string builder", "specialinvoke r39 < init >", "$ r7 = r39 append \\ `` https cloudfront amazonaws com 2012-05-05\\ ``", "$ z2 = r1 be stream distribution config", "if $ z2 == 0 goto label04", "$ r33 = \\ `` streaming-distribution\\ ``", "goto label05", "label $ r8 = $ r7 append $ r33", "$ r9 = $ r8 to string", "specialinvoke r40 < init > $ r9", "label r44 = org jets3t service cloud front service r0", "r34 = r44 build distribution config xml document r1", "r41 = new org apache http entity string entity", "$ r11 = org jets3t service constant default_encoding", "$ r12 = org apache http entity content type create \\ `` text xml\\", "specialinvoke r41 < init > r34 $ r12", "r45 = org apache http http entity r41", "r40 set entity r45", "r46 = org jets3t service cloud front service r0", "r47 = org apache http client method http request base r40", "r3 = r46 perform rest request r47 201", "r42 = new org jets3t service impl rest cloud front xml responses sax parser", "r48 = org jets3t service cloud front service r0", "$ r14 = r48 jets3t property", "specialinvoke r42 < init > $ r14", "$ r15 = r3 get entity", "$ r16 = $ r15 get content", "r4 = r42 parse distribution response $ r16", "$ r17 = r4 get distribution", "label return $ r17", "if $ z2 == 0 goto label04", "label $ r33 = \\ `` distribution\\ ``", "if $ z1 == 0 goto label01", "label $ r31 = \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org jets3t service cloud front service r0", "$ r2 = r3 create distribution impl r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jets3t service impl rest httpclient rest storage service r0", "r2 http client = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r3 = class \\ `` lorg jets3t service model a w s dev pay product \\ ``", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r4 = $ r2 append \\ `` \\ ``", "$ r5 = org jets3t service constant devpay_products_properties_filename", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 to string", "r0 = $ r3 get resource a stream $ r7", "$ r8 = new java util vector", "specialinvoke $ r8 < init >", "r10 = $ r8", "if r0 == null goto label4", "label r10 = org jets3t service model a w s dev pay product load r0", "label r0 close", "goto label4", "label return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jets3t service model base storage item r0", "r2 owner = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org jets3t service model s3 bucket r0", "r1 requester pay = z0", "r2 = org jets3t service model s3 bucket r0", "r2 be requester pay know = 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org jets3t service multi download package r0", "r1 append to file = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = new java util array list", "specialinvoke r9 < init >", "r10 = new org jets3t service multi simple threaded storage service $ 4", "r12 = org jets3t service multi simple threaded storage service r0", "specialinvoke r10 < init > r12 r9", "r11 = new org jets3t service multi thread storage service", "r13 = org jets3t service multi simple threaded storage service r0", "$ r8 = r13 service", "r14 = org jets3t service multi storage service event listener r10", "specialinvoke r11 < init > $ r8 r14", "r11 delete object r1 r2", "r15 = org jets3t service multi simple threaded storage service r0", "r16 = org jets3t service multi storage service event adaptor r10", "r15 throw error r16", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jets3t service s3 service r0", "r2 update bucket versioning status impl r1 1 0 null null", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jets3t service service exception r0", "r2 request host = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org jets3t service utils rest utils init http proxy r0 r1 1 null -1 null null null", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = @ parameter1", "if r6 ! = null goto label1", "r6 = \\ `` utf-8\\ ``", "label r11 = org codehaus jettison abstract x m l input factory r0", "r7 = specialinvoke r11 read all r1 r6", "r9 = new org codehaus jettison json j s o n tokener", "specialinvoke r9 < init > r7", "r12 = org codehaus jettison abstract x m l input factory r0", "$ r3 = r12 create x m l stream reader r9", "label return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["i0 = @ parameter0", "if i0 > 511 goto label1", "$ r0 = org eclipse jetty http http status code map", "$ r1 = $ r0 [ i0 ]", "return $ r1", "if i0 > 511 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jetty io selector manager r0", "$ l0 = r1 _connect timeout", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jetty server handler error handler r0", "r2 _cache control = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jetty server handler gzip gzip handler r0", "r1 _min gzip size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jetty server handler resource handler r0", "$ i0 = r1 _min memory map content length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse jetty server http configuration r0", "$ r4 = r5 _form encode method", "$ r4 clear", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r1 [ i1 ]", "r6 = org eclipse jetty server http configuration r0", "r6 add form encode method r3", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java nio charset standard charsets utf_8", "$ r3 = org eclipse jetty util buffer util to buffer r1 $ r2", "r5 = org eclipse jetty server local connector r0", "$ r4 = specialinvoke r5 execute request $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jetty util statistic counter statistic r0", "$ r1 = r4 _current", "l0 = $ r1 increment and get", "r5 = org eclipse jetty util statistic counter statistic r0", "$ r2 = r5 _total", "$ r2 increment", "r6 = org eclipse jetty util statistic counter statistic r0", "$ r3 = r6 _max", "$ r3 accumulate l0", "return l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org eclipse jetty util log slf4j log", "specialinvoke r3 < init > r1", "r4 = org eclipse jetty util log logger r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse jetty util path watcher r0", "$ r2 = r3 listener", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jetty util ssl ssl context factory r0", "r2 _endpoint identification algorithm = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r9 = org eclipse jetty util ssl ssl context factory r0", "$ z0 = r9 be start", "if $ z0 == 0 goto label1", "r8 = new java lang illegal state exception", "r7 = new java lang string builder", "specialinvoke r7 < init >", "$ r3 = r7 append \\ `` can not modify configuration when \\ ``", "r10 = org eclipse jetty util ssl ssl context factory r0", "$ r4 = r10 get state", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 to string", "specialinvoke r8 < init > $ r6", "throw r8", "if $ z0 == 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["$ r0 = com kenai jffi closure manager $ singleton holder instance", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r1 = com kenai jffi internal stub loader get o s", "$ r2 = com kenai jffi internal stub loader $ os darwin", "$ z0 = $ r1 equal $ r2", "if $ z0 == 0 goto label1", "return \\ `` darwin\\ ``", "if $ z0 == 0 goto label1", "label $ r3 = java lang system get property \\ `` os name\\ ``", "$ r4 = $ r3 split \\ `` \\ ``", "r0 = $ r4 [ 0 ]", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ r6 = com kenai jffi internal stub loader get c p u", "$ r7 = $ r6 name", "$ r8 = com kenai jffi internal stub loader locale", "$ r9 = $ r7 to low case $ r8", "$ r10 = $ r5 append $ r9", "$ r11 = $ r10 append \\ `` -\\ ``", "$ r12 = $ r11 append r0", "$ r13 = $ r12 to string", "return $ r13"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["$ r1 = com kenai jffi library last error", "$ r2 = $ r1 get", "r0 = java lang string $ r2", "if r0 == null goto label1", "$ r3 = r0", "goto label2", "label return $ r3", "if r0 == null goto label1", "label $ r3 = \\ `` unknown\\ ``"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = com kenai jffi platform r0", "$ r1 = r2 o", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com kenai jffi type r0", "$ i0 = r1 type", "if $ i0 == 0 goto label1", "r2 = com kenai jffi type r0", "$ i1 = r2 type", "goto label2", "label return $ i1", "if $ i0 == 0 goto label1", "label r3 = com kenai jffi type r0", "$ i1 = specialinvoke r3 resolve type"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = java_cup runtime lr_parser r0", "r1 _done_parsing = 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = java_cup runtime lr_parser r0", "$ r2 = r5 get scanner", "r1 = $ r2 next_token", "if r1 == null goto label1", "$ r4 = r1", "goto label2", "label return $ r4", "if r1 == null goto label1", "label r6 = java_cup runtime lr_parser r0", "$ r3 = r6 get symbol factory", "r7 = java_cup runtime lr_parser r0", "$ i0 = r7 e o f_sym", "$ r4 = $ r3 new symbol \\ `` end_of_file\\"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java lang system err", "$ r3 print r1", "$ r4 = java lang system err", "$ r4 flush", "$ z0 = r2 instanceof java_cup runtime symbol", "if $ z0 == 0 goto label2", "$ r6 = java_cup runtime symbol r2", "$ i0 = $ r6 leave", "if $ i0 == -1 goto label1", "$ r9 = java lang system err", "$ r8 = new java lang string builder", "specialinvoke $ r8 < init >", "$ r10 = $ r8 append \\ `` at character \\ ``", "$ r11 = java_cup runtime symbol r2", "$ i1 = $ r11 leave", "$ r12 = $ r10 append $ i1", "$ r13 = $ r12 append \\ `` of input\\ ``", "$ r14 = $ r13 to string", "$ r9 println $ r14", "goto label3", "label return", "if $ i0 == -1 goto label1", "label $ r7 = java lang system err", "$ r7 println \\ `` \\ ``", "if $ z0 == 0 goto label2", "label $ r5 = java lang system err", "$ r5 println \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = jflex char class r0", "$ i0 = r1 max char use", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > = 0 goto label1", "r17 = new java lang illegal argument exception", "r16 = new java lang string builder", "specialinvoke r16 < init >", "$ r12 = r16 append \\ `` max char code \\ ``", "$ r13 = $ r12 append i0", "$ r14 = $ r13 append \\ `` be negative \\ ``", "$ r15 = $ r14 to string", "specialinvoke r17 < init > $ r15", "throw r17", "if i0 > = 0 goto label1", "label if i0 < = 1114111 goto label2", "r19 = new java lang illegal argument exception", "r18 = new java lang string builder", "specialinvoke r18 < init >", "$ r3 = r18 append \\ `` max char code \\ ``", "$ r4 = java lang integer to hex string i0", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 append \\ `` be large than max char \\ ``", "$ r7 = java lang integer to hex string 1114111", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 to string", "specialinvoke r19 < init > $ r9", "throw r19", "label if i0 < = 1114111 goto label2", "label r20 = jflex char class r0", "r20 max char use = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = jflex emitter javadoc_comment_and_maybe_annotations_pattern", "r1 = $ r2 matcher r0", "$ z0 = r1 match", "if $ z0 == 0 goto label1", "$ r3 = r1 group 1", "$ z1 = $ r3 contain \\ `` * \\ ``", "if $ z1 ! = 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 ! = 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "$ z0 = jflex gui generator thread run", "if $ z0 == 0 goto label1", "$ r8 = jflex error message already_running", "jflex out error $ r8", "r14 = jflex gui generator thread r0", "$ r9 = r14 parent", "$ r9 generation finish 0", "goto label9", "label return", "if $ z0 == 0 goto label1", "label jflex gui generator thread run = 1", "r15 = jflex gui generator thread r0", "r15 set priority 1", "label r16 = jflex gui generator thread r0", "$ r3 = r16 output dir", "$ z1 = $ r3 equal \\ `` \\ ``", "if $ z1 ! = 0 goto label3", "r17 = jflex gui generator thread r0", "$ r7 = r17 output dir", "jflex option set dir $ r7", "label r13 = new java io file", "r18 = jflex gui generator thread r0", "$ r5 = r18 input file", "specialinvoke r13 < init > $ r5", "jflex main generate r13", "jflex out statistic", "r19 = jflex gui generator thread r0", "$ r6 = r19 parent", "$ r6 generation finish 1", "label jflex gui generator thread run = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = jflex int char set r0", "r2 = r9 copy", "r10 = jflex int char set r0", "$ r5 = r10 interval", "i0 = $ r5 size", "i2 = 0", "label if i2 > = i0 goto label5", "r11 = jflex int char set r0", "$ r6 = r11 interval", "$ r7 = $ r6 get i2", "r3 = jflex interval $ r7", "i3 = r3 start", "label $ i1 = r3 end", "if i3 > $ i1 goto label4", "r4 = r1 get caseless match i3", "if null == r4 goto label3", "r2 add r4", "label i3 = i3 + 1", "goto label2", "if i3 > $ i1 goto label4", "label i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label5", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [], [25], []]}
{"nodes": ["r0 = @ this", "r10 = new java lang string builder", "specialinvoke r10 < init > \\ `` { \\ ``", "r11 = jflex int char set r0", "$ r5 = r11 interval", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r8 = r2 next", "r3 = jflex interval $ r8", "r10 append r3", "goto label1", "if $ z0 == 0 goto label2", "label r10 append \\ `` } \\ ``", "$ r7 = r10 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r9 = new jflex int char set", "specialinvoke r9 < init >", "r10 = jflex int char set r0", "$ r5 = r10 interval", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r6 = r2 next", "r3 = jflex interval $ r6", "$ r7 = r9 interval", "$ r8 = r3 copy", "$ r7 add $ r8", "goto label1", "if $ z0 == 0 goto label2", "label return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r7 = jflex lexical state r0", "$ r3 = r7 state", "$ z1 = $ r3 contain key r1", "if $ z1 == 0 goto label1", "return", "if $ z1 == 0 goto label1", "label r8 = jflex lexical state r0", "$ i0 = r8 num state", "$ i1 = $ i0 + 1", "r9 = jflex lexical state r0", "r9 num state = $ i1", "r2 = java lang integer value of $ i0", "r10 = jflex lexical state r0", "$ r4 = r10 state", "$ r4 put r1 r2", "if z0 == 0 goto label2", "r11 = jflex lexical state r0", "$ r6 = r11 inclusive", "$ r6 add r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = jflex out error", "$ i1 = $ i0 + 1", "jflex out error = $ i1", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = jflex out nl", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append \\ `` error \\ ``", "$ r6 = jflex error message get r0", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append \\ `` \\ ``", "$ r9 = $ r8 append r1", "$ r10 = $ r9 append \\ `` \\ ``", "$ r11 = $ r10 to string", "jflex out err $ r11", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "label r2 = jflex out get line r0 i0", "if r2 == null goto label2", "jflex out err r2", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = jflex skeleton r0", "$ r1 = r4 out", "$ r2 = jflex skeleton line", "r5 = jflex skeleton r0", "$ i0 = r5 po", "$ i1 = $ i0 + 1", "r6 = jflex skeleton r0", "r6 po = $ i1", "$ r3 = $ r2 [ $ i0 ]", "$ r1 print $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r46 = jflex timer r0", "l0 = r46 diff", "l1 = l0 % 1000l", "$ l6 = l0 1000l", "l2 = $ l6 % 60l", "$ l7 = l0 60000l", "l3 = $ l7 % 60l", "$ l8 = l0 3600000l", "l4 = $ l8 % 24l", "l5 = l0 86400000l", "$ b9 = l5 cmp 0l", "if $ b9 < = 0 goto label1", "r41 = new java lang string builder", "specialinvoke r41 < init >", "$ r30 = r41 append l5", "$ r31 = $ r30 append \\ `` d \\ ``", "$ r32 = $ r31 append l4", "$ r33 = $ r32 append \\ `` h \\ ``", "$ r34 = $ r33 append l3", "$ r35 = $ r34 append \\ `` m \\ ``", "$ r36 = $ r35 append l2", "$ r37 = $ r36 append \\ `` s \\ ``", "$ r38 = $ r37 append l1", "$ r39 = $ r38 append \\ `` ms\\ ``", "$ r40 = $ r39 to string", "return $ r40", "if $ b9 < = 0 goto label1", "label $ b10 = l4 cmp 0l", "if $ b10 < = 0 goto label2", "r42 = new java lang string builder", "specialinvoke r42 < init >", "$ r20 = r42 append l4", "$ r21 = $ r20 append \\ `` h \\ ``", "$ r22 = $ r21 append l3", "$ r23 = $ r22 append \\ `` m \\ ``", "$ r24 = $ r23 append l2", "$ r25 = $ r24 append \\ `` s \\ ``", "$ r26 = $ r25 append l1", "$ r27 = $ r26 append \\ `` ms\\ ``", "$ r28 = $ r27 to string", "return $ r28", "if $ b10 < = 0 goto label2", "label $ b11 = l3 cmp 0l", "if $ b11 < = 0 goto label3", "r43 = new java lang string builder", "specialinvoke r43 < init >", "$ r12 = r43 append l3", "$ r13 = $ r12 append \\ `` m \\ ``", "$ r14 = $ r13 append l2", "$ r15 = $ r14 append \\ `` s \\ ``", "$ r16 = $ r15 append l1", "$ r17 = $ r16 append \\ `` ms\\ ``", "$ r18 = $ r17 to string", "return $ r18", "if $ b11 < = 0 goto label3", "label $ b12 = l2 cmp 0l", "if $ b12 < = 0 goto label4", "r44 = new java lang string builder", "specialinvoke r44 < init >", "$ r6 = r44 append l2", "$ r7 = $ r6 append \\ `` s \\ ``", "$ r8 = $ r7 append l1", "$ r9 = $ r8 append \\ `` ms\\ ``", "$ r10 = $ r9 to string", "return $ r10", "if $ b12 < = 0 goto label4", "label r45 = new java lang string builder", "specialinvoke r45 < init >", "$ r2 = r45 append l1", "$ r3 = $ r2 append \\ `` ms\\ ``", "$ r4 = $ r3 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [], [67], [68], [69], [70], [71], [72], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r6 = jline console cursor buffer r0", "$ r1 = r6 buffer", "r7 = jline console cursor buffer r0", "$ i1 = r7 cursor", "$ i2 = $ i1 + 1", "r8 = jline console cursor buffer r0", "r8 cursor = $ i2", "$ r1 insert $ i1 c0", "r9 = jline console cursor buffer r0", "$ z0 = r9 be over type", "if $ z0 == 0 goto label1", "r10 = jline console cursor buffer r0", "$ i3 = r10 cursor", "r11 = jline console cursor buffer r0", "$ r3 = r11 buffer", "$ i4 = $ r3 length", "if $ i3 > = $ i4 goto label1", "r12 = jline console cursor buffer r0", "$ r4 = r12 buffer", "r13 = jline console cursor buffer r0", "$ i5 = r13 cursor", "$ r4 delete char at $ i5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = jline console history memory history r0", "$ i0 = r1 size", "r2 = jline console history memory history r0", "r2 index = $ i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r5 = r1 get lhs expr", "$ r6 = $ r5 accept r0 r2", "r3 = com fasterxml jackson databind json node $ r6", "$ r7 = r1 get rhs expr", "$ r8 = $ r7 accept r0 r2", "r4 = com fasterxml jackson databind json node $ r8", "$ z0 = r1 match r3 r4", "if $ z0 == 0 goto label1", "$ r10 = com fasterxml jackson databind node boolean node true", "r11 = com fasterxml jackson databind json node $ r10", "return r11", "if $ z0 == 0 goto label1", "label $ r9 = com fasterxml jackson databind node boolean node false", "r12 = com fasterxml jackson databind json node $ r9", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r5 = r1 get lhs expr", "$ r6 = $ r5 accept r0 r2", "r3 = com fasterxml jackson databind json node $ r6", "$ r7 = r1 get rhs expr", "$ r8 = $ r7 accept r0 r2", "r4 = com fasterxml jackson databind json node $ r8", "$ z0 = r1 match r3 r4", "if $ z0 == 0 goto label1", "$ r10 = com fasterxml jackson databind node boolean node true", "r11 = com fasterxml jackson databind json node $ r10", "return r11", "if $ z0 == 0 goto label1", "label $ r9 = com fasterxml jackson databind node boolean node false", "r12 = com fasterxml jackson databind json node $ r9", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r5 = r1 get lhs expr", "$ r6 = $ r5 accept r0 r2", "r3 = com fasterxml jackson databind json node $ r6", "$ r7 = r1 get rhs expr", "$ r8 = $ r7 accept r0 r2", "r4 = com fasterxml jackson databind json node $ r8", "$ z0 = r1 match r3 r4", "if $ z0 == 0 goto label1", "$ r10 = com fasterxml jackson databind node boolean node true", "r11 = com fasterxml jackson databind json node $ r10", "return r11", "if $ z0 == 0 goto label1", "label $ r9 = com fasterxml jackson databind node boolean node false", "r12 = com fasterxml jackson databind json node $ r9", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = r1 decimal value", "$ r4 = r2 decimal value", "r5 = com amazonaws jmespath numeric comparator r0", "$ z0 = r5 match $ r3 $ r4", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 equal r2", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org openjdk jmh infra thread params r0", "$ i0 = r1 group idx", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java util array list", "specialinvoke $ r2 < init >", "r5 = r0", "label if r5 == null goto label2", "$ r3 = r5 get declare method", "$ r4 = java util array a list $ r3", "$ r2 add all $ r4", "r5 = r5 get superclass", "goto label1", "label if r5 == null goto label2", "label return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org openjdk jmh util utils $ 1", "specialinvoke r2 < init > r0", "r3 = java lang iterable r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com sun tool attach virtual machine r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = r0 goto label1", "return 1", "if r1 ! = r0 goto label1", "label $ z0 = r1 instanceof com sun tool attach virtual machine", "if $ z0 ! = 0 goto label2", "return 0", "if $ z0 ! = 0 goto label2", "label r2 = com sun tool attach virtual machine r1", "$ r3 = r2 provider", "r7 = com sun tool attach virtual machine r0", "$ r4 = r7 provider", "if $ r3 == $ r4 goto label3", "label $ r5 = r2 id", "r8 = com sun tool attach virtual machine r0", "$ r6 = r8 id", "$ z1 = $ r5 equal $ r6", "if $ z1 ! = 0 goto label4", "label return 1"], "adj": [[1], [2], [3], [], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = r0 goto label1", "return 1", "if r1 ! = r0 goto label1", "label $ z0 = r1 instanceof com sun tool attach virtual machine descriptor", "if $ z0 ! = 0 goto label2", "return 0", "if $ z0 ! = 0 goto label2", "label r2 = com sun tool attach virtual machine descriptor r1", "$ r3 = r2 provider", "r7 = com sun tool attach virtual machine descriptor r0", "$ r4 = r7 provider", "if $ r3 == $ r4 goto label3", "label $ r5 = r2 id", "r8 = com sun tool attach virtual machine descriptor r0", "$ r6 = r8 id", "$ z1 = $ r5 equal $ r6", "if $ z1 ! = 0 goto label4", "label return 1"], "adj": [[1], [2], [3], [], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = mockit internal util constructor reflection new instance r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = mockit full verification r0", "$ r1 = r2 verification phase", "$ r1 discard replay invocation", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "r1 = newarray com sun jna platform win32 oa idl $ safearraybound [ 1 ]", "$ r2 = new com sun jna platform win32 oa idl $ safearraybound", "specialinvoke $ r2 < init > i0 0", "r1 [ 0 ] = $ r2", "$ r4 = com sun jna platform win32 ole auto instance", "$ r3 = new com sun jna platform win32 w type $ vartype", "specialinvoke $ r3 < init > 12", "r0 = $ r4 safe array create $ r3 1 r1", "return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com kenai constantine constant set r0", "$ r2 = r3 constant", "$ l0 = $ r2 get value r1", "$ i1 = int $ l0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = com kenai constantine constant set r0", "$ r1 = r3 constant", "$ r2 = $ r1 get name i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof jnr ffi address", "if $ z0 == 0 goto label1", "r3 = jnr ffi address r0", "$ l3 = r3 address", "$ r2 = jnr ffi address r1", "$ l2 = $ r2 address", "$ b4 = $ l3 cmp $ l2", "if $ b4 == 0 goto label2", "label if r1 ! = null goto label3", "r4 = jnr ffi address r0", "$ l0 = r4 address", "$ b1 = $ l0 cmp 0l", "if $ b1 ! = 0 goto label3", "label $ z1 = 1", "goto label4", "label return $ z1", "if $ b1 ! = 0 goto label3", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "l0 = @ parameter2", "r5 = jnr ffi byref address by reference r0", "$ r3 = r5 value", "$ r4 = jnr ffi address $ r3", "$ l1 = $ r4 native address", "r2 put address l0 $ l1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "l0 = @ parameter2", "$ l1 = r2 get long long l0", "$ r3 = java lang long value of $ l1", "r4 = jnr ffi byref long long by reference r0", "r4 value = $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "l0 = @ parameter2", "r5 = jnr ffi byref native long by reference r0", "$ r3 = r5 value", "$ r4 = jnr ffi native long $ r3", "$ l1 = $ r4 long value", "r2 put native long l0 $ l1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["i0 = @ parameter0", "if i0 ! = 0 goto label1", "$ r0 = jnr ffi native long zero", "goto label4", "label return $ r0", "if i0 ! = 0 goto label1", "label if i0 ! = 1 goto label2", "$ r0 = jnr ffi native long one", "label if i0 ! = 1 goto label2", "label if i0 ! = -1 goto label3", "$ r0 = jnr ffi native long minus_one", "label if i0 ! = -1 goto label3", "label $ r0 = jnr ffi native long _value of i0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = jnr ffi object reference manager r0", "r2 remove r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = jnr ffi pointer r0", "$ z0 = r1 be direct", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = jnr ffi provider abstract runtime r0", "$ i0 = r1 address size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 replace 47 46", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get name", "$ r2 = $ r1 replace 46 47", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get canonical name", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = jnr ffi struct r0", "r4 array begin", "i1 = 0", "label $ i0 = lengthof r1", "if i1 > = $ i0 goto label2", "r3 = new jnr ffi struct $ address", "r5 = jnr ffi struct r0", "specialinvoke r3 < init > r5", "r1 [ i1 ] = r3", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label r6 = jnr ffi struct r0", "r6 array end", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "return 0l"], "adj": [[1], []]}
{"nodes": ["r2 = new jnr posix util default p o s i x handler", "specialinvoke r2 < init >", "r3 = jnr posix p o s i x handler r2", "$ r1 = jnr posix p o s i x factory get java p o s i x r3", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "$ r1 = com kenai jnr x86asm asm _ptr_build r0 l0 4", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com kenai jnr x86asm immediate r0", "$ z0 = r1 be unsigned", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_or", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "$ r1 = com kenai jnr x86asm inst_code inst_popfq", "r2 = com kenai jnr x86asm serializer intrinsics r0", "r2 emit x86 $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = com kenai jnr x86asm inst_code inst_rdtsc", "r2 = com kenai jnr x86asm serializer intrinsics r0", "r2 emit x86 $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = com kenai jnr x86asm inst_code inst_stc", "r2 = com kenai jnr x86asm serializer intrinsics r0", "r2 emit x86 $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com kenai jnr x86asm inst_code inst_fcmovb", "r3 = com kenai jnr x86asm serializer intrinsics r0", "r4 = com kenai jnr x86asm operand r1", "r3 emit x86 $ r2 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = com kenai jnr x86asm inst_code inst_fld1", "r2 = com kenai jnr x86asm serializer intrinsics r0", "r2 emit x86 $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = com kenai jnr x86asm inst_code inst_fldl2t", "r2 = com kenai jnr x86asm serializer intrinsics r0", "r2 emit x86 $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = com kenai jnr x86asm inst_code inst_fldln2", "r2 = com kenai jnr x86asm serializer intrinsics r0", "r2 emit x86 $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com kenai jnr x86asm inst_code inst_fnstsw", "r3 = com kenai jnr x86asm serializer intrinsics r0", "r4 = com kenai jnr x86asm operand r1", "r3 emit x86 $ r2 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_movq", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_paddusb", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_psubb", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_psubsb", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_cvtps2pi", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_minps", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_mulss", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_pmulhuw", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_rsqrtss", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_sqrtss", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_unpcklps", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_andpd", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com kenai jnr x86asm inst_code inst_clflush", "r3 = com kenai jnr x86asm serializer intrinsics r0", "r4 = com kenai jnr x86asm operand r1", "r3 emit x86 $ r2 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_minsd", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_movnti", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_movntpd", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_paddsb", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_paddusb", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_pcmpeqw", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_pcmpeqd", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_pmaxsw", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_pminub", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_pslld", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_punpcklbw", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_ucomisd", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_addsubps", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_movsldup", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = com kenai jnr x86asm inst_code inst_dpps", "r5 = com kenai jnr x86asm serializer intrinsics r0", "r6 = com kenai jnr x86asm operand r1", "r7 = com kenai jnr x86asm operand r2", "r8 = com kenai jnr x86asm operand r3", "r5 emit x86 $ r4 r6 r7 r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_pblendvb", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_pmaxsd", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = com kenai jnr x86asm inst_code inst_pcmpestrm", "r5 = com kenai jnr x86asm serializer intrinsics r0", "r6 = com kenai jnr x86asm operand r1", "r7 = com kenai jnr x86asm operand r2", "r8 = com kenai jnr x86asm operand r3", "r5 emit x86 $ r4 r6 r7 r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = com kenai jnr x86asm inst_code inst_pcmpistri", "r5 = com kenai jnr x86asm serializer intrinsics r0", "r6 = com kenai jnr x86asm operand r1", "r7 = com kenai jnr x86asm operand r2", "r8 = com kenai jnr x86asm operand r3", "r5 emit x86 $ r4 r6 r7 r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq comparator r0", "$ z0 = r1 support quantifier", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf map table r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 param type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq conf setting r0", "r2 param cast mode = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 statement type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 updatable primary key", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 return all on updatable record", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 map constructor parameter name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 parse with meta lookup", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 parse unsupported syntax", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq conf setting r0", "r2 parse unsupported syntax = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "r0 = @ parameter1", "if i0 == 0 goto label1", "$ i1 = i0", "goto label3", "label return $ i1", "if i0 == 0 goto label1", "label $ r1 = r0 get fetch size", "if $ r1 == null goto label2", "$ r2 = r0 get fetch size", "$ i1 = $ r2 int value", "if $ r1 == null goto label2", "label $ i1 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq c s v format r0", "$ r1 = r2 null string", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "label r7 = java sql driver manager get connection r0 r1", "r9 = new org jooq impl default connection provider", "specialinvoke r9 < init > r7 1", "$ r3 = org jooq tool jdbc j d b c utils dialect r7", "r10 = org jooq connection provider r9", "$ r4 = org jooq impl dsl use r10 $ r3", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "label r8 = java sql driver manager get connection r0 r1 r2", "r10 = new org jooq impl default connection provider", "specialinvoke r10 < init > r8 1", "$ r4 = org jooq tool jdbc j d b c utils dialect r8", "r11 = org jooq connection provider r10", "$ r5 = org jooq impl dsl use r11 $ r4", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["$ r0 = org jooq impl dsl dsl", "$ r1 = $ r0 select zero", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl dsl dsl", "$ r2 = $ r1 insert into r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl dsl dsl", "$ r2 = $ r1 comment on view r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl dsl dsl", "$ r2 = $ r1 drop table if exists r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl dsl dsl", "$ r2 = $ r1 revoke r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl dsl name r0", "$ r2 = org jooq impl dsl user $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl dsl name r0", "$ r2 = org jooq impl dsl role $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl dsl val r0", "r3 = org jooq field $ r1", "$ r2 = org jooq impl dsl table r3", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org jooq impl keyword impl", "specialinvoke r2 < init > r0", "r3 = org jooq keyword r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl dsl val r0", "r3 = org jooq field $ r1", "$ r2 = org jooq impl dsl table r3", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r4 = new org jooq impl default configuration", "specialinvoke r4 < init >", "r5 = org jooq configuration r4", "$ r2 = org jooq impl dsl use r5", "$ r3 = $ r2 begin r0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl tool field r0", "r3 = org jooq field $ r1", "$ r2 = org jooq impl dsl condition r3", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org jooq impl no condition instance", "r1 = org jooq condition $ r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org jooq impl combine condition of r0 r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = newarray java lang object [ 0 ]", "$ r2 = org jooq impl dsl field r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org jooq impl tool field r0", "$ r3 = $ r2 coerce r1", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org jooq impl tool field r0", "$ r3 = $ r2 coerce r1", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org jooq impl tool field r0", "$ r3 = org jooq impl tool field r1", "$ r4 = org jooq impl tool empty_field", "$ r5 = $ r3 to array $ r4", "$ r6 = org jooq field [ ] $ r5", "$ r7 = org jooq impl dsl coalesce0 $ r2 $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl tool field r0", "r3 = org jooq field $ r1", "$ r2 = org jooq impl dsl ltrim r3", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "c1 = @ parameter2", "$ r1 = java lang character to string c1", "$ r2 = org jooq impl dsl rpad r0 i0 $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq tool convert convert r0 class \\ `` ljava time offset date time \\ ``", "$ r2 = java time offset date time $ r1", "$ r3 = org jooq impl tool field $ r2", "r4 = org jooq field $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq tool convert convert r0 class \\ `` ljava time offset date time \\ ``", "$ r2 = java time offset date time $ r1", "$ r3 = org jooq impl tool field $ r2", "r4 = org jooq field $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl tool field r0", "$ r2 = org jooq impl dsl tanh $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl tool field r0", "$ r2 = org jooq impl dsl deg $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org jooq impl function asterisk", "$ r1 = org jooq impl dsl count $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org jooq impl bool and", "specialinvoke r2 < init > r0", "r3 = org jooq aggregate function r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r6 = new org jooq impl function", "$ r3 = org jooq impl term stddev_pop", "$ r4 = org jooq impl s q l data type numeric", "$ r2 = newarray org jooq query part [ 1 ]", "$ r5 = org jooq impl dsl null safe r0", "$ r2 [ 0 ] = $ r5", "r7 = org jooq query part [ ] $ r2", "specialinvoke r6 < init > $ r3 $ r4 r7", "r8 = org jooq aggregate function r6", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r5 = new org jooq impl function", "$ r2 = org jooq impl dsl null safe data type r0", "$ r3 = newarray org jooq query part [ 1 ]", "$ r4 = org jooq impl dsl null safe r0", "$ r3 [ 0 ] = $ r4", "r6 = org jooq query part [ ] $ r3", "specialinvoke r5 < init > \\ `` first_value\\", "r7 = org jooq window ignore null step r5", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["z0 = @ parameter0", "$ r0 = java lang boolean value of z0", "$ r1 = org jooq impl s q l data type boolean", "$ r2 = org jooq impl dsl inline $ r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r1 = org jooq impl s q l data type other", "goto label2", "label return $ r1", "if r0 ! = null goto label1", "label $ r1 = r0 get data type"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq j s o n format r0", "$ i0 = r1 indent", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r5 = org jooq j s o n format r0", "$ r1 = r5 indent", "$ i1 = lengthof $ r1", "if i0 > = $ i1 goto label1", "r6 = org jooq j s o n format r0", "$ r3 = r6 indent", "$ r4 = $ r3 [ i0 ]", "return $ r4", "if i0 > = $ i1 goto label1", "label r7 = org jooq j s o n format r0", "$ z0 = r7 format", "if $ z0 == 0 goto label2", "r8 = org jooq j s o n format r0", "$ i2 = r8 indent", "$ i3 = $ i2 * i0", "$ r2 = org jooq tool string utils right pad \\ `` \\", "return $ r2", "if $ z0 == 0 goto label2", "label return \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq s q l dialect r0", "$ z0 = r1 commercial", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ z0 = r1 be array", "if $ z0 ! = 0 goto label2", "$ r14 = java lang reflect array new instance r1 0", "$ r15 = $ r14 get class", "$ r16 = org jooq tool convert convert array r0 $ r15", "return $ r16", "if $ z0 ! = 0 goto label2", "label $ r4 = r0 get class", "if r1 ! = $ r4 goto label3", "return r0", "if r1 ! = $ r4 goto label3", "label r2 = r1 get component type", "$ i0 = lengthof r0", "if $ i0 ! = 0 goto label4", "$ i3 = lengthof r0", "$ r13 = java util array copy of r0 $ i3 r1", "return $ r13", "if $ i0 ! = 0 goto label4", "label $ r5 = r0 [ 0 ]", "if $ r5 == null goto label5", "$ r10 = r0 [ 0 ]", "$ r11 = $ r10 get class", "if $ r11 ! = r2 goto label5", "$ i2 = lengthof r0", "$ r12 = java util array copy of r0 $ i2 r1", "return $ r12", "if $ r11 ! = r2 goto label5", "label $ i1 = lengthof r0", "$ r6 = java lang reflect array new instance r2 $ i1", "$ r7 = java lang object [ ] $ r6", "r3 = java lang object [ ] $ r7", "i4 = 0", "label $ i5 = lengthof r0", "if i4 > = $ i5 goto label7", "$ r8 = r0 [ i4 ]", "$ r9 = org jooq tool convert convert $ r8 r2", "r3 [ i4 ] = $ r9", "i4 = i4 + 1", "goto label6", "if i4 > = $ i5 goto label7", "label return r3"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org jooq tool reflect compile compile r0 r1", "$ r3 = org jooq tool reflect reflect on $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = newarray java lang object [ 0 ]", "r3 = org jooq tool reflect reflect r0", "$ r2 = r3 create $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org jooq tool stop watch log", "$ z0 = $ r2 be info enabled", "if $ z0 == 0 goto label1", "$ r3 = org jooq tool stop watch log", "r5 = org jooq tool stop watch r0", "$ r4 = specialinvoke r5 split message 0l", "$ r3 info r1 $ r4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "i2 = @ parameter3", "$ z0 = org jooq tool string utils be empty r0", "if $ z0 ! = 0 goto label01", "$ z1 = org jooq tool string utils be empty r1", "if $ z1 ! = 0 goto label01", "if r2 == null goto label01", "if i2 ! = 0 goto label02", "label return r0", "if i2 ! = 0 goto label02", "label i3 = 0", "i4 = r0 index of r1 0", "if i4 ! = -1 goto label03", "return r0", "if i4 ! = -1 goto label03", "label i0 = r1 length", "$ i1 = r2 length", "i5 = $ i1 - i0", "if i5 > = 0 goto label04", "$ i6 = 0", "goto label05", "label i7 = $ i6", "if i2 > = 0 goto label06", "$ i9 = 16", "goto label08", "label i10 = i7 * $ i9", "$ r10 = new java lang string builder", "$ i11 = r0 length", "$ i12 = $ i11 + i10", "specialinvoke $ r10 < init > $ i12", "label if i4 == -1 goto label11", "$ r7 = r0 substring i3 i4", "$ r8 = $ r10 append $ r7", "$ r8 append r2", "i3 = i4 + i0", "i2 = i2 + -1", "if i2 ! = 0 goto label10", "goto label11", "label $ r4 = r0 substring i3", "$ r10 append $ r4", "$ r6 = $ r10 to string", "return $ r6", "if i2 ! = 0 goto label10", "label i4 = r0 index of r1 i3", "goto label09", "if i2 > = 0 goto label06", "label if i2 < = 64 goto label07", "$ i9 = 64", "label if i2 < = 64 goto label07", "label $ i9 = i2", "if i5 > = 0 goto label04", "label $ i6 = i5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], [], [45], [46], [], [48], [49], [50], [51], [52], [53], []]}
{"nodes": ["r0 = @ parameter0", "c0 = @ parameter1", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ i1 = lengthof r0", "$ r1 = org jooq tool string utils join r0 c0 0 $ i1", "return $ r1"], "adj": [[1], [2], [3], [], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq type day to second r0", "$ i0 = r1 hour", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq type day to second r0", "$ i0 = r1 nano", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "$ l1 = long i0", "$ l2 = $ l1 & 4294967295l", "$ r0 = org jooq type u integer value of unchecked $ l2", "return $ r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label6", "$ r1 = org jooq type year to month pattern_sql", "$ r2 = $ r1 matcher r0", "$ z0 = $ r2 find", "if $ z0 == 0 goto label1", "$ r8 = \\ `` -\\ ``", "$ r9 = $ r2 group 1", "z2 = $ r8 equal $ r9", "$ r10 = $ r2 group 2", "i2 = java lang integer parse int $ r10", "$ r11 = $ r2 group 3", "i3 = java lang integer parse int $ r11", "$ r12 = new org jooq type year to month", "specialinvoke $ r12 < init > i2 i3 z2", "return $ r12", "if $ z0 == 0 goto label1", "label $ r3 = org jooq type year to month pattern_iso", "$ r4 = $ r3 matcher r0", "$ z1 = $ r4 find", "if $ z1 == 0 goto label6", "$ r5 = \\ `` -\\ ``", "$ r6 = $ r4 group 1", "z3 = $ r5 equal $ r6", "r15 = $ r4 group 2", "r16 = $ r4 group 3", "if r15 ! = null goto label2", "$ i4 = 0", "goto label3", "label i0 = $ i4", "if r16 ! = null goto label4", "$ i5 = 0", "goto label5", "label $ r7 = new org jooq type year to month", "specialinvoke $ r7 < init > i0 $ i5 z3", "return $ r7", "if r16 ! = null goto label4", "label $ i5 = java lang integer parse int r16", "if r15 ! = null goto label2", "label $ i4 = java lang integer parse int r15", "if $ z1 == 0 goto label6", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [], [34], [35], [], [37], [38], [39], [40], [41], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq util mysql my s q l d s l val r0", "r3 = org jooq field $ r1", "$ r2 = org jooq util mysql my s q l d s l de encrypt r3", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = org jooq util mysql my s q l d s l val r0", "$ r2 = org jooq util mysql my s q l d s l val i0", "r4 = org jooq field $ r1", "r5 = org jooq field $ r2", "$ r3 = org jooq util mysql my s q l d s l sha2 r4 r5", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["$ r0 = org jooq util sqlite s q lite d s l field \\ `` _rowid_\\", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq util xml jaxb column r0", "r2 table schema = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq util xml jaxb column r0", "$ r1 = r2 table name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq util xml jaxb column r0", "r2 table name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq util xml jaxb column r0", "$ r1 = r2 character maximum length", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq util xml jaxb column r0", "$ r1 = r2 ordinal position", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq util xml jaxb column r0", "$ r1 = r2 identity generation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq util xml jaxb column r0", "r2 be nullable = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq util xml jaxb parameter r0", "$ r1 = r2 specific schema", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq util xml jaxb referential constraint r0", "$ r1 = r2 unique constraint catalog", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq conf setting r0", "r2 render coalesce to empty string in concat = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 fetch trigger value after s q l server output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 inline threshold", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq conf setting r0", "r2 map constructor parameter name in kotlin = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 interpreter delay foreign key declaration", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq conf setting r0", "r2 migration ignore default timestamp precision diffs = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq d d l export configuration r0", "$ z0 = r1 create or replace view", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq j s o n format r0", "$ i0 = r1 global indent", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq j s o n format r0", "$ i0 = r1 indent", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq migration configuration r0", "$ z0 = r1 alter table drop multiple", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq migration configuration r0", "$ z0 = r1 respect column order", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java nio charset charset null", "$ r2 = org jooq source of r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org jooq source", "specialinvoke $ r2 < init > null r0 r1 null null null null null", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org jooq s q l dialect r0", "$ r1 = r4 family", "$ r2 = $ r1 predecessor", "r5 = org jooq s q l dialect r0", "$ r3 = r5 family", "if $ r2 == $ r3 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r2 == $ r3 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java lang boolean type", "if r0 ! = $ r1 goto label1", "$ r9 = java lang boolean false", "goto label9", "label return $ r9", "if r0 ! = $ r1 goto label1", "label $ r2 = java lang byte type", "if r0 ! = $ r2 goto label2", "$ r9 = java lang byte value of 0", "if r0 ! = $ r2 goto label2", "label $ r3 = java lang short type", "if r0 ! = $ r3 goto label3", "$ r9 = java lang short value of 0", "if r0 ! = $ r3 goto label3", "label $ r4 = java lang integer type", "if r0 ! = $ r4 goto label4", "$ r9 = java lang integer value of 0", "if r0 ! = $ r4 goto label4", "label $ r5 = java lang long type", "if r0 ! = $ r5 goto label5", "$ r9 = java lang long value of 0l", "if r0 ! = $ r5 goto label5", "label $ r6 = java lang double type", "if r0 ! = $ r6 goto label6", "$ r9 = java lang double value of 0 0", "if r0 ! = $ r6 goto label6", "label $ r7 = java lang float type", "if r0 ! = $ r7 goto label7", "$ r9 = java lang float value of 0 0f", "if r0 ! = $ r7 goto label7", "label $ r8 = java lang character type", "if r0 ! = $ r8 goto label8", "$ r9 = java lang character value of 0", "if r0 ! = $ r8 goto label8", "label $ r9 = null"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq util xml jaxb table constraint r0", "r2 enforce = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = @ parameter2", "r3 = org jooq codegen java generator r0", "specialinvoke r3 generate interface getter0 r1 i0 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb database r0", "$ r1 = r2 include trigger routine", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb database r0", "r2 include package u d t = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb database r0", "r2 include unique key = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb database r0", "$ r1 = r2 schema version provider", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb database r0", "r2 table value function = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb database r0", "r2 log slow query after second = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb force type r0", "$ r1 = r2 user type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb force type r0", "$ r1 = r2 expression", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 implicit join path to one = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 generate annotation = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 queue", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 link = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 table", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 table = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 pojos = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 pojos to string = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 serializable pojos = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 jpa annotation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 global schema reference = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 global sequence reference", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 global routine reference", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 global queue reference", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 comment on sequence = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 comment on link", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 comment on queue = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 comment on key", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 java bean getters and setter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 fully qualify type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 empty catalog = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generator r0", "$ r1 = r2 strategy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generator r0", "$ r1 = r2 database", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb matcher rule r0", "$ r1 = r2 transform", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb matcher routine type r0", "$ r1 = r2 expression", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb matcher sequence type r0", "$ r1 = r2 expression", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb matcher table type r0", "r2 table identifier = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb strategy r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb database r0", "r2 include exclude package routine = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb database r0", "r2 include embeddables = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb database r0", "$ r1 = r2 include invisible column", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb embeddable definition type r0", "$ r1 = r2 reference comment", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb embeddable field r0", "$ r1 = r2 expression", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 generate annotation date = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 global domain reference", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb synthetic foreign key type r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb synthetic unique key type r0", "$ r1 = r2 table", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jose4j jwk http jwks r0", "$ r1 = r2 location", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jose4j jwt consumer jwt consumer builder r0", "r2 jws algorithm constraint = r1", "r3 = org jose4j jwt consumer jwt consumer builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org jose4j jwt consumer jwt consumer builder r0", "$ r2 = r3 set expect issuer 1 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org jose4j jwt consumer jwt consumer builder r0", "r1 require subject = 1", "r2 = org jose4j jwt consumer jwt consumer builder r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org jose4j jwt consumer jwt consumer builder r0", "r1 require jti = 1", "r2 = org jose4j jwt consumer jwt consumer builder r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jose4j jwt consumer jwt consumer builder r0", "r2 jwe customizer = r1", "r3 = org jose4j jwt consumer jwt consumer builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org jose4j jwt jwt claim r0", "$ z0 = r1 have claim \\ `` aud\\ ``", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new java util hash set", "$ r3 = java util array a list r1", "specialinvoke r4 < init > $ r3", "r5 = org jose4j jwx json web structure r0", "r5 know critical header = r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet jsp jsp exception r0", "$ r1 = r2 get cause", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet jsp tagext simple tag support r0", "$ r1 = r2 parent tag", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java lang unsupported operation exception", "specialinvoke $ r2 < init > \\ `` illegal to invoke set page context on tag adapter wrapper\\ ``", "throw $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = javax servlet jsp tagext tag attribute info r0", "$ z0 = r1 fragment", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet jsp tagext tag attribute info r0", "$ r1 = r2 description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet jsp tagext tag library info r0", "$ r1 = r2 prefix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet jsp tagext tag library info r0", "$ r1 = r2 tag", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = javax servlet jsp tagext tag variable info r0", "$ i0 = r1 scope", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = fr bmartel speedtest repeat wrapper r0", "$ z0 = r1 m repeat upload", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = fr bmartel speedtest speed test report r0", "$ l0 = r1 m total packet size", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = fr bmartel speedtest speed test report r0", "$ r1 = r2 m transfer rate octet", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = fr bmartel speedtest speed test report r0", "$ i0 = r1 m request num", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = fr bmartel speedtest speed test socket r0", "r1 m scale = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = fr bmartel speedtest speed test socket r0", "r1 m download setup time = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = fr bmartel speedtest speed test socket r0", "$ l0 = r1 m upload setup time", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org locationtech jts algorithm line intersector r0", "$ r1 = r3 int pt", "$ r2 = $ r1 [ i0 ]", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r3 = org locationtech jts algorithm line intersector r0", "r3 compute int line index", "r4 = org locationtech jts algorithm line intersector r0", "$ r1 = r4 int line index", "$ r2 = $ r1 [ i0 ]", "$ i2 = $ r2 [ i1 ]", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org locationtech jts geom coordinate array coord array type", "$ r2 = r0 to array $ r1", "$ r3 = org locationtech jts geom coordinate [ ] $ r2", "$ r4 = org locationtech jts geom coordinate [ ] $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ i2 = r0 size", "i0 = $ i2 - 1", "i1 = i0 2", "i4 = 0", "label if i4 > i1 goto label2", "$ i3 = i0 - i4", "org locationtech jts geom coordinate sequence swap r0 i4 $ i3", "i4 = i4 + 1", "goto label1", "label if i4 > i1 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ parameter0", "i1 = 0", "label $ i0 = lengthof r0", "if i1 > = $ i0 goto label3", "$ r1 = r0 [ i1 ]", "$ z0 = $ r1 be empty", "if $ z0 ! = 0 goto label2", "return 1", "if $ z0 ! = 0 goto label2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts geom geometry r0", "$ r1 = r2 factory", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts geom geometry r0", "$ r1 = r2 user data", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org locationtech jts geom geometry r0", "r2 user data = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang unsupported operation exception", "$ r2 = r0 get class", "$ r3 = $ r2 get name", "specialinvoke $ r1 < init > $ r3", "throw $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = new org locationtech jts geom multi polygon", "r3 = org locationtech jts geom geometry factory r0", "specialinvoke r2 < init > null r3", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts geom geometry factory r0", "$ r1 = r2 create polygon null null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "c1 = @ parameter1", "if c1 ! = 42 goto label1", "return 1", "if c1 ! = 42 goto label1", "label if c1 ! = 84 goto label3", "if i0 > = 0 goto label2", "if i0 ! = -2 goto label3", "label return 1", "if i0 ! = -2 goto label3", "label if c1 ! = 70 goto label4", "if i0 ! = -1 goto label4", "label if c1 ! = 48 goto label5", "if i0 ! = 0 goto label5", "label if c1 ! = 49 goto label6", "if i0 ! = 1 goto label6", "label if c1 ! = 50 goto label7", "if i0 ! = 2 goto label7", "label return 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "i2 = @ parameter2", "r5 = org locationtech jts geom intersection matrix r0", "$ r1 = r5 matrix", "$ r2 = $ r1 [ i0 ]", "$ i3 = $ r2 [ i1 ]", "if $ i3 > = i2 goto label1", "r6 = org locationtech jts geom intersection matrix r0", "$ r3 = r6 matrix", "$ r4 = $ r3 [ i0 ]", "$ r4 [ i1 ] = i2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = 0", "label if i1 > = 3 goto label4", "i2 = 0", "label if i2 > = 3 goto label3", "r3 = org locationtech jts geom intersection matrix r0", "$ r1 = r3 matrix", "$ r2 = $ r1 [ i1 ]", "$ r2 [ i2 ] = i0", "i2 = i2 + 1", "goto label2", "label if i2 > = 3 goto label3", "label i1 = i1 + 1", "goto label1", "label if i1 > = 3 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 length", "if $ i0 == 9 goto label1", "r10 = new java lang illegal argument exception", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r6 = r9 append \\ `` should be length \\ ``", "$ r7 = $ r6 append r1", "$ r8 = $ r7 to string", "specialinvoke r10 < init > $ r8", "throw r10", "if $ i0 == 9 goto label1", "label i5 = 0", "label if i5 > = 3 goto label6", "i6 = 0", "label if i6 > = 3 goto label5", "r11 = org locationtech jts geom intersection matrix r0", "$ r2 = r11 matrix", "$ r3 = $ r2 [ i5 ]", "$ i3 = $ r3 [ i6 ]", "$ i1 = 3 * i5", "$ i2 = $ i1 + i6", "$ c4 = r1 char at $ i2", "$ z0 = org locationtech jts geom intersection matrix match $ i3 $ c4", "if $ z0 ! = 0 goto label4", "return 0", "if $ z0 ! = 0 goto label4", "label i6 = i6 + 1", "goto label3", "label if i6 > = 3 goto label5", "label i5 = i5 + 1", "goto label2", "label if i5 > = 3 goto label6", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [], [31], [32], [], [34], []]}
{"nodes": ["r0 = @ this", "r3 = org locationtech jts geom line segment r0", "$ r1 = r3 p0", "$ d1 = $ r1 y", "r4 = org locationtech jts geom line segment r0", "$ r2 = r4 p1", "$ d0 = $ r2 y", "$ b0 = $ d1 cmpl $ d0", "if $ b0 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b0 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r3 = org locationtech jts geom line segment r0", "$ r1 = r3 p0", "$ d1 = $ r1 x", "r4 = org locationtech jts geom line segment r0", "$ r2 = r4 p1", "$ d0 = $ r2 x", "$ b0 = $ d1 cmpl $ d0", "if $ b0 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b0 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org locationtech jts geom line segment r0", "$ r3 = r4 p0", "r5 = org locationtech jts geom line segment r0", "$ r2 = r5 p1", "$ d0 = org locationtech jts algorithm distance point to segment r1 $ r3 $ r2", "return $ d0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org locationtech jts geom line segment", "if $ z0 ! = 0 goto label1", "return 0", "if $ z0 ! = 0 goto label1", "label r2 = org locationtech jts geom line segment r1", "r7 = org locationtech jts geom line segment r0", "$ r4 = r7 p0", "$ r3 = r2 p0", "$ z1 = $ r4 equal $ r3", "if $ z1 == 0 goto label2", "r8 = org locationtech jts geom line segment r0", "$ r6 = r8 p1", "$ r5 = r2 p1", "$ z2 = $ r6 equal $ r5", "if $ z2 == 0 goto label2", "$ z3 = 1", "goto label3", "label return $ z3", "if $ z2 == 0 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ this", "i1 = 16", "r7 = org locationtech jts geom precision model r0", "$ r2 = r7 model type", "$ r1 = org locationtech jts geom precision model float", "if $ r2 ! = $ r1 goto label1", "label r8 = org locationtech jts geom precision model r0", "$ r4 = r8 model type", "$ r3 = org locationtech jts geom precision model floating_single", "if $ r4 ! = $ r3 goto label2", "i1 = 6", "goto label3", "label return i1", "if $ r4 ! = $ r3 goto label2", "label r9 = org locationtech jts geom precision model r0", "$ r6 = r9 model type", "$ r5 = org locationtech jts geom precision model fix", "if $ r6 ! = $ r5 goto label3", "r10 = org locationtech jts geom precision model r0", "$ d0 = r10 get scale", "$ d1 = java lang math log $ d0", "$ d2 = java lang math log 10 0", "$ d3 = $ d1 $ d2", "$ d4 = java lang math ceil $ d3", "$ i0 = int $ d4", "i1 = 1 + $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts geom precision model r0", "$ d0 = r1 scale", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ d0 = r1 x", "r2 x = $ d0", "$ d1 = r1 y", "r2 y = $ d1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org locationtech jts geom prep prepare polygon contains r0", "$ r2 = r4 prep poly", "$ r3 = $ r2 get geometry", "z0 = $ r3 contain r1", "return z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org locationtech jts geom util component coordinate extracter get coordinate r1", "r3 = r2 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r5 = r3 next", "r4 = org locationtech jts geom coordinate $ r5", "r7 = org locationtech jts geom prep prepare polygon predicate r0", "$ r6 = r7 target point locator", "i0 = $ r6 locate r4", "if i0 == 0 goto label2", "return 0", "if i0 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = new org locationtech jts algorithm locate simple point in area locator", "specialinvoke r8 < init > r1", "r4 = r2 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label3", "$ r7 = r4 next", "r5 = org locationtech jts geom coordinate $ r7", "r9 = org locationtech jts algorithm locate point on geometry locator r8", "i0 = r9 locate r5", "if i0 == 2 goto label2", "return 1", "if i0 == 2 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ d1 = r2 x", "$ d0 = r0 x", "$ d5 = $ d1 - $ d0", "$ d3 = r1 y", "$ d2 = r0 y", "$ d4 = $ d3 - $ d2", "$ d13 = $ d5 * $ d4", "$ d7 = r1 x", "$ d6 = r0 x", "$ d11 = $ d7 - $ d6", "$ d9 = r2 y", "$ d8 = r0 y", "$ d10 = $ d9 - $ d8", "$ d12 = $ d11 * $ d10", "$ d14 = $ d13 - $ d12", "$ d15 = $ d14 2 0", "$ d16 = java lang math ab $ d15", "return $ d16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r5 = org locationtech jts geom triangle r0", "$ r3 = r5 p0", "r6 = org locationtech jts geom triangle r0", "$ r2 = r6 p1", "r7 = org locationtech jts geom triangle r0", "$ r1 = r7 p2", "$ r4 = org locationtech jts geom triangle in centre $ r3 $ r2 $ r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "$ d3 = java lang math sin d0", "$ d4 = java lang math co d0", "$ r0 = org locationtech jts geom util affine transformation rotation instance $ d3 $ d4 d1 d2", "return $ r0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org locationtech jts geom util affine transformation r0", "$ d3 = r3 m00", "$ d2 = r1 x", "$ d7 = $ d3 * $ d2", "r4 = org locationtech jts geom util affine transformation r0", "$ d5 = r4 m01", "$ d4 = r1 y", "$ d6 = $ d5 * $ d4", "$ d9 = $ d7 + $ d6", "r5 = org locationtech jts geom util affine transformation r0", "$ d8 = r5 m02", "d0 = $ d9 + $ d8", "r6 = org locationtech jts geom util affine transformation r0", "$ d11 = r6 m10", "$ d10 = r1 x", "$ d15 = $ d11 * $ d10", "r7 = org locationtech jts geom util affine transformation r0", "$ d13 = r7 m11", "$ d12 = r1 y", "$ d14 = $ d13 * $ d12", "$ d17 = $ d15 + $ d14", "r8 = org locationtech jts geom util affine transformation r0", "$ d16 = r8 m12", "d1 = $ d17 + $ d16", "r2 x = d0", "r2 y = d1", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r16 = new java lang string builder", "specialinvoke r16 < init >", "$ r2 = r16 append \\ `` affine transformation [ [ \\ ``", "r17 = org locationtech jts geom util affine transformation r0", "$ d0 = r17 m00", "$ r3 = $ r2 append $ d0", "$ r4 = $ r3 append \\", "r18 = org locationtech jts geom util affine transformation r0", "$ d1 = r18 m01", "$ r5 = $ r4 append $ d1", "$ r6 = $ r5 append \\", "r19 = org locationtech jts geom util affine transformation r0", "$ d2 = r19 m02", "$ r7 = $ r6 append $ d2", "$ r8 = $ r7 append \\ `` ] [ \\ ``", "r20 = org locationtech jts geom util affine transformation r0", "$ d3 = r20 m10", "$ r9 = $ r8 append $ d3", "$ r10 = $ r9 append \\", "r21 = org locationtech jts geom util affine transformation r0", "$ d4 = r21 m11", "$ r11 = $ r10 append $ d4", "$ r12 = $ r11 append \\", "r22 = org locationtech jts geom util affine transformation r0", "$ d5 = r22 m12", "$ r13 = $ r12 append $ d5", "$ r14 = $ r13 append \\ `` ] ] \\ ``", "$ r15 = $ r14 to string", "return $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ d3 = r1 x", "$ d2 = r0 x", "d0 = $ d3 - $ d2", "$ d5 = r1 y", "$ d4 = r0 y", "d1 = $ d5 - $ d4", "$ r2 = org locationtech jts geom util affine transformation translation instance d0 d1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org locationtech jts geom util sine star factory r0", "r1 num arm = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = org locationtech jts geomgraph edge r0", "$ r1 = r7 label", "$ z0 = $ r1 be area", "if $ z0 ! = 0 goto label1", "return 0", "if $ z0 ! = 0 goto label1", "label r8 = org locationtech jts geomgraph edge r0", "$ r2 = r8 pt", "$ i0 = lengthof $ r2", "if $ i0 == 3 goto label2", "label r9 = org locationtech jts geomgraph edge r0", "$ r3 = r9 pt", "$ r6 = $ r3 [ 0 ]", "r10 = org locationtech jts geomgraph edge r0", "$ r4 = r10 pt", "$ r5 = $ r4 [ 2 ]", "$ z1 = $ r6 equal $ r5", "if $ z1 == 0 goto label3", "return 1", "if $ z1 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r3 = org locationtech jts index bintree bintree r0", "$ r1 = r3 root", "if $ r1 == null goto label1", "r4 = org locationtech jts index bintree bintree r0", "$ r2 = r4 root", "$ i0 = $ r2 node size", "return $ i0", "if $ r1 == null goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = @ parameter2", "i1 = @ parameter3", "r7 = org locationtech jts index chain monotone chain overlap action r0", "$ r3 = r7 overlap seg1", "r1 get line segment i0 $ r3", "r8 = org locationtech jts index chain monotone chain overlap action r0", "$ r4 = r8 overlap seg2", "r2 get line segment i1 $ r4", "r9 = org locationtech jts index chain monotone chain overlap action r0", "$ r6 = r9 overlap seg1", "r10 = org locationtech jts index chain monotone chain overlap action r0", "$ r5 = r10 overlap seg2", "r11 = org locationtech jts index chain monotone chain overlap action r0", "r11 overlap $ r6 $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts index quadtree double bit r0", "$ l2 = r1 x bits", "$ l3 = $ l2 > > 52", "i0 = int $ l3", "i1 = i0 & 2047", "return i1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org locationtech jts index quadtree quadtree r0", "$ r1 = r3 root", "if $ r1 == null goto label1", "r4 = org locationtech jts index quadtree quadtree r0", "$ r2 = r4 root", "$ i0 = $ r2 size", "return $ i0", "if $ r1 == null goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r5 = new java util array list", "specialinvoke r5 < init >", "r6 = org locationtech jts index quadtree quadtree r0", "$ r3 = r6 root", "$ r3 add all item r5", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "$ r1 = new org locationtech jts index strtree interval", "$ d2 = java lang math min d0 d1", "$ d3 = java lang math max d0 d1", "specialinvoke $ r1 < init > $ d2 $ d3", "$ r2 = specialinvoke r0 query $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org locationtech jts io byte order data in stream r0", "r2 stream = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` point \\ ``", "$ d0 = r0 x", "$ r3 = $ r2 append $ d0", "$ r4 = $ r3 append \\ `` \\ ``", "$ d1 = r0 y", "$ r5 = $ r4 append $ d1", "$ r6 = $ r5 append \\ `` \\ ``", "$ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "r3 = org locationtech jts linearref length indexed line r0", "$ r2 = r3 linear geom", "$ d1 = org locationtech jts linearref length index of point index of after $ r2 r1 d0", "return $ d1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts linearref linear location r0", "$ i0 = r1 component index", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org locationtech jts linearref linear location r0", "$ i0 = r4 component index", "if $ i0 < 0 goto label1", "r5 = org locationtech jts linearref linear location r0", "$ i1 = r5 component index", "$ i2 = r1 get num geometry", "if $ i1 < $ i2 goto label2", "label return 0", "if $ i1 < $ i2 goto label2", "label r6 = org locationtech jts linearref linear location r0", "$ i3 = r6 component index", "$ r3 = r1 get geometry n $ i3", "r2 = org locationtech jts geom line string $ r3", "r7 = org locationtech jts linearref linear location r0", "$ i4 = r7 segment index", "if $ i4 < 0 goto label3", "r8 = org locationtech jts linearref linear location r0", "$ i5 = r8 segment index", "$ i6 = r2 get num point", "if $ i5 < = $ i6 goto label4", "label return 0", "if $ i5 < = $ i6 goto label4", "label r9 = org locationtech jts linearref linear location r0", "$ i7 = r9 segment index", "$ i8 = r2 get num point", "if $ i7 ! = $ i8 goto label5", "r10 = org locationtech jts linearref linear location r0", "$ d2 = r10 segment fraction", "$ b11 = $ d2 cmpl 0 0", "if $ b11 == 0 goto label5", "return 0", "if $ b11 == 0 goto label5", "label r11 = org locationtech jts linearref linear location r0", "$ d0 = r11 segment fraction", "$ b9 = $ d0 cmpg 0 0", "if $ b9 < 0 goto label6", "r12 = org locationtech jts linearref linear location r0", "$ d1 = r12 segment fraction", "$ b10 = $ d1 cmpl 1 0", "if $ b10 < = 0 goto label7", "label return 0", "if $ b10 < = 0 goto label7", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org locationtech jts linearref location indexed line r0", "$ r2 = r4 linear geom", "$ r3 = org locationtech jts linearref location index of point index of $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = org locationtech jts math dd r0", "$ z0 = r4 be na n", "if $ z0 == 0 goto label1", "$ r3 = org locationtech jts math dd na n", "return $ r3", "if $ z0 == 0 goto label1", "label r5 = org locationtech jts math dd r0", "$ z1 = r5 be positive", "if $ z1 == 0 goto label2", "r6 = org locationtech jts math dd r0", "$ r2 = r6 floor", "return $ r2", "if $ z1 == 0 goto label2", "label r7 = org locationtech jts math dd r0", "$ r1 = r7 ceil", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts math dd r0", "$ d0 = r1 hi", "$ b0 = $ d0 cmpl 0 0", "if $ b0 ! = 0 goto label1", "r2 = org locationtech jts math dd r0", "$ d1 = r2 lo", "$ b1 = $ d1 cmpl 0 0", "if $ b1 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b1 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org locationtech jts math dd r0", "$ d1 = r2 hi", "$ d0 = r1 hi", "$ b0 = $ d1 cmpl $ d0", "if $ b0 ! = 0 goto label1", "r3 = org locationtech jts math dd r0", "$ d3 = r3 lo", "$ d2 = r1 lo", "$ b1 = $ d3 cmpl $ d2", "if $ b1 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b1 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "if i0 > = 0 goto label1", "$ i3 = neg i0", "$ i4 = $ i3 % i1", "$ i5 = i1 - $ i4", "return $ i5", "if i0 > = 0 goto label1", "label $ i2 = i0 % i1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r6 = org locationtech jts nod fast nod validator r0", "specialinvoke r6 execute", "r7 = org locationtech jts nod fast nod validator r0", "$ z0 = r7 be valid", "if $ z0 ! = 0 goto label1", "r5 = new org locationtech jts geom topology exception", "r8 = org locationtech jts nod fast nod validator r0", "$ r2 = r8 get error message", "r9 = org locationtech jts nod fast nod validator r0", "$ r3 = r9 seg int", "$ r4 = $ r3 get interior intersection", "specialinvoke r5 < init > $ r2 $ r4", "r10 = java lang throwable r5", "throw r10", "if $ z0 ! = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new org locationtech jts nod interior intersection finder", "specialinvoke $ r2 < init > r0", "$ r2 set find all intersection 1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new org locationtech jts nod interior intersection finder", "specialinvoke $ r2 < init > r0", "$ r2 set find all intersection 1", "$ r2 set keep intersection 0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts nod interior intersection finder r0", "$ r1 = r2 int segment", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "i2 = @ parameter3", "r5 = new org locationtech jts geom coordinate", "$ r4 = r1 get intersection i2", "specialinvoke r5 < init > $ r4", "r6 = org locationtech jts nod noded segment string r0", "r6 add intersection r5 i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r4 = r2 next", "r3 = org locationtech jts nod noded segment string $ r4", "r5 = org locationtech jts nod snapround m c index snap rounder r0", "specialinvoke r5 compute vertex snap r3", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org locationtech jts operation buffer buffer builder r0", "r2 work precision model = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org locationtech jts operation buffer buffer op r0", "$ r1 = r2 buf params", "$ r1 set end cap style i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts operation buffer buffer parameter r0", "$ d0 = r1 simplify factor", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r4 = new java util array list", "specialinvoke r4 < init >", "r5 = new org locationtech jts operation distance connect element location filter", "specialinvoke r5 < init > r4", "r6 = org locationtech jts geom geometry filter r5", "r0 apply r6", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r22 = org locationtech jts operation linemerge line merge direct edge r0", "$ r1 = r22 get to node", "$ i0 = $ r1 get degree", "if $ i0 == 2 goto label1", "return null", "if $ i0 == 2 goto label1", "label r23 = org locationtech jts operation linemerge line merge direct edge r0", "$ r2 = r23 get to node", "$ r3 = $ r2 get out edge", "$ r4 = $ r3 get edge", "$ r5 = $ r4 get 0", "r24 = org locationtech jts operation linemerge line merge direct edge r0", "$ r6 = r24 get sym", "if $ r5 ! = $ r6 goto label2", "r25 = org locationtech jts operation linemerge line merge direct edge r0", "$ r17 = r25 get to node", "$ r18 = $ r17 get out edge", "$ r19 = $ r18 get edge", "$ r20 = $ r19 get 1", "$ r21 = org locationtech jts operation linemerge line merge direct edge $ r20", "return $ r21", "if $ r5 ! = $ r6 goto label2", "label r26 = org locationtech jts operation linemerge line merge direct edge r0", "$ r7 = r26 get to node", "$ r8 = $ r7 get out edge", "$ r9 = $ r8 get edge", "$ r10 = $ r9 get 1", "r27 = org locationtech jts operation linemerge line merge direct edge r0", "$ r11 = r27 get sym", "if $ r10 ! = $ r11 goto label3", "$ z0 = 1", "goto label4", "label org locationtech jts util assert be true $ z0", "r28 = org locationtech jts operation linemerge line merge direct edge r0", "$ r12 = r28 get to node", "$ r13 = $ r12 get out edge", "$ r14 = $ r13 get edge", "$ r15 = $ r14 get 0", "$ r16 = org locationtech jts operation linemerge line merge direct edge $ r15", "return $ r16", "if $ r10 ! = $ r11 goto label3", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], [35], [36], [37], [38], [39], [40], [], [42], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts operation linemerge line merge edge r0", "$ r1 = r2 line", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org locationtech jts operation overlay point builder r0", "specialinvoke r2 extract non cover result node i0", "r3 = org locationtech jts operation overlay point builder r0", "$ r1 = r3 result point list", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new org locationtech jts geom coordinate list", "r7 = org locationtech jts operation overlay snap line string snapper r0", "$ r5 = r7 src pt", "specialinvoke r6 < init > $ r5", "r8 = org locationtech jts operation overlay snap line string snapper r0", "specialinvoke r8 snap vertex r6 r1", "r9 = org locationtech jts operation overlay snap line string snapper r0", "specialinvoke r9 snap segment r6 r1", "r3 = r6 to coordinate array", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r3 = r0", "$ r2 = new java util array list", "specialinvoke $ r2 < init >", "label $ r2 add r3", "r3 = r3 get next", "if r3 == null goto label2", "$ z2 = 1", "goto label3", "label org locationtech jts util assert be true $ z2 \\ `` found null de in ring\\ ``", "if r3 == r0 goto label4", "$ z1 = r3 be in ring", "if $ z1 ! = 0 goto label5", "label $ z3 = 1", "goto label6", "label org locationtech jts util assert be true $ z3 \\ `` find de already in ring\\ ``", "if r3 ! = r0 goto label1", "return $ r2", "if $ z1 ! = 0 goto label5", "label $ z3 = 0", "if r3 == null goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts operation polygonize polygonizer r0", "specialinvoke r2 polygonize", "r3 = org locationtech jts operation polygonize polygonizer r0", "$ r1 = r3 cut edge", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r16 = org locationtech jts operation predicate rectangle intersect r0", "$ r5 = r16 rect env", "$ r6 = r1 get envelope internal", "$ z0 = $ r5 intersect $ r6", "if $ z0 ! = 0 goto label1", "return 0", "if $ z0 ! = 0 goto label1", "label r13 = new org locationtech jts operation predicate envelope intersects visitor", "r17 = org locationtech jts operation predicate rectangle intersect r0", "$ r8 = r17 rect env", "specialinvoke r13 < init > $ r8", "r13 apply to r1", "$ z1 = r13 intersects", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label r14 = new org locationtech jts operation predicate geometry contain point visitor", "r18 = org locationtech jts operation predicate rectangle intersect r0", "$ r10 = r18 rectangle", "specialinvoke r14 < init > $ r10", "r14 apply to r1", "$ z2 = r14 contains point", "if $ z2 == 0 goto label3", "label r15 = new org locationtech jts operation predicate rectangle intersects segment visitor", "r19 = org locationtech jts operation predicate rectangle intersect r0", "$ r12 = r19 rectangle", "specialinvoke r15 < init > $ r12", "r15 apply to r1", "$ z3 = r15 intersects", "if $ z3 == 0 goto label4", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r3 = org locationtech jts operation relate relate op r0", "$ r1 = r3 relate", "$ r2 = $ r1 compute i m", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts planargraph direct edge star r0", "$ r1 = r2 out edge", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org locationtech jts planargraph graph component r0", "r2 data = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org locationtech jts planargraph node r0", "$ r2 = r3 de star", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts planargraph node r0", "r1 pt = null", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["l0 = @ parameter0", "i1 = @ parameter1", "l2 = 1l < < i1", "$ l3 = l0 & l2", "$ b4 = $ l3 cmp 0l", "if $ b4 == 0 goto label1", "$ b5 = 1", "goto label2", "label return $ b5", "if $ b4 == 0 goto label1", "label $ b5 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "$ b0 = d0 cmpg 0 0", "if $ b0 > = 0 goto label1", "r2 = new java lang illegal argument exception", "specialinvoke r2 < init > \\ `` tolerance must be non-negative\\ ``", "throw r2", "if $ b0 > = 0 goto label1", "label r3 = org locationtech jts simplify v w simplifier r0", "r3 distance tolerance = d0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org locationtech jts triangulate conform delaunay triangulator r0", "r3 segment = r1", "r4 = org locationtech jts triangulate conform delaunay triangulator r0", "r4 seg vertex = r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = org locationtech jts triangulate quadedge quad edge r0", "$ r1 = r3 rot", "$ r2 = $ r1 rot", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org locationtech jts triangulate quadedge quad edge subdivision r0", "$ r2 = r8 frame vertex", "$ r3 = $ r2 [ 0 ]", "$ z0 = r1 equal $ r3", "if $ z0 == 0 goto label1", "return 1", "if $ z0 == 0 goto label1", "label r9 = org locationtech jts triangulate quadedge quad edge subdivision r0", "$ r4 = r9 frame vertex", "$ r5 = $ r4 [ 1 ]", "$ z1 = r1 equal $ r5", "if $ z1 == 0 goto label2", "label r10 = org locationtech jts triangulate quadedge quad edge subdivision r0", "$ r6 = r10 frame vertex", "$ r7 = $ r6 [ 2 ]", "$ z2 = r1 equal $ r7", "if $ z2 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new org locationtech jts triangulate quadedge quad edge subdivision $ triangle circumcentre visitor", "specialinvoke r10 < init >", "r12 = org locationtech jts triangulate quadedge quad edge subdivision r0", "r13 = org locationtech jts triangulate quadedge triangle visitor r10", "r12 visit triangle r13 1", "r11 = new java util array list", "specialinvoke r11 < init >", "r14 = org locationtech jts triangulate quadedge quad edge subdivision r0", "r3 = r14 get vertex unique edge 0", "r4 = r3 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label2", "$ r8 = r4 next", "r5 = org locationtech jts triangulate quadedge quad edge $ r8", "r15 = org locationtech jts triangulate quadedge quad edge subdivision r0", "$ r9 = r15 get voronoi cell polygon r5 r1", "r11 add $ r9", "goto label1", "if $ z0 == 0 goto label2", "label return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r1 = newarray org locationtech jts triangulate quadedge quad edge triangle [ 3 ]", "i0 = 0", "label if i0 > = 3 goto label2", "r6 = org locationtech jts triangulate quadedge quad edge triangle r0", "$ r2 = r6 get edge i0", "$ r3 = $ r2 sym", "$ r4 = $ r3 get data", "$ r5 = org locationtech jts triangulate quadedge quad edge triangle $ r4", "r1 [ i0 ] = $ r5", "i0 = i0 + 1", "goto label1", "label if i0 > = 3 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "d0 = r1 get x", "d1 = r1 get y", "$ d12 = r2 get x", "d2 = $ d12 - d0", "$ d13 = r3 get x", "d3 = $ d13 - d0", "$ d14 = r2 get y", "d4 = $ d14 - d1", "$ d15 = r3 get y", "d5 = $ d15 - d1", "$ d17 = d2 * d5", "$ d16 = d3 * d4", "d6 = $ d17 - $ d16", "r4 = org locationtech jts triangulate quadedge vertex r0", "$ d18 = r4 get x", "d7 = $ d18 - d0", "r5 = org locationtech jts triangulate quadedge vertex r0", "$ d19 = r5 get y", "d8 = $ d19 - d1", "$ d21 = d5 * d7", "$ d20 = d3 * d8", "$ d22 = $ d21 - $ d20", "d9 = $ d22 d6", "$ d23 = neg d4", "$ d25 = $ d23 * d7", "$ d24 = d2 * d8", "$ d26 = $ d25 + $ d24", "d10 = $ d26 d6", "$ d27 = r1 get z", "$ d28 = r2 get z", "$ d29 = r1 get z", "$ d30 = $ d28 - $ d29", "$ d31 = d9 * $ d30", "$ d32 = $ d27 + $ d31", "$ d33 = r3 get z", "$ d34 = r1 get z", "$ d35 = $ d33 - $ d34", "$ d36 = d10 * $ d35", "d11 = $ d32 + $ d36", "return d11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], []]}
{"nodes": ["r0 = @ parameter0", "d0 = @ parameter1", "$ r2 = new org locationtech jts algorithm construct maximum inscribed circle", "specialinvoke $ r2 < init > r0 d0", "$ r3 = $ r2 get radius line", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r1 = org locationtech jts geom coordinate create i0 i1", "r2 = r1 get class", "z2 = 1", "i5 = 0", "label $ i2 = lengthof r0", "if i5 > = $ i2 goto label3", "r9 = r0 [ i5 ]", "if r9 == null goto label2", "$ r8 = r9 get class", "$ z1 = $ r8 equal r2", "if $ z1 ! = 0 goto label2", "z2 = 0", "goto label3", "label if z2 == 0 goto label4", "return r0", "label if z2 == 0 goto label4", "label r10 = r1 get class", "$ i3 = lengthof r0", "$ r5 = java lang reflect array new instance r10 $ i3", "$ r6 = org locationtech jts geom coordinate [ ] $ r5", "r11 = org locationtech jts geom coordinate [ ] $ r6", "i6 = 0", "label $ i4 = lengthof r11", "if i6 > = $ i4 goto label8", "r3 = r0 [ i6 ]", "if r3 == null goto label6", "$ r7 = r3 get class", "$ z0 = $ r7 equal r2", "if $ z0 ! = 0 goto label6", "r4 = org locationtech jts geom coordinate create i0 i1", "r4 set coordinate r3", "r11 [ i6 ] = r4", "goto label7", "label i6 = i6 + 1", "goto label5", "if $ z0 ! = 0 goto label6", "label r11 [ i6 ] = r3", "if i6 > = $ i4 goto label8", "label return r11", "if $ z1 ! = 0 goto label2", "label i5 = i5 + 1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [], [39], [40], [41], [42], [43], [44], []]}
{"nodes": ["r0 = @ this", "r2 = new org locationtech jts geom envelope", "r3 = org locationtech jts geom envelope r0", "specialinvoke r2 < init > r3", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org locationtech jts geom geometry r0", "$ r2 = org locationtech jts geom geometry overlay sym difference r3 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = org locationtech jts geom intersection matrix r0", "$ r1 = r7 matrix", "$ r2 = $ r1 [ 0 ]", "$ i0 = $ r2 [ 0 ]", "$ z0 = org locationtech jts geom intersection matrix be true $ i0", "if $ z0 == 0 goto label1", "r8 = org locationtech jts geom intersection matrix r0", "$ r3 = r8 matrix", "$ r4 = $ r3 [ 0 ]", "$ i1 = $ r4 [ 2 ]", "if $ i1 ! = -1 goto label1", "r9 = org locationtech jts geom intersection matrix r0", "$ r5 = r9 matrix", "$ r6 = $ r5 [ 1 ]", "$ i2 = $ r6 [ 2 ]", "if $ i2 ! = -1 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ i2 ! = -1 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = org locationtech jts geom util sine star factory r0", "r1 arm length ratio = d0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts index chain monotone chain r0", "$ r1 = r2 context", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts io byte order data in stream r0", "$ r1 = r2 buf last", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org locationtech jts io w k t file reader r0", "r1 be strict parse = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts math vector3 d r0", "$ d0 = r1 z", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts math vector3 d r0", "$ d1 = r1 x", "r2 = org locationtech jts math vector3 d r0", "$ d0 = r2 x", "$ d5 = $ d1 * $ d0", "r3 = org locationtech jts math vector3 d r0", "$ d3 = r3 y", "r4 = org locationtech jts math vector3 d r0", "$ d2 = r4 y", "$ d4 = $ d3 * $ d2", "$ d9 = $ d5 + $ d4", "r5 = org locationtech jts math vector3 d r0", "$ d7 = r5 z", "r6 = org locationtech jts math vector3 d r0", "$ d6 = r6 z", "$ d8 = $ d7 * $ d6", "$ d10 = $ d9 + $ d8", "$ d11 = java lang math sqrt $ d10", "return $ d11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r7 = new java util array list", "specialinvoke r7 < init >", "r8 = org locationtech jts operation overlayng overlay graph r0", "$ r5 = r8 get edge", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r6 = r2 next", "r3 = org locationtech jts operation overlayng overlay edge $ r6", "$ z1 = r3 be in result area", "if $ z1 == 0 goto label2", "r7 add r3", "label goto label1", "if $ z0 == 0 goto label3", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new org locationtech jts operation union unary union op", "specialinvoke $ r2 < init > r0", "$ r3 = org locationtech jts operation overlayng overlay n g robust overlay_union", "$ r2 set union function $ r3", "$ r4 = $ r2 union", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = new org locationtech jts operation polygonize hole assigner", "specialinvoke $ r3 < init > r1", "$ r3 assign hole to shell r0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts operation valid polygon ring r0", "$ r1 = r2 shell", "if $ r1 ! = r0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 ! = r0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new org junit rule verifier $ 1", "r5 = org junit rule verifier r0", "specialinvoke r4 < init > r5 r1", "r6 = org junit runner model statement r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java util collection empty list", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = new org hdr histogram histogram", "r4 = org latency utils latency stats r0", "$ l2 = r4 low trackable latency", "r5 = org latency utils latency stats r0", "$ l1 = r5 high trackable latency", "r6 = org latency utils latency stats r0", "$ i0 = r6 number of significant value digits", "specialinvoke r3 < init > $ l2 $ l1 $ i0", "r7 = org latency utils latency stats r0", "r7 get interval histogram into r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org tensorflow data type r0", "$ i0 = r1 byte size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org tensorflow graph r0", "$ r4 = r8 native handle lock", "entermonitor $ r4", "label r9 = org tensorflow graph r0", "$ l1 = r9 native handle", "l0 = org tensorflow graph operation $ l1 r1", "$ b2 = l0 cmp 0l", "if $ b2 ! = 0 goto label3", "exitmonitor $ r4", "label return null", "if $ b2 ! = 0 goto label3", "label r7 = new org tensorflow operation", "r10 = org tensorflow graph r0", "specialinvoke r7 < init > r10 l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` add\\ ``", "r3 = $ r4 op builder \\ `` add\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core add", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r8 = r0 graph", "$ r9 = r0 make op name \\ `` add sparse to tensor map\\ ``", "r5 = $ r8 op builder \\ `` add sparse to tensor map\\", "$ r10 = r1 a output", "r5 add input $ r10", "$ r12 = r2 a output", "r5 add input $ r12", "$ r14 = r3 a output", "r5 add input $ r14", "if r4 == null goto label4", "i0 = lengthof r4", "i1 = 0", "label if i1 > = i0 goto label4", "r7 = r4 [ i1 ]", "$ r18 = org tensorflow op core add sparse to tensor map $ option access $ 000 r7", "if $ r18 == null goto label2", "$ r22 = org tensorflow op core add sparse to tensor map $ option access $ 000 r7", "r5 set attr \\ `` container\\", "label $ r19 = org tensorflow op core add sparse to tensor map $ option access $ 100 r7", "if $ r19 == null goto label3", "$ r20 = org tensorflow op core add sparse to tensor map $ option access $ 100 r7", "r5 set attr \\ `` shared_name\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label4", "label $ r16 = new org tensorflow op core add sparse to tensor map", "$ r17 = r5 build", "specialinvoke $ r16 < init > $ r17", "return $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core all r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` asinh\\ ``", "r2 = $ r3 op builder \\ `` asinh\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core asinh", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` assign sub\\ ``", "r4 = $ r7 op builder \\ `` assign sub\\", "$ r9 = r1 a output", "r4 add input $ r9", "$ r11 = r2 a output", "r4 add input $ r11", "if r3 == null goto label3", "i0 = lengthof r3", "i1 = 0", "label if i1 > = i0 goto label3", "r6 = r3 [ i1 ]", "$ r15 = org tensorflow op core assign sub $ option access $ 000 r6", "if $ r15 == null goto label2", "$ r16 = org tensorflow op core assign sub $ option access $ 000 r6", "$ z0 = $ r16 boolean value", "r4 set attr \\ `` use_locking\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r13 = new org tensorflow op core assign sub", "$ r14 = r4 build", "specialinvoke $ r13 < init > $ r14", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core audio summary r0", "$ r1 = r2 summary", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core barrier r0", "$ r1 = r2 handle", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` barrier incomplete size\\ ``", "r2 = $ r3 op builder \\ `` barrier incomplete size\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core barrier incomplete size", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core barrier ready size r0", "$ r1 = r2 size", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "$ r8 = r0 graph", "$ r9 = r0 make op name \\ `` batch dataset v2\\ ``", "r6 = $ r8 op builder \\ `` batch dataset v2\\", "$ r10 = r1 a output", "r6 add input $ r10", "$ r12 = r2 a output", "r6 add input $ r12", "$ r14 = r3 a output", "r6 add input $ r14", "$ i0 = r4 size", "r7 = newarray org tensorflow data type [ $ i0 ]", "i4 = 0", "label $ i1 = lengthof r7", "if i4 > = $ i1 goto label2", "$ r22 = r4 get i4", "$ r23 = java lang class $ r22", "$ r24 = org tensorflow data type from class $ r23", "r7 [ i4 ] = $ r24", "i4 = i4 + 1", "goto label1", "if i4 > = $ i1 goto label2", "label r6 set attr \\ `` output_types\\", "$ i2 = r5 size", "r25 = newarray org tensorflow shape [ $ i2 ]", "i5 = 0", "label $ i3 = lengthof r25", "if i5 > = $ i3 goto label4", "$ r20 = r5 get i5", "$ r21 = org tensorflow shape $ r20", "r25 [ i5 ] = $ r21", "i5 = i5 + 1", "goto label3", "if i5 > = $ i3 goto label4", "label r6 set attr \\ `` output_shapes\\", "$ r18 = new org tensorflow op core batch dataset v2", "$ r19 = r6 build", "specialinvoke $ r18 < init > $ r19", "return $ r18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core batch norm with global normalization grad r0", "$ r1 = r2 db", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` bitwise or\\ ``", "r3 = $ r4 op builder \\ `` bitwise or\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core bitwise or", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` bitwise xor\\ ``", "r3 = $ r4 op builder \\ `` bitwise xor\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core bitwise xor", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core boost tree example debug output r0", "$ r1 = r2 example debug output serialize", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core boost tree get ensemble state r0", "$ r1 = r2 num attempt layer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core boost tree make stats summary r0", "$ r1 = r2 stats summary", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core boost tree train predict r0", "$ r1 = r2 partial logits", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` check numerics\\ ``", "r3 = $ r4 op builder \\ `` check numerics\\", "$ r6 = r1 a output", "r3 add input $ r6", "r3 set attr \\ `` message\\", "$ r9 = new org tensorflow op core check numerics", "$ r10 = r3 build", "specialinvoke $ r9 < init > $ r10", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` batch cholesky grad\\ ``", "r3 = $ r4 op builder \\ `` batch cholesky grad\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core batch cholesky grad", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core compute accidental hit r0", "$ r1 = r2 weight", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` conditional accumulator\\ ``", "r4 = $ r7 op builder \\ `` conditional accumulator\\", "$ r9 = org tensorflow data type from class r1", "r4 set attr \\ `` dtype\\", "r4 set attr \\ `` shape\\", "if r3 == null goto label5", "i0 = lengthof r3", "i1 = 0", "label if i1 > = i0 goto label5", "r6 = r3 [ i1 ]", "$ r14 = org tensorflow op core conditional accumulator $ option access $ 000 r6", "if $ r14 == null goto label2", "$ r21 = org tensorflow op core conditional accumulator $ option access $ 000 r6", "r4 set attr \\ `` container\\", "label $ r15 = org tensorflow op core conditional accumulator $ option access $ 100 r6", "if $ r15 == null goto label3", "$ r19 = org tensorflow op core conditional accumulator $ option access $ 100 r6", "r4 set attr \\ `` shared_name\\", "label $ r16 = org tensorflow op core conditional accumulator $ option access $ 200 r6", "if $ r16 == null goto label4", "$ r17 = org tensorflow op core conditional accumulator $ option access $ 200 r6", "r4 set attr \\ `` reduction_type\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label5", "label $ r12 = new org tensorflow op core conditional accumulator", "$ r13 = r4 build", "specialinvoke $ r12 < init > $ r13", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` consume mutex lock\\ ``", "r2 = $ r3 op builder \\ `` consume mutex lock\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core consume mutex lock", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "r6 = @ parameter6", "$ r11 = r0 graph", "$ r12 = r0 make op name \\ `` conv2 d backprop input\\ ``", "r7 = $ r11 op builder \\ `` conv2 d backprop input\\", "$ r13 = r1 a output", "r7 add input $ r13", "$ r15 = r2 a output", "r7 add input $ r15", "$ r17 = r3 a output", "r7 add input $ r17", "$ i1 = r4 size", "r8 = newarray long [ $ i1 ]", "i7 = 0", "label $ i2 = lengthof r8", "if i7 > = $ i2 goto label2", "$ r35 = r4 get i7", "$ r36 = java lang long $ r35", "$ l6 = $ r36 long value", "r8 [ i7 ] = $ l6", "i7 = i7 + 1", "goto label1", "if i7 > = $ i2 goto label2", "label r7 set attr \\ `` strides\\", "r7 set attr \\ `` padding\\", "if r6 == null goto label9", "i0 = lengthof r6", "i8 = 0", "label if i8 > = i0 goto label9", "r9 = r6 [ i8 ]", "$ r23 = org tensorflow op core conv2 d backprop input $ option access $ 000 r9", "if $ r23 == null goto label4", "$ r33 = org tensorflow op core conv2 d backprop input $ option access $ 000 r9", "$ z0 = $ r33 boolean value", "r7 set attr \\ `` use_cudnn_on_gpu\\", "label $ r24 = org tensorflow op core conv2 d backprop input $ option access $ 100 r9", "if $ r24 == null goto label5", "$ r31 = org tensorflow op core conv2 d backprop input $ option access $ 100 r9", "r7 set attr \\ `` data_format\\", "label $ r25 = org tensorflow op core conv2 d backprop input $ option access $ 200 r9", "if $ r25 == null goto label8", "$ r26 = org tensorflow op core conv2 d backprop input $ option access $ 200 r9", "$ i3 = $ r26 size", "r10 = newarray long [ $ i3 ]", "i9 = 0", "label $ i4 = lengthof r10", "if i9 > = $ i4 goto label7", "$ r28 = org tensorflow op core conv2 d backprop input $ option access $ 200 r9", "$ r29 = $ r28 get i9", "$ r30 = java lang long $ r29", "$ l5 = $ r30 long value", "r10 [ i9 ] = $ l5", "i9 = i9 + 1", "goto label6", "if i9 > = $ i4 goto label7", "label r7 set attr \\ `` dilations\\", "label i8 = i8 + 1", "goto label3", "label if i8 > = i0 goto label9", "label $ r21 = new org tensorflow op core conv2 d backprop input", "$ r22 = r7 build", "specialinvoke $ r21 < init > $ r22", "return $ r21"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [], [60], [61], [62], [], [64], [65], [66], [67], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` cross\\ ``", "r3 = $ r4 op builder \\ `` cross\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core cross", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core c t c greedy decoder r0", "$ r1 = r2 decode index", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core c t c greedy decoder r0", "$ r1 = r2 decode value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core c t c greedy decoder r0", "$ r1 = r2 decode shape", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core c t c loss r0", "$ r1 = r2 loss", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` dataset to graph\\ ``", "r2 = $ r3 op builder \\ `` dataset to graph\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core dataset to graph", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r8 = r0 graph", "$ r9 = r0 make op name \\ `` dense to dense set operation\\ ``", "r5 = $ r8 op builder \\ `` dense to dense set operation\\", "$ r10 = r1 a output", "r5 add input $ r10", "$ r12 = r2 a output", "r5 add input $ r12", "r5 set attr \\ `` set_operation\\", "if r4 == null goto label3", "i0 = lengthof r4", "i1 = 0", "label if i1 > = i0 goto label3", "r7 = r4 [ i1 ]", "$ r17 = org tensorflow op core dense to dense set operation $ option access $ 000 r7", "if $ r17 == null goto label2", "$ r18 = org tensorflow op core dense to dense set operation $ option access $ 000 r7", "$ z0 = $ r18 boolean value", "r5 set attr \\ `` validate_indices\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r15 = new org tensorflow op core dense to dense set operation", "$ r16 = r5 build", "specialinvoke $ r15 < init > $ r16", "return $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "$ r10 = r0 graph", "$ r11 = r0 make op name \\ `` depthwise conv2d native\\ ``", "r6 = $ r10 op builder \\ `` depthwise conv2d native\\", "$ r12 = r1 a output", "r6 add input $ r12", "$ r14 = r2 a output", "r6 add input $ r14", "$ i1 = r3 size", "r7 = newarray long [ $ i1 ]", "i7 = 0", "label $ i2 = lengthof r7", "if i7 > = $ i2 goto label2", "$ r29 = r3 get i7", "$ r30 = java lang long $ r29", "$ l6 = $ r30 long value", "r7 [ i7 ] = $ l6", "i7 = i7 + 1", "goto label1", "if i7 > = $ i2 goto label2", "label r6 set attr \\ `` strides\\", "r6 set attr \\ `` padding\\", "if r5 == null goto label8", "i0 = lengthof r5", "i8 = 0", "label if i8 > = i0 goto label8", "r8 = r5 [ i8 ]", "$ r20 = org tensorflow op core depthwise conv2d native $ option access $ 000 r8", "if $ r20 == null goto label4", "$ r27 = org tensorflow op core depthwise conv2d native $ option access $ 000 r8", "r6 set attr \\ `` data_format\\", "label $ r21 = org tensorflow op core depthwise conv2d native $ option access $ 100 r8", "if $ r21 == null goto label7", "$ r22 = org tensorflow op core depthwise conv2d native $ option access $ 100 r8", "$ i3 = $ r22 size", "r9 = newarray long [ $ i3 ]", "i9 = 0", "label $ i4 = lengthof r9", "if i9 > = $ i4 goto label6", "$ r24 = org tensorflow op core depthwise conv2d native $ option access $ 100 r8", "$ r25 = $ r24 get i9", "$ r26 = java lang long $ r25", "$ l5 = $ r26 long value", "r9 [ i9 ] = $ l5", "i9 = i9 + 1", "goto label5", "if i9 > = $ i4 goto label6", "label r6 set attr \\ `` dilations\\", "label i8 = i8 + 1", "goto label3", "label if i8 > = i0 goto label8", "label $ r18 = new org tensorflow op core depthwise conv2d native", "$ r19 = r6 build", "specialinvoke $ r18 < init > $ r19", "return $ r18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [], [52], [53], [54], [], [56], [57], [58], [59], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` destroy temporary variable\\ ``", "r3 = $ r4 op builder \\ `` destroy temporary variable\\", "$ r6 = r1 a output", "r3 add input $ r6", "r3 set attr \\ `` var_name\\", "$ r9 = new org tensorflow op core destroy temporary variable", "$ r10 = r3 build", "specialinvoke $ r9 < init > $ r10", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` elu\\ ``", "r2 = $ r3 op builder \\ `` elu\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core elu", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core encode wav r0", "$ r1 = r2 content", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` experimental assert next dataset\\ ``", "r5 = $ r7 op builder \\ `` experimental assert next dataset\\", "$ r9 = r1 a output", "r5 add input $ r9", "$ r11 = r2 a output", "r5 add input $ r11", "$ i0 = r3 size", "r6 = newarray org tensorflow data type [ $ i0 ]", "i4 = 0", "label $ i1 = lengthof r6", "if i4 > = $ i1 goto label2", "$ r19 = r3 get i4", "$ r20 = java lang class $ r19", "$ r21 = org tensorflow data type from class $ r20", "r6 [ i4 ] = $ r21", "i4 = i4 + 1", "goto label1", "if i4 > = $ i1 goto label2", "label r5 set attr \\ `` output_types\\", "$ i2 = r4 size", "r22 = newarray org tensorflow shape [ $ i2 ]", "i5 = 0", "label $ i3 = lengthof r22", "if i5 > = $ i3 goto label4", "$ r17 = r4 get i5", "$ r18 = org tensorflow shape $ r17", "r22 [ i5 ] = $ r18", "i5 = i5 + 1", "goto label3", "if i5 > = $ i3 goto label4", "label r5 set attr \\ `` output_shapes\\", "$ r15 = new org tensorflow op core experimental assert next dataset", "$ r16 = r5 build", "specialinvoke $ r15 < init > $ r16", "return $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` experimental byte produce stats dataset\\ ``", "r5 = $ r7 op builder \\ `` experimental byte produce stats dataset\\", "$ r9 = r1 a output", "r5 add input $ r9", "$ r11 = r2 a output", "r5 add input $ r11", "$ i0 = r3 size", "r6 = newarray org tensorflow data type [ $ i0 ]", "i4 = 0", "label $ i1 = lengthof r6", "if i4 > = $ i1 goto label2", "$ r19 = r3 get i4", "$ r20 = java lang class $ r19", "$ r21 = org tensorflow data type from class $ r20", "r6 [ i4 ] = $ r21", "i4 = i4 + 1", "goto label1", "if i4 > = $ i1 goto label2", "label r5 set attr \\ `` output_types\\", "$ i2 = r4 size", "r22 = newarray org tensorflow shape [ $ i2 ]", "i5 = 0", "label $ i3 = lengthof r22", "if i5 > = $ i3 goto label4", "$ r17 = r4 get i5", "$ r18 = org tensorflow shape $ r17", "r22 [ i5 ] = $ r18", "i5 = i5 + 1", "goto label3", "if i5 > = $ i3 goto label4", "label r5 set attr \\ `` output_shapes\\", "$ r15 = new org tensorflow op core experimental byte produce stats dataset", "$ r16 = r5 build", "specialinvoke $ r15 < init > $ r16", "return $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core experimental dataset cardinality r0", "$ r1 = r2 cardinality", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` experimental indexed dataset get\\ ``", "r5 = $ r7 op builder \\ `` experimental indexed dataset get\\", "$ r9 = r1 a output", "r5 add input $ r9", "$ r11 = r2 a output", "r5 add input $ r11", "$ i0 = r3 size", "r6 = newarray org tensorflow data type [ $ i0 ]", "i4 = 0", "label $ i1 = lengthof r6", "if i4 > = $ i1 goto label2", "$ r19 = r3 get i4", "$ r20 = java lang class $ r19", "$ r21 = org tensorflow data type from class $ r20", "r6 [ i4 ] = $ r21", "i4 = i4 + 1", "goto label1", "if i4 > = $ i1 goto label2", "label r5 set attr \\ `` output_types\\", "$ i2 = r4 size", "r22 = newarray org tensorflow shape [ $ i2 ]", "i5 = 0", "label $ i3 = lengthof r22", "if i5 > = $ i3 goto label4", "$ r17 = r4 get i5", "$ r18 = org tensorflow shape $ r17", "r22 [ i5 ] = $ r18", "i5 = i5 + 1", "goto label3", "if i5 > = $ i3 goto label4", "label r5 set attr \\ `` output_shapes\\", "$ r15 = new org tensorflow op core experimental indexed dataset get", "$ r16 = r5 build", "specialinvoke $ r15 < init > $ r16", "return $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` experimental matching file dataset\\ ``", "r2 = $ r3 op builder \\ `` experimental matching file dataset\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core experimental matching file dataset", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` experimental sleep dataset\\ ``", "r5 = $ r7 op builder \\ `` experimental sleep dataset\\", "$ r9 = r1 a output", "r5 add input $ r9", "$ r11 = r2 a output", "r5 add input $ r11", "$ i0 = r3 size", "r6 = newarray org tensorflow data type [ $ i0 ]", "i4 = 0", "label $ i1 = lengthof r6", "if i4 > = $ i1 goto label2", "$ r19 = r3 get i4", "$ r20 = java lang class $ r19", "$ r21 = org tensorflow data type from class $ r20", "r6 [ i4 ] = $ r21", "i4 = i4 + 1", "goto label1", "if i4 > = $ i1 goto label2", "label r5 set attr \\ `` output_types\\", "$ i2 = r4 size", "r22 = newarray org tensorflow shape [ $ i2 ]", "i5 = 0", "label $ i3 = lengthof r22", "if i5 > = $ i3 goto label4", "$ r17 = r4 get i5", "$ r18 = org tensorflow shape $ r17", "r22 [ i5 ] = $ r18", "i5 = i5 + 1", "goto label3", "if i5 > = $ i3 goto label4", "label r5 set attr \\ `` output_shapes\\", "$ r15 = new org tensorflow op core experimental sleep dataset", "$ r16 = r5 build", "specialinvoke $ r15 < init > $ r16", "return $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` batch f f t2 d\\ ``", "r2 = $ r3 op builder \\ `` batch f f t2 d\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core batch f f t2 d", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core fractional max pool r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core fuse batch norm grad r0", "$ r1 = r2 scale backprop", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core generate vocab remapping r0", "$ r1 = r2 num present", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` great equal\\ ``", "r3 = $ r4 op builder \\ `` great equal\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core great equal", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` igamma\\ ``", "r3 = $ r4 op builder \\ `` igamma\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core igamma", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` igammac\\ ``", "r3 = $ r4 op builder \\ `` igammac\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core igammac", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r5 = r0 graph", "$ r6 = r0 make op name \\ `` immutable const\\ ``", "r4 = $ r5 op builder \\ `` immutable const\\", "$ r7 = org tensorflow data type from class r1", "r4 set attr \\ `` dtype\\", "r4 set attr \\ `` shape\\", "r4 set attr \\ `` memory_region_name\\", "$ r11 = new org tensorflow op core immutable const", "$ r12 = r4 build", "specialinvoke $ r11 < init > $ r12", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core in top k v2 r0", "$ r1 = r2 precision", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` be boosted tree quantile stream resource initialized\\ ``", "r2 = $ r3 op builder \\ `` be boosted tree quantile stream resource initialized\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core be boost tree quantile stream resource initialize", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` leaky relu\\ ``", "r3 = $ r6 op builder \\ `` leaky relu\\", "$ r8 = r1 a output", "r3 add input $ r8", "if r2 == null goto label3", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label3", "r5 = r2 [ i1 ]", "$ r12 = org tensorflow op core leaky relu $ option access $ 000 r5", "if $ r12 == null goto label2", "$ r13 = org tensorflow op core leaky relu $ option access $ 000 r5", "$ f0 = $ r13 float value", "r3 set attr \\ `` alpha\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r10 = new org tensorflow op core leaky relu", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` lgamma\\ ``", "r2 = $ r3 op builder \\ `` lgamma\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core lgamma", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r5 = r0 graph", "$ r6 = r0 make op name \\ `` l m d b reader\\ ``", "r2 = $ r5 op builder \\ `` l m d b reader\\", "if r1 == null goto label4", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label4", "r4 = r1 [ i1 ]", "$ r9 = org tensorflow op core l m d b reader $ option access $ 000 r4", "if $ r9 == null goto label2", "$ r13 = org tensorflow op core l m d b reader $ option access $ 000 r4", "r2 set attr \\ `` container\\", "label $ r10 = org tensorflow op core l m d b reader $ option access $ 100 r4", "if $ r10 == null goto label3", "$ r11 = org tensorflow op core l m d b reader $ option access $ 100 r4", "r2 set attr \\ `` shared_name\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label4", "label $ r7 = new org tensorflow op core l m d b reader", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` log1p\\ ``", "r2 = $ r3 op builder \\ `` log1p\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core log1p", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core log softmax r0", "$ r1 = r2 logsoftmax", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` batch mat mul\\ ``", "r4 = $ r7 op builder \\ `` batch mat mul\\", "$ r9 = r1 a output", "r4 add input $ r9", "$ r11 = r2 a output", "r4 add input $ r11", "if r3 == null goto label4", "i0 = lengthof r3", "i1 = 0", "label if i1 > = i0 goto label4", "r6 = r3 [ i1 ]", "$ r15 = org tensorflow op core batch mat mul $ option access $ 000 r6", "if $ r15 == null goto label2", "$ r19 = org tensorflow op core batch mat mul $ option access $ 000 r6", "$ z1 = $ r19 boolean value", "r4 set attr \\ `` adj_x\\", "label $ r16 = org tensorflow op core batch mat mul $ option access $ 100 r6", "if $ r16 == null goto label3", "$ r17 = org tensorflow op core batch mat mul $ option access $ 100 r6", "$ z0 = $ r17 boolean value", "r4 set attr \\ `` adj_y\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label4", "label $ r13 = new org tensorflow op core batch mat mul", "$ r14 = r4 build", "specialinvoke $ r13 < init > $ r14", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core batch matrix band part r0", "$ r1 = r2 band", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` batch matrix diag part\\ ``", "r2 = $ r3 op builder \\ `` batch matrix diag part\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core batch matrix diag part", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` matrix logarithm\\ ``", "r2 = $ r3 op builder \\ `` matrix logarithm\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core matrix logarithm", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r5 = r0 graph", "$ r6 = r0 make op name \\ `` mutex v2\\ ``", "r2 = $ r5 op builder \\ `` mutex v2\\", "if r1 == null goto label4", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label4", "r4 = r1 [ i1 ]", "$ r9 = org tensorflow op core mutex v2 $ option access $ 000 r4", "if $ r9 == null goto label2", "$ r13 = org tensorflow op core mutex v2 $ option access $ 000 r4", "r2 set attr \\ `` container\\", "label $ r10 = org tensorflow op core mutex v2 $ option access $ 100 r4", "if $ r10 == null goto label3", "$ r11 = org tensorflow op core mutex v2 $ option access $ 100 r4", "r2 set attr \\ `` shared_name\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label4", "label $ r7 = new org tensorflow op core mutex v2", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core one like r0", "$ r1 = r2 y", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` optional get value\\ ``", "r4 = $ r6 op builder \\ `` optional get value\\", "$ r8 = r1 a output", "r4 add input $ r8", "$ i0 = r2 size", "r5 = newarray org tensorflow data type [ $ i0 ]", "i4 = 0", "label $ i1 = lengthof r5", "if i4 > = $ i1 goto label2", "$ r16 = r2 get i4", "$ r17 = java lang class $ r16", "$ r18 = org tensorflow data type from class $ r17", "r5 [ i4 ] = $ r18", "i4 = i4 + 1", "goto label1", "if i4 > = $ i1 goto label2", "label r4 set attr \\ `` output_types\\", "$ i2 = r3 size", "r19 = newarray org tensorflow shape [ $ i2 ]", "i5 = 0", "label $ i3 = lengthof r19", "if i5 > = $ i3 goto label4", "$ r14 = r3 get i5", "$ r15 = org tensorflow shape $ r14", "r19 [ i5 ] = $ r15", "i5 = i5 + 1", "goto label3", "if i5 > = $ i3 goto label4", "label r4 set attr \\ `` output_shapes\\", "$ r12 = new org tensorflow op core optional get value", "$ r13 = r4 build", "specialinvoke $ r12 < init > $ r13", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` order map clear\\ ``", "r3 = $ r6 op builder \\ `` order map clear\\", "$ i1 = r1 size", "r4 = newarray org tensorflow data type [ $ i1 ]", "i5 = 0", "label $ i2 = lengthof r4", "if i5 > = $ i2 goto label2", "$ r23 = r1 get i5", "$ r24 = java lang class $ r23", "$ r25 = org tensorflow data type from class $ r24", "r4 [ i5 ] = $ r25", "i5 = i5 + 1", "goto label1", "if i5 > = $ i2 goto label2", "label r3 set attr \\ `` dtypes\\", "if r2 == null goto label8", "i0 = lengthof r2", "i6 = 0", "label if i6 > = i0 goto label8", "r5 = r2 [ i6 ]", "$ r11 = org tensorflow op core order map clear $ option access $ 000 r5", "if $ r11 == null goto label4", "$ r21 = org tensorflow op core order map clear $ option access $ 000 r5", "$ l4 = $ r21 long value", "r3 set attr \\ `` capacity\\", "label $ r12 = org tensorflow op core order map clear $ option access $ 100 r5", "if $ r12 == null goto label5", "$ r19 = org tensorflow op core order map clear $ option access $ 100 r5", "$ l3 = $ r19 long value", "r3 set attr \\ `` memory_limit\\", "label $ r13 = org tensorflow op core order map clear $ option access $ 200 r5", "if $ r13 == null goto label6", "$ r17 = org tensorflow op core order map clear $ option access $ 200 r5", "r3 set attr \\ `` container\\", "label $ r14 = org tensorflow op core order map clear $ option access $ 300 r5", "if $ r14 == null goto label7", "$ r15 = org tensorflow op core order map clear $ option access $ 300 r5", "r3 set attr \\ `` shared_name\\", "label i6 = i6 + 1", "goto label3", "label if i6 > = i0 goto label8", "label $ r9 = new org tensorflow op core order map clear", "$ r10 = r3 build", "specialinvoke $ r9 < init > $ r10", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], [46], [47], [48], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` order map unstage no key\\ ``", "r4 = $ r7 op builder \\ `` order map unstage no key\\", "$ r9 = r1 a output", "r4 add input $ r9", "$ i1 = r2 size", "r5 = newarray org tensorflow data type [ $ i1 ]", "i5 = 0", "label $ i2 = lengthof r5", "if i5 > = $ i2 goto label2", "$ r26 = r2 get i5", "$ r27 = java lang class $ r26", "$ r28 = org tensorflow data type from class $ r27", "r5 [ i5 ] = $ r28", "i5 = i5 + 1", "goto label1", "if i5 > = $ i2 goto label2", "label r4 set attr \\ `` dtypes\\", "if r3 == null goto label8", "i0 = lengthof r3", "i6 = 0", "label if i6 > = i0 goto label8", "r6 = r3 [ i6 ]", "$ r14 = org tensorflow op core order map unstage no key $ option access $ 000 r6", "if $ r14 == null goto label4", "$ r24 = org tensorflow op core order map unstage no key $ option access $ 000 r6", "$ l4 = $ r24 long value", "r4 set attr \\ `` capacity\\", "label $ r15 = org tensorflow op core order map unstage no key $ option access $ 100 r6", "if $ r15 == null goto label5", "$ r22 = org tensorflow op core order map unstage no key $ option access $ 100 r6", "$ l3 = $ r22 long value", "r4 set attr \\ `` memory_limit\\", "label $ r16 = org tensorflow op core order map unstage no key $ option access $ 200 r6", "if $ r16 == null goto label6", "$ r20 = org tensorflow op core order map unstage no key $ option access $ 200 r6", "r4 set attr \\ `` container\\", "label $ r17 = org tensorflow op core order map unstage no key $ option access $ 300 r6", "if $ r17 == null goto label7", "$ r18 = org tensorflow op core order map unstage no key $ option access $ 300 r6", "r4 set attr \\ `` shared_name\\", "label i6 = i6 + 1", "goto label3", "label if i6 > = i0 goto label8", "label $ r12 = new org tensorflow op core order map unstage no key", "$ r13 = r4 build", "specialinvoke $ r12 < init > $ r13", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [], [48], [49], [50], [51], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core parallel concat r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` polygamma\\ ``", "r3 = $ r4 op builder \\ `` polygamma\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core polygamma", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` print\\ ``", "r4 = $ r7 op builder \\ `` print\\", "$ r9 = r1 a output", "r4 add input $ r9", "$ r11 = org tensorflow op operands a output r2", "r4 add input list $ r11", "if r3 == null goto label5", "i0 = lengthof r3", "i3 = 0", "label if i3 > = i0 goto label5", "r6 = r3 [ i3 ]", "$ r15 = org tensorflow op core print $ option access $ 000 r6", "if $ r15 == null goto label2", "$ r22 = org tensorflow op core print $ option access $ 000 r6", "r4 set attr \\ `` message\\", "label $ r16 = org tensorflow op core print $ option access $ 100 r6", "if $ r16 == null goto label3", "$ r20 = org tensorflow op core print $ option access $ 100 r6", "$ l2 = $ r20 long value", "r4 set attr \\ `` first_n\\", "label $ r17 = org tensorflow op core print $ option access $ 200 r6", "if $ r17 == null goto label4", "$ r18 = org tensorflow op core print $ option access $ 200 r6", "$ l1 = $ r18 long value", "r4 set attr \\ `` summarize\\", "label i3 = i3 + 1", "goto label1", "label if i3 > = i0 goto label5", "label $ r13 = new org tensorflow op core print", "$ r14 = r4 build", "specialinvoke $ r13 < init > $ r14", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core print r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` experimental byte produce stats dataset\\ ``", "r5 = $ r7 op builder \\ `` experimental byte produce stats dataset\\", "$ r9 = r1 a output", "r5 add input $ r9", "$ r11 = r2 a output", "r5 add input $ r11", "$ i0 = r3 size", "r6 = newarray org tensorflow data type [ $ i0 ]", "i4 = 0", "label $ i1 = lengthof r6", "if i4 > = $ i1 goto label2", "$ r19 = r3 get i4", "$ r20 = java lang class $ r19", "$ r21 = org tensorflow data type from class $ r20", "r6 [ i4 ] = $ r21", "i4 = i4 + 1", "goto label1", "if i4 > = $ i1 goto label2", "label r5 set attr \\ `` output_types\\", "$ i2 = r4 size", "r22 = newarray org tensorflow shape [ $ i2 ]", "i5 = 0", "label $ i3 = lengthof r22", "if i5 > = $ i3 goto label4", "$ r17 = r4 get i5", "$ r18 = org tensorflow shape $ r17", "r22 [ i5 ] = $ r18", "i5 = i5 + 1", "goto label3", "if i5 > = $ i3 goto label4", "label r5 set attr \\ `` output_shapes\\", "$ r15 = new org tensorflow op core experimental byte produce stats dataset", "$ r16 = r5 build", "specialinvoke $ r15 < init > $ r16", "return $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` qr\\ ``", "r3 = $ r6 op builder \\ `` qr\\", "$ r8 = r1 a output", "r3 add input $ r8", "if r2 == null goto label3", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label3", "r5 = r2 [ i1 ]", "$ r12 = org tensorflow op core qr $ option access $ 000 r5", "if $ r12 == null goto label2", "$ r13 = org tensorflow op core qr $ option access $ 000 r5", "$ z0 = $ r13 boolean value", "r3 set attr \\ `` full_matrices\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r10 = new org tensorflow op core qr", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core quantize concat r0", "$ r1 = r2 output min", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "r6 = @ parameter6", "$ r9 = r0 graph", "$ r10 = r0 make op name \\ `` quantize max pool\\ ``", "r7 = $ r9 op builder \\ `` quantize max pool\\", "$ r11 = r1 a output", "r7 add input $ r11", "$ r13 = r2 a output", "r7 add input $ r13", "$ r15 = r3 a output", "r7 add input $ r15", "$ i0 = r4 size", "r8 = newarray long [ $ i0 ]", "i6 = 0", "label $ i1 = lengthof r8", "if i6 > = $ i1 goto label2", "$ r24 = r4 get i6", "$ r25 = java lang long $ r24", "$ l5 = $ r25 long value", "r8 [ i6 ] = $ l5", "i6 = i6 + 1", "goto label1", "if i6 > = $ i1 goto label2", "label r7 set attr \\ `` ksize\\", "$ i2 = r5 size", "r26 = newarray long [ $ i2 ]", "i7 = 0", "label $ i3 = lengthof r26", "if i7 > = $ i3 goto label4", "$ r22 = r5 get i7", "$ r23 = java lang long $ r22", "$ l4 = $ r23 long value", "r26 [ i7 ] = $ l4", "i7 = i7 + 1", "goto label3", "if i7 > = $ i3 goto label4", "label r7 set attr \\ `` strides\\", "r7 set attr \\ `` padding\\", "$ r20 = new org tensorflow op core quantize max pool", "$ r21 = r7 build", "specialinvoke $ r20 < init > $ r21", "return $ r20"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], [44], [45], [46], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core quantize relu r0", "$ r1 = r2 activation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` queue dequeue\\ ``", "r4 = $ r7 op builder \\ `` queue dequeue v2\\", "$ r9 = r1 a output", "r4 add input $ r9", "$ i1 = r2 size", "r5 = newarray org tensorflow data type [ $ i1 ]", "i4 = 0", "label $ i2 = lengthof r5", "if i4 > = $ i2 goto label2", "$ r17 = r2 get i4", "$ r18 = java lang class $ r17", "$ r19 = org tensorflow data type from class $ r18", "r5 [ i4 ] = $ r19", "i4 = i4 + 1", "goto label1", "if i4 > = $ i2 goto label2", "label r4 set attr \\ `` component_types\\", "if r3 == null goto label5", "i0 = lengthof r3", "i5 = 0", "label if i5 > = i0 goto label5", "r6 = r3 [ i5 ]", "$ r14 = org tensorflow op core queue dequeue $ option access $ 000 r6", "if $ r14 == null goto label4", "$ r15 = org tensorflow op core queue dequeue $ option access $ 000 r6", "$ l3 = $ r15 long value", "r4 set attr \\ `` timeout_ms\\", "label i5 = i5 + 1", "goto label3", "label if i5 > = i0 goto label5", "label $ r12 = new org tensorflow op core queue dequeue", "$ r13 = r4 build", "specialinvoke $ r12 < init > $ r13", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r8 = r0 graph", "$ r9 = r0 make op name \\ `` queue dequeue up to\\ ``", "r5 = $ r8 op builder \\ `` queue dequeue up to v2\\", "$ r10 = r1 a output", "r5 add input $ r10", "$ r12 = r2 a output", "r5 add input $ r12", "$ i1 = r3 size", "r6 = newarray org tensorflow data type [ $ i1 ]", "i4 = 0", "label $ i2 = lengthof r6", "if i4 > = $ i2 goto label2", "$ r20 = r3 get i4", "$ r21 = java lang class $ r20", "$ r22 = org tensorflow data type from class $ r21", "r6 [ i4 ] = $ r22", "i4 = i4 + 1", "goto label1", "if i4 > = $ i2 goto label2", "label r5 set attr \\ `` component_types\\", "if r4 == null goto label5", "i0 = lengthof r4", "i5 = 0", "label if i5 > = i0 goto label5", "r7 = r4 [ i5 ]", "$ r17 = org tensorflow op core queue dequeue up to $ option access $ 000 r7", "if $ r17 == null goto label4", "$ r18 = org tensorflow op core queue dequeue up to $ option access $ 000 r7", "$ l3 = $ r18 long value", "r5 set attr \\ `` timeout_ms\\", "label i5 = i5 + 1", "goto label3", "label if i5 > = i0 goto label5", "label $ r15 = new org tensorflow op core queue dequeue up to", "$ r16 = r5 build", "specialinvoke $ r15 < init > $ r16", "return $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], [39], [40], [41], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` queue enqueue many\\ ``", "r4 = $ r7 op builder \\ `` queue enqueue many v2\\", "$ r9 = r1 a output", "r4 add input $ r9", "$ r11 = org tensorflow op operands a output r2", "r4 add input list $ r11", "if r3 == null goto label3", "i0 = lengthof r3", "i2 = 0", "label if i2 > = i0 goto label3", "r6 = r3 [ i2 ]", "$ r15 = org tensorflow op core queue enqueue many $ option access $ 000 r6", "if $ r15 == null goto label2", "$ r16 = org tensorflow op core queue enqueue many $ option access $ 000 r6", "$ l1 = $ r16 long value", "r4 set attr \\ `` timeout_ms\\", "label i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label3", "label $ r13 = new org tensorflow op core queue enqueue many", "$ r14 = r4 build", "specialinvoke $ r13 < init > $ r14", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core rag range r0", "$ r1 = r2 rt nest split", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` random shuffle queue\\ ``", "r3 = $ r7 op builder \\ `` random shuffle queue v2\\", "$ i1 = r1 size", "r4 = newarray org tensorflow data type [ $ i1 ]", "i9 = 0", "label $ i2 = lengthof r4", "if i9 > = $ i2 goto label02", "$ r36 = r1 get i9", "$ r37 = java lang class $ r36", "$ r38 = org tensorflow data type from class $ r37", "r4 [ i9 ] = $ r38", "i9 = i9 + 1", "goto label01", "if i9 > = $ i2 goto label02", "label r3 set attr \\ `` component_types\\", "if r2 == null goto label13", "i0 = lengthof r2", "i10 = 0", "label if i10 > = i0 goto label13", "r5 = r2 [ i10 ]", "$ r12 = org tensorflow op core random shuffle queue $ option access $ 000 r5", "if $ r12 == null goto label06", "$ r31 = org tensorflow op core random shuffle queue $ option access $ 000 r5", "$ i7 = $ r31 size", "r6 = newarray org tensorflow shape [ $ i7 ]", "i11 = 0", "label $ i8 = lengthof r6", "if i11 > = $ i8 goto label05", "$ r33 = org tensorflow op core random shuffle queue $ option access $ 000 r5", "$ r34 = $ r33 get i11", "$ r35 = org tensorflow shape $ r34", "r6 [ i11 ] = $ r35", "i11 = i11 + 1", "goto label04", "if i11 > = $ i8 goto label05", "label r3 set attr \\ `` shapes\\", "label $ r13 = org tensorflow op core random shuffle queue $ option access $ 100 r5", "if $ r13 == null goto label07", "$ r29 = org tensorflow op core random shuffle queue $ option access $ 100 r5", "$ l6 = $ r29 long value", "r3 set attr \\ `` capacity\\", "label $ r14 = org tensorflow op core random shuffle queue $ option access $ 200 r5", "if $ r14 == null goto label08", "$ r27 = org tensorflow op core random shuffle queue $ option access $ 200 r5", "$ l5 = $ r27 long value", "r3 set attr \\ `` min_after_dequeue\\", "label $ r15 = org tensorflow op core random shuffle queue $ option access $ 300 r5", "if $ r15 == null goto label09", "$ r25 = org tensorflow op core random shuffle queue $ option access $ 300 r5", "$ l4 = $ r25 long value", "r3 set attr \\ `` seed\\", "label $ r16 = org tensorflow op core random shuffle queue $ option access $ 400 r5", "if $ r16 == null goto label10", "$ r23 = org tensorflow op core random shuffle queue $ option access $ 400 r5", "$ l3 = $ r23 long value", "r3 set attr \\ `` seed2\\", "label $ r17 = org tensorflow op core random shuffle queue $ option access $ 500 r5", "if $ r17 == null goto label11", "$ r21 = org tensorflow op core random shuffle queue $ option access $ 500 r5", "r3 set attr \\ `` container\\", "label $ r18 = org tensorflow op core random shuffle queue $ option access $ 600 r5", "if $ r18 == null goto label12", "$ r19 = org tensorflow op core random shuffle queue $ option access $ 600 r5", "r3 set attr \\ `` shared_name\\", "label i10 = i10 + 1", "goto label03", "label if i10 > = i0 goto label13", "label $ r10 = new org tensorflow op core random shuffle queue", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [], [71], [72], [73], [74], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` reciprocal grad\\ ``", "r3 = $ r4 op builder \\ `` reciprocal grad\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core reciprocal grad", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core requantization range r0", "$ r1 = r2 output min", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r8 = r0 graph", "$ r9 = r0 make op name \\ `` resource apply gradient descent\\ ``", "r5 = $ r8 op builder \\ `` resource apply gradient descent\\", "$ r10 = r1 a output", "r5 add input $ r10", "$ r12 = r2 a output", "r5 add input $ r12", "$ r14 = r3 a output", "r5 add input $ r14", "if r4 == null goto label3", "i0 = lengthof r4", "i1 = 0", "label if i1 > = i0 goto label3", "r7 = r4 [ i1 ]", "$ r18 = org tensorflow op core resource apply gradient descent $ option access $ 000 r7", "if $ r18 == null goto label2", "$ r19 = org tensorflow op core resource apply gradient descent $ option access $ 000 r7", "$ z0 = $ r19 boolean value", "r5 set attr \\ `` use_locking\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r16 = new org tensorflow op core resource apply gradient descent", "$ r17 = r5 build", "specialinvoke $ r16 < init > $ r17", "return $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core reverse sequence r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r5 = r0 graph", "$ r6 = r0 make op name \\ `` save\\ ``", "r4 = $ r5 op builder \\ `` save\\", "$ r7 = r1 a output", "r4 add input $ r7", "$ r9 = r2 a output", "r4 add input $ r9", "$ r11 = org tensorflow op operands a output r3", "r4 add input list $ r11", "$ r13 = new org tensorflow op core save", "$ r14 = r4 build", "specialinvoke $ r13 < init > $ r14", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` save v2\\ ``", "r5 = $ r6 op builder \\ `` save v2\\", "$ r8 = r1 a output", "r5 add input $ r8", "$ r10 = r2 a output", "r5 add input $ r10", "$ r12 = r3 a output", "r5 add input $ r12", "$ r14 = org tensorflow op operands a output r4", "r5 add input list $ r14", "$ r16 = new org tensorflow op core save v2", "$ r17 = r5 build", "specialinvoke $ r16 < init > $ r17", "return $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core scatter nd update r0", "$ r1 = r2 output ref", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` sdca fprint\\ ``", "r2 = $ r3 op builder \\ `` sdca fprint\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core sdca fprint", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core set diff1 d r0", "$ r1 = r2 out", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` sin\\ ``", "r2 = $ r3 op builder \\ `` sin\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core sin", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core skipgram r0", "$ r1 = r2 current epoch", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` log softmax\\ ``", "r2 = $ r3 op builder \\ `` log softmax\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core log softmax", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core softmax cross entropy with logits r0", "$ r1 = r2 loss", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core sparse add grad r0", "$ r1 = r2 b val grad", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` sparse fill empty row grad\\ ``", "r3 = $ r4 op builder \\ `` sparse fill empty row grad\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core sparse fill empty row grad", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core sparse reorder r0", "$ r1 = r2 output value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core split r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` sqrt\\ ``", "r2 = $ r3 op builder \\ `` sqrt\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core sqrt", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` stack\\ ``", "r3 = $ r6 op builder \\ `` pack\\", "$ r8 = r1 a output", "r3 add input $ r8", "if r2 == null goto label3", "i0 = lengthof r2", "i2 = 0", "label if i2 > = i0 goto label3", "r5 = r2 [ i2 ]", "$ r12 = org tensorflow op core stack $ option access $ 000 r5", "if $ r12 == null goto label2", "$ r13 = org tensorflow op core stack $ option access $ 000 r5", "$ l1 = $ r13 long value", "r3 set attr \\ `` axis\\", "label i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label3", "label $ r10 = new org tensorflow op core stack", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r8 = r0 graph", "$ r9 = r0 make op name \\ `` static regex replace\\ ``", "r5 = $ r8 op builder \\ `` static regex replace\\", "$ r10 = r1 a output", "r5 add input $ r10", "r5 set attr \\ `` pattern\\", "r5 set attr \\ `` rewrite\\", "if r4 == null goto label3", "i0 = lengthof r4", "i1 = 0", "label if i1 > = i0 goto label3", "r7 = r4 [ i1 ]", "$ r16 = org tensorflow op core static regex replace $ option access $ 000 r7", "if $ r16 == null goto label2", "$ r17 = org tensorflow op core static regex replace $ option access $ 000 r7", "$ z0 = $ r17 boolean value", "r5 set attr \\ `` replace_global\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r14 = new org tensorflow op core static regex replace", "$ r15 = r5 build", "specialinvoke $ r14 < init > $ r15", "return $ r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` stop gradient\\ ``", "r2 = $ r3 op builder \\ `` stop gradient\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core stop gradient", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` string format\\ ``", "r3 = $ r6 op builder \\ `` string format\\", "$ r8 = org tensorflow op operands a output r1", "r3 add input list $ r8", "if r2 == null goto label5", "i0 = lengthof r2", "i2 = 0", "label if i2 > = i0 goto label5", "r5 = r2 [ i2 ]", "$ r12 = org tensorflow op core string format $ option access $ 000 r5", "if $ r12 == null goto label2", "$ r19 = org tensorflow op core string format $ option access $ 000 r5", "r3 set attr \\ `` template\\", "label $ r13 = org tensorflow op core string format $ option access $ 100 r5", "if $ r13 == null goto label3", "$ r17 = org tensorflow op core string format $ option access $ 100 r5", "r3 set attr \\ `` placeholder\\", "label $ r14 = org tensorflow op core string format $ option access $ 200 r5", "if $ r14 == null goto label4", "$ r15 = org tensorflow op core string format $ option access $ 200 r5", "$ l1 = $ r15 long value", "r3 set attr \\ `` summarize\\", "label i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label5", "label $ r10 = new org tensorflow op core string format", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` string to hash bucket\\ ``", "r3 = $ r4 op builder \\ `` string to hash bucket\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ l0 = r2 long value", "r3 set attr \\ `` num_buckets\\", "$ r9 = new org tensorflow op core string to hash bucket", "$ r10 = r3 build", "specialinvoke $ r9 < init > $ r10", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` assign sub variable op\\ ``", "r3 = $ r4 op builder \\ `` assign sub variable op\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core assign sub variable op", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` batch svd\\ ``", "r3 = $ r6 op builder \\ `` batch svd\\", "$ r8 = r1 a output", "r3 add input $ r8", "if r2 == null goto label4", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label4", "r5 = r2 [ i1 ]", "$ r12 = org tensorflow op core batch svd $ option access $ 000 r5", "if $ r12 == null goto label2", "$ r16 = org tensorflow op core batch svd $ option access $ 000 r5", "$ z1 = $ r16 boolean value", "r3 set attr \\ `` compute_uv\\", "label $ r13 = org tensorflow op core batch svd $ option access $ 100 r5", "if $ r13 == null goto label3", "$ r14 = org tensorflow op core batch svd $ option access $ 100 r5", "$ z0 = $ r14 boolean value", "r3 set attr \\ `` full_matrices\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label4", "label $ r10 = new org tensorflow op core batch svd", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core take many sparse from tensor map r0", "$ r1 = r2 sparse value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` tanh\\ ``", "r2 = $ r3 op builder \\ `` tanh\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core tanh", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` tensor array\\ ``", "r4 = $ r7 op builder \\ `` tensor array v3\\", "$ r9 = r1 a output", "r4 add input $ r9", "$ r11 = org tensorflow data type from class r2", "r4 set attr \\ `` dtype\\", "if r3 == null goto label7", "i0 = lengthof r3", "i1 = 0", "label if i1 > = i0 goto label7", "r6 = r3 [ i1 ]", "$ r15 = org tensorflow op core tensor array $ option access $ 000 r6", "if $ r15 == null goto label2", "$ r28 = org tensorflow op core tensor array $ option access $ 000 r6", "r4 set attr \\ `` element_shape\\", "label $ r16 = org tensorflow op core tensor array $ option access $ 100 r6", "if $ r16 == null goto label3", "$ r26 = org tensorflow op core tensor array $ option access $ 100 r6", "$ z2 = $ r26 boolean value", "r4 set attr \\ `` dynamic_size\\", "label $ r17 = org tensorflow op core tensor array $ option access $ 200 r6", "if $ r17 == null goto label4", "$ r24 = org tensorflow op core tensor array $ option access $ 200 r6", "$ z1 = $ r24 boolean value", "r4 set attr \\ `` clear_after_read\\", "label $ r18 = org tensorflow op core tensor array $ option access $ 300 r6", "if $ r18 == null goto label5", "$ r22 = org tensorflow op core tensor array $ option access $ 300 r6", "$ z0 = $ r22 boolean value", "r4 set attr \\ `` identical_element_shapes\\", "label $ r19 = org tensorflow op core tensor array $ option access $ 400 r6", "if $ r19 == null goto label6", "$ r20 = org tensorflow op core tensor array $ option access $ 400 r6", "r4 set attr \\ `` tensor_array_name\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label7", "label $ r13 = new org tensorflow op core tensor array", "$ r14 = r4 build", "specialinvoke $ r13 < init > $ r14", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r8 = r0 graph", "$ r9 = r0 make op name \\ `` tensor array concat\\ ``", "r5 = $ r8 op builder \\ `` tensor array concat v3\\", "$ r10 = r1 a output", "r5 add input $ r10", "$ r12 = r2 a output", "r5 add input $ r12", "$ r14 = org tensorflow data type from class r3", "r5 set attr \\ `` dtype\\", "if r4 == null goto label3", "i0 = lengthof r4", "i1 = 0", "label if i1 > = i0 goto label3", "r7 = r4 [ i1 ]", "$ r18 = org tensorflow op core tensor array concat $ option access $ 000 r7", "if $ r18 == null goto label2", "$ r19 = org tensorflow op core tensor array concat $ option access $ 000 r7", "r5 set attr \\ `` element_shape_except0\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r16 = new org tensorflow op core tensor array concat", "$ r17 = r5 build", "specialinvoke $ r16 < init > $ r17", "return $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` tensor array read\\ ``", "r5 = $ r6 op builder \\ `` tensor array read v3\\", "$ r8 = r1 a output", "r5 add input $ r8", "$ r10 = r2 a output", "r5 add input $ r10", "$ r12 = r3 a output", "r5 add input $ r12", "$ r14 = org tensorflow data type from class r4", "r5 set attr \\ `` dtype\\", "$ r16 = new org tensorflow op core tensor array read", "$ r17 = r5 build", "specialinvoke $ r16 < init > $ r17", "return $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` tensor forest tree serialize\\ ``", "r2 = $ r3 op builder \\ `` tensor forest tree serialize\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core tensor forest tree serialize", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` tensor list concat\\ ``", "r3 = $ r4 op builder \\ `` tensor list concat\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = org tensorflow data type from class r2", "r3 set attr \\ `` element_dtype\\", "$ r10 = new org tensorflow op core tensor list concat", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core tensor scatter add r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core tensor scatter sub r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` tile grad\\ ``", "r3 = $ r4 op builder \\ `` tile grad\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core tile grad", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r8 = r0 graph", "$ r9 = r0 make op name \\ `` unicode transcode\\ ``", "r5 = $ r8 op builder \\ `` unicode transcode\\", "$ r10 = r1 a output", "r5 add input $ r10", "r5 set attr \\ `` input_encoding\\", "r5 set attr \\ `` output_encoding\\", "if r4 == null goto label5", "i0 = lengthof r4", "i2 = 0", "label if i2 > = i0 goto label5", "r7 = r4 [ i2 ]", "$ r16 = org tensorflow op core unicode transcode $ option access $ 000 r7", "if $ r16 == null goto label2", "$ r23 = org tensorflow op core unicode transcode $ option access $ 000 r7", "r5 set attr \\ `` errors\\", "label $ r17 = org tensorflow op core unicode transcode $ option access $ 100 r7", "if $ r17 == null goto label3", "$ r21 = org tensorflow op core unicode transcode $ option access $ 100 r7", "$ l1 = $ r21 long value", "r5 set attr \\ `` replacement_char\\", "label $ r18 = org tensorflow op core unicode transcode $ option access $ 200 r7", "if $ r18 == null goto label4", "$ r19 = org tensorflow op core unicode transcode $ option access $ 200 r7", "$ z0 = $ r19 boolean value", "r5 set attr \\ `` replace_control_characters\\", "label i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label5", "label $ r14 = new org tensorflow op core unicode transcode", "$ r15 = r5 build", "specialinvoke $ r14 < init > $ r15", "return $ r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core unicode transcode r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core unique v2 r0", "$ r1 = r2 idx", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` unravel index\\ ``", "r3 = $ r4 op builder \\ `` unravel index\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core unravel index", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` unstack\\ ``", "r4 = $ r7 op builder \\ `` unpack\\", "$ r9 = r1 a output", "r4 add input $ r9", "$ l1 = r2 long value", "r4 set attr \\ `` num\\", "if r3 == null goto label3", "i0 = lengthof r3", "i3 = 0", "label if i3 > = i0 goto label3", "r6 = r3 [ i3 ]", "$ r14 = org tensorflow op core unstack $ option access $ 000 r6", "if $ r14 == null goto label2", "$ r15 = org tensorflow op core unstack $ option access $ 000 r6", "$ l2 = $ r15 long value", "r4 set attr \\ `` axis\\", "label i3 = i3 + 1", "goto label1", "label if i3 > = i0 goto label3", "label $ r12 = new org tensorflow op core unstack", "$ r13 = r4 build", "specialinvoke $ r12 < init > $ r13", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` unstage\\ ``", "r3 = $ r6 op builder \\ `` unstage\\", "$ i1 = r1 size", "r4 = newarray org tensorflow data type [ $ i1 ]", "i5 = 0", "label $ i2 = lengthof r4", "if i5 > = $ i2 goto label2", "$ r23 = r1 get i5", "$ r24 = java lang class $ r23", "$ r25 = org tensorflow data type from class $ r24", "r4 [ i5 ] = $ r25", "i5 = i5 + 1", "goto label1", "if i5 > = $ i2 goto label2", "label r3 set attr \\ `` dtypes\\", "if r2 == null goto label8", "i0 = lengthof r2", "i6 = 0", "label if i6 > = i0 goto label8", "r5 = r2 [ i6 ]", "$ r11 = org tensorflow op core unstage $ option access $ 000 r5", "if $ r11 == null goto label4", "$ r21 = org tensorflow op core unstage $ option access $ 000 r5", "$ l4 = $ r21 long value", "r3 set attr \\ `` capacity\\", "label $ r12 = org tensorflow op core unstage $ option access $ 100 r5", "if $ r12 == null goto label5", "$ r19 = org tensorflow op core unstage $ option access $ 100 r5", "$ l3 = $ r19 long value", "r3 set attr \\ `` memory_limit\\", "label $ r13 = org tensorflow op core unstage $ option access $ 200 r5", "if $ r13 == null goto label6", "$ r17 = org tensorflow op core unstage $ option access $ 200 r5", "r3 set attr \\ `` container\\", "label $ r14 = org tensorflow op core unstage $ option access $ 300 r5", "if $ r14 == null goto label7", "$ r15 = org tensorflow op core unstage $ option access $ 300 r5", "r3 set attr \\ `` shared_name\\", "label i6 = i6 + 1", "goto label3", "label if i6 > = i0 goto label8", "label $ r9 = new org tensorflow op core unstage", "$ r10 = r3 build", "specialinvoke $ r9 < init > $ r10", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], [46], [47], [48], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` var handle op\\ ``", "r4 = $ r7 op builder \\ `` var handle op\\", "$ r9 = org tensorflow data type from class r1", "r4 set attr \\ `` dtype\\", "r4 set attr \\ `` shape\\", "if r3 == null goto label4", "i0 = lengthof r3", "i1 = 0", "label if i1 > = i0 goto label4", "r6 = r3 [ i1 ]", "$ r14 = org tensorflow op core var handle op $ option access $ 000 r6", "if $ r14 == null goto label2", "$ r18 = org tensorflow op core var handle op $ option access $ 000 r6", "r4 set attr \\ `` container\\", "label $ r15 = org tensorflow op core var handle op $ option access $ 100 r6", "if $ r15 == null goto label3", "$ r16 = org tensorflow op core var handle op $ option access $ 100 r6", "r4 set attr \\ `` shared_name\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label4", "label $ r12 = new org tensorflow op core var handle op", "$ r13 = r4 build", "specialinvoke $ r12 < init > $ r13", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` where\\ ``", "r2 = $ r3 op builder \\ `` where\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core where", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = org apache log4j helper log log quiet mode", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label $ r3 = java lang system err", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r4 = $ r2 append \\ `` log4j w a r n \\ ``", "$ r5 = $ r4 append r0", "$ r6 = $ r5 to string", "$ r3 println $ r6", "if r1 == null goto label2", "r1 print stack trace", "label return"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache log4j priority r0", "$ i1 = r2 level", "$ i0 = r1 level", "if $ i1 < $ i0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 < $ i0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log4j priority r0", "$ r1 = r2 level str", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = lombok core ast field of a s t class", "$ r3 = $ r2 get r1", "r7 = java util collection $ r3", "if r7 == null goto label1", "return r7", "if r7 == null goto label1", "label r9 = new java util array list", "specialinvoke r9 < init >", "r10 = lombok core ast r0", "specialinvoke r10 get field r1 r9", "$ r5 = lombok core ast field of a s t class", "$ r5 put r1 r9", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "$ r3 = lombok eclipse transform eclipse a s t handler", "$ r4 = $ r3 get priority", "r1 = $ r4 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r5 = r1 next", "r2 = java lang long $ r5", "r12 = lombok eclipse transform eclipse a s t r0", "$ r7 = r12 ast", "r11 = new lombok eclipse transform eclipse a s t $ annotation visitor", "$ l0 = r2 long value", "specialinvoke r11 < init > $ l0", "r13 = lombok eclipse eclipse a s t visitor r11", "$ r7 traverse r13", "$ r8 = lombok eclipse transform eclipse a s t handler", "r14 = lombok eclipse transform eclipse a s t r0", "$ r9 = r14 ast", "$ l1 = r2 long value", "r15 = lombok eclipse transform eclipse a s t r0", "$ r10 = r15 ast", "$ z1 = $ r10 be complete parse", "$ r8 call a s t visitor $ r9 $ l1 $ z1", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], []]}
{"nodes": ["r0 = java lang class for name \\ `` com apple eawt application\\ ``", "$ r3 = newarray java lang class [ 0 ]", "$ r4 = r0 get method \\ `` get application\\", "$ r5 = newarray java lang object [ 0 ]", "r1 = $ r4 invoke null $ r5", "$ r6 = newarray java lang class [ 0 ]", "$ r7 = r0 get method \\ `` remove about menu item\\", "$ r8 = newarray java lang object [ 0 ]", "$ r7 invoke r1 $ r8", "$ r10 = newarray java lang class [ 0 ]", "$ r11 = r0 get method \\ `` remove preference menu item\\", "$ r12 = newarray java lang object [ 0 ]", "$ r11 invoke r1 $ r12", "$ r14 = class \\ `` llombok installer apple native look \\ ``", "$ r15 = $ r14 get resource \\ `` lombok icon png\\ ``", "r2 = javax imageio image i o read $ r15", "$ r16 = newarray java lang class [ 1 ]", "$ r16 [ 0 ] = class \\ `` ljava awt image \\ ``", "$ r17 = r0 get method \\ `` set dock icon image\\", "$ r18 = newarray java lang object [ 1 ]", "$ r18 [ 0 ] = r2", "$ r17 invoke r1 $ r18", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["lombok installer ide finder load windows drive info lib", "$ r4 = new java util array list", "specialinvoke $ r4 < init >", "$ r5 = new lombok installer window drive info", "specialinvoke $ r5 < init >", "$ r6 = $ r5 get logical drive", "r2 = $ r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r7 = r2 next", "r3 = java lang string $ r7", "$ z1 = $ r5 be fix disk r3", "if $ z1 == 0 goto label2", "$ r4 add r3", "label goto label1", "if $ z0 == 0 goto label3", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new org xml sax input source", "$ r4 = r1 to u r i", "$ r5 = $ r4 to a s c i i string", "specialinvoke r6 < init > $ r5", "r7 = org apache lucene analysis compound hyphenation hyphenation tree r0", "r7 load pattern r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache lucene analysis core stop filter make stop set r0 r1 0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene analysis en porter stemmer r0", "r1 i = 0", "r2 = org apache lucene analysis en porter stemmer r0", "r2 dirty = 0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache lucene analysis shingle shingle filter r0", "r2 token type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r3 = org apache lucene analysis util char array set r0", "$ r2 = r3 map", "$ z0 = $ r2 contain key r1 i0 i1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ z0 = org apache lucene analysis util roll char buffer $ assertion disable", "if $ z0 ! = 0 goto label1", "if i0 > = 0 goto label1", "r19 = new java lang assertion error", "specialinvoke r19 < init >", "throw r19", "if i0 > = 0 goto label1", "label $ z1 = org apache lucene analysis util roll char buffer $ assertion disable", "if $ z1 ! = 0 goto label2", "r25 = org apache lucene analysis util roll char buffer r0", "$ i7 = r25 next po", "if i0 < = $ i7 goto label2", "r20 = new java lang assertion error", "specialinvoke r20 < init >", "throw r20", "if i0 < = $ i7 goto label2", "label r26 = org apache lucene analysis util roll char buffer r0", "$ i2 = r26 next po", "i1 = $ i2 - i0", "$ z2 = org apache lucene analysis util roll char buffer $ assertion disable", "if $ z2 ! = 0 goto label3", "r27 = org apache lucene analysis util roll char buffer r0", "$ i5 = r27 count", "if i1 < = $ i5 goto label3", "r22 = new java lang assertion error", "r21 = new java lang string builder", "specialinvoke r21 < init >", "$ r12 = r21 append \\ `` new count=\\ ``", "$ r13 = $ r12 append i1", "$ r14 = $ r13 append \\ `` count=\\ ``", "r28 = org apache lucene analysis util roll char buffer r0", "$ i6 = r28 count", "$ r15 = $ r14 append $ i6", "$ r16 = $ r15 to string", "specialinvoke r22 < init > $ r16", "throw r22", "if i1 < = $ i5 goto label3", "label $ z3 = org apache lucene analysis util roll char buffer $ assertion disable", "if $ z3 ! = 0 goto label4", "r29 = org apache lucene analysis util roll char buffer r0", "$ r1 = r29 buffer", "$ i3 = lengthof $ r1", "if i1 < = $ i3 goto label4", "r24 = new java lang assertion error", "r23 = new java lang string builder", "specialinvoke r23 < init >", "$ r4 = r23 append \\ `` new count=\\ ``", "$ r5 = $ r4 append i1", "$ r6 = $ r5 append \\ `` buf length=\\ ``", "r30 = org apache lucene analysis util roll char buffer r0", "$ r7 = r30 buffer", "$ i4 = lengthof $ r7", "$ r8 = $ r6 append $ i4", "$ r9 = $ r8 to string", "specialinvoke r24 < init > $ r9", "throw r24", "if i1 < = $ i3 goto label4", "label r31 = org apache lucene analysis util roll char buffer r0", "r31 count = i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [], [59], [60], [61], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache lucene analysis util token filter factory loader", "$ r2 = $ r1 lookup class r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org tartarus snowball snowball program r0", "$ i0 = r1 limit", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = org apache lucene analysis util unicode prop whitespace", "$ z0 = $ r1 get i0", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if null ! = r1 goto label1", "$ r3 = newarray char [ 0 ]", "goto label2", "label r4 = org apache lucene analysis shingle shingle filter r0", "r4 filler token = $ r3", "return", "if null ! = r1 goto label1", "label $ r3 = r1 to char array"], "adj": [[1], [2], [3], [4], [], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ parameter0", "label $ r2 = org apache lucene analysis util char filter factory lookup s p i name r0", "label return $ r2"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "i2 = @ parameter3", "i3 = @ parameter4", "r8 = new org apache lucene analysis token", "specialinvoke r8 < init > r1 i0 i1 i2 i3", "r9 = org apache lucene analysis token r0", "$ i4 = r9 position increment", "r8 position increment = $ i4", "r10 = org apache lucene analysis token r0", "$ i5 = r10 flag", "r8 flag = $ i5", "r11 = org apache lucene analysis token r0", "$ r4 = r11 type", "r8 type = $ r4", "r12 = org apache lucene analysis token r0", "$ r5 = r12 payload", "if $ r5 == null goto label1", "r13 = org apache lucene analysis token r0", "$ r6 = r13 payload", "$ r7 = $ r6 clone", "r8 payload = $ r7", "label return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 buffer", "$ i0 = r1 length", "r5 = org apache lucene analysis token r0", "r5 copy buffer $ r2 0 $ i0", "$ i1 = r1 position increment", "r6 = org apache lucene analysis token r0", "r6 position increment = $ i1", "$ i2 = r1 flag", "r7 = org apache lucene analysis token r0", "r7 flag = $ i2", "$ i3 = r1 start offset", "r8 = org apache lucene analysis token r0", "r8 start offset = $ i3", "$ i4 = r1 end offset", "r9 = org apache lucene analysis token r0", "r9 end offset = $ i4", "$ r3 = r1 type", "r10 = org apache lucene analysis token r0", "r10 type = $ r3", "$ r4 = r1 payload", "r11 = org apache lucene analysis token r0", "r11 payload = $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache lucene store data output r1", "org apache lucene codecs codec util write header r2 \\ `` block_tree_terms_index\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "org apache lucene codecs codec default codec = r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "r9 = org apache lucene codecs lucene40 lucene40 store field writer r0", "$ r3 = r9 field stream", "l7 = $ r3 get file pointer", "l1 = l7", "i8 = 0", "label if i8 > = i0 goto label2", "r10 = org apache lucene codecs lucene40 lucene40 store field writer r0", "$ r7 = r10 index stream", "$ r7 write long l7", "$ i5 = r2 [ i8 ]", "$ l6 = long $ i5", "l7 = l7 + $ l6", "i8 = i8 + 1", "goto label1", "label if i8 > = i0 goto label2", "label r11 = org apache lucene codecs lucene40 lucene40 store field writer r0", "$ r4 = r11 field stream", "$ l2 = l7 - l1", "r12 = org apache lucene store data input r1", "$ r4 copy bytes r12 $ l2", "$ z0 = org apache lucene codecs lucene40 lucene40 store field writer $ assertion disable", "if $ z0 ! = 0 goto label3", "r13 = org apache lucene codecs lucene40 lucene40 store field writer r0", "$ r5 = r13 field stream", "$ l3 = $ r5 get file pointer", "$ b4 = $ l3 cmp l7", "if $ b4 == 0 goto label3", "r8 = new java lang assertion error", "specialinvoke r8 < init >", "throw r8", "if $ b4 == 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache lucene codecs multi level skip list reader r0", "$ r1 = r3 skip doc", "$ i1 = $ r1 [ i0 ]", "r4 = org apache lucene codecs multi level skip list reader r0", "r4 last doc = $ i1", "r5 = org apache lucene codecs multi level skip list reader r0", "$ r2 = r5 child pointer", "$ l2 = $ r2 [ i0 ]", "r6 = org apache lucene codecs multi level skip list reader r0", "r6 last child pointer = $ l2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r2 = new org apache lucene util byte ref", "specialinvoke $ r2 < init >", "$ i1 = r0 length", "org apache lucene util unicode util u t f16to u t f8 r0 0 $ i1 $ r2", "$ r3 = $ r2 bytes", "$ i2 = $ r2 length", "$ r4 = org apache lucene document compression tool compress $ r3 0 $ i2 i0", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache lucene document field type r0", "specialinvoke r1 check if frozen", "r2 = org apache lucene document field type r0", "r2 store term vector position = z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache lucene document field type r0", "specialinvoke r1 check if frozen", "r2 = org apache lucene document field type r0", "r2 store term vector payload = z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache lucene document field type r0", "specialinvoke r2 check if frozen", "r3 = org apache lucene document field type r0", "r3 numeric type = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index doc term ords r0", "$ i0 = r1 num term in field", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org apache lucene index field info r0", "$ r3 = r9 attribute", "if $ r3 ! = null goto label1", "r8 = new java util hash map", "specialinvoke r8 < init >", "r10 = org apache lucene index field info r0", "r10 attribute = r8", "label r11 = org apache lucene index field info r0", "$ r4 = r11 attribute", "$ r5 = $ r4 put r1 r2", "$ r6 = java lang string $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index field info r0", "$ z0 = r1 have prox", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index field info r0", "$ z0 = r1 have payloads", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index field info r0", "$ z0 = r1 have norm", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index field invert state r0", "$ i0 = r1 position", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache lucene index index upgrader parse args r0", "$ r1 upgrade", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache lucene index index writer r0", "r6 ensure open", "label r7 = org apache lucene index index writer r0", "$ r4 = r7 doc writer", "$ r3 = newarray org apache lucene index term [ 1 ]", "$ r3 [ 0 ] = r1", "$ z0 = $ r4 delete term $ r3", "if $ z0 == 0 goto label2", "r8 = org apache lucene index index writer r0", "specialinvoke r8 process event 1 0", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r11 = org apache lucene index index writer r0", "r11 ensure open", "r12 = org apache lucene index index writer r0", "$ r6 = r12 global field number map", "$ r5 = org apache lucene index field info $ doc value type numeric", "$ z0 = $ r6 contain r2 $ r5", "if $ z0 ! = 0 goto label1", "r10 = new java lang illegal argument exception", "specialinvoke r10 < init > \\ `` can only update exist numeric-docvalues field ! \\ ``", "throw r10", "if $ z0 ! = 0 goto label1", "label r13 = org apache lucene index index writer r0", "$ r7 = r13 doc writer", "$ z1 = $ r7 update numeric doc value r1 r2 r3", "if $ z1 == 0 goto label2", "r14 = org apache lucene index index writer r0", "specialinvoke r14 process event 1 0", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r5 = new java lang illegal argument exception", "specialinvoke r5 < init > \\ `` print stream must not be null\\ ``", "throw r5", "if r1 ! = null goto label1", "label r6 = new org apache lucene util print stream info stream", "specialinvoke r6 < init > r1", "r7 = org apache lucene index index writer config r0", "r8 = org apache lucene util info stream r6", "$ r3 = r7 set info stream r8", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene index live index writer config r0", "$ r1 = r2 analyzer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "$ d1 = d0 * 1024 0", "$ d2 = $ d1 * 1024 0", "$ l0 = long $ d2", "r1 = org apache lucene index log byte size merge policy r0", "r1 min merge size = $ l0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache lucene index log merge policy r0", "r1 calibrate size by deletes = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = org apache lucene index segment commit info r0", "$ l0 = r7 size in byte", "$ b1 = $ l0 cmp -1l", "if $ b1 ! = 0 goto label3", "l4 = 0l", "r8 = org apache lucene index segment commit info r0", "$ r3 = r8 file", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r4 = r1 next", "r2 = java lang string $ r4", "r9 = org apache lucene index segment commit info r0", "$ r5 = r9 info", "$ r6 = $ r5 dir", "$ l3 = $ r6 file length r2", "l4 = l4 + $ l3", "goto label1", "if $ z0 == 0 goto label2", "label r10 = org apache lucene index segment commit info r0", "r10 size in byte = l4", "label r11 = org apache lucene index segment commit info r0", "$ l2 = r11 size in byte", "return $ l2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index segment commit info r0", "$ l0 = r1 field info gen", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org apache lucene index segment info r0", "$ r1 = r6 set file", "if $ r1 ! = null goto label1", "r5 = new java lang illegal state exception", "specialinvoke r5 < init > \\ `` file be not compute yet\\ ``", "throw r5", "if $ r1 ! = null goto label1", "label r7 = org apache lucene index segment info r0", "$ r2 = r7 set file", "$ r3 = java util collection unmodifiable set $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index segment info r0", "$ l0 = r1 version", "$ l1 = $ l0 + 1l", "r2 = org apache lucene index segment info r0", "r2 version = $ l1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "specialinvoke r0 release gen l0", "r1 = org apache lucene index persistent snapshot deletion policy r0", "specialinvoke r1 persist", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = new org apache lucene index ord term state", "specialinvoke r3 < init >", "r4 = org apache lucene index sort doc value term enum r0", "$ i0 = r4 current ord", "$ l1 = long $ i0", "r3 ord = $ l1", "r5 = org apache lucene index term state r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index tiered merge policy r0", "$ l0 = r1 max merge segment byte", "$ l1 = $ l0 1024l", "$ d0 = double $ l1", "$ d1 = $ d0 1024 0", "return $ d1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "$ b0 = d0 cmpg 0 0", "if $ b0 > = 0 goto label1", "r8 = new java lang illegal argument exception", "r7 = new java lang string builder", "specialinvoke r7 < init >", "$ r3 = r7 append \\ `` reclaim deletes weight must be > = 0 0 get \\ ``", "$ r4 = $ r3 append d0", "$ r5 = $ r4 append \\ `` \\ ``", "$ r6 = $ r5 to string", "specialinvoke r8 < init > $ r6", "throw r8", "if $ b0 > = 0 goto label1", "label r9 = org apache lucene index tiered merge policy r0", "r9 reclaim deletes weight = d0", "r10 = org apache lucene index tiered merge policy r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index tiered merge policy r0", "$ d0 = r1 segs per tier", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search filter query r0", "$ r1 = r2 query", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache lucene search live field value r0", "$ r1 = r3 current", "$ i0 = $ r1 size", "r4 = org apache lucene search live field value r0", "$ r2 = r4 old", "$ i1 = $ r2 size", "$ i2 = $ i0 + $ i1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache lucene search similarity basic stats r0", "r1 total term freq = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache lucene search similarity b m25 similarity r0", "r1 discount overlap = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene search similarity b m25 similarity r0", "$ f0 = r1 b", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search similarity i b similarity r0", "$ r1 = r2 normalization", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene search similarity normalization z r0", "$ f0 = r1 z", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "z0 = @ parameter3", "z1 = @ parameter4", "if r1 ! = null goto label1", "$ r6 = null", "goto label2", "label r3 = $ r6", "if r2 ! = null goto label3", "$ r7 = null", "goto label4", "label $ r5 = new org apache lucene search term range query", "specialinvoke $ r5 < init > r0 r3 $ r7 z0 z1", "return $ r5", "if r2 ! = null goto label3", "label $ r7 = new org apache lucene util byte ref", "specialinvoke $ r7 < init > r2", "if r1 ! = null goto label1", "label $ r6 = new org apache lucene util byte ref", "specialinvoke $ r6 < init > r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [], [13], [14], [], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search term statistic r0", "$ r1 = r2 term", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search time limit collector r0", "$ r1 = r2 clock", "$ l0 = $ r1 get", "r3 = org apache lucene search time limit collector r0", "r3 set baseline $ l0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org apache lucene search top doc r0", "r1 max score = f0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org apache lucene store compound file directory r0", "r10 ensure open", "r11 = org apache lucene store compound file directory r0", "$ r3 = r11 writer", "if $ r3 == null goto label1", "r12 = org apache lucene store compound file directory r0", "$ r8 = r12 writer", "$ l1 = $ r8 file length r1", "return $ l1", "if $ r3 == null goto label1", "label r13 = org apache lucene store compound file directory r0", "$ r4 = r13 entry", "$ r5 = org apache lucene index index file name strip segment name r1", "$ r6 = $ r4 get $ r5", "r2 = org apache lucene store compound file directory $ file entry $ r6", "if r2 ! = null goto label2", "r9 = new java io file not find exception", "specialinvoke r9 < init > r1", "throw r9", "if r2 ! = null goto label2", "label $ l0 = r2 length", "return $ l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r5 = org apache lucene store data output r0", "r5 write int 0", "goto label3", "label return", "if r1 ! = null goto label1", "label $ i0 = r1 size", "r6 = org apache lucene store data output r0", "r6 write int $ i0", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r4 = r2 next", "r3 = java lang string $ r4", "r7 = org apache lucene store data output r0", "r7 write string r3", "goto label2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene store n r t cache directory r0", "$ r1 = r2 cache", "$ l0 = $ r1 size in byte", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene store r a m output stream r0", "$ r1 = r2 file", "$ i0 = $ r1 num buffer", "$ l1 = long $ i0", "$ l2 = $ l1 * 1024l", "return $ l2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 be singleton", "if $ z0 == 0 goto label02", "$ r50 = r0 singleton", "$ z9 = org apache lucene util automaton basic operation run r1 $ r50", "if $ z9 == 0 goto label01", "$ r52 = r0 clone if require", "return $ r52", "if $ z9 == 0 goto label01", "label $ r51 = org apache lucene util automaton basic automaton make empty", "return $ r51", "if $ z0 == 0 goto label02", "label $ z1 = r1 be singleton", "if $ z1 == 0 goto label04", "$ r47 = r1 singleton", "$ z8 = org apache lucene util automaton basic operation run r0 $ r47", "if $ z8 == 0 goto label03", "$ r49 = r1 clone if require", "return $ r49", "if $ z8 == 0 goto label03", "label $ r48 = org apache lucene util automaton basic automaton make empty", "return $ r48", "if $ z1 == 0 goto label04", "label if r0 ! = r1 goto label05", "$ r46 = r0 clone if require", "return $ r46", "label if r0 ! = r1 goto label05", "label r2 = r0 get sort transition", "r3 = r1 get sort transition", "$ r10 = new org apache lucene util automaton automaton", "specialinvoke $ r10 < init >", "$ r11 = new java util link list", "specialinvoke $ r11 < init >", "$ r12 = new java util hash map", "specialinvoke $ r12 < init >", "$ r13 = new org apache lucene util automaton state pair", "$ r16 = $ r10 initial", "$ r15 = r0 initial", "$ r14 = r1 initial", "specialinvoke $ r13 < init > $ r16 $ r15 $ r14", "$ r11 add $ r13", "$ r12 put $ r13 $ r13", "label $ i2 = $ r11 size", "if $ i2 < = 0 goto label21", "$ r18 = $ r11 remove first", "r54 = org apache lucene util automaton state pair $ r18", "$ r55 = r54 s", "$ r19 = r54 s1", "$ z5 = $ r19 accept", "if $ z5 == 0 goto label07", "$ r45 = r54 s2", "$ z7 = $ r45 accept", "if $ z7 == 0 goto label07", "$ z10 = 1", "goto label08", "label $ r55 accept = $ z10", "$ r56 = r54 s1", "$ i14 = $ r56 number", "r7 = r2 [ $ i14 ]", "$ r57 = r54 s2", "$ i15 = $ r57 number", "r8 = r3 [ $ i15 ]", "i16 = 0", "i17 = 0", "label $ i18 = lengthof r7", "if i16 > = $ i18 goto label20", "label $ i3 = lengthof r8", "if i17 > = $ i3 goto label11", "$ r43 = r8 [ i17 ]", "$ i13 = $ r43 max", "$ r44 = r7 [ i16 ]", "$ i12 = $ r44 min", "if $ i13 > = $ i12 goto label11", "i17 = i17 + 1", "goto label10", "if $ i13 > = $ i12 goto label11", "label i19 = i17", "label $ i20 = lengthof r8", "if i19 > = $ i20 goto label19", "$ r20 = r7 [ i16 ]", "$ i5 = $ r20 max", "$ r21 = r8 [ i19 ]", "$ i4 = $ r21 min", "if $ i5 < $ i4 goto label19", "$ r22 = r8 [ i19 ]", "$ i7 = $ r22 max", "$ r23 = r7 [ i16 ]", "$ i6 = $ r23 min", "if $ i7 < $ i6 goto label18", "$ r24 = new org apache lucene util automaton state pair", "$ r25 = r7 [ i16 ]", "$ r28 = $ r25 to", "$ r26 = r8 [ i19 ]", "$ r27 = $ r26 to", "specialinvoke $ r24 < init > $ r28 $ r27", "$ r29 = $ r12 get $ r24", "r58 = org apache lucene util automaton state pair $ r29", "if r58 ! = null goto label13", "$ r41 = new org apache lucene util automaton state", "specialinvoke $ r41 < init >", "$ r24 s = $ r41", "$ r11 add $ r24", "$ r12 put $ r24 $ r24", "r58 = $ r24", "label $ r30 = r7 [ i16 ]", "$ i9 = $ r30 min", "$ r31 = r8 [ i19 ]", "$ i8 = $ r31 min", "if $ i9 < = $ i8 goto label14", "$ r40 = r7 [ i16 ]", "$ i21 = $ r40 min", "goto label15", "label i0 = $ i21", "$ r33 = r7 [ i16 ]", "$ i11 = $ r33 max", "$ r34 = r8 [ i19 ]", "$ i10 = $ r34 max", "if $ i11 > = $ i10 goto label16", "$ r39 = r7 [ i16 ]", "$ i22 = $ r39 max", "goto label17", "label $ r38 = r54 s", "$ r36 = new org apache lucene util automaton transition", "$ r37 = r58 s", "specialinvoke $ r36 < init > i0 $ i22 $ r37", "$ r38 add transition $ r36", "label i19 = i19 + 1", "goto label12", "if $ i11 > = $ i10 goto label16", "label $ r35 = r8 [ i19 ]", "$ i22 = $ r35 max", "if $ i9 < = $ i8 goto label14", "label $ r32 = r8 [ i19 ]", "$ i21 = $ r32 min", "if $ i5 < $ i4 goto label19", "label i16 = i16 + 1", "goto label09", "if i16 > = $ i18 goto label20", "label goto label06", "if $ z7 == 0 goto label07", "label $ z10 = 0", "if $ i2 < = 0 goto label21", "label $ z3 = r0 deterministic", "if $ z3 == 0 goto label22", "$ z4 = r1 deterministic", "if $ z4 == 0 goto label22", "$ z11 = 1", "goto label23", "label $ r10 deterministic = $ z11", "$ r10 remove dead transition", "$ r10 check minimize always", "return $ r10", "if $ z4 == 0 goto label22", "label $ z11 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [110], [111], [112], [], [114], [115], [116], [117], [118], [119], [120], [121], [], [123], [124], [125], [126], [127], [128], [], [130], [131], [132], [133], [134], [135], [136], [137], [], [139], [140], [141], [142], [143], [144], [145], [146], [147], [148], [], [150], [151], [152], [], [154], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 be singleton", "if $ z0 == 0 goto label1", "return 0", "if $ z0 == 0 goto label1", "label $ r2 = r0 initial", "$ z1 = $ r2 accept", "if $ z1 == 0 goto label4", "$ r3 = r0 initial", "$ i0 = $ r3 num transition", "if $ i0 ! = 1 goto label4", "$ r4 = r0 initial", "$ r5 = $ r4 get transition", "$ r6 = $ r5 iterator", "$ r7 = $ r6 next", "r1 = org apache lucene util automaton transition $ r7", "$ r9 = r1 to", "$ r8 = r0 initial", "if $ r9 ! = $ r8 goto label2", "$ i1 = r1 min", "if $ i1 ! = 0 goto label2", "$ i2 = r1 max", "if $ i2 ! = 1114111 goto label2", "$ z2 = 1", "goto label3", "label return $ z2", "if $ i2 ! = 1114111 goto label2", "label $ z2 = 0", "if $ i0 ! = 1 goto label4", "label return 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r7 = org apache lucene util automaton daciuk mihov automaton builder r0", "$ r1 = r7 state registry", "if $ r1 ! = null goto label1", "r6 = new java lang illegal state exception", "specialinvoke r6 < init >", "throw r6", "if $ r1 ! = null goto label1", "label r8 = org apache lucene util automaton daciuk mihov automaton builder r0", "$ r2 = r8 root", "$ z0 = $ r2 have child", "if $ z0 == 0 goto label2", "r9 = org apache lucene util automaton daciuk mihov automaton builder r0", "$ r4 = r9 root", "r10 = org apache lucene util automaton daciuk mihov automaton builder r0", "specialinvoke r10 replace or register $ r4", "label r11 = org apache lucene util automaton daciuk mihov automaton builder r0", "r11 state registry = null", "r12 = org apache lucene util automaton daciuk mihov automaton builder r0", "$ r3 = r12 root", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 be singleton", "if $ z0 == 0 goto label1", "$ r12 = r0 singleton", "return $ r12", "if $ z0 == 0 goto label1", "label $ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = new java util hash set", "specialinvoke $ r5 < init >", "r13 = r0 initial", "label z4 = 1", "$ r5 add r13", "$ z2 = r13 accept", "if $ z2 ! = 0 goto label3", "$ i0 = r13 num transition", "if $ i0 ! = 1 goto label3", "$ r7 = r13 get transition", "$ r8 = $ r7 iterator", "$ r9 = $ r8 next", "r3 = org apache lucene util automaton transition $ r9", "$ i2 = r3 min", "$ i1 = r3 max", "if $ i2 ! = $ i1 goto label3", "$ r10 = r3 to", "$ z3 = $ r5 contain $ r10", "if $ z3 ! = 0 goto label3", "$ i3 = r3 min", "$ r4 append code point $ i3", "r13 = r3 to", "z4 = 0", "label if z4 == 0 goto label2", "$ r6 = $ r4 to string", "return $ r6"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r2 = new java util hash set", "specialinvoke $ r2 < init >", "$ z0 = r0 be singleton", "if $ z0 == 0 goto label1", "if i0 < = 0 goto label2", "$ r7 = r0 singleton", "$ r6 = new org apache lucene util ints ref", "specialinvoke $ r6 < init >", "$ r8 = org apache lucene util fst util to u t f32 $ r7 $ r6", "$ r2 add $ r8", "goto label2", "label return $ r2", "if $ z0 == 0 goto label1", "label $ r4 = r0 initial", "$ r3 = new java util hash set", "specialinvoke $ r3 < init >", "$ r5 = new org apache lucene util ints ref", "specialinvoke $ r5 < init >", "$ z1 = org apache lucene util automaton special operation get finite string $ r4 $ r3 $ r2 $ r5 i0", "if $ z1 ! = 0 goto label2", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache lucene util automaton state r1", "r3 = org apache lucene util automaton state r0", "$ i0 = r3 compare to $ r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["b0 = @ parameter0", "$ r0 = org apache lucene util bit util byte_counts", "$ s1 = b0 & 255", "$ b2 = $ r0 [ $ s1 ]", "return $ b2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene util byte block pool r0", "r1 reset 1 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = new org apache lucene util char ref", "r6 = org apache lucene util byte ref r0", "$ i0 = r6 length", "specialinvoke r5 < init > $ i0", "r7 = org apache lucene util byte ref r0", "$ r3 = r7 bytes", "r8 = org apache lucene util byte ref r0", "$ i2 = r8 offset", "r9 = org apache lucene util byte ref r0", "$ i1 = r9 length", "org apache lucene util unicode util u t f8to u t f16 $ r3 $ i2 $ i1 r5", "$ r4 = r5 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ z0 = org apache lucene util byte ref hash $ assertion disable", "if $ z0 ! = 0 goto label1", "r7 = org apache lucene util byte ref hash r0", "$ r3 = r7 byte start", "if $ r3 ! = null goto label1", "r5 = new java lang assertion error", "specialinvoke r5 < init > \\ `` byte start be null - not initialized\\ ``", "throw r5", "if $ r3 ! = null goto label1", "label $ z1 = org apache lucene util byte ref hash $ assertion disable", "if $ z1 ! = 0 goto label3", "if i0 < 0 goto label2", "r8 = org apache lucene util byte ref hash r0", "$ i2 = r8 count", "if i0 < $ i2 goto label3", "label r6 = new java lang assertion error", "specialinvoke r6 < init > i0", "throw r6", "if i0 < $ i2 goto label3", "label r9 = org apache lucene util byte ref hash r0", "$ r1 = r9 byte start", "$ i1 = $ r1 [ i0 ]", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r3 = org apache lucene util fixed bit set r0", "$ r2 = r3 bit", "r4 = org apache lucene util fixed bit set r0", "$ r1 = r4 bit", "$ i0 = lengthof $ r1", "$ l1 = org apache lucene util bit util pop_array $ r2 0 $ i0", "$ i2 = int $ l1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "l12 = 0l", "$ i2 = r0 offset", "i13 = $ i2 + 1", "$ i4 = r0 offset", "$ i3 = r0 length", "i0 = $ i4 + $ i3", "label if i13 > = i0 goto label3", "l14 = l12 < < 7", "$ r1 = r0 bytes", "b1 = $ r1 [ i13 ]", "if b1 > = 0 goto label2", "$ r2 = new java lang number format exception", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append \\ `` invalid prefix cod numerical value representation byte \\ ``", "$ s9 = b1 & 255", "$ r5 = java lang integer to hex string $ s9", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 append \\ `` at position \\ ``", "$ i10 = r0 offset", "$ i11 = i13 - $ i10", "$ r8 = $ r7 append $ i11", "$ r9 = $ r8 append \\ `` be invalid \\ ``", "$ r10 = $ r9 to string", "specialinvoke $ r2 < init > $ r10", "throw $ r2", "if b1 > = 0 goto label2", "label $ l8 = long b1", "l12 = l14 | $ l8", "i13 = i13 + 1", "goto label1", "label if i13 > = i0 goto label3", "label $ i5 = org apache lucene util numeric utils get prefix cod long shift r0", "$ l6 = l12 < < $ i5", "$ l7 = $ l6 ^ -9223372036854775808l", "return $ l7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache lucene util open bit set r0", "$ i1 = r4 wlen", "$ i0 = r1 wlen", "i6 = java lang math min $ i1 $ i0", "r5 = org apache lucene util open bit set r0", "r2 = r5 bit", "r3 = r1 bit", "label i6 = i6 + -1", "if i6 < 0 goto label2", "$ l4 = r2 [ i6 ]", "$ l2 = r3 [ i6 ]", "$ l3 = $ l2 ^ -1l", "$ l5 = $ l4 & $ l3", "r2 [ i6 ] = $ l5", "goto label1", "if i6 < 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene util pack abstract block pack writer r0", "$ l0 = r1 ord", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene util pack elias fano decoder r0", "$ l0 = r1 num encode", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene util pack elias fano decoder r0", "$ z0 = specialinvoke r1 to before current high bit", "if $ z0 ! = 0 goto label1", "return -1l", "if $ z0 ! = 0 goto label1", "label r2 = org apache lucene util pack elias fano decoder r0", "l0 = specialinvoke r2 previous high value", "r3 = org apache lucene util pack elias fano decoder r0", "$ l1 = specialinvoke r3 current low value", "r4 = org apache lucene util pack elias fano decoder r0", "$ l2 = specialinvoke r4 combine high low value l0 $ l1", "return $ l2"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene util query builder r0", "$ r1 = r2 analyzer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache lucene util query builder r0", "r1 enable position increment = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = org apache lucene util ram usage estimator num_bytes_array_header", "$ l3 = long $ i0", "$ i1 = lengthof r0", "$ l2 = long $ i1", "$ l4 = $ l3 + $ l2", "$ l5 = org apache lucene util ram usage estimator align object size $ l4", "return $ l5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "label if r1 == null goto label3", "if r1 ! = r0 goto label2", "return 1", "if r1 ! = r0 goto label2", "label r1 = r1 get parent", "goto label1", "label if r1 == null goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r16 = r1 doc value producer", "i0 = lengthof r16", "i1 = 0", "label if i1 > = i0 goto label03", "r2 = r16 [ i1 ]", "if r2 == null goto label02", "r2 check integrity", "label i1 = i1 + 1", "goto label01", "label if i1 > = i0 goto label03", "label $ r3 = r1 merge field info", "r17 = $ r3 iterator", "label $ z0 = r17 have next", "if $ z0 == 0 goto label11", "$ r4 = r17 next", "r18 = org apache lucene index field info $ r4", "r19 = r18 get doc value type", "$ r5 = org apache lucene index doc value type none", "if r19 == $ r5 goto label10", "$ r6 = org apache lucene index doc value type numeric", "if r19 ! = $ r6 goto label05", "r22 = org apache lucene codecs doc value consumer r0", "r22 merge numeric field r18 r1", "goto label10", "label goto label04", "if r19 ! = $ r6 goto label05", "label $ r7 = org apache lucene index doc value type binary", "if r19 ! = $ r7 goto label06", "r23 = org apache lucene codecs doc value consumer r0", "r23 merge binary field r18 r1", "if r19 ! = $ r7 goto label06", "label $ r8 = org apache lucene index doc value type sort", "if r19 ! = $ r8 goto label07", "r24 = org apache lucene codecs doc value consumer r0", "r24 merge sort field r18 r1", "if r19 ! = $ r8 goto label07", "label $ r9 = org apache lucene index doc value type sorted_set", "if r19 ! = $ r9 goto label08", "r25 = org apache lucene codecs doc value consumer r0", "r25 merge sort set field r18 r1", "if r19 ! = $ r9 goto label08", "label $ r10 = org apache lucene index doc value type sorted_numeric", "if r19 ! = $ r10 goto label09", "r26 = org apache lucene codecs doc value consumer r0", "r26 merge sort numeric field r18 r1", "if r19 ! = $ r10 goto label09", "label r21 = new java lang assertion error", "r20 = new java lang string builder", "specialinvoke r20 < init >", "$ r13 = r20 append \\ `` type=\\ ``", "$ r14 = $ r13 append r19", "$ r15 = $ r14 to string", "specialinvoke r21 < init > $ r15", "throw r21", "if $ z0 == 0 goto label11", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [], [57], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene codecs store field reader r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "d0 = @ parameter1", "d1 = @ parameter2", "$ r1 = newarray double [ 1 ]", "$ r1 [ 0 ] = d0", "$ r2 = newarray double [ 1 ]", "$ r2 [ 0 ] = d1", "$ r3 = org apache lucene document double point new range query r0 $ r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r5 = org apache lucene document double range r0", "$ r1 = r5 type", "$ i1 = $ r1 point dimension count", "$ i2 = $ i1 2", "org apache lucene util future object check index i0 $ i2", "r6 = org apache lucene document double range r0", "$ r2 = r6 field data", "$ r3 = org apache lucene util bytes ref $ r2", "$ r4 = $ r3 bytes", "$ d0 = org apache lucene document double range decode min $ r4 i0", "return $ d0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org apache lucene document range field query $ query type within", "$ r4 = org apache lucene document double range new relation query r0 r1 r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = org apache lucene document field r0", "$ r1 = r4 field data", "$ z0 = $ r1 instanceof java io reader", "if $ z0 == 0 goto label1", "r5 = org apache lucene document field r0", "$ r2 = r5 field data", "$ r3 = java io reader $ r2", "goto label2", "label return $ r3", "if $ z0 == 0 goto label1", "label $ r3 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r16 = org apache lucene document field r0", "$ r2 = r16 field data", "$ z0 = $ r2 instanceof java lang string", "if $ z0 ! = 0 goto label1", "r14 = new java lang illegal argument exception", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r6 = r13 append \\ `` can not change value type from \\ ``", "r17 = org apache lucene document field r0", "$ r7 = r17 field data", "$ r8 = $ r7 get class", "$ r9 = $ r8 get simple name", "$ r10 = $ r6 append $ r9", "$ r11 = $ r10 append \\ `` to string\\ ``", "$ r12 = $ r11 to string", "specialinvoke r14 < init > $ r12", "throw r14", "if $ z0 ! = 0 goto label1", "label if r1 ! = null goto label2", "r15 = new java lang illegal argument exception", "specialinvoke r15 < init > \\ `` value must not be null\\ ``", "throw r15", "label if r1 ! = null goto label2", "label r18 = org apache lucene document field r0", "r18 field data = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache lucene document field r0", "$ r2 = r8 type", "$ r3 = $ r2 index option", "$ r4 = org apache lucene index index option none", "if $ r3 == $ r4 goto label1", "r9 = org apache lucene document field r0", "$ r6 = r9 type", "$ z0 = $ r6 tokenized", "if $ z0 ! = 0 goto label2", "label r7 = new java lang illegal argument exception", "specialinvoke r7 < init > \\ `` token stream field must be indexed and tokenized\\ ``", "throw r7", "if $ z0 ! = 0 goto label2", "label r10 = org apache lucene document field r0", "r10 token stream = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "d0 = @ parameter1", "d1 = @ parameter2", "r2 = new org apache lucene document lat lon point sort field", "specialinvoke r2 < init > r0 d0 d1", "r3 = org apache lucene search sort field r2", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache lucene document shape field $ query relation intersects", "r4 = org apache lucene geo lat lon geometry [ ] r1", "$ r3 = org apache lucene document lat lon point new geometry query r0 $ r2 r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = org apache lucene geo x y geometry [ ] r1", "$ r2 = org apache lucene document x y doc value field new slow geometry query r0 r3", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r4 = org apache lucene geo x y geometry [ ] r2", "$ r3 = org apache lucene document x y shape new geometry query r0 r1 r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r4 = org apache lucene geo x y geometry [ ] r2", "$ r3 = org apache lucene document x y shape new geometry query r0 r1 r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "r1 = org apache lucene geo edge tree r0", "$ b0 = specialinvoke r1 contains pn poly d0 d1", "if $ b0 < = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b0 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "r0 = org apache lucene geo rectangle from point distance d0 d1 d2", "d3 = org apache lucene geo rectangle axis lat d0 d2", "d4 = org apache lucene geo geo utils distance query sort key d2", "r1 = geo encode utils $ lambda_create distance predicate_0__1 bootstrap $ d0 d1 d4 d3", "$ d8 = r0 min lat", "$ d7 = r0 max lat", "$ d6 = r0 min lon", "$ d5 = r0 max lon", "r2 = org apache lucene geo geo encode utils create sub box $ d8 $ d7 $ d6 $ d5 r1", "$ r3 = new org apache lucene geo geo encode utils $ distance predicate", "$ i5 = r2 lat shift", "$ i4 = r2 lon shift", "$ i3 = r2 lat base", "$ i2 = r2 lon base", "$ i1 = r2 max lat delta", "$ i0 = r2 max lon delta", "$ r4 = r2 relation", "specialinvoke $ r3 < init > $ i5 $ i4 $ i3 $ i2 $ i1 $ i0 $ r4 d0 d1 d4 null", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "d3 = @ parameter3", "d4 = @ parameter4", "d5 = @ parameter5", "d6 = @ parameter6", "d7 = @ parameter7", "$ i0 = org apache lucene geo geo utils orient d4 d5 d6 d7 d0 d1", "$ i1 = org apache lucene geo geo utils orient d4 d5 d6 d7 d2 d3", "$ i2 = $ i0 * $ i1", "if $ i2 > = 0 goto label1", "$ i3 = org apache lucene geo geo utils orient d0 d1 d2 d3 d4 d5", "$ i4 = org apache lucene geo geo utils orient d0 d1 d2 d3 d6 d7", "$ i5 = $ i3 * $ i4", "if $ i5 > = 0 goto label1", "return 1", "if $ i5 > = 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache lucene index check index r0", "r1 checksum only = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index concurrent merge scheduler r0", "r1 do auto i o throttle = 0", "r2 = org apache lucene index concurrent merge scheduler r0", "r2 update merge thread", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "i2 = @ parameter2", "if i0 > 0 goto label1", "r82 = new java lang illegal argument exception", "r81 = new java lang string builder", "specialinvoke r81 < init >", "$ r74 = r81 append \\ `` point dimension count must be > = 0 get \\ ``", "$ r75 = $ r74 append i0", "$ r76 = $ r75 append \\ `` for field=\\\\\\ `` \\ ``", "r97 = org apache lucene index field info r0", "$ r77 = r97 name", "$ r78 = $ r76 append $ r77", "$ r79 = $ r78 append \\ `` \\\\\\ `` \\ ``", "$ r80 = $ r79 to string", "specialinvoke r82 < init > $ r80", "throw r82", "if i0 > 0 goto label1", "label if i1 < = 8 goto label2", "r84 = new java lang illegal argument exception", "r83 = new java lang string builder", "specialinvoke r83 < init >", "$ r65 = r83 append \\ `` point index dimension count must be < point value max_index_dimensions = 8 get \\ ``", "$ r66 = $ r65 append i1", "$ r67 = $ r66 append \\ `` for field=\\\\\\ `` \\ ``", "r98 = org apache lucene index field info r0", "$ r68 = r98 name", "$ r69 = $ r67 append $ r68", "$ r70 = $ r69 append \\ `` \\\\\\ `` \\ ``", "$ r71 = $ r70 to string", "specialinvoke r84 < init > $ r71", "throw r84", "label if i1 < = 8 goto label2", "label if i1 < = i0 goto label3", "r86 = new java lang illegal argument exception", "r85 = new java lang string builder", "specialinvoke r85 < init >", "$ r54 = r85 append \\ `` point index dimension count must be < = point dimension count = \\ ``", "$ r55 = $ r54 append i0", "$ r56 = $ r55 append \\ `` get \\ ``", "$ r57 = $ r56 append i1", "$ r58 = $ r57 append \\ `` for field=\\\\\\ `` \\ ``", "r99 = org apache lucene index field info r0", "$ r59 = r99 name", "$ r60 = $ r58 append $ r59", "$ r61 = $ r60 append \\ `` \\\\\\ `` \\ ``", "$ r62 = $ r61 to string", "specialinvoke r86 < init > $ r62", "throw r86", "label if i1 < = i0 goto label3", "label if i2 > 0 goto label4", "r88 = new java lang illegal argument exception", "r87 = new java lang string builder", "specialinvoke r87 < init >", "$ r45 = r87 append \\ `` point num byte must be > = 0 get \\ ``", "$ r46 = $ r45 append i2", "$ r47 = $ r46 append \\ `` for field=\\\\\\ `` \\ ``", "r100 = org apache lucene index field info r0", "$ r48 = r100 name", "$ r49 = $ r47 append $ r48", "$ r50 = $ r49 append \\ `` \\\\\\ `` \\ ``", "$ r51 = $ r50 to string", "specialinvoke r88 < init > $ r51", "throw r88", "label if i2 > 0 goto label4", "label if i2 < = 16 goto label5", "r90 = new java lang illegal argument exception", "r89 = new java lang string builder", "specialinvoke r89 < init >", "$ r36 = r89 append \\ `` point num byte must be < = point value max_num_bytes = 16 get \\ ``", "$ r37 = $ r36 append i2", "$ r38 = $ r37 append \\ `` for field=\\\\\\ `` \\ ``", "r101 = org apache lucene index field info r0", "$ r39 = r101 name", "$ r40 = $ r38 append $ r39", "$ r41 = $ r40 append \\ `` \\\\\\ `` \\ ``", "$ r42 = $ r41 to string", "specialinvoke r90 < init > $ r42", "throw r90", "label if i2 < = 16 goto label5", "label r102 = org apache lucene index field info r0", "$ i3 = r102 point dimension count", "if $ i3 == 0 goto label6", "r103 = org apache lucene index field info r0", "$ i10 = r103 point dimension count", "if $ i10 == i0 goto label6", "r92 = new java lang illegal argument exception", "r91 = new java lang string builder", "specialinvoke r91 < init >", "$ r25 = r91 append \\ `` can not change point dimension count from \\ ``", "r104 = org apache lucene index field info r0", "$ i11 = r104 point dimension count", "$ r26 = $ r25 append $ i11", "$ r27 = $ r26 append \\ `` to \\ ``", "$ r28 = $ r27 append i0", "$ r29 = $ r28 append \\ `` for field=\\\\\\ `` \\ ``", "r105 = org apache lucene index field info r0", "$ r30 = r105 name", "$ r31 = $ r29 append $ r30", "$ r32 = $ r31 append \\ `` \\\\\\ `` \\ ``", "$ r33 = $ r32 to string", "specialinvoke r92 < init > $ r33", "throw r92", "if $ i10 == i0 goto label6", "label r106 = org apache lucene index field info r0", "$ i4 = r106 point index dimension count", "if $ i4 == 0 goto label7", "r107 = org apache lucene index field info r0", "$ i8 = r107 point index dimension count", "if $ i8 == i1 goto label7", "r94 = new java lang illegal argument exception", "r93 = new java lang string builder", "specialinvoke r93 < init >", "$ r14 = r93 append \\ `` can not change point index dimension count from \\ ``", "r108 = org apache lucene index field info r0", "$ i9 = r108 point index dimension count", "$ r15 = $ r14 append $ i9", "$ r16 = $ r15 append \\ `` to \\ ``", "$ r17 = $ r16 append i1", "$ r18 = $ r17 append \\ `` for field=\\\\\\ `` \\ ``", "r109 = org apache lucene index field info r0", "$ r19 = r109 name", "$ r20 = $ r18 append $ r19", "$ r21 = $ r20 append \\ `` \\\\\\ `` \\ ``", "$ r22 = $ r21 to string", "specialinvoke r94 < init > $ r22", "throw r94", "if $ i8 == i1 goto label7", "label r110 = org apache lucene index field info r0", "$ i5 = r110 point num bytes", "if $ i5 == 0 goto label8", "r111 = org apache lucene index field info r0", "$ i6 = r111 point num bytes", "if $ i6 == i2 goto label8", "r96 = new java lang illegal argument exception", "r95 = new java lang string builder", "specialinvoke r95 < init >", "$ r3 = r95 append \\ `` can not change point num byte from \\ ``", "r112 = org apache lucene index field info r0", "$ i7 = r112 point num bytes", "$ r4 = $ r3 append $ i7", "$ r5 = $ r4 append \\ `` to \\ ``", "$ r6 = $ r5 append i2", "$ r7 = $ r6 append \\ `` for field=\\\\\\ `` \\ ``", "r113 = org apache lucene index field info r0", "$ r8 = r113 name", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 append \\ `` \\\\\\ `` \\ ``", "$ r11 = $ r10 to string", "specialinvoke r96 < init > $ r11", "throw r96", "if $ i6 == i2 goto label8", "label r114 = org apache lucene index field info r0", "r114 point dimension count = i0", "r115 = org apache lucene index field info r0", "r115 point index dimension count = i1", "r116 = org apache lucene index field info r0", "r116 point num bytes = i2", "r117 = org apache lucene index field info r0", "r117 check consistency", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], [99], [100], [101], [102], [103], [], [105], [106], [107], [108], [109], [110], [111], [112], [113], [114], [115], [116], [117], [118], [119], [120], [121], [122], [123], [124], [125], [126], [127], [], [129], [130], [131], [132], [133], [134], [135], [136], [137], [138], [139], [140], [141], [142], [143], [144], [145], [146], [147], [148], [149], [150], [151], [], [153], [154], [155], [156], [157], [158], [159], [160], [161], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene index index format too old exception r0", "$ r1 = r2 version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache lucene index index writer r0", "r1 force merge i0 1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene index index writer r0", "$ r1 = r2 pending num doc", "$ l0 = $ r1 get", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene index leaf meta data r0", "$ r1 = r2 min version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache lucene index index writer config r0", "$ r1 = r2 set check pending flush update z0", "r3 = org apache lucene index live index writer config $ r1", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene index multi term r0", "$ r1 = r2 sub", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index segment commit info r0", "$ l0 = r1 next write doc value gen", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene index segment info r0", "$ r1 = r2 min version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = new org apache lucene index standard directory reader $ 1", "specialinvoke $ r3 < init > r0 r2", "$ r4 = $ r3 run r1", "$ r5 = org apache lucene index directory reader $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index tiered merge policy r0", "$ d0 = r1 delete pct allow", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene search cache collector r0", "$ z0 = r1 cache", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = new org apache lucene search double value source $ double value sort field", "r3 = org apache lucene search double value source r0", "specialinvoke r2 < init > r3 z0", "r4 = org apache lucene search sort field r2", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = double value source $ long bit to double__1 bootstrap $", "$ r2 = org apache lucene search double value source from field r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache lucene search double value source from long field r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = new org apache lucene search explanation", "specialinvoke $ r3 < init > 1 r0 r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["l0 = @ parameter0", "r1 = new org apache lucene search long value source $ constant long value source", "specialinvoke r1 < init > l0 null", "r2 = org apache lucene search long value source r1", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ z0 = org apache lucene search l r u query cache $ assertion disable", "if $ z0 ! = 0 goto label1", "r4 = org apache lucene search l r u query cache r0", "$ r1 = r4 lock", "$ z1 = $ r1 be hold by current thread", "if $ z1 ! = 0 goto label1", "r3 = new java lang assertion error", "specialinvoke r3 < init >", "throw r3", "if $ z1 ! = 0 goto label1", "label r5 = org apache lucene search l r u query cache r0", "r5 ram byte use = 0l", "r6 = org apache lucene search l r u query cache r0", "r6 cache size = 0l", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r4 = new org apache lucene search scorable $ child scorable", "r5 = org apache lucene search filter scorable r0", "$ r2 = r5 in", "specialinvoke r4 < init > $ r2 \\ `` filter\\ ``", "$ r3 = java util collection singleton list r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search sort set sort field r0", "$ r1 = r2 selector", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r7 = org apache lucene store byte buffer data output r0", "$ r2 = r7 block reuse", "$ r1 = org apache lucene store byte buffer data output no_reuse", "if $ r2 == $ r1 goto label1", "r8 = org apache lucene store byte buffer data output r0", "$ r6 = r8 block", "r9 = org apache lucene store byte buffer data output r0", "$ r5 = r9 block reuse", "$ r6 for each $ r5", "label r10 = org apache lucene store byte buffer data output r0", "$ r3 = r10 block", "$ r3 clear", "r11 = org apache lucene store byte buffer data output r0", "r11 ram byte use = 0l", "$ r4 = org apache lucene store byte buffer data output empty", "r12 = org apache lucene store byte buffer data output r0", "r12 current block = $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ b2 = l0 cmp 0l", "if $ b2 > = 0 goto label1", "r12 = new java lang illegal argument exception", "r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r8 = r11 append \\ `` num byte must be > = 0 get \\ ``", "$ r9 = $ r8 append l0", "$ r10 = $ r9 to string", "specialinvoke r12 < init > $ r10", "throw r12", "if $ b2 > = 0 goto label1", "label r14 = org apache lucene store data input r0", "$ r1 = r14 skip buffer", "if $ r1 ! = null goto label2", "$ r5 = newarray byte [ 1024 ]", "r15 = org apache lucene store data input r0", "r15 skip buffer = $ r5", "label $ z0 = org apache lucene store data input $ assertion disable", "if $ z0 ! = 0 goto label3", "r16 = org apache lucene store data input r0", "$ r3 = r16 skip buffer", "$ i6 = lengthof $ r3", "if $ i6 == 1024 goto label3", "r13 = new java lang assertion error", "specialinvoke r13 < init >", "throw r13", "if $ i6 == 1024 goto label3", "label l7 = 0l", "label $ b8 = l7 cmp l0", "if $ b8 > = 0 goto label5", "$ l3 = l0 - l7", "$ l4 = java lang math min 1024l $ l3", "i1 = int $ l4", "r17 = org apache lucene store data input r0", "$ r2 = r17 skip buffer", "r18 = org apache lucene store data input r0", "r18 read bytes $ r2 0 i1 0", "$ l5 = long i1", "l7 = l7 + $ l5", "goto label4", "if $ b8 > = 0 goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "org apache lucene util accountables to string $ r2 r0 0", "$ r4 = $ r2 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "$ r1 = java util collection empty list", "$ r2 = org apache lucene util accountables name accountable r0 $ r1 l0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "l0 = @ parameter2", "r3 = new org apache lucene util accountables $ 2", "specialinvoke r3 < init > l0 r1 r0", "r4 = org apache lucene util accountable r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = r0 create state", "r0 add transition i0 i1 0 1114111", "return i1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r3 = new org apache lucene util automaton transition", "specialinvoke r3 < init >", "r4 = org apache lucene util automaton automaton r0", "i2 = r4 init transition i1 r3", "i6 = 0", "label if i6 > = i2 goto label2", "r5 = org apache lucene util automaton automaton r0", "r5 get next transition r3", "$ i5 = r3 d", "$ i4 = r3 min", "$ i3 = r3 max", "r6 = org apache lucene util automaton automaton r0", "r6 add transition i0 $ i5 $ i4 $ i3", "i6 = i6 + 1", "goto label1", "label if i6 > = i2 goto label2", "label r7 = org apache lucene util automaton automaton r0", "$ z0 = r7 be accept i1", "if $ z0 == 0 goto label3", "r8 = org apache lucene util automaton automaton r0", "r8 set accept i0 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = r1 goto label1", "return 1", "if r0 ! = r1 goto label1", "label $ z0 = org apache lucene util automaton operation subset of r1 r0", "if $ z0 == 0 goto label2", "$ z1 = org apache lucene util automaton operation subset of r0 r1", "if $ z1 == 0 goto label2", "$ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 get num state", "if $ i0 ! = 0 goto label1", "return 1", "if $ i0 ! = 0 goto label1", "label $ r1 = new org apache lucene util automaton transition", "specialinvoke $ r1 < init >", "$ r2 = new java util bit set", "$ i1 = r0 get num state", "specialinvoke $ r2 < init > $ i1", "$ r3 = new java util bit set", "$ i2 = r0 get num state", "specialinvoke $ r3 < init > $ i2", "$ z0 = org apache lucene util automaton operation be finite $ r1 r0 0 $ r2 $ r3 0", "return $ z0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache lucene util frequency track ring buffer r0", "$ r1 = r2 frequency", "$ i1 = $ r1 frequency i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org apache lucene util fst builder r0", "r1 direct address max oversizing factor = f0", "r2 = org apache lucene util fst builder r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache lucene util fst byte ref f s t enum r0", "r3 target = r1", "$ i0 = r1 length", "r4 = org apache lucene util fst byte ref f s t enum r0", "r4 target length = $ i0", "specialinvoke r0 do seek ceil", "r5 = org apache lucene util fst byte ref f s t enum r0", "$ r2 = specialinvoke r5 set result", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r1 = @ parameter3", "i2 = @ parameter4", "i3 = @ parameter5", "$ i7 = lengthof r0", "org apache lucene util future array check from to index i0 i1 $ i7", "$ i8 = lengthof r1", "org apache lucene util future array check from to index i2 i3 $ i8", "i4 = i1 - i0", "i5 = i3 - i2", "i6 = java lang math min i4 i5", "i13 = 0", "label if i13 > = i6 goto label3", "$ i9 = i13 + i0", "$ b12 = r0 [ $ i9 ]", "$ i10 = i13 + i2", "$ b11 = r1 [ $ i10 ]", "if $ b12 == $ b11 goto label2", "return i13", "if $ b12 == $ b11 goto label2", "label i13 = i13 + 1", "goto label1", "label if i13 > = i6 goto label3", "label if i4 ! = i5 goto label4", "$ i14 = -1", "goto label5", "label return $ i14", "label if i4 ! = i5 goto label4", "label $ i14 = i6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [], [25], [26], [27], [], [29], [30], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r13 = org apache lucene util graph graph token stream finite string r0", "$ r3 = r13 det", "r14 = org apache lucene util graph graph token stream finite string r0", "$ r2 = r14 transition", "i1 = $ r3 init transition i0 $ r2", "r12 = new java util array list", "specialinvoke r12 < init >", "i5 = 0", "label if i5 > = i1 goto label2", "r15 = org apache lucene util graph graph token stream finite string r0", "$ r6 = r15 det", "r16 = org apache lucene util graph graph token stream finite string r0", "$ r5 = r16 transition", "$ r6 get next transition $ r5", "r17 = org apache lucene util graph graph token stream finite string r0", "$ r7 = r17 token", "$ r8 = java util array a list $ r7", "r18 = org apache lucene util graph graph token stream finite string r0", "$ r9 = r18 transition", "$ i4 = $ r9 min", "r19 = org apache lucene util graph graph token stream finite string r0", "$ r10 = r19 transition", "$ i2 = $ r10 max", "$ i3 = $ i2 + 1", "$ r11 = $ r8 sub list $ i4 $ i3", "r12 add all $ r11", "i5 = i5 + 1", "goto label1", "label if i5 > = i1 goto label2", "label return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene util ints ref builder r0", "$ r1 = r2 ref", "$ i0 = $ r1 length", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene util query builder r0", "$ z0 = r1 enable graph query", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r6 = r2 get attribute class \\ `` lorg apache lucene analysis tokenattributes term to byte ref attribute \\ ``", "r3 = org apache lucene analysis tokenattributes term to byte ref attribute $ r6", "$ r7 = r2 add attribute class \\ `` lorg apache lucene search boost attribute \\ ``", "r4 = org apache lucene search boost attribute $ r7", "r2 reset", "r16 = new java util array list", "specialinvoke r16 < init >", "label $ z0 = r2 increment token", "if $ z0 == 0 goto label2", "r18 = new org apache lucene util query builder $ term and boost", "r17 = new org apache lucene index term", "$ r15 = r3 get bytes ref", "specialinvoke r17 < init > r1 $ r15", "$ f0 = r4 get boost", "specialinvoke r18 < init > r17 $ f0", "r16 add r18", "goto label1", "if $ z0 == 0 goto label2", "label $ r9 = newarray org apache lucene util query builder $ term and boost [ 0 ]", "$ r10 = r16 to array $ r9", "$ r11 = org apache lucene util query builder $ term and boost [ ] $ r10", "r19 = org apache lucene util query builder r0", "$ r12 = r19 new synonym query $ r11", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene util roar doc id set r0", "$ i0 = r1 cardinality", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "z0 = @ parameter1", "$ r1 = java lang integer value of i0", "r2 = org apache lucene search group group search r0", "r2 max doc to cache = $ r1", "r3 = org apache lucene search group group search r0", "r3 max cache r a m m b = null", "r4 = org apache lucene search group group search r0", "r4 cache score = z0", "r5 = org apache lucene search group group search r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache lucene search group group search r0", "r1 include max score = z0", "r2 = org apache lucene search group group search r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache lucene search group group search r0", "r1 all group head = z0", "r2 = org apache lucene search group group search r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r6 = org apache lucene search group group reducer r0", "$ r3 = r6 group", "$ r4 = $ r3 get r1", "r2 = org apache lucene search group group reducer $ group collector $ r4", "$ r5 = r2 leaf collector", "$ r5 collect i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r1 = @ parameter3", "$ z0 = r0 be empty", "if $ z0 == 0 goto label1", "return null", "if $ z0 == 0 goto label1", "label $ r2 = new org apache lucene search group search group $ group merger", "specialinvoke $ r2 < init > r1", "$ r3 = $ r2 merge r0 i0 i1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r45 = org apache lucene search group top group collector r0", "$ r6 = r45 group", "$ i1 = $ r6 size", "$ r7 = newarray org apache lucene search group group docs [ $ i1 ]", "r1 = org apache lucene search group group docs [ ] $ r7", "i11 = 0", "f0 = 1 4e-45f", "r46 = org apache lucene search group top group collector r0", "$ r8 = r46 group", "r2 = $ r8 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label9", "$ r14 = r2 next", "r3 = org apache lucene search group search group $ r14", "r47 = org apache lucene search group top group collector r0", "$ r16 = r47 group reducer", "$ r15 = r3 group value", "$ r17 = $ r16 get collector $ r15", "r4 = org apache lucene search group top group collector $ top doc and max score collector $ r17", "$ z1 = org apache lucene search group top group collector $ top doc and max score collector access $ 000 r4", "if $ z1 == 0 goto label6", "$ r21 = org apache lucene search group top group collector $ top doc and max score collector access $ 100 r4", "r5 = $ r21 top doc", "$ r22 = r5 score doc", "$ i5 = lengthof $ r22", "if $ i5 ! = 0 goto label2", "$ f1 = #na n f", "goto label3", "label f2 = $ f1", "$ r25 = r5 score doc", "$ i6 = lengthof $ r25", "if $ i6 > i0 goto label4", "r41 = new org apache lucene search top doc", "$ r34 = r5 total hit", "$ r33 = newarray org apache lucene search score doc [ 0 ]", "specialinvoke r41 < init > $ r34 $ r33", "r35 = r41", "goto label5", "label goto label8", "label $ i12 = i11", "i11 = i11 + 1", "r43 = new org apache lucene search group group docs", "$ r37 = r35 total hit", "$ r38 = r35 score doc", "$ r39 = r3 group value", "$ r40 = r3 sort value", "specialinvoke r43 < init > #na n f f2 $ r37 $ r38 $ r39 $ r40", "r1 [ $ i12 ] = r43", "f0 = java lang math max f0 f2", "goto label1", "if $ i6 > i0 goto label4", "label r42 = new org apache lucene search top doc", "$ r28 = r5 total hit", "$ r29 = r5 score doc", "$ r27 = r5 score doc", "$ i9 = lengthof $ r27", "r48 = org apache lucene search group top group collector r0", "$ i7 = r48 max doc per group", "$ i8 = i0 + $ i7", "$ i10 = java lang math min $ i9 $ i8", "$ r30 = org apache lucene util array util copy of sub array $ r29 i0 $ i10", "$ r31 = org apache lucene search score doc [ ] $ r30", "specialinvoke r42 < init > $ r28 $ r31", "r35 = r42", "if $ i5 ! = 0 goto label2", "label $ r23 = r5 score doc", "$ r24 = $ r23 [ 0 ]", "$ f1 = $ r24 score", "if $ z1 == 0 goto label6", "label $ r18 = org apache lucene search group top group collector $ top doc and max score collector access $ 100 r4", "r49 = org apache lucene search group top group collector r0", "$ i4 = r49 max doc per group", "r35 = $ r18 top doc i0 $ i4", "$ r19 = org apache lucene search group top group collector $ top doc and max score collector access $ 200 r4", "if $ r19 ! = null goto label7", "f2 = #na n f", "goto label8", "if $ r19 ! = null goto label7", "label $ r20 = org apache lucene search group top group collector $ top doc and max score collector access $ 200 r4", "f2 = $ r20 get max score", "if $ z0 == 0 goto label9", "label r44 = new org apache lucene search group top group", "r50 = org apache lucene search group top group collector r0", "$ r10 = r50 group sort", "$ r11 = $ r10 get sort", "r51 = org apache lucene search group top group collector r0", "$ r12 = r51 within group sort", "$ r13 = $ r12 get sort", "r52 = org apache lucene search group top group collector r0", "$ i3 = r52 total hit count", "r53 = org apache lucene search group top group collector r0", "$ i2 = r53 total group hit count", "specialinvoke r44 < init > $ r11 $ r13 $ i3 $ i2 r1 f0", "return r44"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search uhighlight passage r0", "$ r1 = r2 match start", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene search vectorhighlight fast vector highlighter r0", "$ z0 = r1 phrase highlight", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search join query bit set producer r0", "$ r1 = r2 query", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene query common term query r0", "$ f0 = r1 low freq min nr should match", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r9 = new org apache lucene query function index reader function $ index reader double value source", "$ r2 = index reader function $ lambda_doc count_3__4 bootstrap $ r0", "r8 = new java lang string builder", "specialinvoke r8 < init >", "$ r4 = r8 append \\ `` doc count \\ ``", "$ r5 = $ r4 append r0", "$ r6 = $ r5 append \\ `` \\ ``", "$ r7 = $ r6 to string", "specialinvoke r9 < init > $ r2 $ r7 null", "r10 = org apache lucene search double value source r9", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = new org apache lucene query function value source $ value source sort field", "r3 = org apache lucene query function value source r0", "specialinvoke r2 < init > r3 z0", "r4 = org apache lucene search sort field r2", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r5 = new org apache lucene query interval offset interval source", "specialinvoke r5 < init > r1 0", "r6 = org apache lucene query intervals interval source r5", "$ r3 = org apache lucene query intervals interval extend r6 0 2147483647", "$ r4 = org apache lucene query interval contain by interval source build r0 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r11 = org apache lucene queryparser classic query parser base r0", "$ z0 = r11 allow lead wildcard", "if $ z0 ! = 0 goto label1", "$ z1 = r2 start with \\ `` * \\ ``", "if $ z1 == 0 goto label1", "r9 = new org apache lucene queryparser classic parse exception", "specialinvoke r9 < init > \\ `` \\ ' * \\ ' not allow a first character in prefix query\\ ``", "r12 = java lang throwable r9", "throw r12", "if $ z1 == 0 goto label1", "label r13 = org apache lucene queryparser classic query parser base r0", "$ r5 = r13 get analyzer", "r3 = $ r5 normalize r1 r2", "r10 = new org apache lucene index term", "specialinvoke r10 < init > r1 r3", "r14 = org apache lucene queryparser classic query parser base r0", "$ r7 = r14 new prefix query r10", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene queryparser ext extendable query parser r0", "$ r1 = r2 extension", "$ c0 = $ r1 get extension field delimiter", "return $ c0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene queryparser flexible core node any query node r0", "$ r1 = r2 field", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org apache lucene queryparser flexible core node boost query node r0", "r1 = r4 get child", "if r1 == null goto label1", "$ i0 = r1 size", "if $ i0 ! = 0 goto label2", "label return null", "if $ i0 ! = 0 goto label2", "label $ r2 = r1 get 0", "$ r3 = org apache lucene queryparser flexible core node query node $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache lucene queryparser flexible core processor query node processor impl r0", "r2 query config = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r8 = org apache lucene queryparser flexible standard standard query parser r0", "r1 = r8 get query config handler", "$ r2 = org apache lucene queryparser flexible standard config standard query config handler $ configuration key fuzzy_config", "$ r3 = r1 get $ r2", "r6 = org apache lucene queryparser flexible standard config fuzzy config $ r3", "if r6 ! = null goto label1", "r7 = new org apache lucene queryparser flexible standard config fuzzy config", "specialinvoke r7 < init >", "r6 = r7", "$ r5 = org apache lucene queryparser flexible standard config standard query config handler $ configuration key fuzzy_config", "r1 set $ r5 r7", "label r6 set min similarity f0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r19 = new org apache lucene search boolean query $ builder", "specialinvoke r19 < init >", "r21 = org apache lucene queryparser simple simple query parser r0", "$ r6 = r21 weight", "$ r7 = $ r6 entry set", "r3 = $ r7 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label4", "$ r10 = r3 next", "r4 = java util map $ entry $ r10", "$ r11 = r4 get key", "$ r12 = java lang string $ r11", "r22 = org apache lucene queryparser simple simple query parser r0", "r18 = r22 create phrase query $ r12 r1 i0", "if r18 == null goto label3", "$ r13 = r4 get value", "$ r14 = java lang float $ r13", "f0 = $ r14 float value", "$ b1 = f0 cmpl 1 0f", "if $ b1 == 0 goto label2", "r20 = new org apache lucene search boost query", "r23 = org apache lucene search query r18", "specialinvoke r20 < init > r23 f0", "r18 = r20", "label $ r15 = org apache lucene search boolean clause $ occur should", "r24 = org apache lucene search query r18", "r19 add r24 $ r15", "label goto label1", "if $ z0 == 0 goto label4", "label $ r8 = r19 build", "r25 = org apache lucene queryparser simple simple query parser r0", "$ r9 = r25 simplify $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r23 = new org apache lucene search boolean query $ builder", "specialinvoke r23 < init >", "r27 = org apache lucene queryparser simple simple query parser r0", "$ r8 = r27 weight", "$ r9 = $ r8 entry set", "r3 = $ r9 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r12 = r3 next", "r4 = java util map $ entry $ r12", "$ r13 = r4 get key", "r5 = java lang string $ r13", "r28 = org apache lucene queryparser simple simple query parser r0", "$ r14 = r28 get analyzer", "r6 = $ r14 normalize r5 r1", "r25 = new org apache lucene search prefix query", "r24 = new org apache lucene index term", "specialinvoke r24 < init > r5 r6", "specialinvoke r25 < init > r24", "r22 = r25", "$ r17 = r4 get value", "$ r18 = java lang float $ r17", "f0 = $ r18 float value", "$ b0 = f0 cmpl 1 0f", "if $ b0 == 0 goto label2", "r26 = new org apache lucene search boost query", "r29 = org apache lucene search query r25", "specialinvoke r26 < init > r29 f0", "r22 = r26", "label $ r19 = org apache lucene search boolean clause $ occur should", "r30 = org apache lucene search query r22", "r23 add r30 $ r19", "goto label1", "if $ z0 == 0 goto label3", "label $ r10 = r23 build", "r31 = org apache lucene queryparser simple simple query parser r0", "$ r11 = r31 simplify $ r10", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache lucene queryparser surround query simple term r1", "r3 = org apache lucene queryparser surround query simple term r0", "$ i0 = r3 compare to $ r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "f0 = @ parameter1", "f1 = @ parameter2", "$ r1 = newarray float [ 1 ]", "$ r1 [ 0 ] = f0", "$ r2 = newarray float [ 1 ]", "$ r2 [ 0 ] = f1", "$ r3 = org apache lucene document half float point new range query r0 $ r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org apache lucene spatial prefix intersects prefix tree query $ 1", "r5 = org apache lucene spatial prefix intersects prefix tree query r0", "specialinvoke r4 < init > r5 r1", "$ r3 = r4 get doc id set", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache lucene spatial prefix prefix tree strategy r0", "r1 point only = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache lucene spatial prefix tree spatial prefix tree factory r0", "r2 version = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r2 = r10 append \\ `` distance value source \\ ``", "r11 = org apache lucene spatial vector distance value source r0", "$ r3 = r11 strategy", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append \\", "r12 = org apache lucene spatial vector distance value source r0", "$ r6 = r12 from", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append \\ `` \\ ``", "$ r9 = $ r8 to string", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "d0 = @ parameter1", "d1 = @ parameter2", "d2 = @ parameter3", "r1 = @ parameter4", "r2 = org apache lucene spatial3d geo3 d util from distance r1 d0 d1 d2", "r4 = new org apache lucene spatial3d geo3 d point outside sort field", "r5 = org apache lucene spatial3d geom geo outside distance r2", "specialinvoke r4 < init > r0 r1 r5", "r6 = org apache lucene search sort field r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org apache lucene spatial3d geom geo concave polygon", "specialinvoke r3 < init > r0 r1", "r4 = org apache lucene spatial3d geom geo polygon r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "$ d3 = java lang math ab d0", "$ b0 = $ d3 cmpg 1 0e-12", "if $ b0 > = 0 goto label1", "$ d11 = java lang math ab d1", "$ b1 = $ d11 cmpg 1 0e-12", "if $ b1 > = 0 goto label1", "return null", "if $ b1 > = 0 goto label1", "label $ d5 = d0 * d0", "$ d4 = d1 * d1", "$ d6 = $ d5 + $ d4", "$ d7 = java lang math sqrt $ d6", "d2 = 1 0 $ d7", "$ r0 = new org apache lucene spatial3d geom plane", "$ d10 = d1 * d2", "$ d8 = neg d0", "$ d9 = $ d8 * d2", "specialinvoke $ r0 < init > $ d10 $ d9 0 0 0 0", "return $ r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r5 = org apache lucene spatial3d geom plane r0", "r6 = org apache lucene spatial3d geom bound r2", "r5 find intersection bound r1 r6 r3 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ d2 = r1 x", "$ d1 = r1 y", "$ d0 = r1 z", "r2 = org apache lucene spatial3d geom planet model r0", "$ z0 = r2 point on surface $ d2 $ d1 $ d0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "$ d4 = d0 * d0", "$ d3 = d1 * d1", "$ d6 = $ d4 + $ d3", "$ d5 = d2 * d2", "$ d7 = $ d6 + $ d5", "$ d8 = java lang math sqrt $ d7", "return $ d8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene spatial3d geom vector r0", "$ d2 = r1 x", "r2 = org apache lucene spatial3d geom vector r0", "$ d1 = r2 y", "r3 = org apache lucene spatial3d geom vector r0", "$ d0 = r3 z", "$ d3 = org apache lucene spatial3d geom vector magnitude $ d2 $ d1 $ d0", "return $ d3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "r1 = org apache lucene spatial3d geom vector r0", "$ d6 = r1 x", "d3 = $ d6 - d0", "r2 = org apache lucene spatial3d geom vector r0", "$ d7 = r2 y", "d4 = $ d7 - d1", "r3 = org apache lucene spatial3d geom vector r0", "$ d8 = r3 z", "d5 = $ d8 - d2", "$ d10 = d3 * d3", "$ d9 = d4 * d4", "$ d12 = $ d10 + $ d9", "$ d11 = d5 * d5", "$ d13 = $ d12 + $ d11", "$ b0 = $ d13 cmpg 1 0e-24", "if $ b0 > = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b0 > = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = d0 - 1 0e-9", "r7 = org apache lucene spatial3d geom x y z bound r0", "$ r1 = r7 min x", "if $ r1 == null goto label1", "r8 = org apache lucene spatial3d geom x y z bound r0", "$ r5 = r8 min x", "$ d4 = $ r5 double value", "$ b1 = $ d4 cmpl d1", "if $ b1 < = 0 goto label2", "label $ r2 = java lang double value of d1", "r9 = org apache lucene spatial3d geom x y z bound r0", "r9 min x = $ r2", "label d2 = d0 + 1 0e-9", "r10 = org apache lucene spatial3d geom x y z bound r0", "$ r6 = r10 max x", "if $ r6 == null goto label3", "r11 = org apache lucene spatial3d geom x y z bound r0", "$ r4 = r11 max x", "$ d3 = $ r4 double value", "$ b0 = $ d3 cmpg d2", "if $ b0 > = 0 goto label4", "label $ r3 = java lang double value of d2", "r12 = org apache lucene spatial3d geom x y z bound r0", "r12 max x = $ r3", "label return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache lucene search spell direct spell checker r0", "$ i1 = r3 max query length", "if i0 < = $ i1 goto label1", "r2 = new java lang illegal argument exception", "specialinvoke r2 < init > \\ `` min query length must not be great than max query length\\ ``", "throw r2", "if i0 < = $ i1 goto label1", "label r4 = org apache lucene search spell direct spell checker r0", "r4 min query length = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache lucene search spell direct spell checker r0", "r1 low case term = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene search spell word break spell checker r0", "$ i0 = r1 min suggestion frequency", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache lucene search spell word break spell checker r0", "r1 max combine word length = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene search suggest document fuzzy completion query r0", "$ i0 = r1 max determinized state", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search suggest document prefix completion query r0", "$ r1 = r2 analyzer", "r3 = org apache lucene analysis analyzer $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "z0 = @ parameter2", "r5 = new org apache lucene search suggest document top suggest doc collector", "specialinvoke r5 < init > i0 z0", "r6 = org apache lucene search suggest document suggest index searcher r0", "r6 suggest r1 r5", "$ r4 = r5 get", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache lucene search suggest fst f s t completion lookup r0", "$ r2 = r4 normal completion", "i0 = $ r2 get bucket r1", "if i0 ! = -1 goto label1", "$ r3 = null", "goto label2", "label return $ r3", "if i0 ! = -1 goto label1", "label $ l1 = long i0", "$ r3 = java lang long value of $ l1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 == null goto label1", "if r2 == null goto label1", "$ i1 = r1 length", "if $ i1 ! = 0 goto label2", "label return null", "if $ i1 ! = 0 goto label2", "label r6 = r2", "i5 = 0", "label if r6 ! = null goto label4", "return null", "label if r6 ! = null goto label4", "label $ c2 = r1 char at i5", "$ c3 = r6 splitchar", "i0 = org apache lucene search suggest jaspell jaspell ternary search trie compare char alphabetically $ c2 $ c3", "if i0 ! = 0 goto label6", "i5 = i5 + 1", "$ i4 = r1 length", "if i5 ! = $ i4 goto label5", "return r6", "if i5 ! = $ i4 goto label5", "label $ r5 = r6 relatives", "r6 = $ r5 [ 2 ]", "goto label8", "label goto label3", "if i0 ! = 0 goto label6", "label if i0 > = 0 goto label7", "$ r4 = r6 relatives", "r6 = $ r4 [ 1 ]", "label if i0 > = 0 goto label7", "label $ r3 = r6 relatives", "r6 = $ r3 [ 3 ]"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search suggest jaspell jaspell ternary search trie r0", "$ r1 = r2 root node", "r3 = org apache lucene search suggest jaspell jaspell ternary search trie r0", "$ i0 = r3 num data nodes $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search suggest jaspell jaspell ternary search trie r0", "$ r1 = r2 root node", "r3 = org apache lucene search suggest jaspell jaspell ternary search trie r0", "$ i0 = r3 num node $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache mahout cf taste impl common cache r0", "$ r4 = r8 cache", "entermonitor $ r4", "label r9 = org apache mahout cf taste impl common cache r0", "$ r5 = r9 cache", "$ r5 remove r1", "exitmonitor $ r4", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r6 = org apache mahout cf taste impl common cache r0", "$ r3 = r6 cache", "entermonitor $ r3", "label r7 = org apache mahout cf taste impl common cache r0", "$ r4 = r7 cache", "$ r4 clear", "exitmonitor $ r3", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org apache mahout classifier df data data r0", "$ r1 = r4 instance", "$ r2 = $ r1 get i0", "$ r3 = org apache mahout classifier df data instance $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r1 get file system r0", "$ r7 = r2 get file status r1", "$ z0 = $ r7 be dir", "if $ z0 == 0 goto label01", "r12 = org apache mahout classifier df d f utils list output file r2 r1", "goto label02", "label r13 = null", "r3 = r12", "i0 = lengthof r12", "i1 = 0", "label if i1 > = i0 goto label10", "r4 = r3 [ i1 ]", "r14 = new org apache hadoop f f s data input stream", "$ r10 = r2 open r4", "r15 = java io input stream $ r10", "specialinvoke r14 < init > r15", "label if r13 ! = null goto label05", "r16 = java io data input r14", "r13 = org apache mahout classifier df decision forest read r16", "goto label06", "label r18 = java io closeable r14", "com google common io closeables close r18 1", "goto label09", "label i1 = i1 + 1", "goto label03", "label if r13 ! = null goto label05", "label r17 = java io data input r14", "r13 read field r17", "label if i1 > = i0 goto label10", "label return r13", "if $ z0 == 0 goto label01", "label $ r8 = newarray org apache hadoop fs path [ 1 ]", "$ r8 [ 0 ] = r1", "r12 = $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = org apache mahout common hadoop util get cached file r0", "$ i1 = lengthof r1", "if $ i1 > i0 goto label1", "$ r3 = new java io i o exception", "specialinvoke $ r3 < init > \\ `` path not find in the distributed cache\\ ``", "throw $ r3", "if $ i1 > i0 goto label1", "label $ r2 = r1 [ i0 ]", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org apache mahout classifier df mapreduce partial tree i d r0", "$ l0 = r1 get", "$ l1 = $ l0 100000l", "$ i2 = int $ l1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r6 = new org apache hadoop conf configuration", "specialinvoke $ r6 < init >", "$ r7 = new org apache hadoop fs path", "specialinvoke $ r7 < init > r0", "r4 = org apache mahout classifier df decision forest load $ r6 $ r7", "$ r8 = new org apache hadoop fs path", "specialinvoke $ r8 < init > r1", "r5 = org apache mahout classifier df data dataset load $ r6 $ r8", "$ r9 = org apache mahout classifier df tool forest visualizer to string r4 r5 r2", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r72 = new org apache common cli2 builder default option builder", "specialinvoke r72 < init >", "r73 = new org apache common cli2 builder argument builder", "specialinvoke r73 < init >", "r74 = new org apache common cli2 builder group builder", "specialinvoke r74 < init >", "$ r17 = r72 with long name \\ `` data\\ ``", "$ r18 = $ r17 with short name \\ `` d\\ ``", "$ r19 = $ r18 with required 1", "$ r20 = r73 with name \\ `` data\\ ``", "$ r21 = $ r20 with minimum 1", "$ r22 = $ r21 with maximum 1", "$ r23 = $ r22 create", "$ r24 = $ r19 with argument $ r23", "$ r25 = $ r24 with description \\ `` data path\\ ``", "r4 = $ r25 create", "$ r26 = r72 with long name \\ `` dataset\\ ``", "$ r27 = $ r26 with short name \\ `` ds\\ ``", "$ r28 = $ r27 with required 1", "$ r29 = r73 with name \\ `` dataset\\ ``", "$ r30 = $ r29 with minimum 1", "$ r31 = $ r30 create", "$ r32 = $ r28 with argument $ r31", "$ r33 = $ r32 with description \\ `` dataset path\\ ``", "r5 = $ r33 create", "$ r34 = r72 with long name \\ `` output\\ ``", "$ r35 = $ r34 with short name \\ `` o\\ ``", "$ r36 = $ r35 with required 1", "$ r37 = r73 with name \\ `` output\\ ``", "$ r38 = $ r37 with minimum 1", "$ r39 = $ r38 with maximum 1", "$ r40 = $ r39 create", "$ r41 = $ r36 with argument $ r40", "$ r42 = $ r41 with description \\ `` path to generate files\\ ``", "r6 = $ r42 create", "$ r43 = r72 with long name \\ `` numpartitions\\ ``", "$ r44 = $ r43 with short name \\ `` p\\ ``", "$ r45 = $ r44 with required 1", "$ r46 = r73 with name \\ `` numparts\\ ``", "$ r47 = $ r46 with minimum 1", "$ r48 = $ r47 with minimum 1", "$ r49 = $ r48 create", "$ r50 = $ r45 with argument $ r49", "$ r51 = $ r50 with description \\ `` number of partition to create\\ ``", "r7 = $ r51 create", "$ r52 = r72 with long name \\ `` help\\ ``", "$ r53 = $ r52 with description \\ `` print out help\\ ``", "$ r54 = $ r53 with short name \\ `` h\\ ``", "r8 = $ r54 create", "$ r55 = r74 with name \\ `` options\\ ``", "r76 = org apache common cli2 option r4", "$ r56 = $ r55 with option r76", "r77 = org apache common cli2 option r6", "$ r57 = $ r56 with option r77", "r78 = org apache common cli2 option r5", "$ r58 = $ r57 with option r78", "r79 = org apache common cli2 option r7", "$ r59 = $ r58 with option r79", "r80 = org apache common cli2 option r8", "$ r60 = $ r59 with option r80", "r9 = $ r60 create", "label r75 = new org apache common cli2 commandline parser", "specialinvoke r75 < init >", "r75 set group r9", "r10 = r75 parse r0", "r81 = org apache common cli2 option r8", "$ z0 = r10 have option r81", "if $ z0 == 0 goto label3", "org apache mahout common command line util print help r9", "label return", "if $ z0 == 0 goto label3", "label r82 = org apache common cli2 option r4", "$ r62 = r10 get value r82", "r11 = $ r62 to string", "r83 = org apache common cli2 option r5", "$ r63 = r10 get value r83", "r12 = $ r63 to string", "r84 = org apache common cli2 option r7", "$ r64 = r10 get value r84", "$ r65 = $ r64 to string", "i0 = java lang integer parse int $ r65", "r85 = org apache common cli2 option r6", "$ r66 = r10 get value r85", "r13 = $ r66 to string", "org apache mahout classifier df tool u distrib run tool r11 r12 r13 i0", "label goto label6", "label return"], "adj}
{"nodes": ["r0 = @ this", "r1 = org apache mahout classifier mlp neural network r0", "$ d0 = r1 momentum weight", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache mahout classifier sequencelearning hmm hmm model r0", "$ r1 = r2 transition matrix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache mahout classifier sequencelearning hmm hmm model r0", "$ r3 = r6 hidden state name", "if $ r3 ! = null goto label1", "return -1", "if $ r3 ! = null goto label1", "label r7 = org apache mahout classifier sequencelearning hmm hmm model r0", "$ r4 = r7 hidden state name", "$ r5 = $ r4 get r1", "r2 = java lang integer $ r5", "if r2 ! = null goto label2", "$ i0 = -1", "goto label3", "label return $ i0", "if r2 ! = null goto label2", "label $ i0 = r2 int value"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["d0 = @ parameter0", "$ b0 = d0 cmpg 0 0", "if $ b0 > = 0 goto label1", "d6 = java lang math exp d0", "$ d4 = 1 0 + d6", "$ d5 = d6 $ d4", "return $ d5", "if $ b0 > = 0 goto label1", "label $ d1 = neg d0", "d7 = java lang math exp $ d1", "$ d2 = 1 0 + d7", "$ d3 = 1 0 $ d2", "return $ d3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache mahout classifier sgd csv record factory r0", "r2 = specialinvoke r5 parse csv line r1", "r6 = org apache mahout classifier sgd csv record factory r0", "$ i0 = r6 target", "$ r3 = r2 get $ i0", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "d6 = @ parameter0", "r1 = @ parameter1", "$ b0 = d6 cmpl 0 0", "if $ b0 ! = 0 goto label1", "d6 = 1 0e-10", "label d7 = 0 0", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label4", "$ r3 = r2 next", "$ r4 = java lang double $ r3", "d8 = $ r4 double value", "$ b1 = d8 cmpl 0 0", "if $ b1 ! = 0 goto label3", "d8 = 1 0e-10", "label $ d4 = d6 d8", "r5 = org apache mahout cluster fuzzykmeans fuzzy k mean clusterer r0", "$ d1 = r5 m", "$ d2 = $ d1 - 1 0", "$ d3 = 2 0 $ d2", "$ d5 = java lang math pow $ d4 $ d3", "d7 = d7 + $ d5", "goto label2", "if $ z0 == 0 goto label4", "label $ d0 = 1 0 d7", "return $ d0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "r5 = org apache mahout cluster kmeans kluster r0", "r2 = r5 compute centroid", "$ d1 = r2 get length square", "r6 = org apache mahout cluster kmeans kluster r0", "$ r3 = r6 get center", "$ d2 = r1 distance $ d1 r2 $ r3", "$ b0 = $ d2 cmpg d0", "if $ b0 > 0 goto label1", "$ z1 = 1", "goto label2", "label r7 = org apache mahout cluster kmeans kluster r0", "r7 converge = $ z1", "r8 = org apache mahout cluster kmeans kluster r0", "$ z0 = r8 converge", "return $ z0", "if $ b0 > 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org apache hadoop fs path", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append r0", "$ r4 = java io file separator", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 append \\ `` top level cluster\\ ``", "$ r7 = $ r6 to string", "specialinvoke $ r1 < init > $ r7", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r18 = org apache mahout cluster topdown postprocessor cluster output post processor r0", "specialinvoke r18 create post process directory", "r17 = new org apache mahout common iterator sequencefile sequence file dir iterable", "r19 = org apache mahout cluster topdown postprocessor cluster output post processor r0", "$ r5 = r19 cluster point", "$ r6 = org apache mahout common iterator sequencefile path type glob", "$ r7 = org apache mahout common iterator sequencefile path filter part filter", "r20 = org apache mahout cluster topdown postprocessor cluster output post processor r0", "$ r8 = r20 conf", "specialinvoke r17 < init > $ r5 $ r6 $ r7 null 0 $ r8", "r1 = r17 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r12 = r1 next", "r2 = org apache mahout common pair $ r12", "$ r13 = r2 get first", "$ r14 = $ r13 to string", "r3 = $ r14 trim", "$ r15 = r2 get second", "$ r16 = org apache mahout cluster classify weight vector writable $ r15", "r21 = org apache mahout cluster topdown postprocessor cluster output post processor r0", "specialinvoke r21 put vector in respective cluster r3 $ r16", "goto label1", "if $ z0 == 0 goto label2", "label r22 = org apache mahout cluster topdown postprocessor cluster output post processor r0", "$ r9 = r22 writer for cluster", "$ r10 = $ r9 value", "org apache mahout common i o utils close $ r10", "r23 = org apache mahout cluster topdown postprocessor cluster output post processor r0", "$ r11 = r23 writer for cluster", "$ r11 clear", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache mahout common commandline default option creator input option", "$ r2 = $ r1 create", "r4 = org apache mahout common abstract job r0", "r5 = org apache common cli2 option $ r2", "$ r3 = r4 add option r5", "r6 = org apache mahout common abstract job r0", "r6 input option = $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org apache mahout math function function plus", "r5 = org apache mahout common distance minkowski distance measure r0", "$ d0 = r5 exponent", "$ r4 = org apache mahout math function function minus abs pow $ d0", "$ d1 = r1 aggregate r2 $ r3 $ r4", "r6 = org apache mahout common distance minkowski distance measure r0", "$ d2 = r6 exponent", "$ d3 = 1 0 $ d2", "$ d4 = java lang math pow $ d1 $ d3", "return $ d4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "l0 = 0l", "r7 = new org apache mahout common iterator sequencefile sequence file dir value iterator", "specialinvoke r7 < init > r0 r1 r2 null 1 r3", "label r8 = java util iterator r7", "$ z0 = r8 have next", "if $ z0 == 0 goto label2", "r9 = java util iterator r7", "r9 next", "l0 = l0 + 1l", "goto label1", "if $ z0 == 0 goto label2", "label return l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache mahout common integer tuple r0", "$ r2 = r3 tuple", "$ z0 = $ r2 add r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = org apache mahout ep map exponential 1 0", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r4 = new org apache mahout math dense vector", "$ i0 = r0 num col", "specialinvoke r4 < init > $ i0", "$ i1 = r0 num col", "$ d0 = double $ i1", "$ d1 = java lang math sqrt $ d0", "$ d2 = 1 0 $ d1", "r5 = org apache mahout math vector r4", "r5 assign $ d2", "r6 = org apache mahout math vector r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = new org apache hadoop fs path", "r12 = org apache mahout math hadoop distribute row matrix r0", "$ r3 = r12 output tmp base path", "$ r4 = $ r3 get parent", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r6 = r10 append \\ `` product with-\\ ``", "$ l0 = java lang system nano time", "$ l1 = $ l0 & 255l", "$ r7 = $ r6 append $ l1", "$ r8 = $ r7 to string", "specialinvoke r11 < init > $ r4 $ r8", "r13 = org apache mahout math hadoop distribute row matrix r0", "$ r9 = r13 time r1 r11", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "d1 = #infinity", "r8 = null", "r10 = org apache mahout math neighborhood brute search r0", "$ r4 = r10 reference vector", "r2 = $ r4 iterator", "label $ z1 = r2 have next", "if $ z1 == 0 goto label4", "$ r6 = r2 next", "r3 = org apache mahout math vector $ r6", "r11 = org apache mahout math neighborhood brute search r0", "$ r7 = r11 distance measure", "d0 = $ r7 distance r1 r3", "$ b0 = d0 cmpg d1", "if $ b0 > = 0 goto label3", "if z0 == 0 goto label2", "$ z2 = r3 equal r1", "if $ z2 ! = 0 goto label3", "label d1 = d0", "r8 = r3", "label goto label1", "if $ z1 == 0 goto label4", "label r9 = new org apache mahout math random weight thing", "specialinvoke r9 < init > r8 d1", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org apache mahout vectorizer encoders feature vector encoder r0", "r3 add to vector r1 1 0 r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = @ parameter2", "i1 = @ parameter3", "r5 = org apache mahout vectorizer encoders feature vector encoder r0", "$ i2 = r5 hash for probe r1 i0 r2 i1", "$ r3 = java lang integer value of $ i2", "$ r4 = java util collection singleton list $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "i1 = @ parameter3", "l8 = org apache mahout math murmur hash hash64 a r1 i0", "$ i2 = int l8", "$ l3 = org apache mahout math murmur hash hash64 a r2 $ i2", "$ l4 = long i1", "l9 = $ l3 % $ l4", "$ b5 = l9 cmp 0l", "if $ b5 > = 0 goto label1", "$ l7 = long i1", "l9 = l9 + $ l7", "label $ i6 = int l9", "return $ i6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["d0 = @ parameter0", "$ d1 = java lang math floor d0", "$ l0 = java lang math round $ d1", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache mahout math abstract matrix r0", "$ i0 = r1 num row", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r2 append 91", "$ i1 = lengthof r0", "i0 = $ i1 - 1", "i2 = 0", "label if i2 > i0 goto label3", "$ z0 = r0 [ i2 ]", "$ r2 append $ z0", "if i2 > = i0 goto label2", "$ r2 append \\", "label i2 = i2 + 1", "goto label1", "label if i2 > i0 goto label3", "label $ r2 append 93", "$ r5 = $ r2 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["d0 = @ parameter0", "r1 = new org apache mahout math function function $ 54", "specialinvoke r1 < init > d0", "r2 = org apache mahout math function double function r1", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["d0 = @ parameter0", "r1 = new org apache mahout math function function $ 67", "specialinvoke r1 < init > d0", "r2 = org apache mahout math function double function r1", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["d0 = @ parameter0", "r1 = new org apache mahout math function function $ 68", "specialinvoke r1 < init > d0", "r2 = org apache mahout math function double function r1", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = org apache mahout math jet random exponential r0", "r1 lambda = d0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "$ b0 = d0 cmpg 0 0", "if $ b0 > = 0 goto label1", "r2 = new java lang illegal argument exception", "specialinvoke r2 < init >", "throw r2", "if $ b0 > = 0 goto label1", "label $ b1 = d0 cmpl 0 0", "if $ b1 ! = 0 goto label4", "r3 = org apache mahout math jet random gamma r0", "$ d23 = r3 alpha", "$ b3 = $ d23 cmpl 1 0", "if $ b3 ! = 0 goto label2", "r4 = org apache mahout math jet random gamma r0", "$ d25 = r4 rate", "return $ d25", "if $ b3 ! = 0 goto label2", "label r5 = org apache mahout math jet random gamma r0", "$ d24 = r5 alpha", "$ b4 = $ d24 cmpg 1 0", "if $ b4 > = 0 goto label3", "return #infinity", "if $ b4 > = 0 goto label3", "label return 0 0", "if $ b1 ! = 0 goto label4", "label r6 = org apache mahout math jet random gamma r0", "$ d1 = r6 alpha", "$ b2 = $ d1 cmpl 1 0", "if $ b2 ! = 0 goto label5", "r7 = org apache mahout math jet random gamma r0", "$ d20 = r7 rate", "$ d18 = neg d0", "r8 = org apache mahout math jet random gamma r0", "$ d17 = r8 rate", "$ d19 = $ d18 * $ d17", "$ d21 = java lang math exp $ d19", "$ d22 = $ d20 * $ d21", "return $ d22", "if $ b2 ! = 0 goto label5", "label r9 = org apache mahout math jet random gamma r0", "$ d5 = r9 rate", "r10 = org apache mahout math jet random gamma r0", "$ d2 = r10 alpha", "$ d6 = $ d2 - 1 0", "r11 = org apache mahout math jet random gamma r0", "$ d3 = r11 rate", "$ d4 = d0 * $ d3", "$ d7 = java lang math log $ d4", "$ d10 = $ d6 * $ d7", "r12 = org apache mahout math jet random gamma r0", "$ d8 = r12 rate", "$ d9 = d0 * $ d8", "$ d12 = $ d10 - $ d9", "r13 = org apache mahout math jet random gamma r0", "$ d11 = r13 alpha", "$ d13 = org apache mahout math jet random gamma log gamma $ d11", "$ d14 = $ d12 - $ d13", "$ d15 = java lang math exp $ d14", "$ d16 = $ d5 * $ d15", "return $ d16"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], []]}
{"nodes": ["d26 = @ parameter0", "$ b0 = d26 cmpg 0 0", "if $ b0 > 0 goto label1", "return -999 0", "if $ b0 > 0 goto label1", "label d27 = 1 0", "label $ b1 = d26 cmpg 11 0", "if $ b1 > = 0 goto label3", "d27 = d27 * d26", "d26 = d26 + 1 0", "goto label2", "if $ b1 > = 0 goto label3", "label $ d8 = d26 * d26", "d0 = 1 0 $ d8", "$ d9 = 8 417508417508417e-4 + d0", "$ d10 = $ d9 + -0 0019175269175269174", "$ d11 = d0 * $ d10", "$ d12 = -5 952380952380953e-4 + $ d11", "$ d13 = d0 * $ d12", "$ d14 = 7 936507936507937e-4 + $ d13", "$ d15 = d0 * $ d14", "$ d16 = -0 002777777777777778 + $ d15", "$ d17 = d0 * $ d16", "d28 = 0 08333333333333333 + $ d17", "$ d18 = d26 - 0 5", "$ d19 = java lang math log d26", "$ d20 = $ d18 * $ d19", "$ d21 = $ d20 - d26", "$ d23 = $ d21 + 0 9189385332046728", "$ d22 = d28 d26", "d29 = $ d23 + $ d22", "$ b2 = d27 cmpl 1 0", "if $ b2 ! = 0 goto label4", "return d29", "if $ b2 ! = 0 goto label4", "label $ d24 = java lang math log d27", "$ d25 = d29 - $ d24", "return $ d25"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = org apache mahout math jet random normal r0", "$ d2 = r1 mean", "d1 = d0 - $ d2", "r2 = org apache mahout math jet random normal r0", "$ d8 = r2 normalizer", "$ d3 = d1 * d1", "$ d6 = neg $ d3", "r3 = org apache mahout math jet random normal r0", "$ d4 = r3 variance", "$ d5 = 2 0 * $ d4", "$ d7 = $ d6 $ d5", "$ d9 = java lang math exp $ d7", "$ d10 = $ d8 * $ d9", "return $ d10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "$ b0 = d0 cmpg 40 0", "if $ b0 > = 0 goto label3", "$ b1 = d1 cmpg 40 0", "if $ b1 > = 0 goto label3", "$ d8 = d0 + d1", "d13 = org apache mahout math jet stat gamma gamma $ d8", "$ b2 = d13 cmpl 0 0", "if $ b2 ! = 0 goto label1", "return 1 0", "if $ b2 ! = 0 goto label1", "label $ b3 = d0 cmpl d1", "if $ b3 < = 0 goto label2", "$ d11 = org apache mahout math jet stat gamma gamma d0", "d14 = $ d11 d13", "$ d12 = org apache mahout math jet stat gamma gamma d1", "d15 = d14 * $ d12", "goto label4", "label return d15", "if $ b3 < = 0 goto label2", "label $ d9 = org apache mahout math jet stat gamma gamma d1", "d16 = $ d9 d13", "$ d10 = org apache mahout math jet stat gamma gamma d0", "d15 = d16 * $ d10", "if $ b1 > = 0 goto label3", "label $ d2 = org apache mahout math jet stat gamma log gamma d0", "$ d3 = org apache mahout math jet stat gamma log gamma d1", "$ d5 = $ d2 + $ d3", "$ d4 = d0 + d1", "$ d6 = org apache mahout math jet stat gamma log gamma $ d4", "$ d7 = $ d5 - $ d6", "d15 = java lang math exp $ d7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "$ b0 = d2 cmpg 0 0", "if $ b0 > = 0 goto label1", "return 0 0", "if $ b0 > = 0 goto label1", "label $ d3 = d1 * d2", "$ d4 = org apache mahout math jet stat gamma incomplete gamma d0 $ d3", "return $ d4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["d0 = @ parameter0", "$ b0 = d0 cmpg 0 0", "if $ b0 > = 0 goto label1", "$ d22 = neg d0", "$ d23 = org apache mahout math jet stat probability normal $ d22", "$ d24 = 1 0 - $ d23", "return $ d24", "if $ b0 > = 0 goto label1", "label $ d8 = 0 2316419 * d0", "$ d9 = 1 0 + $ d8", "d7 = 1 0 $ d9", "$ r0 = org apache mahout math jet stat probability unit_normal", "$ d10 = $ r0 pdf d0", "$ d19 = $ d10 * d7", "$ d11 = d7 * 1 330274429", "$ d12 = -1 821255978 + $ d11", "$ d13 = d7 * $ d12", "$ d14 = 1 781477937 + $ d13", "$ d15 = d7 * $ d14", "$ d16 = -0 356563782 + $ d15", "$ d17 = d7 * $ d16", "$ d18 = 0 31938153 + $ d17", "$ d20 = $ d19 * $ d18", "$ d21 = 1 0 - $ d20", "return $ d21"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "r1 = org apache mahout math list abstract byte list r0", "$ i2 = r1 size", "$ i3 = $ i2 - 1", "r2 = org apache mahout math list abstract byte list r0", "i1 = r2 index of from to b0 0 $ i3", "if i1 < 0 goto label1", "r3 = org apache mahout math list abstract byte list r0", "r3 remove i1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org apache mahout math list abstract list r0", "$ i0 = r1 size", "$ i1 = $ i0 - 1", "r2 = org apache mahout math list abstract list r0", "r2 quick sort from to 0 $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache mahout math list abstract list r0", "$ i0 = r1 size", "$ i1 = $ i0 - 1", "r2 = org apache mahout math list abstract list r0", "r2 sort from to 0 $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org apache mahout math list byte array list", "r4 = org apache mahout math map abstract byte byte map r0", "$ i0 = r4 size", "specialinvoke r3 < init > $ i0", "r5 = org apache mahout math map abstract byte byte map r0", "r5 pair sort by value r1 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = new org apache mahout math list byte array list", "r4 = org apache mahout math map abstract byte byte map r0", "$ i0 = r4 size", "specialinvoke r3 < init > $ i0", "r5 = org apache mahout math map abstract byte byte map r0", "r5 value r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = new java util array list", "specialinvoke r4 < init >", "r5 = new org apache mahout math map open hash map $ 3", "r6 = org apache mahout math map open hash map r0", "specialinvoke r5 < init > r6 r4", "r7 = org apache mahout math map open hash map r0", "r8 = org apache mahout math function object object procedure r5", "r7 for each pair r8", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r12 = org apache mahout math old q r decomposition r0", "$ i2 = r12 original column", "r13 = org apache mahout math old q r decomposition r0", "$ i1 = r13 original row", "i0 = java lang math min $ i2 $ i1", "r14 = org apache mahout math old q r decomposition r0", "$ r4 = r14 qr", "r15 = org apache mahout math old q r decomposition r0", "$ i3 = r15 original row", "r1 = $ r4 like $ i3 i0", "i9 = i0 - 1", "label if i9 < 0 goto label5", "r16 = org apache mahout math old q r decomposition r0", "$ r5 = r16 qr", "$ r6 = $ r5 view column i9", "r17 = org apache mahout math old q r decomposition r0", "$ i4 = r17 original row", "$ i5 = $ i4 - i9", "r2 = $ r6 view part i9 $ i5", "r1 set i9 i9 1 0", "i10 = i9", "label if i10 > = i0 goto label4", "r18 = org apache mahout math old q r decomposition r0", "$ r7 = r18 qr", "$ d1 = $ r7 get i9 i9", "$ b6 = $ d1 cmpl 0 0", "if $ b6 == 0 goto label3", "$ r8 = r1 view column i10", "r19 = org apache mahout math old q r decomposition r0", "$ i7 = r19 original row", "$ i8 = $ i7 - i9", "r3 = $ r8 view part i9 $ i8", "$ d2 = r2 dot r3", "$ d3 = neg $ d2", "r20 = org apache mahout math old q r decomposition r0", "$ r9 = r20 qr", "$ d4 = $ r9 get i9 i9", "d0 = $ d3 $ d4", "$ r10 = org apache mahout math function function plus mult d0", "r3 assign r2 $ r10", "label i10 = i10 + 1", "goto label2", "label if i10 > = i0 goto label4", "label i9 = i9 + -1", "goto label1", "label if i9 < 0 goto label5", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [], [47], []]}
{"nodes": ["r0 = @ this", "$ r2 = java util locale english", "$ r1 = newarray java lang object [ 3 ]", "r7 = org apache mahout math old q r decomposition r0", "$ i0 = r7 original column", "$ r3 = java lang integer value of $ i0", "$ r1 [ 0 ] = $ r3", "r8 = org apache mahout math old q r decomposition r0", "$ i1 = r8 original row", "$ r4 = java lang integer value of $ i1", "$ r1 [ 1 ] = $ r4", "r9 = org apache mahout math old q r decomposition r0", "$ z0 = r9 have full rank", "$ r5 = java lang boolean value of $ z0", "$ r1 [ 2 ] = $ r5", "$ r6 = java lang string format $ r2 \\ `` qr % d % d full rank= % s \\", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r3 = org apache mahout math pivot matrix r0", "$ r2 = r3 row pivot", "r4 = org apache mahout math pivot matrix r0", "$ r1 = r4 row unpivot", "org apache mahout math pivot matrix swap $ r2 $ r1 i0 i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 0 goto label1", "r10 = org apache mahout math pivot matrix r0", "$ i2 = r10 row size", "if i0 < $ i2 goto label2", "label r8 = new org apache mahout math index exception", "r11 = org apache mahout math pivot matrix r0", "$ i1 = r11 row size", "specialinvoke r8 < init > i0 $ i1", "r12 = java lang throwable r8", "throw r12", "if i0 < $ i2 goto label2", "label r9 = new org apache mahout math permute vector view", "r13 = org apache mahout math pivot matrix r0", "$ r4 = r13 base", "r14 = org apache mahout math pivot matrix r0", "$ r3 = r14 row pivot", "$ i3 = $ r3 [ i0 ]", "$ r5 = $ r4 view row $ i3", "r15 = org apache mahout math pivot matrix r0", "$ r7 = r15 column pivot", "r16 = org apache mahout math pivot matrix r0", "$ r6 = r16 column unpivot", "specialinvoke r9 < init > $ r5 $ r7 $ r6", "r17 = org apache mahout math vector r9", "return r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r2 = org apache mahout math solver eigen decomposition r0", "$ r1 = r2 e", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ r1 = org apache mahout math sort natural_byte_comparison", "org apache mahout math sort merge sort r0 i0 i1 $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com sun mail imap i m a p message r0", "r3 check expunge", "r4 = com sun mail imap i m a p message r0", "specialinvoke r4 load header", "$ r2 = specialinvoke r0 get non match header line r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com sun mail imap i m a p message r0", "$ r2 = r4 item", "if $ r2 ! = null goto label1", "r5 = com sun mail imap i m a p message r0", "r5 item = r1", "goto label2", "label return", "if $ r2 ! = null goto label1", "label r6 = com sun mail imap i m a p message r0", "$ r3 = r6 item", "$ r3 put all r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r5 = com sun mail imap protocol fetch response r0", "$ r1 = r5 extension item", "if $ r1 ! = null goto label1", "r4 = new java util hash map", "specialinvoke r4 < init >", "r6 = com sun mail imap protocol fetch response r0", "r6 extension item = r4", "label r7 = com sun mail imap protocol fetch response r0", "$ r2 = r7 extension item", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r14 = com sun mail pop3 p o p3 message r0", "$ r3 = r14 content stream", "if $ r3 == null goto label1", "r15 = com sun mail pop3 p o p3 message r0", "$ r11 = r15 content stream", "$ r12 = javax mail internet share input stream $ r11", "$ r13 = $ r12 new stream 0l -1l", "return $ r13", "if $ r3 == null goto label1", "label r16 = com sun mail pop3 p o p3 message r0", "r1 = specialinvoke r16 get raw stream 1", "r17 = com sun mail pop3 p o p3 message r0", "$ r4 = r17 folder", "r2 = $ r4 get file cache", "if r2 ! = null goto label2", "r18 = com sun mail pop3 p o p3 message r0", "$ r7 = r18 folder", "$ r8 = $ r7 get store", "$ r9 = com sun mail pop3 p o p3 store $ r8", "$ r10 = com sun mail pop3 p o p3 store $ r9", "$ z0 = $ r10 keep message content", "if $ z0 == 0 goto label3", "label $ r5 = javax mail internet share input stream r1", "$ r6 = $ r5 new stream 0l -1l", "r19 = com sun mail pop3 p o p3 message r0", "r19 content stream = $ r6", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = javax mail internet mime body part r0", "$ r3 = r4 header", "$ r3 add header r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "if z0 == 0 goto label1", "r4 = javax mail internet mime message r0", "$ r3 = r4 flag", "$ r3 add r1", "goto label2", "label return", "if z0 == 0 goto label1", "label r5 = javax mail internet mime message r0", "$ r2 = r5 flag", "$ r2 remove r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = javax mail internet mime multipart r0", "r2 parse", "$ r1 = specialinvoke r0 get body part i0", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model activation r0", "$ r1 = r2 file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache maven model activation r0", "$ z0 = r1 active by default", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model activation file r0", "$ r1 = r2 exist", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model activation file r0", "$ r1 = r2 miss", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model activation o s r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model activation property r0", "r2 name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model build r0", "r2 test output directory = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model ci management r0", "$ r1 = r2 url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model ci management r0", "r2 system = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model contributor r0", "$ r1 = r2 organization url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model dependency r0", "r2 group id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model distribution management r0", "$ r1 = r2 download url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model distribution management r0", "$ r1 = r2 repository", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model distribution management r0", "r2 relocation = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model license r0", "$ r1 = r2 comment", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model license r0", "$ r1 = r2 url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model mail list r0", "r2 unsubscribe = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model model r0", "$ r1 = r2 build", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model model r0", "r2 prerequisites = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model model r0", "r2 scm = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model notifier r0", "$ r1 = r2 address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache maven model notifier r0", "$ z0 = r1 send on warn", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model parent r0", "r2 artifact id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model parent r0", "r2 relative path = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model plugin r0", "$ r1 = r2 goal", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache maven model plugin r0", "$ z0 = r1 extension", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model plugin r0", "r2 execution = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model plugin r0", "r2 version = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model plugin configuration r0", "$ r1 = r2 plugin management", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model scm r0", "$ r1 = r2 developer connection", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven usability plugin expression r0", "$ r1 = r2 configuration", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache maven usability plugin expression r0", "$ z0 = r1 editable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven plugin registry plugin r0", "r2 last checked = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven plugin registry plugin registry r0", "r2 auto update = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven profile activation r0", "$ r1 = r2 file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven profile activation file r0", "r2 exist = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven profile activation o s r0", "r2 version = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven profile profile r0", "r2 activation = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven profile repository r0", "r2 snapshot = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven profile repository base r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven artifact repository metadata metadata r0", "r2 artifact id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven artifact repository metadata plugin r0", "r2 name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven artifact repository metadata versioning r0", "$ r1 = r2 release", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven setting activation file r0", "$ r1 = r2 miss", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven setting mirror r0", "$ r1 = r2 url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache maven setting proxy r0", "$ i0 = r1 port", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache maven setting proxy r0", "$ z0 = r1 active", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven setting proxy r0", "r2 host = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven setting repository base r0", "$ r1 = r2 url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven setting server r0", "$ r1 = r2 file permission", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven setting setting r0", "$ r1 = r2 local repository", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven setting setting r0", "r2 active profile = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = new com codahale metric ewma", "$ d0 = com codahale metric ewma m5_alpha", "$ r1 = java util concurrent time unit second", "specialinvoke $ r0 < init > $ d0 5l $ r1", "return $ r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com codahale metric ewma r0", "$ r1 = r2 uncounted", "l0 = $ r1 sum then reset", "$ d2 = double l0", "r3 = com codahale metric ewma r0", "$ d1 = r3 interval", "d0 = $ d2 $ d1", "r4 = com codahale metric ewma r0", "$ z0 = r4 initialize", "if $ z0 == 0 goto label1", "r5 = com codahale metric ewma r0", "$ d7 = r5 rate", "r6 = com codahale metric ewma r0", "$ d5 = r6 alpha", "r7 = com codahale metric ewma r0", "$ d3 = r7 rate", "$ d4 = d0 - $ d3", "$ d6 = $ d5 * $ d4", "$ d8 = $ d7 + $ d6", "r8 = com codahale metric ewma r0", "r8 rate = $ d8", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r9 = com codahale metric ewma r0", "r9 rate = d0", "r10 = com codahale metric ewma r0", "r10 initialize = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = com codahale metric snapshot r0", "$ d0 = r1 get value 0 98", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = io micrometer core instrument tag r0", "$ r1 = r4 iterator", "$ r2 = java util spliterators spliterator unknown size $ r1 277", "$ r3 = java util stream stream support stream $ r2 0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = io micrometer core instrument util string utils be empty r0", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["$ r0 = io micrometer core util internal logging internal logger factory default factory", "if $ r0 ! = null goto label1", "$ r2 = class \\ `` lio micrometer core util internal logging internal logger factory \\ ``", "$ r3 = $ r2 get name", "$ r4 = io micrometer core util internal logging internal logger factory new default factory $ r3", "io micrometer core util internal logging internal logger factory default factory = $ r4", "label $ r1 = io micrometer core util internal logging internal logger factory default factory", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = io micronaut schedule io watch file watch configuration r0", "$ z0 = r1 restart", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r3 = new java lang null pointer exception", "specialinvoke $ r3 < init >", "throw $ r3", "if r0 ! = null goto label1", "label $ r1 = io micronaut core bean introspector the cache", "$ r1 remove r0", "return"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = io micronaut core graal automatic feature utils find class r0 r1", "$ r3 = automatic feature utils $ register field for runtime reflection__4 bootstrap $", "$ r2 if present $ r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 ! = null goto label1", "$ r5 = java util stream stream empty", "return $ r5", "if r2 ! = null goto label1", "label r6 = io micronaut core io scan class path annotation scanner r0", "r3 = r6 do scan r1 r2", "$ r4 = r3 stream", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ r2 = io micronaut core reflect class utils primitive_array_map", "$ r3 = $ r2 get r0", "$ r4 = java util optional of nullable $ r3", "return $ r4", "if r0 == null goto label1", "label $ r1 = java util optional empty", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r14 = @ parameter1", "label if r14 ! = null goto label02", "$ r9 = java lang thread current thread", "r14 = $ r9 get context class loader", "label if r14 ! = null goto label03", "r14 = java lang class loader get system class loader", "label $ r2 = io micronaut core reflect class utils common_class_map", "$ r3 = $ r2 get r0", "r15 = java util optional of nullable $ r3", "$ z0 = r15 be present", "if $ z0 == 0 goto label05", "label return r15", "if $ z0 == 0 goto label05", "label $ r4 = io micronaut core reflect class utils reflection_logger", "$ z1 = $ r4 be debug enabled", "if $ z1 == 0 goto label06", "$ r8 = io micronaut core reflect class utils reflection_logger", "$ r8 debug \\ `` attempt to dynamically load class { } \\", "label r1 = java lang class for name r0 1 r14", "$ r5 = io micronaut core reflect class utils reflection_logger", "$ z2 = $ r5 be debug enabled", "if $ z2 == 0 goto label07", "$ r7 = io micronaut core reflect class utils reflection_logger", "$ r7 debug \\ `` successfully loaded class { } \\", "label $ r6 = java util optional of r1", "label return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r0 get generic interface", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label3", "r3 = r2 [ i1 ]", "$ z0 = r3 instanceof java lang reflect parameterized type", "if $ z0 == 0 goto label2", "r4 = java lang reflect parameterized type r3", "$ r7 = r4 get raw type", "if $ r7 ! = r1 goto label2", "$ r8 = io micronaut core reflect generic type utils resolve single type argument r3", "return $ r8", "if $ r7 ! = r1 goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label r10 = r0 get superclass", "if r10 == null goto label4", "if r10 == class \\ `` ljava lang object \\ `` goto label4", "$ r6 = io micronaut core reflect generic type utils resolve interface type argument r10 r1", "return $ r6", "if r10 == class \\ `` ljava lang object \\ `` goto label4", "label $ r5 = java util optional empty", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [], [18], [19], [20], [21], [22], [], [24], [25], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 be primitive", "if $ z0 == 0 goto label1", "$ r1 = io micronaut core reflect reflection utils primitives_to_wrappers", "$ r2 = $ r1 get r0", "$ r3 = java lang class $ r2", "return $ r3", "if $ z0 == 0 goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r2 = @ parameter0", "r0 = @ parameter1", "r3 = io micronaut core reflect reflection utils find declared field r2 r0", "$ z0 = r3 be present", "if $ z0 ! = 0 goto label2", "label $ r1 = r2 get superclass", "r2 = $ r1", "if $ r1 == null goto label2", "r3 = io micronaut core reflect reflection utils find field $ r1 r0", "$ z1 = r3 be present", "if $ z1 == 0 goto label1", "goto label2", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = io micronaut core util array utils be not empty r0", "if $ z0 == 0 goto label1", "r3 = new io micronaut core util array utils $ array iterator", "specialinvoke r3 < init > r0 null", "r4 = java util iterator r3", "return r4", "if $ z0 == 0 goto label1", "label $ r1 = java util collection empty iterator", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ z0 = r0 be empty", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = io micronaut core util collection utils to string \\", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = class \\ `` lorg reactivestreams publisher \\ ``", "$ z0 = $ r3 be assignable from r0", "if $ z0 == 0 goto label1", "return 1", "if $ z0 == 0 goto label1", "label $ r4 = io micronaut core async publisher publisher reactive_types", "r1 = $ r4 iterator", "label $ z1 = r1 have next", "if $ z1 == 0 goto label4", "$ r5 = r1 next", "r2 = java lang class $ r5", "$ z2 = r2 be assignable from r0", "if $ z2 == 0 goto label3", "label goto label2", "if $ z1 == 0 goto label4", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = io micronaut core util string utils be not empty r1", "if $ z0 == 0 goto label1", "if r2 == null goto label1", "r7 = io micronaut http hateoas abstract resource r0", "$ r4 = r7 embed map", "$ r5 = abstract resource $ lambda_embedded_2__4 bootstrap $", "$ r6 = $ r4 compute if absent r1 $ r5", "r3 = java util list $ r6", "r3 add r2", "label r8 = io micronaut http hateoas abstract resource r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r2 = io micronaut http ssl ssl configuration $ key store configuration r1", "specialinvoke r0 set key store r2", "label return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io micronaut http client netty connect t t l handler r0", "$ r2 = r3 channel killer", "$ r2 cancel 0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = io micronaut http client http client configuration r0", "$ r1 = r3 shutdown timeout", "$ r2 = java util optional of nullable $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io micronaut http client http client configuration r0", "$ r1 = r2 proxy type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io micronaut http client http client configuration r0", "r2 proxy selector = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = io micronaut http client service http client configuration r0", "$ r1 = r3 path", "$ r2 = java util optional of nullable $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = io netty channel epoll epoll be available", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io micronaut http server http server configuration r0", "r2 server header = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 equal \\ `` http localhost\\ ``", "if $ z0 ! = 0 goto label1", "r9 = io micronaut http server util default http host resolver r0", "$ r4 = r9 server configuration", "r2 = $ r4 get host resolution", "if r2 == null goto label1", "r3 = r2 get allow host", "$ z1 = r3 be empty", "if $ z1 ! = 0 goto label1", "$ r5 = r3 stream", "$ r6 = default http host resolver $ lambda_validate host_0__2 bootstrap $ r1", "$ r7 = $ r5 map $ r6", "$ r8 = default http host resolver $ matches__3 bootstrap $", "$ z2 = $ r7 none match $ r8", "if $ z2 == 0 goto label1", "return \\ `` http localhost\\ ``", "if $ z2 == 0 goto label1", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "r2 = io micronaut http server netty configuration netty http server configuration r0", "$ r1 = r2 access logger", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io micronaut http server netty configuration netty http server configuration r0", "$ i0 = r1 max header size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io micronaut http server netty configuration netty http server configuration r0", "$ z0 = r1 chunk supported", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io micronaut http server netty configuration netty http server configuration r0", "$ i0 = r1 compression threshold", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io micronaut http server netty configuration netty http server configuration r0", "r2 worker = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = io micronaut http server netty handler accesslog element header element request_headers_element", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r8 = io micronaut http server netty multipart netty complete file upload r0", "$ r4 = r8 file upload", "r1 = $ r4 get byte buf", "if r1 ! = null goto label1", "r7 = new java io i o exception", "specialinvoke r7 < init > \\ `` the byte buffer have already be released\\ ``", "throw r7", "if r1 ! = null goto label1", "label r2 = r1 nio buffer", "label r9 = io micronaut http server netty multipart netty complete file upload r0", "$ z0 = r9 control release", "if $ z0 == 0 goto label3", "r1 release", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = @ parameter2", "r3 = io micronaut context default bean context r2", "i1 = 0", "label r10 = io micronaut context abstract bean definition r0", "$ r5 = r10 method injection point", "$ i0 = $ r5 size", "if i1 > = $ i0 goto label3", "r11 = io micronaut context abstract bean definition r0", "$ r7 = r11 method injection point", "$ r8 = $ r7 get i1", "r4 = io micronaut inject method injection point $ r8", "$ z1 = r4 be pre destroy method", "if $ z1 == 0 goto label2", "$ z2 = r4 require reflection", "if $ z2 == 0 goto label2", "r12 = io micronaut context abstract bean definition r0", "r12 inject bean method r1 r3 i1 r9", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label $ z0 = r9 instanceof io micronaut context life cycle", "if $ z0 == 0 goto label4", "$ r6 = io micronaut context life cycle r9", "r9 = $ r6 stop", "label return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "io micronaut core util argument utils require non null \\ `` bean type\\", "r6 = io micronaut context default bean context r0", "$ r5 = specialinvoke r6 get bean internal r1 r2 r3 1 1", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = io micronaut context env property source property resolver r0", "$ r1 = r3 contain cache", "$ r1 clear", "r4 = io micronaut context env property source property resolver r0", "$ r2 = r4 resolve value cache", "$ r2 clear", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["$ r0 = io micronaut inject annotation abstract annotation metadata builder mutated_annotation_metadata", "$ r0 clear", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "if r1 == null goto label8", "r15 = io micronaut inject annotation default annotation metadata r0", "r4 = specialinvoke r15 get repeat name r1", "r5 = r2 get \\ `` value\\ ``", "$ z0 = r5 instanceof io micronaut core annotation annotation value [ ]", "if $ z0 == 0 goto label3", "$ r8 = io micronaut core annotation annotation value [ ] r5", "r9 = io micronaut core annotation annotation value [ ] $ r8", "i0 = lengthof r9", "i1 = 0", "label if i1 > = i0 goto label2", "r6 = r9 [ i1 ]", "r16 = io micronaut inject annotation default annotation metadata r0", "r16 add repeatable r1 r6", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label goto label8", "label return", "if $ z0 == 0 goto label3", "label $ z1 = r5 instanceof java lang iterable", "if $ z1 == 0 goto label7", "if r4 == null goto label7", "r11 = java lang iterable r5", "r12 = r11 iterator", "label $ z2 = r12 have next", "if $ z2 == 0 goto label6", "r13 = r12 next", "$ z3 = r13 instanceof io micronaut core annotation annotation value", "if $ z3 == 0 goto label5", "$ r7 = io micronaut core annotation annotation value r13", "r17 = io micronaut inject annotation default annotation metadata r0", "r17 add repeatable r1 $ r7", "label goto label4", "if $ z2 == 0 goto label6", "label goto label8", "if r4 == null goto label7", "label r18 = io micronaut inject annotation default annotation metadata r0", "r14 = specialinvoke r18 get all annotation", "r19 = io micronaut inject annotation default annotation metadata r0", "specialinvoke r19 add annotation r1 r2 null r14 0 r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new io micronaut inject qualifier name qualifier", "specialinvoke r2 < init > r0", "r3 = io micronaut context qualifier r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r4 = r0 get annotation metadata", "r1 = $ r4 get annotation type by stereotype class \\ `` lio micronaut core bind annotation bindable \\ ``", "$ z0 = r1 be present", "if $ z0 == 0 goto label8", "$ r11 = r1 get", "r2 = java lang class $ r11", "$ r12 = r0 get annotation metadata", "$ r13 = $ r12 string value r2", "$ r14 = r0 get name", "$ r15 = $ r13 or else $ r14", "r3 = java lang string $ r15", "if r2 ! = class \\ `` lio micronaut http annotation body \\ `` goto label1", "r32 = new io micronaut web router exception unsatisfied body route exception", "specialinvoke r32 < init > r3 r0", "r43 = java lang throwable r32", "throw r43", "if r2 ! = class \\ `` lio micronaut http annotation body \\ `` goto label1", "label if r2 ! = class \\ `` lio micronaut http annotation query value \\ `` goto label2", "r33 = new io micronaut web router exception unsatisfied query value route exception", "specialinvoke r33 < init > r3 r0", "r44 = java lang throwable r33", "throw r44", "label if r2 ! = class \\ `` lio micronaut http annotation query value \\ `` goto label2", "label if r2 ! = class \\ `` lio micronaut http annotation path variable \\ `` goto label3", "r34 = new io micronaut web router exception unsatisfied path variable route exception", "specialinvoke r34 < init > r3 r0", "r45 = java lang throwable r34", "throw r45", "label if r2 ! = class \\ `` lio micronaut http annotation path variable \\ `` goto label3", "label if r2 ! = class \\ `` lio micronaut http annotation header \\ `` goto label4", "r35 = new io micronaut web router exception unsatisfied header route exception", "specialinvoke r35 < init > r3 r0", "r46 = java lang throwable r35", "throw r46", "label if r2 ! = class \\ `` lio micronaut http annotation header \\ `` goto label4", "label if r2 ! = class \\ `` lio micronaut http annotation part \\ `` goto label5", "r36 = new io micronaut web router exception unsatisfied part route exception", "specialinvoke r36 < init > r3 r0", "r47 = java lang throwable r36", "throw r47", "label if r2 ! = class \\ `` lio micronaut http annotation part \\ `` goto label5", "label if r2 ! = class \\ `` lio micronaut http annotation request attribute \\ `` goto label6", "r37 = new io micronaut web router exception unsatisfied request attribute route exception", "specialinvoke r37 < init > r3 r0", "r48 = java lang throwable r37", "throw r48", "label if r2 ! = class \\ `` lio micronaut http annotation request attribute \\ `` goto label6", "label if r2 ! = class \\ `` lio micronaut http annotation cookie value \\ `` goto label7", "r38 = new io micronaut web router exception unsatisfied cookie value route exception", "specialinvoke r38 < init > r3 r0", "r49 = java lang throwable r38", "throw r49", "label if r2 ! = class \\ `` lio micronaut http annotation cookie value \\ `` goto label7", "label r40 = new io micronaut web router exception unsatisfied route exception", "r39 = new java lang string builder", "specialinvoke r39 < init >", "$ r18 = r39 append \\ `` require \\ ``", "$ r19 = r2 get simple name", "$ r20 = $ r18 append $ r19", "$ r21 = $ r20 append \\ `` [ \\ ``", "$ r22 = $ r21 append r3", "$ r23 = $ r22 append \\ `` ] not specified\\ ``", "$ r24 = $ r23 to string", "specialinvoke r40 < init > $ r24 r0", "r50 = java lang throwable r40", "throw r50", "if $ z0 == 0 goto label8", "label r42 = new io micronaut web router exception unsatisfied route exception", "r41 = new java lang string builder", "specialinvoke r41 < init >", "$ r7 = r41 append \\ `` required argument [ \\ ``", "$ r8 = $ r7 append r0", "$ r9 = $ r8 append \\ `` ] not specified\\ ``", "$ r10 = $ r9 to string", "specialinvoke r42 < init > $ r10 r0", "r51 = java lang throwable r42", "throw r51"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], [46], [], [48], [49], [50], [51], [52], [], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io micronaut jackson jackson configuration r0", "r2 locale = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io micronaut reactive rxjava2 rx instrumenter factory r0", "$ r1 = r2 reactive invocation instrumenter factory", "$ z0 = $ r1 be empty", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = io micronaut test annotation micronaut test value r0", "$ z0 = r1 rebuild context", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io micronaut test annotation micronaut test value r0", "$ r1 = r2 context builder", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r7 = io micronaut test extension abstract micronaut extension r0", "$ r1 = r7 application context", "$ r1 start", "r6 = new java util array list", "r8 = io micronaut test extension abstract micronaut extension r0", "$ r4 = r8 application context", "$ r5 = $ r4 get bean of type class \\ `` lio micronaut test context test execution listener \\ ``", "specialinvoke r6 < init > $ r5", "r9 = io micronaut test extension abstract micronaut extension r0", "r9 listener = r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r11 = io micronaut validation internal uri match template r0", "$ r3 = r11 pattern", "$ z0 = java util object be null $ r3", "if $ z0 == 0 goto label1", "r8 = new java lang string builder", "specialinvoke r8 < init >", "r12 = io micronaut validation internal uri match template r0", "r12 pattern = r8", "label r13 = io micronaut validation internal uri match template r0", "$ r4 = r13 variable", "if $ r4 ! = null goto label2", "r9 = new java util array list", "specialinvoke r9 < init >", "r14 = io micronaut validation internal uri match template r0", "r14 variable = r9", "label r10 = new io micronaut validation internal uri match template $ uri match template parser", "r15 = io micronaut validation internal uri match template r0", "specialinvoke r10 < init > r1 r15", "r16 = io micronaut validation internal uri template $ uri template parser r10", "return r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = io micronaut validation validator extractor default value extractor r0", "$ r1 = r2 iterable value extractor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com eclipsesource json json object r0", "$ r1 = r2 name", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = com eclipsesource json parse exception r0", "$ i0 = r1 line", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new java lang unsupported operation exception", "specialinvoke $ r2 < init >", "throw $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java util array list", "specialinvoke $ r2 < init >", "r6 = r0 get class", "label if r6 == class \\ `` ljava lang object \\ `` goto label2", "$ r4 = r6 get declare field", "$ r5 = org mockito internal util reflection field instance field in r0 $ r4", "$ r2 add all $ r5", "r6 = r6 get superclass", "goto label1", "label if r6 == class \\ `` ljava lang object \\ `` goto label2", "label $ r3 = new org mockito internal util reflection field $ instance field", "specialinvoke $ r3 < init > r0 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r3 = org apache ibatis datasource pool pooled connection r0", "$ z0 = r3 valid", "if $ z0 == 0 goto label1", "r4 = org apache ibatis datasource pool pooled connection r0", "$ r1 = r4 real connection", "if $ r1 == null goto label1", "r5 = org apache ibatis datasource pool pooled connection r0", "$ r2 = r5 data source", "r6 = org apache ibatis datasource pool pooled connection r0", "$ z1 = $ r2 ping connection r6", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache ibatis datasource pool pooled connection r0", "r1 create timestamp = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache ibatis datasource pool pooled connection r0", "r1 last used timestamp = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache ibatis datasource pool pooled connection r0", "$ l0 = r1 checkout timestamp", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 get query timeout", "$ r2 = java lang integer value of $ i0", "r5 = org apache ibatis executor base executor r0", "$ r3 = r5 transaction", "$ r4 = $ r3 get timeout", "org apache ibatis executor statement statement util apply transaction timeout r1 $ r2 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache ibatis io class loader wrapper r0", "$ r3 = r5 get class loader r2", "r6 = org apache ibatis io class loader wrapper r0", "$ r4 = r6 get resource a u r l r1 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache ibatis io resource class loader wrapper", "$ r1 default class loader = r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache ibatis jdbc abstract s q l r0", "$ r2 = specialinvoke r6 sql", "$ r2 offset = r1", "r7 = org apache ibatis jdbc abstract s q l r0", "$ r3 = specialinvoke r7 sql", "$ r4 = org apache ibatis jdbc abstract s q l $ s q l statement $ limit row strategy offset_limit", "$ r3 limit row strategy = $ r4", "r8 = org apache ibatis jdbc abstract s q l r0", "$ r5 = r8 get self", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache ibatis mapping map statement r0", "$ r1 = r2 result set", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache ibatis mapping parameter map r0", "$ r1 = r2 mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache ibatis session configuration r0", "$ r1 = r2 auto map unknown column behavior", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache ibatis session configuration r0", "r2 auto map unknown column behavior = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache ibatis session configuration r0", "$ r1 = r3 interceptor chain", "$ r2 = $ r1 get interceptor", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org mybatis spring mapper mapper factory bean r0", "r1 add to config = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = io netty channel sctp sctp message r0", "$ i0 = r1 stream identifier", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = new io netty handler codec http2 http2 frame codec builder", "specialinvoke $ r0 < init > 0", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org noggit char arr r0", "$ i1 = r2 start", "r3 = org noggit char arr r0", "$ i0 = r3 end", "if $ i1 < $ i0 goto label1", "return -1", "if $ i1 < $ i0 goto label1", "label r4 = org noggit char arr r0", "$ r1 = r4 buf", "r5 = org noggit char arr r0", "$ i2 = r5 start", "$ i3 = $ i2 + 1", "r6 = org noggit char arr r0", "r6 start = $ i3", "$ c4 = $ r1 [ $ i2 ]", "return $ c4"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = ognl evaluation r0", "r2 node = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = ognl evaluation r0", "$ r1 = r2 result", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["i0 = @ parameter0", "$ r4 = new java lang string buffer", "specialinvoke $ r4 < init >", "r1 = java lang integer to hex string i0", "$ r5 = new java lang integer", "$ i1 = r1 length", "specialinvoke $ r5 < init > $ i1", "$ r6 = ognl ognl runtime hex_padding", "$ r7 = $ r6 get $ r5", "$ r8 = java lang string $ r7", "r17 = $ r8", "if $ r8 ! = null goto label3", "$ r12 = new java lang string buffer", "specialinvoke $ r12 < init >", "i2 = r1 length", "label if i2 > = 8 goto label2", "$ r12 append 48", "i2 = i2 + 1", "goto label1", "label if i2 > = 8 goto label2", "label $ r13 = new java lang string", "specialinvoke $ r13 < init > $ r12", "r17 = $ r13", "$ r14 = ognl ognl runtime hex_padding", "$ r14 put $ r5 $ r13", "label $ r4 append r17", "$ r4 append r1", "$ r11 = new java lang string", "specialinvoke $ r11 < init > $ r4", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z2 = 1", "if r0 == null goto label2", "$ z0 = r1 be primitive", "if $ z0 == 0 goto label1", "$ r2 = ognl ognl runtime get arg class r0", "if $ r2 == r1 goto label2", "z2 = 0", "goto label2", "label return z2", "if $ z0 == 0 goto label1", "label $ z1 = r1 be instance r0", "if $ z1 ! = 0 goto label2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "z0 = 0", "i6 = 0", "i7 = 0", "label r24 = ognl simple node r0", "$ r2 = r24 _children", "$ i0 = lengthof $ r2", "if i7 > = $ i0 goto label04", "r25 = ognl simple node r0", "$ r15 = r25 _children", "$ r16 = $ r15 [ i7 ]", "$ r17 = $ r16 get class", "$ r18 = r0 get class", "if $ r17 ! = $ r18 goto label02", "z0 = 1", "r26 = ognl simple node r0", "$ r19 = r26 _children", "$ r20 = $ r19 [ i7 ]", "$ i5 = $ r20 jjt get num child", "i6 = i6 + $ i5", "goto label03", "label i7 = i7 + 1", "goto label01", "if $ r17 ! = $ r18 goto label02", "label i6 = i6 + 1", "if i7 > = $ i0 goto label04", "label if z0 == 0 goto label12", "r21 = newarray ognl node [ i6 ]", "i8 = 0", "i9 = 0", "label r27 = ognl simple node r0", "$ r3 = r27 _children", "$ i1 = lengthof $ r3", "if i9 > = $ i1 goto label10", "r28 = ognl simple node r0", "$ r11 = r28 _children", "r1 = $ r11 [ i9 ]", "$ r12 = r1 get class", "$ r13 = r0 get class", "if $ r12 ! = $ r13 goto label08", "i10 = 0", "label $ i3 = r1 jjt get num child", "if i10 > = $ i3 goto label07", "$ i4 = i8", "i8 = i8 + 1", "$ r14 = r1 jjt get child i10", "r21 [ $ i4 ] = $ r14", "i10 = i10 + 1", "goto label06", "if i10 > = $ i3 goto label07", "label goto label09", "label i9 = i9 + 1", "goto label05", "if $ r12 ! = $ r13 goto label08", "label $ i2 = i8", "if i9 > = $ i1 goto label10", "label if i8 == i6 goto label11", "r23 = new java lang error", "r22 = new java lang string builder", "specialinvoke r22 < init >", "$ r6 = r22 append \\ `` assertion error \\ ``", "$ r7 = $ r6 append i8", "$ r8 = $ r7 append \\ `` ! = \\ ``", "$ r9 = $ r8 append i6", "$ r10 = $ r9 to string", "specialinvoke r23 < init > $ r10", "throw r23", "label if i8 == i6 goto label11", "label r29 = ognl simple node r0", "r29 _children = r21", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [], [50], [51], [52], [], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [], [68], [69], [70], []]}
{"nodes": ["r0 = @ parameter0", "r2 = r0 iterator", "goto label2", "label $ z0 = r2 have next", "if $ z0 ! = 0 goto label1", "label r1 = r2 next", "if r1 ! = null goto label2", "return 1", "if $ z0 ! = 0 goto label1", "return 0"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r1 = org eclipse jgit lib null progress monitor instance", "label r2 = org eclipse jgit api cherry pick command r0", "r3 = org eclipse jgit lib progress monitor r1", "r2 monitor = r3", "r4 = org eclipse jgit api cherry pick command r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit api cherry pick result r0", "$ r1 = r2 new head", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit api clone command r0", "r2 uri = r1", "r3 = org eclipse jgit api clone command r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit api diff command r0", "r2 new tree = r1", "r3 = org eclipse jgit api diff command r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit api error abort by hook exception r0", "$ r1 = r2 hook name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jgit api fetch command r0", "r1 check callable", "r2 = org eclipse jgit api fetch command r0", "r2 dry run = z0", "r3 = org eclipse jgit api fetch command r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = new org eclipse jgit api delete branch command", "r4 = org eclipse jgit api git r0", "$ r2 = r4 repo", "specialinvoke r3 < init > $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = new org eclipse jgit api archive command", "r4 = org eclipse jgit api git r0", "$ r2 = r4 repo", "specialinvoke r3 < init > $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = new org eclipse jgit api stash create command", "r4 = org eclipse jgit api git r0", "$ r2 = r4 repo", "specialinvoke r3 < init > $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jgit api log command r0", "r1 check callable", "r2 = org eclipse jgit api log command r0", "r2 max count = i0", "r3 = org eclipse jgit api log command r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org eclipse jgit api merge command r0", "r2 check callable", "$ r1 = java lang boolean value of z0", "r3 = org eclipse jgit api merge command r0", "r3 squash = $ r1", "r4 = org eclipse jgit api merge command r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit api merge result r0", "$ r1 = r2 checkout conflict", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit api pull result r0", "$ r1 = r2 fetch result", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit api pull result r0", "$ r1 = r2 fetch from", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit api push command r0", "$ i0 = r1 timeout", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jgit api status r0", "$ r1 = r4 diff", "$ r2 = $ r1 get added", "$ r3 = java util collection unmodifiable set $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jgit api status r0", "$ r1 = r4 diff", "$ r2 = $ r1 get change", "$ r3 = java util collection unmodifiable set $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jgit api status r0", "$ r1 = r4 diff", "$ r2 = $ r1 get untracked", "$ r3 = java util collection unmodifiable set $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jgit api status r0", "$ r1 = r4 diff", "$ r2 = $ r1 get untracked folder", "$ r3 = java util collection unmodifiable set $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit api submodule add command r0", "r2 uri = r1", "r3 = org eclipse jgit api submodule add command r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit api submodule deinit result r0", "$ r1 = r2 status", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse jgit api submodule sync command r0", "$ r2 = r3 path", "$ r2 add r1", "r4 = org eclipse jgit api submodule sync command r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jgit api tag command r0", "r1 annotate = z0", "r2 = org eclipse jgit api tag command r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit attribute attribute r0", "$ r1 = r2 map", "$ z0 = $ r1 be empty", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse jgit attribute attribute r0", "$ r2 = r5 map", "$ r3 = r1 get key", "$ r2 put $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org eclipse jgit attribute attribute r0", "$ r2 = r4 get state r1", "$ r3 = org eclipse jgit attribute attribute $ state unspecified", "if $ r2 ! = $ r3 goto label1", "return 1", "if $ r2 ! = $ r3 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org eclipse jgit attribute attribute r0", "$ r2 = r4 get state r1", "$ r3 = org eclipse jgit attribute attribute $ state custom", "if $ r2 ! = $ r3 goto label1", "return 1", "if $ r2 ! = $ r3 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit attribute attribute rule r0", "$ z0 = r1 dir only", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label $ i0 = r1 length", "if $ i0 ! = 0 goto label2", "label r3 = org eclipse jgit attribute attribute rule r0", "$ r2 = r3 matcher", "z1 = $ r2 match r1 z0 1", "return z1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit blame blame generator r0", "$ r1 = r3 out candidate", "$ r2 = $ r1 get author", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org eclipse jgit blame blame result r0", "$ r1 = r2 source line", "$ i1 = $ r1 [ i0 ]", "$ i2 = $ i1 - 1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit diff diff config r0", "$ z0 = r1 no prefix", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit diff diff formatter r0", "$ r1 = r2 old prefix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit diff diff formatter r0", "$ r1 = r2 new prefix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "r6 = org eclipse jgit diff diff formatter r0", "$ r1 = r6 rename detector", "if $ r1 ! = null goto label1", "r7 = org eclipse jgit diff diff formatter r0", "specialinvoke r7 assert have reader", "r5 = new org eclipse jgit diff rename detector", "r8 = org eclipse jgit diff diff formatter r0", "$ r4 = r8 reader", "r9 = org eclipse jgit diff diff formatter r0", "$ r3 = r9 diff cfg", "specialinvoke r5 < init > $ r4 $ r3", "r10 = org eclipse jgit diff diff formatter r0", "r10 rename detector = r5", "goto label2", "label return", "if $ r1 ! = null goto label1", "label if z0 ! = 0 goto label2", "r11 = org eclipse jgit diff diff formatter r0", "r11 rename detector = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r3 = r1", "goto label2", "label r4 = org eclipse jgit diff diff formatter r0", "r4 path filter = $ r3", "return", "if r1 == null goto label1", "label $ r3 = org eclipse jgit treewalk filter tree filter all"], "adj": [[1], [2], [3], [4], [], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = org eclipse jgit diff diff formatter r0", "r2 write line 32 r1 i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit diff edit r0", "$ i0 = r1 end a", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = new org eclipse jgit dircache dir cache editor", "r3 = org eclipse jgit dircache dir cache r0", "$ i0 = r3 entry cnt", "$ i1 = $ i0 + 16", "r4 = org eclipse jgit dircache dir cache r0", "specialinvoke r2 < init > r4 $ i1", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit dircache base dir cache editor r0", "r3 finish", "r4 = org eclipse jgit dircache base dir cache editor r0", "$ r1 = r4 cache", "$ r1 write", "r5 = org eclipse jgit dircache base dir cache editor r0", "$ r2 = r5 cache", "$ z0 = $ r2 commit", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label2", "r7 = org eclipse jgit dircache dir cache r0", "$ r1 = r7 tree", "if $ r1 ! = null goto label1", "r6 = new org eclipse jgit dircache dir cache tree", "specialinvoke r6 < init >", "r8 = org eclipse jgit dircache dir cache r0", "r8 tree = r6", "label r9 = org eclipse jgit dircache dir cache r0", "$ r3 = r9 tree", "r10 = org eclipse jgit dircache dir cache r0", "$ r2 = r10 sort entry", "r11 = org eclipse jgit dircache dir cache r0", "$ i0 = r11 entry cnt", "$ r3 validate $ r2 $ i0 0 0", "label r12 = org eclipse jgit dircache dir cache r0", "$ r5 = r12 tree", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "i2 = 0", "goto label3", "label r4 = org eclipse jgit dircache dir cache r0", "$ i0 = r4 entry cnt", "if i2 < $ i0 goto label1", "label r3 = org eclipse jgit dircache dir cache r0", "$ r1 = r3 sort entry", "$ r2 = $ r1 [ i2 ]", "$ i1 = $ r2 get stage", "if $ i1 < = 0 goto label2", "return 1", "if $ i1 < = 0 goto label2", "label i2 = i2 + 1", "if i2 < $ i0 goto label1", "return 0"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit gitrepo manifest parser r0", "$ r1 = r2 project", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit gitrepo repo project r0", "$ r1 = r2 path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = org eclipse jgit util lf factory get instance", "$ z0 = $ r3 be available", "if $ z0 == 0 goto label3", "$ r5 = org eclipse jgit util lf factory get instance", "r2 = $ r5 get pre push hook r0 r1", "if r2 == null goto label3", "$ z1 = r2 be native hook present", "if $ z1 == 0 goto label2", "r10 = r1", "if r1 ! = null goto label1", "r10 = java lang system out", "label $ r6 = org eclipse jgit internal j git text get", "$ r8 = $ r6 lf hook conflict", "$ r7 = newarray java lang object [ 1 ]", "$ r7 [ 0 ] = r0", "$ r9 = java text message format format $ r8 $ r7", "r10 println $ r9", "label return r2", "if r2 == null goto label3", "label $ r4 = new org eclipse jgit hook pre push hook", "specialinvoke $ r4 < init > r0 r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit internal fsck fsck error r0", "$ r1 = r2 miss object", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r48 = new org eclipse jgit lib object id owner map", "specialinvoke r48 < init >", "i8 = 0", "goto label6", "label r64 = org eclipse jgit internal fsck fsck pack parser r0", "$ i9 = r64 get object count", "if i8 < $ i9 goto label1", "label r55 = org eclipse jgit internal fsck fsck pack parser r0", "r45 = r55 get object i8", "r49 = new org eclipse jgit internal fsck fsck pack parser $ obj from pack", "r56 = org eclipse jgit lib any object id r45", "specialinvoke r49 < init > r56", "r57 = org eclipse jgit lib object id owner map $ entry r49", "r48 add r57", "r58 = org eclipse jgit lib any object id r45", "l0 = r1 find offset r58", "$ b1 = l0 cmp -1l", "if $ b1 ! = 0 goto label2", "r50 = new org eclipse jgit error corrupt pack index exception", "$ r21 = org eclipse jgit internal j git text get", "$ r23 = $ r21 miss object", "$ r22 = newarray java lang object [ 2 ]", "$ i7 = r45 get type", "$ r24 = java lang integer value of $ i7", "$ r22 [ 0 ] = $ r24", "$ r25 = r45 get name", "$ r22 [ 1 ] = $ r25", "$ r26 = java text message format format $ r23 $ r22", "$ r27 = org eclipse jgit error corrupt pack index exception $ error type missing_obj", "specialinvoke r50 < init > $ r26 $ r27", "r59 = java lang throwable r50", "throw r59", "if $ b1 ! = 0 goto label2", "label $ l2 = r45 get offset", "$ b3 = l0 cmp $ l2", "if $ b3 == 0 goto label3", "r51 = new org eclipse jgit error corrupt pack index exception", "$ r14 = org eclipse jgit internal j git text get", "$ r16 = $ r14 mismatch offset", "$ r15 = newarray java lang object [ 1 ]", "$ r17 = r45 get name", "$ r15 [ 0 ] = $ r17", "$ r18 = java text message format format $ r16 $ r15", "$ r19 = org eclipse jgit error corrupt pack index exception $ error type mismatch_offset", "specialinvoke r51 < init > $ r18 $ r19", "r60 = java lang throwable r51", "throw r60", "if $ b3 == 0 goto label3", "label $ z0 = r1 have c r c32 support", "if $ z0 == 0 goto label5", "r61 = org eclipse jgit lib any object id r45", "$ l4 = r1 find c r c32 r61", "$ i5 = int $ l4", "$ i6 = r45 get c r c", "if $ i5 == $ i6 goto label5", "r52 = new org eclipse jgit error corrupt pack index exception", "$ r7 = org eclipse jgit internal j git text get", "$ r9 = $ r7 mismatch c r c", "$ r8 = newarray java lang object [ 1 ]", "$ r10 = r45 get name", "$ r8 [ 0 ] = $ r10", "$ r11 = java text message format format $ r9 $ r8", "$ r12 = org eclipse jgit error corrupt pack index exception $ error type mismatch_crc", "specialinvoke r52 < init > $ r11 $ r12", "r62 = java lang throwable r52", "throw r62", "if $ i5 == $ i6 goto label5", "label i8 = i8 + 1", "if i8 < $ i9 goto label1", "r46 = r1 iterator", "goto label8", "label $ z1 = r46 have next", "if $ z1 ! = 0 goto label7", "label $ r28 = r46 next", "r47 = org eclipse jgit internal storage file pack index $ mutable entry $ r28", "$ r29 = r47 to object id", "r65 = org eclipse jgit lib any object id $ r29", "$ z2 = r48 contain r65", "if $ z2 ! = 0 goto label8", "r54 = new org eclipse jgit error corrupt pack index exception", "$ r31 = org eclipse jgit internal j git text get", "$ r33 = $ r31 unknown object in index", "$ r32 = newarray java lang object [ 1 ]", "$ r34 = r47 name", "$ r32 [ 0 ] = $ r34", "$ r35 = java text message format format $ r33 $ r32", "$ r36 = org eclipse jgit error corrupt pack index exception $ error type unknown_obj", "specialinvoke r54 < init > $ r35 $ r36", "r66 = java lang throwable r54", "throw r66", "if $ z1 ! = 0 goto label7", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [], [69], [70], [71], [72], [], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [], [93], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit internal ketch ketch replica r0", "$ r1 = r3 get leader", "$ r2 = $ r1 get system", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit internal ketch ketch replica r0", "$ r1 = r2 replica name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org eclipse jgit internal ketch ketch system $ default executor holder i", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit internal ketch proposal r0", "$ r1 = r2 message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r2 = @ parameter2", "r11 = org eclipse jgit internal ketch proposal r0", "$ r4 = r11 state", "entermonitor $ r4", "label r12 = org eclipse jgit internal ketch proposal r0", "$ r5 = r12 state", "$ r6 = $ r5 get", "if $ r6 == r1 goto label3", "exitmonitor $ r4", "label return 1", "if $ r6 == r1 goto label3", "label r13 = org eclipse jgit internal ketch proposal r0", "$ r7 = r13 state", "$ l1 = r2 to millis l0", "$ r7 wait $ l1", "r14 = org eclipse jgit internal ketch proposal r0", "$ r8 = r14 state", "$ r9 = $ r8 get", "if $ r9 == r1 goto label4", "$ z0 = 1", "goto label5", "label exitmonitor $ r4", "label return $ z0", "if $ r9 == r1 goto label4", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit internal ketch replica fetch request r0", "$ r1 = r2 want ref", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit internal ketch replica push request r0", "$ r1 = r2 exception", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = org eclipse jgit internal storage dfs dfs block cache r0", "$ r4 = r10 stat hit", "$ r5 = $ r4 get", "r1 = java util concurrent atomic atomic long [ ] $ r5", "r11 = org eclipse jgit internal storage dfs dfs block cache r0", "$ r6 = r11 stat miss", "$ r7 = $ r6 get", "r2 = java util concurrent atomic atomic long [ ] $ r7", "$ i1 = lengthof r1", "$ i0 = lengthof r2", "$ i2 = java lang math max $ i1 $ i0", "r3 = newarray long [ $ i2 ]", "i11 = 0", "goto label2", "label $ i3 = lengthof r1", "if i11 < $ i3 goto label1", "label $ l4 = r3 [ i11 ]", "$ r8 = r1 [ i11 ]", "$ l5 = $ r8 get", "$ l6 = $ l4 + $ l5", "r3 [ i11 ] = $ l6", "i11 = i11 + 1", "if i11 < $ i3 goto label1", "i12 = 0", "goto label4", "label $ i7 = lengthof r2", "if i12 < $ i7 goto label3", "label $ l8 = r3 [ i12 ]", "$ r9 = r2 [ i12 ]", "$ l9 = $ r9 get", "$ l10 = $ l8 + $ l9", "r3 [ i12 ] = $ l10", "i12 = i12 + 1", "if i12 < $ i7 goto label3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit internal storage dfs dfs garbage collector r0", "r2 pack config = r1", "r3 = org eclipse jgit internal storage dfs dfs garbage collector r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit internal storage dfs dfs garbage collector r0", "r2 reftable config = r1", "r3 = org eclipse jgit internal storage dfs dfs garbage collector r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit internal storage dfs dfs garbage collector r0", "$ r1 = specialinvoke r2 to prune", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org eclipse jgit internal storage dfs dfs obj database r0", "r6 commit pack impl r1 r2", "r7 = org eclipse jgit internal storage dfs dfs obj database r0", "$ r3 = r7 get repository", "r5 = new org eclipse jgit internal storage dfs dfs pack change event", "specialinvoke r5 < init >", "r8 = org eclipse jgit event repository event r5", "$ r3 fire event r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit internal storage dfs dfs obj database r0", "$ r2 = r3 pack list", "$ r1 = org eclipse jgit internal storage dfs dfs obj database no_packs", "$ r2 set $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit internal storage dfs dfs reader io stats r0", "$ r1 = r2 stats", "$ l0 = $ r1 block cache hit", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit internal storage dfs dfs repository builder r0", "$ r1 = r2 reader option", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit internal storage dfs reftable stack r0", "$ r1 = r3 table", "$ r2 = java util collection unmodifiable list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org eclipse jgit internal storage file gc r0", "r1 expire age millis = l0", "r2 = org eclipse jgit internal storage file gc r0", "r2 expire = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit internal storage file gc r0", "r2 expire = r1", "r3 = org eclipse jgit internal storage file gc r0", "r3 expire age millis = -1l", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit internal storage file object directory r0", "$ r1 = r2 pack directory", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "i1 = @ parameter2", "i2 = @ parameter3", "r3 = org eclipse jgit internal storage file object directory inserter r0", "$ r2 = specialinvoke r3 insert i0 r1 i1 i2 0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "r3 = r1 get old object id", "r4 = r1 get new object id", "r5 = r1 get ref", "r18 = r1 get ref log ident", "if r18 ! = null goto label1", "r20 = new org eclipse jgit lib person ident", "r22 = org eclipse jgit internal storage file reflog writer r0", "$ r16 = r22 refdb", "$ r17 = $ r16 get repository", "specialinvoke r20 < init > $ r17", "r19 = r20", "goto label2", "label r23 = org eclipse jgit internal storage file reflog writer r0", "r6 = specialinvoke r23 encode r3 r4 r19 r2", "if z0 == 0 goto label3", "$ z1 = r5 be symbolic", "if $ z1 == 0 goto label3", "$ r10 = r5 get name", "r24 = org eclipse jgit internal storage file reflog writer r0", "specialinvoke r24 log $ r10 r6", "$ r12 = r5 get leaf", "$ r13 = $ r12 get name", "r25 = org eclipse jgit internal storage file reflog writer r0", "specialinvoke r25 log $ r13 r6", "goto label4", "label r27 = org eclipse jgit internal storage file reflog writer r0", "return r27", "if $ z1 == 0 goto label3", "label $ r8 = r5 get name", "r26 = org eclipse jgit internal storage file reflog writer r0", "specialinvoke r26 log $ r8 r6", "if r18 ! = null goto label1", "label r21 = new org eclipse jgit lib person ident", "specialinvoke r21 < init > r18", "r19 = r21"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [], [32], [33], [34], [35], [36], [37], [38], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org eclipse jgit internal storage pack binary delta apply r0 r1 null", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org eclipse jgit internal storage pack pack ext value", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit internal storage pack pack output stream r0", "$ r1 = r2 copy buffer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit internal storage pack pack writer r0", "r3 = org eclipse jgit lib any object id r1", "$ z0 = specialinvoke r2 exclude r3", "if $ z0 ! = 0 goto label1", "r4 = org eclipse jgit internal storage pack pack writer r0", "specialinvoke r4 add object r1 0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = null", "label r9 = org eclipse jgit internal storage reftable reftable r0", "r2 = r9 seek ref r1", "label $ z0 = r2 next", "if $ z0 == 0 goto label03", "$ r3 = r2 get ref", "$ r7 = $ r3", "goto label04", "label if r2 == null goto label05", "r2 close", "label return $ r7", "if $ z0 == 0 goto label03", "label $ r7 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ i1 = java lang math max 0 i0", "r1 = org eclipse jgit internal storage reftable reftable config r0", "r1 max index level = $ i1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit internal storage reftable reftable config r0", "$ z0 = r1 index object", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = org eclipse jgit internal storage reftree ref tree r0", "$ r4 = r12 pending blob", "if $ r4 == null goto label3", "r13 = org eclipse jgit internal storage reftree ref tree r0", "$ r7 = r13 pending blob", "$ r8 = $ r7 value", "r3 = $ r8 iterator", "goto label2", "label $ z0 = r3 have next", "if $ z0 ! = 0 goto label1", "label $ r9 = r3 next", "r2 = java lang string $ r9", "$ r10 = org eclipse jgit lib constant encode r2", "r1 insert 3 $ r10", "if $ z0 ! = 0 goto label1", "r14 = org eclipse jgit internal storage reftree ref tree r0", "r14 pending blob = null", "label r15 = org eclipse jgit internal storage reftree ref tree r0", "$ r5 = r15 content", "$ r6 = $ r5 write tree r1", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org eclipse jgit lib abbreviate object id", "$ i4 = r0 w1", "$ i3 = r0 w2", "$ i2 = r0 w3", "$ i1 = r0 w4", "$ i0 = r0 w5", "specialinvoke $ r1 < init > 40 $ i4 $ i3 $ i2 $ i1 $ i0", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label2", "r7 = org eclipse jgit lib base repository builder r0", "$ r2 = r7 alternate object directory", "if $ r2 ! = null goto label1", "r6 = new java util link list", "specialinvoke r6 < init >", "r8 = org eclipse jgit lib base repository builder r0", "r8 alternate object directory = r6", "label r9 = org eclipse jgit lib base repository builder r0", "$ r3 = r9 alternate object directory", "$ r3 add r1", "label r10 = org eclipse jgit lib base repository builder r0", "$ r5 = r10 self", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit lib branch config r0", "$ r1 = r3 get rebase mode", "$ r2 = org eclipse jgit lib branch config $ branch rebase mode none", "if $ r1 == $ r2 goto label1", "return 1", "if $ r1 == $ r2 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit lib commit builder r0", "$ r1 = r2 author", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit lib index diff r0", "r2 filter = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit lib index diff r0", "$ r1 = r2 change", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit lib index diff r0", "$ r1 = r2 remove", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org eclipse jgit lib index diff r0", "$ r1 = r6 index diff filter", "if $ r1 ! = null goto label1", "$ r4 = java util collection empty set", "goto label2", "label return $ r4", "if $ r1 ! = null goto label1", "label r5 = new java util hash set", "$ r4 = r5", "r7 = org eclipse jgit lib index diff r0", "$ r2 = r7 index diff filter", "$ r3 = $ r2 get untracked folder", "specialinvoke r5 < init > $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["$ r0 = org eclipse jgit lib object id zeroid", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "i1 = @ parameter3", "$ b3 = r0 [ i0 ]", "$ b2 = r1 [ i1 ]", "if $ b3 ! = $ b2 goto label1", "$ i4 = i0 + 1", "$ b7 = r0 [ $ i4 ]", "$ i5 = i1 + 1", "$ b6 = r1 [ $ i5 ]", "if $ b7 ! = $ b6 goto label1", "$ i8 = i0 + 2", "$ b11 = r0 [ $ i8 ]", "$ i9 = i1 + 2", "$ b10 = r1 [ $ i9 ]", "if $ b11 ! = $ b10 goto label1", "$ i12 = i0 + 3", "$ b15 = r0 [ $ i12 ]", "$ i13 = i1 + 3", "$ b14 = r1 [ $ i13 ]", "if $ b15 ! = $ b14 goto label1", "$ i16 = i0 + 4", "$ b19 = r0 [ $ i16 ]", "$ i17 = i1 + 4", "$ b18 = r1 [ $ i17 ]", "if $ b19 ! = $ b18 goto label1", "$ i20 = i0 + 5", "$ b23 = r0 [ $ i20 ]", "$ i21 = i1 + 5", "$ b22 = r1 [ $ i21 ]", "if $ b23 ! = $ b22 goto label1", "$ i24 = i0 + 6", "$ b27 = r0 [ $ i24 ]", "$ i25 = i1 + 6", "$ b26 = r1 [ $ i25 ]", "if $ b27 ! = $ b26 goto label1", "$ i28 = i0 + 7", "$ b31 = r0 [ $ i28 ]", "$ i29 = i1 + 7", "$ b30 = r1 [ $ i29 ]", "if $ b31 ! = $ b30 goto label1", "$ i32 = i0 + 8", "$ b35 = r0 [ $ i32 ]", "$ i33 = i1 + 8", "$ b34 = r1 [ $ i33 ]", "if $ b35 ! = $ b34 goto label1", "$ i36 = i0 + 9", "$ b39 = r0 [ $ i36 ]", "$ i37 = i1 + 9", "$ b38 = r1 [ $ i37 ]", "if $ b39 ! = $ b38 goto label1", "$ i40 = i0 + 10", "$ b43 = r0 [ $ i40 ]", "$ i41 = i1 + 10", "$ b42 = r1 [ $ i41 ]", "if $ b43 ! = $ b42 goto label1", "$ i44 = i0 + 11", "$ b47 = r0 [ $ i44 ]", "$ i45 = i1 + 11", "$ b46 = r1 [ $ i45 ]", "if $ b47 ! = $ b46 goto label1", "$ i48 = i0 + 12", "$ b51 = r0 [ $ i48 ]", "$ i49 = i1 + 12", "$ b50 = r1 [ $ i49 ]", "if $ b51 ! = $ b50 goto label1", "$ i52 = i0 + 13", "$ b55 = r0 [ $ i52 ]", "$ i53 = i1 + 13", "$ b54 = r1 [ $ i53 ]", "if $ b55 ! = $ b54 goto label1", "$ i56 = i0 + 14", "$ b59 = r0 [ $ i56 ]", "$ i57 = i1 + 14", "$ b58 = r1 [ $ i57 ]", "if $ b59 ! = $ b58 goto label1", "$ i60 = i0 + 15", "$ b63 = r0 [ $ i60 ]", "$ i61 = i1 + 15", "$ b62 = r1 [ $ i61 ]", "if $ b63 ! = $ b62 goto label1", "$ i64 = i0 + 16", "$ b67 = r0 [ $ i64 ]", "$ i65 = i1 + 16", "$ b66 = r1 [ $ i65 ]", "if $ b67 ! = $ b66 goto label1", "$ i68 = i0 + 17", "$ b71 = r0 [ $ i68 ]", "$ i69 = i1 + 17", "$ b70 = r1 [ $ i69 ]", "if $ b71 ! = $ b70 goto label1", "$ i72 = i0 + 18", "$ b75 = r0 [ $ i72 ]", "$ i73 = i1 + 18", "$ b74 = r1 [ $ i73 ]", "if $ b75 ! = $ b74 goto label1", "$ i76 = i0 + 19", "$ b79 = r0 [ $ i76 ]", "$ i77 = i1 + 19", "$ b78 = r1 [ $ i77 ]", "if $ b79 ! = $ b78 goto label1", "return 1", "if $ b79 ! = $ b78 goto label1", "label return 0"], "adj}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit lib object id owner map r0", "$ i0 = r1 size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 build", "r4 = org eclipse jgit lib object inserter r0", "$ r3 = r4 insert 1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "$ i1 = lengthof r1", "r3 = org eclipse jgit lib object inserter r0", "$ r2 = r3 insert i0 r1 0 $ i1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = lengthof r1", "i1 = 0", "goto label3", "label if i1 < i0 goto label1", "label r2 = r1 [ i1 ]", "r5 = org eclipse jgit lib ref database r0", "r4 = r5 exact ref r2", "if r4 == null goto label2", "return r4", "if r4 == null goto label2", "label i1 = i1 + 1", "label if i1 < i0 goto label1", "return null"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit lib ref rename r0", "$ r1 = r3 destination", "$ r2 = $ r1 get ref log message", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit lib ref update r0", "$ r1 = r2 push cert", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org eclipse jgit lib thread safe progress monitor r0", "$ r1 = r2 worker", "$ r1 add and get i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit merge merge config r0", "$ z0 = r1 squash", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit merge resolve merger r0", "r2 commit name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit merge resolve merger r0", "$ r1 = r2 modify file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit note note r0", "$ r1 = r2 data", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse jgit note note map r0", "$ r2 = r3 get r1", "if $ r2 == null goto label1", "return 1", "if $ r2 == null goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit patch binary hunk r0", "$ i0 = r1 length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit patch file header r0", "$ r1 = r2 patch type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit patch patch r0", "$ r1 = r2 error", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i1 = @ parameter1", "i0 = @ parameter2", "goto label2", "label if i1 < i0 goto label1", "label r2 = org eclipse jgit patch patch r0", "i1 = specialinvoke r2 parse file r1 i1 i0", "label if i1 < i0 goto label1", "return"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit revplot plot commit r0", "$ r1 = r2 child", "$ i0 = lengthof $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r1 parent", "if r3 ! = null goto label1", "return", "if r3 ! = null goto label1", "label i0 = lengthof r3", "i1 = 0", "goto label3", "label if i1 < i0 goto label2", "label r4 = r3 [ i1 ]", "r6 = org eclipse jgit revwalk abstract rev queue r0", "r6 add r4 r2", "i1 = i1 + 1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 length", "if $ i0 ! = 0 goto label1", "r6 = new java lang illegal argument exception", "$ r4 = org eclipse jgit internal j git text get", "$ r5 = $ r4 can not match on empty string", "specialinvoke r6 < init > $ r5", "throw r6", "if $ i0 ! = 0 goto label1", "label $ z0 = org eclipse jgit revwalk filter sub string rev filter safe r0", "if $ z0 == 0 goto label2", "r7 = new org eclipse jgit revwalk filter committer rev filter $ sub string search", "specialinvoke r7 < init > r0", "r9 = org eclipse jgit revwalk filter rev filter r7", "return r9", "if $ z0 == 0 goto label2", "label r8 = new org eclipse jgit revwalk filter committer rev filter $ pattern search", "specialinvoke r8 < init > r0", "r10 = org eclipse jgit revwalk filter rev filter r8", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "$ l0 = r0 get time", "$ r1 = org eclipse jgit revwalk filter commit time rev filter before $ l0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "if i0 > = 0 goto label1", "r4 = new java lang illegal argument exception", "$ r2 = org eclipse jgit internal j git text get", "$ r3 = $ r2 skip must be non negative", "specialinvoke r4 < init > $ r3", "throw r4", "if i0 > = 0 goto label1", "label r5 = new org eclipse jgit revwalk filter skip rev filter", "specialinvoke r5 < init > i0", "r6 = org eclipse jgit revwalk filter rev filter r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit revwalk follow filter r0", "$ r1 = r2 rename callback", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit revwalk rev commit r0", "$ r1 = r2 parent", "$ i0 = lengthof $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org eclipse jgit revwalk rev commit r0", "r1 = r5 buffer", "$ r3 = newarray byte [ 6 ]", "$ r3 [ 0 ] = 103", "$ r3 [ 1 ] = 112", "$ r3 [ 2 ] = 103", "$ r3 [ 3 ] = 115", "$ r3 [ 4 ] = 105", "$ r3 [ 5 ] = 103", "i0 = org eclipse jgit util raw parse utils header start $ r3 r1 0", "if i0 > = 0 goto label1", "return null", "if i0 > = 0 goto label1", "label i1 = org eclipse jgit util raw parse utils header end r1 i0", "$ r4 = java util array copy of range r1 i0 i1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit revwalk rev commit r0", "r1 = r3 buffer", "i0 = org eclipse jgit util raw parse utils author r1 0", "if i0 > = 0 goto label1", "return null", "if i0 > = 0 goto label1", "label $ r2 = org eclipse jgit util raw parse utils parse person ident r1 i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit revwalk rev object r0", "$ i1 = r2 flag", "$ i0 = r1 mask", "$ i2 = $ i1 & $ i0", "if $ i2 == 0 goto label1", "return 1", "if $ i2 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit revwalk rev tag r0", "$ r1 = r2 tag name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jgit storage file window cache config r0", "r1 delta base cache limit = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit storage pack pack config r0", "$ z0 = r1 reuse delta", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit storage pack pack config r0", "$ i0 = r1 bitmap distant commit span", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit storage pack pack statistic r0", "$ r1 = r2 statistic", "$ l0 = $ r1 total delta", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit storage pack pack statistic r0", "$ r1 = r2 statistic", "$ l0 = $ r1 time count", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "org eclipse jgit transport credential provider default provider = r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit transport daemon r0", "$ r1 = r2 my address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jgit transport daemon r0", "r1 timeout = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit transport net r c r0", "$ r1 = r3 host", "$ r2 = $ r1 value", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse jgit transport operation result r0", "$ r2 = r5 update", "$ r3 = $ r2 get r1", "$ r4 = org eclipse jgit transport track ref update $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit transport pack object info r0", "$ i0 = r1 crc", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jgit transport pack object info r0", "r1 type = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org eclipse jgit transport push certificate ident r0", "$ r1 = r5 user id", "i0 = $ r1 index of 60", "if i0 > = 0 goto label1", "return null", "if i0 > = 0 goto label1", "label r6 = org eclipse jgit transport push certificate ident r0", "$ r2 = r6 user id", "i1 = $ r2 index of 62 i0", "if i1 > = 0 goto label2", "label r7 = org eclipse jgit transport push certificate ident r0", "$ r3 = r7 user id", "$ i2 = i0 + 1", "$ r4 = $ r3 substring $ i2 i1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r34 = new java util array list", "specialinvoke r34 < init >", "r34 clear", "r35 = org eclipse jgit transport remote config r0", "$ r4 = r35 get u r be", "r26 = $ r4 iterator", "goto label2", "label $ z0 = r26 have next", "if $ z0 ! = 0 goto label1", "label $ r5 = r26 next", "r27 = org eclipse jgit transport u r iish $ r5", "$ r6 = r27 to private string", "r34 add $ r6", "if $ z0 ! = 0 goto label1", "r36 = org eclipse jgit transport remote config r0", "$ r7 = r36 get name", "r1 set string list \\ `` remote\\"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org eclipse jgit transport remote config r0", "$ r2 = r4 uris", "$ z0 = $ r2 contain r1", "if $ z0 == 0 goto label1", "return 0", "if $ z0 == 0 goto label1", "label r5 = org eclipse jgit transport remote config r0", "$ r3 = r5 uris", "$ z1 = $ r3 add r1", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse jgit transport remote config r0", "$ r2 = r3 push u r be", "$ z0 = $ r2 remove r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit transport remote ref update r0", "$ r1 = r2 message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org eclipse jgit transport remote ref update r0", "$ z0 = r8 be delete", "if $ z0 == 0 goto label1", "r9 = org eclipse jgit transport remote ref update r0", "$ r6 = r9 track ref update", "r10 = org eclipse jgit transport remote ref update r0", "$ r5 = r10 local update", "$ r7 = $ r5 delete r1", "$ r6 set result $ r7", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r11 = org eclipse jgit transport remote ref update r0", "$ r3 = r11 track ref update", "r12 = org eclipse jgit transport remote ref update r0", "$ r2 = r12 local update", "$ r4 = $ r2 update r1", "$ r3 set result $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit transport sign push config r0", "$ r1 = r2 cert nonce seed", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = org eclipse jgit transport transport protocol", "$ r1 = new java lang ref weak reference", "specialinvoke $ r1 < init > r0", "$ r2 add 0 $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit transport transport r0", "$ r1 = r2 get object checker", "if $ r1 == null goto label1", "return 1", "if $ r1 == null goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit transport transport r0", "r2 object checker = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org eclipse jgit transport transport r0", "$ r2 = r6 local", "$ r3 = java util collection empty map", "r7 = org eclipse jgit transport transport r0", "$ r4 = r7 fetch", "$ r5 = org eclipse jgit transport transport find remote ref update for $ r2 r1 $ r3 $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org eclipse jgit transport u r iish", "r5 = org eclipse jgit transport u r iish r0", "specialinvoke r4 < init > r5", "r4 host = r1", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new org eclipse jgit transport u r iish", "r6 = org eclipse jgit transport u r iish r0", "specialinvoke r5 < init > r6", "$ r4 = org eclipse jgit transport u r iish unescape r1", "r5 path = $ r4", "r5 raw path = r1", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit transport username password credential provider r0", "r3 username = null", "r4 = org eclipse jgit transport username password credential provider r0", "$ r1 = r4 password", "if $ r1 == null goto label1", "r5 = org eclipse jgit transport username password credential provider r0", "$ r2 = r5 password", "java util array fill $ r2 0", "r6 = org eclipse jgit transport username password credential provider r0", "r6 password = null", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org eclipse jgit treewalk abstract tree iterator r0", "$ r2 = r4 id buffer", "r5 = org eclipse jgit treewalk abstract tree iterator r0", "$ i0 = r5 id offset", "$ r3 = r1 id buffer", "$ i1 = r1 id offset", "$ z0 = org eclipse jgit lib object id equal $ r2 $ i0 $ r3 $ i1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit treewalk abstract tree iterator r0", "$ i0 = r1 mode", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit treewalk abstract tree iterator r0", "$ i0 = r1 path offset", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse jgit treewalk filter path filter r0", "$ r2 = r3 path raw", "$ i0 = lengthof $ r2", "$ i1 = r1 get path length", "if $ i0 ! = $ i1 goto label1", "return 1", "if $ i0 ! = $ i1 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "$ r2 = org eclipse jgit lib file mode tree", "r3 = org eclipse jgit treewalk tree walk r0", "$ r1 = r3 current head", "$ i0 = $ r1 mode", "$ z0 = $ r2 equal $ i0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit treewalk work tree option r0", "$ z0 = r1 dir no git link", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 size", "if $ i0 ! = 0 goto label1", "return", "if $ i0 ! = 0 goto label1", "label i4 = 0", "goto label3", "label $ i1 = r1 tail dir idx", "if i4 < $ i1 goto label2", "label $ r2 = r1 directory", "$ r3 = $ r2 [ i4 ]", "r5 = org eclipse jgit util block list r0", "r5 add all $ r3 0 1024", "i4 = i4 + 1", "if i4 < $ i1 goto label2", "$ i2 = r1 tail blk idx", "if $ i2 == 0 goto label4", "$ r4 = r1 tail block", "$ i3 = r1 tail blk idx", "r6 = org eclipse jgit util block list r0", "r6 add all $ r4 0 $ i3", "label return"], "adj": [[1], [2], [3], [4], [], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "org eclipse jgit util file utils mkdirs r0 0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r1 = @ parameter0", "goto label3", "label if r1 ! = null goto label1", "label $ z0 = r1 instanceof java io i o exception", "if $ z0 == 0 goto label2", "$ r0 = java io i o exception r1", "$ z1 = org eclipse jgit util file utils be stale file handle $ r0", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label r1 = r1 get cause", "label if r1 ! = null goto label1", "return 0"], "adj": [[1], [], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["$ r0 = org eclipse jgit util f detect null", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r8 = org eclipse jgit util fs r0", "$ r1 = r8 git system config", "if $ r1 ! = null goto label1", "r7 = new org eclipse jgit util fs $ holder", "r9 = org eclipse jgit util fs r0", "$ r6 = r9 discover git system config", "specialinvoke r7 < init > $ r6", "r10 = org eclipse jgit util fs r0", "r10 git system config = r7", "label r11 = org eclipse jgit util fs r0", "$ r2 = r11 git system config", "$ r3 = $ r2 value", "$ r4 = java io file $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org eclipse jgit util file utils exist r1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 == null goto label1", "$ i0 = r1 length", "if $ i0 ! = 0 goto label2", "label return", "if $ i0 ! = 0 goto label2", "label $ r3 = java nio charset standard charsets utf_8", "$ r4 = $ r3 name", "$ r5 = java net u r l encoder encode r1 $ r4", "r0 append $ r5", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = newarray javax net ssl trust manager [ 1 ]", "r13 = new org eclipse jgit util http support $ dummy x509 trust manager", "specialinvoke r13 < init > null", "$ r2 [ 0 ] = r13", "label r17 = javax net ssl trust manager [ ] $ r2", "r0 configure null r17 null", "r14 = new org eclipse jgit util http support $ dummy hostname verifier", "specialinvoke r14 < init > null", "r18 = javax net ssl hostname verifier r14", "r0 set hostname verifier r18", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org eclipse jgit util int list r0", "$ i1 = r4 count", "if $ i1 > i0 goto label1", "r3 = new java lang array index out of bound exception", "specialinvoke r3 < init > i0", "throw r3", "if $ i1 > i0 goto label1", "label r5 = org eclipse jgit util int list r0", "$ r1 = r5 entry", "$ i2 = $ r1 [ i0 ]", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit util io message writer r0", "$ r1 = r2 buf", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit util io timeout output stream r0", "$ i0 = r1 timeout", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = newarray byte [ i0 ]", "i4 = 0", "goto label3", "label $ i1 = lengthof r1", "if i4 < $ i1 goto label1", "label $ i2 = lengthof r1", "$ i3 = $ i2 - i4", "i5 = r0 read r1 i4 $ i3", "if i5 > = 0 goto label2", "$ r3 = java nio byte buffer wrap r1 0 i4", "return $ r3", "if i5 > = 0 goto label2", "label i4 = i4 + i5", "if i4 < $ i1 goto label1", "i6 = r0 read", "if i6 > = 0 goto label4", "$ r7 = java nio byte buffer wrap r1 0 i4", "return $ r7", "if i6 > = 0 goto label4", "label $ r4 = new org eclipse jgit util temporary buffer $ heap", "specialinvoke $ r4 < init > 2147483647", "$ r4 write r1", "$ r4 write i6", "$ r4 copy r0", "$ r5 = $ r4 to byte array", "$ r6 = java nio byte buffer wrap $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r2 ! = null goto label01", "$ r12 = org eclipse jgit util lf factory get attribute for path r0 r1", "return $ r12", "if r2 ! = null goto label01", "label r15 = null", "label $ r5 = r2 get tree", "r3 = org eclipse jgit treewalk tree walk for path r0 r1 $ r5", "label if r3 ! = null goto label04", "$ r16 = null", "goto label05", "label r4 = $ r16", "if $ r16 ! = null goto label06", "$ r7 = new java io i o exception", "$ r8 = org eclipse jgit internal j git text get", "$ r10 = $ r8 no path attribute find", "$ r9 = newarray java lang object [ 1 ]", "$ r9 [ 0 ] = r1", "$ r11 = java text message format format $ r10 $ r9", "specialinvoke $ r7 < init > $ r11", "throw $ r7", "if $ r16 ! = null goto label06", "label if r3 == null goto label07", "r3 close", "label return r4", "label if r3 ! = null goto label04", "label $ r16 = r3 get attribute"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r7 = org eclipse jgit util long map r0", "$ r3 = r7 table", "r8 = org eclipse jgit util long map r0", "$ i1 = specialinvoke r8 index l0", "r5 = $ r3 [ $ i1 ]", "goto label3", "label if r5 ! = null goto label1", "label $ l2 = r5 key", "$ b3 = $ l2 cmp l0", "if $ b3 ! = 0 goto label2", "r2 = r5 value", "r5 value = r1", "return r2", "if $ b3 ! = 0 goto label2", "label r5 = r5 next", "label if r5 ! = null goto label1", "r9 = org eclipse jgit util long map r0", "$ i4 = r9 size", "$ i5 = $ i4 + 1", "r10 = org eclipse jgit util long map r0", "r10 size = $ i5", "r11 = org eclipse jgit util long map r0", "$ i6 = r11 grow at", "if $ i5 ! = $ i6 goto label4", "r12 = org eclipse jgit util long map r0", "specialinvoke r12 grow", "label r6 = new org eclipse jgit util long map $ node", "specialinvoke r6 < init > l0 r1", "r13 = org eclipse jgit util long map r0", "specialinvoke r13 insert r6", "return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit util ref list r0", "$ i0 = r1 cnt", "if $ i0 ! = 0 goto label1", "return 1", "if $ i0 ! = 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ this", "r7 = org eclipse jgit util sha1 sha1 r0", "specialinvoke r7 finish", "r1 = newarray byte [ 20 ]", "r8 = org eclipse jgit util sha1 sha1 r0", "$ r2 = r8 h", "$ i0 = $ r2 a", "org eclipse jgit util nb encode int32 r1 0 $ i0", "r9 = org eclipse jgit util sha1 sha1 r0", "$ r3 = r9 h", "$ i1 = $ r3 b", "org eclipse jgit util nb encode int32 r1 4 $ i1", "r10 = org eclipse jgit util sha1 sha1 r0", "$ r4 = r10 h", "$ i2 = $ r4 c", "org eclipse jgit util nb encode int32 r1 8 $ i2", "r11 = org eclipse jgit util sha1 sha1 r0", "$ r5 = r11 h", "$ i3 = $ r5 d", "org eclipse jgit util nb encode int32 r1 12 $ i3", "r12 = org eclipse jgit util sha1 sha1 r0", "$ r6 = r12 h", "$ i4 = $ r6 e", "org eclipse jgit util nb encode int32 r1 16 $ i4", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i1 = r0 length", "if $ i1 ! = 0 goto label2", "label return r0", "if $ i1 ! = 0 goto label2", "label $ r1 = new java lang string buffer", "specialinvoke $ r1 < init > $ i1", "$ c2 = r0 char at 0", "$ c3 = java lang character to title case $ c2", "$ r2 = $ r1 append $ c3", "$ r3 = r0 substring 1", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i8 = 0", "goto label3", "label $ i1 = r0 length", "if i8 > = $ i1 goto label4", "$ i5 = r1 length", "if i8 < $ i5 goto label1", "label $ c6 = r0 char at i8", "$ c7 = r1 char at i8", "i0 = $ c6 - $ c7", "if i0 == 0 goto label2", "return i0", "if i0 == 0 goto label2", "label i8 = i8 + 1", "if i8 < $ i5 goto label1", "label $ i2 = r0 length", "$ i3 = r1 length", "$ i4 = $ i2 - $ i3", "return $ i4"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "i3 = 0", "$ i1 = r0 size", "i0 = $ i1 - 1", "r5 = r0 iterator", "goto label4", "label $ z0 = r5 have next", "if $ z0 ! = 0 goto label1", "label $ r7 = r5 next", "r4 = java lang string $ r7", "$ r6 append r4", "$ i2 = i0 - 1", "if i3 ! = $ i2 goto label2", "$ r6 append r2", "goto label3", "label i3 = i3 + 1", "if i3 ! = $ i2 goto label2", "label if i3 == i0 goto label3", "$ r6 append r1", "if $ z0 ! = 0 goto label1", "$ r11 = $ r6 to string", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = @ parameter1", "if r7 ! = null goto label1", "r7 = org eclipse jgit lib null progress monitor instance", "label r8 = org eclipse jgit util temporary buffer r0", "$ r4 = r8 block", "r3 = $ r4 iterator", "goto label3", "label $ z0 = r3 have next", "if $ z0 ! = 0 goto label2", "label $ r5 = r3 next", "r2 = org eclipse jgit util temporary buffer $ block $ r5", "$ r6 = r2 buffer", "$ i0 = r2 count", "r1 write $ r6 0 $ i0", "$ i1 = r2 count", "$ i2 = $ i1 1024", "r9 = org eclipse jgit lib progress monitor r7", "r9 update $ i2", "if $ z0 ! = 0 goto label2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = new org eclipse jgit util temporary buffer $ block input stream", "r3 = org eclipse jgit util temporary buffer r0", "specialinvoke r2 < init > r3", "r4 = java io input stream r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch join query have parent query builder r0", "$ r1 = r2 parent type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org passay character characteristic rule r0", "$ i0 = r1 num characteristic", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org passay character rule r0", "$ i0 = r1 num character", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org passay dictionary abstract file word list r0", "$ r1 = r2 file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org passay dictionary ternary node r0", "$ r1 = r2 eqkid", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r6 = new java lang string builder", "specialinvoke r6 < init >", "r7 = org passay dictionary ternary tree r0", "$ r4 = r7 root", "r8 = org passay dictionary ternary tree r0", "specialinvoke r8 print node $ r4 \\ `` \\", "$ r5 = r6 to string", "r1 write $ r5", "r1 flush", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org passay dictionary word list dictionary r0", "$ r1 = r2 word list", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = new java io input stream reader", "specialinvoke $ r3 < init > r0 r1", "org passay dictionary word list read word $ r3 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org passay length complexity rule r0", "r1 report rule failure = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org passay length rule r0", "r1 maximum length = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "$ r3 = new java lang string builder", "$ i2 = r1 length", "specialinvoke $ r3 < init > $ i2", "i6 = 0", "label $ i3 = r1 length", "if i6 > = $ i3 goto label3", "c1 = r1 char at i6", "$ i4 = r0 index of c1", "if $ i4 == -1 goto label2", "$ i5 = $ r3 length", "if $ i5 > = i0 goto label3", "$ r3 append c1", "label i6 = i6 + 1", "goto label1", "if $ i5 > = i0 goto label3", "label $ r4 = $ r3 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org passay password validator r0", "$ r1 = r2 message resolver", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org passay rule result metadata r0", "$ r2 = r5 count", "$ r3 = $ r2 get r1", "$ r4 = java lang integer $ r3", "$ i0 = $ r4 int value", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org passay username rule r0", "r1 ignore case = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r6 = new java util array list", "r7 = org apache pdfbox co c o s array r0", "$ i0 = r7 size", "specialinvoke r6 < init > $ i0", "i2 = 0", "label r8 = org apache pdfbox co c o s array r0", "$ i1 = r8 size", "if i2 > = $ i1 goto label4", "r9 = org apache pdfbox co c o s array r0", "r2 = r9 get object i2", "$ z0 = r2 instanceof org apache pdfbox co c o s number", "if $ z0 == 0 goto label2", "$ r4 = org apache pdfbox co c o s number r2", "$ f0 = $ r4 float value", "$ r5 = java lang float value of $ f0", "r6 add $ r5", "goto label3", "label i2 = i2 + 1", "goto label1", "if $ z0 == 0 goto label2", "label r6 add null", "if i2 > = $ i1 goto label4", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox multipdf overlay r0", "r2 input p d f document = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox multipdf p d f merger utility r0", "$ r1 = r2 document merge mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox multipdf p d f merger utility r0", "r2 acro form merge mode = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox pdfparser xref x reference type r0", "$ i0 = r1 numeric value", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdfwriter compress traverse c o s element r0", "$ r1 = r2 traverse child", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new org apache pdfbox co c o s array", "specialinvoke r6 < init >", "r6 set float array r1", "r7 = org apache pdfbox pdmodel fdf f d f annotation polyline r0", "$ r5 = r7 annot", "$ r4 = org apache pdfbox co c o s name vertex", "r8 = org apache pdfbox co c o s base r6", "$ r5 set item $ r4 r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r5 = org apache pdfbox pdmodel font standard14 font aliases", "$ r6 = $ r5 get r0", "r1 = java lang string $ r6", "if r1 ! = null goto label01", "return null", "if r1 ! = null goto label01", "label $ r7 = org apache pdfbox pdmodel font standard14 font font", "$ r8 = $ r7 get r1", "if $ r8 ! = null goto label10", "$ r12 = org apache pdfbox pdmodel font standard14 font font", "entermonitor $ r12", "label $ r13 = org apache pdfbox pdmodel font standard14 font font", "$ r14 = $ r13 get r1", "if $ r14 ! = null goto label06", "label org apache pdfbox pdmodel font standard14 font load metric r1", "label goto label06", "label exitmonitor $ r12", "label goto label10", "label $ r9 = org apache pdfbox pdmodel font standard14 font font", "$ r10 = $ r9 get r1", "$ r11 = org apache fontbox afm font metric $ r10", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r11 = org apache pdfbox pdmodel graphic image p d inline image r0", "$ r5 = r11 parameter", "$ r4 = org apache pdfbox co c o s name f", "$ r3 = org apache pdfbox co c o s name filter", "r1 = $ r5 get dictionary object $ r4 $ r3", "$ z0 = r1 instanceof org apache pdfbox co c o s name", "if $ z0 == 0 goto label1", "r2 = org apache pdfbox co c o s name r1", "$ r9 = r2 get name", "$ r10 = java util collection singleton list $ r9", "return $ r10", "if $ z0 == 0 goto label1", "label $ z1 = r1 instanceof org apache pdfbox co c o s array", "if $ z1 == 0 goto label2", "$ r7 = org apache pdfbox co c o s array r1", "$ r8 = $ r7 to c o s name string list", "return $ r8", "if $ z1 == 0 goto label2", "label $ r6 = java util collection empty list", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [], [19], [20], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org apache pdfbox pdmodel interactive annotation p d annotation caret r0", "r1 set rect difference f0 f0 f0 f0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive annotation p d annotation free text r0", "$ r1 = r3 get c o s object", "$ r2 = org apache pdfbox co c o s name q", "$ r1 set int $ r2 i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org apache pdfbox render p d f renderer r0", "r1 image downscaling optimization threshold = f0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java util base64 get decoder", "$ r2 = r0 replace all \\ `` \\\\s\\", "$ r3 = $ r1 decode $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r13 = org codehaus plexus util abstract scanner r0", "r13 include = null", "goto label4", "label return", "if r1 ! = null goto label1", "label $ i0 = lengthof r1", "$ r2 = newarray java lang string [ $ i0 ]", "r14 = org codehaus plexus util abstract scanner r0", "r14 include = $ r2", "i4 = 0", "label $ i1 = lengthof r1", "if i4 > = $ i1 goto label4", "$ r3 = r1 [ i4 ]", "$ r4 = $ r3 trim", "$ c2 = java io file separator char", "$ r5 = $ r4 replace 47 $ c2", "$ c3 = java io file separator char", "r11 = $ r5 replace 92 $ c3", "$ r6 = java io file separator", "$ z0 = r11 end with $ r6", "if $ z0 == 0 goto label3", "r12 = new java lang string buffer", "specialinvoke r12 < init >", "$ r9 = r12 append r11", "$ r10 = $ r9 append \\ `` * * \\ ``", "r11 = $ r10 to string", "label r15 = org codehaus plexus util abstract scanner r0", "$ r7 = r15 include", "$ r7 [ i4 ] = r11", "i4 = i4 + 1", "goto label2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus plexus util exception utils cause_method_names", "$ r2 = org codehaus plexus util exception utils get cause r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ c0 = java io file separator char", "$ r1 = org codehaus plexus util file utils remove path r0 $ c0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "c0 = @ parameter1", "i1 = r0 last index of c0", "if -1 ! = i1 goto label1", "return r0", "if -1 ! = i1 goto label1", "label $ i2 = i1 + 1", "$ r1 = r0 substring $ i2", "return $ r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java io file reader", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = net sourceforge pmd abstract configuration r0", "$ z0 = r1 debug", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` null parameter array\\ ``", "r12 = new net sourceforge pmd cli p m d parameter", "specialinvoke r12 < init >", "r13 = new com beust jcommander j commander", "specialinvoke r13 < init > r12", "r13 set program name \\ `` pmd\\ ``", "label r13 parse r0", "r14 = new net sourceforge pmd cli pmd parameter parse result", "$ r8 = net sourceforge pmd cli pmd parameter parse result filter deprecate option r0", "specialinvoke r14 < init > r12 $ r8", "label return r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = r0 get child node", "i0 = $ r3 get length", "if i0 ! = 0 goto label1", "return \\ `` \\ ``", "if i0 ! = 0 goto label1", "label $ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "i3 = 0", "label if i3 > = i0 goto label5", "$ r6 = r0 get child node", "r2 = $ r6 item i3", "$ s1 = r2 get node type", "if $ s1 == 4 goto label3", "$ s2 = r2 get node type", "if $ s2 ! = 3 goto label4", "label $ r7 = r2 get node value", "$ r4 append $ r7", "label i3 = i3 + 1", "goto label2", "label if i3 > = i0 goto label5", "label $ r5 = $ r4 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sourceforge pmd lang ast abstract node r0", "$ z0 = r2 have descendant of any type r1", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = net sourceforge pmd lang dfa structure r0", "$ r3 = r5 data flow handler", "r6 = net sourceforge pmd lang dfa structure r0", "$ r2 = r6 data flow", "$ r4 = $ r3 create data flow node $ r2 r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r0 to string", "r3 = r1 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label4", "$ r5 = r3 next", "r4 = java lang string $ r5", "$ z1 = r0 start with r4", "if $ z1 == 0 goto label3", "$ r6 = java io file separator", "$ i0 = r4 length", "$ z2 = r2 start with $ r6 $ i0", "if $ z2 == 0 goto label2", "$ i2 = r4 length", "$ i3 = $ i2 + 1", "$ r8 = r2 substring $ i3", "return $ r8", "if $ z2 == 0 goto label2", "label $ i1 = r4 length", "$ r7 = r2 substring $ i1", "return $ r7", "if $ z1 == 0 goto label3", "label goto label1", "if $ z0 == 0 goto label4", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = net sourceforge pmd lang document file collector r0", "$ r5 = r11 all file to process", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r6 = r2 next", "r3 = net sourceforge pmd lang document text file $ r6", "$ r7 = r3 get language version", "r4 = $ r7 get language", "$ z1 = r1 contain r4", "if $ z1 ! = 0 goto label2", "r12 = net sourceforge pmd lang document file collector r0", "$ r9 = r12 reporter", "$ r8 = newarray java lang object [ 2 ]", "$ r10 = r3 get path id", "$ r8 [ 0 ] = $ r10", "$ r8 [ 1 ] = r4", "$ r9 trace \\ `` filter out { 0 } no rule for language { 1 } \\", "r2 remove", "label goto label1", "if $ z0 == 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r15 = net sourceforge pmd lang language version r0", "$ r3 = r15 language", "r2 = $ r3 get version r1", "if r2 ! = null goto label1", "r14 = new java lang illegal argument exception", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r6 = r13 append \\ `` no such version \\'\\ ``", "$ r7 = $ r6 append r1", "$ r8 = $ r7 append \\ `` \\ ' for language \\ ``", "r16 = net sourceforge pmd lang language version r0", "$ r9 = r16 language", "$ r10 = $ r9 get name", "$ r11 = $ r8 append $ r10", "$ r12 = $ r11 to string", "specialinvoke r14 < init > $ r12", "throw r14", "if r2 ! = null goto label1", "label r17 = net sourceforge pmd lang language version r0", "$ i0 = r17 compare to r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r3 = net sourceforge pmd lang metric basic project memoizer r0", "$ r1 = r3 class", "$ r1 clear", "r4 = net sourceforge pmd lang metric basic project memoizer r0", "$ r2 = r4 operation", "$ r2 clear", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r5 = new net sourceforge pmd lang metric metric option $ metric option builder", "specialinvoke $ r5 < init > null", "$ r5 add r0", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r4 = r1 [ i1 ]", "$ r5 add r4", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label $ r6 = $ r5 build", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r6 = net sourceforge pmd lang rule abstract rule chain visitor r0", "$ r3 = r6 node name to node", "$ r4 = $ r3 value", "r1 = $ r4 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r5 = r1 next", "r2 = java util list $ r5", "r2 clear", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r2 = net sourceforge pmd lang rule xpath x path version r0", "$ r1 = r2 version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = net sourceforge pmd lang rule x path rule version_descriptor", "r5 = net sourceforge pmd lang rule x path rule r0", "r6 = net sourceforge pmd property property descriptor $ r1", "$ r2 = r5 get property r6", "$ r3 = java lang string $ r2", "$ r4 = net sourceforge pmd lang rule xpath x path version of id $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "$ r1 = net sourceforge pmd lang rule x path rule xpath_descriptor", "r4 = net sourceforge pmd lang rule x path rule r0", "r5 = net sourceforge pmd property property descriptor $ r1", "$ r2 = r4 get property r5", "$ r3 = java lang string $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = net sourceforge pmd lang rule x path rule r0", "$ z0 = specialinvoke r9 x path rule query need initialization", "if $ z0 == 0 goto label1", "r10 = net sourceforge pmd lang rule x path rule r0", "specialinvoke r10 init x path rule query", "label r11 = net sourceforge pmd lang rule x path rule r0", "$ r6 = r11 xpath rule query", "r3 = $ r6 evaluate r1 r2", "r4 = r3 iterator", "label $ z1 = r4 have next", "if $ z1 == 0 goto label3", "$ r7 = r4 next", "r5 = net sourceforge pmd lang ast node $ r7", "$ r8 = r5 get image", "r12 = net sourceforge pmd lang rule x path rule r0", "r12 add violation r2 r5 $ r8", "goto label2", "if $ z1 == 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = net sourceforge pmd pmd analysis r0", "$ r2 = r4 rule set", "$ r3 = java util object require non null r1", "$ r2 add $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = net sourceforge pmd p m d configuration r0", "$ r1 = r2 class loader", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sourceforge pmd p m d configuration r0", "$ r1 = r2 create renderer 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sourceforge pmd p m d configuration r0", "r2 report property = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r1 = \\ `` unknown\\ ``", "$ r0 = net sourceforge pmd p m d version version", "$ z0 = $ r1 equal $ r0", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r3 = net sourceforge pmd property abstract multi value property r0", "$ z0 = specialinvoke r3 default have null value", "if $ z0 == 0 goto label2", "label $ r2 = null", "goto label3", "label return $ r2", "if $ z0 == 0 goto label2", "label $ r2 = \\ `` miss value\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = net sourceforge pmd property property builder r0", "$ r2 = r3 validators", "$ r2 add r1", "r4 = net sourceforge pmd property property builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new net sourceforge pmd property property builder $ generic property builder", "$ r2 = net sourceforge pmd property value parser constant double_parser", "specialinvoke $ r1 < init > r0 $ r2 class \\ `` ljava lang double \\ ``", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = net sourceforge pmd property property type id r0", "$ r1 = r3 factory", "$ z0 = $ r1 instanceof net sourceforge pmd property builders property descriptor builder conversion wrapper $ single value $ numeric", "if $ z0 ! = 0 goto label1", "r4 = net sourceforge pmd property property type id r0", "$ r2 = r4 factory", "$ z1 = $ r2 instanceof net sourceforge pmd property builders property descriptor builder conversion wrapper $ multi value $ numeric", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new net sourceforge pmd property regex property $ regex p builder", "specialinvoke $ r1 < init > r0 null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r32 = new net sourceforge pmd report", "specialinvoke r32 < init >", "$ l1 = r1 start", "r33 = net sourceforge pmd report r0", "$ l0 = r33 start", "$ l2 = java lang math min $ l1 $ l0", "r32 start = $ l2", "$ l4 = r1 end", "r34 = net sourceforge pmd report r0", "$ l3 = r34 end", "$ l5 = java lang math max $ l4 $ l3", "r32 end = $ l5", "r35 = net sourceforge pmd report r0", "$ r4 = r35 violation", "r28 = $ r4 iterator", "label $ z0 = r28 have next", "if $ z0 == 0 goto label2", "$ r27 = r28 next", "r29 = net sourceforge pmd rule violation $ r27", "r32 add rule violation r29", "goto label1", "if $ z0 == 0 goto label2", "label $ r5 = r1 violation", "r30 = $ r5 iterator", "label $ z1 = r30 have next", "if $ z1 == 0 goto label4", "$ r26 = r30 next", "r31 = net sourceforge pmd rule violation $ r26", "r32 add rule violation r31", "goto label3", "if $ z1 == 0 goto label4", "label $ r7 = r32 line to suppress", "r36 = net sourceforge pmd report r0", "$ r6 = r36 line to suppress", "$ r7 put all $ r6", "$ r9 = r32 line to suppress", "$ r8 = r1 line to suppress", "$ r9 put all $ r8", "$ r11 = r32 suppress rule violation", "r37 = net sourceforge pmd report r0", "$ r10 = r37 suppress rule violation", "$ r11 add all $ r10", "$ r13 = r32 suppress rule violation", "$ r12 = r1 suppress rule violation", "$ r13 add all $ r12", "$ r15 = r32 metric", "r38 = net sourceforge pmd report r0", "$ r14 = r38 metric", "$ r15 add all $ r14", "$ r17 = r32 metric", "$ r16 = r1 metric", "$ r17 add all $ r16", "$ r19 = r32 error", "r39 = net sourceforge pmd report r0", "$ r18 = r39 error", "$ r19 add all $ r18", "$ r21 = r32 error", "$ r20 = r1 error", "$ r21 add all $ r20", "$ r23 = r32 config error", "r40 = net sourceforge pmd report r0", "$ r22 = r40 config error", "$ r23 add all $ r22", "$ r25 = r32 config error", "$ r24 = r1 config error", "$ r25 add all $ r24", "return r32"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = net sourceforge pmd rule context r0", "$ r2 = r4 attribute", "$ r3 = $ r2 get r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = net sourceforge pmd rule set r0", "$ r4 = r7 rule", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = net sourceforge pmd rule $ r5", "$ r6 = r3 get language", "$ z1 = $ r6 equal r1", "if $ z1 == 0 goto label2", "$ z2 = r3 be dfa", "if $ z2 == 0 goto label2", "return 1", "if $ z2 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = net sourceforge pmd rule set loader r0", "r1 enable compatibility = z0", "r2 = net sourceforge pmd rule set loader r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = net sourceforge pmd rule set loader r0", "r1 include deprecate rule reference = z0", "r2 = net sourceforge pmd rule set loader r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = net sourceforge pmd rule set r0", "$ r4 = r6 rule set", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = net sourceforge pmd rule set $ r5", "$ z1 = r3 use d f a r1", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "i1 = 0", "r6 = net sourceforge pmd rule set r0", "$ r3 = r6 rule set", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r4 = r1 next", "r2 = net sourceforge pmd rule set $ r4", "$ r5 = r2 get rule", "$ i0 = $ r5 size", "i1 = i1 + $ i0", "goto label1", "if $ z0 == 0 goto label2", "label return i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java util array list", "specialinvoke $ r2 < init >", "label $ z0 = r0 have next", "if $ z0 == 0 goto label2", "$ r3 = r0 next", "$ r2 add $ r3", "goto label1", "if $ z0 == 0 goto label2", "label return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r3 = new org apache common io input reader input stream", "r4 = net sourceforge pmd util datasource reader data source r0", "$ r2 = r4 reader", "specialinvoke r3 < init > $ r2", "r5 = java io input stream r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r11 = null", "r1 = r0 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label7", "$ r4 = r1 next", "r2 = java lang auto closeable $ r4", "label r2 close", "label goto label6", "label goto label1", "if $ z0 == 0 goto label7", "label return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = r1 get name", "r2 = net sourceforge pmd util class util without package name $ r4", "r21 = net sourceforge pmd util type map r0", "$ r5 = r21 type by name", "$ r6 = $ r5 get r2", "r3 = java lang class $ r6", "if r3 ! = null goto label1", "r22 = net sourceforge pmd util type map r0", "$ r14 = r22 type by name", "$ r15 = r1 get name", "$ r14 put $ r15 r1", "r23 = net sourceforge pmd util type map r0", "$ r17 = r23 type by name", "$ r17 put r2 r1", "return", "if r3 ! = null goto label1", "label if r3 == r1 goto label2", "r20 = new java lang illegal argument exception", "r19 = new java lang string builder", "specialinvoke r19 < init >", "$ r9 = r19 append \\ `` short name collision between exist \\ ``", "$ r10 = $ r9 append r3", "$ r11 = $ r10 append \\ `` and new \\ ``", "$ r12 = $ r11 append r1", "$ r13 = $ r12 to string", "specialinvoke r20 < init > $ r13", "throw r20", "label if r3 == r1 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], []]}
{"nodes": ["r0 = @ this", "r1 = net sourceforge pmd lang java ast a s t argument list r0", "$ i0 = r1 get num child", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = net sourceforge pmd lang java ast a s t assert statement r0", "$ i0 = r1 get num child", "if $ i0 ! = 2 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 ! = 2 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = net sourceforge pmd lang java ast a s t constructor declaration r0", "$ r1 = r2 get formal parameter", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = net sourceforge pmd lang java ast a s t do statement r0", "$ r1 = r3 get child 0", "$ r2 = net sourceforge pmd lang java ast a s t statement $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = net sourceforge pmd lang java ast a s t finally statement r0", "$ r1 = r3 get child 0", "$ r2 = net sourceforge pmd lang java ast a s t block $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = net sourceforge pmd lang java ast a s t import declaration r0", "$ z0 = r3 be import on demand", "if $ z0 == 0 goto label1", "return null", "if $ z0 == 0 goto label1", "label r4 = net sourceforge pmd lang java ast a s t import declaration r0", "r1 = r4 get import name", "$ i0 = r1 last index of 46", "$ i1 = $ i0 + 1", "$ r2 = r1 substring $ i1", "return $ r2"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = net sourceforge pmd lang java ast a s t unary expression not plus minus r0", "$ r1 = r2 get image", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = net sourceforge pmd lang java ast java parser decorate visitor r0", "$ r2 = r3 visitor", "r1 set base $ r2", "r4 = net sourceforge pmd lang java ast java parser decorate visitor r0", "r5 = net sourceforge pmd lang java ast java parser controlless visitor r1", "r4 visitor = r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r16 = net sourceforge pmd lang java ast access node r0", "$ r1 = net sourceforge pmd lang java multifile signature java signature $ visibility get r16", "$ r2 = net sourceforge pmd lang java multifile signature java operation signature $ role get r0", "$ z0 = r0 be abstract", "i0 = net sourceforge pmd lang java multifile signature java operation signature code $ r1 $ r2 $ z0", "$ r3 = net sourceforge pmd lang java multifile signature java operation signature pool", "$ r4 = java lang integer value of i0", "$ z1 = $ r3 contain key $ r4", "if $ z1 ! = 0 goto label1", "$ r9 = net sourceforge pmd lang java multifile signature java operation signature pool", "$ r10 = java lang integer value of i0", "r15 = new net sourceforge pmd lang java multifile signature java operation signature", "r17 = net sourceforge pmd lang java ast access node r0", "$ r12 = net sourceforge pmd lang java multifile signature java signature $ visibility get r17", "$ r13 = net sourceforge pmd lang java multifile signature java operation signature $ role get r0", "$ z2 = r0 be abstract", "specialinvoke r15 < init > $ r12 $ r13 $ z2", "$ r9 put $ r10 r15", "label $ r5 = net sourceforge pmd lang java multifile signature java operation signature pool", "$ r6 = java lang integer value of i0", "$ r7 = $ r5 get $ r6", "$ r8 = net sourceforge pmd lang java multifile signature java operation signature $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = net sourceforge pmd lang java typeresolution p m d a s m class loader get instance r1", "r5 = net sourceforge pmd lang java qname qualify name resolver r0", "r6 = java lang class loader $ r3", "r5 class loader = r6", "r7 = net sourceforge pmd lang java ast java parser visitor r0", "r2 jjt accept r7 null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r2 find descendant of type class \\ `` lnet sourceforge pmd lang java ast a s t field declaration \\ ``", "if r3 == null goto label3", "r4 = r3 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label3", "$ r7 = r4 next", "r5 = net sourceforge pmd lang java ast a s t field declaration $ r7", "$ r8 = r5 get first descendant of type class \\ `` lnet sourceforge pmd lang java ast a s t variable declarator id \\ ``", "r6 = net sourceforge pmd lang java ast a s t variable declarator id $ r8", "if r6 == null goto label2", "$ z1 = r6 have image equal to r1", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i2 = 0", "i3 = 0", "label $ i0 = r1 get num child", "if i3 > = $ i0 goto label2", "$ r4 = r1 get child i3", "$ r5 = net sourceforge pmd lang java ast java node $ r4", "r8 = net sourceforge pmd lang java ast java parser visitor r0", "$ r6 = $ r5 jjt accept r8 r2", "r7 = java lang integer $ r6", "$ i1 = r7 int value", "i2 = i2 + $ i1", "i3 = i3 + 1", "goto label1", "if i3 > = $ i0 goto label2", "label i4 = i2 + 1", "$ r3 = java lang integer value of i4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sourceforge pmd lang java ast comment util javadoc tag in r1", "$ r3 = new java util array list", "$ r4 = r2 value", "specialinvoke $ r3 < init > $ r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = net sourceforge pmd lang java rule performance avoid instantiate object in loops rule r0", "$ z0 = specialinvoke r3 not inside loop r1", "if $ z0 == 0 goto label1", "return r2", "if $ z0 == 0 goto label1", "label r4 = net sourceforge pmd lang java rule performance avoid instantiate object in loops rule r0", "$ z1 = specialinvoke r4 fourth parent not throw r1", "if $ z1 == 0 goto label2", "r5 = net sourceforge pmd lang java rule performance avoid instantiate object in loops rule r0", "$ z2 = specialinvoke r5 fourth parent not return r1", "if $ z2 == 0 goto label2", "r6 = net sourceforge pmd lang java rule performance avoid instantiate object in loops rule r0", "$ z3 = specialinvoke r6 not array assignment r1", "if $ z3 == 0 goto label2", "r7 = net sourceforge pmd lang java rule performance avoid instantiate object in loops rule r0", "$ z4 = specialinvoke r7 not collection access r1", "if $ z4 == 0 goto label2", "r8 = net sourceforge pmd lang java rule performance avoid instantiate object in loops rule r0", "$ z5 = specialinvoke r8 not break follow r1", "if $ z5 == 0 goto label2", "r9 = net sourceforge pmd lang java rule performance avoid instantiate object in loops rule r0", "r10 = net sourceforge pmd lang ast node r1", "r9 add violation r2 r10", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = org postgresql core cache query r0", "$ i0 = r1 execute count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org postgresql core visible buffer input stream r0", "$ i0 = r1 index", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org postgresql core visible buffer input stream r0", "i4 = r4 index", "label r5 = org postgresql core visible buffer input stream r0", "$ i5 = r5 end index", "if i4 > = $ i5 goto label2", "r6 = org postgresql core visible buffer input stream r0", "$ r2 = r6 buffer", "$ i0 = i4", "i4 = i4 + 1", "$ b1 = $ r2 [ $ i0 ]", "if $ b1 ! = 0 goto label1", "r7 = org postgresql core visible buffer input stream r0", "$ i2 = r7 index", "$ i3 = i4 - $ i2", "return $ i3", "if i4 > = $ i5 goto label2", "label r8 = org postgresql core visible buffer input stream r0", "$ z0 = specialinvoke r8 read more 1024", "if $ z0 ! = 0 goto label3", "r3 = new java io e o f exception", "specialinvoke r3 < init >", "throw r3", "if $ z0 ! = 0 goto label3", "label r9 = org postgresql core visible buffer input stream r0", "i4 = r9 index", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new java sql s q l feature not support exception", "$ r3 = newarray java lang object [ 1 ]", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = r0 get name", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 append \\ `` \\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 to string", "$ r3 [ 0 ] = $ r9", "$ r10 = org postgresql util gt tr \\ `` method { 0 } be not yet implement \\", "$ r11 = org postgresql util p s q l state not_implemented", "$ r12 = $ r11 get state", "specialinvoke $ r2 < init > $ r10 $ r12", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r15 = new org postgresql util p gtokenizer", "specialinvoke r15 < init > r1 44", "$ i0 = r15 get size", "if $ i0 == 2 goto label1", "r16 = new org postgresql util p s q l exception", "$ r11 = newarray java lang object [ 2 ]", "r19 = org postgresql geometric p gbox r0", "$ r12 = r19 type", "$ r11 [ 0 ] = $ r12", "$ r11 [ 1 ] = r1", "$ r13 = org postgresql util gt tr \\ `` conversion to type { 0 } fail { 1 } \\", "$ r14 = org postgresql util p s q l state data_type_mismatch", "specialinvoke r16 < init > $ r13 $ r14", "r20 = java lang throwable r16", "throw r20", "if $ i0 == 2 goto label1", "label r21 = org postgresql geometric p gbox r0", "$ r5 = r21 point", "r17 = new org postgresql geometric p gpoint", "$ r6 = r15 get token 0", "specialinvoke r17 < init > $ r6", "$ r5 [ 0 ] = r17", "r22 = org postgresql geometric p gbox r0", "$ r8 = r22 point", "r18 = new org postgresql geometric p gpoint", "$ r9 = r15 get token 1", "specialinvoke r18 < init > $ r9", "$ r8 [ 1 ] = r18", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i1 = r1 x", "$ i0 = r1 y", "r2 = org postgresql geometric p gpoint r0", "r2 set location $ i1 $ i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "l0 = java lang system current time millis", "$ r4 = org postgresql hostchooser global host status tracker host status map", "entermonitor $ r4", "label $ r5 = org postgresql hostchooser global host status tracker host status map", "$ r6 = $ r5 get r0", "r11 = org postgresql hostchooser global host status tracker $ host spec status $ r6", "if r11 ! = null goto label2", "$ r7 = new org postgresql hostchooser global host status tracker $ host spec status", "specialinvoke $ r7 < init > r0", "r11 = $ r7", "$ r8 = org postgresql hostchooser global host status tracker host status map", "$ r8 put r0 $ r7", "label r11 status = r1", "r11 last updated = l0", "exitmonitor $ r4", "label goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r21 = org postgresql jdbc abstract blob clob r0", "r21 check free", "r22 = org postgresql jdbc abstract blob clob r0", "$ r2 = r22 conn", "$ r1 = org postgresql core server version v8_3", "r23 = org postgresql core version $ r1", "$ z0 = $ r2 have minimum server version r23", "if $ z0 ! = 0 goto label1", "r18 = new org postgresql util p s q l exception", "$ r15 = newarray java lang object [ 0 ]", "$ r16 = org postgresql util gt tr \\ `` truncation of large object be only implement in 8 3 and late server \\", "$ r17 = org postgresql util p s q l state not_implemented", "specialinvoke r18 < init > $ r16 $ r17", "r24 = java lang throwable r18", "throw r24", "if $ z0 ! = 0 goto label1", "label $ b1 = l0 cmp 0l", "if $ b1 > = 0 goto label2", "r19 = new org postgresql util p s q l exception", "$ r11 = newarray java lang object [ 0 ]", "$ r12 = org postgresql util gt tr \\ `` can not truncate lob to a negative length \\", "$ r13 = org postgresql util p s q l state invalid_parameter_value", "specialinvoke r19 < init > $ r12 $ r13", "r25 = java lang throwable r19", "throw r25", "if $ b1 > = 0 goto label2", "label $ b2 = l0 cmp 2147483647l", "if $ b2 < = 0 goto label4", "r26 = org postgresql jdbc abstract blob clob r0", "$ z1 = r26 support64bit", "if $ z1 == 0 goto label3", "r27 = org postgresql jdbc abstract blob clob r0", "$ r9 = r27 get lo 1", "$ r9 truncate64 l0", "goto label5", "label return", "if $ z1 == 0 goto label3", "label r20 = new org postgresql util p s q l exception", "$ r5 = newarray java lang object [ 1 ]", "$ r6 = java lang integer value of 2147483647", "$ r5 [ 0 ] = $ r6", "$ r7 = org postgresql util gt tr \\ `` postgre s q l l o b can only index to { 0 } \\", "$ r8 = org postgresql util p s q l state invalid_parameter_value", "specialinvoke r20 < init > $ r7 $ r8", "r28 = java lang throwable r20", "throw r28", "if $ b2 < = 0 goto label4", "label r29 = org postgresql jdbc abstract blob clob r0", "$ r3 = r29 get lo 1", "$ i3 = int l0", "$ r3 truncate $ i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [], [49], [50], [51], [52], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "$ i2 = lengthof r1", "$ l3 = long $ i2", "r5 = org postgresql jdbc abstract blob clob r0", "r5 assert position l0 $ l3", "i7 = 1", "i8 = 0", "l9 = -1l", "i10 = 1", "r4 = new org postgresql jdbc abstract blob clob $ l o iterator", "$ l4 = l0 - 1l", "r6 = org postgresql jdbc abstract blob clob r0", "specialinvoke r4 < init > r6 $ l4", "label $ z0 = r4 have next", "if $ z0 == 0 goto label5", "b1 = org postgresql jdbc abstract blob clob $ l o iterator access $ 000 r4", "$ b5 = r1 [ i8 ]", "if b1 ! = $ b5 goto label3", "if i8 ! = 0 goto label2", "i10 = i7", "label i8 = i8 + 1", "$ i6 = lengthof r1", "if i8 ! = $ i6 goto label4", "l9 = long i10", "goto label5", "label return l9", "if i8 ! = $ i6 goto label4", "label i7 = i7 + 1", "goto label1", "if b1 ! = $ b5 goto label3", "label i8 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [], [32], []]}
{"nodes": ["r0 = @ this", "r7 = org postgresql jdbc abstract blob clob r0", "$ r1 = r7 sub l o", "if $ r1 ! = null goto label1", "r6 = new org postgresql util p s q l exception", "$ r3 = newarray java lang object [ 0 ]", "$ r4 = org postgresql util gt tr \\ `` free be call on this lob previously\\", "$ r5 = org postgresql util p s q l state object_not_in_state", "specialinvoke r6 < init > $ r4 $ r5", "r8 = java lang throwable r6", "throw r8", "if $ r1 ! = null goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org postgresql jdbc escape function two argument function call \\ `` pow \\", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org postgresql jdbc escape functions2 single argument function call r0 \\ `` chr \\", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = r1 size", "if i0 == 2 goto label1", "if i0 == 3 goto label1", "r6 = new org postgresql util p s q l exception", "$ r3 = newarray java lang object [ 1 ]", "$ r3 [ 0 ] = \\ `` substring\\ ``", "$ r4 = org postgresql util gt tr \\ `` { 0 } function take two or three argument \\", "$ r5 = org postgresql util p s q l state syntax_error", "specialinvoke r6 < init > $ r4 $ r5", "r7 = java lang throwable r6", "throw r7", "if i0 == 3 goto label1", "label org postgresql jdbc escape functions2 append call r0 \\ `` substr \\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "s0 = @ parameter3", "r4 = @ parameter4", "$ r7 = new com sun jna ptr int by reference", "specialinvoke $ r7 < init > 2048", "$ i2 = $ r7 get value", "r6 = newarray char [ $ i2 ]", "$ r14 = org postgresql sspi ntdsapi instance", "$ r15 = new com sun jna w string", "specialinvoke $ r15 < init > r1", "$ r16 = new com sun jna w string", "specialinvoke $ r16 < init > r2", "if r3 ! = null goto label1", "$ r17 = null", "goto label2", "label if r4 ! = null goto label3", "$ r18 = null", "goto label4", "label i1 = $ r14 d make spn w $ r15 $ r16 $ r17 s0 $ r18 $ r7 r6", "if i1 == 0 goto label5", "$ r9 = new java lang runtime exception", "$ r10 = new java lang string builder", "specialinvoke $ r10 < init >", "$ r11 = $ r10 append \\ `` ntdsapi d make spn call fail with \\ ``", "$ r12 = $ r11 append i1", "$ r13 = $ r12 to string", "specialinvoke $ r9 < init > $ r13", "throw $ r9", "if i1 == 0 goto label5", "label $ r8 = new java lang string", "$ i3 = $ r7 get value", "specialinvoke $ r8 < init > r6 0 $ i3", "return $ r8", "label if r4 ! = null goto label3", "label $ r18 = new com sun jna w string", "specialinvoke $ r18 < init > r4", "if r3 ! = null goto label1", "label $ r17 = new com sun jna w string", "specialinvoke $ r17 < init > r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [], [37], [38], [39], [40], [41], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ b1 = r0 [ i0 ]", "if $ b1 ! = 1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b1 ! = 1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org postgresql util p gobject", "if $ z0 == 0 goto label4", "$ r3 = org postgresql util p gobject r1", "r2 = $ r3 get value", "if r2 ! = null goto label3", "r6 = org postgresql util p gobject r0", "$ r5 = r6 get value", "if $ r5 ! = null goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ r5 ! = null goto label1", "label $ z2 = 0", "if r2 ! = null goto label3", "label r7 = org postgresql util p gobject r0", "$ r4 = r7 get value", "$ z1 = r2 equal $ r4", "return $ z1", "if $ z0 == 0 goto label4", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org postgresql util p g time r0", "r2 calendar = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new org postgresql xa p g x a exception", "$ r3 = newarray java lang object [ 1 ]", "$ r3 [ 0 ] = r1", "$ r4 = org postgresql util gt tr \\ `` heuristic commit rollback not support forget xid= { 0 } \\", "specialinvoke r5 < init > $ r4 -4", "r6 = java lang throwable r5", "throw r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "$ r1 = org postgresql xa recover xid xid to string r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org postgresql core encode interner", "$ r1 put string r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org postgresql core tuple r0", "$ r1 = specialinvoke r2 copy 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r3 = org postgresql core v3 copy in impl r0", "$ r2 = r3 get query executor", "$ r2 write to copy r0 r1 i0 i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org postgresql p g property r0", "$ r1 = r2 description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org postgresql replication replication slot info r0", "$ r1 = r2 replication type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org powermock api mockito internal expectation default constructor expectation setup", "specialinvoke r2 < init > r0", "r3 = org powermock api mockito expectation constructor expectation setup r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org powermock api mockito power mockito powermockito_core", "$ r2 = $ r1 do answer r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = java lang object [ ] r1", "$ r3 = org powermock reflect internal whitebox impl find unique constructor or throw exception r0 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r9 = new java lang illegal argument exception", "specialinvoke $ r9 < init > \\ `` accessible object can not be null\\ ``", "throw $ r9", "if r0 ! = null goto label1", "label i0 = lengthof r0", "i1 = 0", "label if i1 > = i0 goto label6", "r2 = r0 [ i1 ]", "$ z0 = r2 instanceof java lang reflect constructor", "if $ z0 == 0 goto label3", "$ r7 = newarray java lang reflect constructor [ 1 ]", "$ r8 = java lang reflect constructor r2", "$ r7 [ 0 ] = $ r8", "org powermock api support suppress code suppress constructor $ r7", "goto label5", "label i1 = i1 + 1", "goto label2", "if $ z0 == 0 goto label3", "label $ z1 = r2 instanceof java lang reflect field", "if $ z1 == 0 goto label4", "$ r5 = newarray java lang reflect field [ 1 ]", "$ r6 = java lang reflect field r2", "$ r5 [ 0 ] = $ r6", "org powermock api support suppress code suppress field $ r5", "if $ z1 == 0 goto label4", "label $ z2 = r2 instanceof java lang reflect method", "if $ z2 == 0 goto label5", "$ r3 = newarray java lang reflect method [ 1 ]", "$ r4 = java lang reflect method r2", "$ r3 [ 0 ] = $ r4", "org powermock api support suppress code suppress method $ r3", "label if i1 > = i0 goto label6", "label return"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org powermock api support membermodification strategy impl method replace strategy impl", "specialinvoke r2 < init > r0", "r3 = org powermock api support membermodification strategy method replace strategy r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org powermock api support method proxy assert invocation handler not null r1", "org powermock core mock repository put method proxy r0 r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = lengthof r0", "i1 = 0", "label if i1 > = i0 goto label4", "r2 = r0 [ i1 ]", "r3 = r2", "label if r3 == class \\ `` ljava lang object \\ `` goto label3", "org powermock api support suppress code suppress constructor r3 0", "r3 = r3 get superclass", "goto label2", "label if r3 == class \\ `` ljava lang object \\ `` goto label3", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ parameter0", "i0 = lengthof r0", "i1 = 0", "label if i1 > = i0 goto label2", "r2 = r0 [ i1 ]", "org powermock api support suppress code suppress method r2 0", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org powermock core mock repository suppress field type", "$ r1 add r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "label r13 = org powermock mockpolicies support log policy support r0", "$ r4 = r13 get type r1 r3", "$ r5 = newarray java lang string [ 1 ]", "$ r5 [ 0 ] = r2", "$ r6 = org powermock reflect whitebox get method $ r4 $ r5", "label return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r5 = new org powermock reflect internal matcherstrategies assignable from field type matcher strategy", "specialinvoke r5 < init > r1", "r6 = org powermock reflect internal matcherstrategies field matcher strategy r5", "$ r4 = org powermock reflect internal whitebox impl find field in hierarchy r0 r6", "org powermock reflect internal whitebox impl set field r0 r2 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "r15 = new java lang illegal argument exception", "specialinvoke r15 < init > \\ `` you must specify a class in order to get the method \\ ``", "throw r15", "if r0 ! = null goto label1", "label r16 = new java util link hash set", "specialinvoke r16 < init >", "r14 = r0", "label if r14 == null goto label5", "r2 = r14", "r17 = new org powermock reflect internal whitebox impl $ 3", "specialinvoke r17 < init > r14", "r18 = java security privilege action r17", "$ r11 = java security access controller do privilege r18", "r3 = java lang reflect method [ ] $ r11", "i0 = lengthof r3", "i2 = 0", "label if i2 > = i0 goto label4", "r5 = r3 [ i2 ]", "r5 set accessible 1", "r16 add r5", "i2 = i2 + 1", "goto label3", "label if i2 > = i0 goto label4", "label $ r12 = r2 get method", "java util collection add all r16 $ r12", "r14 = r14 get superclass", "goto label2", "label if r14 == null goto label5", "label $ i1 = r16 size", "$ r7 = newarray java lang reflect method [ $ i1 ]", "$ r8 = r16 to array $ r7", "$ r9 = java lang reflect method [ ] $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r5 = new java lang illegal argument exception", "specialinvoke $ r5 < init > \\ `` type can not be null\\ ``", "throw $ r5", "if r0 ! = null goto label1", "label $ r1 = org powermock reflect internal whitebox impl proxy framework", "if $ r1 == null goto label2", "$ r3 = org powermock reflect internal whitebox impl proxy framework", "$ z1 = $ r3 be proxy r0", "if $ z1 == 0 goto label2", "$ r4 = org powermock reflect internal whitebox impl proxy framework", "r6 = $ r4 get unproxied type r0", "goto label4", "label return r6", "if $ z1 == 0 goto label2", "label $ z0 = java lang reflect proxy be proxy class r0", "if $ z0 == 0 goto label3", "$ r2 = r0 get interface", "r6 = $ r2 [ 0 ]", "if $ z0 == 0 goto label3", "label r6 = r0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["z0 = @ parameter0", "r0 = @ parameter1", "r1 = @ parameter2", "if r0 == null goto label1", "if r1 ! = null goto label2", "label $ r3 = new java lang illegal argument exception", "specialinvoke $ r3 < init > \\ `` parameter type can not be null\\ ``", "throw $ r3", "if r1 ! = null goto label2", "label $ i1 = lengthof r0", "$ i0 = lengthof r1", "if $ i1 == $ i0 goto label3", "return 0", "if $ i1 == $ i0 goto label3", "label i5 = 0", "label $ i2 = lengthof r0", "if i5 > = $ i2 goto label7", "$ r4 = r1 [ i5 ]", "r2 = org powermock reflect internal whitebox impl get type $ r4", "if z0 == 0 goto label5", "$ i3 = lengthof r0", "$ i4 = $ i3 - 1", "if i5 ! = $ i4 goto label5", "$ r5 = r2 get component type", "$ r6 = r0 [ i5 ]", "$ z1 = $ r5 be assignable from $ r6", "if $ z1 == 0 goto label5", "return 1", "if $ z1 == 0 goto label5", "label $ r7 = r0 [ i5 ]", "$ z2 = r2 be assignable from $ r7", "if $ z2 ! = 0 goto label6", "label i5 = i5 + 1", "goto label4", "if i5 > = $ i2 goto label7", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [], [35], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r5 = org powermock reflect match field match strategy match", "org powermock reflect internal whitebox impl set internal state from context r0 r1 $ r5", "if r2 == null goto label2", "$ i1 = lengthof r2", "if $ i1 < = 0 goto label2", "i0 = lengthof r2", "i2 = 0", "label if i2 > = i0 goto label2", "r4 = r2 [ i2 ]", "$ r6 = org powermock reflect match field match strategy match", "org powermock reflect internal whitebox impl set internal state from context r0 r4 $ r6", "i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "org powermock reflect internal whitebox impl set internal state r0 r1 r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r5 = org powermock reflect internal whitebox impl invoke method r0 r1 r2 r3 r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org powermock reflect internal whitebox impl invoke method r0 r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org powermock reflect internal whitebox impl get inner class type r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = com google api advice r0", "r1 = r5 description_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google api advice r0", "r6 description_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r5 = com google api auth requirement r0", "r1 = r5 audiences_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google api auth requirement r0", "r6 audiences_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r5 = com google api documentation r0", "r1 = r5 documentation root url_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google api documentation r0", "r6 documentation root url_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = com google api http r0", "$ r1 = r2 rules_", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com google api http body r0", "$ r1 = r2 data_", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = com google api label descriptor r0", "r1 = r5 key_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google api label descriptor r0", "r6 key_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = com google api log descriptor r0", "$ r1 = r2 labels_", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = com google api metric descriptor r0", "r1 = r5 name_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google api metric descriptor r0", "r6 name_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = com google api metric descriptor r0", "$ i0 = r1 metric kind_", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = com google api monitor resource descriptor r0", "r1 = r5 name_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google api monitor resource descriptor r0", "r6 name_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r5 = com google api monitor resource descriptor r0", "r1 = r5 type_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google api monitor resource descriptor r0", "r6 type_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r5 = com google api monitor resource descriptor r0", "r1 = r5 description_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google api monitor resource descriptor r0", "r6 description_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r5 = com google api page r0", "r1 = r5 name_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google api page r0", "r6 name_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = com google api service r0", "$ r1 = r2 config version_", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = com google api service r0", "$ r1 = r2 enums_", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com google api usage r0", "$ r1 = r2 rules_", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com google api usage rule r0", "$ z0 = r1 allow unregistered calls_", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com google api usage rule r0", "$ z0 = r1 skip service control_", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = com google cloud audit audit log r0", "r1 = r5 resource name_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google cloud audit audit log r0", "r6 resource name_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = com google cloud audit audit log r0", "$ r1 = r2 authentication info_", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r5 = com google cloud audit authentication info r0", "r1 = r5 principal email_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google cloud audit authentication info r0", "r6 principal email_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r5 = com google log type http request r0", "r1 = r5 remote ip_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google log type http request r0", "r6 remote ip_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r5 = com google log type http request r0", "r1 = r5 referer_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google log type http request r0", "r6 referer_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = com google longrunning list operation response r0", "$ r1 = r2 operations_", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com google rpc retry info r0", "$ r1 = r2 retry delay_", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = com google type date r0", "$ i0 = r1 year_", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com google type lat lng r0", "$ d0 = r1 latitude_", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com google type time of day r0", "$ i0 = r1 minutes_", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com google type time of day r0", "$ i0 = r1 nanos_", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com google protobuf field mask r0", "$ r1 = r2 paths_", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = com google protobuf utf8 be valid utf8 r0", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "com google protobuf internal check not null r1 \\ `` message type\\ ``", "com google protobuf internal check not null r2 \\ `` schema\\ ``", "r8 = com google protobuf protobuf r0", "$ r5 = r8 schema cache", "$ r6 = $ r5 put r1 r2", "$ r7 = com google protobuf schema $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r5 = com google protobuf repeat field builder r0", "$ r1 = r5 external builder list", "if $ r1 ! = null goto label1", "r4 = new com google protobuf repeat field builder $ builder external list", "r6 = com google protobuf repeat field builder r0", "specialinvoke r4 < init > r6", "r7 = com google protobuf repeat field builder r0", "r7 external builder list = r4", "label r8 = com google protobuf repeat field builder r0", "$ r2 = r8 external builder list", "r9 = java util list $ r2", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new com google protobuf rpc util $ 2", "specialinvoke r2 < init > r0", "r3 = com google protobuf rpc callback r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com google protobuf structural message info r0", "$ r1 = r2 syntax", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r1 = py4j gateway server py4j_logger", "$ r0 = java util log level all", "$ r1 set level $ r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = new java util hash set", "specialinvoke r14 < init >", "r15 = py4j reflection reflection engine r0", "$ r4 = r15 get public static class name r1", "$ r5 = java util array a list $ r4", "r14 add all $ r5", "r16 = py4j reflection reflection engine r0", "$ r6 = r16 get public static field name r1", "$ r7 = java util array a list $ r6", "r14 add all $ r7", "r17 = py4j reflection reflection engine r0", "$ r8 = r17 get public static method name r1", "$ r9 = java util array a list $ r8", "r14 add all $ r9", "$ i0 = r14 size", "$ r10 = newarray java lang string [ $ i0 ]", "$ r11 = r14 to array $ r10", "$ r12 = java lang string [ ] $ r11", "$ r13 = java lang string [ ] $ r12", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index rankeval rank eval spec r0", "$ i0 = r1 max concurrent search", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = java lang thread current thread", "$ r1 = $ r0 get context class loader", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new java util hash set", "$ r3 = java util array a list r1", "specialinvoke r4 < init > $ r3", "r5 = org reflection util configuration builder r0", "r5 scanner = r4", "r6 = org reflection util configuration builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 annotation type", "r7 = org reflection reflection r0", "$ r3 = r7 get constructor annotate with $ r2", "$ r4 = newarray com google common base predicate [ 1 ]", "$ r5 = org reflection reflection utils with annotation r1", "$ r4 [ 0 ] = $ r5", "$ r6 = org reflection reflection utils filter $ r3 $ r4", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r6 = new java util array list", "specialinvoke $ r6 < init >", "r3 = r0 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r7 = r3 next", "r4 = java lang string $ r7", "r5 = org reflection reflection utils for name r4 r1", "if r5 == null goto label2", "$ r6 add r5", "label goto label1", "if $ z0 == 0 goto label3", "label return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org roaringbitmap buffer buffer fast aggregation naive_and r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "i2 = 0", "i3 = 0", "label r3 = org roaringbitmap buffer immutable roar bitmap r0", "$ r1 = r3 high low container", "$ i0 = $ r1 size", "if i3 > = $ i0 goto label2", "r4 = org roaringbitmap buffer immutable roar bitmap r0", "$ r2 = r4 high low container", "$ i1 = $ r2 get cardinality i3", "i2 = i2 + $ i1", "i3 = i3 + 1", "goto label1", "if i3 > = $ i0 goto label2", "label return i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r0 instanceof org roaringbitmap buffer mappeable array container", "if $ z0 == 0 goto label3", "$ z6 = r1 instanceof org roaringbitmap buffer mappeable array container", "if $ z6 == 0 goto label1", "$ r25 = org roaringbitmap buffer mappeable array container r1", "r27 = org roaringbitmap buffer mappeable container r0", "$ r26 = r27 ior $ r25", "return $ r26", "if $ z6 == 0 goto label1", "label $ z7 = r1 instanceof org roaringbitmap buffer mappeable bitmap container", "if $ z7 == 0 goto label2", "$ r23 = org roaringbitmap buffer mappeable bitmap container r1", "$ r22 = org roaringbitmap buffer mappeable array container r0", "$ r24 = $ r23 lazyor $ r22", "return $ r24", "if $ z7 == 0 goto label2", "label $ r20 = org roaringbitmap buffer mappeable run container r1", "$ r19 = org roaringbitmap buffer mappeable array container r0", "$ r21 = $ r20 lazyor $ r19", "return $ r21", "if $ z0 == 0 goto label3", "label $ z1 = r0 instanceof org roaringbitmap buffer mappeable run container", "if $ z1 == 0 goto label6", "$ z4 = r1 instanceof org roaringbitmap buffer mappeable array container", "if $ z4 == 0 goto label4", "$ r17 = org roaringbitmap buffer mappeable run container r0", "$ r16 = org roaringbitmap buffer mappeable array container r1", "$ r18 = $ r17 ilazyor $ r16", "return $ r18", "if $ z4 == 0 goto label4", "label $ z5 = r1 instanceof org roaringbitmap buffer mappeable bitmap container", "if $ z5 == 0 goto label5", "$ r14 = org roaringbitmap buffer mappeable bitmap container r1", "$ r13 = org roaringbitmap buffer mappeable run container r0", "$ r15 = $ r14 lazyor $ r13", "return $ r15", "if $ z5 == 0 goto label5", "label $ r11 = org roaringbitmap buffer mappeable run container r1", "r28 = org roaringbitmap buffer mappeable container r0", "$ r12 = r28 ior $ r11", "return $ r12", "if $ z1 == 0 goto label6", "label $ z2 = r1 instanceof org roaringbitmap buffer mappeable array container", "if $ z2 == 0 goto label7", "$ r9 = org roaringbitmap buffer mappeable bitmap container r0", "$ r8 = org roaringbitmap buffer mappeable array container r1", "$ r10 = $ r9 ilazyor $ r8", "return $ r10", "if $ z2 == 0 goto label7", "label $ z3 = r1 instanceof org roaringbitmap buffer mappeable bitmap container", "if $ z3 == 0 goto label8", "$ r6 = org roaringbitmap buffer mappeable bitmap container r0", "$ r5 = org roaringbitmap buffer mappeable bitmap container r1", "$ r7 = $ r6 ilazyor $ r5", "return $ r7", "if $ z3 == 0 goto label8", "label $ r3 = org roaringbitmap buffer mappeable bitmap container r0", "$ r2 = org roaringbitmap buffer mappeable run container r1", "$ r4 = $ r3 ilazyor $ r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [], [44], [45], [46], [47], [48], [49], [], [51], [52], [53], [54], [55], [56], [], [58], [59], [60], [61], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ i2 = i1 - i0", "r6 = org roaringbitmap buffer mutable roar array r0", "r6 extend array $ i2", "i8 = i0", "label if i8 > = i1 goto label2", "r7 = org roaringbitmap buffer mutable roar array r0", "$ r2 = r7 key", "r8 = org roaringbitmap buffer mutable roar array r0", "$ i3 = r8 size", "$ s4 = r1 get key at index i8", "$ r2 [ $ i3 ] = $ s4", "r9 = org roaringbitmap buffer mutable roar array r0", "$ r3 = r9 value", "r10 = org roaringbitmap buffer mutable roar array r0", "$ i5 = r10 size", "$ r4 = r1 get container at index i8", "$ r5 = $ r4 clone", "$ r3 [ $ i5 ] = $ r5", "r11 = org roaringbitmap buffer mutable roar array r0", "$ i6 = r11 size", "$ i7 = $ i6 + 1", "r12 = org roaringbitmap buffer mutable roar array r0", "r12 size = $ i7", "i8 = i8 + 1", "goto label1", "label if i8 > = i1 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com rometools utils string to lower case r1", "r12 = com rometools rome feed atom content r0", "r12 mode = $ r2", "if r1 == null goto label1", "$ r9 = com rometools rome feed atom content mode", "$ z0 = $ r9 contain r1", "if $ z0 ! = 0 goto label2", "label r11 = new java lang illegal argument exception", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r5 = r10 append \\ `` invalid mode [ \\ ``", "$ r6 = $ r5 append r1", "$ r7 = $ r6 append \\ `` ] \\ ``", "$ r8 = $ r7 to string", "specialinvoke r11 < init > $ r8", "throw r11", "if $ z0 ! = 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed atom entry r0", "r2 alternate link = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed atom entry r0", "r2 id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed atom entry r0", "r2 title = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = com rometools rome feed atom fee r0", "$ r1 = r4 title", "if $ r1 == null goto label1", "r5 = com rometools rome feed atom fee r0", "$ r2 = r5 title", "$ r3 = $ r2 get value", "return $ r3", "if $ r1 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed atom fee r0", "r2 entry = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed atom person r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed atom person r0", "r2 email = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = com rometools rome feed module d c module impl r0", "$ r1 = r4 identifier", "$ r2 = com rometools utils list first entry $ r1", "$ r3 = java lang string $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = com rometools rome feed module d c module impl r0", "$ r1 = r4 coverage", "$ r2 = com rometools utils list first entry $ r1", "$ r3 = java lang string $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com rometools utils list create r1", "r3 = com rometools rome feed module d c module impl r0", "r3 coverage = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com rometools utils date copy r1", "r3 = com rometools rome feed module sy module impl r0", "r3 update base = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed r channel r0", "$ r1 = r2 uri", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed r channel r0", "r2 image = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = com rometools rome feed r cloud r0", "$ i0 = r1 port", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed r cloud r0", "$ r1 = r2 register procedure", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed r image r0", "r2 title = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed r image r0", "$ r1 = r2 width", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed r item r0", "r2 title = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed r item r0", "r2 content = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed r item r0", "$ r1 = r2 author", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = com rometools rome feed r item r0", "$ r1 = r3 foreign markup", "$ r2 = com rometools utils list create when null $ r1", "r4 = com rometools rome feed r item r0", "r4 foreign markup = $ r2", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed synd synd content impl r0", "$ r1 = r2 mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed synd synd entry impl r0", "r2 foreign markup = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed synd synd feed impl r0", "$ r1 = r2 uri", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com rometools rome feed synd impl u r i normalizer normalize r1", "r3 = com rometools rome feed synd synd feed impl r0", "r3 uri = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed synd synd feed impl r0", "$ r1 = r2 title", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = com rometools rome feed synd synd feed impl r0", "$ r1 = specialinvoke r3 get d c module", "$ r2 = $ r1 get right", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed synd synd feed impl r0", "$ r1 = r2 icon", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed synd synd person impl r0", "r2 module = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed wire feed r0", "$ r1 = r2 encode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed wire feed r0", "$ r1 = r2 style sheet", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = new org jdom2 element", "r8 = com rometools rome io impl d c module generator r0", "$ r5 = specialinvoke r8 get d c namespace", "specialinvoke r7 < init > r1 $ r5", "r7 add content r2", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r21 = new java util array list", "specialinvoke r21 < init >", "r3 = r1 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label6", "$ r11 = r3 next", "r4 = org jdom2 element $ r11", "r24 = com rometools rome io impl d c module parser r0", "$ r12 = specialinvoke r24 get r d f namespace", "r5 = r4 get child \\ `` description\\", "if r5 == null goto label4", "r25 = com rometools rome io impl d c module parser r0", "r19 = r25 get taxonomy r5", "r26 = com rometools rome io impl d c module parser r0", "$ r15 = specialinvoke r26 get r d f namespace", "r6 = r5 get child \\ `` value\\", "r7 = r6 iterator", "label $ z2 = r7 have next", "if $ z2 == 0 goto label3", "$ r16 = r7 next", "r8 = org jdom2 element $ r16", "r22 = new com rometools rome feed module d c subject impl", "specialinvoke r22 < init >", "r27 = com rometools rome feed module d c subject r22", "r27 set taxonomy uri r19", "$ r18 = r8 get text", "r28 = com rometools rome feed module d c subject r22", "r28 set value $ r18", "r21 add r22", "goto label2", "if $ z2 == 0 goto label3", "label goto label5", "label goto label1", "if r5 == null goto label4", "label r23 = new com rometools rome feed module d c subject impl", "specialinvoke r23 < init >", "$ r14 = r4 get text", "r29 = com rometools rome feed module d c subject r23", "r29 set value $ r14", "r21 add r23", "if $ z0 == 0 goto label6", "label return r21"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r1 get title", "if r3 == null goto label1", "r12 = com rometools rome io impl r s s090 generator r0", "$ r10 = r12 generate simple element \\ `` title\\", "r13 = org jdom2 content $ r10", "r2 add content r13", "label r4 = r1 get link", "if r4 == null goto label2", "r14 = com rometools rome io impl r s s090 generator r0", "$ r8 = r14 generate simple element \\ `` link\\", "r15 = org jdom2 content $ r8", "r2 add content r15", "label r5 = r1 get description", "if r5 == null goto label3", "r16 = com rometools rome io impl r s s090 generator r0", "$ r6 = r16 generate simple element \\ `` description\\", "r17 = org jdom2 content $ r6", "r2 add content r17", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "$ r1 = org jdom2 namespace get namespace \\ `` http purl org rss 1 0 \\ ``", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r10 = com rometools rome io wire feed output r0", "r2 = r10 output j dom r1", "r3 = r1 get encode", "if z0 == 0 goto label1", "r8 = org jdom2 output format get pretty format", "goto label2", "label if r3 == null goto label3", "r8 set encode r3", "label r9 = new org jdom2 output x m l outputter", "specialinvoke r9 < init > r8", "$ r6 = r9 output string r2", "return $ r6", "if z0 == 0 goto label1", "label r8 = org jdom2 output format get compact format"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["$ r1 = rx completable complete", "$ r2 = $ r1 on subscribe", "r0 = rx plugins rx java hook on create $ r2", "$ r3 = rx completable complete", "$ r4 = $ r3 on subscribe", "if r0 ! = $ r4 goto label1", "$ r6 = rx completable complete", "return $ r6", "if r0 ! = $ r4 goto label1", "label $ r5 = new rx completable", "specialinvoke $ r5 < init > r0 0", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "$ r2 = rx scheduler scheduler computation", "r4 = rx completable r0", "$ r3 = r4 delay l0 r1 $ r2 0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = rx function action empty", "$ r3 = rx function action empty", "$ r4 = rx function action empty", "$ r5 = rx function action empty", "r7 = rx completable r0", "r8 = rx function action1 $ r2", "r9 = rx function action0 $ r3", "r10 = rx function action0 $ r4", "r11 = rx function action0 $ r5", "$ r6 = r7 do on lifecycle r8 r1 r9 r10 r11", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = rx function action empty", "$ r3 = rx function action empty", "$ r4 = rx function action empty", "$ r5 = rx function action empty", "r7 = rx completable r0", "r8 = rx function action1 $ r2", "r9 = rx function action1 $ r3", "r10 = rx function action0 $ r4", "r11 = rx function action0 $ r5", "$ r6 = r7 do on lifecycle r8 r9 r10 r1 r11", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r4 = new rx subscription multiple assignment subscription", "specialinvoke r4 < init >", "r5 = new rx completable $ 27", "r6 = rx completable r0", "specialinvoke r5 < init > r6 r4", "r7 = rx completable r0", "r8 = rx completable subscriber r5", "r7 unsafe subscribe r8", "r9 = rx subscription r4", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r4 = new rx subscription multiple assignment subscription", "specialinvoke r4 < init >", "r5 = new rx completable $ 27", "r6 = rx completable r0", "specialinvoke r5 < init > r6 r4", "r7 = rx completable r0", "r8 = rx completable subscriber r5", "r7 unsafe subscribe r8", "r9 = rx subscription r4", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["l0 = @ parameter0", "$ b1 = l0 cmp 0l", "if $ b1 > = 0 goto label1", "$ r0 = new java lang illegal argument exception", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` n > = 0 require but it be \\ ``", "$ r3 = $ r2 append l0", "$ r4 = $ r3 to string", "specialinvoke $ r0 < init > $ r4", "throw $ r0", "if $ b1 > = 0 goto label1", "label $ b2 = l0 cmp 0l", "if $ b2 == 0 goto label2", "$ z0 = 1", "goto label3", "label return $ z0", "if $ b2 == 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = rx internal scheduler schedule action r0", "$ r3 = r5 cancel", "r4 = new rx internal scheduler schedule action $ future completer", "r6 = rx internal scheduler schedule action r0", "specialinvoke r4 < init > r6 r1", "r7 = rx subscription r4", "$ r3 add r7", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = rx internal util backpressure drain manager r0", "r1 terminate = 1", "r2 = rx internal util backpressure drain manager r0", "r2 drain", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ i0 = rx internal util platform dependent android_api_version", "return $ i0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = rx internal util scalar synchronous observable r0", "$ r1 = r2 t", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = new rx single", "r4 = rx observable r0", "$ r2 = rx internal operator on subscribe single create r4", "r5 = rx single $ on subscribe $ r2", "specialinvoke r3 < init > r5", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = rx internal operator on subscribe amb amb r0", "$ r2 = rx observable unsafe create $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r5 = rx internal operator on subscribe amb amb r0 r1 r2 r3 r4", "$ r6 = rx observable unsafe create $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = newarray rx observable [ 2 ]", "$ r3 [ 0 ] = r0", "$ r3 [ 1 ] = r1", "$ r4 = java util array a list $ r3", "$ r5 = rx function function from func r2", "$ r6 = rx observable combine late $ r4 $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "rx completable require non null r0", "if i0 > = 1 goto label1", "r10 = new java lang illegal argument exception", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r6 = r9 append \\ `` prefetch > 0 require but it be \\ ``", "$ r7 = $ r6 append i0", "$ r8 = $ r7 to string", "specialinvoke r10 < init > $ r8", "throw r10", "if i0 > = 1 goto label1", "label r11 = new rx internal operator completable on subscribe concat", "specialinvoke r11 < init > r0 i0", "r12 = rx completable $ on subscribe r11", "$ r3 = rx completable create r12", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r4 = rx observable just r0 r1 r2 r3", "$ r5 = rx observable concat $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r4 = rx observable just r0 r1 r2 r3", "$ r5 = rx observable concat delay error $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = rx completable merge0 r0 2147483647 0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = rx completable merge0 r0 i0 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = rx completable merge0 r0 2147483647 1", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "r0 = @ parameter2", "$ r1 = rx observable range i0 i1", "$ r2 = $ r1 subscribe on r0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = rx observable r0", "$ r1 = r2 buffer i0 i0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "if i0 > = 1 goto label1", "r10 = new java lang illegal argument exception", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r6 = r9 append \\ `` capacity hint > 0 require but it be \\ ``", "$ r7 = $ r6 append i0", "$ r8 = $ r7 to string", "specialinvoke r10 < init > $ r8", "throw r10", "if i0 > = 1 goto label1", "label r11 = new rx internal operator operator eager concat map", "specialinvoke r11 < init > r1 i0 2147483647", "r12 = rx observable r0", "r13 = rx observable $ operator r11", "$ r3 = r12 lift r13", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r3 = rx observable r0", "$ r1 = r3 take 1", "$ r2 = $ r1 single", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = rx observable r0", "$ r1 = r3 take last 1", "$ r2 = $ r1 single", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = rx observable r0", "$ r2 = rx observable merge r3 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = rx observable r0", "$ r1 = rx internal operator on subscribe redo repeat r2", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new rx internal operator operator single", "specialinvoke r4 < init > r1", "r5 = rx observable r0", "r6 = rx observable $ operator r4", "$ r3 = r5 lift r6", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r3 = rx observable r0", "$ r2 = r3 sample l0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = rx scheduler scheduler computation", "r3 = rx observable r0", "$ r2 = r3 time interval $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = new rx internal operator operator to observable sorted list", "specialinvoke r3 < init > 10", "r4 = rx observable r0", "r5 = rx observable $ operator r3", "$ r2 = r4 lift r5", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = new rx observer test subscriber", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "$ r1 = new rx observer test subscriber", "specialinvoke $ r1 < init > r0 l0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = rx observer test subscriber r0", "$ i0 = r1 value count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = rx plugins rx java hook on completable create", "if r1 == null goto label1", "$ r2 = r1 call r0", "$ r3 = rx completable $ on subscribe $ r2", "return $ r3", "if r1 == null goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = rx plugins rx java hook lockdown", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label rx plugins rx java hook on error = r0"], "adj": [[1], [2], [3], [], [5], []]}
{"nodes": ["$ r0 = rx plugins rx java hook on generic schedule executor service", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = rx scheduler scheduler get instance", "r0 start instance", "entermonitor r0", "label $ r4 = rx internal scheduler generic schedule executor service instance", "$ r4 start", "exitmonitor r0", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "r6 = @ parameter6", "$ r7 = rx single a observable r0", "$ r8 = rx single a observable r1", "$ r9 = rx single a observable r2", "$ r10 = rx single a observable r3", "$ r11 = rx single a observable r4", "$ r12 = rx single a observable r5", "$ r13 = rx single a observable r6", "$ r14 = rx observable concat $ r7 $ r8 $ r9 $ r10 $ r11 $ r12 $ r13", "return $ r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "r6 = @ parameter6", "r7 = @ parameter7", "$ r8 = rx single a observable r0", "$ r9 = rx single a observable r1", "$ r10 = rx single a observable r2", "$ r11 = rx single a observable r3", "$ r12 = rx single a observable r4", "$ r13 = rx single a observable r5", "$ r14 = rx single a observable r6", "$ r15 = rx single a observable r7", "$ r16 = rx observable concat $ r8 $ r9 $ r10 $ r11 $ r12 $ r13 $ r14 $ r15", "return $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "$ r6 = rx single a observable r0", "$ r7 = rx single a observable r1", "$ r8 = rx single a observable r2", "$ r9 = rx single a observable r3", "$ r10 = rx single a observable r4", "$ r11 = rx single a observable r5", "$ r12 = rx observable merge $ r6 $ r7 $ r8 $ r9 $ r10 $ r11", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = rx internal util utility function identity", "$ r2 = r0 flat map single $ r1 0 i0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = rx single r0", "$ r2 = rx single concat r3 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = rx subject async subject r0", "r1 = r4 last value", "r5 = rx subject async subject r0", "$ r3 = r5 state", "r2 = $ r3 get late", "$ z0 = rx internal operator notification lite be error r2", "if $ z0 ! = 0 goto label1", "$ z1 = rx internal operator notification lite be next r1", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["$ r0 = rx subject unicast subject create 16", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r3 = rx subscription multiple assignment subscription r0", "$ r1 = r3 state", "$ r2 = $ r1 current", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = net sf saxon augment source r0", "$ r1 = r2 option", "$ r1 set strip space i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = net sf saxon augment source r0", "$ r1 = r2 option", "$ r1 set please close after use z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i0 = @ parameter0", "if i0 > = 65536 goto label2", "$ r0 = net sf saxon charcode x m l character data data", "$ b1 = $ r0 [ i0 ]", "$ b2 = $ b1 & 16", "if $ b2 == 0 goto label1", "$ z0 = 1", "goto label4", "label return $ z0", "if $ b2 == 0 goto label1", "label $ z0 = 0", "if i0 > = 65536 goto label2", "label if 65536 > i0 goto label3", "if i0 > 983039 goto label3", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["b0 = @ parameter0", "$ r1 = new net sf saxon sort int range set", "specialinvoke $ r1 < init >", "i4 = 0", "label if i4 > = 65536 goto label3", "$ r2 = net sf saxon charcode x m l character data data", "$ b2 = $ r2 [ i4 ]", "$ b3 = $ b2 & b0", "if $ b3 == 0 goto label2", "$ r1 add i4", "label i4 = i4 + 1", "goto label1", "label if i4 > = 65536 goto label3", "label $ b1 = b0 & 48", "if $ b1 == 0 goto label4", "$ r1 add range 65536 983039", "label return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon controller r0", "r1 there have be an explicit result document = 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = net sf saxon controller r0", "r4 user u r i resolver = r1", "$ z0 = r1 instanceof net sf saxon standard u r i resolver", "if $ z0 == 0 goto label1", "$ r2 = net sf saxon standard u r i resolver r1", "r5 = net sf saxon controller r0", "$ r3 = r5 get configuration", "$ r2 set configuration $ r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = net sf saxon controller r0", "r1 tree model = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = net sf saxon controller r0", "$ r3 = r4 source document pool", "$ r3 add r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon controller r0", "r2 executable = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon controller r0", "r2 class loader = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon event builder r0", "r2 base u r i = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = r2 make pipeline configuration", "$ r4 = net sf saxon event builder build r0 r1 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = net sf saxon event content handler proxy r0", "r3 handler = r1", "$ z0 = r1 instanceof org xml sax ext lexical handler", "if $ z0 == 0 goto label1", "$ r2 = org xml sax ext lexical handler r1", "r4 = net sf saxon event content handler proxy r0", "r4 lexical handler = $ r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = net sf saxon event content handler proxy r0", "r1 require well form = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = net sf saxon event content handler proxy r0", "r1 undeclare namespaces = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r16 = new net sf saxon om attribute collection impl", "r19 = net sf saxon event content handler proxy r0", "$ r2 = r19 get pipeline configuration", "$ r3 = $ r2 get configuration", "specialinvoke r16 < init > $ r3", "r20 = net sf saxon event content handler proxy r0", "r20 pending attribute = r16", "r21 = net sf saxon event content handler proxy r0", "$ r4 = r21 handler", "if $ r4 ! = null goto label1", "r17 = new java lang illegal state exception", "specialinvoke r17 < init > \\ `` content handler proxy open no underlie handler provided\\ ``", "throw r17", "if $ r4 ! = null goto label1", "label r22 = net sf saxon event content handler proxy r0", "$ r5 = r22 get pipeline configuration", "$ r6 = $ r5 get location provider", "r23 = net sf saxon event content handler proxy r0", "r23 location provider = $ r6", "r24 = net sf saxon event content handler proxy r0", "$ r8 = r24 pending attribute", "r25 = net sf saxon event content handler proxy r0", "$ r7 = r25 location provider", "$ r8 set location provider $ r7", "r18 = new net sf saxon event content handler proxy locator", "r26 = net sf saxon event content handler proxy r0", "specialinvoke r18 < init > r26", "r27 = net sf saxon event content handler proxy r0", "$ r10 = r27 handler", "r28 = org xml sax locator r18", "$ r10 set document locator r28", "r29 = net sf saxon event content handler proxy r0", "$ r11 = r29 handler", "$ r11 start document", "label goto label4", "label r31 = net sf saxon event content handler proxy r0", "r31 depth = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "i2 = @ parameter2", "i3 = @ parameter3", "r3 = net sf saxon event content handler proxy r0", "$ i4 = r3 depth", "$ i5 = $ i4 + 1", "r4 = net sf saxon event content handler proxy r0", "r4 depth = $ i5", "r5 = net sf saxon event content handler proxy r0", "$ i6 = r5 depth", "if $ i6 > 0 goto label1", "r6 = net sf saxon event content handler proxy r0", "$ z0 = r6 require well form", "if $ z0 == 0 goto label1", "r7 = net sf saxon event content handler proxy r0", "r7 notify not well form", "label r8 = net sf saxon event content handler proxy r0", "r8 pending element = i0", "$ l7 = long i2", "r9 = net sf saxon event content handler proxy r0", "r9 current location id = $ l7", "r10 = net sf saxon event content handler proxy r0", "$ r2 = r10 namespace stack", "$ r2 push \\ `` ##\\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon event emitter r0", "$ r1 = r2 pipeline config", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon event event source r0", "$ r1 = r2 system id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon event p i grabber r0", "r2 uri resolver = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon event pipeline configuration r0", "$ r1 = r2 controller", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon event pipeline configuration r0", "$ z0 = r1 expand attribute default", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon event proxy receiver r0", "$ r1 = r2 next receiver", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "i1 = @ parameter3", "r9 = net sf saxon event sequence writer r0", "$ z0 = r9 in start tag", "if $ z0 == 0 goto label1", "r10 = net sf saxon event sequence writer r0", "r10 start content", "label r11 = net sf saxon event sequence writer r0", "$ i2 = r11 level", "if $ i2 ! = 0 goto label2", "r8 = new net sf saxon om orphan", "r12 = net sf saxon event sequence writer r0", "$ r6 = r12 get configuration", "specialinvoke r8 < init > $ r6", "r13 = net sf saxon event sequence writer r0", "$ r7 = r13 get name pool", "$ i3 = $ r7 allocate \\ `` \\", "r8 set name code $ i3", "r8 set node kind 7", "r8 set string value r2", "r14 = net sf saxon event sequence writer r0", "r15 = net sf saxon om item r8", "r14 append r15 i0 2", "goto label3", "label r17 = net sf saxon event sequence writer r0", "r17 previous atomic = 0", "return", "if $ i2 ! = 0 goto label2", "label r16 = net sf saxon event sequence writer r0", "$ r4 = r16 outputter", "$ r4 processing instruction r1 r2 i0 i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = new net sf saxon event h t m l u r i escaper", "specialinvoke r5 < init >", "r5 set pipeline configuration r1", "r6 = net sf saxon event proxy receiver r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r11 = net sf saxon event start tag buffer r0", "$ r1 = r11 next receiver", "r12 = net sf saxon event start tag buffer r0", "$ i5 = r12 element name code", "r13 = net sf saxon event start tag buffer r0", "$ i4 = r13 element type code", "r14 = net sf saxon event start tag buffer r0", "$ i3 = r14 element location id", "r15 = net sf saxon event start tag buffer r0", "$ i1 = r15 element property", "$ i2 = $ i1 | 64", "$ r1 start element $ i5 $ i4 $ i3 $ i2", "r16 = net sf saxon event start tag buffer r0", "r16 declare namespaces for start element", "r17 = net sf saxon event start tag buffer r0", "$ r2 = r17 buffer attribute", "i0 = $ r2 get length", "i11 = 0", "label if i11 > = i0 goto label2", "r18 = net sf saxon event start tag buffer r0", "$ r5 = r18 next receiver", "r19 = net sf saxon event start tag buffer r0", "$ r4 = r19 buffer attribute", "$ i6 = $ r4 get name code i11", "r20 = net sf saxon event start tag buffer r0", "$ r6 = r20 buffer attribute", "$ i7 = $ r6 get type annotation i11", "r21 = net sf saxon event start tag buffer r0", "$ r7 = r21 buffer attribute", "$ r8 = $ r7 get value i11", "r22 = net sf saxon event start tag buffer r0", "$ r9 = r22 buffer attribute", "$ i8 = $ r9 get location id i11", "r23 = net sf saxon event start tag buffer r0", "$ r10 = r23 buffer attribute", "$ i9 = $ r10 get property i11", "$ i10 = $ i9 | 64", "$ r5 attribute $ i6 $ i7 $ r8 $ i8 $ i10", "i11 = i11 + 1", "goto label1", "label if i11 > = i0 goto label2", "label r24 = net sf saxon event start tag buffer r0", "r24 accept attribute = 0", "r25 = net sf saxon event start tag buffer r0", "$ r3 = r25 next receiver", "$ r3 start content", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], [46], [47], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon event start tag buffer r0", "$ i0 = r1 element name code", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = new net sf saxon event stripper", "r6 = net sf saxon event stripper r0", "$ r3 = r6 stripper mode", "specialinvoke r5 < init > $ r3", "r7 = net sf saxon event stripper r0", "$ r4 = r7 get pipeline configuration", "r5 set pipeline configuration $ r4", "r8 = net sf saxon event stripper r0", "$ z0 = r8 strip all", "r5 strip all = $ z0", "r9 = net sf saxon event stripper r0", "$ z1 = r9 preserve all", "r5 preserve all = $ z1", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r16 = net sf saxon event t e x t emitter r0", "$ z0 = r16 empty", "if $ z0 == 0 goto label1", "r17 = net sf saxon event t e x t emitter r0", "r17 open document", "label $ i2 = i1 & 4", "if $ i2 ! = 0 goto label2", "r18 = net sf saxon event t e x t emitter r0", "i3 = r18 test character r1", "if i3 == 0 goto label2", "r14 = new net sf saxon trans x path exception", "r13 = new java lang string buffer", "specialinvoke r13 < init >", "$ r6 = r13 append \\ `` output character not available in this encode decimal \\ ``", "$ r7 = $ r6 append i3", "$ r8 = $ r7 append \\ `` \\ ``", "$ r9 = $ r8 to string", "specialinvoke r14 < init > $ r9", "r19 = java lang throwable r14", "throw r19", "if i3 == 0 goto label2", "label r20 = net sf saxon event t e x t emitter r0", "$ r2 = r20 writer", "$ r3 = r1 to string", "$ r2 write $ r3", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon event tree receiver r0", "$ r1 = r3 next receiver", "if $ r1 == null goto label1", "r4 = net sf saxon event tree receiver r0", "$ r2 = r4 next receiver", "$ r2 close", "label r5 = net sf saxon event tree receiver r0", "r5 previous atomic = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon expr assignation r0", "$ r1 = r2 require type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r9 = net sf saxon expr assignation r0", "$ r1 = r9 variable name", "if $ r1 ! = null goto label1", "r8 = new java lang string buffer", "specialinvoke r8 < init >", "$ r5 = r8 append \\ `` zzvar\\ ``", "$ i0 = r0 hash code", "$ r6 = $ r5 append $ i0", "$ r7 = $ r6 to string", "return $ r7", "if $ r1 ! = null goto label1", "label r10 = net sf saxon expr assignation r0", "$ r2 = r10 variable name", "$ r3 = $ r2 get display name", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = net sf saxon expr atomic sequence converter r0", "$ r2 = r3 require item type", "r4 = net sf saxon type item type $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "b1 = 6", "r1 = net sf saxon expr cardinality checker r0", "$ i0 = r1 require cardinality", "$ z0 = net sf saxon value cardinality allow many $ i0", "if $ z0 ! = 0 goto label1", "b1 = 6 | 1", "label return b1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon expr collation map r0", "$ r1 = r2 default collation name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = net sf saxon expr collation map r0", "$ r3 = r8 map", "if $ r3 ! = null goto label1", "r7 = new java util hash map", "specialinvoke r7 < init >", "r9 = net sf saxon expr collation map r0", "r9 map = r7", "label r10 = net sf saxon expr collation map r0", "$ r4 = r10 map", "$ r4 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 equal \\ `` http www w3 org 2005 xpath-functions collation codepoint\\ ``", "if $ z0 == 0 goto label1", "$ r10 = net sf saxon sort codepoint collator get instance", "r11 = net sf saxon sort string collator $ r10", "return r11", "if $ z0 == 0 goto label1", "label r12 = net sf saxon expr collation map r0", "$ r3 = r12 map", "if $ r3 == null goto label2", "r13 = net sf saxon expr collation map r0", "$ r8 = r13 map", "$ r9 = $ r8 get r1", "r2 = net sf saxon sort string collator $ r9", "if r2 == null goto label2", "return r2", "if r2 == null goto label2", "label r14 = net sf saxon expr collation map r0", "$ r4 = r14 config", "$ r5 = $ r4 get collation u r i resolver", "r15 = net sf saxon expr collation map r0", "$ r6 = r15 config", "$ r7 = $ r5 resolve r1 null $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon expr early evaluation context r0", "specialinvoke r1 not allow", "return null"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = new net sf saxon trans x path exception", "specialinvoke r3 < init > \\ `` the context item be undefined\\ ``", "r3 set error code \\ `` xpdy0002\\ ``", "r4 = java lang throwable r3", "throw r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = new net sf saxon trans x path exception", "specialinvoke r3 < init > \\ `` the context item be undefined\\ ``", "r3 set error code \\ `` xpdy0002\\ ``", "r4 = java lang throwable r3", "throw r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = net sf saxon expr early evaluation context r0", "specialinvoke r2 not allow", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = java util collection empty_list", "$ r2 = $ r1 iterator", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = net sf saxon expr expression r0", "i0 = r9 get implementation method", "$ i1 = i0 & 1", "if $ i1 == 0 goto label2", "r10 = net sf saxon expr expression r0", "r2 = r10 evaluate item r1", "if r2 ! = null goto label1", "$ r6 = net sf saxon evpull empty event iterator get instance", "r11 = net sf saxon evpull event iterator $ r6", "return r11", "if r2 ! = null goto label1", "label r7 = new net sf saxon evpull singleton event iterator", "r12 = net sf saxon evpull pull event r2", "specialinvoke r7 < init > r12", "r13 = net sf saxon evpull event iterator r7", "return r13", "if $ i1 == 0 goto label2", "label r8 = new net sf saxon evpull event iterator over sequence", "r14 = net sf saxon expr expression r0", "$ r4 = r14 iterate r1", "specialinvoke r8 < init > $ r4", "r15 = net sf saxon evpull event iterator r8", "return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r4 = net sf saxon expr expression r0", "i1 = r4 get intrinsic dependency", "r5 = net sf saxon expr expression r0", "r1 = r5 iterate sub expression", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r2 = r1 next", "$ r3 = net sf saxon expr expression $ r2", "$ i0 = $ r3 get dependency", "i1 = i1 | $ i0", "goto label1", "if $ z0 == 0 goto label2", "label return i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r2 = new net sf saxon expr mono iterator", "specialinvoke r2 < init > \\ `` expression\\ ``", "r3 = java util iterator r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon expr expression r0", "$ r1 = r2 get container", "$ i0 = $ r1 get host language", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon expr expression location r0", "$ r1 = r2 system id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = net sf saxon expr expression location r0", "r1 line number = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon expr expression visitor r0", "r2 executable = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon expr expression visitor r0", "$ r1 = r2 stack", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon expr function call r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r1 = @ parameter2", "r39 = net sf saxon expr function call r0", "$ r2 = r39 argument", "i2 = lengthof $ r2", "if i0 ! = i1 goto label1", "if i2 == i0 goto label1", "r34 = new net sf saxon trans x path exception", "r33 = new java lang string buffer", "specialinvoke r33 < init >", "$ r25 = r33 append \\ `` function \\ ``", "r40 = net sf saxon expr function call r0", "$ r26 = r40 get display name", "$ r27 = $ r25 append $ r26", "$ r28 = $ r27 append \\ `` must have \\ ``", "$ r29 = $ r28 append i0", "$ r30 = net sf saxon expr function call plural argument i0", "$ r31 = $ r29 append $ r30", "$ r32 = $ r31 to string", "r41 = javax xml transform source locator r0", "specialinvoke r34 < init > $ r32 r41", "r42 = java lang throwable r34", "throw r42", "if i2 == i0 goto label1", "label if i2 > = i0 goto label2", "r36 = new net sf saxon trans x path exception", "r35 = new java lang string buffer", "specialinvoke r35 < init >", "$ r15 = r35 append \\ `` function \\ ``", "r43 = net sf saxon expr function call r0", "$ r16 = r43 get display name", "$ r17 = $ r15 append $ r16", "$ r18 = $ r17 append \\ `` must have at least \\ ``", "$ r19 = $ r18 append i0", "$ r20 = net sf saxon expr function call plural argument i0", "$ r21 = $ r19 append $ r20", "$ r22 = $ r21 to string", "r44 = javax xml transform source locator r0", "specialinvoke r36 < init > $ r22 r44", "r45 = java lang throwable r36", "throw r45", "label if i2 > = i0 goto label2", "label if i2 < = i1 goto label3", "r38 = new net sf saxon trans x path exception", "r37 = new java lang string buffer", "specialinvoke r37 < init >", "$ r5 = r37 append \\ `` function \\ ``", "r46 = net sf saxon expr function call r0", "$ r6 = r46 get display name", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append \\ `` must have no more than \\ ``", "$ r9 = $ r8 append i1", "$ r10 = net sf saxon expr function call plural argument i1", "$ r11 = $ r9 append $ r10", "$ r12 = $ r11 to string", "r47 = javax xml transform source locator r0", "specialinvoke r38 < init > $ r12 r47", "r48 = java lang throwable r38", "throw r48", "label if i2 < = i1 goto label3", "label return i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [], [62], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon expr literal r0", "$ r1 = r3 value", "$ r2 = $ r1 get schema comparable", "$ i0 = $ r2 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon expr optimizer r0", "$ r1 = r2 config", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = net sf saxon expr expression r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = net sf saxon expr p j converter jpmap", "$ r2 = $ r1 get r0", "$ r3 = net sf saxon value sequence type $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 57344", "$ i2 = $ i1 > > 13", "return $ i2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon expr user function call r0", "r2 function = r1", "r3 = net sf saxon expr user function call r0", "r3 confirm = 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon expr user function call r0", "$ r1 = r2 argument", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = net sf saxon expr user function call r0", "r2 = specialinvoke r10 evaluate argument r1", "r11 = net sf saxon expr user function call r0", "$ z0 = r11 tail call", "if $ z0 == 0 goto label1", "$ r8 = net sf saxon expr x path context major r1", "r12 = net sf saxon expr user function call r0", "$ r7 = r12 function", "$ r8 request tail call $ r7 r2", "$ r9 = net sf saxon evpull empty event iterator get instance", "r13 = net sf saxon evpull event iterator $ r9", "return r13", "if $ z0 == 0 goto label1", "label r3 = r1 get receiver", "r4 = r1 new clean context", "r4 set receiver r3", "r14 = net sf saxon trace instruction info r0", "r4 set origin r14", "r15 = net sf saxon expr user function call r0", "$ r5 = r15 function", "$ r6 = $ r5 iterate event r2 r4", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ parameter0", "$ d0 = net sf saxon exslt date month in year r0", "i0 = int $ d0", "$ d1 = net sf saxon exslt date day in month r0", "i1 = int $ d1", "$ r2 = newarray int [ 13 ]", "$ r2 [ 0 ] = 0", "$ r2 [ 1 ] = 31", "$ r2 [ 2 ] = 59", "$ r2 [ 3 ] = 90", "$ r2 [ 4 ] = 120", "$ r2 [ 5 ] = 151", "$ r2 [ 6 ] = 181", "$ r2 [ 7 ] = 212", "$ r2 [ 8 ] = 243", "$ r2 [ 9 ] = 273", "$ r2 [ 10 ] = 304", "$ r2 [ 11 ] = 334", "$ r2 [ 12 ] = 365", "if i0 < = 2 goto label1", "$ z0 = net sf saxon exslt date leap year r0", "if $ z0 == 0 goto label1", "$ b3 = 1", "goto label2", "label $ i4 = i0 - 1", "$ i5 = $ r2 [ $ i4 ]", "$ i6 = $ i5 + $ b3", "$ i7 = $ i6 + i1", "$ d2 = double $ i7", "return $ d2", "if $ z0 == 0 goto label1", "label $ b3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [], [31], []]}
{"nodes": ["r0 = @ parameter0", "label $ z0 = r0 start with \\ `` -- -\\ ``", "if $ z0 == 0 goto label3", "$ r4 = r0 substring 3 5", "$ i2 = java lang integer parse int $ r4", "$ d2 = double $ i2", "label return $ d2", "if $ z0 == 0 goto label3", "label $ z1 = r0 start with \\ `` -- \\ ``", "if $ z1 == 0 goto label5", "$ r3 = r0 substring 5 7", "$ i1 = java lang integer parse int $ r3", "$ d1 = double $ i1", "label return $ d1", "if $ z1 == 0 goto label5", "label $ r2 = r0 substring 8 10", "$ i0 = java lang integer parse int $ r2", "$ d0 = double $ i0", "label return $ d0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "d0 = net sf saxon exslt date year r0", "d1 = net sf saxon exslt date month in year r0", "d2 = net sf saxon exslt date day in month r0", "$ z0 = java lang double be na n d0", "if $ z0 ! = 0 goto label1", "$ z1 = java lang double be na n d1", "if $ z1 ! = 0 goto label1", "$ z2 = java lang double be na n d2", "if $ z2 == 0 goto label2", "label return #na n", "if $ z2 == 0 goto label2", "label $ r2 = new java util gregorian calendar", "$ i3 = int d0", "$ i0 = int d1", "$ i2 = $ i0 - 1", "$ i1 = int d2", "specialinvoke $ r2 < init > $ i3 $ i2 $ i1", "$ r2 set first day of week 1", "$ i4 = $ r2 get 7", "$ d3 = double $ i4", "return $ d3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = newarray java lang string [ 7 ]", "$ r2 [ 0 ] = \\ `` sun\\ ``", "$ r2 [ 1 ] = \\ `` mon\\ ``", "$ r2 [ 2 ] = \\ `` tue\\ ``", "$ r2 [ 3 ] = \\ `` wed\\ ``", "$ r2 [ 4 ] = \\ `` thu\\ ``", "$ r2 [ 5 ] = \\ `` fri\\ ``", "$ r2 [ 6 ] = \\ `` sat\\ ``", "d0 = net sf saxon exslt date day in week r0", "$ z0 = java lang double be na n d0", "if $ z0 == 0 goto label1", "return \\ `` \\ ``", "if $ z0 == 0 goto label1", "label $ i0 = int d0", "$ i1 = $ i0 - 1", "$ r3 = $ r2 [ $ i1 ]", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon expr expression r0", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new java lang illegal state exception", "r9 = new java lang string buffer", "specialinvoke r9 < init >", "$ r4 = r9 append \\ `` function \\ ``", "r11 = net sf saxon function compile time function r0", "$ r5 = specialinvoke r11 get name r1", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 append \\ `` should have be resolve at compile-time\\ ``", "$ r8 = $ r7 to string", "specialinvoke r10 < init > $ r8", "throw r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = net sf saxon function concat r0", "$ r2 = r4 evaluate item r1", "$ r3 = $ r2 get string value c s", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon function distinct value r0", "$ r1 = r2 atomic comparer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = net sf saxon function doc r0", "r1 read once = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r40 = null", "r52 = net sf saxon function error r0", "$ r11 = r52 argument", "$ i2 = lengthof $ r11", "if $ i2 < = 0 goto label01", "r53 = net sf saxon function error r0", "$ r37 = r53 argument", "$ r38 = $ r37 [ 0 ]", "$ r39 = $ r38 evaluate item r1", "r40 = net sf saxon value qualify name value $ r39", "label if r40 ! = null goto label04", "r48 = new net sf saxon value q name value", "r54 = net sf saxon function error r0", "$ r33 = r54 argument", "$ i5 = lengthof $ r33", "if $ i5 ! = 1 goto label02", "$ r41 = \\ `` foty0004\\ ``", "goto label03", "label $ r34 = net sf saxon type build in atomic type qname", "r55 = net sf saxon type atomic type $ r34", "specialinvoke r48 < init > \\ `` err\\", "r40 = r48", "label r56 = net sf saxon function error r0", "$ r42 = r56 argument", "$ i6 = lengthof $ r42", "if $ i6 < = 1 goto label05", "r57 = net sf saxon function error r0", "$ r29 = r57 argument", "$ r30 = $ r29 [ 1 ]", "$ r31 = $ r30 evaluate item r1", "r43 = $ r31 get string value", "goto label06", "label r49 = new net sf saxon trans x path exception", "specialinvoke r49 < init > r43", "r58 = net sf saxon value qualify name value r40", "$ r13 = r58 get namespace u r i", "r59 = net sf saxon value qualify name value r40", "$ r14 = r59 get local name", "r49 set error code $ r13 $ r14", "r49 set x path context r1", "r60 = javax xml transform source locator r0", "r49 set locator r60", "r61 = net sf saxon function error r0", "$ r15 = r61 argument", "$ i3 = lengthof $ r15", "if $ i3 < = 2 goto label14", "r62 = net sf saxon function error r0", "$ r16 = r62 argument", "$ r17 = $ r16 [ 2 ]", "$ r18 = $ r17 iterate r1", "$ r19 = net sf saxon value sequence extent make sequence extent $ r18", "$ r20 = net sf saxon value value $ r19", "r3 = $ r20 reduce", "$ z0 = r3 instanceof net sf saxon value singleton node", "if $ z0 == 0 goto label13", "$ r21 = net sf saxon value singleton node r3", "r4 = $ r21 get node", "$ i4 = r4 get node kind", "if $ i4 ! = 9 goto label13", "r50 = new net sf saxon sxpath x path evaluator", "specialinvoke r50 < init >", "r44 = r50 create expression \\ `` error @ module\\ ``", "r63 = javax xml transform source r4", "$ r23 = r44 evaluate single r63", "r6 = net sf saxon om node info $ r23", "if r6 ! = null goto label07", "$ r45 = null", "goto label08", "label r7 = $ r45", "r46 = r50 create expression \\ `` error @ line\\ ``", "r64 = javax xml transform source r4", "$ r24 = r46 evaluate single r64", "r8 = net sf saxon om node info $ r24", "if r8 ! = null goto label09", "$ i7 = -1", "goto label10", "label i0 = $ i7", "r47 = r50 create expression \\ `` error @ column\\ ``", "r65 = javax xml transform source r4", "$ r26 = r47 evaluate single r65", "r9 = net sf saxon om node info $ r26", "if r9 ! = null goto label11", "$ i8 = -1", "goto label12", "label r51 = new net sf saxon expr expression location", "specialinvoke r51 < init >", "r51 set system id r7", "r51 set line number i0", "r51 set column number $ i8", "r66 = javax xml transform source locator r51", "r49 set locator r66", "label r49 set error object r3", "label r67 = java lang throwable r49", "throw r67", "if r9 ! = null goto label11", "label $ r27 = r9 get string value", "$ i8 = java lang integer parse int $ r27", "if r8 ! = null goto label09", "label $ r25 = r8 get string value", "$ i7 = java lang integer parse int $ r25", "if r6 ! = null goto label07", "label $ r45 = r6 get string value", "if $ i6 < = 1 goto label05", "label r43 = \\ `` error signal by application call on error \\ ``", "if $ i5 ! = 1 goto label02", "label $ r41 = \\ `` foer0000\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [], [71], [72], [73], [74], [75], [76], [77], [], [79], [80], [81], [82], [83], [84], [85], [], [87], [88], [89], [90], [91], [92], [93], [94], [95], [], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon expr expression r0", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = net sf saxon function minimax r0", "$ r3 = r6 argument", "$ r4 = $ r3 [ 0 ]", "r2 = net sf saxon expr atomizer get atomized item type $ r4 0 r1", "$ i0 = r2 get primitive type", "if $ i0 ! = 631 goto label1", "$ r5 = net sf saxon type build in atomic type double", "r7 = net sf saxon type item type $ r5", "return r7", "if $ i0 ! = 631 goto label1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon expr expression r0", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon function translate r0", "$ r1 = r2 static map", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = net sf saxon function unordered r0", "$ r2 = r4 argument", "$ r3 = $ r2 [ 0 ]", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r20 = net sf saxon identity transformer handler r0", "$ r5 = r20 result", "if $ r5 ! = null goto label1", "r17 = new javax xml transform stream stream result", "$ r11 = java lang system out", "specialinvoke r17 < init > $ r11", "r21 = net sf saxon identity transformer handler r0", "r21 result = r17", "label r22 = net sf saxon identity transformer handler r0", "$ r6 = r22 controller", "r14 = $ r6 get output property", "r23 = net sf saxon identity transformer handler r0", "$ r7 = r23 controller", "r1 = $ r7 make pipeline configuration", "r24 = net sf saxon identity transformer handler r0", "r2 = r24 get configuration", "r3 = r2 get serializer factory", "r25 = net sf saxon identity transformer handler r0", "$ r8 = r25 result", "r15 = r3 get receiver $ r8 r1 r14", "r26 = net sf saxon identity transformer handler r0", "r26 set pipeline configuration r1", "i0 = r2 get strips white space", "if i0 ! = 2 goto label2", "r18 = new net sf saxon om all element stripper", "specialinvoke r18 < init >", "r27 = net sf saxon event stripper r18", "r27 set strip all", "r28 = net sf saxon event stripper r18", "r28 set pipeline configuration r1", "r29 = net sf saxon event stripper r18", "r30 = net sf saxon event receiver r15", "r29 set underlie receiver r30", "r15 = r18", "label r31 = net sf saxon identity transformer handler r0", "r32 = net sf saxon event receiver r15", "r31 set receiver r32", "label goto label5", "label specialinvoke r0 start document", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon instruct attribute creator r0", "$ i0 = r1 option", "$ i1 = $ i0 | 32", "r2 = net sf saxon instruct attribute creator r0", "r2 option = $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon instruct attribute creator r0", "$ i0 = r1 option", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon instruct attribute set r0", "r2 use attribute set = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 131"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon instruct compute attribute r0", "$ r1 = r2 attribute name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon instruct compute attribute r0", "$ r1 = r2 n context", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = net sf saxon instruct compute attribute r0", "$ r2 = r7 attribute name", "r8 = net sf saxon instruct compute attribute r0", "$ r3 = r8 do promotion $ r2 r1", "r9 = net sf saxon instruct compute attribute r0", "r9 attribute name = $ r3", "r10 = net sf saxon instruct compute attribute r0", "$ r4 = r10 namespace", "if $ r4 == null goto label1", "r11 = net sf saxon instruct compute attribute r0", "$ r5 = r11 namespace", "r12 = net sf saxon instruct compute attribute r0", "$ r6 = r12 do promotion $ r5 r1", "r13 = net sf saxon instruct compute attribute r0", "r13 namespace = $ r6", "label specialinvoke r0 promote inst r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon instruct executable r0", "$ r1 = r2 rule manager", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = net sf saxon instruct executable r0", "$ r2 = r6 name template table", "if $ r2 ! = null goto label1", "return null", "if $ r2 ! = null goto label1", "label r7 = net sf saxon instruct executable r0", "$ r3 = r7 name template table", "$ r4 = $ r3 get r1", "$ r5 = net sf saxon instruct template $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon instruct executable r0", "$ r1 = r2 stripper rule", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = net sf saxon instruct executable r0", "$ r2 = r6 output declaration", "if $ r2 ! = null goto label1", "return null", "if $ r2 ! = null goto label1", "label r7 = net sf saxon instruct executable r0", "$ r3 = r7 output declaration", "$ r4 = $ r3 get r1", "$ r5 = java util property $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon instruct executable r0", "r2 default collation name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon instruct executable r0", "$ r1 = r2 reason unable to compile", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon instruct general variable r0", "$ b0 = r1 property", "$ b1 = $ b0 & 16", "if $ b1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "return 185"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = net sf saxon instruct local param r0", "r1 parameter id = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon instruct parent node constructor r0", "$ r1 = r2 schema type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = net sf saxon instruct parent node constructor r0", "r1 validation = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon instruct simple content constructor r0", "$ r1 = r2 select", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon instruct simple content constructor r0", "$ r1 = r2 separator", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = net sf saxon instruct simple node constructor r0", "r3 select = r1", "r4 = net sf saxon instruct simple node constructor r0", "r4 adopt child expression r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon instruct template r0", "$ i0 = r1 precedence", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = net sf saxon instruct trace expression r0", "r1 construct type = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon instruct trace expression r0", "$ i0 = r1 line number", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon instruct user function r0", "$ z0 = r1 be update", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon instruct user function r0", "$ z0 = r1 memo function", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon instruct user function parameter r0", "r2 variable q name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r28 = net sf saxon instruct value of r0", "$ r2 = r28 select", "$ r3 = r1 get configuration", "$ r4 = $ r3 get type hierarchy", "$ r5 = $ r2 get item type $ r4", "$ r6 = net sf saxon type build in atomic type untyped_atomic", "$ z0 = $ r5 equal $ r6", "if $ z0 == 0 goto label1", "r29 = net sf saxon instruct value of r0", "$ r19 = r29 select", "return $ r19", "if $ z0 == 0 goto label1", "label r30 = net sf saxon instruct value of r0", "$ r7 = r30 select", "$ z1 = $ r7 instanceof net sf saxon expr string literal", "if $ z1 == 0 goto label5", "label r25 = new net sf saxon expr literal", "r24 = new net sf saxon value untyped atomic value", "r31 = net sf saxon instruct value of r0", "$ r15 = r31 select", "$ r16 = net sf saxon expr string literal $ r15", "$ r17 = $ r16 get value", "$ r18 = $ r17 get string value c s", "specialinvoke r24 < init > $ r18", "r32 = net sf saxon value value r24", "specialinvoke r25 < init > r32", "label r33 = net sf saxon expr expression r25", "return r33", "if $ z1 == 0 goto label5", "label $ r8 = newarray net sf saxon expr expression [ 1 ]", "r34 = net sf saxon instruct value of r0", "$ r9 = r34 select", "$ r8 [ 0 ] = $ r9", "$ r10 = net sf saxon function system function make system function \\ `` string\\", "r23 = net sf saxon function string fn $ r10", "r27 = new net sf saxon expr cast expression", "$ r12 = net sf saxon type build in atomic type untyped_atomic", "r35 = net sf saxon expr expression r23", "r36 = net sf saxon type atomic type $ r12", "specialinvoke r27 < init > r35 r36 0", "r37 = net sf saxon expr expression r27", "return r37"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "z1 = 0", "i1 = 0", "label $ i0 = lengthof r0", "if i1 > = $ i0 goto label2", "$ r3 = r0 [ i1 ]", "z0 = $ r3 replace sub expression r1 r2", "z1 = z1 | z0", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label return z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new net sf saxon function java extension library", "specialinvoke r3 < init > r1", "r4 = net sf saxon function function library r3", "r1 set extension binder \\ `` java\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon java j regex iterator r0", "$ r1 = r3 current", "$ r2 = net sf saxon value string value make string value $ r1", "r4 = net sf saxon om item $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = net sf saxon java j regex iterator r0", "$ z0 = r4 be match", "if $ z0 ! = 0 goto label1", "return null", "if $ z0 ! = 0 goto label1", "label r5 = net sf saxon java j regex iterator r0", "$ r2 = r5 matcher", "$ i1 = $ r2 group count", "if i0 > $ i1 goto label2", "if i0 > = 0 goto label3", "label return \\ `` \\ ``", "if i0 > = 0 goto label3", "label r6 = net sf saxon java j regex iterator r0", "$ r3 = r6 matcher", "r1 = $ r3 group i0", "if r1 ! = null goto label4", "return \\ `` \\ ``", "if r1 ! = null goto label4", "label return r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r9 = net sf saxon java j regex iterator r0", "$ r2 = r9 matcher", "i0 = $ r2 group count", "if i0 ! = 0 goto label1", "$ r7 = net sf saxon om empty iterator get instance", "r10 = net sf saxon om sequence iterator $ r7", "return r10", "if i0 ! = 0 goto label1", "label r1 = newarray net sf saxon value string value [ i0 ]", "i3 = 1", "label $ i1 = lengthof r1", "if i3 > $ i1 goto label3", "$ i2 = i3 - 1", "r11 = net sf saxon java j regex iterator r0", "$ r4 = r11 matcher", "$ r5 = $ r4 group i3", "$ r6 = net sf saxon value string value make string value $ r5", "r1 [ $ i2 ] = $ r6", "i3 = i3 + 1", "goto label2", "if i3 > $ i1 goto label3", "label r8 = new net sf saxon om array iterator", "r12 = net sf saxon om item [ ] r1", "specialinvoke r8 < init > r12", "r13 = net sf saxon om sequence iterator r8", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ b1 = l0 cmp 1000000000l", "if $ b1 < 0 goto label05", "l21 = l0 % 1000000000l", "r62 = new java lang string buffer", "specialinvoke r62 < init >", "$ l18 = l0 1000000000l", "r72 = net sf saxon number numberer_en r0", "$ r39 = r72 to word $ l18", "$ r40 = r62 append $ r39", "$ r45 = $ r40 append \\ `` billion\\ ``", "$ b19 = l21 cmp 0l", "if $ b19 ! = 0 goto label01", "$ r46 = \\ `` \\ ``", "goto label04", "label $ r48 = $ r45 append $ r46", "$ r49 = $ r48 to string", "return $ r49", "if $ b19 ! = 0 goto label01", "label r63 = new java lang string buffer", "specialinvoke r63 < init >", "$ b20 = l21 cmp 100l", "if $ b20 > = 0 goto label02", "$ r47 = \\ `` and \\ ``", "goto label03", "label $ r42 = r63 append $ r47", "r73 = net sf saxon number numberer_en r0", "$ r43 = r73 to word l21", "$ r44 = $ r42 append $ r43", "$ r46 = $ r44 to string", "if $ b20 > = 0 goto label02", "label $ r47 = \\ `` \\ ``", "if $ b1 < 0 goto label05", "label $ b2 = l0 cmp 1000000l", "if $ b2 < 0 goto label10", "l22 = l0 % 1000000l", "r64 = new java lang string buffer", "specialinvoke r64 < init >", "$ l15 = l0 1000000l", "r74 = net sf saxon number numberer_en r0", "$ r32 = r74 to word $ l15", "$ r33 = r64 append $ r32", "$ r50 = $ r33 append \\ `` million\\ ``", "$ b16 = l22 cmp 0l", "if $ b16 ! = 0 goto label06", "$ r51 = \\ `` \\ ``", "goto label09", "label $ r53 = $ r50 append $ r51", "$ r54 = $ r53 to string", "return $ r54", "if $ b16 ! = 0 goto label06", "label r65 = new java lang string buffer", "specialinvoke r65 < init >", "$ b17 = l22 cmp 100l", "if $ b17 > = 0 goto label07", "$ r52 = \\ `` and \\ ``", "goto label08", "label $ r35 = r65 append $ r52", "r75 = net sf saxon number numberer_en r0", "$ r36 = r75 to word l22", "$ r37 = $ r35 append $ r36", "$ r51 = $ r37 to string", "if $ b17 > = 0 goto label07", "label $ r52 = \\ `` \\ ``", "if $ b2 < 0 goto label10", "label $ b3 = l0 cmp 1000l", "if $ b3 < 0 goto label15", "l23 = l0 % 1000l", "r66 = new java lang string buffer", "specialinvoke r66 < init >", "$ l12 = l0 1000l", "r76 = net sf saxon number numberer_en r0", "$ r25 = r76 to word $ l12", "$ r26 = r66 append $ r25", "$ r55 = $ r26 append \\ `` thousand\\ ``", "$ b13 = l23 cmp 0l", "if $ b13 ! = 0 goto label11", "$ r56 = \\ `` \\ ``", "goto label14", "label $ r58 = $ r55 append $ r56", "$ r59 = $ r58 to string", "return $ r59", "if $ b13 ! = 0 goto label11", "label r67 = new java lang string buffer", "specialinvoke r67 < init >", "$ b14 = l23 cmp 100l", "if $ b14 > = 0 goto label12", "$ r57 = \\ `` and \\ ``", "goto label13", "label $ r28 = r67 append $ r57", "r77 = net sf saxon number numberer_en r0", "$ r29 = r77 to word l23", "$ r30 = $ r28 append $ r29", "$ r56 = $ r30 to string", "if $ b14 > = 0 goto label12", "label $ r57 = \\ `` \\ ``", "if $ b3 < 0 goto label15", "label $ b4 = l0 cmp 100l", "if $ b4 < 0 goto label18", "l24 = l0 % 100l", "r68 = new java lang string buffer", "specialinvoke r68 < init >", "$ l10 = l0 100l", "r78 = net sf saxon number numberer_en r0", "$ r15 = r78 to word $ l10", "$ r16 = r68 append $ r15", "$ r17 = $ r16 append \\ `` hundred\\ ``", "$ b11 = l24 cmp 0l", "if $ b11 ! = 0 goto label16", "$ r60 = \\ `` \\ ``", "goto label17", "label $ r22 = $ r17 append $ r60", "$ r23 = $ r22 to string", "return $ r23", "if $ b11 ! = 0 goto label16", "label r69 = new java lang string buffer", "specialinvoke r69 < init >", "$ r19 = r69 append \\ `` and \\ ``", "r79 = net sf saxon number numberer_en r0", "$ r20 = r79 to word l24", "$ r21 = $ r19 append $ r20", "$ r60 = $ r21 to string", "if $ b4 < 0 goto label18", "label $ b5 = l0 cmp 20l", "if $ b5 > = 0 goto label19", "$ r12 = net sf saxon number numberer_en english unit", "$ i9 = int l0", "$ r13 = $ r12 [ $ i9 ]", "return $ r13", "if $ b5 > = 0 goto label19", "label $ l6 = l0 % 10l", "i25 = int $ l6", "r70 = new java lang string buffer", "specialinvoke r70 < init >", "$ r2 = net sf saxon number numberer_en english ten", "$ i7 = int l0", "$ i8 = $ i7 10", "$ r3 = $ r2 [ $ i8 ]", "$ r4 = r70 append $ r3", "if i25 ! = 0 goto label20", "$ r61 = \\ `` \\ ``", "goto label21", "label $ r10 = $ r4 append $ r61", "$ r11 = $ r10 to string", "return $ r11", "if i25 ! = 0 goto label20", "label r71 = new java lang string buffer", "specialinvoke r71 < init >", "$ r6 = r71 append 32", "$ r7 = net sf saxon number numberer_en english unit", "$ r8 = $ r7 [ i25 ]", "$ r9 = $ r6 append $ r8", "$ r61 = $ r9 to string"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [], [49], [50], [], [52], [53], [54], [55], [56], [57], [], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [], [81], [82], [], [84], [85], [86], [87], [88], [89], [], [91], [92], [93], [94], [95], [96], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [110], [111], [], [113], [114], [], [116], [117], [118], [119], [120], [121], [122], [123], [124], [125], [126], [127], [128], [129], [], [131], [132], [133], [134], [135], [136], [137], [138], [139], [140], [141], [142], [], [144], [145], [], [147], [148], [149], [150], [151], [152], [153], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = net sf saxon om document pool r0", "$ r5 = r11 document name map", "$ r6 = $ r5 key set", "r2 = $ r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "r3 = r2 next", "r12 = net sf saxon om document pool r0", "$ r7 = r12 document name map", "$ r8 = $ r7 get r3", "r4 = net sf saxon om document info $ r8", "if r4 ! = r1 goto label2", "r13 = net sf saxon om document pool r0", "$ r9 = r13 document name map", "$ r9 remove r3", "return r1", "if r4 ! = r1 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r2 = net sf saxon om fast string buffer r0", "r2 ensure capacity 1", "r3 = net sf saxon om fast string buffer r0", "$ r1 = r3 array", "r4 = net sf saxon om fast string buffer r0", "$ i1 = r4 use", "$ i2 = $ i1 + 1", "r5 = net sf saxon om fast string buffer r0", "r5 use = $ i2", "$ r1 [ $ i1 ] = c0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r2 = net sf saxon om fast string buffer r0", "r2 ensure capacity 1", "r3 = net sf saxon om fast string buffer r0", "$ r1 = r3 array", "r4 = net sf saxon om fast string buffer r0", "$ i1 = r4 use", "$ i2 = $ i1 + 1", "r5 = net sf saxon om fast string buffer r0", "r5 use = $ i2", "$ r1 [ $ i1 ] = c0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "c1 = @ parameter1", "if i0 < 0 goto label1", "r9 = net sf saxon om fast string buffer r0", "$ i2 = r9 use", "if i0 < = $ i2 goto label2", "label r8 = new java lang index out of bound exception", "r7 = new java lang string buffer", "specialinvoke r7 < init >", "$ r3 = r7 append \\ `` \\ ``", "$ r4 = $ r3 append i0", "$ r5 = $ r4 to string", "specialinvoke r8 < init > $ r5", "throw r8", "if i0 < = $ i2 goto label2", "label r10 = net sf saxon om fast string buffer r0", "$ r6 = r10 array", "$ r6 [ i0 ] = c1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon om inscope namespace resolver r0", "$ r1 = r2 node", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "specialinvoke r0 start prefix mapping r1 r2", "r11 = net sf saxon om prefix normalizer r0", "$ r3 = r11 prefix", "$ r3 push r1", "r12 = net sf saxon om prefix normalizer r0", "$ r5 = r12 uris", "$ r5 push r2", "r13 = net sf saxon om prefix normalizer r0", "$ r7 = r13 uri to prefix", "$ r8 = $ r7 get r2", "if $ r8 ! = null goto label1", "r14 = net sf saxon om prefix normalizer r0", "$ r9 = r14 uri to prefix", "$ r9 put r2 r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof net sf saxon om node info", "if $ z0 == 0 goto label1", "$ r2 = net sf saxon om node info r1", "r3 = net sf saxon om virtual copy r0", "$ z1 = r3 be same node info $ r2", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon om virtual copy r0", "$ r1 = r2 original", "$ i0 = $ r1 get line number", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon om virtual copy r0", "$ r1 = r3 original", "$ r2 = $ r1 get string value", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon om virtual copy r0", "$ r1 = r3 original", "$ r2 = $ r1 get prefix", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return -0 5"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = net sf saxon pattern content type test r0", "r1 nillable = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r11 = net sf saxon pattern i d pattern r0", "$ r4 = r11 id expression", "$ r5 = r1 type check $ r4 r2", "r12 = net sf saxon pattern i d pattern r0", "r12 id expression = $ r5", "r10 = new net sf saxon expr role locator", "specialinvoke r10 < init > 0 \\ `` id\\", "r13 = net sf saxon pattern i d pattern r0", "$ r8 = r13 id expression", "$ r7 = net sf saxon value sequence type atomic_sequence", "$ r9 = net sf saxon expr type checker static type check $ r8 $ r7 0 r10 r1", "r14 = net sf saxon pattern i d pattern r0", "r14 id expression = $ r9", "return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon pattern location path pattern r0", "$ r1 = r2 ancestor pattern", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon pattern namespace test r0", "$ r1 = r3 name pool", "r4 = net sf saxon pattern namespace test r0", "$ s0 = r4 uri code", "$ r2 = $ r1 get u r i from u r i code $ s0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon pattern pattern sponsor r0", "$ r1 = r2 pattern", "r3 = net sf saxon expr container $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon pattern substitution group test r0", "$ i0 = r1 head", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = net sf saxon pattern union pattern r0", "$ r2 = r6 p1", "$ r3 = $ r2 simplify r1", "r7 = net sf saxon pattern union pattern r0", "r7 p1 = $ r3", "r8 = net sf saxon pattern union pattern r0", "$ r4 = r8 p2", "$ r5 = $ r4 simplify r1", "r9 = net sf saxon pattern union pattern r0", "r9 p2 = $ r5", "return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon pattern union pattern r0", "$ r1 = r2 p1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon pattern union pattern r0", "$ r1 = r2 p2", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set system id r1", "r4 = net sf saxon pattern union pattern r0", "$ r2 = r4 p1", "$ r2 set system id r1", "r5 = net sf saxon pattern union pattern r0", "$ r3 = r5 p2", "$ r3 set system id r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new java util array list", "specialinvoke r10 < init > 4", "r11 = net sf saxon pull namespace context impl r0", "r3 = r11 iterate prefix", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r8 = r3 next", "r4 = java lang string $ r8", "r12 = net sf saxon pull namespace context impl r0", "$ r9 = r12 resolver", "r5 = $ r9 get u r i for prefix r4 1", "$ z1 = r5 equal r1", "if $ z1 == 0 goto label2", "r10 add r4", "label goto label1", "if $ z0 == 0 goto label3", "label $ r7 = r10 iterator", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon pull pull filter r0", "$ r1 = r2 base", "$ i0 = $ r1 skip to match end", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon pull unparsed entity r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = net sf saxon query dynamic query context r0", "$ r3 = r8 parameter", "if $ r3 ! = null goto label1", "r7 = new java util hash map", "specialinvoke r7 < init > 10", "r9 = net sf saxon query dynamic query context r0", "r9 parameter = r7", "label r10 = net sf saxon query dynamic query context r0", "$ r4 = r10 parameter", "$ r4 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon query global variable definition r0", "r2 system id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon query global variable definition r0", "$ r1 = r3 reference", "$ r2 = $ r1 iterator", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = net sf saxon query query module r0", "$ r2 = r7 import module namespaces", "if $ r2 ! = null goto label1", "r6 = new java util hash set", "specialinvoke r6 < init > 5", "r8 = net sf saxon query query module r0", "r8 import module namespaces = r6", "label r9 = net sf saxon query query module r0", "$ r3 = r9 import module namespaces", "$ r3 add r1", "r10 = net sf saxon query query module r0", "$ r4 = r10 get import function library", "$ r4 add import namespace r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = net sf saxon query query module r0", "$ r2 = r4 import module namespaces", "if $ r2 == null goto label1", "r5 = net sf saxon query query module r0", "$ r3 = r5 import module namespaces", "$ z0 = $ r3 contain r1", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = net sf saxon query query module r0", "$ z0 = r10 import namespace r1", "if $ z0 == 0 goto label1", "return 1", "if $ z0 == 0 goto label1", "label r11 = net sf saxon query query module r0", "r2 = r11 iterate import namespaces", "label $ z1 = r2 have next", "if $ z1 == 0 goto label6", "$ r7 = r2 next", "r3 = java lang string $ r7", "r12 = net sf saxon query query module r0", "$ r8 = r12 executable", "r4 = $ r8 get query library module r3", "r5 = r4 iterator", "label $ z2 = r5 have next", "if $ z2 == 0 goto label5", "$ r9 = r5 next", "r6 = net sf saxon query query module $ r9", "$ z3 = r6 import namespace indirectly r1", "if $ z3 == 0 goto label4", "label goto label3", "if $ z2 == 0 goto label5", "label goto label2", "if $ z1 == 0 goto label6", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon query query module r0", "$ r1 = r2 global function library", "r3 = net sf saxon query query module r0", "$ r1 fixup global function r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon query static query context r0", "r2 executable = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon query x query expression r0", "$ z0 = r1 allow document projection", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return -1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon query x query function r0", "$ r1 = r2 executable", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon query x query function r0", "$ z0 = r1 memo function", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return -1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r4 = net sf saxon query x query function library r0", "$ r1 = r4 function", "$ r2 = $ r1 value", "$ r3 = $ r2 iterator", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r19 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r19 == null goto label7", "r23 = net sf saxon query r0", "$ z0 = r23 show time", "if $ z0 == 0 goto label1", "$ r14 = java lang system err", "r22 = new java lang string buffer", "specialinvoke r22 < init >", "$ r15 = r22 append \\ `` processing \\ ``", "r24 = javax xml transform source r19", "$ r16 = r24 get system id", "$ r17 = $ r15 append $ r16", "$ r18 = $ r17 to string", "$ r14 println $ r18", "label $ z1 = r1 use context item", "if $ z1 ! = 0 goto label2", "$ r12 = java lang system err", "$ r12 println \\ `` source document ignore - query do not access the context item\\ ``", "r19 = null", "goto label6", "label if r19 == null goto label7", "r29 = net sf saxon query r0", "$ r5 = r29 config", "r30 = javax xml transform source r19", "r21 = $ r5 build document r30", "r31 = net sf saxon om item r21", "r2 set context item r31", "label return", "if $ z1 ! = 0 goto label2", "label r25 = net sf saxon query r0", "$ z2 = r25 projection", "if $ z2 == 0 goto label6", "r20 = r1 get path map", "r3 = r20 get context root", "r26 = net sf saxon query r0", "$ z3 = r26 explain", "if $ z3 == 0 goto label3", "$ r10 = java lang system err", "$ r10 println \\ `` document projection path map\\ ``", "$ r11 = java lang system err", "r20 diagnostic dump $ r11", "label if r3 == null goto label5", "$ z4 = r3 have unknown dependency", "if $ z4 == 0 goto label4", "$ r9 = java lang system err", "$ r9 println \\ `` document projection for the context document be not possible because the query use path that defy analysis\\ ``", "if $ z4 == 0 goto label4", "label r27 = net sf saxon query r0", "$ r7 = r27 config", "r4 = $ r7 make document projector r3", "r28 = javax xml transform source r19", "r19 = net sf saxon augment source make augment source r28", "$ r8 = net sf saxon augment source r19", "$ r8 add filter r4", "label if r3 == null goto label5", "label $ r6 = java lang system err", "$ r6 println \\ `` source document supply but query do not access the context item\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["$ r0 = net sf saxon sort global order comparer instance", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r11 = new net sf saxon sort int hash map $ int hash map key iterator", "r13 = net sf saxon sort int hash map r0", "specialinvoke r11 < init > r13", "label r14 = net sf saxon sort int iterator r11", "$ z0 = r14 have next", "if $ z0 == 0 goto label2", "r15 = net sf saxon sort int iterator r11", "i0 = r15 next", "r16 = net sf saxon sort int hash map r0", "r2 = r16 get i0", "$ r5 = java lang system err", "r12 = new java lang string buffer", "specialinvoke r12 < init >", "$ r6 = r12 append i0", "$ r7 = $ r6 append \\ `` - > \\ ``", "$ r8 = r2 to string", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 to string", "$ r5 println $ r10", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i3 = 0", "label r2 = net sf saxon sort int to int array map r0", "$ i1 = r2 use", "if i3 > = $ i1 goto label3", "r3 = net sf saxon sort int to int array map r0", "$ r1 = r3 key", "$ i2 = $ r1 [ i3 ]", "if $ i2 ! = i0 goto label2", "return 1", "if $ i2 ! = i0 goto label2", "label i3 = i3 + 1", "goto label1", "if i3 > = $ i1 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r2 = new net sf saxon sort int to int hash map $ int to int hash map key iterator", "r3 = net sf saxon sort int to int hash map r0", "specialinvoke r2 < init > r3", "r4 = net sf saxon sort int iterator r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon sort name collation r0", "$ r1 = r2 uri", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon sort sort key definition r0", "$ r1 = r2 case order", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon standard error handler r0", "r2 error output = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = new net sf saxon standard error listener", "specialinvoke $ r1 < init >", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon standard error listener r0", "$ r1 = r2 error output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = net sf saxon type any item type get instance", "r2 = net sf saxon type item type $ r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon style stylesheet function library r0", "$ r1 = r3 stylesheet", "$ r2 = $ r1 get all stylesheet function", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon style use when static context r0", "$ r1 = r2 get base u r i", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon style x s l general variable r0", "$ z0 = r1 tunnel", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon style x s l general variable r0", "r1 redundant = 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon style x s l output r0", "$ r1 = r2 output format name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon style x s l stylesheet r0", "$ r1 = r2 location map", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon style x s l stylesheet r0", "$ z0 = r1 allow all build in type", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = net sf saxon sxpath abstract static context r0", "$ r3 = r7 executable", "r2 = $ r3 get function library", "$ z0 = r2 instanceof net sf saxon function function library list", "if $ z0 == 0 goto label1", "$ r5 = net sf saxon function function library list r2", "$ r5 add function library r1", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r6 = new java lang illegal state exception", "specialinvoke r6 < init > \\ `` register function library can not be extended\\ ``", "throw r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon sxpath abstract static context r0", "r2 base u r i = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon sxpath abstract static context r0", "$ r1 = r3 executable", "$ r2 = $ r1 get function library", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon sxpath abstract static context r0", "$ r1 = r2 default function namespace", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = @ parameter0", "r11 = net sf saxon sxpath independent context r0", "$ r4 = r11 namespaces", "$ r4 clear", "i0 = r10 get node kind", "if i0 == 2 goto label1", "if i0 == 3 goto label1", "if i0 == 8 goto label1", "if i0 == 7 goto label1", "if i0 ! = 13 goto label2", "label r10 = r10 get parent", "label if r10 ! = null goto label3", "return", "label if r10 ! = null goto label3", "label r1 = r10 iterate axis 8", "label $ r5 = r1 next", "r2 = net sf saxon om node info $ r5", "if r2 ! = null goto label5", "label r3 = r2 get local part", "$ r6 = \\ `` \\ ``", "$ z0 = $ r6 equal r3", "if $ z0 == 0 goto label6", "$ r9 = r2 get string value", "r12 = net sf saxon sxpath independent context r0", "r12 set default element namespace $ r9", "goto label7", "label goto label4", "if $ z0 == 0 goto label6", "label $ r7 = r2 get local part", "$ r8 = r2 get string value", "r13 = net sf saxon sxpath independent context r0", "r13 declare namespace $ r7 $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon sxpath x path dynamic context r0", "$ r1 = r2 context object", "r3 = net sf saxon expr x path context $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon sxpath x path evaluator r0", "$ r1 = r2 static context", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r19 = net sf saxon sxpath x path evaluator r0", "$ r8 = r19 static context", "r20 = net sf saxon sxpath x path evaluator r0", "$ r7 = r20 static context", "$ r9 = $ r7 get executable", "r21 = net sf saxon expr static context $ r8", "r2 = net sf saxon pattern pattern make r1 r21 $ r9", "r22 = net sf saxon sxpath x path evaluator r0", "$ r10 = r22 static context", "r23 = net sf saxon expr static context $ r10", "r3 = net sf saxon expr expression visitor make r23", "$ r11 = net sf saxon type type node_type", "r2 analyze r3 $ r11", "r24 = net sf saxon sxpath x path evaluator r0", "$ r13 = r24 static context", "r4 = $ r13 get stack frame map", "i0 = r4 get number of variable", "r25 = net sf saxon sxpath x path evaluator r0", "$ r14 = r25 static context", "r26 = net sf saxon expr static context $ r14", "i1 = r2 allocate slot r26 r4 i0", "r17 = new net sf saxon pattern pattern sponsor", "specialinvoke r17 < init > r2", "r18 = new net sf saxon sxpath x path expression", "r27 = net sf saxon sxpath x path evaluator r0", "r28 = net sf saxon expr expression r17", "specialinvoke r18 < init > r27 r28", "r18 set stack frame map r4 i1", "return r18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon sxpath x path expression r0", "$ r1 = r2 expression", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r3 = new net sf saxon tinytree char slice", "r4 = net sf saxon tinytree char slice r0", "$ r2 = r4 array", "r5 = net sf saxon tinytree char slice r0", "$ i2 = r5 offset", "$ i4 = $ i2 + i0", "$ i3 = i1 - i0", "specialinvoke r3 < init > $ r2 $ i4 $ i3", "r6 = java lang char sequence r3", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = @ parameter0", "if r2 ! = null goto label1", "r3 = new net sf saxon om fast string buffer", "r4 = net sf saxon tinytree compress whitespace r0", "$ i1 = r4 length", "specialinvoke r3 < init > $ i1", "r2 = r3", "label r5 = net sf saxon tinytree compress whitespace r0", "$ l0 = r5 value", "net sf saxon tinytree compress whitespace uncompress $ l0 r2", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = net sf saxon tinytree tiny attribute collection r0", "$ r1 = r4 tree", "$ r2 = $ r1 get name pool", "r5 = net sf saxon tinytree tiny attribute collection r0", "$ i1 = r5 get name code i0", "$ r3 = $ r2 get u r i $ i1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "return 2"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon tinytree tiny attribute impl r0", "$ r1 = r2 get parent", "$ i0 = $ r1 get line number", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = newarray int [ 4 ]", "r7 = net sf saxon tinytree tiny builder r0", "$ r2 = r7 tree", "$ i0 = $ r2 number of node", "$ r1 [ 0 ] = $ i0", "r8 = net sf saxon tinytree tiny builder r0", "$ r3 = r8 tree", "$ i1 = $ r3 number of attribute", "$ r1 [ 1 ] = $ i1", "r9 = net sf saxon tinytree tiny builder r0", "$ r4 = r9 tree", "$ i2 = $ r4 number of namespaces", "$ r1 [ 2 ] = $ i2", "r10 = net sf saxon tinytree tiny builder r0", "$ r5 = r10 tree", "$ r6 = $ r5 get character buffer", "$ i3 = $ r6 length", "$ r1 [ 3 ] = $ i3", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r10 = net sf saxon tinytree tiny document impl r0", "$ r5 = r10 entity table", "if $ r5 ! = null goto label1", "r9 = new java util hash map", "specialinvoke r9 < init > 20", "r11 = net sf saxon tinytree tiny document impl r0", "r11 entity table = r9", "label r4 = newarray java lang string [ 2 ]", "r4 [ 0 ] = r2", "r4 [ 1 ] = r3", "r12 = net sf saxon tinytree tiny document impl r0", "$ r6 = r12 entity table", "$ r6 put r1 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "$ r2 = r0 alpha", "$ i2 = $ r2 [ i0 ]", "$ l3 = long $ i2", "$ l7 = $ l3 < < 32", "$ r3 = r0 beta", "$ i4 = $ r3 [ i0 ]", "$ l5 = long $ i4", "$ l6 = $ l5 & 4294967295l", "l1 = $ l7 | $ l6", "net sf saxon tinytree compress whitespace uncompress l1 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon trace context stack frame r0", "$ r1 = r2 container", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r4 = java util event listener r0", "r5 = java util event listener r1", "$ r2 = net sf saxon trace trace event multicaster remove internal r4 r5", "$ r3 = net sf saxon trace trace listener $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set body r1", "r2 = net sf saxon trans key definition r0", "r3 = net sf saxon expr sequence iterable r1", "r2 use = r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon trans mode r0", "$ r1 = r2 mode name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon trans x path exception r0", "r1 set be static error 1", "r2 = net sf saxon trans x path exception r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon trans x path exception r0", "$ r1 = r2 error code namespace", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 equal \\ `` http saxon sf net feature configuration\\ ``", "if $ z0 == 0 goto label1", "$ r4 = net sf saxon configuration r2", "r5 = net sf saxon transformer factory impl r0", "r5 config = $ r4", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r6 = net sf saxon transformer factory impl r0", "$ r3 = r6 config", "$ r3 set configuration property r1 r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = net sf saxon tree attribute impl r0", "$ r2 = r4 get parent", "$ r2 generate id r1", "r1 append 97", "r5 = net sf saxon tree attribute impl r0", "$ i0 = r5 index", "$ r3 = java lang integer to string $ i0", "r1 append $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 to string", "r3 = net sf saxon tree comment impl r0", "r3 comment = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "i2 = @ parameter2", "r12 = net sf saxon tree line number map r0", "$ r4 = r12 sequence number", "$ i5 = lengthof $ r4", "r13 = net sf saxon tree line number map r0", "$ i3 = r13 allocate", "$ i4 = $ i3 + 1", "if $ i5 > $ i4 goto label1", "r14 = net sf saxon tree line number map r0", "$ i11 = r14 allocate", "$ i12 = $ i11 * 2", "r1 = newarray int [ $ i12 ]", "r15 = net sf saxon tree line number map r0", "$ i13 = r15 allocate", "$ i14 = $ i13 * 2", "r2 = newarray int [ $ i14 ]", "r16 = net sf saxon tree line number map r0", "$ i15 = r16 allocate", "$ i16 = $ i15 * 2", "r3 = newarray int [ $ i16 ]", "r17 = net sf saxon tree line number map r0", "$ r8 = r17 sequence number", "r18 = net sf saxon tree line number map r0", "$ i17 = r18 allocate", "java lang system arraycopy $ r8 0 r1 0 $ i17", "r19 = net sf saxon tree line number map r0", "$ r9 = r19 line number", "r20 = net sf saxon tree line number map r0", "$ i18 = r20 allocate", "java lang system arraycopy $ r9 0 r2 0 $ i18", "r21 = net sf saxon tree line number map r0", "$ r10 = r21 column number", "r22 = net sf saxon tree line number map r0", "$ i19 = r22 allocate", "java lang system arraycopy $ r10 0 r3 0 $ i19", "r23 = net sf saxon tree line number map r0", "r23 sequence number = r1", "r24 = net sf saxon tree line number map r0", "r24 line number = r2", "r25 = net sf saxon tree line number map r0", "r25 column number = r3", "label r26 = net sf saxon tree line number map r0", "$ r5 = r26 sequence number", "r27 = net sf saxon tree line number map r0", "$ i6 = r27 allocate", "$ r5 [ $ i6 ] = i0", "r28 = net sf saxon tree line number map r0", "$ r6 = r28 line number", "r29 = net sf saxon tree line number map r0", "$ i7 = r29 allocate", "$ r6 [ $ i7 ] = i1", "r30 = net sf saxon tree line number map r0", "$ r7 = r30 column number", "r31 = net sf saxon tree line number map r0", "$ i8 = r31 allocate", "$ r7 [ $ i8 ] = i2", "r32 = net sf saxon tree line number map r0", "$ i9 = r32 allocate", "$ i10 = $ i9 + 1", "r33 = net sf saxon tree line number map r0", "r33 allocate = $ i10", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon tree proc inst impl r0", "$ r1 = r2 system id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 632"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = net sf saxon value calendar value r0", "r7 = r9 to date time", "r8 = r1 to date time", "$ i0 = r7 get timezone in minute", "$ i1 = r8 get timezone in minute", "if $ i0 == $ i1 goto label1", "r7 = r7 normalize r2", "r8 = r8 normalize r2", "label r3 = r7 to julian instant", "r4 = r8 to julian instant", "r5 = r3 subtract r4", "$ r6 = net sf saxon value day time duration value from second r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r4 = new net sf saxon value sequence extent", "r5 = net sf saxon value closure r0", "$ r2 = r5 iterate", "specialinvoke r4 < init > $ r2", "$ r3 = r4 reduce", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = net sf saxon type build in atomic type decimal", "r6 = net sf saxon value numeric value r0", "$ r2 = r6 convert primitive $ r1 1 null", "$ r3 = $ r2 a atomic", "$ r4 = net sf saxon value decimal value $ r3", "$ r5 = $ r4 get decimal value", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon value qualify name value r0", "$ r1 = r3 q name", "$ r2 = $ r1 get clark name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = net sf saxon version structured_version", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org openqa selenium architecture r0", "$ z0 = r2 equal r1", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium interaction action r0", "$ r1 = r2 release null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium interaction action r0", "r1 = r2 action", "r3 = org openqa selenium interaction action r0", "specialinvoke r3 reset composite action", "r4 = org openqa selenium interaction action r1", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org openqa selenium interaction touch touch action r0", "$ r5 = r8 action", "r7 = new org openqa selenium interaction touch long press action", "r9 = org openqa selenium interaction touch touch action r0", "$ r4 = r9 touch screen", "$ r3 = org openqa selenium internal locatable r1", "specialinvoke r7 < init > $ r4 $ r3", "r10 = org openqa selenium interaction action r7", "$ r5 add action r10", "r11 = org openqa selenium interaction touch touch action r0", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["$ r0 = java lang system get property \\ `` os name\\ ``", "$ r1 = org openqa selenium platform extract from sys property $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ r1 = org openqa selenium platform any", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium proxy r0", "$ r1 = r2 ssl proxy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org openqa selenium proxy $ proxy type manual", "r4 = org openqa selenium proxy r0", "specialinvoke r4 verify proxy type compatibility $ r2", "$ r3 = org openqa selenium proxy $ proxy type manual", "r5 = org openqa selenium proxy r0", "r5 proxy type = $ r3", "r6 = org openqa selenium proxy r0", "r6 sock username = r1", "r7 = org openqa selenium proxy r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org openqa selenium proxy $ proxy type manual", "r4 = org openqa selenium proxy r0", "specialinvoke r4 verify proxy type compatibility $ r2", "$ r3 = org openqa selenium proxy $ proxy type manual", "r5 = org openqa selenium proxy r0", "r5 proxy type = $ r3", "r6 = org openqa selenium proxy r0", "r6 sock password = r1", "r7 = org openqa selenium proxy r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` frame id be required\\ ``", "r5 = new org openqa selenium devtools command", "$ r3 = com google common collect immutable map of \\ `` frame id\\", "$ r4 = org openqa selenium devtools converter function map \\ `` application cache\\", "r6 = java util map $ r3", "specialinvoke r5 < init > \\ `` application cache get application cache for frame\\", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r2 = new org openqa selenium devtools command", "$ r1 = com google common collect immutable map of", "r3 = java util map $ r1", "specialinvoke r2 < init > \\ `` fetch disable\\", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "java util object require non null r0 \\ `` request id be required\\ ``", "java util object require non null r1 \\ `` auth challenge response be required\\ ``", "r7 = new org openqa selenium devtools command", "$ r5 = r0 to string", "$ r6 = com google common collect immutable map of \\ `` request id\\", "r8 = java util map $ r6", "specialinvoke r7 < init > \\ `` fetch continue with auth\\", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model call frame r0", "$ r1 = r2 script id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model initiator r0", "$ r1 = r2 line number", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model request r0", "$ r1 = r2 have post data", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model request r0", "$ r1 = r2 referrer policy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model request pattern r0", "$ r1 = r2 url pattern", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model request pattern r0", "$ r1 = r2 resource type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model resource time r0", "$ r1 = r2 push end", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model response r0", "$ r1 = r2 remote i p address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model security detail r0", "$ r1 = r2 san list", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model sign exchange error r0", "$ r1 = r2 signature index", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model sign exchange signature r0", "$ r1 = r2 cert sha256", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model sign exchange signature r0", "$ r1 = r2 validity url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model sign exchange signature r0", "$ r1 = r2 date", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = new org openqa selenium devtools event", "$ r1 = org openqa selenium devtools converter function map \\ `` interception id\\", "specialinvoke $ r0 < init > \\ `` network request intercepted\\", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = new org openqa selenium devtools event", "$ r1 = org openqa selenium devtools converter function map \\ `` request id\\", "specialinvoke $ r0 < init > \\ `` network web socket frame error\\", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r3 = new org openqa selenium devtools command", "$ r1 = com google common collect immutable map of", "$ r2 = org openqa selenium devtools converter function map \\ `` profile\\", "r4 = java util map $ r1", "specialinvoke r3 < init > \\ `` profiler stop\\", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = new org openqa selenium devtools event", "$ r1 = org openqa selenium devtools converter function map \\ `` session id\\", "specialinvoke $ r0 < init > \\ `` target received message from target\\", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = new org openqa selenium devtools event", "$ r1 = org openqa selenium devtools converter function map \\ `` target id\\", "specialinvoke $ r0 < init > \\ `` target target destroyed\\", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com google common io resource get resource class \\ `` lorg openqa selenium firefox firefox profile \\", "label r7 = new java io input stream reader", "$ r4 = r1 open stream", "specialinvoke r7 < init > $ r4", "label return r7"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r3 = org openqa selenium firefox firefox profile r0", "$ r2 = r3 additional prefs", "$ r2 set preference r1 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r3 = org openqa selenium firefox firefox profile r0", "$ r2 = r3 additional prefs", "$ r2 set preference r1 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org openqa selenium remote http http response r0", "r3 set attribute \\ `` http target host\\", "r4 = org openqa selenium remote http http response r0", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com google common collect immutable list copy of r1", "r4 = org openqa selenium opera opera option r0", "r5 = java util list $ r2", "r4 add extension r5", "r6 = org openqa selenium opera opera option r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org openqa selenium opera opera option r0", "$ r2 = r5 experimental option", "$ r3 = com google common base precondition check not null r1", "$ r4 = $ r2 get $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = newarray java lang string [ 2 ]", "$ r1 [ 0 ] = \\ `` usr bin\\ ``", "$ r1 [ 1 ] = \\ `` application google chrome app content mac o s\\ ``", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium o command line r0", "$ r1 = r2 process", "$ z0 = $ r1 be run", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = org openqa selenium o windows utils load environment", "r9 = r0 get property \\ `` system root\\ ``", "if r9 ! = null goto label1", "r9 = r0 get property \\ `` systemroot\\ ``", "label if r9 ! = null goto label2", "r9 = r0 get property \\ `` systemroot\\ ``", "label if r9 ! = null goto label3", "$ r8 = new java lang runtime exception", "specialinvoke $ r8 < init > \\ `` system root apparently not set ! \\ ``", "throw $ r8", "label if r9 ! = null goto label3", "label $ r2 = new java io file", "specialinvoke $ r2 < init > r9", "$ z0 = $ r2 exist", "if $ z0 ! = 0 goto label4", "$ r3 = new java lang runtime exception", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = $ r4 append \\ `` system root doesn\\'t exist \\ ``", "$ r6 = $ r5 append r9", "$ r7 = $ r6 to string", "specialinvoke $ r3 < init > $ r7", "throw $ r3", "if $ z0 ! = 0 goto label4", "label return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], []]}
{"nodes": ["r0 = @ this", "r20 = org openqa selenium remote service driver service r0", "$ r2 = r20 lock", "$ r2 lock", "label r21 = org openqa selenium remote service driver service r0", "$ r3 = r21 process", "if $ r3 == null goto label3", "label r22 = org openqa selenium remote service driver service r0", "$ r16 = r22 lock", "$ r16 unlock", "return", "if $ r3 == null goto label3", "label r19 = new org openqa selenium o command line", "r23 = org openqa selenium remote service driver service r0", "$ r7 = r23 executable", "r24 = org openqa selenium remote service driver service r0", "$ r6 = r24 args", "$ r5 = newarray java lang string [ 0 ]", "$ r8 = $ r6 to array $ r5", "$ r9 = java lang string [ ] $ r8", "specialinvoke r19 < init > $ r7 $ r9", "r25 = org openqa selenium remote service driver service r0", "r25 process = r19", "r26 = org openqa selenium remote service driver service r0", "$ r11 = r26 process", "r27 = org openqa selenium remote service driver service r0", "$ r10 = r27 environment", "r28 = java util map $ r10", "$ r11 set environment variable r28", "r29 = org openqa selenium remote service driver service r0", "$ r13 = r29 process", "$ r12 = java lang system err", "$ r13 copy output to $ r12", "r30 = org openqa selenium remote service driver service r0", "$ r14 = r30 process", "$ r14 execute async", "r31 = org openqa selenium remote service driver service r0", "r31 wait until available", "label r32 = org openqa selenium remote service driver service r0", "$ r15 = r32 lock", "$ r15 unlock", "goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], []]}
{"nodes": ["r0 = @ this", "r20 = org openqa selenium net network utils r0", "r1 = specialinvoke r20 get loop back and ip4 only", "if r1 == null goto label1", "$ r9 = r1 get ip4 loopback only", "$ r10 = $ r9 get host name", "return $ r10", "if r1 == null goto label1", "label r21 = org openqa selenium net network utils r0", "r2 = r21 get ip of loop back ip4", "if r2 == null goto label2", "return r2", "if r2 == null goto label2", "label $ r5 = org openqa selenium platform get current", "$ r6 = org openqa selenium platform unix", "$ z0 = $ r5 be $ r6", "if $ z0 == 0 goto label3", "r22 = org openqa selenium net network utils r0", "$ r7 = r22 network interface provider", "r3 = $ r7 get lo interface", "if r3 == null goto label3", "r4 = r3 get ip4 loopback only", "if r4 == null goto label3", "$ r8 = r4 get host address", "return $ r8", "if r4 == null goto label3", "label r19 = new org openqa selenium web driver exception", "r18 = new java lang string builder", "specialinvoke r18 < init >", "$ r13 = r18 append \\ `` unable to resolve local loopback address please file an issue with the full message of this error\\n\\ ``", "$ r14 = org openqa selenium net network utils get net work diags", "$ r15 = $ r13 append $ r14", "$ r16 = $ r15 append \\ `` \\n==== end of error message\\ ``", "$ r17 = $ r16 to string", "specialinvoke r19 < init > $ r17", "r23 = java lang throwable r19", "throw r23"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org openqa selenium remote remote web driver builder r0", "$ r5 = r8 option", "$ r5 clear", "r9 = org openqa selenium remote remote web driver builder r0", "r9 add alternative r1", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label2", "r4 = r2 [ i1 ]", "r10 = org openqa selenium remote remote web driver builder r0", "r10 add alternative r4", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label r11 = org openqa selenium remote remote web driver builder r0", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = java util object require non null r1", "$ r4 = org openqa selenium capability $ r3", "r6 = org openqa selenium remote remote web driver builder r0", "r2 = specialinvoke r6 validate $ r4", "r7 = org openqa selenium remote remote web driver builder r0", "$ r5 = r7 option", "$ r5 add r2", "r8 = org openqa selenium remote remote web driver builder r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r16 = org openqa grid internal new session request queue r0", "$ r3 = r16 lock", "$ r4 = $ r3 read lock", "$ r4 lock", "label r17 = org openqa grid internal new session request queue r0", "$ r5 = r17 new session request", "$ r6 = $ r5 stream", "$ r7 = new session request queue $ lambda_get desire capabilities_2__3 bootstrap $", "$ r8 = $ r6 map $ r7", "$ r9 = java util stream collector to list", "$ r10 = $ r8 collect $ r9", "r1 = java lang iterable $ r10", "label r18 = org openqa grid internal new session request queue r0", "$ r11 = r18 lock", "$ r12 = $ r11 read lock", "$ r12 unlock", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa grid internal utils configuration json hub json configuration r0", "$ r1 = r2 clean up cycle", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 250l"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r6 = org openqa selenium support pagefactory default element locator r0", "$ r2 = r6 cache element list", "if $ r2 == null goto label1", "r7 = org openqa selenium support pagefactory default element locator r0", "$ z1 = r7 should cache", "if $ z1 == 0 goto label1", "r8 = org openqa selenium support pagefactory default element locator r0", "$ r5 = r8 cache element list", "return $ r5", "if $ z1 == 0 goto label1", "label r9 = org openqa selenium support pagefactory default element locator r0", "$ r4 = r9 search context", "r10 = org openqa selenium support pagefactory default element locator r0", "$ r3 = r10 by", "r1 = $ r4 find element $ r3", "r11 = org openqa selenium support pagefactory default element locator r0", "$ z0 = r11 should cache", "if $ z0 == 0 goto label2", "r12 = org openqa selenium support pagefactory default element locator r0", "r12 cache element list = r1", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org openqa selenium support ui expect condition $ 5", "specialinvoke r2 < init > r0", "r3 = org openqa selenium support ui expect condition r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org openqa selenium support ui expect condition $ 8", "specialinvoke r2 < init > r0", "r3 = org openqa selenium support ui expect condition r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r4 = new org openqa selenium support ui expect condition $ 31", "specialinvoke r4 < init > r0 r1 r2", "r5 = org openqa selenium support ui expect condition r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org openqa selenium support ui expect condition $ 36", "specialinvoke r3 < init > r0 r1", "r4 = org openqa selenium support ui expect condition r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org openqa selenium support ui expect condition $ 46", "specialinvoke r2 < init > r0", "r3 = org openqa selenium support ui expect condition r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org openrdf model vocabulary x m l schema duration", "$ z0 = r0 equal $ r1", "if $ z0 ! = 0 goto label1", "$ r2 = org openrdf model vocabulary x m l schema datetime", "$ z1 = r0 equal $ r2", "if $ z1 ! = 0 goto label1", "$ r3 = org openrdf model vocabulary x m l schema time", "$ z2 = r0 equal $ r3", "if $ z2 ! = 0 goto label1", "$ r4 = org openrdf model vocabulary x m l schema date", "$ z3 = r0 equal $ r4", "if $ z3 ! = 0 goto label1", "$ r5 = org openrdf model vocabulary x m l schema gyearmonth", "$ z4 = r0 equal $ r5", "if $ z4 ! = 0 goto label1", "$ r6 = org openrdf model vocabulary x m l schema gyear", "$ z5 = r0 equal $ r6", "if $ z5 ! = 0 goto label1", "$ r7 = org openrdf model vocabulary x m l schema gmonthday", "$ z6 = r0 equal $ r7", "if $ z6 ! = 0 goto label1", "$ r8 = org openrdf model vocabulary x m l schema gday", "$ z7 = r0 equal $ r8", "if $ z7 ! = 0 goto label1", "$ r9 = org openrdf model vocabulary x m l schema gmonth", "$ z8 = r0 equal $ r9", "if $ z8 ! = 0 goto label1", "$ r10 = org openrdf model vocabulary x m l schema string", "$ z9 = r0 equal $ r10", "if $ z9 ! = 0 goto label1", "$ r11 = org openrdf model vocabulary x m l schema boolean", "$ z10 = r0 equal $ r11", "if $ z10 ! = 0 goto label1", "$ r12 = org openrdf model vocabulary x m l schema base64binary", "$ z11 = r0 equal $ r12", "if $ z11 ! = 0 goto label1", "$ r13 = org openrdf model vocabulary x m l schema hexbinary", "$ z12 = r0 equal $ r13", "if $ z12 ! = 0 goto label1", "$ r14 = org openrdf model vocabulary x m l schema float", "$ z13 = r0 equal $ r14", "if $ z13 ! = 0 goto label1", "$ r15 = org openrdf model vocabulary x m l schema decimal", "$ z14 = r0 equal $ r15", "if $ z14 ! = 0 goto label1", "$ r16 = org openrdf model vocabulary x m l schema double", "$ z15 = r0 equal $ r16", "if $ z15 ! = 0 goto label1", "$ r17 = org openrdf model vocabulary x m l schema anyuri", "$ z16 = r0 equal $ r17", "if $ z16 ! = 0 goto label1", "$ r18 = org openrdf model vocabulary x m l schema qname", "$ z17 = r0 equal $ r18", "if $ z17 ! = 0 goto label1", "$ r19 = org openrdf model vocabulary x m l schema notation", "$ z18 = r0 equal $ r19", "if $ z18 == 0 goto label2", "label $ z19 = 1", "goto label3", "label return $ z19", "if $ z18 == 0 goto label2", "label $ z19 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [], [61], [62], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 match \\ `` - ? \\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d z| \\\\+|- \\\\d\\\\d\\\\d\\\\d ? \\ ``", "if $ z0 == 0 goto label1", "$ z1 = org openrdf model datatypes x m l datatype util be valid calendar value r0", "return $ z1", "if $ z0 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org openrdf model datatypes x m l datatype util normalize integer value r0 \\ `` 0\\", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org openrdf model datatypes x m l datatype util normalize integer r0", "r3 = org openrdf model datatypes x m l datatype util normalize integer r1", "$ i0 = org openrdf model datatypes x m l datatype util compare canonical integer r2 r3", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = javax xml datatype datatype constant datetime", "$ z0 = $ r1 equal r0", "if $ z0 == 0 goto label1", "$ r24 = org openrdf model vocabulary x m l schema datetime", "return $ r24", "if $ z0 == 0 goto label1", "label $ r2 = javax xml datatype datatype constant date", "$ z1 = $ r2 equal r0", "if $ z1 == 0 goto label2", "$ r23 = org openrdf model vocabulary x m l schema date", "return $ r23", "if $ z1 == 0 goto label2", "label $ r3 = javax xml datatype datatype constant time", "$ z2 = $ r3 equal r0", "if $ z2 == 0 goto label3", "$ r22 = org openrdf model vocabulary x m l schema time", "return $ r22", "if $ z2 == 0 goto label3", "label $ r4 = javax xml datatype datatype constant gyearmonth", "$ z3 = $ r4 equal r0", "if $ z3 == 0 goto label4", "$ r21 = org openrdf model vocabulary x m l schema gyearmonth", "return $ r21", "if $ z3 == 0 goto label4", "label $ r5 = javax xml datatype datatype constant gmonthday", "$ z4 = $ r5 equal r0", "if $ z4 == 0 goto label5", "$ r20 = org openrdf model vocabulary x m l schema gmonthday", "return $ r20", "if $ z4 == 0 goto label5", "label $ r6 = javax xml datatype datatype constant gyear", "$ z5 = $ r6 equal r0", "if $ z5 == 0 goto label6", "$ r19 = org openrdf model vocabulary x m l schema gyear", "return $ r19", "if $ z5 == 0 goto label6", "label $ r7 = javax xml datatype datatype constant gmonth", "$ z6 = $ r7 equal r0", "if $ z6 == 0 goto label7", "$ r18 = org openrdf model vocabulary x m l schema gmonth", "return $ r18", "if $ z6 == 0 goto label7", "label $ r8 = javax xml datatype datatype constant gday", "$ z7 = $ r8 equal r0", "if $ z7 == 0 goto label8", "$ r17 = org openrdf model vocabulary x m l schema gday", "return $ r17", "if $ z7 == 0 goto label8", "label $ r9 = javax xml datatype datatype constant duration", "$ z8 = $ r9 equal r0", "if $ z8 == 0 goto label9", "$ r16 = org openrdf model vocabulary x m l schema duration", "return $ r16", "if $ z8 == 0 goto label9", "label $ r10 = new java lang illegal argument exception", "$ r11 = new java lang string builder", "specialinvoke $ r11 < init >", "$ r12 = $ r11 append \\ `` q name can not be map to an xml schema uri \\ ``", "$ r13 = r0 to string", "$ r14 = $ r12 append $ r13", "$ r15 = $ r14 to string", "specialinvoke $ r10 < init > $ r15", "throw $ r10"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [], [37], [38], [39], [40], [41], [], [43], [44], [45], [46], [47], [], [49], [50], [51], [52], [53], [], [55], [56], [57], [58], [59], [60], [61], [62], [63], []]}
{"nodes": ["r0 = @ this", "r1 = org openrdf model datatypes x m l date time r0", "$ z0 = r1 be normalize", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = new java lang string builder", "specialinvoke r10 < init > 256", "$ r3 = specialinvoke r0 to string", "r10 append $ r3", "$ r5 = r10 append \\ `` [ \\ ``", "r11 = org openrdf model impl context statement impl r0", "$ r6 = r11 get context", "$ r7 = $ r5 append $ r6", "$ r7 append \\ `` ] \\ ``", "$ r9 = r10 to string", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "label $ z1 = r0 boolean value", "label return $ z1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openrdf rio helper context statement collector r0", "$ r1 = r2 statement", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org openrdf rio helper context statement collector r0", "$ r1 = r2 statement", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org openrdf rio helper r d f parser base r0", "r2 base u r i = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org openrdf rio r d f format rdf_formats", "r5 = info aduna lang file format r1", "$ r3 = org openrdf rio r d f format match file name r0 $ r2 r5", "$ r4 = org openrdf rio r d f format $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = org openrdf rio rdfxml r d f x m l parser r0", "$ r1 = r5 get parser config", "$ r2 = org openrdf rio helper x m l parser setting parse_standalone_documents", "$ r3 = $ r1 get $ r2", "$ r4 = java lang boolean $ r3", "$ z0 = $ r4 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r1 = newarray byte [ i1 ]", "java lang system arraycopy r0 i0 r1 0 i1", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "i1 = @ parameter3", "i2 = @ parameter4", "i9 = 0", "i10 = 0", "label if i9 ! = 0 goto label2", "if i10 > = i2 goto label2", "$ i3 = i0 + i10", "$ b4 = r0 [ $ i3 ]", "$ s8 = $ b4 & 255", "$ i5 = i1 + i10", "$ b6 = r1 [ $ i5 ]", "$ s7 = $ b6 & 255", "i9 = $ s8 - $ s7", "i10 = i10 + 1", "goto label1", "if i10 > = i2 goto label2", "label return i9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = new java lang string builder", "$ i0 = lengthof r0", "$ i1 = 2 * $ i0", "specialinvoke $ r3 < init > $ i1", "i6 = 0", "label $ i2 = lengthof r0", "if i6 > = $ i2 goto label3", "$ b3 = r0 [ i6 ]", "$ s4 = $ b3 & 255", "r2 = java lang integer to hex string $ s4", "$ i5 = r2 length", "if $ i5 ! = 1 goto label2", "$ r3 append 48", "label $ r3 append r2", "i6 = i6 + 1", "goto label1", "if i6 > = $ i2 goto label3", "label $ r4 = $ r3 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = info aduna lang file format r0", "r2 = r3 get default file extension", "if r2 == null goto label1", "$ z0 = r2 equal ignore case r1", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = info aduna lang service file format service registry r0", "$ r3 = r5 get key", "$ r4 = info aduna lang file format match file name r1 $ r3 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = info aduna text string util gsub \\ `` & \\", "r2 = info aduna text string util gsub \\ `` < \\", "r3 = info aduna text string util gsub \\ `` > \\", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jboss shrinkwrap descriptor api descriptor create r0 null", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r2 = null", "$ i0 = r0 last index of 47", "if $ i0 == -1 goto label1", "$ i1 = r0 last index of 47", "r2 = r0 substring 0 $ i1", "label r3 = new org jboss shrinkwrap impl base path basic path", "specialinvoke r3 < init > r2", "r4 = org jboss shrinkwrap api archive path r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "label org jboss shrinkwrap impl base io i o util copy r0 r1", "label r0 close", "label goto label05", "label r1 close", "label goto label17", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org jboss shrinkwrap impl base io tar tar entry r0", "r1 ustar format = 1", "r2 = org jboss shrinkwrap impl base io tar tar entry r0", "r2 gnu format = 0", "r3 = org jboss shrinkwrap impl base io tar tar entry r0", "r3 unix format = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = r2 end with \\ `` \\ ``", "r15 = org jboss shrinkwrap impl base io tar tar entry r0", "r15 gnu format = 0", "r16 = org jboss shrinkwrap impl base io tar tar entry r0", "r16 ustar format = 1", "r17 = org jboss shrinkwrap impl base io tar tar entry r0", "r17 unix format = 0", "r1 check sum = 0", "r1 dev major = 0", "r1 dev minor = 0", "r10 = new java lang string buffer", "specialinvoke r10 < init > r2", "r1 name = r10", "if z0 == 0 goto label1", "$ c2 = 16877", "goto label2", "label r1 mode = $ c2", "r1 user id = 0", "r1 group id = 0", "r1 size = 0l", "if z0 == 0 goto label1", "label $ c2 = 33188"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org jboss shrinkwrap impl base validate not null r1 \\ `` no node be specified\\ ``", "r3 = org jboss shrinkwrap impl base node impl r0", "$ r2 = r3 child", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = io prometheus client counter r0", "$ r1 = r3 no label child", "$ r2 = io prometheus client counter $ child $ r1", "$ d0 = $ r2 get", "return $ d0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = new io prometheus client histogram $ builder", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = lengthof r1", "r16 = io prometheus client simple collector r0", "$ r2 = r16 label name", "$ i1 = $ r2 size", "if $ i0 == $ i1 goto label1", "r14 = new java lang illegal argument exception", "specialinvoke r14 < init > \\ `` incorrect number of label \\ ``", "throw r14", "if $ i0 == $ i1 goto label1", "label i2 = lengthof r1", "i3 = 0", "label if i3 > = i2 goto label4", "r8 = r1 [ i3 ]", "if r8 ! = null goto label3", "r15 = new java lang illegal argument exception", "specialinvoke r15 < init > \\ `` label can not be null \\ ``", "throw r15", "if r8 ! = null goto label3", "label i3 = i3 + 1", "goto label2", "label if i3 > = i2 goto label4", "label r9 = java util array a list r1", "r17 = io prometheus client simple collector r0", "$ r3 = r17 child", "r10 = $ r3 get r9", "if r10 == null goto label5", "return r10", "if r10 == null goto label5", "label r18 = io prometheus client simple collector r0", "r11 = r18 new child", "r19 = io prometheus client simple collector r0", "$ r4 = r19 child", "r12 = $ r4 put if absent r9 r11", "if r12 ! = null goto label6", "$ r13 = r11", "goto label7", "label return $ r13", "if r12 ! = null goto label6", "label $ r13 = r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org yaml snakeyaml node tag", "specialinvoke r3 < init > r1", "r4 = org yaml snakeyaml type description r0", "r4 set tag r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org yaml snakeyaml java bean loader r0", "$ r3 = r6 loader", "r5 = new org yaml snakeyaml reader unicode reader", "specialinvoke r5 < init > r1", "r7 = java io reader r5", "$ r4 = $ r3 load r7", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org yaml snakeyaml reader unicode reader", "specialinvoke r4 < init > r1", "r5 = org yaml snakeyaml yaml r0", "r6 = java io reader r4", "$ r3 = r5 load all r6", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r1 = @ parameter3", "i2 = @ parameter4", "$ i3 = org xerial snappy snappy raw compress r0 i0 i1 r1 i2", "return $ i3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "if r0 ! = null goto label1", "$ r2 = new java lang null pointer exception", "specialinvoke $ r2 < init > \\ `` input be null\\ ``", "throw $ r2", "if r0 ! = null goto label1", "label $ r1 = org xerial snappy snappy impl", "$ z0 = $ r1 be valid compressed buffer r0 i0 i1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "i2 = org xerial snappy snappy uncompress length r0 i0 i1", "$ i4 = i2 2", "r1 = newarray char [ $ i4 ]", "$ r2 = org xerial snappy snappy impl", "$ r2 raw uncompress r0 i0 i1 r1 0", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org xerial snappy snappy impl", "$ i0 = lengthof r0", "$ i1 = $ r1 uncompressed length r0 0 $ i0", "return $ i1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "$ r1 = org xerial snappy snappy uncompress float array r0 0 $ i0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "label $ r2 = org xerial snappy snappy uncompress string r0 \\ `` utf-8\\ ``", "label return $ r2"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "i13 = 0", "label if i13 > = i1 goto label6", "r3 = org xerial snappy snappy input stream r0", "$ i4 = r3 uncompress cursor", "r4 = org xerial snappy snappy input stream r0", "$ i3 = r4 uncompress limit", "if $ i4 < $ i3 goto label5", "r5 = org xerial snappy snappy input stream r0", "$ z0 = r5 have next chunk", "if $ z0 == 0 goto label2", "goto label1", "if $ z0 == 0 goto label2", "label if i13 ! = 0 goto label3", "$ i14 = -1", "goto label4", "label return $ i14", "label if i13 ! = 0 goto label3", "label $ i14 = i13", "if $ i4 < $ i3 goto label5", "label r6 = org xerial snappy snappy input stream r0", "$ i6 = r6 uncompress limit", "r7 = org xerial snappy snappy input stream r0", "$ i5 = r7 uncompress cursor", "$ i8 = $ i6 - $ i5", "$ i7 = i1 - i13", "i2 = java lang math min $ i8 $ i7", "r8 = org xerial snappy snappy input stream r0", "$ r2 = r8 uncompress", "r9 = org xerial snappy snappy input stream r0", "$ i10 = r9 uncompress cursor", "$ i9 = i0 + i13", "org xerial snappy snappy array copy $ r2 $ i10 i2 r1 $ i9", "i13 = i13 + i2", "r10 = org xerial snappy snappy input stream r0", "$ i11 = r10 uncompress cursor", "$ i12 = $ i11 + i2", "r11 = org xerial snappy snappy input stream r0", "r11 uncompress cursor = $ i12", "label if i13 > = i1 goto label6", "label return i13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = spark exception mapper r0", "$ r3 = r5 exception map", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = spark request r0", "$ r2 = r4 servlet request", "$ r3 = $ r2 get attribute r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == null goto label01", "$ i0 = r0 length", "if $ i0 ! = 0 goto label03", "label if r0 == null goto label02", "if r1 ! = null goto label02", "return r0", "if r1 ! = null goto label02", "label return r1", "if $ i0 ! = 0 goto label03", "label if r1 == null goto label04", "$ i1 = r1 length", "if $ i1 ! = 0 goto label05", "label return r0", "if $ i1 ! = 0 goto label05", "label i11 = r0 index of 59", "if i11 > = 0 goto label06", "i11 = r0 index of 63", "label if i11 ! = 0 goto label07", "$ r11 = new java lang string builder", "specialinvoke $ r11 < init >", "$ r12 = $ r11 append r1", "$ r13 = $ r12 append r0", "$ r14 = $ r13 to string", "return $ r14", "label if i11 ! = 0 goto label07", "label if i11 > = 0 goto label08", "i11 = r0 length", "label $ r3 = new java lang string builder", "$ i2 = r0 length", "$ i3 = r1 length", "$ i4 = $ i2 + $ i3", "$ i5 = $ i4 + 2", "specialinvoke $ r3 < init > $ i5", "$ r3 append r0", "$ i6 = i11 - 1", "$ c7 = $ r3 char at $ i6", "if $ c7 ! = 47 goto label10", "$ z1 = r1 start with \\ `` \\ ``", "if $ z1 == 0 goto label09", "$ i9 = i11 - 1", "$ r3 delete char at $ i9", "$ i10 = i11 - 1", "$ r3 insert $ i10 r1", "goto label12", "label $ r15 = $ r3 to string", "return $ r15", "if $ z1 == 0 goto label09", "label $ r3 insert i11 r1", "if $ c7 ! = 47 goto label10", "label $ z0 = r1 start with \\ `` \\ ``", "if $ z0 == 0 goto label11", "$ r3 insert i11 r1", "if $ z0 == 0 goto label11", "label $ r3 insert i11 47", "$ i8 = i11 + 1", "$ r3 insert $ i8 r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [], [47], [], [49], [50], [51], [52], [53], [54], [55], [56], [57], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = spark route http method post", "$ r4 = $ r3 name", "$ r5 = spark route impl create r1 r2", "r6 = spark routable r0", "r6 add route $ r4 $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = spark route http method trace", "$ r4 = $ r3 name", "$ r5 = spark route impl create r1 r2", "r6 = spark routable r0", "r6 add route $ r4 $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = spark route http method option", "$ r4 = $ r3 name", "$ r5 = spark route impl create r1 r2", "r6 = spark routable r0", "r6 add route $ r4 $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new spark embeddedserver jetty websocket web socket handler class wrapper", "specialinvoke r4 < init > r2", "r5 = spark service r0", "r6 = spark embeddedserver jetty websocket web socket handler wrapper r4", "specialinvoke r5 add web socket handler r1 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "spark utils assert not null r1 \\ `` \\'folder\\ ' must not be null\\ ``", "r22 = spark staticfiles static file configuration r0", "$ z0 = r22 static resource set", "if $ z0 ! = 0 goto label10", "label r18 = new spark resource class path resource", "specialinvoke r18 < init > r1", "r23 = spark staticfiles static file configuration r0", "$ z1 = specialinvoke r23 configure jar case r1 r18", "if $ z1 == 0 goto label03", "label return", "if $ z1 == 0 goto label03", "label $ r3 = r18 get file", "$ z2 = $ r3 be directory", "if $ z2 ! = 0 goto label05", "r24 = spark staticfiles static file configuration r0", "$ r13 = r24 log", "$ r13 error \\ `` static resource location must be a folder\\ ``", "label return", "if $ z2 ! = 0 goto label05", "label r25 = spark staticfiles static file configuration r0", "$ r4 = r25 static resource handler", "if $ r4 ! = null goto label06", "r19 = new java util array list", "specialinvoke r19 < init >", "r26 = spark staticfiles static file configuration r0", "r26 static resource handler = r19", "label r27 = spark staticfiles static file configuration r0", "$ r6 = r27 static resource handler", "r20 = new spark resource class path resource handler", "specialinvoke r20 < init > r1 \\ `` index html\\ ``", "$ r6 add r20", "r28 = spark staticfiles static file configuration r0", "$ r8 = r28 log", "r21 = new java lang string builder", "specialinvoke r21 < init >", "$ r9 = r21 append \\ `` static resource handler configure with folder = \\ ``", "$ r10 = $ r9 append r1", "$ r11 = $ r10 to string", "$ r8 info $ r11", "label goto label09", "label r30 = spark staticfiles static file configuration r0", "r30 static resource set = 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = new spark model and view", "specialinvoke $ r3 < init > r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache spark memory memory consumer r0", "r2 = org apache spark memory memory consumer r0", "r1 spill 9223372036854775807l r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org apache spark launcher command builder utils check not null r1 \\ `` mode\\ ``", "r3 = org apache spark launcher spark launcher r0", "$ r2 = r3 builder", "$ r2 deploy mode = r1", "r4 = org apache spark launcher spark launcher r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = new org apache spark launcher spark launcher $ argument validator", "specialinvoke r8 < init > 0", "$ r4 = newarray java lang string [ 1 ]", "$ r4 [ 0 ] = r1", "$ r5 = java util array a list $ r4", "r9 = org apache spark launcher spark submit option parser r8", "r9 parse $ r5", "r10 = org apache spark launcher spark launcher r0", "$ r6 = r10 builder", "$ r7 = $ r6 spark args", "$ r7 add r1", "r11 = org apache spark launcher spark launcher r0", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r1 [ i1 ]", "org apache spark launcher command builder utils check not null r3 \\ `` arg\\ ``", "r6 = org apache spark launcher spark launcher r0", "$ r4 = r6 builder", "$ r5 = $ r4 app args", "$ r5 add r3", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label r7 = org apache spark launcher spark launcher r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = org apache spark launcher spark launcher r0", "r1 redirect error stream = 1", "r2 = org apache spark launcher spark launcher r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache spark launcher spark launcher r0", "r1 redirect error stream = 1", "r2 = org apache spark launcher spark launcher r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "l0 = java lang system current time millis", "$ r3 = org apache spark network client transport client logger", "$ z0 = $ r3 be trace enabled", "if $ z0 == 0 goto label1", "$ r13 = org apache spark network client transport client logger", "r17 = org apache spark network client transport client r0", "$ r12 = r17 channel", "$ r14 = org apache spark network util netty utils get remote address $ r12", "$ r13 trace \\ `` send rpc to { } \\", "label $ r4 = java util uuid random u u i d", "$ l2 = $ r4 get least significant bit", "l1 = java lang math ab $ l2", "r18 = org apache spark network client transport client r0", "$ r5 = r18 handler", "$ r5 add rpc request l1 r2", "r19 = org apache spark network client transport client r0", "$ r8 = r19 channel", "r16 = new org apache spark network protocol rpc request", "r15 = new org apache spark network buffer nio manage buffer", "specialinvoke r15 < init > r1", "r20 = org apache spark network buffer manage buffer r15", "specialinvoke r16 < init > l1 r20", "$ r9 = $ r8 write and flush r16", "r21 = org apache spark network client transport client r0", "$ r10 = transport client $ lambda_send rpc_2__1 bootstrap $ r21 l0 l1 r2", "$ r9 add listener $ r10", "return l1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache spark network sasl spark sasl client r0", "$ r2 = r4 sasl client", "$ r3 = $ r2 get negotiate property r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache spark network sasl spark sasl server r0", "$ r1 = r3 sasl server", "if $ r1 == null goto label1", "r4 = org apache spark network sasl spark sasl server r0", "$ r2 = r4 sasl server", "$ z0 = $ r2 be complete", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r8 = org apache spark network sasl spark sasl server r0", "$ r3 = r8 sasl server", "if $ r3 == null goto label2", "r9 = org apache spark network sasl spark sasl server r0", "$ r4 = r9 sasl server", "$ r7 = $ r4 evaluate response r1", "goto label3", "label return $ r7", "if $ r3 == null goto label2", "label $ r7 = newarray byte [ 0 ]"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = new java util array list", "specialinvoke r3 < init >", "r4 = org apache spark network transport context r0", "$ r2 = r4 create client factory r3", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "label if r0 == null goto label2", "r0 close", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 have array", "if $ z0 == 0 goto label1", "$ i0 = r0 array offset", "if $ i0 ! = 0 goto label1", "$ r3 = r0 array", "$ i1 = lengthof $ r3", "$ i2 = r0 remain", "if $ i1 ! = $ i2 goto label1", "$ r4 = r0 array", "return $ r4", "if $ i1 ! = $ i2 goto label1", "label $ i3 = r0 remain", "r1 = newarray byte [ $ i3 ]", "r0 get r1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r5 = org apache spark network util level d b provider $ store version key", "r3 = r0 get $ r5", "if r3 ! = null goto label1", "org apache spark network util level d b provider store version r0 r1 r2", "goto label3", "label return", "if r3 ! = null goto label1", "label $ r6 = r2 read value r3 class \\ `` lorg apache spark network util level d b provider $ store version \\ ``", "r4 = org apache spark network util level d b provider $ store version $ r6", "$ i1 = r4 major", "$ i0 = r1 major", "if $ i1 == $ i0 goto label2", "$ r7 = new java io i o exception", "$ r8 = new java lang string builder", "specialinvoke $ r8 < init >", "$ r9 = $ r8 append \\ `` can not read state db with version \\ ``", "$ r10 = $ r9 append r4", "$ r11 = $ r10 append \\", "$ r12 = $ r11 append \\ `` with current version \\ ``", "$ r13 = $ r12 append r1", "$ r14 = $ r13 to string", "specialinvoke $ r7 < init > $ r14", "throw $ r7", "if $ i1 == $ i0 goto label2", "label org apache spark network util level d b provider store version r0 r1 r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], []]}
{"nodes": ["r0 = @ this", "r3 = org apache spark network util transport conf r0", "$ r1 = r3 conf", "$ r2 = $ r1 get \\ `` spark network crypto key factory algorithm\\", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache spark network util transport conf r0", "$ r1 = r3 conf", "$ r2 = $ r1 get \\ `` spark network sasl max encrypt block size\\", "$ l0 = org apache spark network util java utils byte string a byte $ r2", "$ i1 = org spark_project guava primitives ints check cast $ l0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache spark network util transport conf r0", "$ r1 = r2 conf", "$ z0 = $ r1 get boolean \\ `` spark network sasl server always encrypt\\", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["i0 = @ parameter0", "r0 = newarray byte [ i0 ]", "java util array fill r0 32", "$ r1 = org apache spark unsafe type u t f8 string from byte r0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r2 = org locationtech spatial4j context spatial context r0", "$ r1 = r2 shape factory", "$ d1 = $ r1 norm x d0", "return $ d1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "d3 = @ parameter3", "r3 = org locationtech spatial4j context spatial context r0", "$ r1 = r3 shape factory", "$ r2 = $ r1 rect d0 d1 d2 d3", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org locationtech spatial4j context spatial context r0", "$ r2 = r4 format", "$ r3 = $ r2 read r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "$ r0 = org locationtech spatial4j io geohash utils encode lat lon d0 d1 12", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org locationtech spatial4j io geohash utils decode boundary r0 r1", "$ d2 = r2 get min y", "$ d3 = r2 get max y", "$ d4 = $ d2 + $ d3", "d0 = $ d4 2 0", "$ d5 = r2 get min x", "$ d6 = r2 get max x", "$ d7 = $ d5 + $ d6", "d1 = $ d7 2 0", "$ r3 = r1 make point d1 d0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech spatial4j shape impl circle impl r0", "$ r1 = r2 point", "$ d0 = $ r1 get x", "return $ d0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org locationtech spatial4j shape jts jts geometry r0", "$ r1 = r4 prepare geometry", "if $ r1 ! = null goto label1", "r5 = org locationtech spatial4j shape jts jts geometry r0", "$ r2 = r5 geom", "$ r3 = org locationtech jts geom prep prepare geometry factory prepare $ r2", "r6 = org locationtech spatial4j shape jts jts geometry r0", "r6 prepare geometry = $ r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = com netflix spectator api measurement r0", "$ d0 = r1 value", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = @ parameter2", "$ z0 = r2 instanceof org springframework jdbc core sql parameter value", "if $ z0 == 0 goto label1", "r3 = org springframework jdbc core sql parameter value r2", "$ r4 = r3 get value", "r5 = org springframework jdbc core sql parameter r3", "org springframework jdbc core statement creator utils set parameter value r1 i0 r5 $ r4", "goto label2", "label return", "if $ z0 == 0 goto label1", "label org springframework jdbc core statement creator utils set parameter value r1 i0 -2147483648 r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework jdbc core jdbc template r0", "r1 fetch size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jdbc core metadata call meta data context r0", "$ r1 = r2 catalog name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jdbc core metadata call meta data context r0", "$ z0 = r1 return value require", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework jdbc core metadata call meta data context r0", "r1 name bind = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jdbc core metadata call meta data context r0", "$ z0 = r1 name bind", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jdbc core metadata call parameter meta data r0", "$ z0 = r1 function", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jdbc core metadata call parameter meta data r0", "$ z0 = r1 nullable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jdbc core metadata generic call meta data provider r0", "$ z0 = r1 store low case identifier", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jdbc core metadata table meta data context r0", "$ z0 = r1 override include synonyms default", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r14 = org springframework jdbc core namedparam bean property sql parameter source r0", "$ r5 = r14 property name", "if $ r5 ! = null goto label4", "r13 = new java util array list", "specialinvoke r13 < init >", "r15 = org springframework jdbc core namedparam bean property sql parameter source r0", "$ r8 = r15 bean wrapper", "r2 = $ r8 get property descriptor", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label3", "r4 = r2 [ i1 ]", "r16 = org springframework jdbc core namedparam bean property sql parameter source r0", "$ r10 = r16 bean wrapper", "$ r11 = r4 get name", "$ z0 = $ r10 be readable property $ r11", "if $ z0 == 0 goto label2", "$ r12 = r4 get name", "r13 add $ r12", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r9 = org springframework util string utils to string array r13", "r17 = org springframework jdbc core namedparam bean property sql parameter source r0", "r17 property name = $ r9", "label r18 = org springframework jdbc core namedparam bean property sql parameter source r0", "$ r6 = r18 property name", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r4 = org springframework jdbc core namedparam name parameter jdbc dao support r0", "r1 = r4 get jdbc template", "if r1 == null goto label1", "r3 = new org springframework jdbc core namedparam name parameter jdbc template", "r5 = org springframework jdbc core jdbc operation r1", "specialinvoke r3 < init > r5", "r6 = org springframework jdbc core namedparam name parameter jdbc dao support r0", "r6 name parameter jdbc template = r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jdbc core result set support sql parameter r0", "$ r1 = r2 row callback handler", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jdbc core simple abstract jdbc call r0", "$ z0 = r1 compile", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework jdbc core simple abstract jdbc call r0", "$ r1 = r3 call meta data context", "$ r2 = $ r1 get call parameter", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework jdbc core simple abstract jdbc insert r0", "r3 check if configuration modification be allow", "r4 = org springframework jdbc core simple abstract jdbc insert r0", "$ r2 = r4 table meta data context", "$ r2 set catalog name r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework jdbc core simple abstract jdbc insert r0", "$ r1 = r3 declare columns", "$ r2 = java util collection unmodifiable list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jdbc core simple abstract jdbc insert r0", "$ r1 = r2 generate key name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework jdbc core support jdbc dao support r0", "$ r2 = r3 get data source", "org springframework jdbc datasource data source utils release connection r1 $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org springframework jdbc datasource connection holder r0", "$ r2 = r8 current connection", "if $ r2 == null goto label2", "r9 = org springframework jdbc datasource connection holder r0", "$ r4 = r9 connection handle", "if $ r4 == null goto label1", "r10 = org springframework jdbc datasource connection holder r0", "$ r6 = r10 connection handle", "r11 = org springframework jdbc datasource connection holder r0", "$ r5 = r11 current connection", "$ r6 release connection $ r5", "label r12 = org springframework jdbc datasource connection holder r0", "r12 current connection = null", "label if r1 == null goto label3", "r7 = new org springframework jdbc datasource simple connection handle", "specialinvoke r7 < init > r1", "r13 = org springframework jdbc datasource connection holder r0", "r14 = org springframework jdbc datasource connection handle r7", "r13 connection handle = r14", "goto label4", "label return", "label if r1 == null goto label3", "label r15 = org springframework jdbc datasource connection holder r0", "r15 connection handle = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jdbc datasource data source transaction manager r0", "$ z0 = r1 enforce read only", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = newarray java lang string [ 2 ]", "$ r1 [ 0 ] = \\ `` schema sql\\ ``", "$ r1 [ 1 ] = \\ `` data sql\\ ``", "r3 = org springframework jdbc datasource embed embedded database builder r0", "$ r2 = r3 add script $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework jdbc datasource init resource database populator r0", "r2 separator = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert have text r1 \\ `` \\'block comment start delimiter\\ ' must not be null or empty\\ ``", "r2 = org springframework jdbc datasource init resource database populator r0", "r2 block comment start delimiter = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = org springframework transaction support transaction synchronization manager be current transaction read only", "if z0 == 0 goto label1", "$ r1 = java lang boolean true", "goto label2", "label return $ r1", "if z0 == 0 goto label1", "label $ r1 = null"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = java lang boolean value of z0", "r2 = org springframework jdbc datasource lazy connection data source proxy r0", "r2 default auto commit = $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework jdbc datasource user credential data source adapter r0", "r2 schema = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jdbc incorrect result set column count exception r0", "$ i0 = r1 actual count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework jdbc object batch sql update r0", "r1 batch size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jdbc object rdbms operation r0", "$ r1 = r2 sql", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jdbc object rdbms operation r0", "r1 = r2 get sql", "if r1 == null goto label1", "$ z0 = 1", "goto label2", "label org springframework util assert state $ z0 \\ `` no sql set\\ ``", "return r1", "if r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org springframework jdbc object rdbms operation r0", "$ z0 = r5 be compile", "if $ z0 == 0 goto label1", "r4 = new org springframework dao invalid data access api usage exception", "specialinvoke r4 < init > \\ `` can not add parameter once the query be compiled\\ ``", "r6 = java lang throwable r4", "throw r6", "if $ z0 == 0 goto label1", "label r7 = org springframework jdbc object rdbms operation r0", "$ r2 = r7 declare parameter", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org springframework jdbc object sql call r0", "$ r2 = r5 callable statement factory", "if $ r2 == null goto label1", "$ z0 = 1", "goto label2", "label org springframework util assert state $ z0 \\ `` no callable statement factory available\\ ``", "r6 = org springframework jdbc object sql call r0", "$ r3 = r6 callable statement factory", "$ r4 = $ r3 new callable statement creator r1", "return $ r4", "if $ r2 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jdbc object sql query r0", "$ i0 = r1 row expect", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r1 = @ parameter2", "$ r2 = newarray java lang object [ 2 ]", "$ r3 = java lang integer value of i0", "$ r2 [ 0 ] = $ r3", "$ r4 = java lang integer value of i1", "$ r2 [ 1 ] = $ r4", "r6 = org springframework jdbc object sql query r0", "$ r5 = r6 find object $ r2 r1", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r1 = @ parameter2", "$ r2 = newarray java lang object [ 2 ]", "$ r3 = java lang integer value of i0", "$ r2 [ 0 ] = $ r3", "$ r4 = java lang integer value of i1", "$ r2 [ 1 ] = $ r4", "r6 = org springframework jdbc object sql query r0", "$ r5 = r6 find object $ r2 r1", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework jdbc object sql update r0", "r1 require row affect = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = org springframework jdbc object batch sql update r0", "r13 validate parameter r1", "r14 = org springframework jdbc object batch sql update r0", "$ r2 = r14 parameter queue", "$ r3 = r1 clone", "$ r2 add $ r3", "r15 = org springframework jdbc object batch sql update r0", "$ r4 = r15 parameter queue", "$ i0 = $ r4 size", "r16 = org springframework jdbc object batch sql update r0", "$ i1 = r16 batch size", "if $ i0 ! = $ i1 goto label2", "r17 = org springframework jdbc object batch sql update r0", "$ r5 = r17 logger", "$ z1 = $ r5 be debug enabled", "if $ z1 == 0 goto label1", "r18 = org springframework jdbc object batch sql update r0", "$ r8 = r18 logger", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r9 = r12 append \\ `` trigger auto-flush because queue reach batch size of \\ ``", "r19 = org springframework jdbc object batch sql update r0", "$ i2 = r19 batch size", "$ r10 = $ r9 append $ i2", "$ r11 = $ r10 to string", "$ r8 debug $ r11", "label r20 = org springframework jdbc object batch sql update r0", "r20 flush", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "$ r1 = newarray java lang object [ 2 ]", "$ r2 = java lang integer value of i0", "$ r1 [ 0 ] = $ r2", "$ r3 = java lang integer value of i1", "$ r1 [ 1 ] = $ r3", "r4 = org springframework jdbc object sql update r0", "$ i2 = r4 update $ r1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jdbc support custom s q l error cod translation r0", "$ r1 = r2 exception class", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework jdbc support incrementer abstract column max value incrementer r0", "r2 column name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework jdbc support incrementer abstract column max value incrementer r0", "r1 cache size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org springframework jdbc support jdbc transaction manager should ignore xml", "if $ z0 ! = 0 goto label1", "r3 = new org springframework jdbc support s q l error code s q l exception translator", "specialinvoke r3 < init > r1", "r4 = org springframework jdbc support jdbc transaction manager r0", "r5 = org springframework jdbc support s q l exception translator r3", "r4 exception translator = r5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = newarray java lang string [ 1 ]", "$ r2 [ 0 ] = r1", "r3 = org springframework jdbc support s q l error cod r0", "r3 database product name = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` \\'repository annotation type\\ ' must not be null\\ ``", "r2 = org springframework dao annotation persistence exception translation post processor r0", "r2 repository annotation type = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework jca cci connection delegate connection factory r0", "r2 target connection factory = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r22 = org springframework jca cci connection single connection factory r0", "$ r3 = r22 get target connection factory", "if $ r3 ! = null goto label1", "r20 = new java lang illegal state exception", "specialinvoke r20 < init > \\ `` \\'target connection factory\\ ' be require for lazily initialize a connection\\ ``", "throw r20", "if $ r3 ! = null goto label1", "label r23 = org springframework jca cci connection single connection factory r0", "$ r4 = r23 connection monitor", "entermonitor $ r4", "label r24 = org springframework jca cci connection single connection factory r0", "$ r5 = r24 target", "if $ r5 == null goto label3", "r25 = org springframework jca cci connection single connection factory r0", "$ r17 = r25 target", "r26 = org springframework jca cci connection single connection factory r0", "r26 close connection $ r17", "label r27 = org springframework jca cci connection single connection factory r0", "$ r6 = r27 do create connection", "r28 = org springframework jca cci connection single connection factory r0", "r28 target = $ r6", "r29 = org springframework jca cci connection single connection factory r0", "$ r7 = r29 target", "r30 = org springframework jca cci connection single connection factory r0", "r30 prepare connection $ r7", "r31 = org springframework jca cci connection single connection factory r0", "$ r8 = r31 logger", "$ z0 = $ r8 be debug enabled", "if $ z0 == 0 goto label4", "r32 = org springframework jca cci connection single connection factory r0", "$ r12 = r32 logger", "r21 = new java lang string builder", "specialinvoke r21 < init >", "$ r13 = r21 append \\ `` establish share cci connection \\ ``", "r33 = org springframework jca cci connection single connection factory r0", "$ r14 = r33 target", "$ r15 = $ r13 append $ r14", "$ r16 = $ r15 to string", "$ r12 debug $ r16", "label r34 = org springframework jca cci connection single connection factory r0", "$ r9 = r34 target", "r35 = org springframework jca cci connection single connection factory r0", "$ r10 = r35 get close suppressing connection proxy $ r9", "r36 = org springframework jca cci connection single connection factory r0", "r36 connection = $ r10", "exitmonitor $ r4", "label goto label8", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework jca cci connection single connection factory r0", "r1 = r3 get target connection factory", "if r1 == null goto label1", "$ z0 = 1", "goto label2", "label org springframework util assert state $ z0 \\ `` no \\'target connection factory\\ ' set\\ ``", "$ r2 = r1 get connection", "return $ r2", "if r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new org springframework jca cci core cci template", "r7 = org springframework jca cci core cci template r0", "$ r5 = specialinvoke r7 obtain connection factory", "specialinvoke r6 < init > $ r5 r1", "r8 = org springframework jca cci core cci template r0", "r3 = r8 get output record creator", "if r3 == null goto label1", "r6 set output record creator r3", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new org springframework jca cci core cci template", "specialinvoke $ r2 < init > r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework jca context spring context resource adapter r0", "r2 context config location = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework jca endpoint abstract message endpoint factory r0", "r2 transaction factory = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jca endpoint generic message endpoint manager r0", "$ r1 = r2 activation spec", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jca endpoint generic message endpoint manager r0", "$ i0 = r1 phase", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework jca support resource adapter factory bean r0", "r2 resource adapter = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jca work delegate work r0", "$ r1 = r2 delegate", "$ r1 run", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` bootstrap context must not be null\\ ``", "$ r2 = r1 get work manager", "r3 = org springframework jca work work manager task executor r0", "r3 work manager = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework jca work work manager task executor r0", "r2 work listener = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework transaction event transactional application listener adapter r0", "$ r1 = r2 transaction phase", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework transaction event transactional application listener adapter r0", "r2 listener id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework transaction interceptor transaction aspect support r0", "$ r1 = r2 transaction manager bean name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework transaction interceptor transaction aspect support r0", "r2 transaction attribute source = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r8 = org springframework transaction interceptor transaction aspect support r0", "$ r1 = r8 get transaction manager", "if $ r1 ! = null goto label1", "r9 = org springframework transaction interceptor transaction aspect support r0", "$ r4 = r9 bean factory", "if $ r4 ! = null goto label1", "r6 = new java lang illegal state exception", "specialinvoke r6 < init > \\ `` set the \\'transaction manager\\ ' property or make sure to run within a bean factory contain a transaction manager bean ! \\ ``", "throw r6", "if $ r4 ! = null goto label1", "label r10 = org springframework transaction interceptor transaction aspect support r0", "$ r2 = r10 get transaction attribute source", "if $ r2 ! = null goto label2", "r7 = new java lang illegal state exception", "specialinvoke r7 < init > \\ `` either \\'transaction attribute source\\ ' or \\'transaction attributes\\ ' be require if there be no transactional method then don\\'t use a transaction aspect \\ ``", "throw r7", "if $ r2 ! = null goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework transaction jta jta transaction manager r0", "r2 user transaction = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework transaction jta jta transaction manager r0", "r1 autodetect user transaction = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework transaction jta jta transaction manager r0", "r2 transaction synchronization registry name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework transaction jta jta transaction manager r0", "r1 allow custom isolation level = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework transaction jta jta transaction object r0", "$ r1 = r2 user transaction", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework transaction jta web sphere uow transaction manager r0", "r2 uow manager name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework transaction reactive generic reactive transaction r0", "$ z0 = r1 new synchronization", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework transaction reactive transactional operator impl r0", "$ r1 = r2 transaction manager", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework transaction reactive transaction synchronization manager r0", "$ r1 = r3 transaction context", "$ r2 = $ r1 get synchronization", "if $ r2 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r2 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework transaction reactive transaction synchronization manager r0", "$ r2 = r3 transaction context", "$ r2 set current transaction name r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework transaction support abstract platform transaction manager r0", "r1 transaction synchronization = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework transaction support abstract platform transaction manager r0", "$ i0 = r1 transaction synchronization", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework transaction support abstract transaction status r0", "$ z0 = r1 be local rollback only", "if $ z0 ! = 0 goto label1", "r2 = org springframework transaction support abstract transaction status r0", "$ z1 = r2 be global rollback only", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r4 = org springframework transaction support default transaction status r0", "$ r1 = r4 transaction", "$ z0 = $ r1 instanceof org springframework transaction support smart transaction object", "if $ z0 == 0 goto label1", "r5 = org springframework transaction support default transaction status r0", "$ r2 = r5 transaction", "$ r3 = org springframework transaction support smart transaction object $ r2", "$ r3 flush", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r6 = org springframework transaction support resource holder support r0", "$ r1 = r6 deadline", "if $ r1 ! = null goto label1", "r5 = new java lang illegal state exception", "specialinvoke r5 < init > \\ `` no timeout specify for this resource holder\\ ``", "throw r5", "if $ r1 ! = null goto label1", "label r7 = org springframework transaction support resource holder support r0", "$ r2 = r7 deadline", "$ l1 = $ r2 get time", "$ l2 = java lang system current time millis", "l0 = $ l1 - $ l2", "$ b3 = l0 cmp 0l", "if $ b3 > 0 goto label2", "$ z0 = 1", "goto label3", "label r8 = org springframework transaction support resource holder support r0", "specialinvoke r8 check transaction timeout $ z0", "return l0", "if $ b3 > 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework transaction support resource holder support r0", "r1 synchronize with transaction = 0", "r2 = org springframework transaction support resource holder support r0", "r2 rollback only = 0", "r3 = org springframework transaction support resource holder support r0", "r3 deadline = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ b0 = r0 [ 31 ]", "$ b1 = $ b0 & 127", "$ b2 = byte $ b1", "r0 [ 31 ] = $ b2", "$ b3 = r0 [ 31 ]", "$ b4 = $ b3 | 64", "$ b5 = byte $ b4", "r0 [ 31 ] = $ b5", "$ b6 = r0 [ 0 ]", "$ s7 = $ b6 & 248", "$ b8 = byte $ s7", "r0 [ 0 ] = $ b8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = net schmizz concurrent promise r0", "$ r3 = r10 lock", "$ r3 lock", "label r11 = net schmizz concurrent promise r0", "$ r4 = r11 chainer", "$ r5 = $ r4 chain r1", "r12 = net schmizz concurrent promise r0", "r12 pending ex = $ r5", "r13 = net schmizz concurrent promise r0", "$ r6 = r13 cond", "$ r6 signal all", "label r14 = net schmizz concurrent promise r0", "$ r7 = r14 lock", "$ r7 unlock", "goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], []]}
{"nodes": ["r0 = @ this", "r9 = net schmizz sshj common buffer r0", "i0 = r9 read u int32 a int", "if i0 < 0 goto label1", "if i0 < = 32768 goto label2", "label r8 = new net schmizz sshj common buffer $ buffer exception", "r7 = new java lang string builder", "specialinvoke r7 < init >", "$ r4 = r7 append \\ `` bad item length \\ ``", "$ r5 = $ r4 append i0", "$ r6 = $ r5 to string", "specialinvoke r8 < init > $ r6", "r10 = java lang throwable r8", "throw r10", "if i0 < = 32768 goto label2", "label r1 = newarray byte [ i0 ]", "r11 = net schmizz sshj common buffer r0", "r11 read raw byte r1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "$ r1 = java lang thread current thread", "r2 = net schmizz sshj connection channel direct local port forwarder r0", "r2 listen $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r3 = r1", "goto label2", "label r4 = net schmizz sshj s s h client r0", "r4 remote charset = $ r3", "return", "if r1 == null goto label1", "label $ r3 = net schmizz sshj common i o utils utf8"], "adj": [[1], [2], [3], [4], [], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ r5 = new java io buffer reader", "specialinvoke $ r5 < init > r0", "label $ r6 = $ r5 read line", "if $ r6 == null goto label4", "r19 = $ r6 trim", "$ z0 = r19 be empty", "if $ z0 ! = 0 goto label1", "$ r8 = r19 trim", "r2 = $ r8 split \\ `` \\\\s+\\ ``", "$ i0 = lengthof r2", "if $ i0 < 2 goto label3", "$ r10 = new com hierynomus sshj userauth keyprovider open s s h key file util $ parsed pub key", "$ r11 = r2 [ 0 ]", "$ r12 = net schmizz sshj common key type from string $ r11", "$ r13 = new net schmizz sshj common buffer $ plain buffer", "$ r14 = r2 [ 1 ]", "$ r15 = net schmizz sshj common base64 decode $ r14", "specialinvoke $ r13 < init > $ r15", "$ r16 = $ r13 read public key", "specialinvoke $ r10 < init > $ r12 $ r16", "label $ r5 close", "return $ r10", "if $ i0 < 2 goto label3", "label $ r9 = new java io i o exception", "specialinvoke $ r9 < init > \\ `` get line with only one column\\ ``", "throw $ r9", "if $ r6 == null goto label4", "label $ r7 = new java io i o exception", "specialinvoke $ r7 < init > \\ `` public key file be blank\\ ``", "throw $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org bouncycastle asn1 pkcs private key info r1", "r4 = net schmizz sshj userauth keyprovider pkcs d s a private key info key pair converter r0", "$ r3 = r4 get key pair $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = java nio char buffer wrap r0", "$ r2 = java nio charset standard charsets utf_8", "$ r3 = $ r2 encode r1", "$ r4 = $ r3 array", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "i4 = 0", "label $ i5 = r0 length", "if i4 > = $ i5 goto label5", "c0 = r0 char at i4", "if c0 ! = 60 goto label2", "$ r12 = r0 substring i4", "$ z3 = $ r12 start with \\ `` < \\\\\\\\ > \\ ``", "if $ z3 == 0 goto label2", "$ r2 append \\ `` < \\\\\\\\ > \\ ``", "$ r14 = \\ `` < \\\\\\\\ > \\ ``", "$ i3 = $ r14 length", "i4 = i4 + $ i3", "goto label1", "if $ z3 == 0 goto label2", "label if c0 ! = 62 goto label3", "$ r9 = r0 substring i4", "$ z2 = $ r9 start with \\ `` > \\\\ > \\ ``", "if $ z2 == 0 goto label3", "$ r2 append \\ `` > > \\ ``", "$ r11 = \\ `` > \\\\ > \\ ``", "$ i2 = $ r11 length", "i4 = i4 + $ i2", "if $ z2 == 0 goto label3", "label if c0 ! = 92 goto label4", "$ r5 = r0 substring i4", "$ z0 = $ r5 start with \\ `` \\\\ > > \\ ``", "if $ z0 == 0 goto label4", "$ r6 = r0 substring i4", "$ z1 = $ r6 start with \\ `` \\\\ > > > \\ ``", "if $ z1 ! = 0 goto label4", "label $ r2 append c0", "i4 = i4 + 1", "if i4 > = $ i5 goto label5", "label $ r3 = $ r2 to string", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 be primitive", "if $ z0 == 0 goto label1", "r12 = new java lang illegal argument exception", "r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r7 = r11 append \\ `` can\\'t register model adaptor for primitive type \\ ``", "$ r8 = r1 get simple name", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 to string", "specialinvoke r12 < init > $ r10", "throw r12", "if $ z0 == 0 goto label1", "label r13 = org stringtemplate v4 s t group r0", "$ r3 = r13 adaptor", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org jvnet staxex util x m l stream reader to x m l stream writer r0", "specialinvoke r3 bridge r1 r2 null", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i0 = @ parameter0", "$ z0 = com clearspring analytics stream membership bloom calculation $ assertion disable", "if $ z0 ! = 0 goto label1", "if i0 > = 0 goto label1", "$ r4 = new java lang assertion error", "specialinvoke $ r4 < init >", "throw $ r4", "if i0 > = 0 goto label1", "label $ r0 = com clearspring analytics stream membership bloom calculation opt k per bucket", "$ i1 = lengthof $ r0", "if i0 < $ i1 goto label2", "$ r3 = com clearspring analytics stream membership bloom calculation opt k per bucket", "$ r2 = com clearspring analytics stream membership bloom calculation opt k per bucket", "$ i3 = lengthof $ r2", "$ i4 = $ i3 - 1", "$ i5 = $ r3 [ $ i4 ]", "return $ i5", "if i0 < $ i1 goto label2", "label $ r1 = com clearspring analytics stream membership bloom calculation opt k per bucket", "$ i2 = $ r1 [ i0 ]", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], []]}
{"nodes": ["$ r0 = io swagger v3 core util primitive type non system type", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "label $ r2 = java lang class for name r0", "label return $ r2"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ z0 = r0 be local class", "if $ z0 ! = 0 goto label01", "$ z1 = r0 be member class", "if $ z1 == 0 goto label02", "$ i2 = r0 get modifier", "$ z7 = java lang reflect modifier be static $ i2", "if $ z7 ! = 0 goto label02", "label $ r15 = java util collection empty list", "return $ r15", "if $ z7 ! = 0 goto label02", "label r25 = java util collection empty list", "i3 = 0", "r4 = r0 get declare constructor", "i0 = lengthof r4", "i4 = 0", "label if i4 > = i0 goto label15", "r5 = r4 [ i4 ]", "$ z2 = io swagger v3 core util reflection utils be constructor compatible r5", "if $ z2 ! = 0 goto label04", "$ r23 = r5 get declare annotation", "$ r24 = java util array a list $ r23", "$ z6 = io swagger v3 core util reflection utils be inject $ r24", "if $ z6 ! = 0 goto label04", "goto label14", "label i4 = i4 + 1", "goto label03", "if $ z6 ! = 0 goto label04", "label r6 = r5 get generic parameter type", "r7 = r5 get parameter annotation", "i5 = 0", "$ r16 = new java util array list", "specialinvoke $ r16 < init >", "i6 = 0", "label $ i7 = lengthof r6", "if i6 > = $ i7 goto label13", "$ r17 = r7 [ i6 ]", "r9 = java util array a list $ r17", "$ z3 = io swagger v3 jaxrs2 util reader utils be context r9", "if $ z3 == 0 goto label06", "i5 = i5 + 1", "goto label12", "label i6 = i6 + 1", "goto label05", "if $ z3 == 0 goto label06", "label r10 = r6 [ i6 ]", "r11 = io swagger v3 jaxrs2 util reader utils collect parameter r10 r9 r1 r2 r3", "$ i1 = r11 size", "if $ i1 < 1 goto label12", "r12 = r11 iterator", "label $ z4 = r12 have next", "if $ z4 == 0 goto label11", "$ r18 = r12 next", "r13 = io swagger v3 oas model parameter parameter $ r18", "if r2 ! = null goto label08", "$ r26 = newarray java lang string [ 0 ]", "goto label09", "label r14 = io swagger v3 core util parameter processor apply annotation r13 r10 r9 r1 $ r26 null r3", "if r14 == null goto label10", "$ r16 add r14", "label goto label07", "if r2 ! = null goto label08", "label $ r26 = r2 value", "if $ z4 == 0 goto label11", "label i5 = i5 + 1", "if i6 > = $ i7 goto label13", "label if i5 < i3 goto label14", "i3 = i5", "r25 = $ r16", "label if i4 > = i0 goto label15", "label return r25"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [], [46], [], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model external documentation r0", "$ r1 = r2 description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model info license r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model medium array schema r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model medium byte array schema r0", "$ r1 = r2 format", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model medium map schema r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model medium medium type r0", "$ r1 = r2 schema", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model operation r0", "$ r1 = r2 response", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model parameter parameter r0", "$ r1 = r2 deprecate", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model responses api response r0", "$ r1 = r2 description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model security security scheme r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model security security scheme r0", "$ r1 = r2 open id connect url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model server server variable r0", "$ r1 = r2 _enum", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model server server variable r0", "$ r1 = r2 description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = com tdunning math stats a v l group tree r0", "$ r1 = r2 tree", "$ i1 = $ r1 prev i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = com tdunning math stats a v l group tree r0", "$ r1 = r2 tree", "$ i1 = $ r1 next i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = com tdunning math stats a v l tree digest r0", "$ l0 = r1 count", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com tdunning math stats int a v l tree r0", "$ i0 = r1 root", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r7 = com tdunning math stats int a v l tree r0", "$ i1 = r7 root", "if $ i1 ! = 0 goto label1", "r8 = com tdunning math stats int a v l tree r0", "$ r4 = r8 node allocator", "$ i7 = $ r4 new node", "r9 = com tdunning math stats int a v l tree r0", "r9 root = $ i7", "r10 = com tdunning math stats int a v l tree r0", "$ i8 = r10 root", "r11 = com tdunning math stats int a v l tree r0", "r11 copy $ i8", "r12 = com tdunning math stats int a v l tree r0", "$ i9 = r12 root", "r13 = com tdunning math stats int a v l tree r0", "r13 fix aggregate $ i9", "return 1", "if $ i1 ! = 0 goto label1", "label r14 = com tdunning math stats int a v l tree r0", "i10 = r14 root", "$ z0 = com tdunning math stats int a v l tree $ assertion disable", "if $ z0 ! = 0 goto label2", "r15 = com tdunning math stats int a v l tree r0", "$ i5 = r15 root", "r16 = com tdunning math stats int a v l tree r0", "$ i6 = r16 parent $ i5", "if $ i6 == 0 goto label2", "r5 = new java lang assertion error", "specialinvoke r5 < init >", "throw r5", "if $ i6 == 0 goto label2", "label r17 = com tdunning math stats int a v l tree r0", "i0 = r17 compare i10", "if i0 > = 0 goto label3", "i11 = i10", "r18 = com tdunning math stats int a v l tree r0", "i10 = r18 leave i10", "goto label5", "label if i10 ! = 0 goto label2", "r21 = com tdunning math stats int a v l tree r0", "$ r1 = r21 node allocator", "i12 = $ r1 new node", "r22 = com tdunning math stats int a v l tree r0", "$ i2 = r22 capacity", "if i12 < $ i2 goto label6", "$ i3 = i12 + 1", "$ i4 = com tdunning math stats int a v l tree oversize $ i3", "r23 = com tdunning math stats int a v l tree r0", "r23 resize $ i4", "label r24 = com tdunning math stats int a v l tree r0", "r24 copy i12", "r25 = com tdunning math stats int a v l tree r0", "specialinvoke r25 parent i12 i11", "if i0 > = 0 goto label7", "r26 = com tdunning math stats int a v l tree r0", "specialinvoke r26 leave i11 i12", "goto label9", "label r28 = com tdunning math stats int a v l tree r0", "specialinvoke r28 rebalance i12", "if i0 > = 0 goto label7", "label $ z1 = com tdunning math stats int a v l tree $ assertion disable", "if $ z1 ! = 0 goto label8", "if i0 > 0 goto label8", "r6 = new java lang assertion error", "specialinvoke r6 < init >", "throw r6", "if i0 > 0 goto label8", "label r27 = com tdunning math stats int a v l tree r0", "specialinvoke r27 right i11 i12", "if i0 > = 0 goto label3", "label if i0 < = 0 goto label4", "label r20 = com tdunning math stats int a v l tree r0", "r20 merge i10", "return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [], [59], [60], [61], [62], [63], [64], [65], [66], [], [68], [69], [70], [71], [72], [73], [74], []]}
{"nodes": ["d0 = @ parameter0", "r1 = new com tdunning math stats a v l tree digest", "specialinvoke r1 < init > d0", "r2 = com tdunning math stats t digest r1", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["z0 = @ parameter0", "z1 = @ parameter1", "r0 = @ parameter2", "$ r1 = java lang boolean value of z0", "$ r2 = java lang boolean value of z1", "org testng assert assert equal $ r1 $ r2 r0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["z0 = @ parameter0", "z1 = @ parameter1", "r0 = @ parameter2", "$ r1 = java lang boolean value of z0", "$ r2 = java lang boolean value of z1", "org testng assert assert equal $ r1 $ r2 r0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org testng assert assert not same r0 r1 null", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r1 do assert", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r0 == null goto label1", "$ r7 = r0", "goto label2", "label $ r5 = new java io file", "specialinvoke $ r5 < init > $ r7", "$ r6 = org testng internal utils escape unicode r2", "org testng internal utils write file $ r5 r1 $ r6 \\ `` utf-8\\ ``", "return", "if r0 == null goto label1", "label $ r7 = \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ parameter0", "r2 = r0", "if r0 == null goto label1", "$ i2 = r0 length", "if $ i2 ! = 0 goto label2", "label return r0", "if $ i2 ! = 0 goto label2", "label r1 = org testng internal utils special_characters", "i0 = lengthof r1", "i3 = 0", "label if i3 > = i0 goto label4", "c1 = r1 [ i3 ]", "r2 = r2 replace c1 95", "i3 = i3 + 1", "goto label3", "label if i3 > = i0 goto label4", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "$ i0 = org testng log4testng logger trace", "r1 = org testng log4testng logger r0", "$ z0 = specialinvoke r1 be level enabled $ i0", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ i0 = org testng log4testng logger info", "r1 = org testng log4testng logger r0", "$ z0 = specialinvoke r1 be level enabled $ i0", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = r0 get class", "$ r2 = org testng collection object to string helper $ r1", "r7 = org testng suite result r0", "$ r3 = r7 get test context", "$ r4 = $ r3 get name", "$ r5 = $ r2 add \\ `` context\\", "$ r6 = $ r5 to string", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = java lang integer value of i0", "r2 = org testng test n g r0", "r2 m_verbose = $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org testng xml xml suite $ failure policy get valid policy r1", "r3 = org testng test n g r0", "r3 set config failure policy $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org testng test n g ant task r0", "$ r2 = r3 m_environment", "$ r2 add variable r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org testng test n g ant task r0", "$ r2 = r3 create classpath", "$ r2 append r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org testng test n g ant task r0", "r2 m_test name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ z0 = r3 equal r2", "if $ z0 ! = 0 goto label1", "if r2 == null goto label1", "r0 set property r1 r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org testng collection list new array list", "r21 = org testng internal pool service r0", "r21 submit task r1 r2 null", "r22 = org testng internal pool service r0", "$ r7 = r22 m_future map", "entermonitor $ r7", "label r23 = org testng internal pool service r0", "$ r8 = r23 m_future map", "$ r9 = $ r8 get r1", "r16 = java util list $ r9", "if r16 == null goto label13", "label r24 = org testng internal pool service r0", "$ z1 = specialinvoke r24 be finish r16", "if $ z1 ! = 0 goto label06", "label java lang thread sleep 1000l", "label goto label02", "if $ z1 ! = 0 goto label06", "label r18 = r16 iterator", "label $ z0 = r18 have next", "if $ z0 == 0 goto label13", "$ r10 = r18 next", "r5 = java util concurrent future $ r10", "label if r5 == null goto label09", "$ r11 = r5 get", "r3 add $ r11", "label goto label12", "label goto label07", "if $ z0 == 0 goto label13", "label exitmonitor $ r7", "label goto label17", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r0 == null goto label1", "$ r6 = r0", "goto label2", "label $ r5 = new java io file", "specialinvoke $ r5 < init > $ r6", "org testng internal utils write file $ r5 r1 r2 null 1", "return", "if r0 == null goto label1", "label $ r6 = \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org testng xml xml suite r0", "$ i0 = r1 m_thread count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = gnu trove impl hash t byte byte hash r0", "r2 = r4 _states", "r5 = gnu trove impl hash t byte byte hash r0", "r3 = r5 _set", "i2 = lengthof r3", "label $ i3 = i2", "i2 = i2 + -1", "if $ i3 < = 0 goto label2", "$ b0 = r2 [ i2 ]", "if $ b0 ! = 1 goto label1", "$ b1 = r3 [ i2 ]", "$ z0 = r1 execute $ b1", "if $ z0 ! = 0 goto label1", "return 0", "if $ i3 < = 0 goto label2", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r1 = gnu trove impl hash t hash r0", "r1 _size = 0", "r2 = gnu trove impl hash t hash r0", "$ i0 = r2 capacity", "r3 = gnu trove impl hash t hash r0", "r3 _free = $ i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = gnu trove list link t link list r0", "$ i0 = r3 _size", "r1 = newarray java lang object [ $ i0 ]", "i2 = 0", "r4 = gnu trove list link t link list r0", "r2 = r4 _head", "label if r2 == null goto label2", "$ i1 = i2", "i2 = i2 + 1", "r1 [ $ i1 ] = r2", "r2 = r2 get next", "goto label1", "label if r2 == null goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get previous", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = gnu trove map custom_hash t object byte custom hash map r0", "r2 = r7 _set", "r8 = gnu trove map custom_hash t object byte custom hash map r0", "r3 = r8 _values", "i2 = lengthof r3", "label $ i3 = i2", "i2 = i2 + -1", "if $ i3 < = 0 goto label2", "$ r4 = r2 [ i2 ]", "if $ r4 == null goto label1", "$ r6 = r2 [ i2 ]", "$ r5 = gnu trove map custom_hash t object byte custom hash map remove", "if $ r6 == $ r5 goto label1", "$ b0 = r3 [ i2 ]", "$ b1 = r1 execute $ b0", "r3 [ i2 ] = $ b1", "goto label1", "if $ i3 < = 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = gnu trove map hash t custom hash map r0", "$ z0 = r2 contain r1", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new gnu trove impl sync t synchronize byte collection", "specialinvoke r2 < init > r0", "r3 = gnu trove t byte collection r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com univocity parser annotation helper field map r0", "$ r2 = specialinvoke r3 read r1 0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "$ r2 = com univocity parser common argument utils new reader r1", "r4 = com univocity parser common abstract parser r0", "$ r3 = r4 parse all $ r2 i0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["i0 = @ parameter0", "r0 = @ parameter1", "$ z0 = r0 be empty", "if $ z0 == 0 goto label1", "return 0", "if $ z0 == 0 goto label1", "label i4 = 0", "label $ i2 = r0 length", "if i4 > = $ i2 goto label5", "c1 = r0 char at i4", "if c1 > 32 goto label3", "if i0 < c1 goto label4", "label return i4", "if i0 < c1 goto label4", "label i4 = i4 + 1", "goto label2", "if i4 > = $ i2 goto label5", "label $ i3 = r0 length", "return $ i3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 ! = null goto label1", "$ r7 = new java lang illegal argument exception", "$ r8 = new java lang string builder", "specialinvoke $ r8 < init >", "$ r9 = $ r8 append r0", "$ r10 = $ r9 append \\ `` must not be null\\ ``", "$ r11 = $ r10 to string", "specialinvoke $ r7 < init > $ r11", "throw $ r7", "if r1 ! = null goto label1", "label $ i0 = lengthof r1", "if $ i0 ! = 0 goto label2", "$ r2 = new java lang illegal argument exception", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append r0", "$ r5 = $ r4 append \\ `` must not be empty\\ ``", "$ r6 = $ r5 to string", "specialinvoke $ r2 < init > $ r6", "throw $ r2", "if $ i0 ! = 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], []]}
{"nodes": ["r0 = @ this", "r1 = com univocity parser common common parser setting r0", "$ z0 = r1 read input on separate thread", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = com univocity parser common common parser setting r0", "$ r1 = r3 header extraction enable", "if $ r1 ! = null goto label1", "$ z0 = 0", "goto label2", "label return $ z0", "if $ r1 ! = null goto label1", "label r4 = com univocity parser common common parser setting r0", "$ r2 = r4 header extraction enable", "$ z0 = $ r2 boolean value"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com univocity parser common common setting r0", "r2 null value = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = com univocity parser common common setting r0", "$ z0 = r1 ignore trail whitespaces", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com univocity parser common common setting r0", "$ i0 = r1 error content length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com univocity parser common common writer setting r0", "$ z0 = r1 expand incomplete row", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "i0 = @ parameter1", "r18 = @ parameter2", "r1 = @ parameter3", "r28 = com univocity parser common field field conversion map r0", "$ r3 = r28 conversion by index", "$ r4 = java lang integer value of i0", "$ r5 = $ r3 get $ r4", "r2 = java util list $ r5", "if r2 == null goto label12", "if r1 == null goto label01", "r1 [ i0 ] = 1", "label r19 = null", "label if z0 == 0 goto label05", "$ i1 = r2 size", "i2 = $ i1 - 1", "label if i2 < 0 goto label04", "$ r7 = r2 get i2", "r19 = com univocity parser conversion conversion $ r7", "r18 = r19 revert r18", "i2 = i2 + -1", "goto label03", "label if i2 < 0 goto label04", "label goto label07", "label goto label12", "label return r18", "label if z0 == 0 goto label05", "label r20 = r2 iterator", "label $ z1 = r20 have next", "if $ z1 == 0 goto label07", "$ r6 = r20 next", "r21 = com univocity parser conversion conversion $ r6", "r19 = r21", "r18 = r21 revert r18", "goto label06"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r25 = com univocity parser common field field conversion map r0", "$ r7 = r25 conversion by index", "$ r8 = java lang integer value of i0", "$ r9 = $ r7 get $ r8", "r3 = java util list $ r9", "if r3 == null goto label9", "if r2 == null goto label1", "r2 [ i0 ] = 1", "label r20 = r1", "r4 = r3 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label8", "$ r10 = r4 next", "r5 = com univocity parser conversion conversion $ r10", "label r20 = r5 execute r20", "label goto label7", "label goto label2", "if $ z0 == 0 goto label8", "label return r20", "if r3 == null goto label9", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = newarray java lang string [ 1 ]", "$ r2 [ 0 ] = r1", "r4 = com univocity parser common field field name selector r0", "$ r3 = r4 get field index $ r2", "$ i0 = $ r3 [ 0 ]", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = new java util array list", "r4 = com univocity parser common field field set r0", "$ r2 = r4 field", "specialinvoke r3 < init > $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = com univocity parser common processor core abstract list processor r0", "$ r3 = r4 row", "$ r3 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = null goto label1", "return", "if r1 ! = null goto label1", "label $ z0 = r2 be map to index", "if $ z0 == 0 goto label2", "$ r8 = newarray com univocity parser conversion conversion [ 1 ]", "$ r8 [ 0 ] = r1", "r13 = com univocity parser common processor core bean conversion processor r0", "$ r9 = r13 convert index $ r8", "$ r10 = newarray java lang integer [ 1 ]", "$ i0 = r2 get index", "$ r11 = java lang integer value of $ i0", "$ r10 [ 0 ] = $ r11", "$ r9 add $ r10", "goto label3", "label return", "if $ z0 == 0 goto label2", "label $ r3 = newarray com univocity parser conversion conversion [ 1 ]", "$ r3 [ 0 ] = r1", "r14 = com univocity parser common processor core bean conversion processor r0", "$ r4 = r14 convert field $ r3", "$ r5 = newarray java lang string [ 1 ]", "$ r6 = r2 get field name", "$ r5 [ 0 ] = $ r6", "$ r4 add $ r5"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r37 = @ parameter1", "r2 = @ parameter2", "if r1 ! = null goto label01", "return null", "if r1 ! = null goto label01", "label r52 = com univocity parser common processor core bean conversion processor r0", "$ r3 = r52 row", "if $ r3 ! = null goto label17", "if r37 == null goto label02", "$ i7 = lengthof r37", "$ r32 = newarray java lang object [ $ i7 ]", "r53 = com univocity parser common processor core bean conversion processor r0", "r53 row = $ r32", "goto label17", "label r63 = com univocity parser common processor core bean conversion processor r0", "$ r44 = r63 nest attribute", "if $ r44 == null goto label20", "r64 = com univocity parser common processor core bean conversion processor r0", "$ r8 = r64 nest attribute", "$ r9 = $ r8 entry set", "r45 = $ r9 iterator", "label $ z1 = r45 have next", "if $ z1 == 0 goto label20", "$ r10 = r45 next", "r46 = java util map $ entry $ r10", "$ r11 = r46 get key", "$ r12 = com univocity parser annotation helper field map $ r11", "r47 = $ r12 read r1", "if r47 == null goto label19", "$ r13 = r46 get value", "r48 = com univocity parser common processor core bean conversion processor $ r13", "r65 = com univocity parser common processor core bean conversion processor r0", "$ r14 = r65 row", "r48 row = $ r14", "r48 reverse conversion r47 r37 r2", "label goto label18", "if $ z1 == 0 goto label20", "label r66 = com univocity parser common processor core bean conversion processor r0", "$ r4 = r66 synthetic header", "if $ r4 == null goto label21", "r67 = com univocity parser common processor core bean conversion processor r0", "r37 = r67 synthetic header", "label r68 = com univocity parser common processor core bean conversion processor r0", "$ r5 = r68 row", "r69 = com univocity parser common processor core bean conversion processor r0", "specialinvoke r69 map field to value r1 $ r5 r37 r2 0", "label goto label27", "label r76 = com univocity parser common processor core bean conversion processor r0", "$ r6 = r76 row", "$ z0 = specialinvoke r0 reverse conversion 1 $ r6 r37 r2", "if $ z0 == 0 goto label28", "r77 = com univocity parser common processor core bean conversion processor r0", "$ r7 = r77 row", "return $ r7", "if $ z0 == 0 goto label28", "label return null", "if r37 == null goto label02", "label if r2 == null goto label07", "i8 = 0", "i9 = lengthof r2", "i10 = 0", "label if i10 > = i9 goto label05", "i11 = r2 [ i10 ]", "$ i6 = i11 + 1", "if $ i6 < = i8 goto label04", "i8 = i11 + 1", "label i10 = i10 + 1", "goto label03", "label if i10 > = i9 goto label05", "label $ i5 = lengthof r2", "if i8 > = $ i5 goto label06", "i8 = lengthof r2", "label $ r31 = newarray java lang object [ i8 ]", "r54 = com univocity parser common processor core bean conversion processor r0", "r54 row = $ r31", "label if r2 == null goto label07", "label r51 = new java util hash set", "specialinvoke r51 < init >", "i12 = -1", "r55 = com univocity parser common processor core bean conversion processor r0", "$ r17 = r55 parse field", "r40 = $ r17 iterator", "label $ z2 = r40 have next", "if $ z2 == 0 goto label10", "$ r29 = r40 next", "r41 = com univocity parser annotation helper field map $ r29", "$ i1 = r41 get index", "$ i2 = $ i1 + 1", "if i12 > = $ i2 goto label09", "$ i4 = r41 get index", "i12 = $ i4 + 1", "label $ i3 = r41 get index", "$ r30 = java lang integer value of $ i3", "r51 add $ r30", "goto label08", "if $ z2 == 0 goto label10", "label r56 = com univocity parser common processor core bean conversion processor r0", "$ r18 = r56 parse field", "$ i0 = $ r18 size", "if i12 > = $ i0 goto label11", "r57 = com univocity parser common processor core bean conversion processor r0", "$ r28 = r57 parse field", "i12 = $ r28 size", "label $ r19 = newarray java lang object [ i12 ]", "r58 = com univocity parser common processor core bean conversion processor r0", "r58 row = $ r19", "r59 = com univocity parser common processor core bean conversion processor r0", "$ r20 = r59 synthetic header", "if $ r20 ! = null goto label17", "$ r21 = newarray java lang string [ i12 ]", "r60 = com univocity parser common processor core bean conversion processor r0", "r60 synthetic header = $ r21", "r61 = com univocity parser common processor core bean conversion processor r0", "$ r22 = r61 parse field", "r42 = $ r22 iterator", "i13 = 0", "label if i13 > = i12 goto label17", "$ r23 = java lang integer value of i13", "$ z3 = r51 contain $ r23", "if $ z3 == 0 goto label13", "goto label16", "label i13 = i13 + 1", "goto label12", "if $ z3 == 0 goto label13", "label r43 = null", "label $ z4 = r42 have next", "if $ z4 == 0 goto label15", "$ r25 = r42 next", "$ r26 = com univocity parser annotation helper field map $ r25", "$ r27 = $ r26 get field name", "r43 = $ r27", "if $ r27 ! = null goto label15", "goto label14", "if $ r27 ! = null goto label15", "label r62 = com univocity parser common processor core bean conversion processor r0", "$ r24 = r62 synthetic header", "$ r24 [ i13 ] = r43"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [110], [111], [112], [113], [114], [115], [116], [117], [118], [119], [120], [121], [122], [], [124], [], [126], [127], [128], [129], [130], [131], [132], [133], [134], [], [136], [137], [138], []]}
{"nodes": ["r0 = @ this", "r2 = com univocity parser common routine abstract routine r0", "specialinvoke r2 validate writer setting", "r3 = com univocity parser common routine abstract routine r0", "$ r1 = r3 writer setting", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "$ r5 = com univocity parser common argument utils new writer r3", "r6 = com univocity parser common routine abstract routine r0", "r6 write all r1 r2 $ r5 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = com univocity parser common argument utils new reader r2 r3", "r6 = com univocity parser common routine abstract routine r0", "$ r5 = r6 iterate r1 $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = com univocity parser common routine input dimension r0", "$ i0 = r1 column", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com univocity parser common text parse exception r0", "$ l0 = r1 char index", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java lang float value of r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r4 = com univocity parser conversion null conversion r0", "$ r3 = r4 value on null output", "return $ r3", "if r1 ! = null goto label1", "label r5 = com univocity parser conversion null conversion r0", "$ r2 = r5 undo r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com univocity parser csv csv parser setting r0", "r2 empty value = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = com univocity parser csv csv parser setting r0", "i0 = r7 get max char per column", "if i0 == -1 goto label1", "r5 = new com univocity parser common input default char appender", "r8 = com univocity parser csv csv parser setting r0", "$ r4 = r8 empty value", "r9 = com univocity parser csv csv parser setting r0", "$ i2 = r9 get whitespace range start", "specialinvoke r5 < init > i0 $ r4 $ i2", "r10 = com univocity parser common input char appender r5", "return r10", "if i0 == -1 goto label1", "label r6 = new com univocity parser common input expand char appender", "r11 = com univocity parser csv csv parser setting r0", "$ r2 = r11 empty value", "r12 = com univocity parser csv csv parser setting r0", "$ i1 = r12 get whitespace range start", "specialinvoke r6 < init > $ r2 $ i1", "r13 = com univocity parser common input char appender r6", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r5 = com univocity parser csv csv parser setting r0", "$ z0 = r5 parse unescaped quote until delimiter", "if $ z0 == 0 goto label1", "r6 = com univocity parser csv csv parser setting r0", "$ z1 = r6 be parse unescaped quote", "if $ z1 ! = 0 goto label2", "label r7 = com univocity parser csv csv parser setting r0", "$ r2 = r7 unescaped quote handle", "$ r1 = com univocity parser csv unescaped quote handle stop_at_delimiter", "if $ r2 == $ r1 goto label2", "r8 = com univocity parser csv csv parser setting r0", "$ r4 = r8 unescaped quote handle", "$ r3 = com univocity parser csv unescaped quote handle skip_value", "if $ r4 ! = $ r3 goto label3", "label $ z2 = 1", "goto label4", "label return $ z2", "if $ r4 ! = $ r3 goto label3", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = com univocity parser csv csv writer setting r0", "$ r1 = r2 create default format", "r3 = com univocity parser common format $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com univocity parser csv csv writer setting r0", "$ r1 = r2 quotation trigger", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = com univocity parser fix fix width field r0", "$ r1 = r3 field pad", "$ r2 = com univocity parser common argument utils to char array $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r1 = com univocity parser fix fix width format r0", "$ c1 = r1 pad", "if $ c1 ! = c0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ c1 ! = c0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com univocity parser fix fix width parser setting r0", "r1 record end on newline = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = new com univocity parser common input default char appender", "r4 = com univocity parser fix fix width parser setting r0", "$ i0 = r4 get max char per column", "r5 = com univocity parser fix fix width parser setting r0", "$ r2 = r5 get null value", "r6 = com univocity parser fix fix width parser setting r0", "$ i1 = r6 get whitespace range start", "specialinvoke r3 < init > $ i0 $ r2 $ i1", "r7 = com univocity parser common input char appender r3", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r1 = com univocity parser tsv tsv format r0", "r1 escape char = c0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r1 = com univocity parser tsv tsv format r0", "r1 escape tab char = c0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` element be null\\ ``", "$ r2 = io vavr collection iterator of all r0", "r4 = java lang iterable $ r2", "$ r3 = io vavr collection array of all r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` element be null\\ ``", "$ r2 = bit set $ lambda_of all_953fd58f_1__5 bootstrap $", "$ r3 = bit set $ lambda_of all_953fd58f_2__12 bootstrap $", "$ r4 = io vavr collection bit set with relation $ r2 $ r3", "$ r5 = io vavr collection iterator of all r0", "r7 = java lang iterable $ r5", "$ r6 = $ r4 of all r7", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` element be null\\ ``", "$ r2 = bit set $ lambda_of all_953fd58f_1__5 bootstrap $", "$ r3 = bit set $ lambda_of all_953fd58f_2__10 bootstrap $", "$ r4 = io vavr collection bit set with relation $ r2 $ r3", "$ r5 = io vavr collection iterator of all r0", "r7 = java lang iterable $ r5", "$ r6 = $ r4 of all r7", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io vavr collection char seq r0", "$ r2 = r3 split r1 0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` element be null\\ ``", "$ r2 = io vavr collection iterator of all r0", "r4 = java lang iterable $ r2", "$ r3 = io vavr collection hash set of all r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = io vavr collection comparators natural comparator", "$ r2 = io vavr collection priority queue of all $ r1 r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` element be null\\ ``", "$ r2 = io vavr collection iterator of all r0", "r4 = java lang iterable $ r2", "$ r3 = io vavr collection tree set of all r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` element be null\\ ``", "$ r2 = io vavr collection bit map trie of all r0", "$ r3 = io vavr collection vector of all $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven wagon repository repository permission r0", "$ r1 = r2 directory mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jetty websocket api web socket policy r0", "$ i0 = r1 max text message size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = org jboss weld annotate enhanced jlr abstract enhance annotated member r0", "$ r1 = r10 to string", "if $ r1 == null goto label1", "r11 = org jboss weld annotate enhanced jlr abstract enhance annotated member r0", "$ r8 = r11 to string", "return $ r8", "if $ r1 == null goto label1", "label r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r3 = r9 append \\ `` abstract annotated member \\ ``", "r12 = org jboss weld annotate enhanced jlr abstract enhance annotated member r0", "$ r4 = r12 get name", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 to string", "r13 = org jboss weld annotate enhanced jlr abstract enhance annotated member r0", "r13 to string = $ r6", "r14 = org jboss weld annotate enhanced jlr abstract enhance annotated member r0", "$ r7 = r14 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss weld annotate enhanced jlr enhance annotated type impl r0", "$ r1 = r2 get java class", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss weld annotate enhanced jlr enhance annotated type impl r0", "$ r1 = r2 superclass", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = org jboss weld bean abstract bean r0", "r11 pre initialize", "$ r2 = org jboss weld log bean logger log", "r12 = org jboss weld bean abstract bean r0", "$ r3 = r12 get type", "$ r2 create bean $ r3", "r13 = org jboss weld bean abstract bean r0", "$ r4 = r13 get scope", "if $ r4 == null goto label1", "r14 = org jboss weld bean abstract bean r0", "$ z0 = r14 be normal scoped", "r15 = org jboss weld bean abstract bean r0", "r15 proxy require = $ z0", "goto label2", "label $ r5 = org jboss weld log bean logger log", "r17 = org jboss weld bean abstract bean r0", "$ r6 = r17 get qualifier", "$ r5 qualifier use $ r6 r0", "$ r7 = org jboss weld log bean logger log", "r18 = org jboss weld bean abstract bean r0", "$ r8 = r18 get name", "$ r7 use name $ r8 r0", "$ r9 = org jboss weld log bean logger log", "r19 = org jboss weld bean abstract bean r0", "$ r10 = r19 get scope", "$ r9 use scope $ r10 r0", "return", "if $ r4 == null goto label1", "label r16 = org jboss weld bean abstract bean r0", "r16 proxy require = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss weld bean abstract bean r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = newarray java lang string [ 1 ]", "$ r4 [ 0 ] = \\ `` ljava lang object \\ ``", "r2 = r1 add method 1 \\ `` equals\\", "r3 = r2 get code attribute", "r3 aload 1", "$ r5 = r1 get name", "r3 instanceof instruction $ r5", "r3 return instruction", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["$ r1 = org jboss weld bean proxy interception decoration context interception context", "$ r2 = $ r1 get", "r0 = org jboss weld bean proxy interception decoration context $ stack $ r2", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r3 = r0 peek", "return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["$ r0 = org jboss weld bean proxy interception decoration context interception context", "$ r1 = $ r0 get", "r5 = org jboss weld bean proxy interception decoration context $ stack $ r1", "if r5 ! = null goto label1", "$ r2 = new org jboss weld bean proxy interception decoration context $ stack", "$ r3 = org jboss weld bean proxy interception decoration context interception context", "specialinvoke $ r2 < init > $ r3 null", "r5 = $ r2", "$ r4 = org jboss weld bean proxy interception decoration context interception context", "$ r4 set $ r2", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r20 = org jboss weld bootstrap bean deployment r0", "$ r3 = r20 bean manager", "$ r4 = $ r3 get service", "$ r5 = $ r4 get class \\ `` lorg jboss weld bootstrap enablement global enablement builder \\ ``", "r1 = org jboss weld bootstrap enablement global enablement builder $ r5", "r21 = org jboss weld bootstrap bean deployment r0", "r2 = r1 create module enablement r21", "r22 = org jboss weld bootstrap bean deployment r0", "$ r6 = r22 bean manager", "$ r6 set enable r2", "$ r7 = org jboss weld log bootstrap logger log", "$ z0 = $ r7 be debug enabled", "if $ z0 == 0 goto label1", "$ r8 = org jboss weld log bootstrap logger log", "r23 = org jboss weld bootstrap bean deployment r0", "$ r9 = r23 bean manager", "$ r10 = r2 get all alternative", "$ r11 = org jboss weld util collection weld collection to multi row string $ r10", "$ r8 enable alternative $ r9 $ r11", "$ r12 = org jboss weld log bootstrap logger log", "r24 = org jboss weld bootstrap bean deployment r0", "$ r13 = r24 bean manager", "$ r14 = r2 get decorator", "$ r15 = org jboss weld util collection weld collection to multi row string $ r14", "$ r12 enable decorator $ r13 $ r15", "$ r16 = org jboss weld log bootstrap logger log", "r25 = org jboss weld bootstrap bean deployment r0", "$ r17 = r25 bean manager", "$ r18 = r2 get interceptor", "$ r19 = org jboss weld util collection weld collection to multi row string $ r18", "$ r16 enable interceptor $ r17 $ r19", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss weld context beanstore attribute bean store r0", "$ z0 = r2 attach", "if $ z0 == 0 goto label1", "r3 = org jboss weld context beanstore attribute bean store r0", "r3 attach = 0", "$ r1 = org jboss weld log context logger log", "$ r1 bean store detach r0", "return 1", "if $ z0 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r14 = org jboss weld injection constructor injection point r0", "$ r7 = r14 get injection point", "$ z0 = $ r7 be empty", "if $ z0 == 0 goto label1", "$ r13 = org jboss weld util collection arrays2 empty_array", "return $ r13", "if $ z0 == 0 goto label1", "label r15 = org jboss weld injection constructor injection point r0", "$ r8 = r15 get parameter injection point", "$ i0 = $ r8 size", "r4 = newarray java lang object [ $ i0 ]", "r16 = org jboss weld injection constructor injection point r0", "r5 = r16 get parameter injection point", "i2 = 0", "label $ i1 = lengthof r4", "if i2 > = $ i1 goto label5", "$ r9 = r5 get i2", "r6 = org jboss weld injection parameter injection point $ r9", "r17 = org jboss weld injection constructor injection point r0", "$ z1 = r17 have transient reference parameter", "if $ z1 == 0 goto label3", "$ r11 = r6 get annotate", "$ z2 = $ r11 be annotation present class \\ `` ljavax enterprise inject transient reference \\ ``", "if $ z2 == 0 goto label3", "$ r12 = r6 get value to inject r1 r3", "r4 [ i2 ] = $ r12", "goto label4", "label i2 = i2 + 1", "goto label2", "if $ z2 == 0 goto label3", "label $ r10 = r6 get value to inject r1 r2", "r4 [ i2 ] = $ r10", "if i2 > = $ i1 goto label5", "label return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ i1 = lengthof r2", "if $ i1 ! = 0 goto label1", "$ r9 = org jboss weld log bean manager logger log", "$ r10 = $ r9 interceptor binding empty", "r13 = java lang throwable $ r10", "throw r13", "if $ i1 ! = 0 goto label1", "label i0 = lengthof r2", "i2 = 0", "label if i2 > = i0 goto label4", "r3 = r2 [ i2 ]", "$ r6 = r3 annotation type", "r14 = org jboss weld manager bean manager impl r0", "$ z0 = r14 be interceptor bind $ r6", "if $ z0 ! = 0 goto label3", "$ r7 = org jboss weld log bean manager logger log", "$ r8 = $ r7 not interceptor bind type r3", "r15 = java lang throwable $ r8", "throw r15", "if $ z0 ! = 0 goto label3", "label i2 = i2 + 1", "goto label2", "label if i2 > = i0 goto label4", "label $ r4 = java util array a list r2", "r16 = org jboss weld manager bean manager impl r0", "r12 = org jboss weld util interceptor flatten interceptor binding null r16 $ r4 1 1", "r17 = org jboss weld manager bean manager impl r0", "$ r5 = r17 resolve interceptor r1 r12", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss weld manager bean manager impl r0", "$ r1 = r2 accessible lenient observer notifier", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org jboss weld metadata cache scope model r0", "$ z0 = r1 normal", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r16 = org jboss weld metadata cache scope model r0", "$ z0 = r16 be valid", "if $ z0 == 0 goto label1", "$ r12 = \\ `` valid \\ ``", "goto label2", "label r1 = $ r12", "r17 = org jboss weld metadata cache scope model r0", "$ z1 = r17 be normal", "if $ z1 == 0 goto label3", "$ r13 = \\ `` normal \\ ``", "goto label4", "label r2 = $ r13", "r18 = org jboss weld metadata cache scope model r0", "$ z2 = r18 be passivating", "if $ z2 == 0 goto label5", "$ r14 = \\ `` passivating \\ ``", "goto label6", "label r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r5 = r15 append r1", "$ r6 = $ r5 append r2", "$ r7 = $ r6 append $ r14", "$ r8 = $ r7 append \\ `` scope model for \\ ``", "r19 = org jboss weld metadata cache scope model r0", "$ r9 = r19 get raw type", "$ r10 = $ r8 append $ r9", "$ r11 = $ r10 to string", "return $ r11", "if $ z2 == 0 goto label5", "label $ r14 = \\ `` pon-passivating \\ ``", "if $ z1 == 0 goto label3", "label $ r13 = \\ `` non-normal \\ ``", "if $ z0 == 0 goto label1", "label $ r12 = \\ `` invalid\\ ``"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org jboss weld log bean manager logger log", "$ r4 = $ r3 ambiguous bean manager r1", "r5 = java lang throwable $ r4", "throw r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "return 0", "if r0 ! = null goto label1", "label $ r2 = r1 get service", "$ r3 = $ r2 get class \\ `` lorg jboss weld metadata cache meta annotation store \\ ``", "$ r4 = org jboss weld metadata cache meta annotation store $ r3", "$ r5 = r0 get scope", "$ r6 = $ r4 get scope model $ r5", "$ z0 = $ r6 be passivating", "return $ z0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 be empty", "if $ z0 == 0 goto label1", "return r0", "if $ z0 == 0 goto label1", "label r2 = r0 iterator", "label $ z2 = r2 have next", "if $ z2 == 0 goto label3", "$ r3 = r2 next", "$ r4 = javax enterprise inject spi bean $ r3", "$ r5 = r1 get enable", "$ z1 = org jboss weld util bean be bean enabled $ r4 $ r5", "if $ z1 ! = 0 goto label2", "r2 remove", "goto label2", "if $ z2 == 0 goto label3", "label return r0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "label $ r3 = r1 invoke r0 r2", "$ r4 = org jboss weld util reflection reflection cast $ r3", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r12 = org jboss weld environment deployment weld deployment r0", "$ r6 = r12 bean deployment archive", "r1 = $ r6 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label5", "$ r7 = r1 next", "r2 = org jboss weld environment deployment weld bean deployment archive $ r7", "r11 = new java util hash set", "specialinvoke r11 < init >", "r13 = org jboss weld environment deployment weld deployment r0", "$ r9 = r13 bean deployment archive", "r4 = $ r9 iterator", "label $ z3 = r4 have next", "if $ z3 == 0 goto label4", "$ r10 = r4 next", "r5 = org jboss weld environment deployment weld bean deployment archive $ r10", "$ z1 = r5 equal r2", "if $ z1 == 0 goto label3", "goto label2", "if $ z1 == 0 goto label3", "label r11 add r5", "if $ z3 == 0 goto label4", "label r2 set accessible bean deployment archive r11", "goto label1", "if $ z0 == 0 goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss weld environment se start main r0", "$ r1 = r2 weld", "$ r1 shutdown", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = @ parameter1", "r5 = org jboss weld environment se weld r0", "$ r3 = r5 package", "r4 = new org jboss weld environment se weld $ pack info", "specialinvoke r4 < init > r1 z0", "$ r3 add r4", "r6 = org jboss weld environment se weld r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org jboss weld environment se weld r0", "$ r2 = r4 enable decorator", "r5 = org jboss weld environment se weld r0", "$ r3 = specialinvoke r5 synthetic metadata r1", "$ r2 add $ r3", "r6 = org jboss weld environment se weld r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org jboss weld environment se weld r0", "$ r2 = r4 select alternative stereotype", "r5 = org jboss weld environment se weld r0", "$ r3 = specialinvoke r5 synthetic metadata r1", "$ r2 add $ r3", "r6 = org jboss weld environment se weld r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss weld environment se weld r0", "$ r1 = r2 disable discovery", "r3 = javax enterprise inject se se container initializer $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = java lang boolean value of 0", "r3 = org jboss weld environment se weld r0", "$ r2 = r3 property \\ `` org jboss weld se shutdown hook\\", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss weld environment se weld container r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return", "if r1 ! = null goto label1", "label r2 = r1 split \\ `` \\ ``", "r15 = org apache zookeeper common path trie r0", "r10 = r15 root node", "$ i0 = lengthof r2", "if $ i0 > 1 goto label2", "r13 = new java lang illegal argument exception", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r7 = r12 append \\ `` invalid path \\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 to string", "specialinvoke r13 < init > $ r9", "throw r13", "if $ i0 > 1 goto label2", "label i2 = 1", "label $ i1 = lengthof r2", "if i2 > = $ i1 goto label5", "r11 = r2 [ i2 ]", "$ r3 = r10 get child r11", "if $ r3 ! = null goto label4", "r14 = new org apache zookeeper common path trie $ trie node", "specialinvoke r14 < init > r10 null", "r10 add child r11 r14", "label r10 = r10 get child r11", "i2 = i2 + 1", "goto label3", "if i2 > = $ i1 goto label5", "label r10 set property 1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "r3 = new org apache zookeeper op $ set data", "specialinvoke r3 < init > r0 r1 i0 null", "r4 = org apache zookeeper op r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = java lang system get property \\ `` zookeeper security auth_to_local\\", "$ r1 = org apache zookeeper server auth kerberos name parse rule r0", "org apache zookeeper server auth kerberos name rule = $ r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache zookeeper server data node r0", "r2 child = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache zookeeper server server cnxn factory close conn", "r2 = org apache zookeeper server n i o server cnxn r0", "r2 send buffer $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache zookeeper server quorum ack request processor r0", "$ r3 = r6 leader", "r2 = $ r3 self", "if r2 == null goto label1", "r7 = org apache zookeeper server quorum ack request processor r0", "$ r5 = r7 leader", "$ l0 = r2 get id", "$ l1 = r1 zxid", "$ r5 process ack $ l0 $ l1 null", "goto label2", "label return", "if r2 == null goto label1", "label $ r4 = org apache zookeeper server quorum ack request processor log", "$ r4 error \\ `` null quorum peer\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 size", "r2 = org apache zookeeper server quorum flexible quorum maj r0", "$ i1 = r2 half", "if $ i0 < = $ i1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 < = $ i1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r27 = org apache zookeeper server quorum follower zoo keeper server r0", "$ r2 = r27 pending txns", "$ i2 = $ r2 size", "if $ i2 ! = 0 goto label1", "$ r19 = org apache zookeeper server quorum follower zoo keeper server log", "r25 = new java lang string builder", "specialinvoke r25 < init >", "$ r20 = r25 append \\ `` commit \\ ``", "$ r21 = java lang long to hex string l0", "$ r22 = $ r20 append $ r21", "$ r23 = $ r22 append \\ `` without see txn\\ ``", "$ r24 = $ r23 to string", "$ r19 warn $ r24", "return", "if $ i2 ! = 0 goto label1", "label r28 = org apache zookeeper server quorum follower zoo keeper server r0", "$ r3 = r28 pending txns", "$ r4 = $ r3 element", "$ r5 = org apache zookeeper server request $ r4", "l1 = $ r5 zxid", "$ b3 = l1 cmp l0", "if $ b3 == 0 goto label2", "$ r10 = org apache zookeeper server quorum follower zoo keeper server log", "r26 = new java lang string builder", "specialinvoke r26 < init >", "$ r11 = r26 append \\ `` commit zxid 0x\\ ``", "$ r12 = java lang long to hex string l0", "$ r13 = $ r11 append $ r12", "$ r14 = $ r13 append \\ `` but next pending txn 0x\\ ``", "$ r15 = java lang long to hex string l1", "$ r16 = $ r14 append $ r15", "$ r17 = $ r16 to string", "$ r10 error $ r17", "java lang system exit 12", "label r29 = org apache zookeeper server quorum follower zoo keeper server r0", "$ r6 = r29 pending txns", "$ r7 = $ r6 remove", "r1 = org apache zookeeper server request $ r7", "r30 = org apache zookeeper server quorum follower zoo keeper server r0", "$ r8 = r30 commit processor", "$ r8 commit r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "if $ i0 == 1 goto label1", "$ r3 = java lang system err", "$ r3 println \\ `` usage snapshot formatter snapshot_file\\ ``", "java lang system exit 2", "label $ r1 = new org apache zookeeper server snapshot formatter", "specialinvoke $ r1 < init >", "$ r2 = r0 [ 0 ]", "$ r1 run $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = org apache zookeeper server z k database r0", "$ r4 = r6 data tree", "$ r5 = $ r4 get data r1 r2 r3", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache zookeeper server z k database r0", "$ r3 = r5 data tree", "$ r4 = $ r3 get a c l r1 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = org apache zookeeper server z k database r0", "$ r4 = r6 data tree", "$ r5 = $ r4 get child r1 r2 r3", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache zookeeper server z k database r0", "r4 clear", "r5 = org apache zookeeper server z k database r0", "$ r2 = r5 get data tree", "r6 = org apache zookeeper server z k database r0", "$ r3 = r6 get session with time out", "org apache zookeeper server util serialize utils deserialize snapshot $ r2 r1 $ r3", "r7 = org apache zookeeper server z k database r0", "r7 initialize = 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache zookeeper server z k database r0", "$ r1 = r2 snap log", "$ r1 commit", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache zookeeper server zoo keeper server r0", "$ r1 = r2 zk db", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache zookeeper server zoo keeper server r0", "$ i0 = r1 get in process", "$ l1 = long $ i0", "return $ l1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = new org apache zookeeper proto watcher event", "r6 = org apache zookeeper watch event r0", "$ r2 = r6 event type", "$ i0 = $ r2 get int value", "r7 = org apache zookeeper watch event r0", "$ r3 = r7 keeper state", "$ i1 = $ r3 get int value", "r8 = org apache zookeeper watch event r0", "$ r4 = r8 path", "specialinvoke r5 < init > $ i0 $ i1 $ r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = org apache zookeeper zoo keeper r0", "$ r1 = r3 cnxn", "$ r2 = $ r1 get session passwd", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org apache zookeeper zoo keeper r0", "$ r1 = r5 cnxn", "$ r2 = $ r1 send thread", "$ r3 = $ r2 get client cnxn socket", "$ r4 = $ r3 get remote socket address", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org zeroturnaround exec process executor r0", "$ r1 = r3 builder", "$ r2 = $ r1 directory", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
